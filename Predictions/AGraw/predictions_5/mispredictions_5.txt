
************
tgt: org . junit . assert . assertarrayequals ( new java . lang . object [ ] { "css1" , "cssandjs1" , "js1" } , categories )
[0]: org. junit. assert. assertequals ( 0, categories. length )
[1]: org. junit. assert. assertequals ( 1, categories. length )
[2]: org. junit. assert. assertequals ( 2, categories. length )
[3]: org. junit. assert. assertequals ( 4, categories. length )
[4]: , categories )

************

************
tgt: org . junit . assert . assertequals ( 0 , users . size ( ) )
[0]: org. junit. assert. assertequals ( 1, this. testee. getmutationcoverage ( ) )
[1]: org. junit. assert. assertequals ( 0, this. testee. getmutationcoverage ( ) )
[2]: org. junit. assert. assertequals ( null, this. testee. getmutationcoverage ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 100 ), this. tests. getmutationcoverage ( ) )
[4]: )

************

************
tgt: org . junit . assert . assertnotnull ( log . getcreator ( ) )
[0]: org. junit. assert. assertnotnull ( ex )
[1]: org. junit. assert. assertnotnull ( ex. getmessage ( ) )
[2]: org. junit. assert. assertequals ( exception, ex. getmessage ( ) )
[3]: org. junit. assert. assertequals ( exception, ex )
[4]: org. junit. assert. assertequals ( exception, ex. getclass ( ) )

************

************
tgt: org . junit . assert . assertequals ( 100 , this . testee . getmutationcoverage ( ) )
[0]: org. junit. assert. assertthat ( shapes. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertthat ( shapes. size ( ), org. hamcrest. corematchers. is ( 0 ) )
[2]: org. junit. assert. assertthat ( shapes. size ( ), org. hamcrest. corematchers. is ( 3 ) )
[3]: org. junit. assert. assertnotnull ( bguid )
[4]: org. junit. assert. assertequals ( guid, bguid )

************

************
tgt: org . junit . assert . asserttrue ( ( ex instanceof org . apache . kerby . kerberos . kerb . krbexception ) )
[0]: org. junit. assert. assertequals ( id, bguid )
[1]: org. junit. assert. assertnull ( bguid )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( doc. getimages ( ) )
[4]: org. junit. assert. assertequals ( 1, doc. getimages ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , classundertest . successstatusis200 ( ) )
[0]: org. junit. assert. assertequals ( 0, doc. getimages ( ). size ( ) )
[1]: org. junit. assert. assertequals ( "", t1. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), t1. tostring ( ) )
[3]: org. junit. assert. assertequals ( null, t1. tostring ( ) )
[4]: org. junit. assert. assertequals ( "", t1. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , dao . create ( foo ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( result [ 0 ]. equals ( id ) )
[2]: org. junit. assert. asserttrue ( result [ 0 ]. equals ( ids ) )
[3]: org. junit. assert. asserttrue ( result [ 0 ]. equals ( expected ) )
[4]: org. junit. assert. assertequals ( 0, result. length )

************

************
tgt: org . junit . assert . assertthat ( shapes . size ( ) , org . hamcrest . corematchers . is ( 2 ) )
[0]: org. junit. assert. asserttrue ( result. isempty ( ) )
[1]: org. junit. assert. assertnull ( err )
[2]: org. junit. assert. assertnull ( err, err )
[3]: org. junit. assert. assertequals ( msg, err )
[4]: org. junit. assert. assertequals ( msg, err, err )

************

************
tgt: org . junit . assert . assertequals ( bguid , guid )
[0]: org. junit. assert. assertequals ( msg, outshapehw )
[1]: org. junit. assert. assertnotnull ( remainingamount )
[2]: org. junit. assert. assertthat ( remainingamount )
[3]: org. junit. assert. assertequals ( dateofdeposit )
[4]: org. junit. assert. assertthat ( remainingamount, org )

************

************
tgt: org . junit . assert . assertnull ( userservicelink )
[0]: ) )
[1]: org. junit. assert. assertequals ( expectedvalue, instance. getlabelid ( label ) )
[2]: org. junit. assert. assertequals ( expectedvalue, instance. getlabelid ( label. tostring ( ) ) )
[3]: org. junit. assert. assertequals ( expectedvalue, instance. getlabelid ( label ). tostring ( ) )
[4]: org. junit. assert. assertequals ( expectedvalue, instance. getlabelid ( label ). size ( ) )

************

************
tgt: org . junit . assert . assertnull ( doc . getimages ( ) )
[0]: org. junit. assert. assertequals ( expectedvalue, instance. getlabelid ( label. getid ( ) ) )
[1]: org. junit. assert. assertequals ( true, hasworkitems )
[2]: org. junit. assert. assertfalse ( hasworkitems )
[3]: org. junit. assert. assertequals ( false, hasworkitems )
[4]: org. junit. assert. assertequals ( 1, result. length ( ) )

************

************
tgt: org . junit . assert . assertequals ( expecteds , actuals )
[0]: org. junit. assert. assertequals ( 0, result. length ( ) )
[1]: org. junit. assert. assertequals ( result. length ( ), 1 )
[2]: org. junit. assert. assertequals ( 3, result. length ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( events )

************

************
tgt: org . junit . assert . assertequals ( value , clone . getlocalvalue ( ) , 0.0 )
[0]: org. junit. assert. assertnotnull ( events. size ( ) )
[1]: org. junit. assert. assertnotnull ( events. get ( 1 ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnull ( returned )

************

************
tgt: org . junit . assert . assertequals ( 0 , ndbtb . getfailed ( ) . size ( ) )
[0]: org. junit. assert. assertsame ( assertions }
[1]: org. junit. assert. assertion ( returned )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 0l, changedao. getminimumchangenumber ( ) )

************

************
tgt: org . junit . assert . assertfalse ( subject . controleer ( persoon , verzoek ) )
[0]: org. junit. assert. assertequals ( 0, changedao. getminimumchangenumber ( ) )
[1]: org. junit. assert. assertequals ( 0, ( ( int ) ( changedao. getminimumchangenumber ( ) ) )
[2]: org. junit. assert. assertequals ( 0l, changedao. getminimumchangenumber ( ), 0l )
[3]: org. junit. assert. assertequals ( 0l, changedao. getminimumchangenumber ( ), 0 )
[4]: org. junit. assert. assertequals ( null, p. getxattrname ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( page )
[0]: org. junit. assert. assertnotnull ( p. getxattrname ( ) )
[1]: org. junit. assert. assertequals ( 0, p. getxattrname ( ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, 1 )

************

************
tgt: org . junit . assert . asserttrue ( new java . lang . string ( twobytecontents ) . equals ( output ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), s )
[1]: org. junit. assert. assertequals ( 0, 1 )
[2]: org. junit. assert. assertequals ( 0, s. size ( ) )
[3]: org. junit. assert. assertequals ( 0, list. size ( ) )
[4]: org. junit. assert. assertequals ( 1, pulselengthanalyzer. pulsecount ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedformat , actualformat )
[0]: org. junit. assert. assertequals ( 0, pulselengthanalyzer. pulsecount ( ) )
[1]: org. junit. assert. assertequals ( 1l, pulselengthanalyzer. pulsecount ( ) )
[2]: org. junit. assert. assertequals ( 6, pulselengthanalyzer. pulsecount ( ) )
[3]: org. junit. assert. assertequals ( 1, pulselengthanalyzer. pulsecount ( ). length )
[4]: org. junit. assert. assertthat ( c. count, org. hamcrest. corematchers. is ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( name , t1 . tostring ( ) )
[0]: org. junit. assert. assertthat ( c. count, org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertequals ( 0, c. count )
[2]: org. junit. assert. assertthat ( c. count )
[3]: org. junit. assert. assertthat ( c )
[4]: org. junit. assert. assertnotnull ( con )

************

************
tgt: org . junit . assert . asserttrue ( tquery . containsrowwithkey ( 1 ) )
[0]: org. junit. assert. assertequals ( con, con )
[1]: org. junit. assert. assertnull ( con )
[2]: org. junit. assert. assertequals ( connection, con )
[3]: org. junit. assert. assertequals ( con, connection )
[4]: org. junit. assert. assertnotnull ( testmethod. invoke ( paar ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( result . length ) == 0 ) )
[0]: org. junit. assert. assertequals ( 1, testmethod. invoke ( paar ) )
[1]: org. junit. assert. assertnull ( testmethod. invoke ( paar ) )
[2]: org. junit. assert. assertequals ( 0, testmethod. invoke ( paar ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( fixture )

************

************
tgt: org . junit . assert . assertnotnull ( experiment )
[0]: org. junit. assert. assertnotnull ( unit )
[1]: org. junit. assert. assertnotnull ( evaluator )
[2]: org. junit. assert. assertnotnull ( tree )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( org. xm. similarity. util. mathutil. min ( 1, 1, 3 ) )

************

************
tgt: org . junit . assert . assertequals ( msg , expepsnext , epsnext )
[0]: org. junit. assert. assertnotnull ( org. xm. similarity. util. mathutil. min ( 1, 1 ) )
[1]: org. junit. assert. assertequals ( org. xm. similarity. util. mathutil. min ( 1, 1, 3 ), 12 )
[2]: org. junit. assert. assertnotnull ( org. xm. similarity. util. mathutil. min ( 1, 1, 3, 3 ) )
[3]: )
[4]: org. junit. assert. assertequals ( expectedjson, generatedjson )

************

************
tgt: org . junit . assert . assertequals ( 1 , out . size ( ) )
[0]: org. junit. assert. assertequals ( expectedjson, generatedjson. trim ( ) )
[1]: org. junit. assert. assertequals ( resultjson, generatedjson )
[2]: org. junit. assert. assertequals ( actualjson, generatedjson )
[3]: org. junit. assert. assertequals ( expectedjson, generatedjson. length ( ) )
[4]: org. junit. assert. assertequals ( null, counter. gets ( ) )

************

************
tgt: org . junit . assert . assertthat ( remainingamount , org . hamcrest . corematchers . is ( fulldepositamount ) )
[0]: org. junit. assert. assertequals ( null, counter. get ( ) )
[1]: org. junit. assert. assertequals ( null, counter. getsli ( ) )
[2]: org. junit. assert. assertequals ( null, counter. getscent ( ) )
[3]: org. junit. assert. assertequals ( null, counter. getslieberg )
[4]: org. junit. assert. assertnotnull ( cofactors )

************

************
tgt: org . junit . assert . assertequals ( expectedvalue , instance . getlabelid ( "r3" ) )
[0]: org. junit. assert. asserttrue ( cofactors. isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, cofactors )
[2]: ) )
[3]: )
[4]: org. junit. assert. asserttrue ( cells. equals ( celoboxset ) )

************

************
tgt: org . junit . assert . asserttrue ( hasworkitems )
[0]: org. junit. assert. asserttrue ( cells. equals ( celset ) )
[1]: org. junit. assert. asserttrue ( cells. equals ( celquadset ) )
[2]: org. junit. assert. asserttrue ( cells. equals ( celmanagedset ) )
[3]: org. junit. assert. asserttrue ( cells. equals ( celnotebookset ) )
[4]: org. junit. assert. assertequals ( result, rendered )

************

************
tgt: org . junit . assert . asserttrue ( aredependencytypesdetected ( fromclass , toclass , typestofind , true ) )
[0]: org. junit. assert. assertnotnull ( rendered )
[1]: , rendered )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, org. teiid. query. optimizer. relational. rules. capabilitiesutil. supportsselectdistinct ( capability. query_select_distinct, sourcecaps, sourcecaps ) )

************

************
tgt: org . junit . assert . assertnull ( string )
[0]: org. junit. assert. assertequals ( 1, org. teiid. query. optimizer. relational. rules. capabilitiesutil. supportsselectdistinct ( capability. query_select_distinct, sourcecaps, null ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, org. teiid. query. optimizer. relational. rules. capabilitiesutil. supportsselectdistinct ( capability. query_select_distinct, sourcecaps, data ). size ( ) )
[2]: org. junit. assert. assertequals ( true, org. teiid. query. optimizer. relational. rules. capabilitiesutil. supportsselectdistinct ( capability. query_select_distinct, sourcecaps, sourcecaps ) )
[3]: org. junit. assert. assertequals ( 1, org. teiid. query. optimizer. relational. rules. capabilitiesutil. supportsselectdistinct ( capability. query_select_distinct, sourcecaps, sourcecaps ). size ( )
[4]: org. junit. assert. assertequals ( 6, target. getmergefeature ( isnull ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( result . length ( ) ) < ( javacontent . length ( ) ) ) )
[0]: org. junit. assert. assertequals ( target. getmergefeature ( isnull ), isnull )
[1]: org. junit. assert. assertequals ( 6, target. getmergefeature ( isnull ) )
[2]: org. junit. assert. assertequals ( 6, target. getmergefeature ( isnull ). getid ( ) )
[3]: org. junit. assert. assertequals ( 6, target. getmergefeature ( isnull ). length )
[4]: org. junit. assert. assertequals ( 1, expression. evaluate ( document ) )

************

************
tgt: org . junit . assert . assertnotnull ( logmanager )
[0]: org. junit. assert. assertnotnull ( expression. evaluate ( document ) )
[1]: org. junit. assert. assertequals ( 0, expression. evaluate ( document ) )
[2]: org. junit. assert. assertequals ( 0, expression. evaluate ( document ). length )
[3]: org. junit. assert. assertequals ( 1, expression. evaluate ( document ). length )
[4]: org. junit. assert. assertnotnull ( principal )

************

************
tgt: org . junit . assert . asserttrue ( ( ( events . size ( ) ) == 5 ) )
[0]: org. junit. assert. asserttrue ( cache. exists ( ) )
[1]: org. junit. assert. asserttrue ( cachedir. exists ( ) )
[2]: org. junit. assert. assertfalse ( cachedir. exists ( ) )
[3]: org. junit. assert. asserttrue ( cache. delete ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( givencodes , decodedcodes )
[0]: org. junit. assert. assertequals ( s3. getkind ( ), filesystemkind. object_store )
[1]: org. junit. assert. assertequals ( s3. getkind ( ), s3. getkind ( ) )
[2]: org. junit. assert. assertequals ( s3. getkind ( ), filesystemkind. objects_store )
[3]: org. junit. assert. assertequals ( s3. getkind ( ), statements )
[4]: org. junit. assert. assertequals ( s3,

************

************
tgt: org . junit . assert . assertsame ( assertions , returned )
[0]: org. junit. assert. assertsame ( io. grpc. inprocess. timer_service, clienttransportfactory. getscheduledexecutorservice ( ) )
[1]: org. junit. assert. assertnull ( clienttransportfactory. get ( io. grpc. inprocess. timer_service ) )
[2]: org. junit. assert. assertsame ( io. grpc. internal. sharedresourceholder. get ( io. grpc. inprocess. timer_service ), clienttransportfactory )
[3]: org. junit. assert. assertequals ( io. grpc. internal. sharedresourceholder. get ( io. grpc. inprocess. timer_service ), clienttransportfactory )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0l , mcn )
[0]: org. junit. assert. assertequals ( template, cache. get ( ) )
[1]: org. junit. assert. assertnotnull ( cache. get ( ) )
[2]: org. junit. assert. assertnull ( cache. get ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( 0 , checksum )
[0]: org. junit. assert. assertnull ( future )
[1]: org. junit. assert. assertfalse ( future. iscancelled ( ) )
[2]: org. junit. assert. assertsame ( object, future )
[3]: org. junit. assert. assertsame ( null, future )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( access . isvalidtoexecute ( null ) )
[0]: org. junit. assert. assertequals ( 1, descriptivestatistics. getn ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, descriptivestatistics. getn ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), descriptivestatistics. getn ( ) )
[3]: org. junit. assert. assertequals ( null, descriptivestatistics. getn ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1.2 ), descriptivestatistics )

************

************
tgt: org . junit . assert . assertequals ( p . getxattrname ( ) , "user.a1" )
[0]: org. junit. assert. assertnull ( output )
[1]: org. junit. assert. assertequals ( null, output )
[2]: org. junit. assert. assertnotnull ( output )
[3]: org. junit. assert. assertequals ( ""test"", output )
[4]: org. junit. assert. assertequals ( ""a"", output )

************

************
tgt: org . junit . assert . assertnotnull ( results )
[0]: org. junit. assert. assertnotnull ( hash )
[1]: org. junit. assert. assertnotnull ( hashcode )
[2]: org. junit. assert. assertnotnull ( hashtable )
[3]: org. junit. assert. assertnotnull ( hash, input )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( true )
[0]: org. junit. assert. assertarrayequals ( item1. getselection ( ), tree. getselection ( ) )
[1]: org. junit. assert. assertarrayequals ( new java. lang. object [ ] { item1, item2 }, tree. getselection ( ) )
[2]: org. junit. assert. assertarrayequals ( item2. getselection ( ), tree. getselection ( ) )
[3]: org. junit. assert. assertarrayequals ( items1. getselection ( ), tree. getselection ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( pulselengthanalyzer . pulsecount ( ) , org . hamcrest . core . is . is ( 2 ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertarrayequals ( data. toarray ( ), webpage. getdata ( ). toarray ( ) )
[2]: org. junit. assert. assertequals ( data, webpage. getdata ( ) )
[3]: org. junit. assert. assertequals ( sb. tostring ( ), tagout )
[4]: org. junit. assert. assertequals ( sb. tostring ( ), tagout )

************

************
tgt: org . junit . assert . assertthat ( shapes . size ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( sb. tostring ( ), tagsout )
[1]: org. junit. assert. assertequals ( sb. tostring ( ), tagoutput )
[2]: org. junit. assert. assertequals ( sb, tagout )
[3]: org. junit. assert. assertnotnull ( sf )
[4]: org. junit. assert. assertnotnull ( sf. times )

************

************
tgt: org . junit . assert . assertthat ( c . count , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( 0 ) ) )
[0]: org. junit. assert. assertnotnull ( sf. result )
[1]: org. junit. assert. assertnotnull ( sf. s )
[2]: org. junit. assert. assertnotnull ( sf. run )
[3]: org. junit. assert. assertequals ( resource, starttime )
[4]: org. junit. assert. assertnotnull ( starttime )

************

************
tgt: org . junit . assert . assertequals ( 1000 , con . request ( ) . timeout ( ) )
[0]: org. junit. assert. assertequals ( resources, starttime )
[1]: org. junit. assert. assertequals ( first, second )
[2]: org. junit. assert. assertsame ( first, second )
[3]: org. junit. assert. assertequals ( second, first )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( ( ( boolean ) ( testmethod . invoke ( paar ) ) ) )
[0]: )
[1]: org. junit. assert. assertequals ( 0, entities. size ( ) )
[2]: org. junit. assert. assertequals ( sampleentities, entities. size ( ) )
[3]: org. junit. assert. assertequals ( sampleentities, entities )
[4]: org. junit. assert. assertequals ( sampleentities, entities. collection ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( sampleentities, entities. get ( 0 ) )
[1]: org. junit. assert. assertnull ( clusterstatsrequest )
[2]: org. junit. assert. assertsame ( statsclusterrequestexecutortest. _index_name, clusterstatsrequest )
[3]: org. junit. assert. assertsame ( statsclusterrequestexecutortest, clusterstatsrequest )
[4]: , clusterstatsrequest )

************

************
tgt: org . junit . assert . assertthat ( 1 , org . hamcrest . corematchers . equalto ( 2 ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, results. size ( ) )
[2]: org. junit. assert. assertequals ( 0, results. size ( ) )
[3]: org. junit. assert. assertequals ( 3, results. size ( ) )
[4]: org. junit. assert. assertfalse ( deletesubtaskshidden )

************

************
tgt: org . junit . assert . asserttrue ( ( ( org . xm . similarity . util . mathutil . min ( 1 , 2 , 3 ) ) < 2 ) )
[0]: org. junit. assert. assertequals ( json. tostring ( ), str )
[1]: org. junit. assert. assertequals ( counter, 1 )
[2]: org. junit. assert. assertequals ( counter, 0 )
[3]: org. junit. assert. assertequals ( counter, counter )
[4]: org. junit. assert. assertequals ( counter, count )

************

************
tgt: org . junit . assert . assertthat ( generatedjson , org . hamcrest . corematchers . is ( expectedjson ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( path, creator. recordeddirectories ( ) )
[2]: org. junit. assert. assertnotnull ( creator. recordeddirectories ( ) )
[3]: org. junit. assert. assertequals ( path, creator. recordeddirectories ( ). get ( ) )
[4]: org. junit. assert. assertequals ( path, creator. recordeddirectories ( ). tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( in , out )
[0]: ) )
[1]: org. junit. assert. assertnull ( mojo. getparsedbooleanvalue ( ) )
[2]: org. junit. assert. assertnotnull ( mojo. getparsedbooleanvalue ( ) )
[3]: org. junit. assert. assertequals ( 1, mojo. getparsedbooleanvalue ( ). length )
[4]: org. junit. assert. assertequals ( 0, mojo. getparsedbooleanvalue ( ). length )

************

************
tgt: org . junit . assert . assertequals ( expectedtags , metric . gettags ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostring ( rs ) )
[2]: org. junit. assert. assertequals ( expected, testnulls. formattedresult. tostring ( ) )
[3]: org. junit. assert. assertequals ( expected, testnulls. format ( rs ) )
[4]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory ( rs ) )

************

************
tgt: org . junit . assert . assertfalse ( projectdisabled )
[0]: ( sqltext ) )
[1]: org. junit. assert. assertnotnull ( r )
[2]: org. junit. assert. assertequals ( r, a )
[3]: org. junit. assert. assertequals ( a, r )
[4]: org. junit. assert. assertnotnull ( cookie. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , cofactors . size ( ) )
[0]: org. junit. assert. assertequals ( null, cookie. getname ( ) )
[1]: org. junit. assert. assertnull ( cookie. getname ( ) )
[2]: org. junit. assert. assertequals ( ""foo"", cookie. getname ( ) )
[3]: org. junit. assert. assertequals ( null, cookie. getname ( ). trim ( ) )
[4]: org. junit. assert. assertthat ( thesavedvalue, is ( theexistingvalue ) )

************

************
tgt: org . junit . assert . assertfalse ( g1 . equals ( g2 ) )
[0]: org. junit. assert. assertthat ( thesavedvalue, is ( aexistingvalue ) )
[1]: org. junit. assert. assertthat ( thesavedvalue, is ( this ) )
[2]: org. junit. assert. assertthat ( thesavedvalue, is ( this. name ) )
[3]: org. junit. assert. assertthat ( thesavedvalue, is (
[4]: org. junit. assert. assertequals ( 1, cache. getnumactiveinstances ( com. bazaarvoice. ostrich. pool. singlethreadedclientservicecachetest. end_point ) )

************

************
tgt: org . junit . assert . assertthat ( filter . matches ( ctconstructor ) , org . hamcrest . core . is . is ( false ) )
[0]: org. junit. assert. assertequals ( 0, cache. getnumactiveinstances ( com. bazaarvoice. ostrich. pool. singlethreadedclientservicecachetest. end_point ) )
[1]: org. junit. assert. assertequals ( 1, cache. getnumactiveinstances ( com. bazaaarvoice. ostrich. pool. singlethreadedclientservicecachetest. end_point ) )
[2]: org. junit. assert. assertequals ( 1, cache. getnumactiveinstances ( com. bambaarvoice. ostrich. pool. singlethreadedclientservicecachetest. end_point ) )
[3]: org. junit. assert. assertequals ( 1, cache. getnumactiveinstances ( null ) )
[4]: org. junit. assert. assertequals ( response, client. doaction ( request ) )

************

************
tgt: org . junit . assert . asserttrue ( cellidxset . equals ( expectedidxset ) )
[0]: org. junit. assert. asserttrue ( ( ( client. doaction ( request ) ) instanceof java. lang. illegalargumentexception ) )
[1]: org. junit. assert. asserttrue ( ( ( client. doaction ( request ) ) instanceof java. util. list ) )
[2]: org. junit. assert. assertequals ( null, client. doaction ( request ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( settings ), result )

************

************
tgt: org . junit . assert . assertequals ( dataflow , edit . getsubject ( ) )
[0]: org. junit. assert. assertequals ( null, result. getproperty ( 0 ) )
[1]: org. junit. assert. assertequals ( settings. getproperty ( ""test"" ), result )
[2]: org. junit. assert. assertnotnull ( result. getproperty ( ""key1 ) )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( settings. getproperty ( 0 ) ), result )
[4]: org. junit. assert. assertequals ( 1, sets. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedbindingstring , relativizedvolumestring )
[0]: org. junit. assert. assertequals ( 1, sets. toarray ( ). length )
[1]: org. junit. assert. assertequals ( 0, sets. size ( ) )
[2]: org. junit. assert. assertequals ( set. size ( ), 1 )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), sets )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertthat ( rendered , org . hamcrest . corematchers . is ( test [ 1 ] ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( string, result )
[2]: org. junit. assert. assertequals ( 1, result )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( amqpmessagefacade. getfooter ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. null, amqpmessagefacade. getfooter ( ) )
[1]: org. junit. assert. assertnull ( amqpmessagefacade )
[2]: null ) )
[3]: ) )
[4]: org. junit. assert. assertnull ( percentencode ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( org . teiid . query . optimizer . relational . rules . capabilitiesutil . supportsselectdistinct ( modelid , metadata , finder ) )
[0]: org. junit. assert. assertnull ( instance. percentencode ( null ) )
[1]: org. junit. assert. assertnull ( repository. percentencode ( null ) )
[2]: type ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( test. getjobconfigurationbyuid ( joba. getuid ( ) ) )

************

************
tgt: org . junit . assert . assertthat ( target . getmergefeature ( feature . getid ( ) ) , org . hamcrest . matchers . is ( isnull ) )
[0]: org. junit. assert. assertnotnull ( test )
[1]: org. junit. assert. assertequals ( 1, test. getjobconfigurationbyuid ( joba. getuid ( ) ) )
[2]: org. junit. assert. assertequals ( 1, test. getjobconfigurationbyuid ( joba. getuid ( ) ). length )
[3]: ) )
[4]: org. junit. assert. asserttrue ( ok. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . vaadin . flow . server . communication . rpc . mapsyncrpchandlertest . new_value , element . getpropertyraw ( com . vaadin . flow . server . communication . rpc . mapsyncrpchandlertest . test_property ) )
[0]: org. junit. assert. assertnotnull ( ok. get ( ) )
[1]: . get ( ) )
[2]: get ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( walrecord. getfield ( ) )

************

************
tgt: org . junit . assert . assertequals ( pos . geterrorindex ( ) , 0 )
[0]: org. junit. assert. assertequals ( jsonrecord, walrecord. getfield ( ) )
[1]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), entry. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 1, ( ( int ) ( entry. getvalue ( ) ) ) )
[3]: org. junit. assert. assertequals ( 0, ( ( int ) ( entry. getvalue ( ) ) ) )
[4]: org. junit. assert. assertnotnull ( entry. getvalue ( ) )

************

************
tgt: org . junit . assert . assertnull ( expression . evaluate ( document ) )
[0]: org. junit. assert. assertequals ( new java. lang. integer ( 0 ), entry. getvalue ( ) )
[1]: org. junit. assert. assertnull ( exceptionthrownbyseconddelete )
[2]: org. junit. assert. assertnotnull ( regex )
[3]: org. junit. assert. assertequals ( regex, regex )
[4]: org. junit. assert. assertequals ( pattern, regex )

************

************
tgt: org . junit . assert . assertnull ( principal )
[0]: org. junit. assert. assertnull ( regex )
[1]: ) )
[2]: org. junit. assert. assertequals ( org. kitteh. irc. client. library. command. awaycommandtest. message, awaycommand. tostring ( ) )
[3]: org. junit. assert. assertequals ( org. kitteh. irc. client. library. command. awaycommandtest. message. tostring ( ), awaycommand. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( org. kitteh. irc. client. library. command. awaycommandtest. message ), awaycommand. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( cache . getrootdirectory ( ) , cachedirname )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( org. kitteh. irc. client. library. command. awaycommandtest. message ), awaycommand. tostring ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( org. kitteh. irc. client. library. command. awaycommandtest. message ), awaycommand. tostring ( ) )
[2]: org. junit. assert. assertequals ( ioexception, e )
[3]: org. junit. assert. assertsame ( ioexception, e )
[4]: org. junit. assert. assertequals ( ioexception. getmessage ( ), e )

************

************
tgt: org . junit . assert . assertfalse ( isconsistent )
[0]: org. junit. assert. assertequals ( ioexception. getclass ( ), e )
[1]: , e )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( """", result )
[4]: org. junit. assert. assertequals ( 0, result )

************

************
tgt: org . junit . assert . assertnotnull ( request )
[0]: org. junit. assert. assertequals ( zero, result )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, members. length )
[3]: org. junit. assert. assertequals ( 0, members. length )
[4]: org. junit. assert. assertequals ( 2, members. length )

************

************
tgt: org . junit . assert . assertequals ( 12 , details . getuserkey ( ) )
[0]: org. junit. assert. assertnotnull ( members )
[1]: , members. length )
[2]: org. junit. assert. assertequals ( ( ( org. mule. runtime. core. api. event. coreevent ) ( reactor. core. publisher. mono. from ( eventcaptor. getvalue ( ) ). block ( ) ) ). block ( ), eventcaptor. getvalue ( ). block ( ) )
[3]: org. junit. assert. assertequals ( ( ( org. mule. runtime. core. api. event. coreevent ) ( reactor. core. publisher. mono. from ( eventcaptor. getvalue ( ) ). block ( ) ) ). getmessage ( ), identmessageevent. getmessage ( ) )
[4]: org. junit. assert. assertequals ( ( ( org. mule. runtime. core. api. event. coreevent ) ( reactor. core. publisher. mono. from ( eventcaptor. getvalue ( ) ). block ( ) ) ). getmessage ( ), resultcaptor. getvalue ( ). getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( resourceuri , ref . tostring ( ) )
[0]: org. junit. assert. assertequals ( ( ( org. mule. runtime. core. api. event. coreevent ) ( reactor. core. publisher. mono ) ). block ( ), eventcaptor. getvalue ( ). block ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( modifiedmessageevent ), reactor. core. publisher. mono. from ( eventcaptor. getvalue ( ) ). block ( ) )
[2]: org. junit. assert. assertnotnull ( principal. getaccessid ( ) )
[3]: org. junit. assert.null ( principal. getaccessid ( ) )
[4]: org. junit. assert. assertnull ( principal )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , result )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 0, itemcount )
[3]: org. junit. assert. assertequals ( 1, itemcount )
[4]: org. junit. assert. assertequals ( n. contextpath, out )

************

************
tgt: org . junit . assert . assertequals ( filesystemkind . object_store , s3 . getkind ( ) )
[0]: org. junit. assert. assertequals ( n. contextpath, out. getclass ( ) )
[1]: org. junit. assert. assertequals ( n. contextpath, out. taskinfo ( ) )
[2]: org. junit. assert. assertequals ( n, out )
[3]: org. junit. assert. assertequals ( n )
[4]: org. junit. assert. assertequals ( filesizebefore, filesizeafter )

************

************
tgt: org . junit . assert . assertsame ( io . grpc . internal . sharedresourceholder . get ( io . grpc . inprocess . timer_service ) , clienttransportfactory . getscheduledexecutorservice ( ) )
[0]: org. junit. assert. assertequals ( filesizeafter, filesizebefore )
[1]: org. junit. assert. assertequals ( filesizeafter, filesizeafter )
[2]: org. junit. assert. assertnull ( handler. formattedrecords ( ) )
[3]: org. junit. assert. assertequals ( """", handler. formattedrecords ( ) )
[4]: org. junit. assert. assertnotnull ( handler. formattedrecords ( ) )

************

************
tgt: org . junit . assert . assertequals ( template , new com . github . jknack . handlebars . cache . highconcurrencytemplatecache ( cache ) . get ( source , parser ) )
[0]: org. junit. assert. assertequals ( 0, handler. formattedrecords ( ). length )
[1]: ) )
[2]: org. junit. assert. assertthat ( resolved, org. hamcrest. corematchers. is ( initialresolverscount ) )
[3]: org. junit. assert. assertthat ( resolved, org. hamcrest. corematchers. is ( ( initialresolverscount + 1 ) ) )
[4]: org. junit. assert. assertthat ( resolved. size ( ), org. hamcrest. corematchers. is ( initialresolverscount ) )

************

************
tgt: org . junit . assert . assertnull ( m )
[0]: org. junit. assert. assertequals ( ( initialresolverscount + 1 ), resolved. size ( ) )
[1]: org. junit. assert. assertequals ( initialresolverscount, resolved. size ( ) )
[2]: org. junit. assert. assertequals ( expected, output )
[3]: org. junit. assert. assertequals ( expected, output. trim ( ) )
[4]: org. junit. assert. assertequals ( expected. trim ( ), output )

************

************
tgt: org . junit . assert . asserttrue ( future . iscancelled ( ) )
[0]: org. junit. assert. assertequals ( result, output )
[1]: org. junit. assert. assertequals ( expected, input )
[2]: org. junit. assert. assertequals ( null, value )
[3]: org. junit. assert. assertequals ( "<sp>12, writer. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( writer. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , descriptivestatistics . getn ( ) )
[0]: org. junit. assert. assertequals ( "<sp>1, writer. tostring ( ) )
[1]: org. junit. assert. assertequals ( "<sp>11, writer. tostring ( ) )
[2]: . tostring ( ) )
[3]: org. junit. assert. assertnotnull ( autheduser )
[4]: org. junit. assert. assertequals ( userid, autheduser )

************

************
tgt: org . junit . assert . assertequals ( searchcriteriabuilder , list . find ( ) )
[0]: org. junit. assert. assertequals ( user, autheduser )
[1]: org. junit. assert. assertequals ( ess, autheduser )
[2]: identifies )
[3]: org. junit. assert. assertnotnull ( process )
[4]: org. junit. assert. assertnotnull ( process. platform ( ) )

************

************
tgt: org . junit . assert . assertequals ( "canal" , output )
[0]: org. junit. assert. assertnull ( process )
[1]: org. junit. assert. assertequals ( null, process )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), extensions [ i ] )

************

************
tgt: org . junit . assert . assertequals ( 1 , stat . getatime ( ) )
[0]: org. junit. assert. assertequals ( list. get ( i ), extensions [ i ] )
[1]: org. junit. assert. assertequals ( extensions [ i ], extensions [ i ] )
[2]: org. junit. assert. assertequals ( list [ i ], extensions [ i ] )
[3]: insert the methods description here
[4]: org. junit. assert. assertarrayequals ( plaintext, hybriddecrypt. decrypt ( ciphertext, recipientprivatekey ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertarrayequals ( plaintext, hybriddecrypt. decrypt ( plaintext, recipientprivatekey ) )
[1]: org. junit. assert. assertarrayequals ( plaintext, hybriddecrypt. decrypt ( ciphertext, txkeys ) )
[2]: org. junit. assert. assertarrayequals ( plaintext, hybriddecrypt. decrypt ( ciphertext, userprivatekey ) )
[3]: org. junit. assert. assertarrayequals ( plaintext )
[4]: org. junit. assert. assertnotnull ( ex )

************

************
tgt: org . junit . assert . assertarrayequals ( new org . eclipse . swt . widgets . treeitem [ ] { item1 , item2 } , tree . getselection ( ) )
[0]: org. junit. assert. assertequals ( filesrc, ex )
[1]: org. junit. assert. assertequals ( exceptions, ex. getmessage ( ) )
[2]: org. junit. assert. assertequals ( 1, ex. getmessage ( ) )
[3]: org. junit. assert. assertequals ( exceptions, ex )
[4]: org. junit. assert. assertnotnull ( request. getvisitorregion ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( null, request. getvisitorregion ( ) )
[1]: org. junit. assert. assertnull ( request. getvisitorregion ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( 200 ), request. getvisitorregion ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, rm. getresultslist ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( workbook . getstylessource ( ) )
[0]: org. junit. assert. asserttrue ( stap. voerverwerkingsstapuitvoorbericht ( berichtcommand ) )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 0, result. size ( ) )
[3]: org. junit. assert. assertequals ( 2, result. size ( ) )
[4]: org. junit. assert. assertnotnull ( input0 )

************

************
tgt: org . junit . assert . assertequals ( 40.4 , readdouble ( file ) , 0 )
[0]: org. junit. assert. assertnotnull ( input1 )
[1]: org. junit. assert. assertnotnull ( inputs0 )
[2]: org. junit. assert. assertequals ( 1, actualbases )
[3]: org. junit. assert. assertequals ( s1, actualbases )
[4]: org. junit. assert. assertequals ( 0, actualbases )

************

************
tgt: org . junit . assert . assertsame ( data , webpage . getdata ( ) )
[0]: org. junit. assert. assertequals ( expectedbases, actualbases )
[1]: org. junit. assert. assertequals ( 2, actualbases )
[2]: org. junit. assert. asserttrue ( result )
[3]: org. junit. assert. assertequals ( org. fincatto. documentofiscal. nfe310. classes. cadastroendereco. getdescricaomunicipio ( ), retornoconsultacadastroendereco. getdescricaomunicipio ( ) )
[4]: org. junit. assert. assertequals ( org. fincatto. documentofiscal. nfe310. cour. cadastroendereco. getdescricaomunicipio ( ), retornoconsultacadastroendereco. getdescricaomunicipio ( ) )

************

************
tgt: org . junit . assert . assertequals ( "<arg3>type</arg3>\n" 2 , sb . tostring ( ) , tagout )
[0]: org. junit. assert. assertequals ( org. fincatto. documentofiscal. nfe310. classes. cadastroendereco. getdescricaomunicipio ( ), retornoconsultacadastroendereco )
[1]: org. junit. assert. assertequals ( "propertynoconsultacadastroendereco. getdescricaomunicipio ( ), retornoconsultacadastroendereco. getdescricaomunicipio ( ) )
[2]: org. junit. assert. assertequals ( org. fincatto. documentofiscal. nfe310. classes. cadastroendereco. getdescricaomunicipio ( ), org. apache. commons. lang. runtime. entity. getdescricaomunicipio ( ) )
[3]: org. junit. assert. assertnotnull ( auditinfo )
[4]: org. junit. assert. assertnotnull ( manager. getknown )

************

************
tgt: org . junit . assert . asserttrue ( sf . createsocket ( "first" , 80 ) . getkeepalive ( ) )
[0]: org. junit. assert. assertnotnull ( manager )
[1]: org. junit. assert. assertnotnull ( result )
[2]: ) )
[3]: org. junit. assert. assertequals ( bukkittask, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( success )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertsame ( bukkittask, result )
[2]: org. junit. assert. assertequals ( bukkittask, result. type )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), storageunitentity. getstoragepolicytransitionfailedattempts ( ) )
[4]: org. junit. assert. assertequals ( ( ( java. lang. integer ) ( 1 ) ), storageunitentity. getstoragepolicytransitionfailedattempts ( ) )

************

************
tgt: org . junit . assert . assertnull ( starttime )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), storageunitentity. getstoragepolicytransitionfailedattempts ( 1 ) )
[1]: org. junit. assert. assertequals ( 1, storageunitentity. getstoragepolicytransitionfailedattempts ( ) )
[2]: org. junit. assert. assertequals ( ( ( java. lang. integer ) ( 1 ) ), storageunitentity. getstoragepolicytransitionfailedattempts ( 1 ) )
[3]: org. junit. assert. assertequals ( position, logposition )
[4]: org. junit. assert. assertequals ( position3, logposition )

************

************
tgt: org . junit . assert . assertthat ( first , org . hamcrest . corematchers . equalto ( second ) )
[0]: org. junit. assert. assertequals ( range3, logposition )
[1]: org. junit. assert. assertequals ( position1, logposition )
[2]: org. junit. assert. assertequals ( position. positionrange, logposition )
[3]: org. junit. assert. assertequals ( ""foo"", built. getstring ( ) )
[4]: org. junit. assert. assertequals ( ""bar"", built. getstring ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( ""a"", built. getstring ( ) )
[1]: org. junit. assert. assertequals ( string, built. getstring ( ) )
[2]: org. junit. assert. assertequals ( ""test"", built. getstring ( ) )
[3]: org. junit. assert. assertequals ( boolean. true, stage. getstage ( ) )
[4]: org. junit. assert. asserttrue ( stage. getstage ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( entities )
[0]: org. junit. assert. assertequals ( true, stage. getstage ( ) )
[1]: org. junit. assert. assertfalse ( stage. getstage ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, empcount )
[4]: org. junit. assert. assertequals ( 1l, empcount )

************

************
tgt: org . junit . assert . assertnotnull ( clusterstatsrequest )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), empcount )
[1]: org. junit. assert. assertequals ( 0, empcount )
[2]: org. junit. assert. assertequals ( 200000, empcount )
[3]: org. junit. assert. assertnotnull ( foo. value )
[4]: org. junit. assert. assertnotnull ( foo )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertnull ( foo. value )
[1]: org. junit. assert. assertequals ( foo, foo )
[2]: ) )
[3]: org. junit. assert. assertequals ( 3, results. getresultsize ( ), 10 )
[4]: org. junit. assert. assertequals ( 4, results. getresultsize ( ), 10 )

************

************
tgt: org . junit . assert . assertequals ( 2 , results . size ( ) )
[0]: org. junit. assert. assertequals ( 4, results. getresultsize ( ) )
[1]: org. junit. assert. assertequals ( 3, results. getresultsize ( ) )
[2]: org. junit. assert. assertequals ( 200, results. getresultsize ( ) )
[3]: org. junit. assert. assertequals ( 1, match. collect ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, del. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( deletesubtaskshidden )
[0]: org. junit. assert. assertequals ( 0, add. get ( ) )
[1]: org. junit. assert. assertequals ( 1, del. get ( ) )
[2]: org. junit. assert. assertequals ( 0, adds. get ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( subsequencetest. phrase )

************

************
tgt: org . junit . assert . assertequals ( str , json . tostring ( ) )
[0]: org. junit. assert. assertnotnull ( subsequencetest. phrase, len )
[1]: org. junit. assert. assertnotnull ( subsequencetest. phrase [ len ] )
[2]: org. junit. assert. assertnotnull ( subsequencetest. phrase [ offset ] )
[3]: ) )
[4]: org. junit. assert. asserttrue ( resultfromjpql. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( configs . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( resultfromjpql )
[1]: org. junit. assert. asserttrue ( resultfromjpql. contains ( query ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , counter )
[0]: org. junit. assert. assertequals ( ""a"", e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( ""bar"", e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( ""test"", e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( ""name"", e. getmessage ( ) )
[4]: org. junit. assert. assertfalse ( result )

************

************
tgt: org . junit . assert . asserttrue ( viewaction . project . visiblefiletry ( com . liferay . ide . ui . module . tests . newmoduleprojectwizardliferayworkspacegradletests . liferayworkspace . getmodulefiles ( project . getname ( ) ) ) )
[0]: org. junit. assert. assertequals ( false, result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. asserttrue ( result )
[3]: org. junit. assert. assertfalse ( result ) to
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( creator . recordeddirectories ( ) . contains ( java . nio . file . paths . get ( "foo" , "bar" ) ) )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertequals ( 1, s. size ( ) )
[2]: org. junit. assert. assertequals ( 1, n )
[3]: org. junit. assert. assertequals ( 1, psu. length )
[4]: org. junit. assert. assertnull ( configurationdescription. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( mockresponse , testresponse )
[0]: org. junit. assert. assertequals ( 1, count )
[1]: org. junit. assert. assertequals ( 0, count )
[2]: org. junit. assert. assertequals ( 5, count )
[3]: org. junit. assert. assertequals ( 3, count )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( mojo . getparsedbooleanvalue ( ) )
[0]: org. junit. assert. assertfalse ( allowedtowrite )
[1]: org. junit. assert. assertequals ( false, allowedtowrite )
[2]: org. junit. assert. assertthat ( allowedtowrite, is ( false ) )
[3]: org. junit. assert. assertthat ( allowedtowrite )
[4]: org. junit. assert. assertthat ( allowedtowrite, is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( null , udf . evaluate ( objs ) )
[0]: org. junit. assert. asserttrue ( driver. acceptsurl ( url ) )
[1]: org. junit. assert. assertnotnull ( e. getreturncode ( ) )
[2]: org. junit. assert. assertequals ( e. getreturncode ( ), java. lang. string. class )
[3]: org. junit. assert. assertequals ( e. getreturncode ( ), null )
[4]: org. junit. assert. assertequals ( e. getreturncode ( ), 0 )

************

************
tgt: org . junit . assert . assertequals ( ( ( "hiredate<sp>|dept<sp>|rankhire<sp>|\n" 9 + sqltext ) + "hiredate<sp>|dept<sp>|rankhire<sp>|\n" 9 ) , expected , testutils . formattedresult . resultfactory . tostringunsorted ( rs ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( env )
[2]: org. junit. assert. assertequals ( env, env )
[3]: org. junit. assert. assertnotnull ( environment )
[4]: org. junit. assert. assertnotnull ( ext )

************

************
tgt: org . junit . assert . assertnotnull ( url )
[0]: ) )
[1]: org. junit. assert. assertarrayequals ( test, rendered )
[2]: org. junit. assert. assertnotnull ( rendered )
[3]: , rendered )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( canonicalacl1 , org . hamcrest . matchers . not ( org . hamcrest . matchers . equalto ( canonicalacl2 ) ) )
[0]: )
[1]: org. junit. assert. assertequals ( clazz. getname ( ), clazz. getname ( ) )
[2]: org. junit. assert. assertequals ( clazz. getname ( ), class. getname ( ) )
[3]: org. junit. assert. assertequals ( clazz. getname ( ), clazz. gettype ( ) )
[4]: org. junit. assert. assertnotnull ( clazz. getname ( ) )

************

************
tgt: org . junit . assert . assertnull ( r )
[0]: org. junit. assert. assertequals ( java. lang. string. class. getname ( ), clazz )
[1]: org. junit. assert. asserttrue ( cmd. hasoption ( args ) )
[2]: org. junit. assert. asserttrue ( cmd. hasoption ( null ) )
[3]: org. junit. assert. assertfalse ( cmd. hasoption ( args ) )
[4]: org. junit. assert. assertfalse ( cmd. hasoption ( null ) )

************

************
tgt: org . junit . assert . assertequals ( "domain" , cookie . getname ( ) )
[0]: org. junit. assert. assertfalse ( cmd. hasoption ( args ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( null, null ), tags )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( null ), tags )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), tags )
[4]: org. junit. assert. assertequals ( 0, tags. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( thesavedvalue , is ( equalto ( theexistingvalue ) ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( board )
[2]: org. junit. assert. assertnotnull ( board. getcacheid ( ) )
[3]: org. junit. assert. assertequals ( testset, board )
[4]: org. junit. assert. assertnotnull ( testset )

************

************
tgt: org . junit . assert . assertequals ( 2 , cache . getnumactiveinstances ( com . bazaarvoice . ostrich . pool . singlethreadedclientservicecachetest . end_point ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( retrieved )
[2]: org. junit. assert. assertequals ( null, retrieved )
[3]: org. junit. assert. assertequals ( b, retrieved )
[4]: org. junit. assert. assertequals ( 0l, retrieved )

************

************
tgt: org . junit . assert . assertsame ( textmessage , result )
[0]: org. junit. assert. assertequals ( 3l, retrieved )
[1]: org. junit. assert. assertnotnull ( username )
[2]: org. junit. assert. assertequals ( """", username )
[3]: type ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( datestopped , order . geteffectivestopdate ( ) )
[0]: )
[1]: org. junit. assert. assertequals ( deuteriumcount, deuteriumcount )
[2]: org. junit. assert. assertequals ( 1, deuteriumcount )
[3]: org. junit. assert. assertequals ( 0, deuteriumcount )
[4]: org. junit. assert. assertequals ( 5, deuteriumcount )

************

************
tgt: org . junit . assert . asserttrue ( ( ( client . doaction ( request ) ) instanceof com . aliyuncs . httpresponse ) )
[0]: org. junit. assert. assertequals ( deuteriumcount, deuterumcount )
[1]: org. junit. assert. assertequals ( 1, path. getsegmentcount ( ) )
[2]: org. junit. assert. assertequals ( 0, path. getsegmentcount ( ) )
[3]: org. junit. assert. assertequals ( 1, a. getints ( ) )
[4]: org. junit. assert. assertequals ( 6, a. getints ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , result . getproperty ( "key1" ) )
[0]: org. junit. assert. assertequals ( 5, a. getints ( ) )
[1]: org. junit. assert. assertequals ( 10, a. getints ( ) )
[2]: ) )
[3]: org. junit. assert. assertthat ( com. annimon. stream. doublestream. empty ( ), org. hamcrest. matchers. is ( empty ( ) ) )
[4]: org. junit. assert. assertthat ( com. annimon. stream. doublestream. empty ( ), org. hamcrest. matchers. is ( 0l ) )

************

************
tgt: org . junit . assert . assertnotnull ( sets . get ( 0 ) . getcards ( ) )
[0]: org. junit. assert. assertthat ( com. annimon. stream. doublestream. empty ( ), org. hamcrest. matchers. empty ( ) )
[1]: org. junit. assert. assertequals ( b, a )
[2]: org. junit. assert. assertsame ( outnode, result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( process . getexitonstandardfault ( ) )
[0]: org. junit. assert. assertsame ( node, result )
[1]: org. junit. assert. assertequals ( node, result )
[2]: org. junit. assert. assertequals ( null, com. vividsolutions. jts. geom. constantimpl. eq ( null ) )
[3]: org. junit. assert. assertequals ( null, com. querydsl. core. types. constantimpl. eq ( null ) )
[4]: org. junit. assert. assertnull ( com. querydsl. core. types. constantimpl. eq ( null ) )

************

************
tgt: org . junit . assert . assertequals ( shiftmatrixcplx_expected , shiftmatrixcplx_actual )
[0]: org. junit. assert. assertnotnull ( com. querydsl. core. types. constantimpl. eq ( null ) )
[1]: org. junit. assert. assertnull ( com. querydsl. core. types. constantimpl. eq ( null ). list ( ) )
[2]: org. junit. assert. assertnotnull ( classundertest ( ). collect ( java. util. collections. emptylist ( ) ) )
[3]: org. junit. assert. assertnotnull ( classundertest ( ) )
[4]: org. junit. assert. assertequals ( 0, classundertest ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "." , result )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), classundertest ( ) )
[1]: org. junit. assert. assertequals ( 1, classundertest ( ). size ( ) )
[2]: org. junit. assert. asserttrue ( result )
[3]: org. junit. assert. assertequals ( true, result )
[4]: org. junit. assert. assertequals ( instance. getstring ( ""test"" ), instance2. getstring ( ""test"" ) )

************

************
tgt: org . junit . assert . assertequals ( true , b )
[0]: org. junit. assert. assertequals ( instance. getstring ( ""name"" ), instance2. getstring ( ""name"" ) )
[1]: org. junit. assert. assertequals ( instance. getstring ( ""a"" ), instance2. getstring ( ""a"" ) )
[2]: org. junit. assert. assertequals ( instance. getstring ( 0 ), instance2. getstring ( 1 ) )
[3]: org. junit. assert. assertequals ( instance. getstring ( ""name"" ), instance2. getstring ( ""bar"" ) )
[4]: org. junit. assert. assertnotnull ( localizedasset )

************

************
tgt: org . junit . assert . assertnull ( amqpmessagefacade . getfooter ( ) )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertnull ( localizedasset )
[2]: org. junit. assert. assertnotnull ( result )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, currentlocationprovider. getlocation ( ) )

************

************
tgt: org . junit . assert . assertnull ( com . aliyuncs . auth . acsurlencoder . percentencode ( null ) )
[0]: org. junit. assert. assertequals ( 1, currentlocationprovider. getlocation ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, currentlocationprovider. getlocation ( ) )
[2]: org. junit. assert. assertequals ( null, currentlocationprovider. getlocation ( ) )
[3]: org. junit. assert. assertequals ( 1, currentlocationprovider. getlocation ( ). length )
[4]: org. junit. assert. asserttrue ( c. intersects ( r2d ) )

************

************
tgt: org . junit . assert . assertnotnull ( com . aliyuncs . utils . logutils . getcurrentpid ( ) )
[0]: org. junit. assert. assertequals ( true, c. intersects ( r2d ) )
[1]: org. junit. assert. assertfalse ( c. intersects ( r2d ) )
[2]: org. junit. assert. assertequals ( c. intersects ( r2d ), true )
[3]: org. junit. assert. assertequals ( c. intersects ( r2d ), false )
[4]: org. junit. assert. assertequals ( java. lang. string. class. getclassloader ( ), exampleclass. getclassloader ( ) )

************

************
tgt: org . junit . assert . assertequals ( "testupdate" , jobconfigurationservice . getjobconfigurationbyuid ( joba . getuid ( ) ) . getname ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. class, exampleclass. getclassloader ( ) )
[1]: org. junit. assert. assertequals ( org. robolectric. internal. bytecode. robolectricinternals. classloader, exampleclass )
[2]: org. junit. assert. assertnull ( exampleclass. getclassloader ( ) )
[3]: org. junit. assert. assertnotnull ( exampleclass. getclassloader ( ) )
[4]: org. junit. assert. assertequals ( 1, tasks. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( output , format . format ( cal ) )
[0]: org. junit. assert. assertequals ( 0, tasks. size ( ) )
[1]: org. junit. assert. assertequals ( 3, tasks. size ( ) )
[2]: org. junit. assert. assertequals ( 2, tasks. size ( ) )
[3]: org. junit. assert. assertequals ( 4, tasks. size ( ) )
[4]: org. junit. assert. assertequals ( 0, results. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( max . equals ( answer ) )
[0]: org. junit. assert. assertequals ( 1, results. size ( ) )
[1]: org. junit. assert. assertequals ( 3, results. size ( ) )
[2]: org. junit. assert. assertequals ( 4, results. size ( ) )
[3]: org. junit. assert. assertequals ( 0, results. size ( ) ) ;
[4]: org. junit. assert. assertfalse ( notified. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , ok . get ( ) )
[0]: org. junit. assert. assertequals ( false, notified. get ( ) )
[1]: org. junit. assert. asserttrue ( notified. get ( ) )
[2]: org. junit. assert. assertequals ( true, notified. get ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( resultmessage ( res, reassignhostcontext. reassign_host ), res. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( walrecord . getfield ( ) )
[0]: org. junit. assert. assertequals ( resultmessage ( res, reassignhostcontext. reassign_host ), res. tostring ( ) )
[1]: org. junit. assert. assertequals ( resultmessage ( res, reassignhostcontext. reassign_host ), res. length ( ) )
[2]: org. junit. assert. assertequals ( resultmessage ( res, reassignhostcontext. reassign_host ), res. getmessage ( ) )
[3]: org. junit. assert. assertequals ( resultmessage ( res, reassignhostcontext. reassign_host ), res. getid ( ) )
[4]: org. junit. assert. assertequals ( org. eclipse. jface. viewers. styledtext. getstring ( ), styledtext. getstring ( ) )

************

************
tgt: org . junit . assert . assertequals ( entry . getkey ( ) , entry . getvalue ( ) )
[0]: org. junit. assert. assertequals ( org. eclipse. jface. viewers. styledstring. getstring ( ), styledtext. getstring ( ) )
[1]: org. junit. assert. assertequals ( org. eclipse. jface. viewers. styledstring. class, styledtext. getstring ( ) )
[2]: org. junit. assert. assertequals ( org. eclipse. jface. viewers. styledstring. trim ( ), styledtext. getstring ( ) )
[3]: org. junit. assert. assertequals ( null, styledtext. getstring ( ) )
[4]: org. junit. assert. assertnotnull ( meldingen )

************

************
tgt: org . junit . assert . assertequals ( existingddmforminstance , newddmforminstance )
[0]: org. junit. assert. assertnotnull ( meldingen. size ( ) )
[1]: org. junit. assert. assertnotnull ( m )
[2]: org. junit. assert. assertnotnull ( meldingen ( ) )
[3]: org. junit. assert. assertnotnull ( meldingen. get ( ) )
[4]: org. junit. assert. assertfalse ( config. isclientenable ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( exceptionthrownbyseconddelete )
[0]: org. junit. assert. assertnull ( config. isclientenable ( ) )
[1]: org. junit. assert. assertfalse ( configuration. isclientenable ( ) )
[2]: org. junit. assert. assertnotnull ( lineitems )
[3]: org. junit. assert. assertequals ( existingorder, lineitems )
[4]: org. junit. assert. assertequals ( shiptoobj, lineitems. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( option . isnull ( ) , is ( true ) )
[0]: org. junit. assert. assertequals ( 0, lineitems. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( service. getpartitionfilter ( ) )
[3]: org. junit. assert. assertequals ( _metrical, service. getpartitionfilter ( ) )
[4]: org. junit. assert. assertequals ( _metripath, service. getpartitionfilter ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( _metriparser, service. getpartitionfilter ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( headers )
[3]: org. junit. assert. assertnotnull ( header )
[4]: org. junit. assert. assertnotnull ( uri )

************

************
tgt: org . junit . assert . assertthat ( regex )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( expectedparameters, page. asstring ( ) )
[3]: org. junit. assert. assertequals ( 1, page. asstring ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, page. asstring ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( awaycommand . tostring ( ) . contains ( org . kitteh . irc . client . library . command . awaycommandtest . message ) )
[0]: org. junit. assert. assertequals ( 1, page. asstring ( ). length ( ) )
[1]: org. junit. assert. assertequals ( expectedparameters, page )
[2]: org. junit. assert. assertfalse ( org. threadly. util. exceptionutils. hascauseoftype ( e, org. threadly. util. exception. class ) )
[3]: org. junit. assert. assertfalse ( org. threadly. util. exceptionutils. hascauseoftype ( e, java. lang. throwable. class ) )
[4]: org. junit. assert. assertfalse ( org. threadly. util. exceptionutils. hascauseoftype ( e, java. util. exception. class ) )

************

************
tgt: org . junit . assert . assertequals ( ioexception2 , e )
[0]: org. junit. assert. assertfalse ( org. threadly. util. exceptionutils. hascauseoftype ( e ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, result )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( 10, result )

************

************
tgt: org . junit . assert . assertequals ( "" , result )
[0]: org. junit. assert. assertequals ( ( - 1 ) )
[1]: , result )
[2]: org. junit. assert. assertequals ( ( maximumeven, portmanager. gethighest ( ) )
[3]: org. junit. assert. asserttrue ( result )
[4]: org. junit. assert. assertequals ( 0, splist. size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new java . lang . string [ ] { "user1" } , members )
[0]: org. junit. assert. assertnull ( cookie. getexpirydate ( ) )
[1]: org. junit. assert. assertnull ( cookie. getexpirydate ( ). getid ( ) )
[2]: org. junit. assert. assertequals ( ( - 1 ), cookie. getexpirydate ( ) )
[3]: org. junit. assert. assertequals ( null, cookie. getexpirydate ( ) )
[4]: org. junit. assert. assertequals ( 1, cookie. getdomain ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( estado )
[0]: org. junit. assert. assertequals ( 0, cookie. getdomain ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, cookie. getdomain ( ) )
[2]: org. junit. assert. assertequals ( 1, cookie. getdomain ( ). length )
[3]: org. junit. assert. assertequals ( 1, cookie. getdomain ( ). intvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, position )

************

************
tgt: org . junit . assert . assertnotnull ( smallcol )
[0]: org. junit. assert. assertequals ( entity. getid ( ), entity2. getid ( ) )
[1]: org. junit. assert. assertequals ( entity, entity2. getid ( ) )
[2]: org. junit. assert. assertequals ( 1, entity2. getid ( ) )
[3]: org. junit. assert. assertequals ( 1, entity2. getid ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( entity2. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( 200 , response . getstatuscode ( ) )
[0]: org. junit. assert. assertequals ( 1, p. f ( 1 ) )
[1]: org. junit. assert. assertequals ( 0, p. f ( 1 ) )
[2]: org. junit. assert. assertequals ( 5, p. f ( 1 ) )
[3]: org. junit. assert. assertequals ( 6, p. f ( 1 ) )
[4]: org. junit. assert. assertequals ( 3, p. f ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( org . mule . runtime . core . api . event . coreevent ) ( reactor . core . publisher . mono . from ( eventcaptor . getvalue ( ) ) . block ( ) ) ) . getmessage ( ) , initialevent . getmessage ( ) )
[0]: org. junit. assert. assertequals ( 1, custom )
[1]: org. junit. assert. assertequals ( 0, custom )
[2]: org. junit. assert. assertequals ( custom, 1 )
[3]: org. junit. assert. assertequals ( 2, custom )
[4]: org. junit. assert. assertequals ( 3, custom )

************

************
tgt: org . junit . assert . asserttrue ( canconnect )
[0]: org. junit. assert. assertnotnull ( orden )
[1]: org. junit. assert. assertequals ( 1, resultaat. getmeldingen ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, resultaat. getmeldingen ( ). size ( ) )
[3]: org. junit. assert. asserttrue ( resultaat. getmeldingen ( ). isempty ( ) )
[4]: org. junit. assert. assertnotnull ( resultaat. getmeldingen ( ) )

************

************
tgt: org . junit . assert . assertequals ( "getaccessid()<sp>should<sp>be<sp>the<sp>accessid<sp>specified<sp>in<sp>the<sp>constructor" , accessid , principal . getaccessid ( ) )
[0]: org. junit. assert. assertequals ( 0, resultaat. getmeldingen ( ). length )
[1]: org. junit. assert. assertequals ( 200, statusinfo. getstatusinfo ( ) )
[2]: org. junit. assert. assertequals ( exceptionmessage, statusinfo. getstatusinfo ( ) )
[3]: org. junit. assert. assertnotnull ( statusinfo. getstatusinfo ( ) )
[4]: org. junit. assert. asserttrue ( ( ( statusinfo. getstatusinfo ( ) ) == 200 ) )

************

************
tgt: org . junit . assert . assertsame ( authprovider . getgroupmapping ( ) , mappingservice )
[0]: org. junit. assert. asserttrue ( ( ( statusinfo. getstatusinfo ( ) ) == null ) )
[1]: org. junit. assert. assertequals ( true, shellavailable. test ( ) )
[2]: org. junit. assert. assertfalse ( shellavailable. test ( ) )
[3]: org. junit. assert. assertnotnull ( listdisplayvacanciesforwaitlistprogram ( 1 ) )
[4]: org. junit. assert. assertequals ( ""1"", output. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( start , start2 )
[0]: org. junit. assert. assertequals ( dataset, output. tostring ( ) )
[1]: org. junit. assert. assertequals ( 1, output. tostring ( ) )
[2]: org. junit. assert. assertequals ( serialized, output. tostring ( ) )
[3]: output ( ) )
[4]: org. junit. assert. assertequals ( 1, actual. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 200 , response . getstatus ( ) )
[0]: org. junit. assert. assertfalse ( axes1. isshoworigin ( ) )
[1]: org. junit. assert. assertequals ( false, axes1. isshoworigin ( ) )
[2]: org. junit. assert. assertnull ( axes1. isshoworigin ( ) )
[3]: org. junit. assert. asserttrue ( axes1. isshoworigin ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , itemcount )
[0]: org. junit. assert. assertequals ( foo, foo )
[1]: org. junit. assert. assertequals ( 1, foo. size ( ) )
[2]: org. junit. assert. assertequals ( 0, foo. size ( ) )
[3]: org. junit. assert. assertnotnull ( foo )
[4]: org. junit. assert. assertequals ( foo, foo. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( out . tostring ( ) , org . hamcrest . corematchers . is ( "/context" ) )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertnotnull ( collection )
[2]: org. junit. assert. assertnotnull ( queue )
[3]: org. junit. assert. assertnotnull ( context )
[4]: type ) )

************

************
tgt: org . junit . assert . asserttrue ( list . isempty ( ) )
[0]: org. junit. assert. assertequals ( expected, shardtbl )
[1]: org. junit. assert. assertequals ( expected, shardtrie )
[2]: org. junit. assert. assertequals ( expected, shardtetags )
[3]: org. junit. assert. assertequals ( expected, shardtjoin )
[4]: org. junit. assert. assertequals ( actual, shardtbl )

************

************
tgt: org . junit . assert . assertequals ( dedatarecordcollections . tostring ( ) , 5 , dedatarecordcollections . size ( ) )
[0]: org. junit. assert. assertequals ( testcomment, song. getcomment ( ) )
[1]: org. junit. assert. assertequals ( 0, song. getcomment ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, song. getcomment ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( song. getcomment ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( filesizeafter < filesizebefore ) )
[0]: org. junit. assert. assertthat ( spec. getdesiredstate ( ), org. hamcrest. matchers. is ( org. hamcrest. matchers. equalto ( null ) ) )
[1]: org. junit. assert. assertequals ( 1, spec. getdesiredstate ( ). size ( ) )
[2]: org. junit. assert. assertthat ( spec. getdesiredstate ( ), org. hamcrest. matchers. equalto ( null ) )
[3]: org. junit. assert. assertequals ( 0, spec. getdesiredstate ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, spec. getdesiredstate ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , handler . formattedrecords ( ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( 0, result. size ( ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( 3, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, results. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( resolved . size ( ) , org . hamcrest . corematchers . equalto ( initialresolverscount ) )
[0]: org. junit. assert. assertequals ( matrix_expected, matrixshift_actual )
[1]: org. junit. assert. assertequals ( matrix2_expected, matrixshift_actual )
[2]: org. junit. assert. assertequals ( matrixwithexpected, matrixshift_actual )
[3]: org. junit. assert. assertequals ( matrix>expected, matrixshift_actual )
[4]: org. junit. assert. assertnotnull ( matrixshift_expected )

************

************
tgt: org . junit . assert . assertfalse ( iterator . hasnext ( ) )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), accessor. getsourceaccessor ( context, 1, null ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), accessor. getsourceaccessor ( context, 1, mockaccessor ) )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), accessor. getsourceaccessor ( context, 1, mockaccessor ) )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), accessor. getsourceaccessor ( context, 1, ( ( java. lang. integer ) ( null ) ) ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), accessor. getsourceaccessor ( context, 1, nullproperty ) )

************

************
tgt: org . junit . assert . assertequals ( expected . trim ( ) , output . trim ( ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( 0, result. size ( ) )
[2]: org. junit. assert. assertequals ( 3, result. size ( ) )
[3]: org. junit. assert. assertequals ( 2, result. size ( ) )
[4]: . size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( isvalid )
[0]: org. junit. assert. assertequals ( id, targetmap. get ( dbrel ) )
[1]: org. junit. assert. assertequals ( id, targetmap. get ( id ) )
[2]: org. junit. assert. assertequals ( id, targetmap. get ( ""a"" ) )
[3]: org. junit. assert. assertequals ( id, targetmap. get ( dbrel. id ) )
[4]: get ( id ) )

************

************
tgt: org . junit . assert . assertnull ( existingddmtemplatelink )
[0]: org. junit. assert. assertnotnull ( mockcontext. title ( com. redhat. darcy. ui. by. bytitle. class ) )
[1]: org. junit. assert. assertequals ( el, mockcontext. title ( com. redhat. darcy. ui. by. bytitle. class ) )
[2]: org. junit. assert. assertequals ( el, mockcontext. title ( com. redhat. darcy. ui. by. bytitle. class ). get ( ) )
[3]: org. junit. assert. assertnotnull ( mockcontext. title ( com. redhat. darcy. ui. by. bytitle. class. getname ( ) ) )
[4]: org. junit. assert. assertequals ( el, mockcontext. title ( com. redhat. darcy. ui. by. bytitle. class ). find ( ) )

************

************
tgt: org . junit . assert . assertnull ( value )
[0]: org. junit. assert. assertequals ( 1, pos )
[1]: org. junit. assert. assertequals ( 0, pos )
[2]: org. junit. assert. assertequals ( 2, pos )
[3]: org. junit. assert. assertequals ( 3, pos )
[4]: org. junit. assert. assertequals ( 5, pos )

************

************
tgt: org . junit . assert . assertthat ( result . tostring ( ) , org . hamcrest . matchers . is ( org . hamcrest . matchers . equalto ( "" ) ) )
[0]: org. junit. assert. assertequals ( 1, lqs. size ( ) )
[1]: org. junit. assert. assertequals ( 0, lqs. size ( ) )
[2]: org. junit. assert. assertnotnull ( resurl )
[3]: org. junit. assert. assertnull ( resolvedheader )
[4]: org. junit. assert. assertequals ( null, resolvedheader )

************

************
tgt: org . junit . assert . assertequals ( userid , autheduser . getuuid ( ) )
[0]: org. junit. assert. assertequals ( 0, resolvedheader )
[1]: org. junit. assert. assertequals ( zero, resolvedheader )
[2]: org. junit. assert. assertequals ( false, resolvedheader )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertnotnull ( actie )

************

************
tgt: org . junit . assert . assertequals ( "darwin" , process . platform ( ) )
[0]: org. junit. assert. assertnull ( resultaat )
[1]: org. junit. assert. assertequals ( 1, result )
[2]: org. junit. assert. assertequals ( 0, result )
[3]: org. junit. assert. assertequals ( perspective, dock. isopened ( ) )
[4]: org. junit. assert. assertequals ( 1, aftermigrationverifiedcount )

************

************
tgt: org . junit . assert . assertequals ( 0 , result )
[0]: org. junit. assert. assertequals ( 4, aftermigrationverifiedcount )
[1]: org. junit. assert. assertequals ( 0, aftermigrationverifiedcount )
[2]: org. junit. assert. assertequals ( 3, aftermigrationverifiedcount )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( styledtext. cursorposition ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( extensions [ i ] )
[0]: org. junit. assert. assertequals ( 1, styledtext. cursorposition ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, styledtext. cursorposition ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, styledtext. cursorposition ( ). count ( ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( validationresult. haserror ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( plaintext , hybriddecrypt . decrypt ( ciphertext , null ) )
[0]: org. junit. assert. assertnotnull ( m )
[1]: org. junit. assert. assertnull ( m )
[2]: org. junit. assert. assertnotnull ( m. get ( ) )
[3]: org. junit. assert. assertequals ( null, m )
[4]: org. junit. assert. assertnotnull ( m. gettype ( ) )

************

************
tgt: org . junit . assert . assertnull ( value )
[0]: org. junit. assert. assertequals ( this. expectedresult, actualresult )
[1]: org. junit. assert. assertequals ( true, other. equals ( other ) )
[2]: org. junit. assert. assertequals ( false, other. equals ( other ) )
[3]: org. junit. assert. asserttrue ( other. equals ( other ) )
[4]: org. junit. assert. assertfalse ( other. equals ( other ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( true, other. equals ( null ) )
[1]: org. junit. assert. assertequals ( 1, app. executeapplication ( args ) )
[2]: org. junit. assert. assertnotnull ( file )
[3]: org. junit. assert. assertequals ( null, file )
[4]: org. junit. assert. assertequals ( 0, file. length ( ) )

************

************
tgt: org . junit . assert . asserttrue ( possibleoutcomes . isempty ( ) )
[0]: org. junit. assert. assertnull ( file )
[1]: org. junit. assert. assertequals ( 0, file. size ( ) )
[2]: org. junit. assert. assertarrayequals ( org. pentaho. pms. ui. metaeditortest. expected_schemas [ 0 ], schemas )
[3]: org. junit. assert. assertarrayequals ( org. pentaho. pms. ui. metaeditortest. expected_schemas, schemas )
[4]: org. junit. assert. assertarrayequals ( org. pentaho. pms. ui. metaeditortest. expected_schemas [ 0 ], schemas )

************

************
tgt: org . junit . assert . assertsame ( mapheaders , request . gethttpheaders ( ) )
[0]: org. junit. assert. assertarrayequals ( org. pentaho. pms. ui. metaeditortest. expected_schemas [ 1 ], schemas )
[1]: org. junit. assert. assertnotnull ( schemas )
[2]: org. junit. assert. assertequals ( expectedparameters, applicationcontext. getpathparameters ( true ) )
[3]: org. junit. assert. assertnull ( backend. extractcredentials ( request, null ) )
[4]: org. junit. assert. assertnull ( backend. extractcredentials ( null, request ) )

************

************
tgt: org . junit . assert . assertequals ( "region" , request . getvisitorregion ( ) )
[0]: org. junit. assert. assertnull ( converter. extractcredentials ( request, null ) )
[1]: org. junit. assert. assertnull ( repository. extractcredentials ( mock ( org. mockito. rest. restrequest ), request ) )
[2]: org. junit. assert. assertnull ( backend. extractcredentials ( mock ( org. mockito. rest. restrequest ), request ) )
[3]: org. junit. assert. assertnotnull ( channel. newchannel ( ) )
[4]: org. junit. assert. assertnull ( channel. newchannel ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , rm . getresultslist ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( null, channel. newchannel ( ) )
[1]: org. junit. assert. assertequals ( java. lang. string. class, channel. newchannel ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( s, s )
[4]: org. junit. assert. assertnotnull ( s )

************

************
tgt: org . junit . assert . assertfalse ( stap . voerverwerkingsstapuitvoorbericht ( berichtcommand ) )
[0]: org. junit. assert. assertequals ( s, s. trim ( ) )
[1]: org. junit. assert. assertequals ( s, null )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( item )
[4]: org. junit. assert. assertequals ( item, item )

************

************
tgt: org . junit . assert . assertfalse ( expr . matches ( atom ) )
[0]: org. junit. assert. assertequals ( item, null )
[1]: org. junit. assert. assertequals ( net. sourceforge. pmd. lang. java. lang. string. class, ms. getname ( ) )
[2]: org. junit. assert. assertnotnull ( ms. getname ( ) )
[3]: org. junit. assert. assertequals ( ""foo"", ms. getname ( ) )
[4]: org. junit. assert. assertequals ( ""test"", ms. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , result . size ( ) )
[0]: org. junit. assert. assertequals ( """", ms. getname ( ) )
[1]: org. junit. assert. assertequals ( totalbadbefore, org. apache. hadoop. yarn. server. router. testroutermetrics. metrics. getappsfailedsubmitted ( ) )
[2]: org. junit. assert. assertequals ( org. apache. hadoop. yarn. server. router. testroutermetrics. metrics. getappsfailedsubmitted ( ), totalbadbefore )
[3]: org. junit. assert. assertequals ( 1, org. apache. hadoop. yarn. server. router. testroutermetrics. metrics. getappsfailedsubmitted ( ) )
[4]: org. junit. assert. assertequals ( totalbadbefore, org. apache. hadoop. yarn. server. router. testroutermetrics. metrics. getappsfailedsubmitted ( ). length )

************

************
tgt: org . junit . assert . assertequals ( org . oscm . app . ror . lserverconfigurationtest . servertype , lserverconfiguration . getservertype ( ) )
[0]: org. junit. assert. assertequals ( 1, ( totalbadbefore + 1 ) )
[1]: org. junit. assert. asserttrue ( (! ( all. isempty ( ) ) ) )
[2]: org. junit. assert. assertequals ( 1, all. size ( ) )
[3]: org. junit. assert. assertnotnull ( all. size ( ) )
[4]: org. junit. assert. assertnotnull ( all )

************

************
tgt: org . junit . assert . assertequals ( subjectmatterexpert , result )
[0]: ) )
[1]: org. junit. assert. assertequals ( org. nd4j. linalg. factory. nd4j. create ( new double [ ] { 1, 2, 3 } ), vector )
[2]: org. junit. assert. assertequals ( org. nd4j. linalg. factory. nd4j. create ( new double [ ] { 1, 2, 3 }, vector ), slice )
[3]: org. junit. assert. assertequals ( org. nd4j. linalg. factory. nd4j. create ( new double [ ] { 1, 2, 3, 4 } ), vector )
[4]: org. junit. assert. assertequals ( org. nd4j. linalg. factory. nd4j. create ( new double [ ] { 1, 2, 3 }, vector ), 0.0 )

************

************
tgt: org . junit . assert . assertnotnull ( tg )
[0]: org. junit. assert. assertequals ( exp, vector )
[1]: org. junit. assert. assertequals ( exception, e )
[2]: org. junit. assert. assertequals ( ns. getexception ( ), e )
[3]: org. junit. assert. assertequals ( null, e )
[4]: org. junit. assert. assertequals ( ns. getexception ( ), e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( plaintext , decryptedtext )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), e )
[1]: org. junit. assert. assertequals ( 0, supplier. getvertices ( ). length )
[2]: org. junit. assert. assertequals ( 0, supplier. getvertices ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, supplier. materialized ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, supplier. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, supplier. clause. size ( ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( result, null )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertequals ( 1000 , actualbases )
[0]: org. junit. assert. assertequals ( result, result )
[1]: org. junit. assert. assertequals ( dto, product. addderivedprovidedproduct ( product ) )
[2]: org. junit. assert. assertequals ( 1, tagdo. getindex ( ) )
[3]: org. junit. assert. assertequals ( 1, datavalidenum. valid. getindex ( ) )
[4]: org. junit. assert. assertnotnull ( datavalidenum. valid. getindex ( ) )

************

************
tgt: org . junit . assert . assertequals ( policy , dest . getserver ( ) )
[0]: org. junit. assert. assertnotnull ( tagdo )
[1]: ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )
[3]: org. junit. assert. assertequals ( result, 1287623847384l )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertequals ( g1 , g2 )
[0]: org. junit. assert. assertequals ( 0, result )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), results )
[2]: org. junit. assert. assertthat ( volume. get ( ), org. hamcrest. matchers. is ( org. onosproject. net. resource. continuousresourcetest. d1 ) )
[3]: org. junit. assert. assertthat ( volume. get ( ), org. hamcrest. matchers. is ( org. onosproject. net. resource. continuousresourcetest. p1 ) )
[4]: org. junit. assert. assertequals ( org. onosproject. net. resource. continuousresourcetest. d1, volume. get ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( org. onosproject. net. resource. continuousresourcetest. d1, volume. get ( ), 0 )
[1]: org. junit. assert. assertequals ( org. onosproject. net. resource. continuousresourcetest. d1, volume. get ( ), 0.0 )
[2]: org. junit. assert. assertnull ( this. handler. oncall ( command, pusher ) )
[3]: org. junit. assert. assertnull ( this. handler. oncall ( null, pusher ) )
[4]: org. junit. assert. assertnotnull ( this. handler. oncall ( command, pusher ) )

************

************
tgt: org . junit . assert . assertequals ( "palhoça" , retornoconsultacadastroendereco . getdescricaomunicipio ( ) )
[0]: org. junit. assert. assertequals ( null, this. handler. oncall ( command, pusher ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, a. indexof ( double. nan ) )
[3]: org. junit. assert. assertequals ( 1, a. indexof ( double. nan ) )
[4]: org. junit. assert. assertequals ( 0, a. indexof ( new java. lang. object ( ) ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( 1, a. indexof ( new java. lang. object ( ) ) )
[1]: org. junit. assert. assertequals ( 0, a. indexof ( java. lang. double. nan ) )
[2]: org. junit. assert. assertequals ( 1, calledcancelled )
[3]: org. junit. assert. assertequals ( 1, events. size ( ) )
[4]: org. junit. assert. assertequals ( 1, calledcancelled. count )

************

************
tgt: org . junit . assert . asserttrue ( allow )
[0]: org. junit. assert. assertequals ( 1, event. events. size )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, columnsize )
[3]: org. junit. assert. assertequals ( 0, columnsize )
[4]: org. junit. assert. assertequals ( 12, columnsize )

************

************
tgt: org . junit . assert . asserttrue ( manager . deletelookup ( org . apache . druid . server . lookup . cache . lookupcoordinatormanagertest . lookup_tier , "foo" , auditinfo ) )
[0]: org. junit. assert. assertequals ( 3, columnsize )
[1]: org. junit. assert. assertequals ( 10, columnsize )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( result. size ( ), 1 )
[4]: org. junit. assert. assertequals ( 3, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( type , getcontenttype ( method ) )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. assertequals ( unauthorized, response. getstatus ( ) )
[2]: org. junit. assert. assertequals ( 401, response. getstatus ( ) )
[3]: org. junit. assert. assertequals ( unauthorized, response. getstatus ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( unauthorized, response. getstatus ( ). getcode ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( bukkittask ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( ls )
[2]: org. junit. assert. assertnotnull ( ls. getmessage ( ) )
[3]: org. junit. assert. assertequals ( 1, ls. count )
[4]: org. junit. assert. assertnotnull ( ls. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( msg , result )
[0]: org. junit. assert. assertnotnull ( ls. stack )
[1]: org. junit. assert. asserttrue ( tbce. comparescreen ( referencefile ) )
[2]: org. junit. assert. assertequals ( true, tbce. comparescreen ( referencefile ) )
[3]: org. junit. assert. assertequals ( false, tbce. comparescreen ( referencefile ) )
[4]: org. junit. assert. assertnotnull ( tbce. comparescreen ( referencefile ) )

************

************
tgt: org . junit . assert . assertequals ( config . getthroughputcalculationintervalinmillis ( ) , acceptedconfig . getthroughputcalculationintervalinmillis ( ) )
[0]: org. junit. assert. assertnull ( tbce. comparescreen ( referencefile ) )
[1]: org. junit. assert. assertthat ( results, org. hamcrest. matchers. contains ( ll, lr, l ) )
[2]: org. junit. assert. assertthat ( results, org. hamcrest. matchers. contains ( ll, lr, l, lr ) )
[3]: org. junit. assert. assertthat ( results, org. hamcrest. matchers. contains ( ll, lr ) )
[4]: org. junit. assert. assertthat ( results, org. hamcrest. matchers. contains ( ll, lr, l, l, lr ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . integer . valueof ( 2 ) , storageunitentity . getstoragepolicytransitionfailedattempts ( ) )
[0]: org. junit. assert. assertthat ( results, org. hamcrest. matchers. contains ( ll, lr, l, lr, l ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( dividend ), org. hipparchus. util. arithmeticutilstest. divideunsignedexpected ( dividend, divisor ) )
[2]: org. junit. assert. assertequals ( 1, org. hipparchus. util. arithmeticutilstest. divideunsignedexpected ( dividend, divisor ) )
[3]: org. junit. assert. assertequals ( 0, org. hipparchus. util. arithmeticutilstest. divideunsignedexpected ( dividend, divisor ) )
[4]: org. junit. assert. assertequals ( org. hipparchus. util. arithmeticutilstest. divideunsignedexpected ( dividend, divisor ), java. lang. long. valueof ( ints. length ) )

************

************
tgt: org . junit . assert . assertequals ( range2 . getend ( ) , logposition )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( expected. union ( actual ), actual )
[3]: org. junit. assert. assertequals ( expected. union ( actual ), expected )
[4]: org. junit. assert. assertequals ( result, actual )

************

************
tgt: org . junit . assert . assertequals ( "cheese" , built . getstring ( ) )
[0]: assertequals ( expected, actual )
[1]: org. junit. assert. assertequals ( rolenames. tostring ( ), 0, rolenames. size ( ) )
[2]: org. junit. assert. assertequals ( rolenames. tostring ( ), 1, rolenames. size ( ) )
[3]: org. junit. assert. assertequals ( rolenames. tostring ( ), 2, rolenames. size ( ) )
[4]: org. junit. assert. assertequals ( rolenames. tostring ( ), 3, rolenames. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , ( ( com . streamsets . pipeline . sdk . teststagerunner . dummystage2 ) ( stage ) ) . a )
[0]: org. junit. assert. assertequals ( rolenames. tostring ( ), 0, rollenames. size ( ) )
[1]: org. junit. assert. assertequals ( 0, invokeundertest ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( e4 )
[3]: org. junit. assert. assertnull ( e4 )
[4]: org. junit. assert. assertequals ( null, e4 )

************

************
tgt: org . junit . assert . assertnotnull ( stream )
[0]: org. junit. assert. assertequals ( null, e4. defaultsetup ( ) )
[1]: org. junit. assert. assertequals ( 1, e4. defaultsetup ( ) )
[2]: org. junit. assert. assertnotnull ( ocattr )
[3]: org. junit. assert. assertnotnull ( ocarguments )
[4]: org. junit. assert. assertarrayequals ( descriptions, result )

************

************
tgt: org . junit . assert . assertnotnull ( url )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertarrayequals ( descriptions, results )
[2]: org. junit. assert. assertequals ( 0, 1 )
[3]: org. junit. assert. assertnull ( filterstring )
[4]: org. junit. assert. assertequals ( 0, count )

************

************
tgt: org . junit . assert . asserttrue ( e . isaccessviolation ( ) )
[0]: org. junit. assert. asserttrue ( true )
[1]: org. junit. assert. assertnotnull ( filterstring )
[2]: org. junit. assert. assertfalse ( e. validate ( ) )
[3]: org. junit. assert. assertnull ( e. validate ( ) )
[4]: org. junit. assert. assertequals ( 0, e. validate ( ), 0 )

************

************
tgt: org . junit . assert . assertequals ( actualbusinessobjectdefinitions , expectedbusinessobjectdefinitions )
[0]: org. junit. assert. assertequals ( 0, e. validate ( ), 0.0 )
[1]: org. junit. assert. assertequals ( false, e. validate ( ) )
[2]: org. junit. assert. assertnull ( x509attestation. getcareferencesfinal ( ) )
[3]: org. junit. assert. assertnull ( changed )
[4]: org. junit. assert. assertnotnull ( changed )

************

************
tgt: org . junit . assert . assertequals ( version1 , version2 )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), changed )
[1]: org. junit. assert. assertequals ( null, changed )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( main )
[4]: org. junit. assert. assertequals ( 1, main. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( setofinjectcollections , actualinjectcollections )
[0]: org. junit. assert. assertequals ( 1, main. read ( ) )
[1]: org. junit. assert. assertequals ( 1, main. s )
[2]: ) )
[3]: org. junit. assert. assertequals ( 4, metadata. getrasterpixelsize ( ) )
[4]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, got )

************

************
tgt: org . junit . assert . assertequals ( empcount , new java . lang . long ( 1 ) )
[0]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, instance )
[1]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, instance. got )
[2]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, builttr )
[3]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, builtties )
[4]: org. junit. assert. assertequals ( null, encode ( java. util. collections. emptylist ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( "maybe" , foo . value )
[0]: org. junit. assert. assertequals ( """", encode ( java. util. collections. emptylist ( ) ) )
[1]: org. junit. assert. assertnull ( encode ( java. util. collections. emptylist ( ) ) )
[2]: org. junit. assert. assertequals ( 0, encode ( java. util. collections. emptylist ( ) ). length )
[3]: org. junit. assert. assertequals ( 0, encode ( java. util. collections. emptylist ( ) ) )
[4]: org. junit. assert. assertequals ( 1, config. getconfigindex ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( short_property_value , producer . getshortproperty ( short_property_name ) )
[0]: org. junit. assert. assertequals ( 1, config. getconfigindex ( ) )
[1]: org. junit. assert. assertequals ( 0, config. getconfigindex ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( config. getconfigindex ( ) )
[3]: org. junit. assert. assertequals ( 1, config. getconfigindex ( ). count ( ) )
[4]: org. junit. assert. assertnotnull ( service. launch ( joblocator, jobparameters ) )

************

************
tgt: org . junit . assert . assertequals ( "testnode" 3 , results . getresultsize ( ) , 2 )
[0]: org. junit. assert. assertnotnull ( service. launch ( job. tostring ( ), jobparameters ) )
[1]: org. junit. assert. assertnotnull ( service. launch ( job, jobparameters ) )
[2]: org. junit. assert. assertnotnull ( service. launch ( joburl, jobparameters ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, tknzn. gettokens ( ). length )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( 1, tknzn. gettokens ( ). length )
[1]: org. junit. assert. assertequals ( null, tknzn. gettokens ( ). length )
[2]: org. junit. assert. assertnotnull ( tknzn. gettokens ( ) )
[3]: org. junit. assert. assertequals ( 0, tknzn. gettokens ( ). size ( )
[4]: org. junit. assert. asserttrue ( result. hasnext ( ) )

************

************
tgt: org . junit . assert . assertequals ( aslist ( bid , match ) , events . collect ( ) )
[0]: org. junit. assert. assertnotnull ( newsize )
[1]: org. junit. assert. assertnull ( newsize )
[2]: , newsize )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( seg [ i ] , block [ i ] )
[0]: org. junit. assert. assertnotnull ( operationsdataprocessor. compilerequest ( types ) )
[1]: org. junit. assert. asserttrue ( result )
[2]: org. junit. assert. assertfalse ( result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: , result )

************

************
tgt: org . junit . assert . assertequals ( expectedscript , observedscript )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( out. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( true ), out. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( true ), out. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), totest. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , peermap . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertfalse ( vdb. ismodified ( ) )
[2]: org. junit. assert. asserttrue ( vdb. ismodified ( ) )
[3]: org. junit. assert. assertequals ( false, vdb. ismodified ( ) )
[4]: org. junit. assert. assertnull ( vdb. ismodified ( ) )

************

************
tgt: org . junit . assert . assertequals ( expect , actual )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, elementposition )
[2]: org. junit. assert. assertequals ( 0, elementposition )
[3]: org. junit. assert. assertequals ( ( - 1 ), elementposition )
[4]: org. junit. assert. assertequals ( 3, elementposition )

************

************
tgt: org . junit . assert . assertnull ( cz . zcu . kiv . jop . util . primitiveutils . wrap ( null ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), result )
[2]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 10 ), result )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 5 ), result )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 4 ), result )

************

************
tgt: org . junit . assert . assertequals ( len , sub ( off , len ) . length ( ) )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 0 ), result )
[1]: org. junit. assert. assertnotnull ( mysecondservice. getrandomnumber ( ) )
[2]: org. junit. assert. assertequals ( 1, mysecondservice. getrandomnumber ( ) )
[3]: org. junit. assert. assertequals ( 0, mysecondservice. getrandomnumber ( ) )
[4]: org. junit. assert. assertequals ( 10, mysecondservice. getrandomnumber ( ) )

************

************
tgt: org . junit . assert . assertequals ( message , tooltip . getmessage ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( configuredcycle, builder. rollcycle ( ) )
[2]: org. junit. assert. assertequals ( configuredcycle, builder. rollbackcycle ( ) )
[3]: org. junit. assert. assertnotnull ( builder. rollcycle ( ) )
[4]: org. junit. assert. assertequals ( configuredcycle, builder. rollcycle )

************

************
tgt: org . junit . assert . asserttrue ( ( ( resultfromjpql . size ( ) ) > 0 ) )
[0]: ) )
[1]: org. junit. assert. assertthat ( directive. getfield ( ), org. hamcrest. matchers. is ( com. brandwatch. robots. domain. otherdirectivetest. field ) )
[2]: org. junit. assert. assertthat ( directive. getfield ( ), org. hamcrest. matchers. equalto ( com. brandwatch. robots. domain. otherdirectivetest. field ) )
[3]: org. junit. assert. assertthat ( directive. getfield ( ), org. hamcrest. matchers. is ( com. brandwatch. robots. domain. otherdirectivetest. value ) )
[4]: org. junit. assert. assertequals ( com. brandwatch. robots. domain. otherdirectivetest. field, directive. getfield ( ) )

************

************
tgt: org . junit . assert . asserttrue ( status . isavailable ( ) )
[0]: org. junit. assert. assertnotnull ( directive. getfield ( ) )
[1]: org. junit. assert. assertnotnull ( reader. unprocessedatoms ( ) )
[2]: org. junit. assert. assertequals ( hbmeta, hbmeta. getcolumnname ( ) )
[3]: org. junit. assert. assertnotnull ( hbmeta. getcolumnname ( ) )
[4]: org. junit. assert. assertnull ( hbmeta. getcolumnname ( ) )

************

************
tgt: org . junit . assert . assertequals ( "unhandledexception" , e . getmessage ( ) )
[0]: org. junit. assert. assertequals ( hbmeta. getcolumnname ( ), hbmeta )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, payload. getnumbuckets ( ) )
[3]: org. junit. assert. assertequals ( 0, payload. getnumbuckets ( ) )
[4]: org. junit. assert. assertequals ( 2, payload. getnumbuckets ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( 3, payload. getnumbuckets ( ) )
[1]: org. junit. assert. assertequals ( 1, vm. getnumbuckets ( ) )
[2]: org. junit. assert. assertequals ( pkgname, list. size ( ) )
[3]: org. junit. assert. assertequals ( pkgname,list. size ( ) )
[4]: org. junit. assert. assertequals ( pkgname, list )

************

************
tgt: org . junit . assert . assertequals ( 0 , preference . length )
[0]: org. junit. assert. assertequals ( pkgname )
[1]: ) )
[2]: org. junit. assert. assertequals ( 15, count )
[3]: org. junit. assert. assertequals ( 10, count )
[4]: org. junit. assert. assertequals ( 8, count )

************

************
tgt: org . junit . assert . assertequals ( filetypekeys , resultfiletypekeys )
[0]: org. junit. assert. assertequals ( 20, count )
[1]: , count )
[2]: org. junit. assert. assertequals ( 0, result. compareto ( origin ) )
[3]: org. junit. assert. assertfalse ( ( ( result. compareto ( origin ) ) == 0 ) )
[4]: org. junit. assert. asserttrue ( ( ( result. compareto ( origin ) ) < 0 ) )

************

************
tgt: org . junit . assert . assertnull ( configurationdescription )
[0]: org. junit. assert. assertequals ( 1, result. compareto ( origin ) )
[1]: org. junit. assert. assertfalse ( ( ( result. compareto ( origin ) ) < 0 ) )
[2]: org. junit. assert. assertequals ( time, result )
[3]: org. junit. assert. assertequals ( result, time )
[4]: org. junit. assert. assertequals ( new java. lang. long ( time ), result )

************

************
tgt: org . junit . assert . asserttrue ( ( count > 0 ) )
[0]: org. junit. assert. assertequals ( timestamp, result )
[1]: 
[2]: org. junit. assert. assertequals ( dest, index. get ( dest ) )
[3]: org. junit. assert. assertequals ( dest, dest )
[4]: org. junit. assert. assertequals ( dest, index. get ( dest. getclass ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( a1 , a2 )
[0]: org. junit. assert. assertequals ( dest, index )
[1]: org. junit. assert. assertequals ( dest, index. get ( dest. tostring ( ) ) )
[2]: org. junit. assert. assertfalse ( solution. equals ( null ) )
[3]: org. junit. assert. assertfalse ( solution. equals ( new java. lang. object ( ) ) )
[4]: org. junit. assert. assertfalse ( solution. equals ( java. lang. object. class ) )

************

************
tgt: org . junit . assert . assertthat ( allowedtowrite , org . hamcrest . core . is . is ( false ) )
[0]: org. junit. assert. assertfalse ( solution. equals ( new java. lang. string ( ) ) )
[1]: org. junit. assert. assertfalse ( solution. equals ( solution ) )
[2]: org. junit. assert. assertequals ( 1, sendedmails. size ( ) )
[3]: org. junit. assert. assertequals ( 0, sendedmails. size ( ) )
[4]: org. junit. assert. assertequals ( 1, sendsedmails. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, sendingedmails. size ( ) )
[1]: org. junit. assert. assertequals ( 1, sendedmail. size ( ) )
[2]: org. junit. assert. assertequals ( 1, i )
[3]: org. junit. assert. assertequals ( 0, i )
[4]: org. junit. assert. assertnotnull ( onemore. askey ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , users . size ( ) )
[0]: org. junit. assert. assertequals ( null, onemore. askey ( ) )
[1]: org. junit. assert. assertequals ( 1, onemore. askey ( ) )
[2]: org. junit. assert. assertequals ( 1, onemore. askey ( ). length )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( e. getvalidationreport ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , ( ( int ) ( d . getfirst ( ) ) ) )
[0]: org. junit. assert. assertequals ( 200, e. getvalidationreport ( ) )
[1]: org. junit. assert. assertequals ( 200, e. getvalidationreport ( ). 3 )
[2]: org. junit. assert. assertequals ( 3, e. getvalidationreport ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( expected, sql )

************

************
tgt: org . junit . assert . assertfalse ( driver . acceptsurl ( url ) )
[0]: org. junit. assert. assertequals ( sql, expected )
[1]: org. junit. assert. assertequals ( actual, sql )
[2]: , sql )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, configurable. getenabledprotocols ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 12 , e . getreturncode ( ) )
[0]: org. junit. assert. assertnotnull ( configurable. getenabledprotocols ( ) )
[1]: org. junit. assert. assertequals ( 1, configurable. getenabledprotocols ( ). length )
[2]: org. junit. assert. assertequals ( 0, configurable. getenabledprotocols ( ). length )
[3]: org. junit. assert. assertequals ( 0, configurable. getenabledprotocols ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. optional. empty ( ), limitorder )

************

************
tgt: org . junit . assert . assertequals ( 10 , env . kvendpoints ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( testconfig. illegalstateexception ), limitorder )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( testconfig. illegalstateexception. class ), limitorder )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( testconfig. workspace ), limitorder )
[3]: )
[4]: org. junit. assert. assertnotnull ( location )

************

************
tgt: org . junit . assert . assertthat ( rendered , org . hamcrest . corematchers . is ( test [ 1 ] ) )
[0]: org. junit. assert. assertequals ( location, location )
[1]: org. junit. assert. assertequals ( location, testberrara. getid ( ) )
[2]: org. junit. assert. assertequals ( location, testberraentity. getparent ( ) )
[3]: org. junit. assert. assertequals ( location, result )
[4]: org. junit. assert. assertnotnull ( v )

************

************
tgt: org . junit . assert . assertequals ( text , check )
[0]: org. junit. assert. assertequals ( 1, v. count )
[1]: org. junit. assert. assertequals ( 1, v. result )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnull ( makemodule ( null ) )

************

************
tgt: org . junit . assert . assertequals ( com . liferay . asset . test . util . asset . renderer . factory . testassetrendererfactory . class . getname ( ) , clazz . getname ( ) )
[0]: org. junit. assert. assertnotnull ( makemodule ( new org. uberfire. java. nio. file. path ( ) ) )
[1]: org. junit. assert. assertnotnull ( makemodule ( null ) )
[2]: org. junit. assert. assertequals ( null, makemodule ( new java. nio. file. path ( ) ) )
[3]: org. junit. assert. assertequals ( null, makemodule ( new java. lang. file. path ( ) ) )
[4]: org. junit. assert. assertnotnull ( queue. dequeue ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( queue. dequeue ( message ) )
[1]: org. junit. assert. assertnotnull ( queue )
[2]: org. junit. assert. assertnull ( queue )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( uaa. runtests ( false, true ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , search . getsize ( ) )
[0]: org. junit. assert. assertnotnull ( uaa. runtests ( false, false ) )
[1]: org. junit. assert. assertnotnull ( uaa. runtests ( true, true ) )
[2]: org. junit. assert. assertnotnull ( uaa. runtests ( true, false ) )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), squarescache. get ( 10 ) )
[4]: org. junit. assert. assertequals ( 1, ( ( int ) ( squarescache. get ( 5 ) ) ) )

************

************
tgt: org . junit . assert . asserttrue ( cmd . hasoption ( "verbose" ) )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), squarescache. get ( 5 ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), squarescache. get ( 1 ) )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), squarescache. get ( 10 ) )
[3]: org. junit. assert. assertequals ( 1, parsedrecords. size ( ) )
[4]: org. junit. assert. assertequals ( 0, parsedrecords. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , events )
[0]: org. junit. assert. assertequals ( numrecords, parsedrecords. size ( ) )
[1]: org. junit. assert. assertequals ( expected. size ( ), parsedrecords. length )
[2]: ) )
[3]: org. junit. assert. assertequals ( null, cache. get ( 1 ) )
[4]: org. junit. assert. assertequals ( null, queue. get ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( expected . tostring ( ) , response . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, this. dao. get ( 1 ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, this. dao. get ( 1 ). getid ( ) )
[2]: get ( 1 ) )
[3]: org. junit. assert. assertequals ( 1, resultfromjpql. size ( ) )
[4]: org. junit. assert. assertequals ( 2, resultfromjpql. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( tags != null ) && ( ( tags . size ( ) ) > 0 ) ) )
[0]: org. junit. assert. assertnotnull ( resultfromjpql )
[1]: org. junit. assert. assertequals ( 0, resultfromjpql. size ( ) )
[2]: org. junit. assert. assertequals ( 1, resultfromjpql. length )
[3]: org. junit. assert. assertequals ( p, np. getpredicate ( ) )
[4]: org. junit. assert. assertsame ( p, np. getpredicate ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( response )
[0]: org. junit. assert. assertnotnull ( np. getpredicate ( ) )
[1]: org. junit. assert. assertnull ( np. getpredicate ( ) )
[2]: )
[3]: org. junit. assert. asserttrue ( result. hasnext ( ) )
[4]: org. junit. assert. assertequals ( 1, billingstarttime )

************

************
tgt: org . junit . assert . assertequals ( testset , board . getcacheid ( ) )
[0]: org. junit. assert. assertequals ( 0, billingstarttime )
[1]: org. junit. assert. assertequals ( 12, billingstarttime )
[2]: org. junit. assert. assertequals ( cutoffday, billingstarttime )
[3]: org. junit. assert. assertequals ( cc, billingstarttime )
[4]: org. junit. assert. assertequals ( 0, list. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertequals ( zero, list. size ( ) )
[2]: org. junit. assert. assertequals ( 0, size ( ) )
[3]: org. junit. assert. assertequals ( 0, list. size ( ) ) ;
[4]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), net. vidageek. mirror. fixtures. methodfixture. getargnum ( ) )

************

************
tgt: org . junit . assert . assertequals ( plugin , retrieved )
[0]: org. junit. assert. assertequals ( new java. lang. integer ( 2 ), net. vidageek. mirror. fixtures. methodfixture. getargnum ( ) )
[1]: org. junit. assert. assertequals ( name, entity. getname ( ) )
[2]: org. junit. assert. assertequals ( null, entity. getname ( ) )
[3]: org. junit. assert. assertequals ( 1, entity. getname ( ) )
[4]: org. junit. assert. assertequals ( string, entity. getname ( ) )

************

************
tgt: org . junit . assert . assertfalse ( session . isexpired ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. class. getname ( ) )
[1]: null ), resolver )
[2]: null, resolver )
[3]: null ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( username != null ) )
[0]: null )
[1]: org. junit. assert. assertequals ( expectedpartitionsfortask, grouper. partitiongroups ( topicgroups, null ) )
[2]: org. junit. assert. assertequals ( expectedpartitionsfortask, grouper. partitiongroups ( topicgroups, mockpartitionsfortask ) )
[3]: org. junit. assert. assertequals ( 0, map. size ( ) )
[4]: org. junit. assert. assertequals ( 1, map. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , deuteriumcount )
[0]: org. junit. assert. assertequals ( zero, map. size ( ) )
[1]: org. junit. assert. assertequals ( 0, maps. size ( ) )
[2]: org. junit. assert. assertequals ( null, map. size ( ) )
[3]: org. junit. assert. assertequals ( 1, models. size ( ) )
[4]: org. junit. assert. assertthat ( models. size ( ), org. hamcrest. matchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( 7 , count )
[0]: org. junit. assert. assertthat ( models. size ( ), org. hamcrest. matchers. is ( 0 ) )
[1]: org. junit. assert. assertequals ( 0, models. size ( ) )
[2]: org. junit. assert. assertthat ( models. size ( ), is ( 1 ) )
[3]: org. junit. assert. assertequals ( 0, entries. size ( ) )
[4]: org. junit. assert. asserttrue ( ( ( entries. size ( ) ) == 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , path . getsegmentcount ( ) )
[0]: org. junit. assert. asserttrue ( entries. isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, entries. size ( ) )
[2]: org. junit. assert. asserttrue ( ( ( entries. size ( ) ) > 0 ) )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( list, result )

************

************
tgt: org . junit . assert . assertarrayequals ( new int [ ] { 6 } , a . getints ( ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( 1, result. count ( ) )
[2]: org. junit. assert. assertequals ( result, list )
[3]: org. junit. assert. assertequals ( 1, actors. size ( ) )
[4]: org. junit. assert. assertnotnull ( graphdb )

************

************
tgt: org . junit . assert . assertthat ( com . annimon . stream . doublestream . empty ( ) , isempty ( ) )
[0]: org. junit. assert. asserttrue ( actors. exists ( storedir ) )
[1]: ) )
[2]: 
[3]: org. junit. assert. assertequals ( 1, sut. checkwithintime ( datetime ) )
[4]: org. junit. assert. assertequals ( 0, parent. indexofchild ( child ) )

************

************
tgt: org . junit . assert . assertequals ( a , b )
[0]: org. junit. assert. assertequals ( 0, parent. indexofclass ( child ) )
[1]: org. junit. assert. assertnull ( parent. indexofchild ( child ) )
[2]: org. junit. assert. assertequals ( 0l, parent. indexofchild ( child ) )
[3]: org. junit. assert. assertequals ( 0, parent. indexofchild ( child ), 0 )
[4]: org. junit. assert. assertnull ( validator. validate ( connection ) )

************

************
tgt: org . junit . assert . assertsame ( innode , result )
[0]: org. junit. assert. assertequals ( 0, obj. s31 ( ) )
[1]: org. junit. assert. assertnotnull ( obj. s31 ( ) )
[2]: org. junit. assert. assertequals ( 1, obj. s31 ( ) )
[3]: org. junit. assert. assertequals ( out1, out2 )
[4]: org. junit. assert. assertequals ( out1. tobytearray ( ), out2. tobytearray ( ) )

************

************
tgt: org . junit . assert . assertequals ( sizebefore , getsizeofstringstore ( ) )
[0]: org. junit. assert. assertequals ( 0, tokens. size ( ) )
[1]: org. junit. assert. assertequals ( r, error )
[2]: org. junit. assert. assertequals ( r, err )
[3]: org. junit. assert. assertequals ( r, errors )
[4]: , error )

************

************
tgt: org . junit . assert . assertequals ( a . eq ( false ) , a . isfalse ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( foo, getter. get ( foo ) )
[2]: org. junit. assert. assertnotnull ( getter. get ( foo ) )
[3]: org. junit. assert. assertnull ( getter. get ( foo ) )
[4]: org. junit. assert. assertequals ( null, getter. get ( foo ) )

************

************
tgt: org . junit . assert . assertfalse ( this . classundertest ( ) . notempty ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, listmodel. getavailablestudies ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, listmodel. getavailablestudies ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, allstudies. size ( ) )
[4]: org. junit. assert. assertequals ( selectionlist, allstudies )

************

************
tgt: org . junit . assert . assertnotnull ( converter )
[0]: org. junit. assert. assertequals ( listmodel. getavailablestudies ( ), allstudies )
[1]: org. junit. assert. assertequals ( 1, sid. length ( ) )
[2]: org. junit. assert. assertequals ( 0, sid. length ( ) )
[3]: org. junit. assert. assertequals ( 0l, sid. length ( ) )
[4]: org. junit. assert. assertequals ( 3, sid. length ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( 6, sid. length ( ) )
[1]: org. junit. assert. assertnotnull ( upload. gettext ( ) )
[2]: org. junit. assert. assertequals ( 1, upload. gettext ( ). size ( ) )
[3]: org. junit. assert. assertequals ( null, upload. gettext ( ) )
[4]: org. junit. assert. assertequals ( 0, upload. gettext ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, upload. gettext ( ). length ( ) )
[1]: org. junit. assert. assertequals ( 1, messages. size ( ) )
[2]: org. junit. assert. assertequals ( 0, messages. size ( ) )
[3]: org. junit. assert. assertequals ( 3, messages. size ( ) )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . assertequals ( 0 , os . size ( ) )
[0]: org. junit. assert. assertequals ( 0, result )
[1]: org. junit. assert. assertequals ( 200, result )
[2]: org. junit. assert. assertequals ( 10, result )
[3]: ) )
[4]: org. junit. assert. assertfalse ( presenter. hasinverseview ( ) )

************

************
tgt: org . junit . assert . assertequals ( "yyyy-mm-dd" , instance2 . getstring ( "xyz" ) )
[0]: org. junit. assert. assertequals ( false, presenter. hasinverseview ( ) )
[1]: org. junit. assert. assertnull ( presenter. hasinverseview ( ) )
[2]: org. junit. assert. assertfalse ( presenter. haveinverseview ( ) )
[3]: org. junit. assert. assertequals ( 0, presenter. hasinverseview ( ) )
[4]: org. junit. assert. assertequals ( 1, iterable. distinct ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( assetcontent , localizedasset )
[0]: org. junit. assert. assertequals ( null, iterable. distinct ( ). tolist ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. distinct ( ), iterable. distinct ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), iterable. distinct ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1.0 ), iterable )
[4]: org. junit. assert. assertequals ( 1, errors. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( year . equals ( year ) )
[0]: org. junit. assert. assertequals ( 0, errors. size ( ) )
[1]: org. junit. assert. assertequals ( 1, entity. getcoordinates ( ). length )
[2]: org. junit. assert. assertequals ( 0, entity. getcoordinates ( ). length )
[3]: org. junit. assert. assertnotnull ( entity. getcoordinates ( ) )
[4]: org. junit. assert. assertequals ( 3, entity. getcoordinates ( ). length )

************

************
tgt: org . junit . assert . assertequals ( assertion , newtest )
[0]: org. junit. assert. assertnull ( entity. getcoordinates ( ) )
[1]: org. junit. assert. asserttrue ( modelinstancecollection01. equals ( modelinstancecollection02 ) )
[2]: org. junit. assert. assertequals ( expectedicon ( node ), treecell. geticon ( ) )
[3]: org. junit. assert. assertequals ( expectedicon ( ), treecell. geticon ( ) )
[4]: org. junit. assert. assertequals ( expectedicon ( node ), treecell )

************

************
tgt: org . junit . assert . assertequals ( mocklocation , currentlocationprovider . getlocation ( ) )
[0]: org. junit. assert. assertequals ( expectedicon ( ), treecell )
[1]: org. junit. assert. assertequals ( expectedicon ( "error ), treecell )
[2]: org. junit. assert. assertarrayequals ( expected, buffer. getbytes ( ) )
[3]: org. junit. assert. assertequals ( 2, msg. readunsignedbyte ( ) )
[4]: org. junit. assert. assertequals ( 2, msg. readunsignedbyte ( ), 0 )

************

************
tgt: org . junit . assert . assertequals ( c . intersects ( r ) , e2d . intersects ( r2d ) )
[0]: org. junit. assert. assertequals ( 3, msg. readunsignedbyte ( ) )
[1]: org. junit. assert. assertequals ( 1, msg. readunsignedbyte ( ) )
[2]: org. junit. assert. assertequals ( 2, msg. readunsignedbyte ( ), 0.0 )
[3]: org. junit. assert. assertequals ( 0, ln. compareto ( ln2 ) )
[4]: org. junit. assert. assertequals ( 1, ln. compareto ( ln2 ) )

************

************
tgt: org . junit . assert . assertsame ( classloader , exampleclass . getclassloader ( ) )
[0]: org. junit. assert. assertequals ( 0, ln2. compareto ( ln2 ) )
[1]: org. junit. assert. assertequals ( 1, ln2. compareto ( ln2 ) )
[2]: org. junit. assert. assertequals ( ( - 1 ), ln. compareto ( ln2 ) )
[3]: org. junit. assert. assertequals ( stringcount, stringcount2 )
[4]: org. junit. assert. assertequals ( stringcount, ( stringcount2 + stringcount2 ) )

************

************
tgt: org . junit . assert . assertnotnull ( tasks )
[0]: org. junit. assert. assertequals ( 1, ( stringcount + stringcount2 ) )
[1]: org. junit. assert. assertequals ( ( stringcount + 1 ), stringcount2 )
[2]: org. junit. assert. assertequals ( stringcount, ( stringcount2 - stringcount2 ) )
[3]: org. junit. assert. assertnotnull ( e )
[4]: org. junit. assert. asserttrue ( false )

************

************
tgt: org . junit . assert . assertequals ( 100 , results . size ( ) )
[0]: org. junit. assert. asserttrue ( true )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 1, total )
[4]: org. junit. assert. assertequals ( 0, total )

************

************
tgt: org . junit . assert . assertthat ( notified . get ( ) , org . hamcrest . corematchers . equalto ( true ) )
[0]: org. junit. assert. assertequals ( 5, total )
[1]: org. junit. assert. assertequals ( 2, total )
[2]: org. junit. assert. assertequals ( 3, total )
[3]: org. junit. assert. assertequals ( 70.0, var, 0.0 )
[4]: org. junit. assert. assertequals ( 70.0, var, 1.0 )

************

************
tgt: org . junit . assert . asserttrue ( resultmessage ( res , reassignhostcontext . reassign_host ) , res . passedvalidation ( ) )
[0]: org. junit. assert. assertequals ( 70.0, var, 0 )
[1]: org. junit. assert. assertequals ( 70.0, var, 1 )
[2]: org. junit. assert. assertnotnull ( var )
[3]: org. junit. assert. assertequals ( 1, records. size ( ) )
[4]: org. junit. assert. assertequals ( 0, records. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( rc . contains ( subset ) )
[0]: org. junit. assert. assertequals ( 3, records. size ( ) )
[1]: org. junit. assert. assertequals ( 4, records. size ( ) )
[2]: org. junit. assert. assertequals ( 2, records. size ( ) )
[3]: org. junit. assert. assertequals ( status. ready, status )
[4]: org. junit. assert. assertequals ( status. finished, status )

************

************
tgt: org . junit . assert . assertequals ( pl , org . ektorp . pagerequest . fromlink ( link ) )
[0]: org. junit. assert. assertequals ( status, status )
[1]: org. junit. assert. assertequals ( status. ready, state )
[2]: status. ready )
[3]: org. junit. assert. assertequals ( expectedlist, resultlist )
[4]: org. junit. assert. assertequals ( 1, resultlist. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( extractor )
[0]: org. junit. assert. assertnotnull ( resultlist )
[1]: org. junit. assert. assertequals ( expectedlist, resultlist. size ( ) )
[2]: org. junit. assert. assertequals ( result, expectedlist )
[3]: org. junit. assert. assertfalse ( result )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "testcreatestyledstring" , styledtext . getstring ( ) )
[0]: org. junit. assert. assertequals ( 5, result. size ( ) )
[1]: org. junit. assert. assertequals ( 4, result. size ( ) )
[2]: org. junit. assert. assertequals ( 3, result. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( c )

************

************
tgt: org . junit . assert . assertthat ( meldingen . size ( ) , org . hamcrest . core . is . is ( 2 ) )
[0]: org. junit. assert. assertequals ( 1, c. count )
[1]: org. junit. assert. assertequals ( 0, c. count )
[2]: org. junit. assert. assertequals ( 1, c. s )
[3]: ) )
[4]: org. junit. assert. assertequals ( availabilitystatus, confirmation. getstatus ( ) )

************

************
tgt: org . junit . assert . assertequals ( outputassertion , out )
[0]: org. junit. assert. assertequals ( availabilitystatus, confirmation. getstatus ( ). getcode ( ) )
[1]: org. junit. assert. assertequals ( availabilitystatus, confirmation. getstatus ( ). get ( ) )
[2]: org. junit. assert. assertequals ( availabilitystatus, confirmation. getstatus ( ). gettype ( ) )
[3]: org. junit. assert. assertequals ( availabilitystatus, confirmation. getstatus ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( 1, store. read ( 1, null, 0, 1 ) )

************

************
tgt: org . junit . assert . assertequals ( entry . getvalue ( ) , memcache . get ( entry . getkey ( ) ) )
[0]: org. junit. assert. assertequals ( 1, store. read ( 0, null, 0, 1 ) )
[1]: org. junit. assert. assertequals ( 1, store. read ( 1, null, 1, 0 ) )
[2]: org. junit. assert. assertequals ( 1, store. read ( 1, null, 0, 0 ) )
[3]: org. junit. assert. assertequals ( 0, store. read ( 1, null, 0, 1 ) )
[4]: org. junit. assert. assertnotnull ( output )

************

************
tgt: org . junit . assert . asserttrue ( hasrelationship )
[0]: org. junit. assert. assertnull ( output )
[1]: org. junit. assert. assertequals ( null, output )
[2]: org. junit. assert. assertequals ( ""test"", output )
[3]: org. junit. assert. assertequals ( ""foo"", output )
[4]: org. junit. assert. assertequals ( jdbccompatibility. high, org. apache. jena. jdbc. jdbccompatibility. normalizelevel ( i ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , _statehandler . getclients ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( jdbccompatibility. low, org. apache. jena. jdbc. jdbccompatibility. normalizelevel ( i ) )
[1]: org. junit. assert. assertequals ( sqlcompatibility. high, org. apache. jena. jdbc. jdbccompatibility. normalizelevel ( i ) )
[2]: org. junit. assert. asserttrue ( result. passedvalidation ( ) )
[3]: org. junit. assert. assertequals ( true, m. matches ( ) )
[4]: org. junit. assert. asserttrue ( org. apache. jackrabbit. oak. spi. security. user. util. passwordutil. issame ( invalid, hash ) )

************

************
tgt: org . junit . assert . asserttrue ( rs . next ( ) )
[0]: org. junit. assert. assertfalse ( org. apache. jackrabbit. oak. spi. security. user. util. passwordutil. issame ( invalid, hash ) )
[1]: org. junit. assert. assertnull ( org. apache. jackrabbit. oak. spi. security. user. util. passwordutil. issame ( invalid, hash ) )
[2]: org. junit. assert. asserttrue ( org. apache. jackrabbit. oak. spi. security. user. util. passwordutil. issame ( valid, hash ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 7, int_field. getintfield ( ) )

************

************
tgt: org . junit . assert . asserttrue ( config . isclientenable ( ) )
[0]: org. junit. assert. assertequals ( 7, int_field. getintfield ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 8, int_field. getintfield ( ) )
[2]: org. junit. assert. assertequals ( 5, int_field. getintfield ( ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( e. getmessage ( ). contains ( mkto ) )

************

************
tgt: org . junit . assert . asserttrue ( usergroupgrouproles . isempty ( ) )
[0]: org. junit. assert. assertequals ( mkto. getmessage ( ), e. getmessage ( ) )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( mkto, e. getmessage ( ) )
[3]: . getmessage ( ) )
[4]: org. junit. assert. assertequals ( 0, urls. length )

************

************
tgt: org . junit . assert . assertequals ( expectedurl , authorizationurl )
[0]: org. junit. assert. assertequals ( 1, urls. length )
[1]: org. junit. assert. assertequals ( 2, urls. length )
[2]: org. junit. assert. assertequals ( 3, urls. length )
[3]: org. junit. assert. assertnotnull ( urls )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( p1, coplanarback ), coplanarback )

************

************
tgt: org . junit . assert . assertequals ( d , copy )
[0]: org. junit. assert. assertequals ( url, suffix )
[1]: org. junit. assert. assertnotnull ( suffix )
[2]: org. junit. assert. assertequals ( uri, suffix )
[3]: org. junit. assert. assertequals ( string, suffix )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( createdsupervisor , gotsupervisor )
[0]: org. junit. assert. assertequals ( true, retval )
[1]: org. junit. assert. assertnotnull ( e. edit ( ) )
[2]: org. junit. assert. assertnotnull ( e. edit ( ). get ( ) )
[3]: org. junit. assert. assertnotnull ( e. edit ( ). getid ( ) )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertthat ( lineitems . contains ( newlineitem ) , org . hamcrest . core . is . is ( true ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, stats. count ( ) )
[2]: org. junit. assert. assertequals ( 1, stats. size ( ) )
[3]: org. junit. assert. assertequals ( 1, stats. count )
[4]: org. junit. assert. assertequals ( 1, stats. getid ( ) )

************

************
tgt: org . junit . assert . assertsame ( _partitionfilter , service . getpartitionfilter ( ) )
[0]: org. junit. assert. assertequals ( 1, stats. counter )
[1]: org. junit. assert. assertequals ( true, invoked [ 0 ] )
[2]: org. junit. assert. assertnull ( formatted )
[3]: org. junit. assert. assertequals ( 0, formatted )
[4]: org. junit. assert. assertequals ( null, formatted )

************

************
tgt: org . junit . assert . assertequals ( 0 , headers . length )
[0]: org. junit. assert. assertnotnull ( formatted )
[1]: , formatted )
[2]: org. junit. assert. assertequals ( 1, branch_conditions. size ( ) )
[3]: org. junit. assert. assertequals ( 0, branch_conditions. size ( ) )
[4]: org. junit. assert. assertequals ( 1, branch_conditions. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( 3, branch_conditions. size ( ) )
[1]: org. junit. assert. assertequals ( 1, branch.conditions. size ( ) )
[2]: org. junit. assert. assertequals ( 0, pfs. size ( ) )
[3]: org. junit. assert. assertequals ( 1, pfs. size ( ) )
[4]: org. junit. assert. assertequals ( 3, pfs. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "test<sp>page" , page . asstring ( ) )
[0]: org. junit. assert. assertequals ( zero, pfs. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, ( ( int ) ( deque. capacity ( ) ) ) )
[3]: org. junit. assert. assertequals ( 0, ( ( int ) ( deque. capacity ( ) ) ) )
[4]: org. junit. assert. assertequals ( 1, deque. capacity ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , result )
[0]: org. junit. assert. assertequals ( 0, deque. capacity ( ) )
[1]: org. junit. assert. assertequals ( 1, ( ( int ) ( deque. capacity ( ) ) ) ) ;
[2]: org. junit. assert. assertequals ( sb. getvalue ( ). tostring ( ), ex. getvalue ( ). tostring ( ) )
[3]: org. junit. assert. assertequals ( sb. getvalue ( ). tostring ( ), ex. getvalue ( ). getstring ( ) )
[4]: org. junit. assert. assertequals ( sb. getvalue ( ). get ( ), ex. getvalue ( ). get ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( node )
[0]: org. junit. assert. assertequals ( sb. getvalue ( ). getstring ( ), ex. getvalue ( ). getstring ( ) )
[1]: org. junit. assert. assertequals ( 1, ex. getvalue ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( value )
[3]: org. junit. assert. assertequals ( value, 1 )
[4]: org. junit. assert. assertequals ( 1, value )

************

************
tgt: org . junit . assert . assertfalse ( org . threadly . util . exceptionutils . hascauseoftype ( e , org . threadly . util . illegalargumentexception . class ) )
[0]: org. junit. assert. assertequals ( value, null )
[1]: org. junit. assert. assertnull ( value )
[2]: org. junit. assert. assertequals ( contenttype, contenttype )
[3]: org. junit. assert. assertequals ( contenttype, contenttype. getcontenttype ( ) )
[4]: org. junit. assert. assertequals ( contenttype, contenttype, contenttype )

************

************
tgt: org . junit . assert . asserttrue ( ( result < 0 ) )
[0]: org. junit. assert. assertequals ( contenttype, request. getcontenttype ( ) )
[1]: org. junit. assert. assertnotnull ( contenttype, contenttype )
[2]: org. junit. assert. assertequals ( history, deserialized )
[3]: org. junit. assert. assertequals ( history, deserialized. getreferencedate ( ) )
[4]: org. junit. assert. assertequals ( history. getreferencedate ( ), deserialized )

************

************
tgt: org . junit . assert . asserttrue ( jsonexpected . equals ( jsonperson ) )
[0]: org. junit. assert. assertequals ( history, deserialized )
[1]: org. junit. assert. assertequals ( history } deserialized. getreferencedate ( ) )
[2]: org. junit. assert. assertthat ( actual, is ( org. hamcrest. corematchers. equalto ( expected ) ) )
[3]: org. junit. assert. assertthat ( expected, org. hamcrest. corematchers. is ( actual ) )
[4]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( expected ) )

************

************
tgt: org . junit . assert . asserttrue ( blogsstatsusers . isempty ( ) )
[0]: org. junit. assert. assertthat ( actual, is ( equalto ( expected ) ) )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( expected, xcontentbuildertostring ( xcontentbuilder ) )
[3]: org. junit. assert. assertequals ( expected, xcontentbuilder. xcontentbuildertostring ( xcontentbuilder ) )
[4]: org. junit. assert. assertequals ( expected, xcontentbuildertostring ( xcontentbuilder. getid ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( maximumeven , portmanager . gethighest ( ) )
[0]: org. junit. assert. assertequals ( expected, xcontentbuilder tostring ( xcontentbuilder ) )
[1]: org. junit. assert. assertequals ( expected, xcontentbuilder. xcontentbuildertostring ( xcontenttest ) )
[2]: org. junit. assert. assertequals ( 0, result. get ( ) )
[3]: org. junit. assert. assertequals ( 1, result. get ( ) )
[4]: org. junit. assert. assertequals ( zero, result. get ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: get ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( cheesy, textarea. gettext ( ) )
[3]: org. junit. assert. assertnotnull ( textarea. gettext ( ) )
[4]: org. junit. assert. asserttrue ( textarea. gettext ( ). contains ( cheesy ) )

************

************
tgt: org . junit . assert . assertnotnull ( subject )
[0]: org. junit. assert. assertsame ( cheesy, textarea. gettext ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_tdsldap_ssltest. servlet. getgroupdisplayname ( group ) )
[3]: org. junit. assert. assertequals ( null, com. ibm. ws. security. wim. adapter. ldap. fat. urapis_tdsldap_ssltest. servlet. getgroupdisplayname ( group ) )
[4]: org. junit. assert. assertequals ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_tdsldap_ssltest. servlet. getgroupdisplayname ( group ), group )

************

************
tgt: org . junit . assert . assertthat ( url , org . hamcrest . matchers . is ( org . codice . ddf . spatial . kml . transformer . testdescriptiontemplatehelper . default_uri ) )
[0]: org. junit. assert. assertequals ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_tdsldap_ssltest. servlet. getgroupdisplayname ( group ), ( group + 1 ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( group ), com. ibm. ws. security. wim. adapter. ldap. fat. urapis_tdsldap_ssltest. servlet )
[2]: org. junit. assert. assertequals ( expectedproperties, properties )
[3]: org. junit. assert. assertequals ( expectedproperties, props )
[4]: org. junit. assert. assertequals ( properties, expectedproperties )

************

************
tgt: org . junit . assert . assertequals ( 0 , bslist . size ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 1, comparison )
[3]: org. junit. assert. assertequals ( 0, comparison )
[4]: org. junit. assert. assertequals ( 2, comparison )

************

************
tgt: org . junit . assert . assertnotnull ( cookie . getexpirydate ( ) )
[0]: org. junit. assert. assertequals ( comparison, 1 )
[1]: ) )
[2]: org. junit. assert. assertequals ( w, sorted. next ( ) )
[3]: org. junit. assert. assertequals ( w, check. next ( ) )
[4]: org. junit. assert. assertequals ( w, w. next ( ) )

************

************
tgt: org . junit . assert . assertthat ( cookie . getdomain ( ) , org . hamcrest . corematchers . equalto ( "domain.com" ) )
[0]: org. junit. assert. assertnull ( w. next ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( applicationsessioncookieconfig. equals ( context ) )
[3]: org. junit. assert. asserttrue ( applicationsessioncookieconfig. equals ( applicationsessioncookieconfig ) )
[4]: org. junit. assert. asserttrue ( applicationsessioncookieconfig. equals ( java. lang. object. class ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , decodedmessage . getid ( ) )
[0]: org. junit. assert. asserttrue ( applicationsessioncookieconfig. equals ( root ) )
[1]: org. junit. assert. asserttrue ( applicationsessioncookieconfig. equals ( java. lang. string. class ) )
[2]: org. junit. assert. assertequals ( 0, value )
[3]: org. junit. assert. assertequals ( 1, value )
[4]: org. junit. assert. assertequals ( ( - 1 ), value )

************

************
tgt: org . junit . assert . assertnotnull ( attrs )
[0]: org. junit. assert. asserttrue ( ( value > 0 ) )
[1]: org. junit. assert. assertequals ( 0l, value )
[2]: org. junit. assert. assertequals ( 1, mountscontainedbetweenpaths. size ( ) )
[3]: org. junit. assert. assertequals ( 0, mountscontainedbetweenpaths. size ( ) )
[4]: org. junit. assert. assertequals ( providers, applicationcontext. getproviders ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertarrayequals ( examplemessages. important_quote_text, plainba. tobytearray ( ) )
[1]: org. junit. assert. assertequals ( examplemessages. important_quote_text, plainba. tobytearray ( ) )
[2]: org. junit. assert. assertarrayequals ( examplemessages. important_quote_text. getbytes ( ), plainba )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( expected, prefix )
[1]: org. junit. assert. assertequals ( expected1, prefix )
[2]: org. junit. assert. assertequals ( expected, processed )
[3]: org. junit. assert. assertequals ( expected, name )
[4]: org. junit. assert. assertequals ( expected. get ( ), prefix )

************

************
tgt: org . junit . assert . asserttrue ( flag . get ( ) )
[0]: org. junit. assert. assertequals ( 1, scc. gettruecomponents ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, snapshotlist. size ( ) )
[2]: org. junit. assert. assertequals ( 0, snapshotlist. size ( ) )
[3]: org. junit. assert. assertequals ( 2, snapshotlist. size ( ) )
[4]: org. junit. assert. assertequals ( 3, snapshotlist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , position )
[0]: org. junit. assert. assertequals ( 4, snapshotlist. size ( ) )
[1]: org. junit. assert. assertequals ( 1, albumpreviews. size ( ) )
[2]: org. junit. assert. assertequals ( 0, albumpreviews. size ( ) )
[3]: org. junit. assert. assertequals ( 5, albumpreviews. size ( ) )
[4]: org. junit. assert. assertequals ( 1, songpreviews. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( entity2 . getid ( ) . getvalue ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( 3, albumpreviews. size ( ) )
[1]: org. junit. assert. assertequals ( new java. lang. integer ( 0 ), decoder. decode ( """" ) )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( 0 ), decoder. decode ( null ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 0 ), decoder. decode ( """" ) )
[4]: org. junit. assert. assertequals ( 0, decoder. decode ( null ). length )

************

************
tgt: org . junit . assert . assertequals ( 6 , p . f ( 4 ) )
[0]: org. junit. assert. assertequals ( new java. lang. integer ( 0 ), decoder. decode ( java. lang. string. class ) )
[1]: org. junit. assert. assertequals ( 1, world. bentobox. bentobox. managers. ranksmanagertest. ranksmanager. getrankvalue ( null ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, world. bentobox. bentobox. managers. ranksmanagertest. ranksmanager. getrankvalue ( 1 ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, world. bentobox. bentobox. managers. ranksmanagertest. ranksmanager. getrankvalue ( java. lang. string. class ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, world. bentobox. bentobox. managers. ranksmanagertest. ranksmanager. getrankvalue ( 0 ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1000 , custom )
[0]: org. junit. assert. assertequals ( 1, world. bentobox. bentobox. managers. ranksmanagertest. ranksmanager. getrankvalue ( java. lang. string. class. getname ( ) ) )
[1]: org. junit. assert. assertequals ( 1, result )
[2]: org. junit. assert. assertequals ( bnode, bid )
[3]: org. junit. assert. assertequals ( bid, bnode )
[4]: org. junit. assert. assertequals ( null, bid )

************

************
tgt: org . junit . assert . assertnotnull ( orden . getid ( ) )
[0]: org. junit. assert. assertequals ( expected, bid )
[1]: org. junit. assert. assertequals ( bb, bid )
[2]: org. junit. assert. assertnotnull ( msg. gettext ( ) )
[3]: org. junit. assert. assertequals ( msg. gettext ( ), null )
[4]: org. junit. assert. assertequals ( message, msg. gettext ( ) )

************

************
tgt: org . junit . assert . assertfalse ( resultaat . getmeldingen ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( msg. gettext ( ), dummymessage )
[1]: ) )
[2]: org. junit. assert. assertequals ( before, after )
[3]: org. junit. assert. assertequals ( ( before + 1 ), after )
[4]: org. junit. assert. assertequals ( expectedjson, generatedjson )

************

************
tgt: org . junit . assert . assertthat ( thing . getstatusinfo ( ) , org . hamcrest . corematchers . is ( statusinfo ) )
[0]: org. junit. assert. assertequals ( expectedjson, generatedjson. trim ( ) )
[1]: org. junit. assert. assertequals ( resultjson, generatedjson )
[2]: org. junit. assert. assertequals ( actualjson, generatedjson )
[3]: ) )
[4]: org. junit. assert. asserttrue ( result )

************

************
tgt: org . junit . assert . asserttrue ( shellavailable . test ( ) )
[0]: org. junit. assert. assertequals ( true, result )
[1]: org. junit. assert. assertequals ( n, s. insert ( n, m, i, j ) )
[2]: org. junit. assert. assertequals ( n, s. insert ( n, m, j, i ) )
[3]: org. junit. assert. assertequals ( n, insert ( n, m, i, j ) )
[4]: org. junit. assert. assertequals ( n, insert ( n, m, j, i ) )

************

************
tgt: org . junit . assert . assertequals ( expected , x )
[0]: org. junit. assert. assertequals ( x, s. insert ( n, m, j, i ) )
[1]: org. junit. assert. asserttrue ( ex. getmessage ( ). isempty ( ) )
[2]: org. junit. assert. assertequals ( 1, computecount. totalcountonreference ( ) )
[3]: org. junit. assert. assertequals ( 0, computecount. totalcountonreference ( ) )
[4]: org. junit. assert. assertequals ( 1l, computecount. totalcountonreference ( ) )

************

************
tgt: org . junit . assert . assertthat ( instance , is ( equalto ( unparceledinstance ) ) )
[0]: org. junit. assert. assertequals ( originalsitenavigationmenu. getsitenavigationmenuid ( ), updatedsitenavigationmenu. getname ( ) )
[1]: org. junit. assert. assertequals ( fullitenavigationmenu. getsitenavigationmenuid ( ), updatedsitenavigationmenu. getname ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class. getname ( ), updatedsitenavigationmenu. getname ( ) )
[3]: org. junit. assert. assertequals ( name, updatedsitenavigationmenu. getname ( ) )
[4]: org. junit. assert. assertnotnull ( updatedsitenavigationmenu. getname ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( dao . listdisplayvacanciesforwaitlistprogram ( 1 ) )
[0]: org. junit. assert. assertequals ( 3, actualdayofmonth )
[1]: org. junit. assert. assertequals ( 1, actualdayofmonth )
[2]: org. junit. assert. assertthat ( actualdayofmonth )
[3]: org. junit. assert. assertthat ( actualdayofmonth, org. hamcrest )
[4]: org. junit. assert. assertequals ( 3, actualdayofmonth, 0 )

************

************
tgt: org . junit . assert . assertfalse ( auth . isserverallowed ( ) )
[0]: org. junit. assert. assertnull ( integers. detectwith ( null, null ) )
[1]: org. junit. assert. assertnull ( integers. detectwith ( 1, null ) )
[2]: org. junit. assert. assertnull ( integers. detectwith ( java. lang. integer. valueof ( 1 ), integers ) )
[3]: org. junit. assert. assertnull ( integers. detectwith ( object :: equals, null ) )
[4]: org. junit. assert. assertnull ( integers. detectwith ( java. lang. integer. valueof ( 1 ), null ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , twolistwildcardslistresult . getparameters ( ) . size ( ) )
[0]: org. junit. assert. asserttrue ( report. haserror ( ) )
[1]: org. junit. assert. assertnotnull ( servicemanager. getserviceconfig ( null, config ) )
[2]: org. junit. assert. assertnotnull ( servicemanager. getserviceconfig ( name, config ) )
[3]: org. junit. assert. assertnotnull ( servicemanager. getserviceconfig ( null, null ) )
[4]: org. junit. assert. assertnotnull ( servicemanager )

************

************
tgt: org . junit . assert . assertequals ( "23" , output . tostring ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( datawave. query. jexl. functions. contentfunctionstest. expect, o )
[2]: org. junit. assert. assertequals ( 3, o )
[3]: org. junit. assert. assertequals ( list3, o )
[4]: org. junit. assert. assertequals ( true, o )

************

************
tgt: org . junit . assert . assertequals ( 2 , actual . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[2]: org. junit. assert. assertequals ( ( ( sqltext + ""\n"" ) + sqltext ), expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[3]: org. junit. assert. assertequals ( ( ( ""\n"" + sqltext ) + ""\n"" ), expected, testutils. formattedresult. resultfactory. tostring ( rs ) )
[4]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostring ( rs ) )

************

************
tgt: org . junit . assert . assertfalse ( group . isshoworigin ( ) )
[0]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs, 0 ) )
[1]: org. junit. assert. asserttrue ( optionalsubject. validate ( ) )
[2]: org. junit. assert. assertequals ( null, output )
[3]: org. junit. assert. assertequals ( expected, output )
[4]: org. junit. assert. assertnotnull ( output )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( string, output )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( 1, countmap1. size ( ) )
[3]: org. junit. assert. assertequals ( count, countmap1. size ( ) )
[4]: org. junit. assert. assertequals ( count, countmap1 )

************

************
tgt: org . junit . assert . assertequals ( 0 , net . jonbell . examples . methodprof . profilelogger . dump ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 0, countmap1. size ( ) )
[1]: org. junit. assert. assertequals ( 3, countmap1. size ( ) )
[2]: org. junit. assert. assertnotnull ( scheme )
[3]: org. junit. assert. assertnull ( scheme )
[4]: org. junit. assert. assertequals ( 1, scheme )

************

************
tgt: org . junit . assert . assertequals ( 1 , 1 )
[0]: org. junit. assert. assertequals ( 0, scheme )
[1]: org. junit. assert. assertequals ( 1, scheme. length ( ) )
[2]: org. junit. assert. assertnotnull ( someclass )
[3]: org. junit. assert. assertnotnull ( someclass. getstring ( ) )
[4]: org. junit. assert. assertequals ( getstring ( ), someclass )

************

************
tgt: org . junit . assert . asserttrue ( check )
[0]: org. junit. assert. assertequals ( null, someclass )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, atomicinteger. get ( ) )
[3]: org. junit. assert. assertequals ( 0, atomicinteger. get ( ) )
[4]: org. junit. assert. assertequals ( threada, atomicinteger. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( stores . isempty ( ) )
[0]: org. junit. assert. assertequals ( 2, atomicinteger. get ( ) )
[1]: org. junit. assert. assertequals ( 5, atomicinteger. get ( ) )
[2]: org. junit. assert. assertequals ( lf, lf. refresh ( ) )
[3]: org. junit. assert. assertnotnull ( lf. refresh ( ) )
[4]: org. junit. assert. assertequals ( java. lang. double. valueof ( j ), fraction, 0.0 )

************

************
tgt: org . junit . assert . asserttrue ( ( expected == shardtbl ) )
[0]: org. junit. assert. assertequals ( j, fraction, 0 )
[1]: org. junit. assert. assertthat ( fraction, greaterthanorequalto ( j ) )
[2]: org. junit. assert. assertthat ( fraction, greaterthanorequalto ( last ) )
[3]: org. junit. assert. assertequals ( java. lang. double. valueof ( j ), fraction, 0 )
[4]: org. junit. assert. assertequals ( 1, violations. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( 0, violations. size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( violations. size ( ) ) == 1 ) )
[2]: org. junit. assert. asserttrue ( ( ( violations. size ( ) ) > 0 ) )
[3]: org. junit. assert. asserttrue ( ( ( violations. size ( ) ) > 1 ) )
[4]: org. junit. assert. assertnotnull ( context. thisinstance ( ) )

************

************
tgt: org . junit . assert . assertnull ( song . getcomment ( ) )
[0]: org. junit. assert. assertnotnull ( queue. thisinstance ( ) )
[1]: org. junit. assert. assertnotnull ( container. thisinstance ( ) )
[2]: org. junit. assert. assertnotnull ( this. context. thisinstance ( ) )
[3]: org. junit. assert. assertequals ( element, context. thisinstance ( ) )
[4]: org. junit. assert. assertequals ( 1, jcases. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( size , group . getsize ( ) )
[0]: org. junit. assert. assertequals ( 0, jcases. size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( jcases. size ( ) ) == 1 ) )
[2]: org. junit. assert. assertequals ( 2, jcases. size ( ) )
[3]: org. junit. assert. assertequals ( 3, jcases. size ( ) )
[4]: org. junit. assert. assertequals ( 1, results. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( spec . getdesiredstate ( ) , org . hamcrest . matchers . equalto ( "stand-by" ) )
[0]: org. junit. assert. assertequals ( 0, results. size ( ) )
[1]: org. junit. assert. assertequals ( 1, transformerextension. gettagname ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( transformerextension. gettagname ( ) )
[3]: org. junit. assert. assertequals ( 3, transformerextension. gettagname ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 4, transformerextension. gettagname ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , result . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), name. neuhalfen. projects. crypto. bouncycastle. openpgp. keys. generation. keyflag. frominteger ( 0 ) )
[2]: org. junit. assert. assertequals ( 0, name. neuhalfen. projects. crypto. bouncycastle. openpgp. keys. generation. keyflag. frominteger ( 0 ). size ( ) )
[3]: org. junit. assert. assertequals ( null, name. neuhalfen. projects. crypto. bouncycastle. openpgp. keys. generation. keyflag. frominteger ( 0 ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), name. neuhalfen. projects. crypto. bouncycastle. openpgp. keys. generation. keyflag. frominteger ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( matrixshift_expected , matrixshift_actual )
[0]: org. junit. assert. assertequals ( 0, name. neuhalfen. projects. crypto. bouncycastle. openpgp. keys. generation. keyflag. frominteger ( 0 ). length )
[1]: org. junit. assert. assertequals ( serializable, proxy. serializable ( ) )
[2]: org. junit. assert. assertequals (emote, proxy. serializable ( ) )
[3]: public void init ( ) { }
[4]: public void populate ( ) { }

************

************
tgt: org . junit . assert . assertequals ( expected , state . getshellstate ( ) )
[0]: public void set ( ) { }
[1]: org. junit. assert. assertequals ( 0, code )
[2]: org. junit. assert. assertequals ( 1, code )
[3]: org. junit. assert. assertequals ( 200, code )
[4]: org. junit. assert. assertequals ( 100, code )

************

************
tgt: org . junit . assert . assertequals ( "method" , accessor . getsourceaccessor ( context , 1 , "property" ) )
[0]: org. junit. assert. assertequals ( 3, code )
[1]: org. junit. assert. assertarrayequals ( start, finish, 0 )
[2]: org. junit. assert. assertarrayequals ( start, finish, 0.0 )
[3]: org. junit. assert. assertarrayequals ( start, finish, 1.0 )
[4]: org. junit. assert. assertarrayequals ( start, finish, 1 )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: , finish )
[1]: org. junit. assert. asserttrue ( metadata. isempty ( ) )
[2]: org. junit. assert. asserttrue ( metadat. isempty ( ) )
[3]: org. junit. assert. assertfalse ( metadata. isempty ( ) )
[4]: org. junit. assert. asserttrue ( data. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. asserttrue ( metadata. isempty ( ) ) )
[1]: org. junit. assert. assertequals ( testdata, this. testentity. getbody ( ) )
[2]: org. junit. assert. assertnotnull ( this. testentity. getbody ( ) )
[3]: org. junit. assert. assertequals ( testdata, this. testentity. getbody ( ). get ( ) )
[4]: org. junit. assert. assertnull ( this. testentity. getbody ( ) )

************

************
tgt: org . junit . assert . asserttrue ( subject . controleer ( persoon , verzoek ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( jcas. getdocumentlanguage ( ), ( i + 1 ) )
[2]: org. junit. assert. assertequals ( jcas. getdocumentlanguage ( ), ( i * 5 ) )
[3]: org. junit. assert. assertequals ( jcas. getdocumentlanguage ( ), i )
[4]: org. junit. assert. assertequals ( jcas. getdocumentlanguage ( ), ( i ++ ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , result . size ( ) )
[0]: org. junit. assert. assertequals ( jcas. getdocumentlanguage ( ), 1 )
[1]: org. junit. assert. assertequals ( 1, xares. recover ( xaresource. tmnoflags ). length )
[2]: org. junit. assert. assertarrayequals ( b, ret )
[3]: org. junit. assert. assertequals ( b [ i ], ret )
[4]: org. junit. assert. assertequals ( b [ 1 ], ret )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertnotnull ( ret )
[1]: , ret )
[2]: org. junit. assert. assertthat ( net. time4j. tz. model. arraytransitionmodeltest. model. getinitialoffset ( ), org. hamcrest. corematchers. is ( net. time4j. tz. model. arraytransitionmodeltest. model. getinitialoffset ( ) ) )
[3]: org. junit. assert. assertthat ( net. time4j. tz. model. arraytransitionmodeltest. model. getinitialoffset ( ), org. hamcrest. corematchers. is ( net. time4j. tz. zonaloffset ) )
[4]: org. junit. assert. assertthat ( net. time4j. tz. model. arraytransitionmodeltest. model, getinitialoffset ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( logger )
[0]: org. junit. assert. assertthat ( net. time4j. tz. model. arraytransitionmodeltest. model )
[1]: ) )
[2]: org. junit. assert. asserttrue ( org. mitre. mpf. wfm. itwebui. validpage ( org. mitre. mpf. wfm. itwebui. driver ) )
[3]: org. junit. assert. asserttrue ( org. mitre. mpf. wfm. itwebui. homepage. validpage ( org. mitre. mpf. wfm. itwebui. driver ) )
[4]: org. junit. assert. asserttrue ( org. mitre. mpf. wfm. itwebui. validationpage ( org. mitre. mpf. wfm. itwebui. driver ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , kvs . size ( ) )
[0]: org. junit. assert. asserttrue ( org. mitre. mpf. wfm. itwebui. homepage. validpage ( org. mitre. mpf. wfm. itwebui. driver ) )
[1]: org. junit. assert. assertequals ( 1, items. size ( ) )
[2]: org. junit. assert. assertequals ( 0, items. size ( ) )
[3]: org. junit. assert. assertnotnull ( items )
[4]: , items )

************

************
tgt: org . junit . assert . assertnull ( this . component . resolveentity ( org . phenotips . entities . internal . defaultprimaryentityresolvertest . patient_2_id ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, returnvalue. size ( ) )
[2]: org. junit. assert. assertequals ( originalstring, result )
[3]: org. junit. assert. assertequals ( origstring, result )
[4]: org. junit. assert. assertequals ( result, originalstring )

************

************
tgt: org . junit . assert . assertequals ( expected , s2 )
[0]: org. junit. assert. assertthat ( result, is ( originalstring ) )
[1]: org. junit. assert. assertthat ( result, org. hamcrest )
[2]: org. junit. assert. assertnotnull ( bean )
[3]: org. junit. assert. assertnotnull ( bean. value )
[4]: org. junit. assert. assertequals ( null, bean. value )

************

************
tgt: org . junit . assert . assertequals ( id , targetmap . get ( "gallery_id" ) )
[0]: org. junit. assert. assertequals ( 1, bean. value )
[1]: org. junit. assert. assertequals ( null, bean. values )
[2]: org. junit. assert. assertequals ( state. template, panelstate. getstate ( ) )
[3]: org. junit. assert. assertequals ( state. template, panelstate. getstate ( ). get ( ) )
[4]: org. junit. assert. assertequals ( setstate. template, panelstate. getstate ( ) )

************

************
tgt: org . junit . assert . asserttrue ( foundmaxage0 )
[0]: org. junit. assert. assertequals ( state. template, canvasstate. getstate ( ) )
[1]: org. junit. assert. assertequals ( state. template, panelstate. getstate ( ). gettype ( ) )
[2]: org. junit. assert. assertequals ( ( fp / ( fp + tn ) ), instance. getfalsenegativesrate ( ), eps )
[3]: org. junit. assert. assertequals ( java. lang. double. valueof ( fp ), instance. getfalsenegativesrate ( ), eps )
[4]: org. junit. assert. assertequals ( 1.0, instance. getfalsenegativesrate ( ), eps )

************

************
tgt: org . junit . assert . asserttrue ( value , branchmatcher . matches ( value ) )
[0]: org. junit. assert. assertequals ( java. lang. double. valueof ( fp ), instance. getfalsenegativesrate ( ) )
[1]: org. junit. assert. assertequals ( ( fp / ( fp + tn ) ), instance. getfalsenegativesrate ( ), eps, tn )
[2]: org. junit. assert. assertequals ( true, group. isassignedasevaluator ( evaluator ) )
[3]: org. junit. assert. assertequals ( false, group. isassignedasevaluator ( evaluator ) )
[4]: org. junit. assert. assertequals ( true, isassignedasevaluator ( group ) )

************

************
tgt: org . junit . assert . assertsame ( el , com . redhat . darcy . ui . by . title ( "foo" ) . find ( com . redhat . darcy . ui . api . elements . element . class , mockcontext ) )
[0]: org. junit. assert. assertequals ( 1, planetsreflected. length )
[1]: org. junit. assert. assertequals ( 0, planetsreflected. length )
[2]: org. junit. assert. assertequals ( 3, planetsreflected. length )
[3]: org. junit. assert. assertequals ( 9, planetsreflected. length )
[4]: org. junit. assert. assertequals ( 1, planetsreflects. length )

************

************
tgt: org . junit . assert . assertnull ( gauge )
[0]: org. junit. assert. assertthat ( results, is ( set ( ( - 3 ), ( - 1 ) ) ) )
[1]: org. junit. assert. assertthat ( results, is ( set ( ( - 3 ), ( - 3 ) ) ) )
[2]: org. junit. assert. assertthat ( results, is ( set ( ( - 3 ), ( - 2 ) ) ) )
[3]: org. junit. assert. asserttrue ( a )
[4]: org. junit. assert. assertfalse ( a )

************

************
tgt: org . junit . assert . assertnull ( diffsets )
[0]: org. junit. assert. assertnotnull ( a )
[1]: , a )
[2]: ) )
[3]: org. junit. assert. assertarrayequals ( inputarray1, outputarray )
[4]: org. junit. assert. assertarrayequals ( outputarray, inputarray1 )

************

************
tgt: org . junit . assert . asserttrue ( ( pos != ( - 1 ) ) )
[0]: org. junit. assert. assertarrayequals ( inputarray, outputarray )
[1]: org. junit. assert. assertarrayequals ( outputarray, inputarray1, outputarray )
[2]: )
[3]: org. junit. assert. assertequals ( expectedhitratio, actualhitratio, 0.0 )
[4]: org. junit. assert. assertequals ( null, w. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( illegallength . length , count )
[0]: org. junit. assert. assertnotnull ( w. getname ( ) )
[1]: org. junit. assert. assertequals ( null, cookie. getname ( ) )
[2]: org. junit. assert. assertnotnull ( cookie. getname ( ) )
[3]: org. junit. assert. assertnull ( cookie. getname ( ) )
[4]: org. junit. assert. assertequals ( 0, cookie. getname ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 2 , lqs . size ( ) )
[0]: org. junit. assert. assertequals ( 0, cookie. getname ( ) )
[1]: org. junit. assert. assertnotnull ( x. testme ( y ) )
[2]: org. junit. assert. assertnotnull ( testme ( y ) )
[3]: org. junit. assert. assertnotnull ( testme ( y. tostring ( ) ) )
[4]: org. junit. assert. assertnotnull ( testme ( y. getid ( ) ) )

************

************
tgt: org . junit . assert . assertnull ( resurl )
[0]: org. junit. assert. assertnotnull ( y )
[1]: org. junit. assert. assertfalse ( image. check ( ) )
[2]: org. junit. assert. assertnull ( image. check ( ) )
[3]: org. junit. assert. assertfalse ( images. check ( ) )
[4]: org. junit. assert. assertfalse ( image. checks ( ) )

************

************
tgt: org . junit . assert . assertthat ( org . eclipselabs . mongoemf . junit . support . echecker . getid ( actual ) , org . hamcrest . corematchers . is ( id ) )
[0]: org. junit. assert. assertfalse ( image. validate ( ) )
[1]: org. junit. assert. asserttrue ( ( ( ( value0. intvalue ( ) ) * ( value1. intvalue ( ) ) ) > ( value2. intvalue ( ) ) ) )
[2]: org. junit. assert. assertnull ( messageprocessingsequence. next ( ) )
[3]: org. junit. assert. assertnotnull ( invocation. getswaggerarguments ( ) )
[4]: org. junit. assert. assertequals ( 0, invocation. getswaggerarguments ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "default" , resolvedheader )
[0]: org. junit. assert. assertequals ( null, invocation. getswaggerarguments ( ) )
[1]: org. junit. assert. assertequals ( 1, invocation. getswaggerarguments ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, invocation. getswaggerarguments ( ). get ( ) )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( berichtentiteiten . isempty ( ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( """", result )
[2]: ) )
[3]: org. junit. assert. assertfalse ( permissionchecker. isgroupmember ( 0 ) )
[4]: org. junit. assert. assertequals ( false, permissionchecker. isgroupmember ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( dock . isopened ( ) )
[0]: org. junit. assert. assertfalse ( permissionchecker. isgroupmember ( 1 ) )
[1]: org. junit. assert. assertequals ( false, permissionchecker. isgroupmember ( 1 ) )
[2]: org. junit. assert. assertfalse ( permissionchecker. isgroupmember ( 2 ) )
[3]: org. junit. assert. assertequals ( 1, config. usefallbackrepositories ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( config. usefallbackrepositories ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , com . spotify . styx . util . shardedcountertest . shardedcounter . getcounter ( com . spotify . styx . util . shardedcountertest . counter_id1 ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), config. usefallbackrepositories ( ) )
[1]: org. junit. assert. assertequals ( 0, config. usefallbackrepositories ( ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( user )
[4]: org. junit. assert. assertnotnull ( identitymanager )

************

************
tgt: org . junit . assert . assertfalse ( test . haschildren ( ) )
[0]: org. junit. assert. assertnotnull ( identitymanager. collection )
[1]: org. junit. assert. assertnotnull ( identitymanager. repository )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( broadcaster. informattributeremoved ( ) )
[4]: org. junit. assert. assertnotnull ( broadcaster )

************

************
tgt: org . junit . assert . asserttrue ( b )
[0]: org. junit. assert. assertnotnull ( broadcaster. informattributeremoved
[1]: org. junit. assert. assertnotnull ( broadcaster. result )
[2]: ) )
[3]: org. junit. assert. asserttrue ( result. issuccess ( ) )
[4]: org. junit. assert. assertequals ( true, result. issuccess ( ) )

************

************
tgt: org . junit . assert . assertequals ( vnum , intsnum )
[0]: org. junit. assert. assertequals ( 1, stuftransformatieresultaat. getmeldingen ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, stuftransformatieresultaat. getmeldingen ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( stuftransformatieresultaat. getmeldingen ( ) )
[3]: org. junit. assert. assertequals ( 1, stuftransformatieresultaat. getmeldingen ( ). length )
[4]: org. junit. assert. assertequals ( 1, stuftransformatiseresultaat. getmeldingen ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( packet , p )
[0]: org. junit. assert. assertthat ( option, is ( java. lang. longoption. valueof ( 100l ) ) )
[1]: org. junit. assert. assertthat ( option, is ( java. lang. long. valueof ( 100l ) ) )
[2]: org. junit. assert. assertthat ( option, is ( options ) )
[3]: org. junit. assert. assertthat ( option, is ( option ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( ( "verify" 7 + aftermigrationverifiedcount ) , 2 , aftermigrationverifiedcount )
[0]: org. junit. assert. assertequals ( 2, result. size ( ) )
[1]: org. junit. assert. assertequals ( 2, transformed. size ( ) )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( 2, results. size ( ) )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertthat ( tuples. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertthat ( tuples, org. hamcrest. corematchers. is ( java. util. collections. singletonlist ( tuple ) ) )
[2]: org. junit. assert. assertthat ( tuples. size ( ), org. hamcrest. corematchers. is ( 0 ) )
[3]: org. junit. assert. assertequals ( 1, tuples. size ( ) )
[4]: org. junit. assert. assertequals ( 0, tuples. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( received )
[0]: org. junit. assert. assertequals ( 1, result. geterrors ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, result. geterrors ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 2, result. geterrors ( ). size ( ) )
[3]: org. junit. assert. asserttrue ( result. geterrors ( ). isempty ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 20 , row . getheight ( ) )
[0]: org. junit. assert. assertequals ( treegrammar, found )
[1]: org. junit. assert. assertnotnull ( found )
[2]: org. junit. assert. assertequals ( tree grammar, found )
[3]: org. junit. assert. assertequals ( treebundle, found )
[4]: , found )

************

************
tgt: org . junit . assert . assertequals ( jsonstring , jsonstream . tostring ( ) )
[0]: org. junit. assert. assertfalse ( cache. iscachedtable ( dbname, tablename ) )
[1]: org. junit. assert. asserttrue ( cache. iscachedtable ( dbname, tablename ) )
[2]: org. junit. assert. assertequals ( true, cache. iscachedtable ( dbname, tablename ) )
[3]: org. junit. assert. assertequals ( false, cache. iscachedtable ( dbname, tablename ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , statements )
[0]: org. junit. assert. assertequals ( 1, resultaat )
[1]: org. junit. assert. assertequals ( 0, resultaat )
[2]: org. junit. assert. assertequals ( 2, resultaat )
[3]: org. junit. assert. assertequals ( 1, resultaat ) ;
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( testvalues , org . hamcrest . corematchers . is ( expectedvalues ) )
[0]: org. junit. assert. assertequals ( iter, copy_seen )
[1]: org. junit. assert. assertequals ( iter. next ( ), copy_seen )
[2]: org. junit. assert. assertequals ( iter, copy_seen, copy_seen )
[3]: org. junit. assert. assertnotnull ( list. getitem ( 0 ) )
[4]: org. junit. assert. assertequals ( 1, list. getitem ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 1.0f , org . simmetrics . example . stringmetricbuilderexample . example01 ( ) , org . simmetrics . example . stringmetricbuilderexampletest . delta )
[0]: org. junit. assert. assertequals ( 1, list. getitem ( 0 ). length )
[1]: org. junit. assert. assertequals ( 1, list. getitem ( 0 ). size ( )
[2]: ) )
[3]: org. junit. assert. assertequals ( true, context. islinear ( ) )
[4]: org. junit. assert. assertfalse ( builder. islinear ( ) )

************

************
tgt: org . junit . assert . assertequals ( new org . eclipse . swtbot . swt . finder . utils . position ( 1 , 17 ) , styledtext . cursorposition ( ) )
[0]: org. junit. assert. assertequals ( true, repository. islinear ( ) )
[1]: org. junit. assert. assertfalse ( context. islinear ( ) )
[2]: org. junit. assert. assertfalse ( repository. islinear ( ) )
[3]: org. junit. assert. assertequals ( com. liferay. portal. kernel. nio. intraband. welder. socket. socketwelder. class, com. liferay. portal. kernel. nio. intraband. welder. welderfactoryutil. getwelderclass ( ) )
[4]: org. junit. assert. assertsame ( com. liferay. portal. kernel. nio. intraband. welder. socket. socketwelder. class, this. getwelderclass ( ) )

************

************
tgt: org . junit . assert . assertfalse ( validationresult . haserror ( ) )
[0]: org. junit. assert. assertsame ( com. liferay. portal. kernel. nio. intraband. welder. socket. socketwelder. class, getwelderclass ( ) )
[1]: org. junit. assert. assertsame ( com. liferay. portal. kernel. nio. intraband. welder. socket. socketwelder. class, to. getwelderclass ( ) )
[2]: org. junit. assert. assertequals ( com. liferay. portal. kernel. nio. intraband. welder. socket. socketwelder. class, com. liferay. portal. kernel. nio. intraband. welder. swelderfactoryutil. getwelderclass ( ) )
[3]: org. junit. assert. asserttrue ( emptyiterator. hasnext ( ) )
[4]: org. junit. assert. assertequals ( expect, second )

************

************
tgt: org . junit . assert . assertequals ( xml , helper . toxml ( newquery ) )
[0]: org. junit. assert. assertequals ( expect, list )
[1]: org. junit. assert. assertequals ( expect, result )
[2]: org. junit. assert. assertequals ( expect, first )
[3]: org. junit. assert. assertequals ( expect, actual )
[4]: org. junit. assert. assertequals ( 100, rec. getlength ( ) )

************

************
tgt: org . junit . assert . assertfalse ( mic . invokemethod ( null , m , java . util . collections . < java . lang . string , org . netbeans . modules . java . hints . declarative . condition . methodinvocation . parameterkind > emptymap ( ) ) )
[0]: org. junit. assert. assertequals ( 1, rec. getlength ( ) )
[1]: org. junit. assert. assertequals ( 0, rec. getlength ( ) )
[2]: org. junit. assert. assertequals ( 10, rec. getlength ( ) )
[3]: org. junit. assert. assertequals ( 4, rec. getlength ( ) )
[4]: org. junit. assert. assertequals ( 1, node. isvisible ( node ) )

************

************
tgt: org . junit . assert . assertequals ( this . expectedresult , this . actualresult )
[0]: org. junit. assert. assertequals ( 0, node. isvisible ( node ) )
[1]: org. junit. assert. assertequals ( null, node. isvisible ( node ) )
[2]: org. junit. assert. assertequals ( 0, node. isvisible ( node ). length )
[3]: org. junit. assert. assertequals ( 0, node. isvisible ( node ). size ( )
[4]: org. junit. assert. assertnotnull ( element. withname ( ""foo"" ) )

************

************
tgt: org . junit . assert . assertequals ( false , test . equals ( other ) )
[0]: org. junit. assert. assertnotnull ( element )
[1]: org. junit. assert. assertnotnull ( element. withname ( null ) )
[2]: org. junit. assert. assertequals ( element, element. withname ( null ) )
[3]: org. junit. assert. assertsame ( element, element. withname ( null ) )
[4]: org. junit. assert. assertthat ( converter. towritableobject ( javamap ), org. hamcrest. corematchers. is ( javamap ) )

************

************
tgt: org . junit . assert . assertequals ( exp , d . getvalue ( ) )
[0]: org. junit. assert. assertthat ( converter. towritableobject ( readbuffer ), org. hamcrest. corematchers. is ( javamap ) )
[1]: org. junit. assert. assertequals ( javamap, converter. towritableobject ( javamap ) )
[2]: org. junit. assert. assertequals ( javamap, converter. towritableobject ( typeinfo ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( sessions. hasmappingfor ( capabilities ) )

************

************
tgt: org . junit . assert . assertthat ( target . matchexactly ( flow ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertfalse ( sessions. hasmappingfor ( capabilities ) )
[1]: org. junit. assert. asserttrue ( session. hasmappingfor ( capabilities ) )
[2]: org. junit. assert. assertequals ( true, sessions. hasmappingfor ( capabilities ) )
[3]: org. junit. assert. assertequals ( false, sessions. hasmappingfor ( capabilities ) )
[4]: org. junit. assert. assertequals ( true, runner. isalive ( ) )

************

************
tgt: org . junit . assert . asserttrue ( answer . getresult ( ) )
[0]: org. junit. assert. assertfalse ( runner. isalive ( ) )
[1]: org. junit. assert. assertequals ( false, runner. isalive ( ) )
[2]: org. junit. assert. asserttrue ( runner. isalive ( ) )
[3]: org. junit. assert. assertequals ( true, runner. isalive ( )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: type ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, results. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( service. sayhello ( ) )
[1]: org. junit. assert. assertequals ( 1, service. sayhello ( ) )
[2]: org. junit. assert. assertnull ( service. sayhello ( ) )
[3]: org. junit. assert. assertequals ( 0, service. sayhello ( ) )
[4]: org. junit. assert. assertnotnull ( service )

************

************
tgt: org . junit . assert . asserttrue ( berichtentiteits . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( proposal. tostring ( ) )
[1]: org. junit. assert. assertequals ( null, proposal. tostring ( ) )
[2]: org. junit. assert. assertequals ( 0, proposal. tostring ( ) )
[3]: . tostring ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , app . executeapplication ( args ) )
[0]: org. junit. assert. assertequals ( 1, code )
[1]: org. junit. assert. assertnotnull ( multidnodenameequest )
[2]: org. junit. assert. assertequals ( 1, eb. getobjects ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. getobjects ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, _. getobjects ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( file . exists ( ) )
[0]: ) )
[1]: org. junit. assert. assertnull ( software. amazon. awssdk. core. retry. conditions. andretrycondition. create ( conditionone ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnotnull ( newaction )
[4]: org. junit. assert. assertequals ( null, newaction )

************

************
tgt: org . junit . assert . assertarrayequals ( new java . lang . string [ ] { org . pentaho . pms . ui . metaeditortest . expected_schemas [ 0 ] } , schemas )
[0]: org. junit. assert. assertequals ( newaction, null )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( msg1, msg2 ), messages. getlist ( ) )
[4]: org. junit. assert. assertequals ( 1, messages. getlist ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedparameters , applicationcontext . getpathparameters ( false ) )
[0]: org. junit. assert. assertthat ( messages. getlist ( ), org. hamcrest. corematchers. is ( msg1 ) )
[1]: org. junit. assert. assertnotnull ( messages. getlist ( ) )
[2]: ) )
[3]: org. junit. assert. assertfalse ( prompt. get ( ) )
[4]: org. junit. assert. assertequals ( ""foo"", ping. ping ( ""foo"" ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , lintresult . getissues ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( null, ping. ping ( ""foo"" ) )
[1]: org. junit. assert. assertequals ( 1, ping. ping ( ""foo"" ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, ping. ping ( ""foo"" ). get ( ) )
[3]: org. junit. assert. assertequals ( null, ping. ping ( ""foo"" ) )
[4]: org. junit. assert. assertequals ( 1, dr. gethigh ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, dr. gethigh ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, dr. gethigh ( ). count ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 8.0 ), dr )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 8.0 ), dr )
[4]: org. junit. assert. assertequals ( status, store. serialize ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , v )
[0]: org. junit. assert. assertequals ( 1, store. serialize ( status ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( status ), store. serialize ( status ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), store. serialize ( status ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( unexistingfile. exists ( ) )

************

************
tgt: org . junit . assert . assertfalse ( accepted )
[0]: org. junit. assert. assertequals ( 1, meldingen. size ( ) )
[1]: org. junit. assert. assertnotnull ( meldingen. size ( ) )
[2]: org. junit. assert. assertnotnull ( meldingen )
[3]: org. junit. assert. assertnotnull ( meldingen. get ( 0 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( backend . extractcredentials ( null , null ) )
[0]: org. junit. assert. assertnotnull ( document )
[1]: org. junit. assert. assertnotnull ( document. getcontent ( ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( content, document )
[4]: org. junit. assert. assertnotnull ( content )

************

************
tgt: org . junit . assert . assertnotnull ( channel )
[0]: org. junit. assert. assertequals ( xml1, sorteer ( xml2 ) )
[1]: org. junit. assert. assertequals ( xml1, xml2 )
[2]: org. junit. assert. assertequals ( xml1, xml2. sorteer ( xml1 ) )
[3]: org. junit. assert. assertequals ( xml1, sortingeer ( xml2 ) )
[4]: org. junit. assert. assertequals ( xml1, xml2. sorteer ( xml2 ) )

************

************
tgt: org . junit . assert . assertnull ( s )
[0]: org. junit. assert. assertequals ( 1, gcoperations. length )
[1]: org. junit. assert. assertnotnull ( database. getversion ( ) )
[2]: org. junit. assert. assertnotnull ( database )
[3]: org. junit. assert. assertequals ( 0, database. getversion ( ) )
[4]: org. junit. assert. assertnull ( database. getversion ( ) )

************

************
tgt: org . junit . assert . assertnull ( item )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, issues. size ( ) )
[2]: org. junit. assert. assertnotnull ( p )
[3]: org. junit. assert. assertequals ( false, error. ispresent ( ) )
[4]: org. junit. assert. assertequals ( 0, error. ispresent ( ) )

************

************
tgt: org . junit . assert . assertequals ( ms . getname ( ) , "foo" )
[0]: org. junit. assert. assertequals ( 1, error. ispresent ( ) )
[1]: org. junit. assert. assertequals ( null, error. ispresent ( ) )
[2]: org. junit. assert. assertequals ( true, error. ispresent ( ) )
[3]: org. junit. assert. assertnotnull ( virtualizationconnectordtovalidatortestdata. schema )
[4]: org. junit. assert. assertnotnull ( virtualizationconnectordtovalidatortestdata. select )

************

************
tgt: org . junit . assert . assertequals ( ( totalbadbefore + 1 ) , org . apache . hadoop . yarn . server . router . testroutermetrics . metrics . getappsfailedsubmitted ( ) )
[0]: org. junit. assert. assertnotnull ( virtualizationconnectordtovalidatortestdata. guaranteed )
[1]: org. junit. assert. assertnotnull ( virtualizationconnectordtovalidatortestdata. getid ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( propertypaths )
[4]: org. junit. assert. assertequals ( 1, propertypaths. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( all . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( null, propertypaths )
[1]: org. junit. assert. assertnull ( propertypaths )
[2]: ) )
[3]: org. junit. assert. assertarrayequals ( expected, results )
[4]: org. junit. assert. assertarrayequals ( java. util. arrays. tostring ( expected ), results )

************

************
tgt: org . junit . assert . assertarrayequals ( plain , decrypted )
[0]: org. junit. assert. assertarrayequals ( java. lang. string [ ] { expected, results )
[1]: org. junit. assert. assertarrayequals ( java. lang. string. format ( expected ), results )
[2]: org. junit. assert. assertarrayequals ( java. lang. string. tostring ( expected ), results )
[3]: org. junit. assert. assertequals ( localdate. tostring ( org. pm4j. core. pm. joda. impl. localdateconvertertest. ddmmmyyyy, locale. english ), locale. english )
[4]: org. junit. assert. assertequals ( localdate. tostring ( org. pm4j. core. pm. joda. impl. localdateconvertertest. ddmmmyyyy, locale. english ), format. tostring ( locale. english, locale. english ) )

************

************
tgt: org . junit . assert . assertequals ( format ( expected . gettimeinmillis ( ) ) , format ( actual ) )
[0]: org. junit. assert. assertequals ( localdate. tostring ( org. pm4j. core. pm. joda. impl. localdateconvertertest. ddmmmyyyy, locale. english ), "25-oct-2013adefinition )
[1]: org. junit. assert. assertequals ( localdate. tostring ( org. pm4j. core. pm. joda. impl. localdateconvertertest. ddmmmyyyy, locale. english ), format. tostring ( ) )
[2]: org. junit. assert. assertequals ( localdate. tostring ( org. pm4j. core. pm. joda. impl. localdateconvertertest. ddmmmyyyy, locale. english ), "25-oct-2013adefinition. tostring ( fmt, locale ) )
[3]: org. junit. assert. assertarrayequals ( testdatabody, r. getbody ( ) )
[4]: org. junit. assert. assertequals ( testdatabody, r. getbody ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . nd4j . linalg . factory . nd4j . create ( new double [ ] { 4 , 5 , 6 } ) , vector )
[0]: org. junit. assert. assertnotnull ( r. getbody ( ) )
[1]: org. junit. assert. assertnull ( r. getbody ( ) )
[2]: org. junit. assert. assertequals ( testdatabody, r. getbody ( ). length )
[3]: org. junit. assert. assertequals ( 1, violationmessages. size ( ) )
[4]: org. junit. assert. assertequals ( 0, violationmessages. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( e instanceof org . teiid . core . teiidexception ) )
[0]: org. junit. assert. assertequals ( 1, violationmessages. size ( ) )
[1]: org. junit. assert. assertequals ( zero, violationmessages. size ( ) )
[2]: org. junit. assert. assertequals ( 1, violationmessages. size ( ) )
[3]: org. junit. assert. assertnotnull ( vertexmanager )
[4]: org. junit. assert. assertnotnull ( vertexmanager. getvertexnumtasks ( vertexname ) )

************

************
tgt: org . junit . assert . assertnotnull ( supplier )
[0]: org. junit. assert. assertequals ( 10, vertexmanager. getvertexnumtasks ( vertexname ) )
[1]: org. junit. assert. assertequals ( 1, vertexmanager. getvertexnumtasks ( vertexname ) )
[2]: org. junit. assert. asserttrue ( vertexmanager. getvertexnumtasks ( vertexname ) )
[3]: org. junit. assert. assertnotnull ( datum. getwaarde ( ) )
[4]: org. junit. assert. assertnotnull ( datum )

************

************
tgt: org . junit . assert . asserttrue ( resultfuture . isdone ( ) )
[0]: org. junit. assert. assertequals ( datum, datumtijdelement )
[1]: org. junit. assert. assertnotnull ( datumtijdelement )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, extender. getzoomlevel ( ), 0 )
[4]: org. junit. assert. assertnotnull ( extender. getzoomlevel ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( result instanceof java . util . list ) )
[0]: org. junit. assert. assertequals ( 0, extender. getzoomlevel ( ), 0 )
[1]: org. junit. assert. assertequals ( 3, extender. getzoomlevel ( ), 0 )
[2]: org. junit. assert. assertequals ( 1, extender. getzoomlevel ( ) )
[3]: org. junit. assert. assertfalse ( currentversion. contains ( currentversion ) )
[4]: org. junit. assert. assertfalse ( currentversion, currentversion. contains ( currentversion ) )

************

************
tgt: org . junit . assert . asserttrue ( dto . addderivedprovidedproduct ( product ) )
[0]: org. junit. assert. assertequals ( true, currentversion. contains ( currentversion ) )
[1]: org. junit. assert. asserttrue ( currentversion. contains ( currentversion ) )
[2]: org. junit. assert. assertequals ( false, currentversion. contains ( currentversion ) )
[3]: org. junit. assert. assertequals ( com. sun. mail. util. proputil. getbooleanproperty ( props, null, false ), true )
[4]: org. junit. assert. assertequals ( com. sun. mail. util. proputil. getbooleanproperty ( props, ""test"", false ), true )

************

************
tgt: org . junit . assert . assertequals ( teststring , decodedutf8 )
[0]: org. junit. assert. assertequals ( 1, com. sun. mail. util. proputil. getbooleanproperty ( props, null, false ) )
[1]: org. junit. assert. assertequals ( com. sun. mail. util. proputil. getbooleanproperty ( props, ""test"", true ), true )
[2]: org. junit. assert. assertequals ( com. sun. mail. util. proputil. getbooleanproperty ( props, null, true ), true )
[3]: org. junit. assert. assertequals ( 1, plots. size ( ) )
[4]: org. junit. assert. assertequals ( 0, plots. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 3, plots. size ( ) )
[1]: org. junit. assert. assertnotnull ( e. getcause ( ) )
[2]: org. junit. assert. assertnull ( e. getcause ( ) )
[3]: org. junit. assert. assertequals ( null, e. getcause ( ) )
[4]: org. junit. assert. assertequals ( 0, e. getcause ( ) )

************

************
tgt: org . junit . assert . assertequals ( result , new java . math . bigdecimal ( 1287623847384l ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( unsyncchararraywriter. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), unsyncchararraywriter. tostring ( ) )
[3]: org. junit. assert. assertequals ( s, unsyncchararraywriter. tostring ( ) )
[4]: . tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( volume . get ( ) , org . hamcrest . matchers . is ( org . onosproject . net . resource . continuousresourcetest . bw1 . bps ( ) ) )
[0]: output ) )
[1]: org. junit. assert. assertequals ( 1, nodelist. getlength ( ) )
[2]: org. junit. assert. assertequals ( url, result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( null , handler . oncall ( new org . apache . hadoop . mapred . nativetask . command ( ( - 1 ) ) , null ) )
[0]: org. junit. assert. assertequals ( base, result )
[1]: org. junit. assert. assertequals ( result, url )
[2]: org. junit. assert. assertequals ( treegrammar, found )
[3]: org. junit. assert. assertnotnull ( found )
[4]: org. junit. assert. assertequals ( tree grammar, found )

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertequals ( s, found )
[1]: , found )
[2]: org. junit. assert. assertnull ( content )
[3]: org. junit. assert. assertnotnull ( content )
[4]: org. junit. assert. null ( content )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , a . indexof ( double . nan ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertthat ( this. uipageddata. getvar ( ), org. hamcrest. matchers. is ( "myvarageddata ) )
[3]: org. junit. assert. assertthat ( this. uipageddata. getvar ( ), org. hamcrest. matchers. is ( "myvarys ) )
[4]: org. junit. assert. assertthat ( this. uipageddata. getvar ( ), org. hamcrest. matchers. is ( "myvarmanagement ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , pojo . calledcancelled )
[0]: org. junit. assert. assertthat ( this. uipageddata. getvar ( ), org. hamcrest. matchers. is ( "myvarmanagdata ) )
[1]: org. junit. assert. assertnotnull ( this. uipageddata. getvar ( ) )
[2]: org. junit. assert. asserttrue ( created. equals ( template ) )
[3]: org. junit. assert. asserttrue ( created. contains ( template ) )
[4]: org. junit. assert. assertequals ( template, created )

************

************
tgt: org . junit . assert . assertequals ( 6 , columnsize )
[0]: org. junit. assert. asserttrue ( created. matches ( template ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( false )
[3]: org. junit. assert. assertnotnull ( e )
[4]: org. junit. assert. asserttrue ( true )

************

************
tgt: org . junit . assert . assertnotnull ( paquete . getid ( ) )
[0]: ) )
[1]: 
[2]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( return_value ) )
[3]: org. junit. assert. assertequals ( return_value, result )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. is ( return_value ) )

************

************
tgt: org . junit . assert . assertnotnull ( writer )
[0]: org. junit. assert. assertequals ( result, return_value )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertthat ( persoonslijst. bepaaltijdstiplaatstewijziginggbasystematiek ( ). size ( ), org. hamcrest. core. is. is ( 1 ) )
[3]: org. junit. assert. assertequals ( persoonslijst. bepaaltijdstiplaatstewijziginggbasystematiek ( ), persoonslijst )
[4]: org. junit. assert. assertequals ( 0, persoonslijst. bepaaltijdstiplaatstewijziginggbasystematiek ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( schemacontextproxyextensions . contains ( mockedextension ) )
[0]: org. junit. assert. assertequals ( 1, persoonslijst. bepaaltijdstiplaatstewijziginggbasystematiek ( ). size ( ) )
[1]: org. junit. assert. assertthat ( persoonslijst. bepaaltijdstiplaatstewijziginggbasystematiek ( ). size ( ), org. hamcrest. core. is. is ( 0 ) )
[2]: org. junit. assert. assertequals ( 0, preparedstatement. size ( ) )
[3]: org. junit. assert. assertequals ( null, preparedstatement )
[4]: org. junit. assert. assertnotnull ( preparedstatement )

************

************
tgt: org . junit . assert . assertequals ( pa . toclistylestring ( ) , translated . toclistylestring ( ) )
[0]: org. junit. assert. assertequals ( expected, preparedstatement )
[1]: org. junit. assert. assertequals ( 0, preparedstatement. length ( ) )
[2]: org. junit. assert. assertthat ( finder. findparameterat ( 1 ), org. hamcrest. core. is. is ( parametersstring ) )
[3]: org. junit. assert. assertthat ( finder. findparameterat ( 1 ), org. hamcrest. corematchers. is ( parametersstring ) )
[4]: org. junit. assert. assertthat ( finder. findparameterat ( 0 ), org. hamcrest. core. is. is ( parametersstring ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , adapter . getcolumnindex ( id ) )
[0]: org. junit. assert. assertnotnull ( finder. findparameterat ( 1 ) )
[1]: type ) )
[2]: org. junit. assert. assertnull ( rpcexception. getreturnvalue ( ) )
[3]: org. junit. assert. assertequals ( 0, rpcexception. getreturnvalue ( ) )
[4]: org. junit. assert. assertnotnull ( rpcexception. getreturnvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( null, rpcexception. getreturnvalue ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( abspath. contains ( abspath ) )
[3]: org. junit. assert. asserttrue ( abspath, repo. contains ( abspath ) )
[4]: org. junit. assert. asserttrue ( abspath, collection. contains ( abspath ) )

************

************
tgt: org . junit . assert . assertequals ( result . size ( ) , 2 )
[0]: org. junit. assert. asserttrue ( abspath, resource. contains ( abspath ) )
[1]: org. junit. assert. asserttrue ( abspath, abspath. contains ( abspath ) )
[2]: org. junit. assert. assertnotnull ( payload )
[3]: org. junit. assert. assertequals ( 0, payload. length )
[4]: org. junit. assert. assertequals ( 1, patientidentifiers. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( response . getstatus ( ) , org . hamcrest . matchers . is ( unauthorized ) )
[0]: org. junit. assert. assertequals ( 0, patientidentifiers. size ( ) )
[1]: org. junit. assert. assertequals ( ( - 1 ), result )
[2]: org. junit. assert. assertequals ( 0, result )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( - 1, result )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( ( - 1 ), results )
[1]: org. junit. assert. assertequals ( 1, p. gettotalelements ( ) )
[2]: org. junit. assert. assertequals ( 0, p. gettotalelements ( ) )
[3]: org. junit. assert. assertequals ( 1l, p. gettotalelements ( ) )
[4]: org. junit. assert. assertequals ( 1, p. gettotalelements ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( cache )
[0]: org. junit. assert. assertequals ( 0l, p. gettotalelements ( ) )
[1]: org. junit. assert. assertnotnull ( actual )
[2]: org. junit. assert. assertnull ( actual )
[3]: org. junit. assert. assertequals ( mockalias )
[4]: , actual )

************

************
tgt: org . junit . assert . assertequals ( expresultval , resultval )
[0]: ) )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. assertequals ( 1, result )
[3]: org. junit. assert. assertequals ( false, result )
[4]: org. junit. assert. assertequals ( com. google. common. collect. sets. newhashset ( testworkflow1v1 ), workflows )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( 1, pools. size ( ) )
[1]: org. junit. assert. assertequals ( msg1, outboundchannel. getpayload ( ) )
[2]: org. junit. assert. assertequals ( msg1, messages. get ( 0 ) )
[3]: org. junit. assert. assertequals ( msg1, inboundchannel. getpayload ( ) )
[4]: org. junit. assert. assertequals ( msg1, messages. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( tbce . comparescreen ( referencefile ) )
[0]: org. junit. assert. assertequals ( msg1, messages )
[1]: org. junit. assert. assertequals ( 1, selectie. isuitvoerbaar ( ). size ( ) )
[2]: org. junit. assert. assertnull ( selectie. isuitvoerbaar ( ) )
[3]: org. junit. assert. assertequals ( 0, selectie. isuitvoerbaar ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, selectie. isuitvoerbaar ( ) )

************

************
tgt: org . junit . assert . assertthat ( prefixes , org . hamcrest . matchers . contains ( ll , lr , l , rl , rr , r , prefix . zero ) )
[0]: org. junit. assert. assertequals ( null, selectie. isuitvoerbaar ( ) )
[1]: org. junit. assert. assertnotnull ( fromjson )
[2]: org. junit. assert. assertequals ( 1, responseusers. size ( ) )
[3]: org. junit. assert. assertequals ( 2, responseusers. size ( ) )
[4]: org. junit. assert. assertequals ( 0, responseusers. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . hipparchus . util . arithmeticutilstest . divideunsignedexpected ( dividend , divisor ) , org . hipparchus . util . arithmeticutils . divideunsigned ( dividend , divisor ) )
[0]: org. junit. assert. assertequals ( 3, responseusers. size ( ) )
[1]: org. junit. assert. assertnotnull ( responseusers )
[2]: org. junit. assert. assertarrayequals ( roles. toarray ( ), new java. lang. string [ ] { } )
[3]: org. junit. assert. assertarrayequals ( roles. toarray ( ), new java. lang. string [ ] { null } )
[4]: org. junit. assert. assertarrayequals ( roles. toarray ( ), new java. lang. string [ ] { string } )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertarrayequals ( roles. toarray ( ), null )
[1]: org. junit. assert. assertarrayequals ( roles, controllist. toarray ( ) )
[2]: org. junit. assert. assertequals ( 1, norm, 0 )
[3]: org. junit. assert. asserttrue ( result )
[4]: org. junit. assert. assertfalse ( result )

************

************
tgt: org . junit . assert . assertequals ( expected . tolist ( ) , actual . tolist ( ) )
[0]: org. junit. assert. asserttrue ( true )
[1]: org. junit. assert. asserttrue ( result ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( writer )
[4]: org. junit. assert. assertnotnull ( writer. getmessage ( ) )

************

************
tgt: org . junit . assert . asserttrue ( rolenames . tostring ( ) , rolenames . isempty ( ) )
[0]: org. junit. assert. assertnull ( writer )
[1]: org. junit. assert. assertequals ( 1, writer. length )
[2]: org. junit. assert. assertnotnull ( writer )
[3]: org. junit. assert. assertequals ( 1, map. size ( ) )
[4]: org. junit. assert. assertequals ( 1, berichtentiteiten. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( invokeundertest ( ) . contains ( modifiedfilepath ) )
[0]: org. junit. assert. assertequals ( initialnbofdocument, numberofattachments )
[1]: org. junit. assert. assertequals ( ( initialnbofdocument + 1 ), numberofattachments )
[2]: org. junit. assert. assertequals ( ( initialnbofdocument - numberofattachments ), numberofattachments )
[3]: org. junit. assert. assertequals ( ( initialnbofdocument / 1000 ), numberofattachments )
[4]: org. junit. assert. assertequals ( ( initialnbofdocument * 1000 ), numberofattachments )

************

************
tgt: org . junit . assert . asserttrue ( sub . addedge ( e4 ) )
[0]: org. junit. assert. assertequals ( true, converter. canconvert ( edu. zipcloud. cloudstreetmarket. core. converters. product. class ) )
[1]: org. junit. assert. assertequals ( null, converter. canconvert ( edu. zipcloud. cloudstreetmarket. core. converters. product. class ) )
[2]: org. junit. assert. assertequals ( false, converter. canconvert ( edu. zipcloud. cloudstreetmarket. core. converters. product. class ) )
[3]: org. junit. assert. assertequals ( 1, converter. canconvert ( edu. zipcloud. cloudstreetmarket. core. converters. product. class ) )
[4]: org. junit. assert. assertequals ( 0, converter. canconvert ( edu. zipcloud. cloudstreetmarket. core. converters. product. class ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( templatedata , ( ( byte [ ] ) ( data . get ( "other" 9 ) . get ( ) ) ) ) )
[0]: org. junit. assert. assertnotnull ( super. ds. create ( collection. journal, true ) )
[1]: org. junit. assert. assertnull ( super. ds. create ( collection. journal, true ) )
[2]: org. junit. assert. assertnotnull ( super. ds. create ( collection. journal, false ) )
[3]: org. junit. assert. assertnull ( super. ds. create ( collection. journal, false ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertequals ( builder. tostring ( ), builder. build ( ) )
[1]: org. junit. assert. assertequals ( builder. tostring ( ), builder. build ( ). build ( ) )
[2]: org. junit. assert. assertequals ( builder. tostring ( ), 3 )
[3]: org. junit. assert. assertequals ( builder. tostring ( ), builder. build ( ). tostring ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( e . validate ( ) . isvalid ( ) )
[0]: org. junit. assert. assertequals ( 0, gauge. size ( ) )
[1]: org. junit. assert. assertnotnull ( mrlocalcluster. gethdfsdefaultfs ( ) )
[2]: org. junit. assert. assertequals ( null, mrlocalcluster. gethdfsdefaultfs ( ) )
[3]: org. junit. assert. assertequals ( 0, mrlocalcluster. gethdfsdefaultfs ( ). length )
[4]: org. junit. assert. assertequals ( 1, mrlocalcluster. gethdfsdefaultfs ( ). length )

************

************
tgt: org . junit . assert . assertfalse ( i . hasnext ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( victim. getpreprocessors ( ) )
[2]: org. junit. assert. asserttrue ( victim. getpreprocessors ( ). isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, victim. getpreprocessors ( ). size ( )
[4]: org. junit. assert. assertequals ( 1, victim. getpreprocessors ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( x509attestation . getcareferencesfinal ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( steps, total )
[2]: org. junit. assert. assertequals ( step, total )
[3]: org. junit. assert. asserttrue ( total )
[4]: org. junit. assert. assertequals ( total, total )

************

************
tgt: org . junit . assert . assertsame ( scad . empty , changed )
[0]: org. junit. assert. assertequals ( ( total * steps ), total )
[1]: org. junit. assert. assertequals ( io. motown. domain. api. chargingstation. two_minutes_ago, event. getexpirydate ( ) )
[2]: org. junit. assert. assertequals ( io. motown. domain. api. chargingstation. two_minutes_ago, event. getexpirydate ( ). size ( ) )
[3]: org. junit. assert. assertequals ( io. motown. domain. api. chargingstation. two_minutes_ago, event. getexpirydate ( ). gettime ( ) )
[4]: org. junit. assert. assertequals ( io. motown. domain. api. chargingstation. two_minutes_ago, event. getexpirydate ( ). tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( updatecenterfile . exists ( ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( io. motown. domain. api. chargingstation. one_minutes_ago, event. getexpirydate ( ) )
[1]: org. junit. assert. assertequals ( str, test )
[2]: org. junit. assert. assertnull ( test )
[3]: org. junit. assert. assertnotnull ( test )
[4]: org. junit. assert. assertequals ( str, tests )

************

************
tgt: org . junit . assert . assertequals ( 1 , metadata . getrasterpixelsize ( ) )
[0]: org. junit. assert. assertequals ( str, test )
[1]: org. junit. assert. asserttrue ( iscanvasroot )
[2]: org. junit. assert. assertnotnull ( first )
[3]: org. junit. assert. assertequals ( null, first )
[4]: org. junit. assert. assertequals ( new java. lang. jsonobject ( ), first )

************

************
tgt: org . junit . assert . assertequals ( childproject1 . getcustomworkspace ( ) , childworkspace )
[0]: org. junit. assert. assertequals ( 1, first. size ( ) )
[1]: org. junit. assert. assertequals ( new java. json. jsonobject ( ), first )
[2]: org. junit. assert. assertnotnull ( s )
[3]: org. junit. assert. assertequals ( 1, 1 )
[4]: org. junit. assert. assertnotnull ( context )

************

************
tgt: org . junit . assert . assertequals ( edu . washington . cs . knowitall . extractor . reverbextractortest . expected , edu . washington . cs . knowitall . extractor . reverbextractortest . got )
[0]: org. junit. assert. assertnotnull ( collection )
[1]: org. junit. assert. assertnotnull ( s. collection )
[2]: org. junit. assert. assertequals ( 1, status )
[3]: org. junit. assert. assertequals ( 1, events. size ( ) )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertequals ( "" , encode ( java . util . collections . emptylist ( ) ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( expected, eventmanager. getfilter ( ) )
[2]: org. junit. assert. assertequals ( 1, eventmanager. size ( ) )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( result, 1 )

************

************
tgt: org . junit . assert . asserttrue ( canunzip ( output , outputfolder ) )
[0]: org. junit. assert. assertequals ( start, result )
[1]: org. junit. assert. assertequals ( result, 0 )
[2]: , result )
[3]: org. junit. assert. assertequals ( elem, mergeelem )
[4]: org. junit. assert. assertnotnull ( mergeelem )

************

************
tgt: org . junit . assert . assertnotnull ( r )
[0]: org. junit. assert. assertequals ( 0, managedpool. getleakedobjectscount ( ) )
[1]: org. junit. assert. assertnull ( managedpool. getleakedobjectscount ( ) )
[2]: org. junit. assert. assertequals ( 0l, managedpool. getleakedobjectscount ( ) )
[3]: org. junit. assert. assertequals ( 0, managedpool. getleakedobjectscount ( ), 0 )
[4]: org. junit. assert. assertequals ( 0, managedpool. getleakedobjectscount ( ). length )

************

************
tgt: org . junit . assert . assertequals ( ( ( ( ( 1 * 3 ) * 5 ) + ( 0 * 5 ) ) + 4 ) , config . getconfigindex ( ) )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertequals ( 0, result )
[2]: org. junit. assert. assertequals ( 2, result )
[3]: , result )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( service . launch ( "job" , jobparameters ) )
[0]: org. junit. assert. assertnotnull ( assignment )
[1]: org. junit. assert. asserttrue ( errormsg, progresschangedafterlocationchangedafterlocationchanged. get ( ) )
[2]: org. junit. assert. asserttrue ( errmsg, progresschangedafterlocationchangedafterlocationchanged. get ( ) )
[3]: org. junit. assert. asserttrue ( errormsg )
[4]: org. junit. assert. asserttrue ( errormsg, ( errmsg == null ) )

************

************
tgt: org . junit . assert . assertequals ( true , featureenabled )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, onedollars. compareto ( zerodollars ) )
[2]: org. junit. assert. assertequals ( 0, onedollars. compareto ( zerodollars ) )
[3]: org. junit. assert. assertequals ( 1, onedollars. compareto ( zerodollar ) )
[4]: org. junit. assert. assertequals ( 0, onedollars. compareto ( zerodollar ) )

************

************
tgt: org . junit . assert . assertequals ( tknzn . gettokens ( ) . length , 6 )
[0]: ) )
[1]: org. junit. assert. assertequals ( byteswritten, result )
[2]: org. junit. assert. assertequals ( byteswritten + string, result )
[3]: org. junit. assert. assertequals ( byteswritten + string ), result )
[4]: org. junit. assert. assertequals ( byteswritten )

************

************
tgt: org . junit . assert . assertfalse ( result . hasnext ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( executor )
[2]: org. junit. assert. assertequals ( 1, persons. size ( ) )
[3]: org. junit. assert. assertnotnull ( persons )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "512mib" , newsize )
[0]: org. junit. assert. assertequals ( 1, results. size ( ) )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( expected, expected )
[3]: org. junit. assert. assertequals ( expected, list )
[4]: ( expected ) )

************

************
tgt: org . junit . assert . assertequals ( containernode , entry . getvalue ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( true, getexception )
[2]: org. junit. assert. assertnotnull ( inputfile )
[3]: org. junit. assert. assertequals ( period, genson. serialize ( json ) )
[4]: org. junit. assert. assertequals ( period, json )

************

************
tgt: org . junit . assert . assertnull ( returnedhandler )
[0]: org. junit. assert. assertequals ( period, genson. serialize ( period ) )
[1]: org. junit. assert. assertequals ( period. tostring ( ), json )
[2]: org. junit. assert. assertequals ( period. serialize ( period ), json )
[3]: org. junit. assert. assertnotnull ( validate ( context, attribute, root ) )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. equalto ( true ) )

************

************
tgt: org . junit . assert . assertnull ( operationsdataprocessor . compilerequest ( types ) )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. equalto ( false ) )
[1]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. equalto ( expected ) )
[2]: org. junit. assert. assertthat ( result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( p, expectedisindex ( i ) )

************

************
tgt: org . junit . assert . asserttrue ( e . isaccesscontrolviolation ( ) )
[0]: org. junit. assert. assertnotnull ( p. expectedisindex ( i ) )
[1]: org. junit. assert. assertnotnull ( expectedisindex ( i ) )
[2]: org. junit. assert. assertequals ( p, expectedisindex ( i ), i )
[3]: org. junit. assert. assertequals ( p, expectedisindex ( i ), 0 )
[4]: org. junit. assert. assertequals ( 1, level )

************

************
tgt: org . junit . assert . assertthat ( matchexprbdd , org . hamcrest . matchers . equalto ( icmptypebdd ) )
[0]: org. junit. assert. assertequals ( x, x )
[1]: org. junit. assert. assertequals ( x, java. lang. string. valueof ( x ) )
[2]: org. junit. assert. assertequals ( 20, x )
[3]: org. junit. assert. assertequals ( x, java. lang. long. valueof ( x ) )
[4]: org. junit. assert. assertequals ( x, 1 )

************

************
tgt: org . junit . assert . asserttrue ( ( ! result ) )
[0]: org. junit. assert. assertthat ( target. iserror ( null ), org. hamcrest. corematchers. is ( false ) )
[1]: org. junit. assert. assertthat ( target. iserror ( ""test"" ), org. hamcrest. corematchers. is ( false ) )
[2]: org. junit. assert. assertthat ( target. iserror ( string. tostring ( ) ), org. hamcrest. corematchers. is ( false ) )
[3]: org. junit. assert. assertfalse ( target. iserror ( null ) )
[4]: org. junit. assert. assertthat ( target. iserror ( string. tostring ( ) ), org. hamcrest. corematchers. is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( expectedschema , actualschema )
[0]: org. junit. assert. asserttrue ( validassert )
[1]: org. junit. assert. asserttrue ( validplaceholder )
[2]: org. junit. assert. assertthat ( matchingartifacts. isempty ( ), org. hamcrest. matchers. is ( false ) )
[3]: org. junit. assert. assertthat ( matchedartifacts. isempty ( ), org. hamcrest. matchers. is ( false ) )
[4]: org. junit. assert. assertthat ( matchingartifacts, org. hamcrest. matchers. is ( false ) )

************

************
tgt: org . junit . assert . assertequals ( "1" , out . tostring ( ) )
[0]: org. junit. assert. assertthat ( matchingartifacts. isempty ( ), org. hamcrest. matchers. is ( true ) )
[1]: org. junit. assert. assertfalse ( matchingartifacts. isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, owner. getdisplayname ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, owner. getdisplayname ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, owner. getdisplayname ( ) )

************

************
tgt: org . junit . assert . assertthat ( vdb . ismodified ( ) , org . hamcrest . core . is . is ( false ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), owner )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, count. get ( ) )
[3]: org. junit. assert. assertequals ( 0, count. get ( ) )
[4]: org. junit. assert. assertequals ( 2, count. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( elementposition >= 0 ) )
[0]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( e. getmessage ( ), actualos )
[2]: org. junit. assert. assertnull ( e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( e. getmessage ( ), actualos )
[4]: ) )

************

************
tgt: org . junit . assert . assertarrayequals ( signature , decoded )
[0]: org. junit. assert. assertnotnull ( bean )
[1]: org. junit. assert. assertequals ( 0, bean. size ( ) )
[2]: org. junit. assert. assertequals ( 1, bean. size ( ) )
[3]: org. junit. assert. assertequals ( metadata, bean )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( result , new java . lang . integer ( fixture . getstaticfield ( ) ) )
[0]: org. junit. assert. assertequals ( new java. math. bigdecimal ( product1 ), count )
[1]: org. junit. assert. assertequals ( new java. math. bigdecimal ( product2 ), count )
[2]: org. junit. assert. assertequals ( product2, count )
[3]: org. junit. assert. assertequals ( product1, count )
[4]: org. junit. assert. assertequals ( new java. math. bigdecimal ( products1 ), count )

************

************
tgt: org . junit . assert . assertfalse ( ret )
[0]: org. junit. assert. assertequals ( outval, 1 )
[1]: org. junit. assert. assertequals ( outval, 3 )
[2]: org. junit. assert. assertequals ( outval, 0 )
[3]: org. junit. assert. assertequals ( null, gfun. getname ( ) )
[4]: org. junit. assert. assertequals ( org. phenotips. data. permissions. internal. defaultcollaboratortest. collaborator, c. getname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( mysecondservice . getrandomnumber ( ) ) < 10 ) )
[0]: org. junit. assert. assertnotnull ( filterdata. dojsonroundtrip ( filterdata ) )
[1]: org. junit. assert. assertequals ( filterdata, filterdata. dojsonroundtrip ( filterdata ) )
[2]: org. junit. assert. assertequals ( null, filterdata. dojsonroundtrip ( filterdata ) )
[3]: org. junit. assert. assertequals ( 1, filterdata. dojsonroundtrip ( filterdata ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( builder . rollcycle ( ) ) instanceof net . openhft . chronicle . queue . rollcycledefaultingtest . myrollcycle ) )
[0]: org. junit. assert. assertequals ( max, highest )
[1]: org. junit. assert. assertequals ( ( threads + 1 ), highest )
[2]: org. junit. assert. assertequals ( 1, highest )
[3]: org. junit. assert. assertequals ( ( threads * highest ), highest )
[4]: , highest )

************

************
tgt: org . junit . assert . assertthat ( directive . getfield ( ) , org . hamcrest . corematchers . equalto ( com . brandwatch . robots . domain . otherdirectivetest . field ) )
[0]: org. junit. assert. asserttrue ( visible )
[1]: org. junit. assert. assertequals ( true, context. issessionrequired ( ) )
[2]: org. junit. assert. assertequals ( true, event. issessionrequired ( ) )
[3]: org. junit. assert. assertfalse ( builder. issessionrequired ( ) )
[4]: org. junit. assert. assertequals ( true, msg. issessionrequired ( ) )

************

************
tgt: org . junit . assert . assertnull ( reader . unprocessedatoms ( ) )
[0]: org. junit. assert. assertfalse ( event. issessionrequired ( ) )
[1]: org. junit. assert. assertnotnull ( org. eclipse. kapua. commons. util. payloads. todisplaystring ( null ) )
[2]: org. junit. assert. assertnotnull ( consumer. receive ( 1 ) )
[3]: org. junit. assert. assertnotnull ( consumer. receive ( 0 ) )
[4]: org. junit. assert. assertnotnull ( consumer. receive ( 1000 ) )

************

************
tgt: org . junit . assert . asserttrue ( ( index >= servercount ) )
[0]: org. junit. assert. assertnotnull ( consumer )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, dao. findjobregisterstatistics ( null ). size ( ) )
[3]: org. junit. assert. assertnull ( findjobregisterstatistics ( null ) )
[4]: org. junit. assert. assertnotnull ( findjobregisterstatistics ( null ) )

************

************
tgt: org . junit . assert . assertequals ( date , ifevent . gettime ( ) )
[0]: org. junit. assert. assertequals ( 0, repository. findjobregisterstatistics ( null ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, findjobregisterstatistics ( null ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, result. getdouble ( 0 ), 0.0 )
[3]: org. junit. assert. assertequals ( 1.0, result. getdouble ( 0 ), 0.0 )
[4]: org. junit. assert. assertequals ( 0.0, result. getdouble ( 0 ), 0.0 )

************

************
tgt: org . junit . assert . assertequals ( "test" , hbmeta . getcolumnname ( ) )
[0]: org. junit. assert. assertequals ( 1, result. getdouble ( 0 ), 0 )
[1]: org. junit. assert. assertequals ( 4, result. getdouble ( 0 ), 0.0 )
[2]: org. junit. assert. assertequals ( 1, tokens. length )
[3]: org. junit. assert. assertarrayequals ( 1, tokens. length )
[4]: org. junit. assert. assertequals ( 2, tokens. length )

************

************
tgt: org . junit . assert . assertequals ( expectedtostringvalue , tostringvalue )
[0]: org. junit. assert. assertequals ( 3, tokens. length )
[1]: ) )
[2]: org. junit. assert. assertnull ( org. apache. servicecomb. transport. rest. servlet. servletutils. getproperty ( const. url_prefix ) )
[3]: org. junit. assert. assertequals ( null, org. apache. servicecomb. transport. rest. servlet. servletutils. getproperty ( const. url_prefix ) )
[4]: org. junit. assert. assertnotnull ( org. apache. servicecomb. transport. rest. servlet. servletutils. getproperty ( const. url_prefix ) )

************

************
tgt: org . junit . assert . assertequals ( numbuckets , edgeconf . getnumbuckets ( ) )
[0]: org. junit. assert. assertequals ( null, org. apache. servicecomb. transport. rest. servlet. servletutils. getproperty ( ""a"" ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0.0, min, 0.0 )
[3]: org. junit. assert. assertequals ( null, min, 0.0 )
[4]: org. junit. assert. assertequals ( 1.0, min, 0.0 )

************

************
tgt: org . junit . assert . asserttrue ( ( ( list . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( 0, min, 0.0 )
[1]: test discovering percentage
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( flowstate. vserver_starting, result )
[4]: org. junit. assert. assertequals ( flowstate. finished, result )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( flowstate. vserver_stopped, result )
[1]: org. junit. assert. assertequals ( flowstate. vsdisk, result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( 1, results. size ( ) )
[4]: org. junit. assert. assertequals ( true, isfileadirectory )

************

************
tgt: org . junit . assert . asserttrue ( ( count == 15 ) )
[0]: org. junit. assert. assertfalse ( isfileadirectory )
[1]: org. junit. assert. assertequals ( false, isfileadirectory )
[2]: org. junit. assert. assertthat ( result. size ( ), org. hamcrest. corematchers. is ( 0 ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), parseroute ( null ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( null ), parseroute ( null ) )

************

************
tgt: org . junit . assert . assertequals ( m , m2 )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), parseroute ( null ) )
[1]: org. junit. assert. assertnotnull ( parseroute ( null ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( consumererror, geterror ( consumererror ) )
[4]: org. junit. assert. assertnull ( geterror ( consumererror ) )

************

************
tgt: org . junit . assert . assertnull ( request . getvisitorregion ( ) )
[0]: org. junit. assert. asserttrue ( consumererror. geterror ( consumererror ) )
[1]: org. junit. assert. asserttrue ( testconsumer. geterror ( consumererror ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( logentries )
[4]: org. junit. assert. assertequals ( 1, logentries. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( origin . compareto ( result ) , 0 )
[0]: org. junit. assert. assertnotnull ( sourcefile )
[1]: org. junit. assert. assertequals ( 0, sourcefile. length ( ) )
[2]: org. junit. assert. assertequals ( null, execute ( parameters ) )
[3]: org. junit. assert. assertequals ( group, group2 )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( group, group2 ), group2 )

************

************
tgt: org . junit . assert . assertequals ( result , new com . orientechnologies . orient . core . metadata . schema . date ( time ) )
[0]: org. junit. assert. assertequals ( group. union ( group2, group2 ), group2 )
[1]: org. junit. assert. assertequals ( 1, group2. materialized ( ). size ( ) )
[2]: org. junit. assert. assertequals ( group, group2. union ( group, group2 ) )
[3]: org. junit. assert. assertequals ( 0, instance. delete ( ) )
[4]: org. junit. assert. assertequals ( 0, output. delete ( ) )

************

************
tgt: org . junit . assert . asserttrue ( dest . get ( 0 ) )
[0]: org. junit. assert. assertequals ( null, instance. delete ( ) )
[1]: org. junit. assert. assertequals ( 0, instance. delete ( ). length )
[2]: ) )
[3]: org. junit. assert. assertequals ( true, result )
[4]: org. junit. assert. assertequals ( false, result )

************

************
tgt: org . junit . assert . assertfalse ( solution . equals ( new java . lang . string ( "" ) ) )
[0]: org. junit. assert. assertfalse ( result )
[1]: org. junit. assert. asserttrue ( result )
[2]: org. junit. assert. assertthat ( result, org )
[3]: org. junit. assert. assertequals ( complex. zero, complex. reciprocal ( ) )
[4]: org. junit. assert. assertequals ( complex. zero, complex. reciprocal ( ). isnan ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: org. junit. assert. assertequals ( complex. zero. reciprocal ( ), complex. inf )
[1]: org. junit. assert. assertequals ( complex. zero, reciprocal ( ) )
[2]: org. junit. assert. assertequals ( complex. zero, complex. reciprocal ( ). isnan ( )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertequals ( 2 , sendedmails . size ( ) )
[0]: org. junit. assert. assertequals ( 0, result )
[1]: org. junit. assert. assertequals ( 1, actuallist. size ( ) )
[2]: org. junit. assert. assertequals ( 0, actuallist. size ( ) )
[3]: org. junit. assert. assertnotnull ( actuallist )
[4]: org. junit. assert. assertequals ( null, actuallist )

************

************
tgt: org . junit . assert . assertequals ( 3 , i )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( buildsrootfolder )
[2]: org. junit. assert. assertequals ( 1, buildsrootfolder. size ( ) )
[3]: org. junit. assert. assertequals ( 1, buildsrootfolder. length )
[4]: org. junit. assert. assertequals ( 1, buildsrootfolder. length ( ) )

************

************
tgt: org . junit . assert . assertequals ( "name" , onemore . askey ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( sum, sum, 0.0 )
[2]: org. junit. assert. assertequals ( sum, sum, 0 )
[3]: org. junit. assert. assertequals ( sum, sum )
[4]: org. junit. assert. assertequals ( sum, sum, 1.0 )

************

************
tgt: org . junit . assert . assertthat ( e . getvalidationreport ( ) )
[0]: org. junit. assert. assertequals ( sum, sum, 1 )
[1]: org. junit. assert. assertequals ( 1, str. size ( ) )
[2]: org. junit. assert. assertequals ( 0, str. size ( ) )
[3]: org. junit. assert. assertequals ( 1, str. size ( ) )
[4]: org. junit. assert. assertequals ( 1, str. length ( ) )

************

************
tgt: org . junit . assert . assertthat ( sql , org . hamcrest . corematchers . is ( expected ) )
[0]: org. junit. assert. assertequals ( 1, str. size ( ) )
[1]: org. junit. assert. assertequals ( i, x. get ( ) )
[2]: org. junit. assert. assertequals ( 1, x. get ( ) )
[3]: org. junit. assert. assertequals ( i, y. get ( ) )
[4]: org. junit. assert. assertequals ( 0, x. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( new java . lang . string [ ] { "b" } , configurable . getenabledprotocols ( ) ) )
[0]: get ( ) )
[1]: org. junit. assert. assertequals ( 524, shortesttrack )
[2]: org. junit. assert. assertequals ( 1, shortesttrack )
[3]: org. junit. assert. assertequals ( track, shortesttrack )
[4]: org. junit. assert. assertequals ( 0, shortesttrack. length )

************

************
tgt: org . junit . assert . assertnotnull ( limitorder )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, cap. get ( 0 ) )
[2]: org. junit. assert. assertequals ( 1, cap. get ( 0 ) )
[3]: org. junit. assert. assertnotnull ( textareaclass. addtextareafield ( null, null, 33, null ) )
[4]: org. junit. assert. assertequals ( 1, textareaclass. addtextareafield ( null, null, 33, null ) )

************

************
tgt: org . junit . assert . asserttrue ( resultsfile . exists ( ) )
[0]: org. junit. assert. assertequals ( 0, textareaclass. addtextareafield ( null, null, 33, null ). length )
[1]: org. junit. assert. assertequals ( 0, textareaclass. addtextareafield ( null, null, 33, null ). size ( )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, terms. isempty ( ) )
[4]: org. junit. assert. assertequals ( 1, terms. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , res . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), terms )
[1]: org. junit. assert. assertequals ( pool1, pool2 )
[2]: org. junit. assert. assertnotnull ( entryrelationship )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 46 ), stack )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), stack )

************

************
tgt: org . junit . assert . assertequals ( "canberra" , result )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 0, 1, 2, 3, 46 ), stack )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 46 ), stack )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 46, 5 ), stack )
[3]: org. junit. assert. assertnotnull ( cf. getsegment ( ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), cf. getsegment ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), cf. getsegment ( ) )
[1]: org. junit. assert. assertequals ( org. pb. x12. cf. segment, cf. getsegment ( ) )
[2]: org. junit. assert. assertequals ( 1, cf. getsegment ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, samples. size ( ) )
[4]: org. junit. assert. assertequals ( double. max_value, samples. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( resolver . makemodule ( null ) )
[0]: org. junit. assert. assertequals ( double. max_value, pl. size ( ) )
[1]: org. junit. assert. assertequals ( 1.0, samples. size ( ) )
[2]: org. junit. assert. assertequals ( double. max_value, pl. gettime ( ) )
[3]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ 0 ] [ ] ) )
[4]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ ] [ ] { new java. lang. string [ 0 ] } ) )

************

************
tgt: org . junit . assert . assertnotnull ( instance )
[0]: org. junit. assert. assertthat ( results, is ( new java. util. arraylist < java. lang. string > ( ) ) )
[1]: , results )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, expressie. aantalelementen ( ) )
[4]: org. junit. assert. assertequals ( null, wrapper. getcomment ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( bpmnmodelinstance )
[0]: org. junit. assert. assertequals ( sql, java. util. arrays. tostring ( rs ) )
[1]: org. junit. assert. assertequals ( sql, java. lang. string. tostring ( rs ) )
[2]: org. junit. assert. assertequals ( sql, java. lang. string. valueof ( result1 ) )
[3]: org. junit. assert. assertequals ( sql, junit. tostring ( rs ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( expect . equals ( ouput ) )
[0]: org. junit. assert. assertequals ( 0.0, unpackdouble ( java. lang. math. negative_infinity ), 0.0 )
[1]: org. junit. assert. assertequals ( double. negative_infinity, unpackdouble ( nt ), 0.0 )
[2]: org. junit. assert. assertequals ( 0.0, unpackdouble ( binary16. negative_infinity ), 0.0 )
[3]: org. junit. assert. assertequals ( 0.0, unpackdouble ( nt ), 0.0 )
[4]: org. junit. assert. assertequals ( 0.0, unpackdouble ( java. lang. math. negative_infinity ) )

************

************
tgt: org . junit . assert . assertsame ( message , queue . dequeue ( ( - 1 ) ) )
[0]: org. junit. assert. assertequals ( records, failures )
[1]: org. junit. assert. assertequals ( responses, failures )
[2]: org. junit. assert. assertequals ( results, failures )
[3]: org. junit. assert. assertequals ( 1, failures. length )
[4]: org. junit. assert. assertequals ( 0, failures. length )

************

************
tgt: org . junit . assert . assertequals ( userid , req . getuserid ( ) )
[0]: org. junit. assert. assertequals ( 1, deployartifact. count ( ) )
[1]: org. junit. assert. assertequals ( 1, deployartifact. exists ( ) )
[2]: org. junit. assert. assertequals ( 3, deployartifact. count ( ) )
[3]: org. junit. assert. assertnotnull ( deployartifact )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( uaa . runtests ( false , true ) )
[0]: org. junit. assert. assertequals ( 1, result. hello ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( result. hello ( ) )
[2]: org. junit. assert. assertequals ( iiopobj, result. hello ( ) )
[3]: org. junit. assert. assertequals ( iiopobj, result. hello ( ). size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( squarescache . get ( 4 ) ) == 16 ) )
[0]: org. junit. assert. assertnotnull ( res )
[1]: org. junit. assert. assertnull ( res )
[2]: org. junit. assert. assertnotnull ( res. stream )
[3]: org. junit. assert. assertnotnull ( resource )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , parsedrecords . size ( ) )
[0]: org. junit. assert. assertequals ( value, got. getpbigdecimal ( ) )
[1]: org. junit. assert. assertequals ( 0, org. apache. beam. sdk. util. coderutils. decodefrombytearray ( coder, encoded ). length )
[2]: org. junit. assert. assertarrayequals ( encoded, org. apache. beam. sdk. util. coderutils. decodefrombytearray ( coder, encoded ) )
[3]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 1, 1 }, org. apache. beam. sdk. util. coderutils. decodefrombytearray ( coder, encoded ) )
[4]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 1, 1 }, org. apache. beam. sdk. util. coderutils. decodefrombytearray ( coder. tobytearray ( ), encoded ) )

************

************
tgt: org . junit . assert . assertthat ( this . arr . get ( 1 ) , org . hamcrest . core . is . is ( 1 ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( ch. cyberduck. core. nsobjectpathreference. get ( second ) )
[2]: org. junit. assert. assertequals ( 1, ch. cyberduck. core. nsobjectpathreference. get ( second ) )
[3]: org. junit. assert. assertnull ( ch. cyberduck. core. nsobjectpathreference. get ( second ) )
[4]: org. junit. assert. assertsame ( one, ch. cyberduck. core. nsobjectpathreference. get ( second ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( resultfromjpql . size ( ) ) > 0 ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( resultaat )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnotnull ( element )
[4]: org. junit. assert. assertnotnull ( element. result )

************

************
tgt: org . junit . assert . assertnull ( actie . bepaaltevervallenvoorkomen ( ) )
[0]: org. junit. assert. assertnotnull ( element. list )
[1]: org. junit. assert. assertnotnull ( text )
[2]: org. junit. assert. assertequals ( message, text )
[3]: org. junit. assert. assertequals ( msg, text )
[4]: org. junit. assert. assertequals ( text, text )

************

************
tgt: org . junit . assert . assertthat ( p , org . hamcrest . corematchers . equalto ( np . getpredicate ( ) ) )
[0]: ) )
[1]: org. junit. assert. assertfalse ( server. isstarted ( ) )
[2]: org. junit. assert. assertequals ( 1, movies. size ( ) )
[3]: org. junit. assert. assertequals ( 0, movies. size ( ) )
[4]: org. junit. assert. assertequals ( 3, movies. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result . hasnext ( ) )
[0]: org. junit. assert. assertequals ( 2, movies. size ( ) )
[1]: org. junit. assert. assertnotnull ( movies )
[2]: org. junit. assert. assertnotnull ( response )
[3]: org. junit. assert. assertequals ( 0, response. size ( ) )
[4]: org. junit. assert. assertequals ( 0, response. bytes ( ). length )

************

************
tgt: org . junit . assert . assertequals ( org . oscm . test . datetimehandling . calculatemillis ( "2012-02-28<sp>00:00:00" ) , billingstarttime )
[0]: org. junit. assert. assertequals ( 0, response. content ( ). length )
[1]: org. junit. assert. assertequals ( 1, response. content ( ). length )
[2]: org. junit. assert. assertnotnull ( deserialisedbytes )
[3]: org. junit. assert. assertequals ( bytes, deserialisedbytes )
[4]: org. junit. assert. assertnotnull ( storageservice. getordercross ( order. getid ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , events . size ( ) )
[0]: org. junit. assert. assertequals ( order, storageservice. getordercross ( null ) )
[1]: org. junit. assert. assertnotnull ( storageservice. getordercross ( null ) )
[2]: org. junit. assert. assertequals ( order, storageservice. getordercross ( 0 ) )
[3]: string ) )
[4]: org. junit. assert. assertarrayequals ( expectedarray, resultarray )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . integer ( 0 ) , net . vidageek . mirror . fixtures . methodfixture . getargnum ( ) )
[0]: org. junit. assert. assertarrayequals ( resultarray, expectedarray )
[1]: org. junit. assert. assertarrayequals ( expectedarray, resultarray, 0 )
[2]: org. junit. assert. assertequals ( expectedarray, resultarray )
[3]: org. junit. assert. assertarrayequals ( expectedarray, resultarray, null )
[4]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. validation. validators. put ), result. passedvalidation ( ) )

************

************
tgt: org . junit . assert . assertequals ( "name" , entity . getname ( ) )
[0]: org. junit. assert. assertequals ( 1, resultmessage ( result, org. openstack. atlas. api. validation. validators. put ). size ( ) )
[1]: org. junit. assert. assertnotnull ( e )
[2]: org. junit. assert. assertequals ( e, e )
[3]: org. junit. assert. assertarrayequals ( originalinput, result )
[4]: org. junit. assert. assertequals ( originalinput. length, result. length )

************

************
tgt: org . junit . assert . assertnotnull ( catalogproducttierpriceentities )
[0]: org. junit. assert. assertarrayequals ( originalinput. getbytes ( ), result )
[1]: org. junit. assert. assertequals ( originalinput. trim ( ), result. length )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. asserttrue ( visiblecomments. isempty ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), to. isempty ( ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( expected ) ) )
[0]: org. junit. assert. assertequals ( 1, to. isempty ( ) )
[1]: org. junit. assert. assertequals ( true, to. isempty ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), to. isempty ( ) )
[3]: org. junit. assert. assertequals ( 0, to. isempty ( ) )
[4]: org. junit. assert. assertnotnull ( actual. getname ( ) )

************

************
tgt: org . junit . assert . assertnull ( resolver )
[0]: org. junit. assert. assertequals ( java. lang. string. class. getname ( ), actual. getname ( ) )
[1]: org. junit. assert. assertequals ( expected. getname ( ), actual. getname ( ) )
[2]: org. junit. assert. assertequals ( ""test"", actual. getname ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class. getname ( ), actual. getclass ( ). getname ( ) )
[4]: org. junit. assert. asserttrue ( testdata. canconvert ( convertermanager ) )

************

************
tgt: org . junit . assert . assertequals ( expectedpartitionsfortask , grouper . partitiongroups ( topicgroups , metadata ) )
[0]: org. junit. assert. assertfalse ( testdata. canconvert ( convertermanager ) )
[1]: org. junit. assert. asserttrue ( convertermanager. canconvert ( testdata ) )
[2]: org. junit. assert. assertfalse ( convertermanager. canconvert ( testdata ) )
[3]: org. junit. assert. asserttrue ( testdata. canconvert ( testdata ) )
[4]: org. junit. assert. assertequals ( 1, result. issuccess ( ) )

************

************
tgt: org . junit . assert . assertnull ( newstate )
[0]: org. junit. assert. assertequals ( expectedjsonarray, actualjsonarray. tostring ( ) )
[1]: org. junit. assert. assertequals ( expectedjsonarray. tostring ( ), actualjsonarray )
[2]: org. junit. assert. assertequals ( expectedjsonarray, actualjsonarray )
[3]: org. junit. assert. assertequals ( expectedjsonarray. tostring ( ), actualjsonarray ( ) )
[4]: org. junit. assert. assertequals ( expectedjsonarray )

************

************
tgt: org . junit . assert . assertnull ( identifiertype )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertequals ( s, string )
[2]: org. junit. assert. assertequals ( s, s )
[3]: the s )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , map . size ( ) )
[0]: org. junit. assert. assertequals ( 1, items. size ( ) )
[1]: org. junit. assert. assertequals ( 0, items. size ( ) )
[2]: org. junit. assert. assertequals ( items, o )
[3]: org. junit. assert. assertequals ( items, items )
[4]: org. junit. assert. assertnotnull ( items )

************

************
tgt: org . junit . assert . assertnotnull ( eu . toolchain . concurrent . coreasync . builder ( ) )
[0]: org. junit. assert. assertthat ( array, org. hamcrest. corematchers. is ( new int [ ] { 2, 3, 5 } ) )
[1]: org. junit. assert. assertthat ( array, org. hamcrest. corematchers. is ( new int [ ] { 2, 5, 7 } ) )
[2]: org. junit. assert. assertthat ( array, org. hamcrest. corematchers. is ( new int [ ] { 3, 5, 7 } ) )
[3]: org. junit. assert. assertarrayequals ( array, buffer )
[4]: org. junit. assert. assertthat ( array )

************

************
tgt: org . junit . assert . assertequals ( s1 , s2 )
[0]: org. junit. assert. assertequals ( datalist, essyncconfigs )
[1]: org. junit. assert. assertnotnull ( essyncconfigs )
[2]: org. junit. assert. assertequals ( datalist, response )
[3]: org. junit. assert. assertequals ( datalist, result )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( httpstatus . sc_created , response . getstatuscode ( ) )
[0]: org. junit. assert. assertequals ( 7, int_field. getintfield ( ) )
[1]: org. junit. assert. assertequals ( 7, int_field. getintfield ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 7, ( ( int_field ) + 1 ) )
[3]: org. junit. assert. assertequals ( 5, int_field. getintfield ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( com . psddev . dari . db . query . from ( com . psddev . dari . h2 . writemodel . class ) . count ( ) , is ( ( ( ( long ) ( models . size ( ) ) ) - 1 ) ) )
[0]: org. junit. assert. assertequals ( 0, scores. size ( ) )
[1]: org. junit. assert. assertequals ( 1, scores. size ( ) )
[2]: org. junit. assert. asserttrue ( ( ( scores. size ( ) ) > 0 ) )
[3]: org. junit. assert. assertequals ( 0l, scores. size ( ) )
[4]: org. junit. assert. assertequals ( 0.0, scores. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( entries . contains ( entry2 ) ) && ( ! ( entries . contains ( entry ) ) ) ) )
[0]: org. junit. assert. assertnotnull ( clone )
[1]: org. junit. assert. assertnull ( clone )
[2]: org. junit. assert. assertnotnull ( clone. context )
[3]: org. junit. assert. assertnotnull ( clone. id )
[4]: org. junit. assert. assertnotnull ( clon )

************

************
tgt: org . junit . assert . assertequals ( new org . eclipse . collections . impl . math . mutableinteger ( 5 ) , result )
[0]: org. junit. assert. assertequals ( 1, org. openscience. cdk. tools. manipulator. reactionmanipulator. getallatomcontainers ( reaction ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, org. openscience. cdk. tools. manipulator. reactionmanipulator. getallatomcontainers ( reaction ). size ( ) )
[2]: org. junit. assert. assertnotnull ( org. openscience. cdk. tools. manipulator. reactionmanipulator. getallatomcontainers ( reaction ) )
[3]: org. junit. assert. assertnull ( org. openscience. cdk. tools. manipulator. reactionmanipulator. getallatomcontainers ( reaction ) )
[4]: org. junit. assert. assertequals ( 1, org. openscience. cdk. tools. manipulator. reactionmanipulator. getallatomcontainers ( reaction ). size ( )

************

************
tgt: org . junit . assert . assertfalse ( indexexists ( graphdb ) )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. asserttrue ( false )
[2]: org. junit. assert. asserttrue ( true )
[3]: org. junit. assert. assertnull ( e )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( sut . checkwithintime ( datetime ) )
[0]: org. junit. assert. assertnull ( demomode. getdemouploadfile ( defaultpllocation ) )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertnull ( result. result )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , parent . indexofchild ( child ) )
[0]: org. junit. assert. assertequals ( 0, result. size )
[1]: org. junit. assert. assertfalse ( containsactivationkeyvaluepair ( activationpropertyoverride, activationpropertyoverride, null ) )
[2]: org. junit. assert. assertfalse ( containsactivationkeyvaluepair ( activationpropertyoverride, activationpropertypropertyoverride, null ) )
[3]: org. junit. assert. assertfalse ( containsactivationkeyvaluepair ( activationpropertyoverride, activationproperty, null ) )
[4]: org. junit. assert. assertfalse ( containsactivationkeyvaluepair ( activationpropertyoverride, activationpropertypropertypropertyoverride, null ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , functionnames . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, result. size ( ) )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ollie ), result )

************

************
tgt: org . junit . assert . assertfalse ( validator . validate ( connection ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, mcluster. rpcserviceavailable ( ) )
[2]: org. junit. assert. assertequals ( null, mcluster. rpcserviceavailable ( ) )
[3]: org. junit. assert. assertnull ( mcluster. rpcserviceavailable ( ) )
[4]: org. junit. assert. asserttrue ( ( successes > zkstoptime ) )

************

************
tgt: org . junit . assert . assertnotnull ( resurl )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, surroundingcells. size ( ) )
[2]: org. junit. assert. assertequals ( 0, surroundingcells. size ( ) )
[3]: org. junit. assert. assertfalse ( org. openspotlight. common. util. assertions. accept ( state ) )
[4]: org. junit. assert. assertfalse ( parser. accept ( state ) )

************

************
tgt: org . junit . assert . assertfalse ( topologyresolved )
[0]: org. junit. assert. assertfalse ( handler. accept ( state ) )
[1]: org. junit. assert. assertfalse ( state. accept ( state ) )
[2]: org. junit. assert. assertfalse ( org. openspotlight. common. util. assertions. accepting ( state ) )
[3]: org. junit. assert. asserttrue ( found )
[4]: org. junit. assert. asserttrue ( showing )

************

************
tgt: org . junit . assert . assertnotnull ( invoice )
[0]: org. junit. assert. assertequals ( true, showing )
[1]: org. junit. assert. assertnotnull ( showing )
[2]: org. junit. assert. assertequals ( true, show )
[3]: , showing )
[4]: org. junit. assert. asserttrue ( other. equals ( other ) )

************

************
tgt: org . junit . assert . assertnull ( obj . s31 ( ) )
[0]: org. junit. assert. asserttrue ( java. util. arrays. equals ( other. getclass ( ) ) )
[1]: org. junit. assert. asserttrue ( s. equals ( other ) )
[2]: org. junit. assert. asserttrue ( java. util. arrays. equals ( other. toarray ( ) ) )
[3]: org. junit. assert. asserttrue ( expected. equals ( other ) )
[4]: org. junit. assert. assertequals ( 0, row. getvalue ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( options . getinclbootstrapclasses ( ) )
[0]: org. junit. assert. assertequals ( null, row. getvalue ( 0 ) )
[1]: org. junit. assert. assertequals ( 1, row. getvalue ( 0 ) )
[2]: org. junit. assert. assertnotnull ( row. getvalue ( 0 ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( isverified )
[0]: org. junit. assert. assertequals ( result. size ( ), 1 )
[1]: org. junit. assert. assertequals ( 0, result. size ( ) )
[2]: org. junit. assert. assertequals ( result. size ( ), 0 )
[3]: org. junit. assert. assertequals ( 2, result. size ( ) )
[4]: org. junit. assert. assertnotnull ( request )

************

************
tgt: org . junit . assert . assertarrayequals ( out1 . tobytearray ( ) , out2 . tobytearray ( ) )
[0]: org. junit. assert. assertnotnull ( request. contenttypeapplicationjson ( ) )
[1]: org. junit. assert. assertnull ( request. contenttypeapplicationjson ( ) )
[2]: org. junit. assert. assertnull ( request )
[3]: org. junit. assert. assertnull ( request. response )
[4]: org. junit. assert. assertequals ( expectedhashes, actualhashes )

************

************
tgt: org . junit . assert . assertequals ( 6 , tokens . size ( ) )
[0]: org. junit. assert. assertequals ( expectedhashes, actualhashes. size ( ) )
[1]: org. junit. assert. assertequals ( expectedhashes, actualhashes. get ( 0 ) )
[2]: org. junit. assert. assertequals ( expectedhashes, actualhashes. toarray ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertequals ( r . get ( ) , "bar" )
[0]: org. junit. assert. assertequals ( e, e )
[1]: org. junit. assert. assertequals ( e, factory )
[2]: org. junit. assert. assertequals ( e, this. e )
[3]: org. junit. assert. assertequals ( e, this. e. s )
[4]: org. junit. assert. assertequals ( 1, classpathurls. length )

************

************
tgt: org . junit . assert . assertnotnull ( id )
[0]: org. junit. assert. assertequals ( 0, classpathurls. length )
[1]: org. junit. assert. assertequals ( 2, classpathurls. length )
[2]: org. junit. assert. assertequals ( 5, classpathurls. length )
[3]: org. junit. assert. assertequals ( 3, classpathurls. length )
[4]: org. junit. assert. assertnotnull ( cause )

************

************
tgt: org . junit . assert . assertequals ( "foo!" , getter . get ( foo ) )
[0]: org. junit. assert. assertequals ( 0, mapper. hashcode ( ) )
[1]: org. junit. assert. assertequals ( 1, mapper. hashcode ( ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), mapper. hashcode ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. hashcode ( ), mapper. hashcode ( ) )
[4]: org. junit. assert. assertequals ( java. lang. long. hashcode ( ), mapper. hashcode ( ) )

************

************
tgt: org . junit . assert . assertequals ( allstudies , listmodel . getavailablestudies ( ) )
[0]: org. junit. assert. assertequals ( nodes1, resolver. resolve ( com. spotify. dns. retainingdnssrvresolvertest. fqdn ) )
[1]: org. junit. assert. assertequals ( nodes1, mapping. resolve ( com. spotify. dns. retainingdnssrvresolvertest. fqdn ) )
[2]: org. junit. assert. assertequals ( nodes1, instance. resolve ( com. spotify. dns. retainingdnssrvresolvertest. fqdn ) )
[3]: org. junit. assert. assertequals ( nodes1, binding. resolve ( com. spotify. dns. retainingdnssrvresolvertest. fqdn ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 16 , sid . length ( ) )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( null, e )
[3]: org. junit. assert. assertequals ( expected, e )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "foo" , upload . gettext ( ) )
[0]: org. junit. assert. asserttrue ( readrecordtype. getfieldtypeentries ( ). isempty ( ) )
[1]: org. junit. assert. asserttrue ( readsrecordtype. getfieldtypeentries ( ). isempty ( ) )
[2]: org. junit. assert. asserttrue ( readrecordtype. getfieldtypeentries ( ). contains ( recordtype ) )
[3]: org. junit. assert. asserttrue ( readrecordtype. getfieldtypeentries ( ). isempty ( ) )
[4]: org. junit. assert. asserttrue ( readrecordtype. getfieldtypeentries ( ). isempty ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , messages . size ( ) )
[0]: org. junit. assert. assertequals ( state, node. state )
[1]: org. junit. assert. assertequals ( state. shutdown, node )
[2]: org. junit. assert. assertequals ( state, node )
[3]: org. junit. assert. assertequals ( state,
[4]: state. shutdown )

************

************
tgt: org . junit . assert . asserttrue ( ( result >= 2000 ) )
[0]: org. junit. assert. assertequals ( 1, latest. size ( ) )
[1]: org. junit. assert. assertequals ( 0, latest. size ( ) )
[2]: org. junit. assert. assertequals ( 3, latest. size ( ) )
[3]: org. junit. assert. assertequals ( 2, latest. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( presenter . hasinverseview ( ) )
[0]: org. junit. assert. assertfalse ( requestedshutdowncallable. call ( ) )
[1]: org. junit. assert. asserttrue ( requestedshutdowncallable. call ( ) )
[2]: org. junit. assert. assertthat ( requestedshutdowncallable. call ( ), is ( true ) )
[3]: org. junit. assert. assertthat ( requestedshutdowncallable. call ( ), is ( false ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . size ( ) )
[0]: org. junit. assert. assertthat ( eventhandler. isjobsucceeded ( ), is ( true ) )
[1]: org. junit. assert. assertequals ( 1, ctx. serializer ( java. lang. string. class, 3, 1 ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 3 ), ctx. fields ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), ctx. fields ( ) )
[4]: org. junit. assert. assertequals ( 1, org. teavm. metaprogramming. test. metaprogrammingtest. values. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . eclipse . collections . impl . list . mutable . fastlist . newlistwith ( 3.0 , 2.0 , 4.0 , 1.0 , 5.0 ) , iterable . distinct ( ) . tolist ( ) )
[0]: type ) )
[1]: org. junit. assert. assertnotnull ( testpostdatadefinitiondatadefinitionpermission )
[2]: org. junit. assert. assertnotnull ( data )
[3]: org. junit. assert. assertnotnull ( collection )
[4]: org. junit. assert. assertnotnull ( testpostdatadefinitiondataurl )

************

************
tgt: org . junit . assert . assertequals ( expected , contentsummary . tostring ( true ) )
[0]: org. junit. assert. assertnotnull ( dataset )
[1]: org. junit. assert. asserttrue ( decoder. consume ( buffer ) )
[2]: org. junit. assert. assertequals ( 1, workflows. size ( ) )
[3]: org. junit. assert. assertequals ( 0, workflows. size ( ) )
[4]: org. junit. assert. assertequals ( 3, workflows. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , errors . size ( ) )
[0]: org. junit. assert. asserttrue ( result )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. assertequals ( false, result )
[3]: org. junit. assert. assertfalse ( result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( entity . getcoordinates ( ) . equals ( newcoordinates ) )
[0]: org. junit. assert. assertequals ( true, test5. equals ( null ) )
[1]: org. junit. assert. assertequals ( 1, counter )
[2]: org. junit. assert. assertequals ( 3, counter )
[3]: org. junit. assert. assertequals ( 0, counter )
[4]: org. junit. assert. assertequals ( 5, counter )

************

************
tgt: org . junit . assert . assertnull ( brpbijhoudingsaard )
[0]: org. junit. assert. assertfalse ( stopped )
[1]: org. junit. assert. assertnull ( stopped )
[2]: org. junit. assert. assert assertfalse ( stopped )
[3]: org. junit. assert. assertequals ( false, stopped )
[4]: org. junit. assert. assertequals ( stringdeclaration. string_dec_ascii, a )

************

************
tgt: org . junit . assert . assertfalse ( modelinstancecollection01 . equals ( modelinstancecollection02 ) )
[0]: org. junit. assert. assertnotnull ( a )
[1]: org. junit. assert. assertequals ( stringdeclaration. name, a. name )
[2]: org. junit. assert. assertequals ( stringdeclaration.
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, impl. count )

************

************
tgt: org . junit . assert . assertthat ( treecell . geticon ( ) . tostring ( ) )
[0]: org. junit. assert. assertequals ( 0, impl. count )
[1]: org. junit. assert. assertequals ( 1, impl. size ( ) )
[2]: org. junit. assert. assertequals ( 0, impl. size ( ) )
[3]: org. junit. assert. assertequals ( 1, impl. length )
[4]: org. junit. assert. assertequals ( org. robobinding. codegen. apt. element. parentclass. class, parentclasstypeelement. qname ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , channel . getbytes ( ) )
[0]: org. junit. assert. assertthat ( parentclasstypeelement. qname ( ), is ( org. robobinding. codegen. apt. element. parentclass. class ) )
[1]: org. junit. assert. assertequals ( 1, parentclasstypeelement. qname ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, parentclasstypeelement. qname ( ). length )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, test. findcontentchildren ( children, cookies ). length )

************

************
tgt: org . junit . assert . asserttrue ( ( ( msg . readunsignedbyte ( ) ) == 2 ) )
[0]: org. junit. assert. assertequals ( 1, test. findcontentchildren ( child, cookies ). length )
[1]: org. junit. assert. assertequals ( 1, test. findcontentchildren ( _, cookies ). length )
[2]: org. junit. assert. assertequals ( 1, test. findcontentchildren ( children, cookies ). size ( )
[3]: org. junit. assert. assertequals ( 1, test. findcontentchildren ( child, cookies ). size ( )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( 1 , count )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( action, result )
[2]: org. junit. assert. assertequals ( result, null )
[3]: org. junit. assert. assertequals ( result, expected )
[4]: org. junit. assert. assertequals ( results, liststepexecutionsforstep ( 0, null, 0, 20 ) )

************

************
tgt: org . junit . assert . assertfalse ( ( ( ln . compareto ( ln2 ) ) >= 0 ) )
[0]: org. junit. assert. assertequals ( results, liststepexecutionsforstep ( null, 0, 20, 20 ) )
[1]: org. junit. assert. assertequals ( results, liststepexecutionsforstep ( 0, 0, 20, 20 ) )
[2]: org. junit. assert. assertequals ( results, metrics. liststepexecutionsforstep ( 0, null, 0, 20 ) )
[3]: org. junit. assert. assertequals ( results, liststepexecutionsforstep ( stringjob, 0, 20, 20 ) )
[4]: org. junit. assert. asserttrue ( versioncontext. isdirty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( java . lang . math . abs ( ( stringcount - stringcount2 ) ) ) < 2 ) )
[0]: org. junit. assert. assertequals ( 1, locks. size ( ) )
[1]: org. junit. assert. assertequals ( 0, locks. size ( ) )
[2]: org. junit. assert. assertequals ( true, iscontained )
[3]: org. junit. assert. assertequals ( false, iscontained )
[4]: org. junit. assert. asserttrue ( iscontained )

************

************
tgt: org . junit . assert . asserttrue ( ( e instanceof java . lang . illegalargumentexception ) )
[0]: org. junit. assert. assertfalse ( iscontained )
[1]: org. junit. assert. assertequals ( true, iscontained )
[2]: org. junit. assert. assertequals ( v8, result. getstring ( 0 ) )
[3]: org. junit. assert. assertequals ( null, result. getstring ( 0 ) )
[4]: org. junit. assert. assertequals ( list, result. getstring ( 0 ) )

************

************
tgt: org . junit . assert . assertthat ( total , org . hamcrest . corematchers . is ( 6 ) )
[0]: org. junit. assert. assertnull ( result. getstring ( 0 ) )
[1]: org. junit. assert. assertequals ( v8, result. getstring ( 0 ) )
[2]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( bumtransportips, org. batfish. datamodel. vnisettings. class ), org. hamcrest. matchers. equalto ( vs ) )
[3]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( bumtransportips, org. batfish. datamodel. ip. class ), org. hamcrest. matchers. equalto ( vs ) )
[4]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( bumtransportips, org. batfish. datamodel. uuid. class ), org. hamcrest. matchers. equalto ( vs ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . double ( 70.0 ) , var )
[0]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( bumtransportips, java. util. list. class ), org. hamcrest. matchers. equalto ( vs ) )
[1]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( bumtransportips, org. batfish. datamodel. node. class ), org. hamcrest. matchers. equalto ( vs ) )
[2]: org. junit. assert. assertequals ( 1, principals. size ( ) )
[3]: org. junit. assert. assertequals ( 0, principals. size ( ) )
[4]: org. junit. assert. assertequals ( 2, principals. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( records . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( 3, principals. size ( ) )
[1]: org. junit. assert. assertequals ( 4, principals. size ( ) )
[2]: org. junit. assert. assertnotnull ( graphdb. setconfig ( graphdatabasesettings. array_block_size, graphdatabasebuilder ) )
[3]: org. junit. assert. assertnotnull ( graphdb. setconfig ( graphdatabasesettings. string_block_size, graphdatabasebuilder ) )
[4]: org. junit. assert. assertequals ( 4, impl. getapparentagesecs ( entry ) )

************

************
tgt: org . junit . assert . assertequals ( status . backoff , status )
[0]: org. junit. assert. assertequals ( 4, org. apache. hc. client5. http. impl. cache. cachevaliditypolicy. getapparentagesecs ( entry ) )
[1]: org. junit. assert. assertequals ( 1, reservationstatus. getnumber ( ) )
[2]: org. junit. assert. assertnotnull ( reservationstatus )
[3]: org. junit. assert. assertequals ( 1, reservationstatus. getnumber ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, reservationstatus. getnumber ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 1, reservationstatus. getnumber ( ). length )
[1]: org. junit. assert. asserttrue ( canworkon ( calendar ) )
[2]: org. junit. assert. asserttrue ( calendar. canworkon ( calendar ) )
[3]: org. junit. assert. assertfalse ( calendar. canworkon ( calendar ) )
[4]: org. junit. assert. assertfalse ( canworkon ( calendar ) )

************

************
tgt: org . junit . assert . asserttrue ( contains )
[0]: ) )
[1]: org. junit. assert. assertequals ( orga<sp>type, ie. gettype ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class, ie. gettype ( ) )
[3]: org. junit. assert. assertequals ( "a<sp>type, ie. gettype ( ) )
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( false , result )
[0]: type )
[1]: org. junit. assert. assertequals ( 1, daysinyear )
[2]: org. junit. assert. assertequals ( 0, daysinyear )
[3]: org. junit. assert. assertequals ( 2006, daysinyear )
[4]: org. junit. assert. assertequals ( 126, daysinyear )

************

************
tgt: org . junit . assert . assertequals ( qa . qcri . aidr . dbmanager . ejb . remote . facade . imp . testusersresourcefacadeimp . user . getname ( ) , result . get ( 0 ) . getname ( ) )
[0]: org. junit. assert. assertequals ( 20, daysinyear )
[1]: org. junit. assert. assertnotnull ( com. ibm. ws. security. registry. basic. fat. fattestfederated. servlet. getrealm ( ) )
[2]: org. junit. assert. assertnull ( com. ibm. ws. security. registry. basic. fat. fattestfederated. servlet. getrealm ( ) )
[3]: org. junit. assert. assertequals ( com. ibm. ws. security. registry. basic. fat. fattestfederated. server, com. ibm. ws. security. registry. basic. fat. fattestfederated. servlet )
[4]: org. junit. assert. assertequals ( com. ibm. ws. security. registry. basic. fat. fattestfederated. servlet. getrealm ( ), null )

************

************
tgt: org . junit . assert . assertnotnull ( pcrmanifest )
[0]: )
[1]: org. junit. assert. assertequals ( true, impl. addall ( tsdata ) )
[2]: org. junit. assert. asserttrue ( impl. addall ( tsdata ) )
[3]: org. junit. assert. assertequals ( false, impl. addall ( tsdata ) )
[4]: org. junit. assert. assertequals ( 0, testdeletesitenavigationmenuitems. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( c . compute ( ) , org . hamcrest . matchers . is ( java . util . arrays . aslist ( 2 , 5 , 7 , 11 , 13 ) ) )
[0]: org. junit. assert. assertequals ( 0, testdeletesitenavigationmenuitems. get ( ) )
[1]: org. junit. assert. assertequals ( 0, result )
[2]: org. junit. assert. assertequals ( 0, result. size ( ) )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertnotnull ( newcompiler )

************

************
tgt: org . junit . assert . assertnotnull ( json )
[0]: org. junit. assert. assertnotnull ( newcompiler. build ( ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( result, req )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertequals ( result, 200 )

************

************
tgt: org . junit . assert . assertequals ( plot1 , plot2 )
[0]: org. junit. assert. assertequals ( msg, result )
[1]: org. junit. assert. assertequals ( null, linkid1. tostring ( ) )
[2]: org. junit. assert. assertequals ( linkid1. tostring ( ), linkid1. tostring ( ) )
[3]: org. junit. assert. assertequals ( 0, linkid1. tostring ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, linkid1. tostring ( ). length ( ) )

************

************
tgt: org . junit . assert . assertequals ( this , vref )
[0]: ) )
[1]: org. junit. assert. assertequals ( and1, cloned )
[2]: org. junit. assert. assertequals ( and3, cloned )
[3]: org. junit. assert. assertequals ( and2, cloned )
[4]: org. junit. assert. assertequals ( and and2, cloned )

************

************
tgt: org . junit . assert . assertthat ( result1 , org . hamcrest . corematchers . is ( lanid ) )
[0]: org. junit. assert. assertequals ( and, cloned )
[1]: org. junit. assert. assertnotnull ( geoddiams )
[2]: org. junit. assert. assertnull ( geoddiams )
[3]: org. junit. assert. assertequals ( 1, geoddiams )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( s )
[0]: )
[1]: org. junit. assert. assertequals ( failures. tostring ( ), 0, failures. size ( ) )
[2]: org. junit. assert. assertequals ( failures. tostring ( ), 1, failures. size ( ) )
[3]: org. junit. assert. asserttrue ( matcher. ismatch ( null ) )
[4]: org. junit. assert. assertequals ( pattern, matcher. ismatch ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( flowlist . isempty ( ) )
[0]: org. junit. assert. assertfalse ( matcher. ismatch ( null ) )
[1]: org. junit. assert. asserttrue ( matcher. ismatch ( pattern ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( fs. getlocalval ( ) )
[4]: org. junit. assert. assertnotnull ( fs. getlocalctr ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertnotnull ( fs. getlocalrouting ( ) )
[1]: org. junit. assert. assertnotnull ( fs. getlocalallocation ( ) )
[2]: org. junit. assert. assertnotnull ( fs. getlocalstring ( ) )
[3]: org. junit. assert. assertequals ( 1, filemonitor. callhandlerifmodified ( ) )
[4]: org. junit. assert. assertequals ( null, filemonitor. callhandlerifmodified ( ) )

************

************
tgt: org . junit . assert . assertequals ( autocommit , proxy . isautocommit ( ) )
[0]: org. junit. assert. assertequals ( 0, filemonitor. callhandlerifmodified ( ) )
[1]: org. junit. assert. assertequals ( true, filemonitor. callhandlerifmodified ( ) )
[2]: org. junit. assert. assertnotnull ( filemonitor. callhandlerifmodified ( ) )
[3]: org. junit. assert. assertnull ( string )
[4]: org. junit. assert. assertequals ( null, string )

************

************
tgt: org . junit . assert . assertthat ( iterator , hassize ( 10 ) )
[0]: org. junit. assert. assertequals ( """", string )
[1]: org. junit. assert. assertnotnull ( resultcard )
[2]: org. junit. assert. assertequals ( null, resultcard )
[3]: org. junit. assert. assertnull ( spy. iscomplete ( null ) )
[4]: org. junit. assert. assertequals ( 0, spy. iscomplete ( null ) )

************

************
tgt: org . junit . assert . assertthat ( confirmation . getstatus ( ) , org . hamcrest . corematchers . equalto ( availabilitystatus ) )
[0]: org. junit. assert. asserttrue ( app6done )
[1]: org. junit. assert. assertnotnull ( app6done )
[2]: org. junit. assert. asserttrue ( application6done )
[3]: , app6done )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , store . read ( 0 , new byte [ 1 ] , 0 , 1 ) )
[0]: org. junit. assert. assertnotnull ( client. login ( ) )
[1]: org. junit. assert. assertequals ( 1, random )
[2]: org. junit. assert. assertequals ( 0, random )
[3]: org. junit. assert. assertequals ( 12, random )
[4]: org. junit. assert. assertequals ( 5, random )

************

************
tgt: org . junit . assert . assertequals ( "test" , output )
[0]: org. junit. assert. assertequals ( 16, random )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. asserttrue ( result. isempty ( ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: , result )

************

************
tgt: org . junit . assert . assertequals ( i , org . apache . jena . jdbc . jdbccompatibility . normalizelevel ( i ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( null, composite. getname ( ) )
[2]: org. junit. assert. assertnull ( composite. getname ( ) )
[3]: org. junit. assert. assertequals ( default, composite. getname ( ) )
[4]: org. junit. assert. assertequals ( 0, composite. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertarrayequals ( cachedelements )
[2]: org. junit. assert. assertarrayequals ( caches, elements )
[3]: org. junit. assert. assertsame ( cachedelements, elements )
[4]: , cachedelements )

************

************
tgt: org . junit . assert . asserttrue ( day1 . equals ( day2 ) )
[0]: ) )
[1]: org. junit. assert. assertnull ( fr. norad. visuwall. plugin. demo. demoplugin. getsoftwareid ( null, null ) )
[2]: org. junit. assert. assertnull ( fr. norad. visuwall. plugin. demo. demoplugin. returnsoftwareid ( null, null ) )
[3]: org. junit. assert. assertnotnull ( fr. norad. visuwall. plugin. demo. demoplugin. getsoftwareid ( null, null ) )
[4]: org. junit. assert. assertnull ( builder. getsoftwareid ( null, null ) )

************

************
tgt: org . junit . assert . assertfalse ( result . passedvalidation ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( action, queuemanagercapability. getactions ( ) )
[2]: org. junit. assert. assertnotnull ( queuemanagercapability. getactions ( ) )
[3]: org. junit. assert. assertequals ( actions, queuemanagercapability. getactions ( ) )
[4]: org. junit. assert. assertnotnull ( action. getactions ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , formatted )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( reader )
[2]: org. junit. assert. assertnull ( reader )
[3]: org. junit. assert. assertequals ( null, reader )
[4]: type ) )

************

************
tgt: org . junit . assert . asserttrue ( m . matches ( ) )
[0]: _1 ) )
[1]: org. junit. assert. assertequals ( result, first. tostring ( ) )
[2]: org. junit. assert. assertequals ( result, new java. lang. string ( spacearray ) )
[3]: org. junit. assert. assertequals ( result, spacearray [ 0 ] )
[4]: org. junit. assert. assertequals ( result, new java. lang. string ( spacesarray ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , offsets . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, startindex )
[2]: org. junit. assert. assertequals ( 0, startindex )
[3]: org. junit. assert. assertequals ( 3, startindex )
[4]: , startindex )

************

************
tgt: org . junit . assert . assertequals ( expecting , result )
[0]: ) )
[1]: org. junit. assert. assertequals ( ml, expectedmove )
[2]: org. junit. assert. assertequals ( 2, result. size ( ) )
[3]: org. junit. assert. assertequals ( 2, result. size ( ) )
[4]: org. junit. assert. assertequals ( 2, results. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( org . apache . jackrabbit . oak . spi . security . user . util . passwordutil . issame ( invalid , "pw" ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( 2, result. size ( ) )
[2]: org. junit. assert. assertequals ( 1, itemsets. size ( ) )
[3]: org. junit. assert. assertequals ( null, org. sentilo. common. utils. dateutils. timestamptostring ( null ) )
[4]: org. junit. assert. assertequals ( 1, documents. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( existingsocialrelation , newsocialrelation )
[0]: org. junit. assert. assertequals ( 0, documents. size ( ) )
[1]: org. junit. assert. assertequals ( 1, docs. size ( ) )
[2]: org. junit. assert. assertequals ( 3, documents. size ( ) )
[3]: org. junit. assert. assertequals ( longarray, decompressedarray )
[4]: org. junit. assert. assertnotnull ( decompressedarray )

************

************
tgt: org . junit . assert . assertequals ( 7 , bean . getintfield ( ) )
[0]: org. junit. assert. assertarrayequals ( longarray )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertthat ( expectedorder, org. hamcrest. corematchers. is ( nodes [ 0 ] ) )
[4]: org. junit. assert. assertthat ( nodes [ 0 ], org. hamcrest. corematchers. is ( expectedorder ) )

************

************
tgt: org . junit . assert . asserttrue ( e . getmessage ( ) . contains ( "902" ) )
[0]: org. junit. assert. assertthat ( nodes [ 1 ], org. hamcrest. corematchers. is ( expectedorder ) )
[1]: org. junit. assert. assertthat ( nodes, org. hamcrest. corematchers. is ( expectedorder ) )
[2]: org. junit. assert. assertthat ( expectedorder, org. hamcrest. corematchers. is ( expectedorder ) )
[3]: org. junit. assert. assertequals ( false, in. marksupported ( ) )
[4]: org. junit. assert. assertequals ( true, in. marksupported ( ) )

************

************
tgt: org . junit . assert . assertequals ( elements . size ( ) , urls . length )
[0]: org. junit. assert. assertequals ( org. kocakosm. pitaya. io. countinginputstreamtest. data, in. marksupported ( ) )
[1]: org. junit. assert. assertequals ( null, in. marksupported ( ) )
[2]: org. junit. assert. assertequals ( 1, in. marksupported ( ) )
[3]: org. junit. assert. asserttrue ( ( ( notsupported. size ( ) ) > 0 ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . collections . singletonlist ( p1 ) , coplanarback )
[0]: org. junit. assert. assertequals ( 1, dao. size ( ) )
[1]: org. junit. assert. assertequals ( 1, dao. count ( rs ) )
[2]: org. junit. assert. assertequals ( 1, dao. create ( rs ) )
[3]: org. junit. assert. assertequals ( 1, dao. get ( 0 ). length )
[4]: org. junit. assert. assertequals ( srcbuffer. get ( j ), dstbuffer. get ( j ) )

************

************
tgt: org . junit . assert . assertequals ( new java . net . uri ( ( url + suffix ) ) , net . roboconf . core . utils . uriutils . buildnewuri ( new java . net . uri ( url ) , suffix ) )
[0]: org. junit. assert. assertarrayequals ( srcbuffer. get ( j ), dstbuffer. get ( j ) )
[1]: org. junit. assert. assertequals ( srcbuffer. get ( j ), dstbuffer. get ( ( j - 1 ) ) )
[2]: org. junit. assert. assertequals ( srcbuffer. get ( j ), dstbuffer. get ( ( j + 1 ) ) )
[3]: org. junit. assert. assertequals ( srcbuffer. get ( j ), dstbuffer. get ( ( j + j ) ) )
[4]: org. junit. assert. assertnotnull ( vcard. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( false , retval )
[0]: org. junit. assert. assertequals ( null, vcard. getname ( ) )
[1]: org. junit. assert. assertequals ( name, vcard. getname ( ) )
[2]: org. junit. assert. assertequals ( string_1, vcard. getname ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, objectaccessor. get ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , iw . tostring ( ) )
[0]: org. junit. assert. assertequals ( 0, objectaccessor. get ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, objectaccessor. get ( ) )
[2]: org. junit. assert. assertequals ( null, objectaccessor. get ( ). get ( ) )
[3]: org. junit. assert. assertequals ( 1, objectaccessor. get ( ). get ( ). length )
[4]: org. junit. assert. assertnull ( rect )

************

************
tgt: org . junit . assert . assertsame ( e . edit ( ) , e . edit ( ) )
[0]: org. junit. assert. assertnotnull ( rect )
[1]: org. junit. assert. assertequals ( null, rect )
[2]: org. junit. assert. assertequals ( bounds, rect )
[3]: org. junit. assert. assertequals ( null, rectangle )
[4]: org. junit. assert. assertequals ( idletime, idletime, 0 )

************

************
tgt: org . junit . assert . assertfalse ( page . iscompleted ( ) )
[0]: org. junit. assert. assertequals ( idletime, idletime, timeout )
[1]: org. junit. assert. assertequals ( idletime, idletime )
[2]: org. junit. assert. assertequals ( idletime, idletime, 1 )
[3]: org. junit. assert. assertequals ( idletime )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertnull ( stats )
[0]: org. junit. assert. assertnull ( ignored. getcause ( ) )
[1]: org. junit. assert. assertequals ( 0, ignored. getcause ( ). length )
[2]: org. junit. assert. assertequals ( 1, ignored. getcause ( ). length )
[3]: org. junit. assert. assertnotnull ( ignored. getcause ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( result . isvalid ( ) )
[0]: org. junit. assert. assertnotnull ( actualvalue )
[1]: org. junit. assert. assertequals ( entity, actualvalue )
[2]: org. junit. assert. assertnull ( actualvalue )
[3]: , actualvalue )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( invoked [ 0 ] )
[0]: org. junit. assert. assertnotnull ( kapuadisconnectmessage. getclientid ( ) )
[1]: org. junit. assert. assertequals ( 1, kapuadisconnectmessage. getclientid ( ) )
[2]: org. junit. assert. assertequals ( 0, kapuadisconnectmessage. getclientid ( ) )
[3]: org. junit. assert. assertequals ( 0, kapuadisconnectmessage. getclientid ( ). length )
[4]: org. junit. assert. assertequals ( kapuadisconnectmessage, kapuadisconnectmessage )

************

************
tgt: org . junit . assert . assertequals ( arr , resultarr )
[0]: org. junit. assert. assertnotnull ( retrievedaccount. getid ( ) )
[1]: org. junit. assert. assertequals ( org. billforward. model. account. getid ( ), retrievedaccount. getid ( ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), retrievedaccount. getid ( ) )
[3]: org. junit. assert. assertequals ( null, retrievedaccount. getid ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "1" , formatted )
[0]: org. junit. assert. assertequals ( 0l, subject. longvalue ( ) )
[1]: org. junit. assert. assertequals ( 0l, value. longvalue ( ) )
[2]: org. junit. assert. assertequals ( 0l, input. longvalue ( ) )
[3]: org. junit. assert. assertequals ( 0l, metadata. longvalue ( ) )
[4]: org. junit. assert. assertequals ( 0l, cache. longvalue ( ) )

************

************
tgt: org . junit . assert . assertfalse ( handler . transformed ( ctclass , cp ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( result, result )
[3]: org. junit. assert. assertequals ( result, null )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( persoonid )
[0]: org. junit. assert. assertequals ( b. rotate ( ), a. rotate ( ) )
[1]: org. junit. assert. asserttrue ( bid1. equals ( bid2 ) )
[2]: org. junit. assert. assertequals ( true, bid1. equals ( bid2 ) )
[3]: org. junit. assert. assertequals ( predecessor, basicpredgraph1. getpredecessor ( ) )
[4]: org. junit. assert. assertequals ( predecessor, basicpredgraph2. getpredecessor ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , kandidaten . size ( ) )
[0]: org. junit. assert. assertequals ( node1, basicpredgraph2. getpredecessor ( ) )
[1]: org. junit. assert. assertequals ( node1, basicpredgraph1. getpredecessor ( ) )
[2]: org. junit. assert. assertequals ( node1. getpredecessor ( ), basicpredgraph2 )
[3]: org. junit. assert. assertarrayequals ( expected, actual )
[4]: org. junit. assert. assertequals ( an, serializedan )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , actual . toarray ( ) )
[0]: org. junit. assert. assertequals ( a, serializedan )
[1]: org. junit. assert. assertequals ( this, serializedan )
[2]: org. junit. assert. assertequals ( another, serializedan )
[3]: org. junit. assert. assertequals ( webxml, sessionconfiguration. getmaxinactiveinterval ( ) )
[4]: org. junit. assert. assertequals ( 1, sessionconfiguration. getmaxinactiveinterval ( ) )

************

************
tgt: org . junit . assert . assertequals ( origcolor , com . illposed . osc . argument . handler . colorargumenthandlertest . reparse ( origcolor ) )
[0]: org. junit. assert. assertequals ( 0, sessionconfiguration. getmaxinactiveinterval ( ) )
[1]: org. junit. assert. assertequals ( webxml ), sessionconfiguration. getmaxinactiveinterval ( ) )
[2]: ) )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( accessstatus, result )

************

************
tgt: org . junit . assert . assertequals ( 7 , branch_conditions . size ( ) )
[0]: org. junit. assert. assertequals ( accessstatus. unchecked, result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( configurable. getenabledprotocols ( ) )
[4]: org. junit. assert. assertequals ( 1, configurable. getenabledprotocols ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( pfs . size ( ) , 0 )
[0]: org. junit. assert. assertequals ( 0, configurable. getenabledprotocols ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 5, configurable. getenabledprotocols ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, configurable. getenabledprotocols ( ). length )
[3]: org. junit. assert. assertequals ( 1, 1 )
[4]: org. junit. assert. assertnotnull ( queue )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertnotnull ( s. union ( ) )
[1]: org. junit. assert. assertnotnull ( s )
[2]: org. junit. assert. assertnotnull ( s. collection ( ) )
[3]: org. junit. assert. assertnotnull ( supplier. get ( ) )
[4]: org. junit. assert. assertnotnull ( supplier )

************

************
tgt: org . junit . assert . assertsame ( expected , result )
[0]: org. junit. assert. assertnull ( supplier. get ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( org. onlab. packet. ip4address. valueof ( org. onlab. packet. ip4address. class ), deviceinformation. interfaceid ( ) )
[4]: org. junit. assert. assertequals ( org. onlab. packet. ip4address. valueof ( org. onlab. packet. ip4address. values ( ). length ), deviceinformation. interfaceid ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , deque . capacity ( ) )
[0]: org. junit. assert. assertequals ( org. onlab. packet. ip4address. valueof ( org. onlab. packet. ip4address. values ( ) ), deviceinformation. interfaceid ( ) )
[1]: org. junit. assert. assertnotnull ( deviceinformation. interfaceid ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( com. streamsets. datacollector. security. groupsinscope. executeignoregroups ( callable ) )
[4]: org. junit. assert. assertequals ( 1, com. streamsets. datacollector. security. groupsinscope. executeignoregroups ( callable ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( ex . getvalue ( ) . getstring ( ) . length ( ) ) == 416 ) )
[0]: org. junit. assert. assertnull ( com. streamsets. datacollector. security. groupsinscope. executeignoregroups ( callable ) )
[1]: org. junit. assert. assertequals ( 0, com. streamsets. datacollector. security. groupsinscope. executeignoregroups ( callable ) )
[2]: org. junit. assert. assertequals ( true, com. streamsets. datacollector. security. groupsinscope. executeignoregroups ( callable ) )
[3]: org. junit. assert. assertequals ( expected, offset )
[4]: org. junit. assert. assertequals ( expected, offset, 0 )

************

************
tgt: org . junit . assert . assertequals ( "value" , value )
[0]: org. junit. assert. assertequals ( expected, ( offset - millis ) )
[1]: org. junit. assert. assertequals ( expected, offset, millis )
[2]: , offset )
[3]: org. junit. assert. assertequals ( 1, enabled )
[4]: org. junit. assert. assertequals ( true, enabled )

************

************
tgt: org . junit . assert . assertequals ( contenttype , part . getcontenttype ( ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), enabled )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), enabled )
[2]: org. junit. assert. assertequals ( java. lang. boolean. valueof ( true ), enabled )
[3]: org. junit. assert. assertnotnull ( link. touri ( ) )
[4]: org. junit. assert. assertequals ( 1, link. touri ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( history . getreferencedate ( ) , deserialized . getreferencedate ( ) )
[0]: org. junit. assert. assertequals ( 0, link. touri ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( link )
[2]: org. junit. assert. assertequals ( 1, link. touri ( ). length )
[3]: org. junit. assert. assertequals ( expected, actual )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertthat ( uut . getfeatures ( ) . isempty ( ) , org . hamcrest . matchers . is ( false ) )
[0]: org. junit. assert. assertequals ( expected, ( actual )
[1]: org. junit. assert. assertequals ( expect, actual )
[2]: assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( 1, value )
[4]: org. junit. assert. assertequals ( 0, value )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( expected ) ) )
[0]: org. junit. assert. assertequals ( 10, value )
[1]: , value )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( person. getname ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. class, person. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( xmlesperado , icms101 . tostring ( ) )
[0]: org. junit. assert. assertequals ( name, person. getname ( ) )
[1]: org. junit. assert. assertequals ( null, person. getname ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, higher. compareto ( lower ) )
[4]: org. junit. assert. assertequals ( 0, higher. compareto ( lower ) )

************

************
tgt: org . junit . assert . assertthat ( xcontentbuildertostring ( xcontentbuilder ) , org . hamcrest . corematchers . is ( expected ) )
[0]: org. junit. assert. asserttrue ( ( ( higher. compareto ( lower ) ) >= 0 ) )
[1]: org. junit. assert. asserttrue ( ( ( higher. compareto ( lower ) ) >= 1 ) )
[2]: org. junit. assert. assertequals ( 1, higher. compareto ( upper ) )
[3]: org. junit. assert. assertequals ( buf. remaining ( ), size )
[4]: org. junit. assert. assertequals ( buffer. remaining ( ), size )

************

************
tgt: org . junit . assert . assertarrayequals ( bytes , out . tobytearray ( ) )
[0]: org. junit. assert. assertequals ( size, bytes. remaining ( ) )
[1]: org. junit. assert. assertequals ( size, moov. remaining ( )
[2]: ) )
[3]: org. junit. assert. assertequals ( bigdecimaltype. type, com. redhat. lightblue. metadata. types. arith. promote ( doubletype. type, bigintegertype. type ) )
[4]: org. junit. assert. assertequals ( bigdecimaltype. type, com. redhat. lightblue. metadata. types. arith. promote ( doubletype. type, doubletype. type ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( result . get ( ) ) != 0 ) )
[0]: org. junit. assert. assertequals ( bigdecimaltype. type, com. redhat. lightblue. metadata. types. arith. promote ( doubletype. type, bigintegertype. class ) )
[1]: org. junit. assert. assertequals ( bigdecimaltype. type, com. redhat. lightblue. metadata. types. arith. promote ( doubletype. class, bigintegertype. type ) )
[2]: org. junit. assert. assertequals ( bigdecimaltype. type, com. redhat. lightblue. metadata. types. arith. promote ( bigintegertype. type, doubletype. type ) )
[3]: org. junit. assert. assertequals ( 1, list. size ( ) )
[4]: org. junit. assert. assertequals ( 0, list. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( textarea . gettext ( ) , org . hamcrest . matchers . equalto ( cheesy ) )
[0]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) == 1 ) )
[1]: org. junit. assert. assertequals ( 3, list. size ( ) )
[2]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) > 0 ) )
[3]: org. junit. assert. assertnotnull ( booleanselectorelement. getqualifier ( ) )
[4]: org. junit. assert. assertnotnull ( booleanselectorelement )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( attribute, booleanselectorelement )
[1]: org. junit. assert. assertequals ( attribute, booleanselectorelement. getqualifier )
[2]: ) )
[3]: org. junit. assert. assertfalse ( parser. accept ( state ) )
[4]: org. junit. assert. assertfalse ( org. openspotlight. common. util. assertions. accept ( state ) )

************

************
tgt: org . junit . assert . assertequals ( "vmmgrp1" , com . ibm . ws . security . wim . adapter . ldap . fat . urapis_tdsldap_ssltest . servlet . getgroupdisplayname ( group ) )
[0]: org. junit. assert. assertfalse ( handler. accept ( state ) )
[1]: org. junit. assert. assertfalse ( state. accept ( state ) )
[2]: org. junit. assert. assertfalse ( org. openspotlight. common. util. assertions. accepting ( state ) )
[3]: org. junit. assert. assertequals ( expected, sql )
[4]: org. junit. assert. assertequals ( expected, sql, sql )

************

************
tgt: org . junit . assert . assertthat ( properties , org . hamcrest . corematchers . equalto ( expectedproperties ) )
[0]: org. junit. assert. assertequals ( expected, sql, result )
[1]: org. junit. assert. assertequals ( expected, sql )
[2]: ) )
[3]: org. junit. assert. asserttrue ( presenter. isdirty ( ) )
[4]: org. junit. assert. assertfalse ( presenter. isdirty ( ) )

************

************
tgt: org . junit . assert . assertequals ( f1 . hashcode ( ) , f2 . hashcode ( ) )
[0]: org. junit. assert. assertequals ( true, presenter. isdirty ( ) )
[1]: org. junit. assert. assertequals ( false, presenter. isdirty ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( pmap. getnsprefixuri ( ) )
[4]: org. junit. assert. assertnotnull ( pmap )

************

************
tgt: org . junit . assert . assertnull ( integers . getlast ( ) )
[0]: org. junit. assert. assertequals ( pmap, pmap )
[1]: org. junit. assert. assertnotnull ( pmap )
[2]: ) )
[3]: org. junit. assert. asserttrue ( isingangsdatumgelijkinmeegegevenakten ( ) )
[4]: org. junit. assert. assertfalse ( isingangsdatumgelijkinmeegegevenakten ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , comparison )
[0]: org. junit. assert. assertequals ( true, isingangsdatumgelijkinmeegegevenakten ( ) )
[1]: org. junit. assert. assertnotnull ( isingangsdatumgelijkinmeegegevenakten ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, counter. get ( ) )
[4]: org. junit. assert. assertequals ( 0, counter. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( cookiespec . match ( cookie , origin ) )
[0]: org. junit. assert. assertequals ( 1, count. get ( ) )
[1]: org. junit. assert. assertequals ( 2, counter. get ( ) )
[2]: org. junit. assert. assertequals ( 4, counter. get ( ) )
[3]: org. junit. assert. asserttrue ( wrongdocument. exists ( ) )
[4]: org. junit. assert. assertequals ( true, wrongdocument. exists ( ) )

************

************
tgt: org . junit . assert . assertequals ( check . next ( ) , w )
[0]: org. junit. assert. assertfalse ( wrongdocument. exists ( ) )
[1]: org. junit. assert. assertequals ( false, wrongdocument. exists ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( errorinformation. getname ( ) )
[4]: org. junit. assert. assertequals ( null, errorinformation. getname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( applicationsessioncookieconfig . getpath ( ) . equals ( "test" ) )
[0]: org. junit. assert. assertequals ( string_1, errorinformation. getname ( ) )
[1]: org. junit. assert. assertequals ( 0, errorinformation. getname ( ). length )
[2]: org. junit. assert. assertequals ( 0, errorinformation. getname ( ). length ( )
[3]: org. junit. assert. assertequals ( true, array. isempty ( ) )
[4]: org. junit. assert. assertequals ( 1, list. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( phonenumber , phonenumberformat . validate ( phonenumber ) )
[0]: org. junit. assert. assertequals ( 0, list. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), list )
[2]: org. junit. assert. assertequals ( null, list. size ( ) )
[3]: org. junit. assert. assertequals ( null, list )
[4]: org. junit. assert. assertequals ( address, text )

************

************
tgt: org . junit . assert . assertnotnull ( classundertest )
[0]: org. junit. assert. assertnotnull ( text )
[1]: org. junit. assert. assertequals ( addr, text )
[2]: org. junit. assert. assertnull ( text )
[3]: org. junit. assert. assertequals ( addresses, text )
[4]: org. junit. assert. assertnotnull ( twinmetadata )

************

************
tgt: org . junit . assert . asserttrue ( ( value < 0 ) )
[0]: org. junit. assert. assertequals ( metadata, twinmetadata )
[1]: org. junit. assert. assertequals ( null, twinmetadata )
[2]: )
[3]: 
[4]: org. junit. assert. asserttrue ( com. metamx. collections. intsettestutility. equalsets ( bitset, bitset ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertfalse ( com. metamx. collections. intsettestutility. equalsets ( bitset, bitset ) )
[1]: org. junit. assert. asserttrue ( com. metamx. collections. intsettestutility. equalsets ( bitset, ( ( java. util. set < java. lang. object > ) ( bitset. collection ( ) ) ) ) )
[2]: org. junit. assert. assertequals ( com. metamx. collections. intsettestutility. equalsets ( bitset, bitset ), true )
[3]: type ) )
[4]: org. junit. assert. assertequals ( 0, sortedemptymap. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , mountscontainedbetweenpaths . size ( ) )
[0]: org. junit. assert. assertequals ( 0, minutes ( ) )
[1]: org. junit. assert. assertequals ( 1, minutes ( ) )
[2]: org. junit. assert. assertequals ( 0, minutes. minutes ( ) )
[3]: org. junit. assert. assertequals ( 1, minutes. minutes ( ) )
[4]: org. junit. assert. assertequals ( 0l, minutes ( ) )

************

************
tgt: org . junit . assert . assertsame ( providers , applicationcontext . getproviders ( ) )
[0]: org. junit. assert. assertequals ( 1, kandidaten. size ( ) )
[1]: org. junit. assert. assertnotnull ( prov. getnewprovidername ( ) )
[2]: org. junit. assert. assertnull ( prov. getnewprovidername ( ) )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertequals ( result, expected )

************

************
tgt: org . junit . assert . assertequals ( 0 , vh . geteventssize ( ) )
[0]: get the expected ) )
[1]: get the expected )
[2]: get expected )
[3]: org. junit. assert. asserttrue ( inv1. fire ( inv1 ) )
[4]: org. junit. assert. asserttrue ( filter. fire ( inv1 ) )

************

************
tgt: org . junit . assert . assertarrayequals ( examplemessages . important_quote_text . getbytes ( ) , plainba . tobytearray ( ) )
[0]: org. junit. assert. asserttrue ( handler. fire ( inv1 ) )
[1]: org. junit. assert. asserttrue ( interceptor. fire ( inv1 ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, set. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( o1 ), set )

************

************
tgt: org . junit . assert . assertnotnull ( strategy )
[0]: org. junit. assert. assertequals ( 0, set. size ( ) )
[1]: org. junit. assert. assertequals ( list, set )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( situation )
[4]: org. junit. assert. assertequals ( ""1"", situation )

************

************
tgt: org . junit . assert . assertequals ( expected , properties )
[0]: org. junit. assert. assertnull ( situation )
[1]: org. junit. assert. assertnotnull ( situation )
[2]: ) )
[3]: org. junit. assert. assertnull ( helper. getcolumnvisibility ( appid, null, null, false ) )
[4]: org. junit. assert. assertnull ( helper. getcolumnvisibility ( appid, null, null, null ) )

************

************
tgt: org . junit . assert . asserttrue ( scc . gettruecomponents ( ) . isempty ( ) )
[0]: org. junit. assert. assertnull ( helper. getcolumnvisibility ( null, null, null, false ) )
[1]: org. junit. assert. assertfalse ( helper. getcolumnvisibility ( appid, null, null, false ) )
[2]: org. junit. assert. assertfalse ( helper. getcolumnvisibility ( null, null, null, false ) )
[3]: org. junit. assert. assertequals ( expresult, result )
[4]: org. junit. assert. assertequals ( expresult, results )

************

************
tgt: org . junit . assert . assertnull ( caller . bestcontig ( integer . max_value ) )
[0]: org. junit. assert. assertequals ( expresult, result )
[1]: org. junit. assert. assertequals ( 1, events. size ( ) )
[2]: org. junit. assert. asserttrue ( ( ( events. size ( ) ) == 1 ) )
[3]: org. junit. assert. assertequals ( 0, events. size ( ) )
[4]: org. junit. assert. asserttrue ( ( ( events. size ( ) ) > 1 ) )

************

************
tgt: org . junit . assert . assertequals ( snapshotlist . size ( ) , 3 )
[0]: org. junit. assert. asserttrue ( ( ( events. size ( ) ) > 0 ) )
[1]: org. junit. assert. assertnotnull ( value )
[2]: org. junit. assert. assertequals ( null, value )
[3]: org. junit. assert. assertnull ( value )
[4]: org. junit. assert. assertequals ( string, value )

************

************
tgt: org . junit . assert . assertequals ( stage , c . completable . whencomplete ( consumer ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expectedtitle, settings. gettitle ( ) )
[2]: org. junit. assert. assertequals ( expectedtitle, settings. gettitle ( ) )
[3]: org. junit. assert. assertequals ( expectedtitle, setting. gettitle ( ) )
[4]: org. junit. assert. assertequals ( expectedtitle )

************

************
tgt: org . junit . assert . assertequals ( 1 , activities . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, each. getmaxfieldsize ( ) )
[2]: org. junit. assert. assertequals ( 1, each. getmaxfieldsize ( ) )
[3]: org. junit. assert. assertnull ( each. getmaxfieldsize ( ) )
[4]: org. junit. assert. assertequals ( 0, each. getmaxfieldsize ( ), 0 )

************

************
tgt: org . junit . assert . assertequals ( expected , value )
[0]: org. junit. assert. assertequals ( 0, each. getmaxfieldsize ( ), 1 )
[1]: org. junit. assert. assertnotnull ( diagnosis. getid ( ) )
[2]: org. junit. assert. assertequals ( 1, diagnosis. getid ( ) )
[3]: org. junit. assert. assertequals ( 3, diagnosis. getid ( ) )
[4]: org. junit. assert. assertequals ( 1, ( ( int ) ( diagnosis ) ) )

************

************
tgt: org . junit . assert . assertequals ( 6 , albumpreviews . size ( ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( fix ( fs, dir, pair_size, pair_size, true, org. apache. hadoop. io. mapfile. conf ) )
[2]: org. junit. assert. asserttrue ( fix ( fs, dir, java. lang. class, pair_size, true, org. apache. hadoop. io. mapfile. conf ) )
[3]: org. junit. assert. asserttrue ( fix ( fs, dir, pair_size, pair_size, false, org. apache. hadoop. io. mapfile. conf ) )
[4]: org. junit. assert. asserttrue ( fix ( fs, dir, org. apache. hadoop. io. mapfile. conf, org. apache. hadoop. io. mapfile. conf ) )

************

************
tgt: org . junit . assert . assertequals ( expected , com . github . bordertech . wcomponents . util . htmlsanitizerutil . sanitize ( input ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), result )
[2]: org. junit. assert. assertequals ( assetmock, asset )
[3]: org. junit. assert. assertsame ( assetmock, asset )
[4]: org. junit. assert. assertnotnull ( asset )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . integer ( 1 ) , decoder . decode ( "1" ) )
[0]: org. junit. assert. assertequals ( valuelist, last )
[1]: org. junit. assert. assertequals ( expected, last )
[2]: org. junit. assert. assertequals ( result, last )
[3]: org. junit. assert. assertequals ( list, last )
[4]: org. junit. assert. assertequals ( jdo, last )

************

************
tgt: org . junit . assert . assertnull ( res )
[0]: org. junit. assert. assertequals ( 1, count )
[1]: org. junit. assert. assertequals ( layer, reference. getlayer ( ) )
[2]: org. junit. assert. assertnotnull ( reference )
[3]: org. junit. assert. assertnotnull ( reference. getlayer ( ) )
[4]: org. junit. assert. assertnull ( reference. getlayer ( ) )

************

************
tgt: org . junit . assert . assertequals ( 600 , world . bentobox . bentobox . managers . ranksmanagertest . ranksmanager . getrankvalue ( "test.rank.reference.value" ) )
[0]: org. junit. assert. assertequals ( layer, reference )
[1]: org. junit. assert. assertequals ( 1, id1. compareto ( id2 ) )
[2]: org. junit. assert. assertequals ( 0, id1. compareto ( id2 ) )
[3]: org. junit. assert. asserttrue ( ( ( id1. compareto ( id2 ) ) == 0 ) )
[4]: org. junit. assert. asserttrue ( ( ( id1. compareto ( id2 ) ) == 1 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result )
[0]: org. junit. assert. assertequals ( ( - 1 ), id1. compareto ( id2 ) )
[1]: org. junit. assert. assertnotnull ( settingsbean. getcustomsourcevalue ( ) )
[2]: org. junit. assert. assertequals ( customsourcevalue, settingsbean. getcustomsourcevalue ( ) )
[3]: org. junit. assert. assertnull ( settingsbean. getcustomsourcevalue ( ) )
[4]: org. junit. assert. assertequals ( defaultsourcevalue, settingsbean. getcustomsourcevalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , capabilitiestodriver . size ( ) )
[0]: type ) )
[1]: org. junit. assert. assertequals ( status, taskcompletionevent. gettaskstatus ( ) )
[2]: org. junit. assert. assertequals ( status, jobcompletionevent. gettaskstatus ( ) )
[3]: org. junit. assert. assertequals ( state, taskcompletionevent. gettaskstatus ( ) )
[4]: org. junit. assert. assertequals ( status, projectcompletionevent. gettaskstatus ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( bnode == ( dialect . getbnode ( bid ) ) ) )
[0]: status ) )
[1]: org. junit. assert. assertequals ( expected, result )
[2]: org. junit. assert. assertequals ( 1, branch_conditions. size ( ) )
[3]: org. junit. assert. assertequals ( 0, deserialized. getannotations ( ). size ( ) )
[4]: org. junit. assert. assertnull ( hasexpectedexception )

************

************
tgt: org . junit . assert . assertequals ( "testequals:2" , msg . gettext ( ) )
[0]: org. junit. assert. assertfalse ( hasexpectedexception )
[1]: org. junit. assert. assertnotnull ( type. getparameters ( ) )
[2]: org. junit. assert. assertequals ( 1, type. getparameters ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 4, type. getparameters ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 2, type. getparameters ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( before - 1 ) , after )
[0]: org. junit. assert. assertequals ( sequence1. get ( i ), set1. get ( i ) )
[1]: org. junit. assert. assertequals ( object3, set1. get ( i ) )
[2]: org. junit. assert. assertequals ( set1. get ( i ), sequence1. get ( i ) )
[3]: org. junit. assert. assertequals ( object3. get ( i ), set1. get ( i ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 1, transformer. getminpts ( ) )
[1]: org. junit. assert. assertequals ( 1.0, transformer. getminpts ( ) )
[2]: org. junit. assert. assertequals ( 1.0, transformer. getminpts ( ), 0 )
[3]: org. junit. assert. assertequals ( 1.0, transformer. getminpts ( ), 0.0 )
[4]: org. junit. assert. assertequals ( 0, transformer. getminpts ( ) )

************

************
tgt: org . junit . assert . assertthat ( generatedjson , org . hamcrest . corematchers . is ( expectedjson ) )
[0]: org. junit. assert. assertequals ( 0, resultaat. size ( ) )
[1]: org. junit. assert. assertequals ( 0, errors. size ( ) )
[2]: org. junit. assert. assertequals ( 1, resultaat. size ( ) )
[3]: org. junit. assert. assertequals ( 0, meldingen. size ( )
[4]: org. junit. assert. assertequals ( 0, resultaat. size ( )

************

************
tgt: org . junit . assert . asserttrue ( result . passed ( ) )
[0]: org. junit. assert. assertnull ( configuration. asmap ( ) )
[1]: org. junit. assert. assertequals ( null, configuration. asmap ( ) )
[2]: org. junit. assert. assertnotnull ( configuration. asmap ( ) )
[3]: org. junit. assert. assertequals ( 0, configuration. asmap ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( 0, tuple. len ( ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( """", result )

************

************
tgt: org . junit . assert . assertnotnull ( melding )
[0]: org. junit. assert. assertequals ( """", result )
[1]: org. junit. assert. asserttrue ( rs. next ( ) )
[2]: org. junit. assert. assertequals ( 1, write ( io. netty. handler. codec. http2. uniformstreambytedistributortest. stream_d ) )
[3]: org. junit. assert. assertequals ( 1, write ( io. netty. handler. codec. http2. uniformstreambytedistributortest. stream_b ) )
[4]: org. junit. assert. assertequals ( 1, write ( io. netty. handler. codec. http2. uniformstreambytedistributortest. stream_c ) )

************

************
tgt: org . junit . assert . assertequals ( x , s . insert ( n , m , i , j ) )
[0]: org. junit. assert. assertequals ( 1, write ( o. netty. handler. codec. http2. uniformstreambytedistributortest. stream_d ) )
[1]: org. junit. assert. assertequals ( 0, write ( io. netty. handler. codec. http2. uniformstreambytedistributortest. stream_d ) )
[2]: org. junit. assert. assertnotnull ( schemas )
[3]: org. junit. assert. assertequals ( 1, schemas. length )
[4]: org. junit. assert. assertequals ( 1, schemas. size ( )

************

************
tgt: org . junit . assert . assertequals ( dest . append ( newname ) , newdesturicapture . getvalue ( ) )
[0]: org. junit. assert. assertequals ( 1, schemas )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, response. geterrors ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, response. geterrors ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 3, response. geterrors ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( ex . getmessage ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, response. geterrors ( ) )
[1]: org. junit. assert. assertequals ( 1, response. geterrors ( ). length )
[2]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( equalto ( expected ) ) )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( is ( expected ) ) )
[4]: org. junit. assert. assertthat ( actual, is ( equalto ( expected ) ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , ndbtb . getfailed ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertnull ( actual )
[2]: org. junit. assert. assertnotnull ( org. pentaho. platform. plugin. services. importexport. commandlineprocessor. getexception ( ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( result, null )

************

************
tgt: org . junit . assert . assertequals ( x , oid . name ( ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( expected, result )
[2]: org. junit. assert. assertequals ( result, 1 )
[3]: org. junit. assert. assertequals ( 1, dm. loadscript ( ) )
[4]: org. junit. assert. assertequals ( 0, dm. loadscript ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , achnames )
[0]: org. junit. assert. assertequals ( expected, dm. loadscript ( ) )
[1]: _2 ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( routerpathlookup. app_fabric_http, result )
[4]: org. junit. assert. assertequals ( routerpathlookup ( app_fabric_http, result )

************

************
tgt: org . junit . assert . assertequals ( expected , testmdcadapter . getcopyofcontextmap ( ) )
[0]: org. junit. assert. assertequals ( routerpathlookup. application_fabric_http, result )
[1]: org. junit. assert. assertequals ( routerpathlookup. app_fabric_http, result )
[2]: org. junit. assert. assertequals ( routerpathlookup, result )
[3]: org. junit. assert. assertequals ( 1, tested. getcount ( ) )
[4]: org. junit. assert. assertequals ( 1, tested. getactivity ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , computecount . totalcountonreference ( ) )
[0]: org. junit. assert. assertequals ( 1, tested. handlers. size ( ) )
[1]: org. junit. assert. assertequals ( 1, tested. shutdown ( ) )
[2]: org. junit. assert. assertequals ( 1, tested. validate ( ) )
[3]: org. junit. assert. assertequals ( expr. accept ( visitor ), visitresult )
[4]: org. junit. assert. assertequals ( expression. accept ( visitor ), visitresult )

************

************
tgt: org . junit . assert . assertequals ( "updated<sp>name" , updatedsitenavigationmenu . getname ( ) )
[0]: org. junit. assert. assertequals ( expression, expr. accept ( visitor ) )
[1]: org. junit. assert. assertnotnull ( expr. accept ( visitor ) )
[2]: org. junit. assert. assertequals ( expr. accept ( visitor ), visitingresult )
[3]: org. junit. assert. assertequals ( 1, originelestapel. size ( ) )
[4]: org. junit. assert. assertequals ( 1, rondverteerdestapel. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( 1, originalinelestapel. size ( ) )
[1]: org. junit. assert. assertequals ( 1, retondverteerdestapel. size ( ) )
[2]: org. junit. assert. assertequals ( 1, reinelestapel. size ( ) )
[3]: org. junit. assert. assertfalse ( isschemanotfound )
[4]: org. junit. assert. assertequals ( 1, buttons. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( point3d , a . getpoint3d ( ) )
[0]: org. junit. assert. assertequals ( 0, buttons. size ( ) )
[1]: org. junit. assert. assertnull ( buttons )
[2]: org. junit. assert. assertnotnull ( buttons )
[3]: _2 ) )
[4]: org. junit. assert. assertequals ( expected, checksameanalysis ( jsontwitterinputfile, tokenoutjson, m ) )

************

************
tgt: org . junit . assert . assertthat ( actualdayofmonth , org . hamcrest . corematchers . is ( 3 ) )
[0]: org. junit. assert. assertequals ( 1, checksameanalysis ( jsontwitterinputfile, tokenoutjson, m ) )
[1]: org. junit. assert. assertequals ( 0, checksameanalysis ( jsontwitterinputfile, tokenoutjson, m ). length )
[2]: org. junit. assert. assertequals ( 1, checksameanalysis ( jsontwitterinputfile, tokenoutjson, m ). length )
[3]: ) )
[4]: org. junit. assert. assertfalse ( expr. matches ( atom, 2 ) )

************

************
tgt: org . junit . assert . assertnull ( integers . detectwith ( object :: equals , java . lang . integer . valueof ( 1 ) ) )
[0]: org. junit. assert. assertfalse ( expr. matches ( atom, 1 ) )
[1]: org. junit. assert. assertfalse ( expr. matches ( atom, 10 ) )
[2]: org. junit. assert. assertfalse ( expr. matches ( atom, true ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( found )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertnull ( found )
[1]: org. junit. assert. assertequals ( 1, found )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnotnull ( principal )

************

************
tgt: org . junit . assert . assertequals ( s , m . keyset ( ) )
[0]: org. junit. assert. assertequals ( expectedresponse, principal )
[1]: org. junit. assert. assertequals ( filethatdoesntexist, originalfile )
[2]: org. junit. assert. assertequals ( filethatdoesntexist, sourcefile )
[3]: org. junit. assert. assertnotnull ( filethatdoesntexist )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( report . haserror ( ) )
[0]: )
[1]: org. junit. assert. assertnotnull ( filesystem. readfileifitexists ( filepath ) )
[2]: org. junit. assert. assertequals ( 1, filesystem. readfileifitexists ( filepath ). size ( ) )
[3]: org. junit. assert. assertequals ( null, filesystem. readfileifitexists ( filepath ) )
[4]: org. junit. assert. assertequals ( 1, filesystem. readfileifitexists ( filepath ). get ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( servicemanager . getserviceconfig ( "gwt" , "testid" ) )
[0]: org. junit. assert. assertequals ( null, filesystem. readfileifitexists ( filepath ). get ( ) )
[1]: org. junit. assert. assertequals ( 1, trackupdater. getpairwithlayers ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( trackupdater. getpairwithlayers ( ) )
[3]: org. junit. assert. assertequals ( 0, trackupdater. getpairwithlayers ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, trackupdater. getpairwithlayers ( ) )

************

************
tgt: org . junit . assert . asserttrue ( datawave . query . jexl . functions . contentfunctionstest . expect ( o , false ) )
[0]: org. junit. assert. assertequals ( 1, trackupdater. getpairwithlayers ( ). length )
[1]: org. junit. assert. assertthat ( target. getedgeactions ( edgeactions ), org. hamcrest. corematchers. is ( actions ) )
[2]: org. junit. assert. assertthat ( target. getedgeactions ( edgeactions. size ( ) ), org. hamcrest. corematchers. is ( actions ) )
[3]: org. junit. assert. assertthat ( target. getedgeactions ( null ), org. hamcrest. corematchers. is ( actions ) )
[4]: org. junit. assert. assertthat ( target. getedgeactions ( edgeactions. size ( ) ), org. hamcrest. corematchers. is ( action ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( "\n" + sqltext ) + "\n" ) , expected , testutils . formattedresult . resultfactory . tostringunsorted ( rs ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( metrics_1, result )
[2]: org. junit. assert. assertequals ( metrics_2, result )
[3]: org. junit. assert. assertequals ( metrics_1, result. size ( ) )
[4]: org. junit. assert. assertequals ( metrics_2, result. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( integers . getfirst ( ) )
[0]: get ( 0 ) )
[1]: org. junit. assert. assertnotnull ( builder )
[2]: org. junit. assert. asserttrue ( ( builder == ( builder. getclass ( ) ) ) )
[3]: org. junit. assert. assertsame ( ncbuilder, builder. getclass ( ) )
[4]: org. junit. assert. assertsame ( ncbuilder, builder )

************

************
tgt: org . junit . assert . assertequals ( true , optionalsubject . validate ( ) )
[0]: org. junit. assert. assertsame ( builder, builder )
[1]: org. junit. assert. assertequals ( 1, tables. size ( ) )
[2]: org. junit. assert. assertequals ( 0, tables. size ( ) )
[3]: org. junit. assert. assertequals ( table1, tables )
[4]: org. junit. assert. assertequals ( null, tables )

************

************
tgt: org . junit . assert . assertequals ( "x" , output )
[0]: ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), done. get ( ) )
[2]: org. junit. assert. assertequals ( 1, ( ( int ) ( done. get ( ) ) ) )
[3]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), done. get ( ) )
[4]: org. junit. assert. assertequals ( 1, results. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( resulting, origin )
[1]: org. junit. assert. assertnotnull ( reconstructed )
[2]: the reconstructed )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( countmap . get ( hs ) . intvalue ( ) , count )
[0]: org. junit. assert. asserttrue ( com. google. common. collect. lists. newarraylist ( com. ebay. pulsar. analytics. datasource. datasourc datasourc datasourc datasourc datasourcer. getallsupporteddatasourcetypes ( ) ). isempty ( ) )
[1]: org. junit. assert. asserttrue ( com. google. common. collect. immutablelist. of ( com. ebay. pulsar. analytics. datasource. datasourc datasourc datasourc datasourcenegistry. getallsupporteddatasourcetypes ( ) ). isempty ( ) )
[2]: org. junit. assert. asserttrue ( com. google. common. collect. lists. newarraylist ( com. ebay. pulsar. analytics. datasource. datasourc datasourc datasourc datasourcenegistry. getallsupporteddatasourcetypes ( ) ). isempty ( ) )
[3]: org. junit. assert. asserttrue ( com. google. common. collect. immutablelist. < com. ebay. pulsar. analytics. datasource. datasourc datasourc datasourc datasourc datasourc datasourcer. getallsupporteddatasourcetypes ( ). isempty ( ) )
[4]: org. junit. assert. asserttrue ( com. google. common. collect. lists. newarraylist ( com. ebay. pulsar. analytics. datasource. datasourc datasourc datasourc datasourc datasourcer. getallsupporteddatasourcetypes ( ) ). isempty ( ) )

************

************
tgt: org . junit . assert . assertthat ( i . get ( ) , org . hamcrest . corematchers . is ( 10 ) )
[0]: org. junit. assert. assertthat ( pathelement. getparent ( ), org. hamcrest. corematchers. is ( parentpathelement ) )
[1]: org. junit. assert. assertthat ( pathelement, org. hamcrest. core. is. is ( parentpathelement ) )
[2]: org. junit. assert. assertequals ( parentpathelement, pathelement. getparent ( ) )
[3]: org. junit. assert. assertnotnull ( pathelement. getparent ( ) )
[4]: org. junit. assert. assertthat ( pathelement )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. assertequals ( e, e )
[2]: org. junit. assert. asserttrue ( true )
[3]: org. junit. assert. assertnotnull ( e. getmessage )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "http" , scheme )
[0]: org. junit. assert. assertequals ( 1, rule. getlimits ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( l3, l1 ), rule. getlimits ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( l3, l2 ), rule. getlimits ( ) )
[3]: org. junit. assert. assertequals ( 0, rule. getlimits ( ). size ( ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( expectedhmacsha256signature , actualhmacsha256signature )
[0]: org. junit. assert. assertequals ( 1, i0 )
[1]: org. junit. assert. assertequals ( 0, i0 )
[2]: org. junit. assert. assertequals ( i0, format. count )
[3]: org. junit. assert. assertequals ( i0, format. 1 )
[4]: org. junit. assert. assertequals ( i0, format. stack. i0 )

************

************
tgt: org . junit . assert . assertequals ( "" , new someclass ( ) . getstring ( ) )
[0]: org. junit. assert. assertequals ( 0, jcn. size ( ) )
[1]: org. junit. assert. assertequals ( 1, jcn. size ( ) )
[2]: org. junit. assert. assertequals ( 2, jcn. size ( ) )
[3]: org. junit. assert. assertequals ( 0, jcn. length )
[4]: org. junit. assert. assertequals ( len, jcn. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( atomicinteger . get ( ) , 5 )
[0]: org. junit. assert. assertequals ( expectedbagofcharacters ( characters ), url. collect ( list ) )
[1]: org. junit. assert. assertequals ( expectedbagofcharacters ( list ), url. collect ( characters ) )
[2]: org. junit. assert. assertequals ( expectedbagofcharacters ( characters ), url. collect ( ) )
[3]: org. junit. assert. assertequals ( expectedbagofcharacters ( characters ), url. tostring ( ) )
[4]: org. junit. assert. assertequals ( expectedbagofcharacters ( characters ), url. collect ( characters ) )

************

************
tgt: org . junit . assert . assertequals ( lf . refresh ( ) , lf )
[0]: org. junit. assert. assertnotnull ( manager. getexistingsession ( session. getid ( ) ) )
[1]: org. junit. assert. assertnotnull ( manager. getexistingsession ( session ) )
[2]: org. junit. assert. assertnotnull ( manager. getexistingsession ( session. getclass ( ) ) )
[3]: org. junit. assert. asserttrue ( manager. getexistingsession ( session. getid ( ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( matchresult )
[0]: org. junit. assert. assertequals ( 1, this. list. getsamplerates ( ). length )
[1]: org. junit. assert. assertequals ( 1, testgetsamplerates ( ). length )
[2]: org. junit. assert. assertequals ( 1, ( ( int ) ( data. getsamplerates ( ) ) ) )
[3]: org. junit. assert. assertequals ( 1, ( ( int ) ( itamplerates ( ) ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertarrayequals ( a , copyof ( a ) )
[0]: org. junit. assert. assertnotnull ( obtido )
[1]: org. junit. assert. assertequals ( e, obtido )
[2]: org. junit. assert. assertnull ( obtido )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertthat ( fraction , org . hamcrest . matchers . greaterthanorequalto ( last ) )
[0]: org. junit. assert. assertequals ( 1, org. eclipse. rap. rwt. internal. service. contextprovider. getuisession ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, org. eclipse. rap. rwt. internal. service. contextprovider. getuisession ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, org. eclipse. rap. rwt. internal. service. lifecycleservicehandler_test. getuisession ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), getuisession ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. eclipse. rap. rwt. internal. service. lifecycleservicehandler_test )

************

************
tgt: org . junit . assert . assertsame ( wrappedlistener , tabfolderlistener . geteventlistener ( ) )
[0]: org. junit. assert. assertequals ( 1, ps. size ( ) )
[1]: org. junit. assert. assertequals ( 0, ps. size ( ) )
[2]: org. junit. assert. assertequals ( guideddecisiontableconstants. instance. retractactions ( column ), org. drools. workbench. screens. guided. dtable. client. wizard. column. pages. common. decisiontablecolumnviewutils. getcolumnmanagementgrouptitle ( column ) )
[3]: org. junit. assert. assertequals ( guideddecisiontableconstants. instance. br, org. drools. workbench. screens. guided. dtable. client. wizard. column. pages. common. decisiontablecolumnviewutils. getcolumnmanagementgrouptitle ( column ) )
[4]: org. junit. assert. assertnotnull ( org. drools. workbench. screens. guided. dtable. client. wizard. column. pages. common. decisiontablecolumnviewutils. getcolumnmanagementgrouptitle ( column ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , rpt . size ( ) )
[0]: org. junit. assert. assertequals ( guideddecisiontableconstants. instance. retractactions ( column ), org. drools. workbench. screens. guided. dtable. client. wizard. column. pages. common. decisiontablecolumnviewutils. getcolumnmanagementgrouptitle ( col ) )
[1]: org. junit. assert. assertequals ( guideddecisiontableconstants. instance. br br
[2]: org. junit. assert. assertequals ( originalobject. getteststring ( ), overridingobject. getteststring ( ) )
[3]: org. junit. assert. assertequals ( originalobject. getteststring ( ), originalobject. getteststring ( ) )
[4]: org. junit. assert. assertequals ( originalobject. getteststring ( ), adaptedobject. getteststring ( ) )

************

************
tgt: org . junit . assert . assertequals ( targetelement , treeitem . getelement ( ) )
[0]: org. junit. assert. assertequals ( originalobject. getteststring ( ), superobject. getteststring ( ) )
[1]: org. junit. assert. assertequals ( originalobject. getteststring ( ), inferredobject. getteststring ( ) )
[2]: org. junit. assert. assertequals ( 0, patterns. size ( ) )
[3]: org. junit. assert. assertequals ( 1, patterns. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( baos. tobytearray ( ) ), instance. tojson ( ) )

************

************
tgt: org . junit . assert . assertthat ( violations . size ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( baos. tobytearray ( ) ), instance. tojson ( ) )
[1]: org. junit. assert. assertequals ( 1, instance. tojson ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), instance. tojson ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( baos. tobytearray ( ). length ), instance. tojson ( ) )
[4]: org. junit. assert. assertequals ( set ( rootsrc1 ), set ( scope ) )

************

************
tgt: org . junit . assert . assertequals ( session , session . thisinstance ( ) )
[0]: org. junit. assert. assertequals ( com. spotify. folsom. ketamaintegrationtest. value2, client. get ( com. spotify. folsom. ketamaintegrationtest. key1 ). tocompletablefuture ( ). get ( ) )
[1]: org. junit. assert. assertthat ( client. get ( com. spotify. folsom. ketamaintegrationtest. key1 ). tocompletablefuture ( ). get ( ), org. hamcrest. corematchers. is ( com. spotify. folsom. ketamaintegrationtest. value2 ) )
[2]: org. junit. assert. assertequals ( com. spotify. folsom. ketamaintegrationtest. value1, client. get ( com. spotify. folsom. ketamaintegrationtest. key1 ). tocompletablefuture ( ). get ( ) )
[3]: org. junit. assert. assertthat ( client. get ( com. spotify. folsom. ketamaintegrationtest. key1 ). tocompletablefuture ( ). get ( ), org. hamcrest. corematchers. is ( com. spotify. folsom. ketamaintegrationtest. value1 ) )
[4]: org. junit. assert. assertthat ( client. get ( com. spotify. folsom. ketamaintegrationtest. key1 ). tocompletablefuture ( ). get ( ), org. hamcrest. corematchers. is ( java. util. arrays. aslist ( com. spotify. folsom. ketamaintegrationtest. value2 ) ) )

************

************
tgt: org . junit . assert . assertequals ( times , result )
[0]: org. junit. assert. asserttrue ( pokemons. isrecognized ( ) )
[1]: org. junit. assert. asserttrue ( object. isempty ( ) )
[2]: org. junit. assert. asserttrue ( executor. isempty ( ) )
[3]: org. junit. assert. asserttrue ( map. isempty ( ) )
[4]: org. junit. assert. asserttrue ( validator. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , jcases . size ( ) )
[0]: org. junit. assert. asserttrue ( obj. isempty ( ) )
[1]: org. junit. assert. assertequals ( clazz, datasource. getlogwriter ( ) )
[2]: org. junit. assert. assertequals ( clazz. getclass ( ), datasource. getlogwriter ( ) )
[3]: org. junit. assert. assertequals ( clazz. getname ( ), datasource. getlogwriter ( ) )
[4]: org. junit. assert. assertequals ( clazz. getclass ( ), datasources. getlogwriter ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , results . size ( ) )
[0]: org. junit. assert. assertequals ( clazz. getclass ( ), datasource. getlogwriter ( ). class )
[1]: org. junit. assert. assertnull ( value )
[2]: org. junit. assert. assertnotnull ( value )
[3]: org. junit. assert. assertequals ( null, value )
[4]: org. junit. assert. assertequals ( """", value )

************

************
tgt: org . junit . assert . assertequals ( update , actual )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, customers. size ( ) )
[2]: org. junit. assert. assertequals ( 0, customers. size ( ) )
[3]: org. junit. assert. assertequals ( 1, customers. size ( ) )
[4]: org. junit. assert. assertequals ( 3, customers. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "transform" , transformerextension . gettagname ( ) )
[0]: org. junit. assert. assertequals ( 2, customers. size ( ) )
[1]: org. junit. assert. assertnotnull ( overview )
[2]: org. junit. assert. assertequals ( overview, result )
[3]: org. junit. assert. asserttrue ( overview. method_13 ( ) )
[4]: org. junit. assert. assertequals ( overview, expected )

************

************
tgt: org . junit . assert . asserttrue ( bcr . dohasnext ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( null, mbmessage. getbody ( ) )
[2]: org. junit. assert. assertnull ( mbmessage. getbody ( ) )
[3]: org. junit. assert. assertequals ( 0, mbmessage. getbody ( ) )
[4]: org. junit. assert. assertequals ( 0, mbmessage. getbody ( ). length )

************

************
tgt: org . junit . assert . assertthat ( name . neuhalfen . projects . crypto . bouncycastle . openpgp . keys . generation . keyflag . frominteger ( 0 ) , org . hamcrest . matchers . empty ( ) )
[0]: org. junit. assert. assertequals ( 1, mbmessage. getbody ( ) )
[1]: org. junit. assert. assertnotnull ( count )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertequals ( result, null )

************

************
tgt: org . junit . assert . asserttrue ( callfactory . invokedwith ( requestparams ) )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( result, items )
[2]: org. junit. assert. assertequals ( 2, resultlist. size ( ) )
[3]: org. junit. assert. assertequals ( 5, resultlist. size ( ) )
[4]: org. junit. assert. assertequals ( 1, resultlist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "hello" , proxy . serializable ( ) )
[0]: org. junit. assert. assertequals ( expected, resultlist. size ( ) )
[1]: org. junit. assert. assertequals ( 6, resultlist. size ( ) )
[2]: org. junit. assert. asserttrue ( failed )
[3]: org. junit. assert. assertnotnull ( failed )
[4]: org. junit. assert. asserttrue ( failure )

************

************
tgt: org . junit . assert . assertequals ( false , result )
[0]: , failed )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, ids. size ( ) )
[3]: org. junit. assert. assertequals ( 0, ids. size ( ) )
[4]: org. junit. assert. assertequals ( 1, id. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( base . hashcode ( ) , code )
[0]: org. junit. assert. assertequals ( 1l, ids. size ( ) )
[1]: org. junit. assert. assertequals ( 1, ids. size ( ) )
[2]: org. junit. assert. assertnull ( org. uberfire. backend. server. util. paths. removeprefix ( repositoryroot, repositoryroot ) )
[3]: org. junit. assert. assertfalse ( org. uberfire. backend. server. util. paths. removeprefix ( repositoryroot, repositoryroot ) )
[4]: org. junit. assert. assertnull ( org. uberfire. backend. server. util. paths. removeprefix ( repositoryroot, reporoot ) )

************

************
tgt: org . junit . assert . asserttrue ( nom . tam . util . testarrayfuncs . arrayequals ( start , finish ) )
[0]: org. junit. assert. assertnotnull ( org. uberfire. backend. server. util. paths. removeprefix ( repositoryroot, repositoryroot ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( ( ( byte ) ( 2 ) ), immediatevalue. getvalue ( ) )
[3]: org. junit. assert. assertequals ( ( ( byte ) ( 1 ) ), immediatevalue. getvalue ( ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 2 ), immediatevalue. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1l , result )
[0]: org. junit. assert. assertequals ( ( ( byte ) ( 2 ) ), immediatevalue. getvalue ( ). length )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, hiddenproperties. size ( ) )
[3]: org. junit. assert. assertnotnull ( hiddenproperties )
[4]: org. junit. assert. assertequals ( 0, hiddenproperties. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ! ( metadata . isempty ( ) ) ) )
[0]: org. junit. assert. asserttrue ( hiddenproperties. isempty ( ) )
[1]: , hiddenproperties )
[2]: org. junit. assert. asserttrue ( isbufferingitem ( ) )
[3]: org. junit. assert. assertnotnull ( isbufferingitem ( ) )
[4]: org. junit. assert. assertfalse ( isbufferingitem ( ) )

************

************
tgt: org . junit . assert . asserttrue ( viewaction . project . visiblefiletry ( project . getname ( ) ) )
[0]: org. junit. assert. assertequals ( 1, isbufferingitem ( ) )
[1]: org. junit. assert. assertequals ( 0, isbufferingitem ( ) )
[2]: org. junit. assert. assertnotnull ( value )
[3]: org. junit. assert. assertequals ( null, value )
[4]: org. junit. assert. assertnull ( value )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( value, null )
[1]: org. junit. assert. assertequals ( value, value )
[2]: org. junit. assert. assertequals ( expectedrowcount, actualrowcount )
[3]: org. junit. assertequals. assertequals ( expectedrowcount, actualrowcount )
[4]: org. junit. assert. assertequals ( expectedrowcount, actualrowcount )

************

************
tgt: org . junit . assert . assertequals ( ( ( ( windowsize * windowsize ) * ( products . length ) ) * ( coordinates . length ) ) , measurementlist . size ( ) )
[0]: org. junit. assert. assertequals ( expectedrowcount )
[1]: org. junit. assertequals ( expectedrowcount, actualrowcount )
[2]: org. junit. assert. assertequals ( issuersecretkey. getcryptoparams ( ). getcontent ( ). get ( 0 ), storedissusecretkey. getcryptoparams ( ). getcontent ( ). get ( 0 ) )
[3]: org. junit. assert. assertequals ( v1, v2 )
[4]: org. junit. assert. assertthat ( iterable, org. hamcrest. corematchers. is ( ds ) )

************

************
tgt: org . junit . assert . assertfalse ( this . testentity . getbody ( ) . containskey ( "foo" ) )
[0]: org. junit. assert. assertthat ( iterable. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertthat ( iterable, org. hamcrest. corematchers. is ( ds. size ( ) ) )
[2]: org. junit. assert. assertnotnull ( iterable )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( sight. getid ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( tf )
[0]: org. junit. assert. assertnotnull ( sight )
[1]: org. junit. assert. assertnull ( sight. getid ( ) )
[2]: org. junit. assert. assertequals ( 52, sight )
[3]: ) )
[4]: org. junit. assert. asserttrue ( violated )

************

************
tgt: org . junit . assert . assertequals ( 0 , resultaat . size ( ) )
[0]: org. junit. assert. assertequals ( true, violated )
[1]: org. junit. assert. assertequals ( 1, conversation. getmessagecount ( ) )
[2]: org. junit. assert. assertequals ( 0, conversation. getmessagecount ( ) )
[3]: org. junit. assert. assertequals ( 3, conversation. getmessagecount ( ) )
[4]: org. junit. assert. assertnotnull ( conversation. getmessagecount ( ) )

************

************
tgt: org . junit . assert . assertequals ( "de" , jcas . getdocumentlanguage ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, prefixes. size ( ) )
[2]: org. junit. assert. assertnotnull ( simple )
[3]: org. junit. assert. assertthat ( project, is ( version ) )
[4]: org. junit. assert. assertthat ( project. properties ( ), is ( version ) )

************

************
tgt: org . junit . assert . asserttrue ( restored . equals ( arraylist ) )
[0]: org. junit. assert. assertthat ( project. properties, is ( version ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 1, appender. count )
[4]: org. junit. assert. assertnotnull ( appender )

************

************
tgt: org . junit . assert . assertequals ( true , presenter . isrefreshenabled ( ) )
[0]: org. junit. assert. assertequals ( 1, appender. errors )
[1]: org. junit. assert. assertequals ( 0, appender. count )
[2]: org. junit. assert. assertnotnull ( appender. event )
[3]: org. junit. assert. assertnotnull ( instance. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( edu. illinois. library. cantaloupe. resource. api. long. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedrasternames , rasternames )
[0]: org. junit. assert. assertequals ( instance. tostring ( ), instance. tostring ( ) )
[1]: org. junit. assert. assertequals ( instance. tostring ( ), instance. hashcode ( ) )
[2]: . tostring ( ) )
[3]: org. junit. assert. assertequals ( 0, list. size ( ) )
[4]: org. junit. assert. assertequals ( 1, list. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) == 0 ) )
[1]: org. junit. assert. assertequals ( zero, list. size ( ) )
[2]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) == 1 ) )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( 0 ) ) )
[4]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( size ) ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , archivedactivityinstances . size ( ) )
[0]: org. junit. assert. assertequals ( 1, actual. size ( ) )
[1]: org. junit. assert. assertequals ( 0, actual. size ( ) )
[2]: org. junit. assert. assertthat ( actual. size ( ), org. hamcrest. corematchers. is ( 0 ) )
[3]: org. junit. assert. assertnotnull ( fieldconfig )
[4]: org. junit. assert. assertnotnull ( clone. get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , xares . recover ( xaresource . tmnoflags ) . length )
[0]: org. junit. assert. assertequals ( n, clone. get ( 0 ) )
[1]: org. junit. assert. assertnotnull ( clone. get ( 1 ) )
[2]: org. junit. assert. assertequals ( n, clone. get ( 1 ) )
[3]: org. junit. assert. assertequals ( n. get ( 0 ), clone )
[4]: org. junit. assert. assertnotnull ( responseentity )

************

************
tgt: org . junit . assert . assertfalse ( isemoji )
[0]: org. junit. assert. assertnotnull ( responseentity. getheaders ( ) )
[1]: org. junit. assert. assertequals ( 1, responseentity. getheaders ( ). size ( ) )
[2]: org. junit. assert. assertequals ( response, responseentity. getheaders ( ) )
[3]: org. junit. assert. assertequals ( response, responseentity. getheaders ( ). get ( ) )
[4]: org. junit. assert. assertequals ( new javax. enterprise. util. typeliteral < java. lang. integer > > ( ) { }. gettype ( ), type )

************

************
tgt: org . junit . assert . assertarrayequals ( b [ i ] , ret )
[0]: org. junit. assert. assertequals ( org. jboss. weld. tests. unit. hierarchy. discovery. event. charlie. class, type. getclass ( ) )
[1]: org. junit. assert. assertequals ( new javax. enterprise. util. typeliteral < java. lang. integer > ( ) { }. gettype ( ), type )
[2]: org. junit. assert. assertnotnull ( type )
[3]: type ) )
[4]: org. junit. assert. assertfalse ( valid )

************

************
tgt: org . junit . assert . assertthat ( net . time4j . tz . model . arraytransitionmodeltest . model . getinitialoffset ( ) , org . hamcrest . corematchers . is ( net . time4j . tz . zonaloffset . ofhoursminutes ( offsetsign . ahead_of_utc , 0 , 30 ) ) )
[0]: org. junit. assert. assertequals ( dto, pass ( dto, java. lang. object. class ) )
[1]: org. junit. assert. assertequals ( dto, pass ( dto, java. util. list. class ) )
[2]: org. junit. assert. assertequals ( dto, pass ( dto, java. util. collection. class ) )
[3]: org. junit. assert. assertequals ( dto )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( missingdlcontent )
[0]: org. junit. assert. assertarrayequals ( 1, ba. asbytearraycopy ( ) )
[1]: org. junit. assert. assertarrayequals ( new byte [ ] { 1 }, asbytearraycopy ( ) )
[2]: org. junit. assert. assertarrayequals ( 1, ba. asbytearraycopy ( ). length )
[3]: org. junit. assert. assertarrayequals ( new byte [ ] { 1 }, asbytearraycopy ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( cdv . isreleaseselected ( ) )
[0]: org. junit. assert. assertequals ( expectatedmessage, e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( expectatedmessage, e )
[2]: org. junit. assert. assertequals ( expectedarray, e )
[3]: org. junit. assert. assertequals ( expectedarray, e. getmessage ( ) )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . asserttrue ( org . mitre . mpf . wfm . itwebui . loginpage . validpage ( org . mitre . mpf . wfm . itwebui . driver ) )
[0]: org. junit. assert. asserttrue ( s. getstringtext ( ). equalsignorecase ( mergedword ) )
[1]: org. junit. assert. asserttrue ( s. getstringtext ( ). contains ( mergedword ) )
[2]: org. junit. assert. asserttrue ( s. getstringtext ( ), wordsfedfound )
[3]: org. junit. assert. asserttrue ( s. getstringtext ( ). equalsignorecase ( previous ) )
[4]: org. junit. assert. asserttrue ( s. getstringtext ( ). equalsignorecase ( prev ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( "a" , "z" ) , target )
[0]: org. junit. assert. assertnotnull ( csvoutputfile )
[1]: org. junit. assert. assertnotnull ( csvoutputfile. size ( ) )
[2]: org. junit. assert. assertnotnull ( csvoutputfile. list ( ) )
[3]: org. junit. assert. assertnotnull ( csvoutputfile. read ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , returnvalue . size ( ) )
[0]: org. junit. assert. assertequals ( 1, asyncevents. size ( ) )
[1]: org. junit. assert. assertequals ( 0, asyncevents. size ( ) )
[2]: org. junit. assert. assertequals ( 3, asyncevents. size ( ) )
[3]: org. junit. assert. assertequals ( 5, asyncevents. size ( ) )
[4]: org. junit. assert. assertequals ( 9, asyncevents. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( originalstring ) )
[0]: org. junit. assert. assertequals ( true, results. get ( ) )
[1]: org. junit. assert. assertequals ( result, total )
[2]: org. junit. assert. assertequals ( e, total )
[3]: org. junit. assert. assertequals ( expected, results )
[4]: org. junit. assert. assertequals ( true, results. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( baseconsumerclass . exists ( ) )
[0]: org. junit. assert. assertnotnull ( out. tobytearray ( ) )
[1]: org. junit. assert. assertnotnull ( out )
[2]: org. junit. assert. assertequals ( pr, out )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( isvalid )
[0]: org. junit. assert. assertequals ( 1, client. getalltable ( usedbname ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, client. getalltable ( usedbname ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, dao. getalltable ( usedbname ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, ident_1. getalltable ( usedbname ). size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( ( - 2 ) , bean . value )
[0]: org. junit. assert. assertequals ( com. couchbase. client. core. node. couchbasenodetest. host, registered. type ( ) )
[1]: org. junit. assert. assertequals ( registrymock, registered. type ( ) )
[2]: org. junit. assert. assertequals ( 1, registered. type ( ) )
[3]: org. junit. assert. assertequals ( type, registered. type ( ) )
[4]: type ( ) )

************

************
tgt: org . junit . assert . assertequals ( value , wrapper . getlocaldate ( ) )
[0]: org. junit. assert. assertnotnull ( contextcm )
[1]: org. junit. assert. assertnotnull ( contextcm. getid ( ) )
[2]: org. junit. assert. assertnotnull ( contextcm. getmessage ( ) )
[3]: org. junit. assert. assertnotnull ( contextcm. tostring ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( configuration , configuration2 )
[0]: org. junit. assert. assertequals ( 1, fetchcount ( ) )
[1]: org. junit. assert. assertequals ( 0, fetchcount ( ) )
[2]: org. junit. assert. assertequals ( 1l, fetchcount ( ) )
[3]: org. junit. assert. assertequals ( 0l, fetchcount ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( panelstate . getstate ( ) , org . hamcrest . core . is . is ( state . template ) )
[0]: org. junit. assert. assertequals ( val, expectedconnectioncount )
[1]: org. junit. assert. assertequals ( val, actualconnectioncount )
[2]: org. junit. assert. assertequals ( val, ( val + 1 ) )
[3]: org. junit. assert. assertequals ( val, proxyconnector. getconnectioncount )
[4]: , val )

************

************
tgt: org . junit . assert . assertequals ( ( fn / ( fn + tp ) ) , instance . getfalsenegativesrate ( ) , eps )
[0]: org. junit. assert. assertequals ( aslist ( ( ( java. lang. object ) ( bean ) ) ), bean )
[1]: org. junit. assert. assertequals ( aslist ( ( ( java. lang. object ) ( null ) ) ), bean )
[2]: org. junit. assert. assertnotnull ( messageidcaptor. getvalue ( ) )
[3]: ( bean ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . matchers . is ( expected ) )
[0]: org. junit. assert. assertnotnull ( namespace )
[1]: org. junit. assert. assertnotnull ( client. heartbeat ( null ) )
[2]: org. junit. assert. assertequals ( null, client. heartbeat ( null ) )
[3]: org. junit. assert. assertequals ( null, client. heartbeat ( i ) )
[4]: org. junit. assert. assertequals ( convertedvalue, givenvalue )

************

************
tgt: org . junit . assert . assertequals ( 0 , s . swap ( 0 ) )
[0]: org. junit. assert. assertthat ( convertedvalue, org. hamcrest. corematchers. is ( convertedvalue ) )
[1]: org. junit. assert. assertthat ( givenvalue, org. hamcrest. matchers. is ( convertedvalue ) )
[2]: org. junit. assert. assertequals ( givenvalue, convertedvalue )
[3]: 
[4]: org. junit. assert. assertequals ( 0, 1 )

************

************
tgt: org . junit . assert . asserttrue ( group . isassignedasevaluator ( evaluator ) )
[0]: org. junit. assert. assertequals ( 0, s. size ( ) )
[1]: org. junit. assert. assertequals ( 0, repository. size ( ) )
[2]: org. junit. assert. assertequals ( 0, set. size ( ) )
[3]: org. junit. assert. assertequals ( 1, 1 )
[4]: org. junit. assert. assertfalse ( can )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( false, can )
[1]: org. junit. assert. asserttrue ( can )
[2]: org. junit. assert.false ( can )
[3]: org. junit. assert. assertfalse ( can )
[4]: org. junit. assert. assertfalse ( bc. contains ( subset ) )

************

************
tgt: org . junit . assert . assertequals ( expectedbytes , actualbytes )
[0]: org. junit. assert. assertnotnull ( collection )
[1]: org. junit. assert. assertnotnull ( context )
[2]: org. junit. assert. assertequals ( 0, 1 )
[3]: org. junit. assert. assertequals ( 1, 1 )
[4]: type ) { }

************

************
tgt: org . junit . assert . asserttrue ( ( ( keycodesset . size ( ) ) == ( keycodes . size ( ) ) ) )
[0]: org. junit. assert. assertequals ( 1, ab. getpacket ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, ab. getpacket ( ) )
[2]: org. junit. assert. assertequals ( 1, ab. getpacket ( ). length )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), ab )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( packet ), ab )

************

************
tgt: org . junit . assert . assertequals ( expectedcallbackuri , absolutecallbackuri )
[0]: org. junit. assert. assertequals ( 0, configs. isempty ( ) )
[1]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. core. fat. invalidbaseentryinrealmtest. checkpassword ( user, password ) )
[2]: org. junit. assert. assertnotnull ( java. util. arrays. aslist ( user ) )
[3]: org. junit. assert. assertnotnull ( java. util. collections. checkpassword ( user, password ) )
[4]: org. junit. assert. assertnotnull ( client. checkpassword ( user, password ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, version. getparams ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( version. getparams ( ) )
[3]: org. junit. assert. assertequals ( 1, version. getparams ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, version. getparams ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( null, version. getparams ( ). get ( ) )
[1]: org. junit. assert. asserttrue ( realmidentity. exists ( ) )
[2]: org. junit. assert. assertnotnull ( group. getname ( ) )
[3]: org. junit. assert. assertequals ( name, group. getname ( ) )
[4]: org. junit. assert. assertnull ( group. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , objects . size ( ) )
[0]: org. junit. assert. assertequals ( null, group. getname ( ) )
[1]: type ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( expected. trim ( ), actual )
[4]: org. junit. assert. assertequals ( expect, actual )

************

************
tgt: org . junit . assert . assertarrayequals ( bb . util . reflectutil . unittest . planet . values ( ) , planetsreflected )
[0]: org. junit. assert. assertequals ( actual, expected )
[1]: ) )
[2]: org. junit. assert. assertequals ( controle ( context ), true )
[3]: org. junit. assert. assertequals ( controle ( context ), verzoek )
[4]: org. junit. assert. assertequals ( controle ( context ), null )

************

************
tgt: org . junit . assert . assertfalse ( proxyhttpheader . isvalid ( ) )
[0]: org. junit. assert. assertequals ( controle ( context ), result )
[1]: ) )
[2]: org. junit. assert. assertequals ( r, stmt2 )
[3]: org. junit. assert. asserttrue ( processbag. equals ( processbag ) )
[4]: org. junit. assert. assertfalse ( processbag. equals ( processbag ) )

************

************
tgt: org . junit . assert . asserttrue ( report . contains ( espacechar ) )
[0]: org. junit. assert. assertequals ( true, processbag. equals ( processbag ) )
[1]: org. junit. assert. asserttrue ( processbag. equals ( processbag ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( null, gf. getparentscript ( ) )
[4]: org. junit. assert. assertnull ( gf. getparentscript ( ) )

************

************
tgt: org . junit . assert . assertthat ( found , equalto ( expected ) )
[0]: org. junit. assert. assertequals ( 0, gf. getparentscript ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertnotnull ( uaicriteria. getsingleresult ( ) )
[4]: org. junit. assert. assertnotnull ( uaicriteria )

************

************
tgt: org . junit . assert . assertequals ( 0 , deltokens . size ( ) )
[0]: org. junit. assert. assertnotnull ( uaiccurrent. getsingleresult ( ) )
[1]: org. junit. assert. assertnotnull ( uaicriteriacto )
[2]: ) )
[3]: org. junit. assert.null ( fix )
[4]: org. junit. assert. assertnotnull ( fix )

************

************
tgt: org . junit . assert . assertthat ( results , is ( set ( 2 , ( - 3 ) ) ) )
[0]: , fix )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( true, criterion. ismetby ( observer ) )
[4]: org. junit. assert. asserttrue ( criterion. ismetby ( observer ) )

************

************
tgt: org . junit . assert . assertequals ( false , a )
[0]: org. junit. assert. assertequals ( 1, berichtentiteits. isempty ( ) )
[1]: org. junit. assert. assertequals ( in, out )
[2]: org. junit. assert. assertnull ( out )
[3]: org. junit. assert. assertequals ( expectedsize, size )
[4]: org. junit. assert. asserttrue ( ( expectedsize == size ) )

************

************
tgt: org . junit . assert . asserttrue ( driver . isscanpossible ( ) )
[0]: org. junit. assert. asserttrue ( ( expectedsize <= size ) )
[1]: org. junit. assert. asserttrue ( ( expectedsize > size ) )
[2]: org. junit. assert. asserttrue ( ( expectedsize < size ) )
[3]: org. junit. assert. asserttrue ( mf. adjustprotonation ( mf, 1 ) )
[4]: org. junit. assert. asserttrue ( mf. adjustprotonation ( mf, ( - 1 ) ) )

************

************
tgt: org . junit . assert . asserttrue ( org . openl . rules . helpers . arrays . equals ( new java . lang . float [ ] { 0.1f , 5.1f } , outputarray ) )
[0]: org. junit. assert. asserttrue ( mf. adjustprotonation ( mf, 0 ) )
[1]: org. junit. assert. asserttrue ( validator. adjustprotonation ( mf, 1 ) )
[2]: ) )
[3]: org. junit. assert. assertfalse ( id1. equals ( id2 ) )
[4]: org. junit. assert. asserttrue ( id1. equals ( id2 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert.false ( id1. equals ( id2 ) )
[1]: org. junit. assert. assertfalse ( id1. equals ( id2 ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( tabitem. gettext ( ) )
[4]: org. junit. assert. assertequals ( null, tabitem. gettext ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedtype , org . talend . components . common . config . jdbc . talendtype . convertfromavro ( fieldschema ) )
[0]: org. junit. assert. assertnull ( tabitem. gettext ( ) )
[1]: org. junit. assert. assertequals ( 1, tabitem. gettext ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( denyall, concat )
[4]: org. junit. assert. assertnotnull ( concat )

************

************
tgt: org . junit . assert . assertequals ( script , observedscript )
[0]: org. junit. assert. assertequals ( denyall. fail, concat )
[1]: org. junit. assert. assertnull ( concat )
[2]: org. junit. assert. assertequals ( denyall. s, concat )
[3]: org. junit. assert. assertequals ( new org. eclipse. rap. json. jsonarray ( ). add ( jsonarray ), jsonarray )
[4]: org. junit. assert. assertequals ( new org. eclipse. rap. json. jsonarray ( ), jsonarray )

************

************
tgt: org . junit . assert . assertequals ( expectedhitratio , actualhitratio , 0 )
[0]: org. junit. assert. assertequals ( org. eclipse. rap. json. jsonarray. add ( jsonarray ), jsonarray )
[1]: org. junit. assert. assertequals ( new org. eclipse. rap. json. jsonarray ( ), jsonarray. add ( 1 ) )
[2]: org. junit. assert. assertequals ( new org. eclipse. rap. json. jsonarray ( ), jsonarray. add ( 0 ) )
[3]: org. junit. assert. assertequals ( entry. getvalue ( ), entry. getvalue ( ) )
[4]: org. junit. assert. assertnotnull ( entry. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedvalues [ i ] , map . get ( expectedvalues [ i ] ) )
[0]: org. junit. assert. assertequals ( entry. getvalue ( ), entry. getkey ( ) )
[1]: org. junit. assert. assertequals ( entry. getvalue ( ), entry. get ( ) )
[2]: org. junit. assert. assertnull ( entry. getvalue ( ) )
[3]: org. junit. assert. assertequals ( 0, original. size ( ) )
[4]: org. junit. assert. assertequals ( 1, cvs. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( w . getname ( ) )
[0]: org. junit. assert. assertequals ( 0, cvs. size ( ) )
[1]: org. junit. assert. assertequals ( 2, cvs. size ( ) )
[2]: org. junit. assert. assertequals ( 1, cvs. length )
[3]: org. junit. assert. assertnotnull ( cvs )
[4]: org. junit. assert. assertnotnull ( tool. getsnapshotname ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( e )
[0]: org. junit. assert. assertequals ( snapshotname, tool. getsnapshotname ( ) )
[1]: org. junit. assert. assertequals ( 1, tool. getsnapshotname ( ). size ( ) )
[2]: org. junit. assert. assertequals ( serialized, tool. getsnapshotname ( ) )
[3]: ) )
[4]: org. junit. assert. assertnull ( grid. getnextvisiblecolumn ( columns ) )

************

************
tgt: org . junit . assert . assertequals ( "secure" , cookie . getname ( ) )
[0]: org. junit. assert. assertnotnull ( grid. getnextvisiblecolumn ( columns ) )
[1]: org. junit. assert. assertnull ( getnextvisiblecolumn ( columns ) )
[2]: org. junit. assert. assertequals ( null, grid. getnextvisiblecolumn ( columns ) )
[3]: org. junit. assert. assertequals ( null, getnextvisiblecolumn ( columns ) )
[4]: org. junit. assert. assertfalse ( input. containskey ( input ) )

************

************
tgt: org . junit . assert . asserttrue ( mdractions . isempty ( ) )
[0]: org. junit. assert. assertfalse ( input. containskey ( ""field1 ) )
[1]: org. junit. assert. assertfalse ( input. containskey ( 0 ) )
[2]: org. junit. assert. assertfalse ( input. containskey ( ""field1"" ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( org. jboss. hal. core. finder. finderpath. from ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( x . testme ( y ) )
[0]: org. junit. assert. assertequals ( org. jboss. hal. core. finder. finderpath. from ( null ). size ( ), 1 )
[1]: org. junit. assert. assertequals ( 1, org. jboss. hal. core. finder. finderpath. from ( null ). size ( ) )
[2]: org. junit. assert. asserttrue ( org. jboss. hal. core. finder. finderpath. from ( null ). isempty ( ) )
[3]: org. junit. assert. assertequals ( org. jboss. hal. core. finder. finderpath. from ( null ). size ( ), 0 )
[4]: org. junit. assert. assertequals ( 1, check. run ( ) )

************

************
tgt: org . junit . assert . assertsame ( expectedresult , result )
[0]: org. junit. assert. assertnotnull ( check. run ( ) )
[1]: org. junit. assert. assertequals ( true, check. run ( ) )
[2]: org. junit. assert. assertnull ( check. run ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), matcher. lookingat ( ) )

************

************
tgt: org . junit . assert . assertthat ( image . check ( ) , org . hamcrest . core . is . is ( false ) )
[0]: org. junit. assert. assertequals ( date, matcher. lookingat ( ) )
[1]: org. junit. assert. assertequals ( 1, matcher. lookingat ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, matcher. lookingat ( ). size ( ) )
[3]: ) )
[4]: org. junit. assert. assertthat ( a. intersect ( c ), org. hamcrest. corematchers. is ( b ) )

************

************
tgt: org . junit . assert . assertnull ( state )
[0]: org. junit. assert. assertthat ( a. intersect ( b ). isempty ( ), org. hamcrest. corematchers. is ( true ) )
[1]: org. junit. assert. assertequals ( lastsourceoffset, result )
[2]: org. junit. assert. assertequals ( result, lastsourceoffset )
[3]: org. junit. assert. assertequals ( firstsourceoffset, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( ( ( ( value0 . intvalue ( ) ) + ( value1 . intvalue ( ) ) ) > ( value2 . intvalue ( ) ) ) )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertnull ( url )
[2]: org. junit. assert. assertnull ( url )
[3]: org. junit. assert. assertnotnull ( url )
[4]: org. junit. assert. assertnull ( url )

************

************
tgt: org . junit . assert . assertequals ( 3 , coveredgoals . size ( ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( compatiblenames. contains ( name_en_uk ) )
[2]: org. junit. assert. asserttrue ( compatiblenames. contains ( id ) )
[3]: org. junit. assert. asserttrue ( compatiblenames. contains ( n ) )
[4]: org. junit. assert. asserttrue ( compatiblenames. contains ( name_en_u k ) )

************

************
tgt: org . junit . assert . assertnull ( msgidlist )
[0]: org. junit. assert. assertequals ( compatiblenames, compatiblenames. contains ( name ) )
[1]: org. junit. assert. assertequals ( infile, text )
[2]: org. junit. assert. assertnotnull ( text )
[3]: org. junit. assert. assertnull ( text )
[4]: org. junit. assert. assertequals ( infile, text )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: , text )
[1]: org. junit. assert. assertnotnull ( api. test ( ) )
[2]: org. junit. assert. assertequals ( 1, api. test ( ) )
[3]: org. junit. assert. asserttrue ( api. test ( ) )
[4]: org. junit. assert. assertnull ( api. test ( ) )

************

************
tgt: org . junit . assert . assertfalse ( messageprocessingsequence . next ( ) )
[0]: org. junit. assert. assertequals ( 0, api. test ( ) )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( message, e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( e. getmessage ( ), null )
[4]: org. junit. assert. assertequals ( e. getmessage ( ), message )

************

************
tgt: org . junit . assert . assertsame ( args , invocation . getswaggerarguments ( ) )
[0]: ) )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( 1, intersecting. size ( ) )
[3]: org. junit. assert. assertnotnull ( context )
[4]: org. junit. assert. assertnotnull ( collection )

************

************
tgt: org . junit . assert . assertequals ( "one<sp>or<sp>two<sp>null<sp>values" , result )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertnotnull ( queue )
[2]: type ) { }
[3]: org. junit. assert. assertequals ( 1, aslist. size ( ) )
[4]: org. junit. assert. assertequals ( 0, aslist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , multimap . tomap ( ) )
[0]: org. junit. assert. assertequals ( 3, aslist. size ( ) )
[1]: org. junit. assert. assertequals ( 1, products. length )
[2]: org. junit. assert. assertequals ( 0, products. length )
[3]: org. junit. assert. assertequals ( 1, products. length, 0 )
[4]: org. junit. assert. assertequals ( 1, products. length. length )

************

************
tgt: org . junit . assert . asserttrue ( permissionchecker . isgroupmember ( _group . getgroupid ( ) ) )
[0]: org. junit. assert. assertequals ( 3, products. length )
[1]: org. junit. assert. assertequals ( 0, shardlist. size ( ) )
[2]: org. junit. assert. assertequals ( 1, shardlist. size ( ) )
[3]: org. junit. assert. assertnotnull ( shardlist )
[4]: org. junit. assert. assertnull ( shardlist )

************

************
tgt: org . junit . assert . assertequals ( "use<sp>fallback<sp>repositories" , true , config . usefallbackrepositories ( ) )
[0]: ) )
[1]: org. junit. assert. assertfalse ( checkboxclickevent. ischecked ( ) )
[2]: org. junit. assert. assertnull ( checkboxclickevent. ischecked ( ) )
[3]: org. junit. assert. assertequals ( false, checkboxclickevent. ischecked ( ) )
[4]: org. junit. assert. assertequals ( 0, checkboxclickevent. ischecked ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( getuser ( identitymanager , loginname ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, rs. getint ( sqltext ) )
[2]: org. junit. assert. assertequals ( 0, rs. getint ( sqltext ) )
[3]: org. junit. assert. assertnotnull ( planes )
[4]: org. junit. assert. asserttrue ( planes. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , application . informattributeremoved . get ( ) )
[0]: org. junit. assert. assertequals ( 1, planes. size ( )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertnotnull ( ctx. result ( ) )
[4]: org. junit. assert. assertequals ( ctx. result ( ), 1 )

************

************
tgt: org . junit . assert . assertfalse ( result . issuccess ( ) )
[0]: org. junit. assert. assertequals ( ctx, ctx. result ( ) )
[1]: org. junit. assert. assertequals ( ctx. result ( ), 0 )
[2]: org. junit. assert. assertequals ( ctx. result ( ), null )
[3]: org. junit. assert. assertnull ( multimap. get ( null ) )
[4]: org. junit. assert. assertnull ( multimap. get ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( stuftransformatieresultaat . getmeldingen ( ) . isempty ( ) )
[0]: org. junit. assert. assertnull ( multimap. get ( true ) )
[1]: org. junit. assert. assertnull ( multimap. get ( 1 ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( mt. isempty ( ) )
[4]: org. junit. assert. assertnotnull ( entrypoint. getparameter ( startupparameters ) )

************

************
tgt: org . junit . assert . assertequals ( expectedvalues , seenvalues )
[0]: org. junit. assert. assertnotnull ( entrypoint. getparameter ( startupparameters. class ) )
[1]: org. junit. assert. assertnull ( entrypoint. getparameter ( startupparameters ) )
[2]: org. junit. assert. assertnull ( entrypoint. getparameter ( startupparameters. class ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( result, args )

************

************
tgt: org . junit . assert . assertthat ( option , is ( new com . asakusafw . runtime . value . longoption ( 100l ) ) )
[0]: org. junit. assert. assertequals ( expected, result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( result, null )
[3]: , result )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertequals ( 2 , execute . size ( ) )
[0]: org. junit. assert. assertnotnull ( e. streamid )
[1]: org. junit. assert. assertequals ( streamid, e )
[2]: org. junit. assert. assertequals ( streamid )
[3]: ) )
[4]: org. junit. assert. assertequals ( fred, dao. getuser ( 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( response )
[0]: org. junit. assert. assertnotnull ( dao. getuser ( 1 ) )
[1]: org. junit. assert. assertequals ( fred, manager. getuser ( 1 ) )
[2]: org. junit. assert. assertnull ( dao. getuser ( 1 ) )
[3]: test case for
[4]: org. junit. assert. assertequals ( l, com. epimorphics. jsonrdf. rdfutil. formatdatetime ( l, true ) )

************

************
tgt: org . junit . assert . assertequals ( source , builder . getpropertystate ( ) )
[0]: org. junit. assert. assertequals ( l, com. epimorphics. jsonrdf. rdfutil. formatdatetime ( l, false ) )
[1]: org. junit. assert. assertthat ( com. epimorphics. jsonrdf. rdfutil. formatdatetime ( l, true ), org. hamcrest. corematchers. is ( l ) )
[2]: org. junit. assert. assertequals ( com. epimorphics. jsonrdf. rdfutil. formatdatetime ( l, true ), l )
[3]: org. junit. assert. assertthat ( com. epimorphics. jsonrdf. rdfutil. formatdatetime ( l, true ), org. hamcrest. corematchers. equalto ( l ) )
[4]: org. junit. assert. assertequals ( p. readstring ( ), readstring )

************

************
tgt: org . junit . assert . assertthat ( tuples . get ( 0 ) , org . hamcrest . corematchers . is ( new cascading . tuple . tuple ( "1" , 1 , 0 , false ) ) )
[0]: org. junit. assert. assertequals ( p. matches ( ), readstring )
[1]: org. junit. assert. assertequals ( expected, readstring )
[2]: org. junit. assert. assertequals ( p, readstring )
[3]: org. junit. assert. assertnotnull ( p )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( ( ( result . geterrors ( ) . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertfalse ( rule. shouldproceed ( usersession, request ) )
[2]: org. junit. assert. assertequals ( 6, zerocount )
[3]: org. junit. assert. assertequals ( 4, zerocount )
[4]: org. junit. assert. assertequals ( ( ( data. length ) + 8 ), zerocount )

************

************
tgt: org . junit . assert . assertequals ( "abc\n" , found )
[0]: org. junit. assert. assertequals ( 1, reportdata. size ( ) )
[1]: org. junit. assert. assertequals ( 3, reportdata. size ( ) )
[2]: org. junit. assert. assertequals ( 2, reportdata. size ( ) )
[3]: org. junit. assert. assertequals ( 4, reportdata. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ! ( cache . iscachedtable ( dbname , tablename ) ) ) )
[0]: org. junit. assert. assertequals ( true, hits. hasnext ( ) )
[1]: org. junit. assert. assertnotnull ( m. gettext ( ) )
[2]: org. junit. assert. assertequals ( msg, m. gettext ( ) )
[3]: org. junit. assert. assertequals ( message, m. gettext ( ) )
[4]: org. junit. assert. assertequals ( null, m. gettext ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , resultaat )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( factory )
[2]: org. junit. assert. assertequals ( fis, factory )
[3]: org. junit. assert. assertnotnull ( factory. getsocketfactorywithkeystore )
[4]: org. junit. assert. assertnull ( factory )

************

************
tgt: org . junit . assert . assertequals ( iter_seen , copy_seen )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( hi )
[2]: org. junit. assert. assertequals ( null, hi )
[3]: org. junit. assert. assertnull ( hi )
[4]: org. junit. assert. assertequals ( null, hi )

************

************
tgt: org . junit . assert . assertequals ( "item0" , list . getitem ( 0 ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( returned, assertions )
[2]: org. junit. assert. assertequals ( 0, result. getnumberofcolumns ( ) )
[3]: org. junit. assert. assertequals ( 1, result. getnumberofcolumns ( ) )
[4]: org. junit. assert. assertequals ( 0, results. getnumberofcolumns ( ) )

************

************
tgt: org . junit . assert . asserttrue ( converter . islinear ( ) )
[0]: org. junit. assert. assertequals ( 0, this. result. getnumberofcolumns ( ) )
[1]: org. junit. assert. assertequals ( 0, result. getnumberofcolumns ( ). length )
[2]: org. junit. assert. assertthat ( receivedstatus, org. hamcrest. corematchers. is ( forbidden ) )
[3]: org. junit. assert. assertequals ( org. eclipse. mylyn. internal. gerrit. core. egit. gerrittogitmappingtest. gerrit_project, mapping. find ( ) )
[4]: org. junit. assert. assertequals ( value, contentlengthamattribute. convert ( value ) )

************

************
tgt: org . junit . assert . assertequals ( expectedtaskoption , actualtaskoption )
[0]: org. junit. assert. assertequals ( value, converter. convert ( contentlengthamattribute. tostring ( ) ) )
[1]: org. junit. assert. assertequals ( value, convert ( contentlengthamattribute. tostring ( ) ) )
[2]: org. junit. assert. assertequals ( value, converter. convert ( contentlengthamattribute. value ) )
[3]: org. junit. assert. assertequals ( value, converter. convert ( contentlengthamattribute. getvalue ( ) ) )
[4]: org. junit. assert. assertequals ( host, appenduri ( host, resourcepath, false ) )

************

************
tgt: org . junit . assert . asserttrue ( ( filter == null ) )
[0]: org. junit. assert. assertequals ( host, new java. lang. string ( host ) )
[1]: org. junit. assert. assertequals ( host, appenduri ( resourcepath, resourcepath, false ) )
[2]: org. junit. assert. assertequals ( host, appenduri ( host, resourcepath, true ) )
[3]: org. junit. assert. assertequals ( host, host )
[4]: org. junit. assert. assertthat ( registeredexecutorservice, org. hamcrest. matchers. is ( runnable ) )

************

************
tgt: org . junit . assert . assertthat ( translatedstatement , org . hamcrest . corematchers . is ( expectedtranslatedstatement ) )
[0]: org. junit. assert. assertthat ( registeredexecutorservice, org. hamcrest. matchers. is ( runnable. name ( ) ) )
[1]: org. junit. assert. assertthat ( registeredexecutorservice, org. hamcrest. matchers. is ( runnable. name ) )
[2]: org. junit. assert. assertthat ( registeredexecutorservice, org. hamcrest. core. is. is ( runnable ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( true, resultaat )

************

************
tgt: org . junit . assert . assertsame ( com . liferay . portal . kernel . nio . intraband . welder . fifo . fifowelder . class , com . liferay . portal . kernel . nio . intraband . welder . welderfactoryutil . getwelderclass ( ) )
[0]: org. junit. assert. assertequals ( false, resultaat )
[1]: org. junit. assert. assertequals ( 1, resultaat )
[2]: org. junit. assert. assertnull ( br. getvat ( ) )
[3]: org. junit. assert. assertequals ( br, br. getvat ( ) )
[4]: org. junit. assert. assertequals ( br. getvat ( ), null )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( br. getvat ( ), none )
[1]: org. junit. assert. assertequals ( br. getvat ( ), none )
[2]: org. junit. assert. assertequals ( 1, batteryinfos. size ( ) )
[3]: org. junit. assert. assertequals ( 0, batteryinfos. size ( ) )
[4]: org. junit. assert. assertequals ( 2, batteryinfos. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( emptyiterator . hasnext ( ) )
[0]: org. junit. assert. assertequals ( 3, batteryinfos. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, m. isidentity ( ) )
[3]: org. junit. assert. assertequals ( true, m. isidentity ( ) )
[4]: org. junit. assert. assertequals ( 0, m. isidentity ( ) )

************

************
tgt: org . junit . assert . assertequals ( expect , sortedrules )
[0]: org. junit. assert. assertequals ( false, m. isidentity ( ) )
[1]: org. junit. assert. assertequals ( mikera. vectorz. util. intarrays. isidentity ( ), m )
[2]: org. junit. assert. assertequals ( 1l, eofg. getintervallength ( ) )
[3]: org. junit. assert. assertequals ( 1, eofg. getintervallength ( ) )
[4]: org. junit. assert. assertnotnull ( eofg. getintervallength ( ) )

************

************
tgt: org . junit . assert . assertequals ( data . length , rec . getlength ( ) )
[0]: org. junit. assert. assertequals ( eofg. getintervallength ( ), 2l )
[1]: ) )
[2]: org. junit. assert. assertarrayequals ( output, array2 )
[3]: org. junit. assert. assertarrayequals ( input, array2 )
[4]: org. junit. assert. assertarrayequals ( stdout, array2 )

************

************
tgt: org . junit . assert . assertfalse ( tree . isvisible ( node ) )
[0]: org. junit. assert. assertarrayequals ( out, array2 )
[1]: , array2 )
[2]: org. junit. assert. assertequals ( 0, analyzedrecords. size ( ) )
[3]: org. junit. assert. assertthat ( analyzedrecords, org. hamcrest. corematchers. is ( records ) )
[4]: org. junit. assert. assertequals ( records, analyzedrecords )

************

************
tgt: org . junit . assert . assertsame ( element , element . withname ( "foo" ) )
[0]: org. junit. assert. assertequals ( ( ( records. size ( ) ) * 2 ), analyzedrecords. size ( )
[1]: org. junit. assert. assertequals ( 0, analyzedrecords. length )
[2]: org. junit. assert. assertequals ( com. sun. mail. util. proputil. getintproperty ( props, null, 1 ), 1 )
[3]: org. junit. assert. assertequals ( com. sun. mail. util. proputil. getintproperty ( props, ""test"", 1 ), 1 )
[4]: org. junit. assert. assertequals ( com. sun. mail. util. proputil. getintproperty ( props, null, 0 ), 1 )

************

************
tgt: org . junit . assert . assertthat ( converter . towritableobject ( javamap ) , org . hamcrest . corematchers . is ( ( ( java . lang . object ) ( writablemap ) ) ) )
[0]: org. junit. assert. assertequals ( 1, com. sun. mail. util. proputil. getintproperty ( props, null, 1 ) )
[1]: org. junit. assert. assertequals ( com. sun. mail. util. proputil. getintproperty ( props, ""test"", 1 ), 0 )
[2]: org. junit. assert. assertequals ( defaultvalue, value )
[3]: org. junit. assert. assertnotnull ( value )
[4]: org. junit. assert. assertnull ( value )

************

************
tgt: org . junit . assert . asserttrue ( factory . hasmappingfor ( capabilities ) )
[0]: org. junit. assert. assertequals ( defaultvalue, value. value )
[1]: ) )
[2]: org. junit. assert. assertequals ( results, result )
[3]: org. junit. assert. assertequals ( result, null )
[4]: org. junit. assert. assertequals ( result, context )

************

************
tgt: org . junit . assert . assertthat ( runner . isalive ( ) , org . hamcrest . core . is . is ( true ) )
[0]: org. junit. assert. assertequals ( result, expected )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( 1, foo. baz ( ) )
[3]: org. junit. assert. assertnotnull ( foo. baz ( ) )
[4]: org. junit. assert. assertequals ( 0, foo. baz ( ) )

************

************
tgt: org . junit . assert . asserttrue ( pulled . get ( ) )
[0]: org. junit. assert. assertequals ( 1, foo. baz ( ). length )
[1]: ) )
[2]: org. junit. assert. assertnull ( values )
[3]: org. junit. assert. assertequals ( null, values )
[4]: org. junit. assert. assertnotnull ( values )

************

************
tgt: org . junit . assert . assertequals ( "" , result )
[0]: , values )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, ksessionmodel. gettype ( ) )
[3]: org. junit. assert. assertequals ( 0, ksessionmodel. gettype ( ) )
[4]: org. junit. assert. assertequals ( null, ksessionmodel. gettype ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , results . size ( ) )
[0]: type ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( createembedding ( v0, e0, v1, e1, v2, v3, e2 ), result. evaluate ( ) )
[3]: org. junit. assert. assertequals ( createembedding ( v0, e0, v1, e1, v2, v3, e2 ), result. get ( 0 ) )
[4]: org. junit. assert. assertequals ( createembedding ( v0, e0, v1, e1, v2, v3, e2, v3 ), result. evaluate ( ) )

************

************
tgt: org . junit . assert . assertequals ( "i<sp>am<sp>service<sp>1" , service . sayhello ( ) )
[0]: org. junit. assert. assertequals ( createembedding ( v0, e0, v1, e1, v2, v3 ), result. evaluate ( ) )
[1]: org. junit. assert. assertequals ( createembedding ( v0, e0, v1, e1, v2, v3, e2, v2 ), result. evaluate ( ) )
[2]: org. junit. assert. assertequals ( testcase. getvalue ( ), objectfilter. size ( ) )
[3]: org. junit. assert. assertequals ( testcase. size ( ), 1 )
[4]: org. junit. assert. assertequals ( testcase. getvalue ( ), testcases. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "name" , proposal . tostring ( ) )
[0]: org. junit. assert. assertequals ( testcase. getvalue ( ), objectfilter. getmessage ( ) )
[1]: org. junit. assert. assertequals ( testcase. getvalue ( ), objectfilter. next ( ) )
[2]: org. junit. assert. assertnotnull ( nestedproperty )
[3]: org. junit. assert. assertequals ( bean, nestedproperty )
[4]: org. junit. assert. assertsame ( bean, nestedproperty )

************

************
tgt: org . junit . assert . assertequals ( 0 , code )
[0]: org. junit. assert. assertequals ( p, nestedproperty )
[1]: )
[2]: org. junit. assert. assertequals ( nsme, counter. getcause ( ) )
[3]: org. junit. assert. assertequals ( 0, counter. getcause ( ) )
[4]: org. junit. assert. assertequals ( 1, counter. getcause ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , multideleterequest . getobjects ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( nsme. getclass ( ), counter. getcause ( ) )
[1]: org. junit. assert. assertequals ( nsme. tostring ( ), counter. getcause ( ) )
[2]: org. junit. assert. assertequals ( trigger, group )
[3]: org. junit. assert. assertequals ( triggers, group )
[4]: org. junit. assert. assertnotnull ( group )

************

************
tgt: org . junit . assert . assertfalse ( software . amazon . awssdk . core . retry . conditions . andretrycondition . create ( conditionone ) . shouldretry ( retrypolicycontexts . empty ) )
[0]: org. junit. assert. assertequals ( schedule, group )
[1]: org. junit. assert. assertequals ( trigger, grou )
[2]: org. junit. assert. assertequals ( barcodedatamatrix. dm_ setheight, result )
[3]: org. junit. assert. assertequals ( barcodedatamatrix. dm_error, result )
[4]: org. junit. assert. assertequals ( barcodedatamatrix. dm_no, result )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( barcodedatamatrix, result )
[1]: , result )
[2]: org. junit. assert. assertthat ( values, org. hamcrest. matchers. equalto ( stringvalue ) )
[3]: org. junit. assert. assertthat ( values. getweblogicoperatorimagepullpolicy ( ), org. hamcrest. matchers. empty ( ) )
[4]: org. junit. assert. assertthat ( values, org. getweblogicoperatorimagepullpolicy ( ) )

************

************
tgt: org . junit . assert . assertequals ( concreteflyaction , newaction )
[0]: org. junit. assert. assertthat ( values. getweblogicoperatorimagepullpolicy ( ), org. hamcrest )
[1]: ) )
[2]: org. junit. assert. assertequals ( landcode, resultland )
[3]: org. junit. assert. assertnull ( resultland )
[4]: org. junit. assert. assertequals ( landconfig, resultland )

************

************
tgt: org . junit . assert . assertarrayequals ( times , marshalunmarshal ( times ) )
[0]: org. junit. assert. assertequals ( land code, resultland )
[1]: org. junit. assert. assertnotnull ( resultland )
[2]: org. junit. assert. assertequals ( com. vaadin. flow. component. componenttest. testcomponent. class, instance. getcontent ( ) )
[3]: org. junit. assert. assertnotnull ( instance. getcontent ( ) )
[4]: org. junit. assert. assertequals ( com. vaadin. flow. component. componenttest. testcomponents. class, instance. getcontent ( ) )

************

************
tgt: org . junit . assert . assertthat ( messages . getlist ( ) , org . hamcrest . corematchers . is ( java . util . arrays . aslist ( msg1 , msg2 ) ) )
[0]: org. junit. assert. assertequals ( 1, instance. getcontent ( ). size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, result. size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( 3, result. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( expectedid, org. eclipse. winery. common. version. versionutils. getnewcomponentversionid ( servicetemplateid, id ) )
[1]: org. junit. assert. assertequals ( expectedid, org. eclipse. winery. common. version. versionutils. getnewcomponentversionid ( servicetemplateid, null ) )
[2]: org. junit. assert. assertequals ( expectedid, org. eclipse. winery. common. version. versionutils. getnewcomponentversionid ( servicetemplateid, s ) )
[3]: org. junit. assert. assertequals ( expectedid, em. getnewcomponentversionid ( servicetemplateid, appendix ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( prompt . get ( ) )
[0]: org. junit. assert. assertequals ( 0, entities. size ( ) )
[1]: org. junit. assert. assertequals ( 12, entities. size ( ) )
[2]: org. junit. assert. assertequals ( 7, entities. size ( ) )
[3]: org. junit. assert. assertequals ( 9, entities. size ( ) )
[4]: org. junit. assert. assertequals ( 100, entities. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "foo" , ping . ping ( "foo" ) )
[0]: org. junit. assert. assertarrayequals ( test, rendered )
[1]: org. junit. assert. assertequals ( result, rendered )
[2]: org. junit. assert. assertnotnull ( rendered )
[3]: , rendered )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( 8.0 , dr . gethigh ( ) , 0 )
[0]: org. junit. assert. assertequals ( zoneoperation, compute. attachdisk ( com. google. cloud. compute. deprecated. computeimpltest. instance_id, attacheddisk ) )
[1]: org. junit. assert. assertequals ( zoneoperation, compute. attachdisk ( com. google. cloud. compute. deprecated. computeimpltest. instance_id, attacheddisk, attacheddisk ) )
[2]: org. junit. assert. assertequals ( zoneoperation, compute. attachdisk ( com. google. cloud. compute. deprecated. computeimpltest. instance_id, attacheddisk. data ) )
[3]: org. junit. assert. assertequals ( zoneoperation, compute. attachdisk ( de, attacheddisk ) )
[4]: org. junit. assert. assertequals ( zoneoperation, compute )

************

************
tgt: org . junit . assert . assertequals ( status , store . get ( org . apache . kafka . connect . storage . kafkastatusbackingstoretest . connector ) )
[0]: org. junit. assert. assertnotnull ( list )
[1]: org. junit. assert. assertequals ( t, list )
[2]: org. junit. assert. assertarrayequals ( t. data, list )
[3]: org. junit. assert. assertnull ( list )
[4]: org. junit. assert. assertnotnull ( t )

************

************
tgt: org . junit . assert . assertequals ( 1 , lastbuildid )
[0]: org. junit. assert. assertequals ( 256, rc. getcardinality ( ) )
[1]: org. junit. assert. assertequals ( 0, rc. getcardinality ( ) )
[2]: org. junit. assert. assertequals ( 1, rc. getcardinality ( ) )
[3]: org. junit. assert. assertequals ( 16, rc. getcardinality ( ) )
[4]: org. junit. assert. assertequals ( 256, ac. getcardinality ( ) )

************

************
tgt: org . junit . assert . assertthat ( isdisbursalprevented , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( org. wikidata. wdtk. datamodel. implementation. datatypeidimpl. getjsondatatypefromdatatypeiri ( datatypeidimpl. dt_item ), datatypeidimpl. json_dt_item )
[1]: org. junit. assert. assertequals ( org. wikidata. wdtk. datamodel. implementation. datatypeidimpl. getjsondatatypefromdatatypeiri ( datatypeidimpl. dt_string ), datatypeidimpl. json_dt_item )
[2]: org. junit. assert. assertequals ( org. wikidata. wdtk. datamodel. implementation. datatypeidimpl. getjsondatatypefromdatatypeiri ( datatypeidimpl. dt_item ), datatypeidimpl. json_dt_data )
[3]: org. junit. assert. assertequals ( org. wikidata. wdtk. datamodel. implementation. datatypeidimpl. getjsondatatypefromdatatypeiri ( datatypeidimpl. dt_item ), datatypeidimpl. json_dt_string )
[4]: org. junit. assert. assertequals ( org. wikidata. wdtk. datamodel. implementation. datatypeidimpl. getjsondatatypefromdatatypeiri ( datatypeidimpl. dt_string ), datatypeidimpl. json_dt_data )

************

************
tgt: org . junit . assert . assertfalse ( unexistingfile . exists ( ) )
[0]: org. junit. assert. assertequals ( 1, minpathsum ( grid ) )
[1]: org. junit. assert. assertequals ( 0, minpathsum ( grid ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( grid ), minpathsum ( grid ) )
[3]: org. junit. assert. assertthat ( minpathsum ( grid ), org. hamcrest. matchers. is ( 0 ) )
[4]: org. junit. assert. assertthat ( minpathsum ( grid ), org. hamcrest. matchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( first , firstresult )
[0]: org. junit. assert. assertequals ( constraint, state. constraintschangesforscount ( 1 ) )
[1]: org. junit. assert. assertnotnull ( state. constraintschangesforscount ( 1 ) )
[2]: org. junit. assert. assertequals ( constraint, state. constraintschangesforobjobj ( 1 ) )
[3]: org. junit. assert. assertnotnull ( state. constraintschangesforobjobj ( 1 ) )
[4]: org. junit. assert. assertequals ( constraint, state. constraintschangesforforscount ( 1 ) )

************

************
tgt: org . junit . assert . assertthat ( getoutfile ( bundle ) , org . hamcrest . matchers . equalto ( bundlename ) )
[0]: org. junit. assert. assertequals ( obj, list )
[1]: org. junit. assert. assertequals ( 1, list. size ( ) )
[2]: org. junit. assert. assertequals ( obj. getvalue ( ), list )
[3]: org. junit. assert. assertequals ( obj. err, list )
[4]: org. junit. assert. assertnotnull ( list )

************

************
tgt: org . junit . assert . assertthat ( meldingen . size ( ) , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert. assertnotnull ( root )
[1]: org. junit. assert. assertnull ( root )
[2]: org. junit. assert. assertequals ( root, root )
[3]: org. junit. assert. assertequals ( null, root )
[4]: org. junit. assert. assertnotnull ( root )

************

************
tgt: org . junit . assert . assertsame ( content . getcontentinputstream ( ) , attachment . getcontentinputstream ( this . oldcore . getxwikicontext ( ) ) )
[0]: org. junit. assert. asserttrue ( bean0. delete ( ) )
[1]: org. junit. assert. assertnotnull ( bean0. delete ( ) )
[2]: org. junit. assert. assertequals ( 2, refs. size ( ) )
[3]: org. junit. assert. assertequals ( 0, refs. size ( ) )
[4]: org. junit. assert. assertequals ( 4, refs. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( nl . bzk . migratiebrp . test . common . vergelijk . sorteerxml . sorteer ( xml1 ) , nl . bzk . migratiebrp . test . common . vergelijk . sorteerxml . sorteer ( xml2 ) )
[0]: org. junit. assert. assertequals ( 1, refs. size ( ) )
[1]: org. junit. assert. assertequals ( 2, references. size ( ) )
[2]: org. junit. assert. assertequals ( erroreval. value_invalid, org. apache. poi. ss. formula. eval. erroreval. evaluate ( null, null ) )
[3]: org. junit. assert. assertequals ( org. apache. poi. ss. formula. eval. erroreval. value_invalid, org. apache. poi. ss. formula. eval. operandresolver. evaluate ( null, null ) )
[4]: org. junit. assert. assertequals ( erroreval. value_invalid, org. apache. poi. ss. formula. eval. operandresolver. evaluate ( null, null ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , controller . getpriority ( ) )
[0]: org. junit. assert. assertequals ( erroreval. value_invalid, org. apache. poi. ss. formula. eval. erroreval. evaluate ( null, context ) )
[1]: org. junit. assert. assertequals ( org. apache. poi. ss. formula. eval. erroreval. value_invalid, org. apache. poi. ss. formula. eval. operandresolver. evaluate ( null, context ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( expected, actual )
[4]: org. junit. assert. assertequals ( actual, expected )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( result, actual )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[3]: org. junit. assert. assertequals ( expected, java. lang. string. valueof ( rs. tostringunsorted ( rs ) ) )
[4]: org. junit. assert. assertequals ( expected, java. util. arrays. tostringunsorted ( rs ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( expected, java. lang. string. tostringunsorted ( rs ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( expectedstatuses, node. getclustercoordinator ( ) )
[3]: org. junit. assert. assertequals ( expectedstatuses, node )
[4]: org. junit. assert. assertequals ( expectedstatuses, node. getclustercoordinator ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , gcoperations . length )
[0]: org. junit. assert. assertequals ( expectedstatuses, node. getclustercoordinator ( ). tostring ( ) )
[1]: org. junit. assert. assertequals ( expectedstatuses, nodes. getclustercoordinator ( ) )
[2]: org. junit. assert. assertequals ( method, temp2. getid ( ) )
[3]: org. junit. assert. assertnotnull ( temp2. getid ( ) )
[4]: org. junit. assert. assertnull ( temp2. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actualquery )
[0]: org. junit. assert. assertequals ( 0, temp2. getid ( ) )
[1]: org. junit. assert. assertequals ( null, temp2. getid ( ) )
[2]: org. junit. assert. assertequals ( 1, actual )
[3]: org. junit. assert. assertequals ( 0, actual )
[4]: org. junit. assert. assertequals ( 4, actual )

************

************
tgt: org . junit . assert . asserttrue ( matcher . matchessafely ( item ) )
[0]: org. junit. assert. assertequals ( 5, actual )
[1]: org. junit. assert. asserttrue ( discoveruiresources. isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, actual. size ( ) )
[3]: org. junit. assert. assertequals ( 1, actual. size ( ) )
[4]: org. junit. assert. assertequals ( 3, actual. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( entityidpredicate . test ( entityidregisterorsubscribe ) )
[0]: org. junit. assert. assertequals ( """", 1, actual. size ( )
[1]: org. junit. assert. assertequals ( ""test"", 1, actual )
[2]: org. junit. assert. assertequals ( eventcount, event. gettouchcount ( ) )
[3]: org. junit. assert. assertequals ( eventcount, events. gettouchcount ( ) )
[4]: org. junit. assert. assertequals ( eventscount, event. gettouchcount ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , app . executeapplication ( args ) )
[0]: org. junit. assert. assertequals ( events, event. gettouchcount ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( selected )
[3]: null, selected )
[4]: null ) )

************

************
tgt: org . junit . assert . assertthat ( database . getversion ( ) , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( 0 ) ) )
[0]: ) )
[1]: null )
[2]: org. junit. assert. assertnotnull ( org. apache. hadoop. hbase. procedure2. testprocedurebypass. procexecutor. bypassprocedure ( id, 1000, true, false ) )
[3]: org. junit. assert. assertnotnull ( org. apache. hadoop. hbase. procedure2. testprocedurebypass. procexecutor. bypassprocedure ( id, 1000, true, true ) )
[4]: org. junit. assert. assertnotnull ( performquery ( query ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result , 0.0 )
[0]: org. junit. assert. assertequals ( 1, performquery ( query ) )
[1]: org. junit. assert. assertequals ( 1, performsquery ( query ) )
[2]: org. junit. assert. asserttrue ( performquery ( query ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, berichtentiteits. get ( 0 ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, berichtentiteits. get ( 0 ). getid ( ) )
[1]: org. junit. assert. assertnotnull ( berichtentiteits. get ( 0 ) )
[2]: org. junit. assert. assertnull ( berichtentiteits. get ( 0 ) )
[3]: org. junit. assert. assertequals ( 1, berichtentiteits. get ( 0 ). length )
[4]: org. junit. assert. assertnotnull ( cl )

************

************
tgt: org . junit . assert . assertequals ( 1 , issues . size ( ) )
[0]: org. junit. assert. assertnull ( cl )
[1]: org. junit. assert. asserttrue ( ( cl == null ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( globaloperation, compute. getoperation ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertnotnull ( document )
[0]: org. junit. assert. assertequals ( globaloperation, compute. getoperation ( java. lang. object. class ) )
[1]: org. junit. assert. assertequals ( globaloperation, compute. getoperation ( null ) )
[2]: org. junit. assert. assertequals ( globaloperation, compute. getoperation ( options ) )
[3]: org. junit. assert. assertequals ( globaloperation, compute )
[4]: org. junit. assert. asserttrue ( result )

************

************
tgt: org . junit . assert . assertequals ( confstagedir . tostring ( ) , expecteddir )
[0]: org. junit. assert. assertequals ( 42, json. getnonnull ( key, key ) )
[1]: org. junit. assert. assertnull ( json. getnonnull ( key, 42 ) )
[2]: org. junit. assert. assertnotnull ( json. getnonnull ( key, 42 ) )
[3]: org. junit. assert. assertequals ( 42, json. getnonnull ( key, null ) )
[4]: org. junit. assert. assertnotnull ( json. getnonnull ( key, key ) )

************

************
tgt: org . junit . assert . assertequals ( org . spout . vanilla . protocol . vanillabytebufutilstest . test_params , org . spout . vanilla . protocol . vanillabytebufutils . readparameters ( buf ) )
[0]: org. junit. assert. assertnotnull ( classwithstaticconstructorpojo )
[1]: org. junit. assert. assertequals ( classwithstaticconstructorpojo, classwithstaticconstructorpojo )
[2]: org. junit. assert. assertnotnull ( classwithstaticconstructorpojo. getmostcompleteinstance ( new com. openpojo. reflection. construct. class ) )
[3]: org. junit. assert. assertequals ( classwithstaticconstructorpojo, classwithstaticconstructorpojo. getmostcompleteinstance ( classwithstaticconstructorpojo ) )
[4]: org. junit. assert. assertnotnull ( classwithstaticconstructorpojo. getmostcompleteinstance ( classwithstaticconstructorpojo ) )

************

************
tgt: org . junit . assert . assertequals ( image . get ( x , y ) , result . get ( x , y ) )
[0]: org. junit. assert. assertequals ( 1, t. foo ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, t. foo ( ). get ( ) )
[2]: org. junit. assert. assertequals ( s, s )
[3]: org. junit. assert. assertnotnull ( s )
[4]: org. junit. assert. assertequals ( s, n )

************

************
tgt: org . junit . assert . assertthat ( option . isnull ( ) , is ( true ) )
[0]: org. junit. assert. assertequals ( s, string )
[1]: ) )
[2]: org. junit. assert. assertsame ( reporter, jiraruntimeoptions )
[3]: org. junit. assert. assertequals ( reporter, jiraruntimeoptions )
[4]: org. junit. assert. assertnotnull ( jiraruntimeoptions )

************

************
tgt: org . junit . assert . assertnotnull ( ti )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnotnull ( unita. getimports ( ) )
[3]: org. junit. assert. assertequals ( null, unita. getimports ( ) )
[4]: org. junit. assert. assertnotnull ( unita )

************

************
tgt: org . junit . assert . assertnotnull ( vout )
[0]: org. junit. assert. assertequals ( 0, unita. getimports ( ). length )
[1]: org. junit. assert. assertequals ( 1, unita. getimports ( ). length )
[2]: org. junit. assert. assertequals ( org. apache. accumulo. server. fs. pertablevolumechoosertest. mockchooser1. class, delegate )
[3]: org. junit. assert. assertequals ( org. apache. accumulo. server. fs. pertablevolumechoosertest. mockchooser1. class, delegate. getclass )
[4]: org. junit. assert. assertequals ( org. apache. accumulo. server. fs. pertablevolumechoosertest. mockchooser1 ( ), delegate )

************

************
tgt: org . junit . assert . assertnull ( p )
[0]: org. junit. assert. assertnotnull ( delegate )
[1]: org. junit. assert. assertnull ( delegate )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertfalse ( error . ispresent ( ) )
[0]: org. junit. assert. assertequals ( value, result )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( form )
[3]: org. junit. assert. assertnotnull ( param )
[4]: org. junit. assert. assertequals ( form, param )

************

************
tgt: org . junit . assert . asserttrue ( registry . getselectedtoken ( properties ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, param. length )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, result. stream ( ). count ( ) )
[3]: org. junit. assert. assertequals ( 0, result. stream ( ). count ( ) )
[4]: org. junit. assert. assertequals ( 0, result. stream ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( 1, result. stream ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, result. stream ( ). length )
[2]: org. junit. assert. assertnotnull ( mp )
[3]: org. junit. assert. assertequals ( 1, maps. size ( ) )
[4]: org. junit. assert. assertequals ( 0, maps. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 1, map. size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( maps. size ( ) ) == 1 ) )
[2]: org. junit. assert. asserttrue ( ( ( maps. size ( ) ) == 0 ) )
[3]: org. junit. assert. assertequals ( tokensigned, newtoken )
[4]: org. junit. assert. assertnotnull ( tokensigned )

************

************
tgt: org . junit . assert . assertequals ( "name" , propertypaths . get ( 0 ) )
[0]: org. junit. assert. assertequals ( tokensigned, newtoken, config )
[1]: org. junit. assert. assertequals ( tokensigned, newtoken, actual )
[2]: org. junit. assert. assertequals ( tokensigned )
[3]: org. junit. assert. assertequals ( 1, countmarkers ( file ) )
[4]: org. junit. assert. assertequals ( 0, groups. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . tostring ( expected ) , java . util . arrays . tostring ( results ) )
[0]: org. junit. assert. assertequals ( 0, group. size ( ) )
[1]: org. junit. assert. assertequals ( 0l, groups. size ( ) )
[2]: org. junit. assert. assertequals ( 1, groups. size ( ) )
[3]: org. junit. assert. assertequals ( zero, groups. size ( ) )
[4]: org. junit. assert. assertequals ( expectedoutput, stripnewlines ( actualoutput ) )

************

************
tgt: org . junit . assert . assertequals ( expected_menu_labels . get ( i ) , menulabels . get ( i ) )
[0]: org. junit. assert. assertequals ( expoutput, stripnewlines ( actualoutput ) )
[1]: org. junit. assert. assertequals ( incorrectoutput, stripnewlines ( actualoutput ) )
[2]: org. junit. assert. assertequals ( stripnewlines ( expectedoutput ), stripnewlines )
[3]: org. junit. assert. assertequals ( expectedoutput, stripnewlines ( actualoutput ) ) to
[4]: org. junit. assert. assertequals ( count, actualinvocations )

************

************
tgt: org . junit . assert . assertequals ( localdate . tostring ( org . pm4j . core . pm . joda . impl . localdateconvertertest . ddmmmyyyy , locale . english ) , "25-oct-2013" )
[0]: org. junit. assert. assertequals ( ( count * 2 ), actualinvocations )
[1]: org. junit. assert. assertequals ( ( count * 5 ), actualinvocations )
[2]: org. junit. assert. assertequals ( ( period * 5 ), actualinvocations )
[3]: org. junit. assert. assertequals ( period, actualinvocations )
[4]: org. junit. assert. assertequals ( 1, o. getlogicalaxiomcount ( ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( r . getbody ( ) , testdatabody ) )
[0]: org. junit. assert. assertfalse ( obj. equals ( obj ) )
[1]: org. junit. assert. assertfalse ( obj. equals ( null ) )
[2]: org. junit. assert. assertfalse ( obj. equals ( new java. lang. object ( ) ) )
[3]: org. junit. assert. assertfalse ( obj. equals ( new java. util. arraylist ( ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( expected . equals ( m ) )
[0]: org. junit. assert. assertequals ( expected, result )
[1]: org. junit. assert. assertequals ( result, expected )
[2]: org. junit. assert. assertequals ( exp, result )
[3]: org. junit. assert. assertequals ( actual, result )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( violationmessages . size ( ) , org . hamcrest . corematchers . equalto ( 2 ) )
[0]: org. junit. assert. assertnotnull ( errors. tostring ( ) )
[1]: org. junit. assert. assertnotnull ( errors. tostring ( ), errors )
[2]: org. junit. assert. assertequals ( errors. tostring ( ), 0, errors. length )
[3]: . tostring ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( newstate )
[0]: org. junit. assert. assertequals ( 1, meldingen. size ( ) )
[1]: org. junit. assert. assertnotnull ( re )
[2]: org. junit. assert. assertnotnull ( getrevision ( com. b2international. index. revision. main, com. b2international. index. revision. revisionfixtures. revisiondata. class, com. b2international. index. revision. storage_key1 ) )
[3]: org. junit. assert. assertnotnull ( getrevision ( com. b2international. index. revision. main, com. b2international. index. revision. revisionfixtures. revisiondata. class, com. b2international. index. revision. storage_key1. class ) )
[4]: org. junit. assert. assertnotnull ( getrevision ( com. b2international. index. revision. main, com. b2international. index. revision. revisionfixtures. revisiondata. class, com. b2international. index. revision. storage_key1 ). tojson ( ) )

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertnotnull ( getrevision ( com. b2international. index. revision. main, com. b2international. index. revision. revisionfixtures. revisiondata. class, com. b2international. index. revision ) )
[1]: org. junit. assert. assertnotnull ( getrevision ( com. b2international. index. revision. main, com. b2international. index. revision. revisionfixtures. revisiondata. class, com. b2international. index. revision. storage_key1 ). get ( ) )
[2]: org. junit. assert. assertnotnull ( sw. tostring ( ) )
[3]: org. junit. assert. assertequals ( 0, sw. tostring ( ). length ( ) )
[4]: org. junit. assert. assertequals ( null, sw. tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( nodecollection , returnssameitems ( expectednodes ) )
[0]: org. junit. assert. assertequals ( 0, sw. tostring ( ). length )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, m. eliminate ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( m. eliminate ( ) )
[4]: org. junit. assert. assertequals ( 3, m. eliminate ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( datum , datumtijdelement . getwaarde ( ) )
[0]: org. junit. assert. assertequals ( 9, m. eliminate ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, m. eliminate ( ) )
[2]: org. junit. assert. assertequals ( items, result )
[3]: org. junit. assert. assertequals ( items, list )
[4]: org. junit. assert. assertequals ( items, actual )

************

************
tgt: org . junit . assert . assertequals ( vertices . size ( ) , i )
[0]: org. junit. assert. assertequals ( items, node )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, result )
[3]: org. junit. assert. assertequals ( 0, result )
[4]: org. junit. assert. assertthat ( result, is ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertthat ( result, is ( 0 ) )
[1]: org. junit. assert. assertthat ( result, is ( 42 ) )
[2]: org. junit. assert. asserttrue ( result. haserrors ( ) )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertnull ( result. getstatuscode ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( extender . getzoomlevel ( ) ) == zoomlevel ) )
[0]: org. junit. assert. assertequals ( httpstatus. bad_request, result )
[1]: org. junit. assert. assertequals ( httpstatus. bad, result. getstatuscode ( ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. asserttrue ( instances. isempty ( ) )
[4]: org. junit. assert. asserttrue ( instance. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( completeversion . contains ( currentversion ) )
[0]: org. junit. assert. asserttrue ( objects. isempty ( ) )
[1]: . isempty ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( org. jboss. msc. value. short. class, value. getvalue ( ) )
[4]: org. junit. assert. assertequals ( org. jboss. msc. value. long. class, value. getvalue ( ) )

************

************
tgt: org . junit . assert . asserttrue ( com . sun . mail . util . proputil . getbooleanproperty ( props , "test" , true ) )
[0]: org. junit. assert. assertequals ( org. jboss. msc. value. integer. class, value. getvalue ( ) )
[1]: org. junit. assert. assertequals ( java. lang. short. class, value. getvalue ( ) )
[2]: org. junit. assert. assertnotnull ( value. getvalue ( ) )
[3]: org. junit. assert. assertfalse ( socialsecurityconstraintsmanager. isallowed ( null ) )
[4]: org. junit. assert. assertfalse ( socialsecurityconstraintsmanager. isallowed ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , plots . size ( ) )
[0]: org. junit. assert. assertfalse ( socialsecurityconstraintsmanager. isallowed ( new java. lang. object ( ) ) )
[1]: org. junit. assert. assertfalse ( socialsecurityconstraintsmanager. isallowed ( new java. lang. string ( ) ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( expectedrootname, factorial )
[4]: org. junit. assert. assertnotnull ( expectedrootname )

************

************
tgt: org . junit . assert . asserttrue ( ( ( e . getcause ( ) ) instanceof java . lang . illegalstateexception ) )
[0]: org. junit. assert. assertequals ( expectedrootname, scaleial )
[1]: org. junit. assert. assertequals ( expectedrootname, fooial )
[2]: org. junit. assert. assertnotnull ( factorial )
[3]: org. junit. assert. assertnotnull ( obs. getvalue ( drug ) )
[4]: org. junit. assert. assertequals ( drug. getvalue ( ), obs. getid ( ) )

************

************
tgt: org . junit . assert . asserttrue ( valid . isvalid ( ) )
[0]: org. junit. assert. assertequals ( drug. getvalue ( ), observation. getvalue ( ) )
[1]: org. junit. assert. assertequals ( drug. getvalue ( ), observation. getid ( ) )
[2]: org. junit. assert. assertnotnull ( obs. getvalue ( observation ) )
[3]: org. junit. assert. assertequals ( treegrammar, found )
[4]: org. junit. assert. assertnotnull ( found )

************

************
tgt: org . junit . assert . assertequals ( "test1" , unsyncchararraywriter . tostring ( ) )
[0]: org. junit. assert. assertequals ( tree grammar, found )
[1]: org. junit. assert. assertequals ( null, found )
[2]: , found )
[3]: org. junit. assert. assertnotnull ( opts. gethadoopmapredhome ( ) )
[4]: org. junit. assert. assertequals ( 1, opts. gethadoopmapredhome ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , nodelist . getlength ( ) )
[0]: org. junit. assert. assertequals ( null, opts. gethadoopmapredhome ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( keys, systemsettingmanager. getsystemsettings ( keys ) )
[4]: org. junit. assert. assertnotnull ( systemsettingmanager. getsystemsettings ( keys ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . integer . valueof ( i ) , t [ i ] )
[0]: org. junit. assert. assertequals ( keys, runtimesettingmanager. getsystemsettings ( keys ) )
[1]: org. junit. assert. assertequals ( keys, manager. getsystemsettings ( keys ) )
[2]: org. junit. assert. assertequals ( keys, systemsettings ( keys ) )
[3]: org. junit. assert. assertnotnull ( found )
[4]: org. junit. assert. assertequals ( null, found )

************

************
tgt: org . junit . assert . assertequals ( result , "1" )
[0]: org. junit. assert. assertequals ( root, found )
[1]: , found )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( notflirtyqueen. ishappy ( ) )
[4]: org. junit. assert. assertequals ( null, notflirtyqueen. ishappy ( ) )

************

************
tgt: org . junit . assert . assertequals ( "a" 5 , found )
[0]: org. junit. assert. assertnull ( drunkunhappyking. ishappy ( ) )
[1]: org. junit. assert. assertnull ( notflirtyqueen. ishappy ( ) )
[2]: org. junit. assert. assertequals ( notflirtyqueen, notflirtyqueen )
[3]: org. junit. assert. assertequals ( 1, countlcs )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertequals ( 0 , num )
[0]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( sourceimage, e )
[2]: org. junit. assert. assertequals ( null, e )
[3]: ) )
[4]: org. junit. assert. assertequals ( null, vp. instance ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , content )
[0]: org. junit. assert. assertequals ( 0, vp. instance ( ) )
[1]: org. junit. assert. assertnull ( vp. instance ( ) )
[2]: org. junit. assert. assertnotnull ( vp. instance ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, seta. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( this . uipageddata . getvar ( ) , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( "myvar" ) ) )
[0]: org. junit. assert. asserttrue ( oracle. kubernetes. operator. helpers. kubernetesutils. isfirstnewer ( domainmeta, domain2meta ) )
[1]: org. junit. assert. assertequals ( true, oracle. kubernetes. operator. helpers. kubernetesutils. isfirstnewer ( domainmeta, domain2meta ) )
[2]: org. junit. assert. assertequals ( false, version. isreleased ( ) )
[3]: org. junit. assert. assertarrayequals ( rcs. getbody ( ), event. getbody ( ) )
[4]: org. junit. assert. assertarrayequals ( java. lang. string. valueof ( i ). getbytes ( ), event. getbody ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( created )
[0]: org. junit. assert. assertarrayequals ( new byte [ ] { i }, event. getbody ( ) )
[1]: org. junit. assert. assertarrayequals ( java. lang. string. valueof ( i ), event. getbody ( ) )
[2]: org. junit. assert. assertarrayequals ( java. lang. string. valueof ( i ). getbytes ( ), events. getbody ( ) )
[3]: org. junit. assert. assertequals ( 1, bestaandepersoon. getrechil. size ( ) )
[4]: org. junit. assert. assertequals ( 1, bestaandepersoon. getrechil. getexitenrelaties ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( e instanceof java . lang . illegalargumentexception ) )
[0]: org. junit. assert. assertequals ( 1, bestaandepersoon. getrechil. getexitenrelatie ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, bestaandepersoon. getrechil. get ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, bestaandepersoon. getrechil. size ( ) )
[3]: org. junit. assert. asserttrue ( ex. getmessage ( ). isempty ( ) )
[4]: org. junit. assert. assertnotnull ( messagelatch )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . core . is . is ( return_value ) )
[0]: org. junit. assert. assertnull ( messagelatch. getfile ( ) )
[1]: org. junit. assert. assertnull ( messagelatch. getthrowable ( ) )
[2]: org. junit. assert. assertnull ( messagelatch )
[3]: org. junit. assert. assertnull ( messagelatch. s )
[4]: org. junit. assert. assertnotnull ( simple )

************

************
tgt: org . junit . assert . assertnull ( persoonslijst . bepaaltijdstiplaatstewijziginggbasystematiek ( ) )
[0]: org. junit. assert. assertequals ( 1, mapping. gettuplefamilies ( ) )
[1]: org. junit. assert. assertequals ( 0, mapping. gettuplefamilies ( ) )
[2]: org. junit. assert. assertnotnull ( mapping. gettuplefamilies ( ) )
[3]: org. junit. assert. assertequals ( 1, mapping. gettuplefamilies ( ). length )
[4]: org. junit. assert. assertequals ( 0, mapping. gettuplefamilies ( ). length )

************

************
tgt: org . junit . assert . assertnull ( preparedstatement )
[0]: org. junit. assert. asserttrue ( es. isnonsingular ( ) )
[1]: org. junit. assert. assertnotnull ( ex )
[2]: org. junit. assert. assertnotnull ( response )
[3]: org. junit. assert. assertnotnull ( request )
[4]: org. junit. assert. assertnotnull ( client )

************

************
tgt: org . junit . assert . assertthat ( finder . findparameterat ( 0 ) , org . hamcrest . core . is . is ( "name" ) )
[0]: org. junit. assert. assertnotnull ( res )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( issues . isempty ( ) )
[0]: org. junit. assert. assertequals ( string, result )
[1]: ) )
[2]: org. junit. assert. assertequals ( one, two )
[3]: org. junit. assert. assertequals ( 1, one )
[4]: org. junit. assert. assertequals ( first, two )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , rpcexception . getreturnvalue ( ) )
[0]: org. junit. assert. assertequals ( two, one )
[1]: org. junit. assert. assertequals ( 1, two )
[2]: org. junit. assert. assertnull ( map )
[3]: org. junit. assert. assertnotnull ( map )
[4]: org. junit. assert. assertnull ( maps )

************

************
tgt: org . junit . assert . assertnotnull ( em )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( method, undertest. getmethod ( ) )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( 1, result. getundefined ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( abspath . contains ( "license-junit.txt" ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), result )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( null ), result )
[3]: org. junit. assert. assertequals ( expectedbuildperson ( ), result )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. is ( expectedbuildperson ( ) ) )

************

************
tgt: org . junit . assert . assertnotnull ( mem )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. equalto ( expectedbuildperson ( ) ) )
[1]: org. junit. assert. assertequals ( expectedbuildperson, result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( 0, newcloudsdkupdatejob ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, newcloudsdkupdatejob ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , patientidentifiers . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. concurrent. locks. newcloudsdkupdatejob ( ), null )
[1]: org. junit. assert. assertequals ( newcloudsdkupdatejob ( ), newcloudsdkupdatejob ( ) )
[2]: org. junit. assert. assertequals ( null, newcloudsdkupdatejob ( ). get ( ) )
[3]: org. junit. assert. asserttrue ( ln. getsuffix ( 1 ). isempty ( ) )
[4]: org. junit. assert. assertequals ( true, ln. getsuffix ( 1 ). isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , result )
[0]: org. junit. assert. assertfalse ( ln. getsuffix ( 1 ). isempty ( ) )
[1]: org. junit. assert. assertequals ( false, ln. getsuffix ( 1 ). isempty ( ) )
[2]: org. junit. assert. assertnotnull ( ln. getsuffix ( 1 ) )
[3]: org. junit. assert. assertnotnull ( sensor )
[4]: org. junit. assert. assertequals ( value, 1 )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( uuid , header . getclientid ( ) . tobytearray ( ) ) )
[0]: org. junit. assert. assertequals ( value, value )
[1]: org. junit. assert. assertequals ( value, 0 )
[2]: , value )
[3]: ) )
[4]: org. junit. assert. assertequals ( expectedlist, resultlist )

************

************
tgt: org . junit . assert . assertnotnull ( activitynodeid )
[0]: org. junit. assert. assertequals ( expectedlist. get ( iterator ). tostring ( ), resultlist. size ( ) )
[1]: org. junit. assert. assertequals ( expectedlist. get ( iterator ), resultlist. get ( iterator ). tostring ( ) )
[2]: org. junit. assert. assertequals ( expectedlist, resultlist. get ( iterator ). tostring ( ) )
[3]: org. junit. assert. assertequals ( expectedlist. size ( ), resultlist. size ( ) )
[4]: org. junit. assert. asserttrue ( ff4jconf. containskey ( null ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , list . size ( ) )
[0]: org. junit. assert. assertfalse ( ff4jconf. containskey ( null ) )
[1]: org. junit. assert. asserttrue ( ff4jconf. containskey ( java. lang. string. class ) )
[2]: org. junit. assert. asserttrue ( ff4jconf. containskey ( java. lang. integer. valueof ( 1 ) ) )
[3]: ) )
[4]: org. junit. assert. assertfalse ( accept )

************

************
tgt: org . junit . assert . asserttrue ( ( ( p . gettotalelements ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( false, accept )
[1]: org. junit. assert. assertequals ( true, accept )
[2]: org. junit. assert. assertequals ( 1, result. length ( ) )
[3]: org. junit. assert. assertequals ( 0, result. length ( ) )
[4]: org. junit. assert. assertequals ( result. length ( ), 1 )

************

************
tgt: org . junit . assert . assertsame ( mockhashstrategy , actual )
[0]: org. junit. assert. assertequals ( 3, result. length ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( interpreter )
[3]: org. junit. assert. assertnotnull ( interpreter. context )
[4]: org. junit. assert. assertnotnull ( interpreter. messages )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertnotnull ( interpreter. stream )
[1]: org. junit. assert. assertnotnull ( interpreter. error )
[2]: org. junit. assert. assertequals ( grammar, found )
[3]: org. junit. assert. assertnull ( found )
[4]: org. junit. assert. assertequals ( 1, found )

************

************
tgt: org . junit . assert . asserttrue ( ( expected == ( e . evaluate ( ) ) ) )
[0]: org. junit. assert. assertnotnull ( found )
[1]: org. junit. assert. assertequals ( null, found )
[2]: org. junit. assert. assertequals ( 3, result. size ( ) )
[3]: org. junit. assert. assertequals ( 3, my. size ( ) )
[4]: org. junit. assert. assertequals ( 3, service. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult . getclass ( ) , result . getclass ( ) )
[0]: org. junit. assert. assertequals ( 3, repository. size ( ) )
[1]: org. junit. assert. assertequals ( 3, files. size ( ) )
[2]: org. junit. assert. assertequals ( 1, result. length )
[3]: org. junit. assert. assertequals ( 0, result. length )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: , result )
[1]: )
[2]: org. junit. assert. assertnotnull ( properties. getproperty ( v ) )
[3]: org. junit. assert. assertequals ( v, properties. getproperty ( v. getid ( ) ) )
[4]: org. junit. assert. assertarrayequals ( v, properties. getproperty ( v. getid ( ) ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expecteds , actuals )
[0]: org. junit. assert. assertarrayequals ( v, properties. getproperty ( v. getname ( ) ) )
[1]: org. junit. assert. assertarrayequals ( v, properties. getproperty ( v ) )
[2]: org. junit. assert. assertthat ( graph, org. hamcrest. core. is. is ( old ) )
[3]: org. junit. assert. assertthat ( graph, org. hamcrest. core. is. is ( passed ) )
[4]: org. junit. assert. assertthat ( graph, org. hamcrest. core. is. is ( expected ) )

************

************
tgt: org . junit . assert . assertequals ( com . google . common . collect . sets . newhashset ( testworkflow1v1 , testworkflowphylogenomics ) , workflows )
[0]: org. junit. assert. assertthat ( graph, org. hamcrest. matchers. equalto ( old ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( undertest. getcurrentphase ( ) )
[3]: org. junit. assert. assertequals ( org. sonatype. nexus. extender. tasks, undertest. getcurrentphase ( ) )
[4]: org. junit. assert. assertthat ( undertest. getcurrentphase ( ). size ( ), org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( subresourcedefinitions . isempty ( ) )
[0]: org. junit. assert. assertnull ( undertest. getcurrentphase ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( cache. iscached ( rule ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( org. apache. directory. server. kerberos. shared. messages. value. kdcoptionstest. fprioptions ), options. getbytes ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( org. apache. directory. server. kerberos. shared. messages. value. kdcoptionstest. fprioptions ), options. getbytes ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , pools . size ( ) )
[0]: org. junit. assert. assertequals ( 1, options. getbytes ( ). length )
[1]: org. junit. assert. assertequals ( java. lang. string. class, options. getbytes ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class, options. getbytes ( ). getclass ( ) )
[3]: org. junit. assert. assertequals ( 1, bases )
[4]: org. junit. assert. assertequals ( 0, bases )

************

************
tgt: org . junit . assert . assertthat ( messages , contains ( msg1 ) )
[0]: org. junit. assert. assertequals ( s, bases )
[1]: org. junit. assert. assertequals ( 1l, bases )
[2]: org. junit. assert. assertequals ( sampleid, bases )
[3]: org. junit. assert. assertnotnull ( binaryoutput )
[4]: org. junit. assert. asserttrue ( iter. hasnext ( ) )

************

************
tgt: org . junit . assert . assertfalse ( selectie . isuitvoerbaar ( ) )
[0]: org. junit. assert. assertnotnull ( mockedsecurityprovider. getsecurityprovider ( ) )
[1]: org. junit. assert. assertnotnull ( mockedsecurityprovider )
[2]: org. junit. assert. assertnotnull ( testconfig. getsecurityprovider ( ) )
[3]: org. junit. assert. assertequals ( mockedsecurityprovider, mockedsecurityprovider )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( existingrecentlayoutbranch )
[0]: org. junit. assert. assertequals ( 2, result. size ( ) )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 2, results. size ( ) )
[3]: org. junit. assert. assertequals ( 0, result. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( stat , fromjson )
[0]: org. junit. assert. assertnotnull ( injectionpoint. getmember ( ) )
[1]: org. junit. assert. assertequals ( 1, injectionpoint. getmember ( ) )
[2]: org. junit. assert. assertequals ( null, injectionpoint. getmember ( ) )
[3]: org. junit. assert. assertnotnull ( injectionpoint )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( hasexc )
[0]: org. junit. assert. assertnotnull ( server )
[1]: org. junit. assert. assertnotnull ( server. getinstance ( ) )
[2]: org. junit. assert. assertnull ( server )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( "response<sp>users<sp>should<sp>be<sp>equal<sp>to<sp>the<sp>mocked<sp>users" , mockedusers , responseusers )
[0]: org. junit. assert. assertequals ( 1, vars. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), vars )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), vars )
[3]: org. junit. assert. assertequals ( new java. util. hashset ( java. util. arrays. aslist ( ) ), vars )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( actualproperty )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( expected ), actual )
[2]: org. junit. assert. assertequals ( result, actual )
[3]: org. junit. assert. assertequals ( actual, expected )
[4]: ) )

************

************
tgt: org . junit . assert . assertarrayequals ( roles . toarray ( ) , new java . lang . string [ ] { "admin" } )
[0]: org. junit. assert. assertnotnull ( ffilecontroller. getoutput ( ) )
[1]: org. junit. assert. assertequals ( 1, ffilecontroller. getoutput ( ). length )
[2]: org. junit. assert. assertequals ( from, transformation. reversefrom ( ) )
[3]: org. junit. assert. assertequals ( from, transform. reversefrom ( ) )
[4]: org. junit. assert. assertequals ( from, converter. reversefrom ( ) )

************

************
tgt: org . junit . assert . asserttrue ( workrequired )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnotnull ( request. getsearchquery ( ) )
[3]: org. junit. assert. assertnull ( request. getsearchquery ( ) )
[4]: org. junit. assert. assertequals ( null, request. getsearchquery ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , norm , 0 )
[0]: org. junit. assert. assertequals ( ""test"", request. getsearchquery ( ) )
[1]: ) )
[2]: org. junit. assert. assertnull ( org. apache. tiles. template. composestackutil. getcomposestack ( request ) )
[3]: org. junit. assert. assertequals ( null, org. apache. tiles. template. composestackutil. getcomposestack ( request ) )
[4]: org. junit. assert. assertequals ( org. apache. tiles. template. composestackutil. getcomposestack ( request ), null )

************

************
tgt: org . junit . assert . assertthat ( true , org . hamcrest . corematchers . equalto ( result ) )
[0]: org. junit. assert. assertnotnull ( org. apache. tiles. template. composestackutil. getcomposestack ( request ) )
[1]: org. junit. assert. assertnull ( org. apache. tiles. template. comstackutil. getcomposestack ( request ) )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertnull ( results )
[4]: org. junit. assert. assertnull ( resulting )

************

************
tgt: org . junit . assert . asserttrue ( flownodetransitionswrapper . issimplemerge ( ) )
[0]: org. junit. assert. assertnull ( ( result )
[1]: ) )
[2]: org. junit. assert. assertequals ( new java. lang. double ( 1 ), parameter. getvalue ( ) )
[3]: org. junit. assert. assertequals ( new java. lang. long ( 1 ), parameter. getvalue ( ) )
[4]: org. junit. assert. assertequals ( new java. lang. double ( 0 ), parameter. getvalue ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( keycodesset . size ( ) ) == ( keycodes . size ( ) ) ) )
[0]: org. junit. assert. assertequals ( new java. lang. long ( 0 ), parameter. getvalue ( ) )
[1]: org. junit. assert. assertequals ( new java. lang. double ( 5 ), parameter. getvalue ( ) )
[2]: org. junit. assert. assertequals ( packages, null )
[3]: org. junit. assert. assertequals ( packages, results )
[4]: org. junit. assert. assertequals ( packages, java. util. collections. emptylist ( ) )

************

************
tgt: org . junit . assert . assertequals ( test_string , pbaos . tostring ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), packages )
[1]: , packages )
[2]: org. junit. assert. assertfalse ( result )
[3]: org. junit. assert. assertequals ( false, result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( 1 , schemas . size ( ) )
[0]: org. junit. assert. asserttrue ( result )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( informeproveedor )
[3]: org. junit. assert. assertnotnull ( informeproveedor. s )
[4]: org. junit. assert. assertnotnull ( informeproveedor. count )

************

************
tgt: org . junit . assert . asserttrue ( users . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( informeproveedor. id )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( psa. getlegend ( ) )
[3]: org. junit. assert. assertequals ( pp. getlegend ( ), psa. getlegend ( ) )
[4]: org. junit. assert. assertequals ( 1, psa. getlegend ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( io . cdap . plugin . decompressortest . output , mockpipelineconfigurer . getoutputschema ( ) )
[0]: org. junit. assert. assertnotnull ( psa. getlegend ( ). tostring ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( element )
[3]: org. junit. assert. assertnull ( element )
[4]: org. junit. assert. assertnotnull ( element. name )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( element. event )
[1]: org. junit. assert. assertnotnull ( element. element )
[2]: org. junit. assert. assertequals ( false, projectselector. isprojectidavailable ( null ) )
[3]: org. junit. assert. assertequals ( parameterlistsecond, parameterlistsecond )
[4]: org. junit. assert. assertequals ( parameterlistsecond, indexerstrategy )

************

************
tgt: org . junit . assert . assertequals ( cana , notainfo . getcana ( ) )
[0]: org. junit. assert. assertequals ( parameterlistsecond, testcache )
[1]: org. junit. assert. assertequals ( parameterlistsecond, unfiltered )
[2]: ) )
[3]: org. junit. assert. assertthat ( hosts, org. hamcrest. corematchers. equalto ( 1 ) )
[4]: org. junit. assert. assertthat ( hosts, org. hamcrest. corematchers. equalto ( hosts ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( 1, hosts. size ( ) )
[1]: org. junit. assert. assertnotnull ( hosts )
[2]: org. junit. assert. assertequals ( 0, hosts. size ( ) )
[3]: org. junit. assert. assertnotnull ( collection )
[4]: org. junit. assert. assertnotnull ( bag )

************

************
tgt: org . junit . assert . assertequals ( org . nuxeo . ecm . core . io . registry . testwriterregistry . defaultnumberwriter . class , writer . getclass ( ) )
[0]: org. junit. assert. assertnotnull ( builder )
[1]: org. junit. assert. assertnotnull ( aggregate )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, hu. advancedweb. scott. runtime. track. stateregistry. getlocalvariablestates ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, hu. advancedweb. scott. runtime. track. stateregistry. getlocalvariablestates ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( hu. advancedweb. scott. runtime. track. stateregistry. getlocalvariablestates ( ) )
[1]: org. junit. assert. assertequals ( 1, hu. advancedweb. scott. runtime. track. stateregistry. getlocalvariablestates ( ). length )
[2]: org. junit. assert. assertequals ( 1, hu. advancedweb. scott. runtime. track. stateregistry. getlocalvariablestates ( ). size ( )
[3]: org. junit. assert. assertequals ( frame1, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( 0 , map . size ( ) )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( 1, result )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, view. getbundles ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, view. getbundles ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , berichtentiteiten . size ( ) )
[0]: org. junit. assert. assertequals ( this. bundles, view. getbundles ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), view )
[2]: ) )
[3]: org. junit. assert. assertthat ( java. util. arrays. tostring ( model. getvalue ( row, col ) ), org. hamcrest. matchers. is ( expected [ row ] [ col ] ) )
[4]: org. junit. assert. assertthat ( java. lang. string. valueof ( model. getvalue ( row, col ) ), org. hamcrest. matchers. is ( expected [ row ] [ col ] ) )

************

************
tgt: org . junit . assert . assertequals ( ( 1 + initialnbofdocument ) , numberofattachments )
[0]: org. junit. assert. assertthat ( java. util. arrays. aslist ( model. getvalue ( row, col ) ), org. hamcrest. matchers. is ( expected [ row ] [ col ] ) )
[1]: org. junit. assert. assertthat ( java. util. arrays. aslist ( model. getvalue ( row, col ) ), org. hamcrest. matchers. is ( expected [ row ] ) )
[2]: org. junit. assert. assertthat ( model. getvalue ( row, col ), org. hamcrest. matchers. is ( expected [ row ] [ col ] ) )
[3]: org. junit. assert. assertnotnull ( clocale )
[4]: org. junit. assert. assertequals ( clocale, request. getlocale ( clocale ) )

************

************
tgt: org . junit . assert . asserttrue ( rid . equals ( rid2 ) )
[0]: org. junit. assert. assertequals ( clocale, clocale )
[1]: org. junit. assert. assertequals ( clocale, request. getlocale ( null ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( newaction, id )
[4]: org. junit. assert. assertequals ( 5, newaction. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( converter . canconvert ( edu . zipcloud . cloudstreetmarket . core . converters . product . class ) )
[0]: org. junit. assert. assertequals ( 1, newaction. size ( ) )
[1]: org. junit. assert. assertequals ( 5, id. get ( ) )
[2]: org. junit. assert. assertequals ( 5, newaction. count ( ) )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( expected , field . getautocomplete ( ) )
[0]: org. junit. assert. assertequals ( java. util. optional. empty ( ), result )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. asserttrue ( v )
[4]: org. junit. assert. assertnotnull ( resultsq )

************

************
tgt: org . junit . assert . assertequals ( 0 , headers . size ( ) )
[0]: org. junit. assert. assertequals ( null, resultsq )
[1]: org. junit. assert. assertnull ( resultsq )
[2]: org. junit. assert. assertequals ( 1, resultsq )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( value )

************

************
tgt: org . junit . assert . asserttrue ( super . ds . create ( collection . journal , java . util . collections . singletonlist ( up ) ) )
[0]: org. junit. assert. assertequals ( p. messagecontext, value )
[1]: org. junit. assert. assertnull ( value )
[2]: org. junit. assert. assertequals ( null, value )
[3]: ) )
[4]: org. junit. assert. assertnull ( eetclient. getpkp ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , out )
[0]: org. junit. assert. assertnull ( e. getpkp ( ) )
[1]: org. junit. assert. assertnull ( request. getpkp ( ) )
[2]: org. junit. assert. assertequals ( 0, e. getpkp ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, count )

************

************
tgt: org . junit . assert . assertequals ( expectedmethod , m )
[0]: org. junit. assert. assertequals ( 1, count )
[1]: org. junit. assert. assertequals ( 10, count )
[2]: org. junit. assert. assertequals ( 1, read. length )
[3]: org. junit. assert. assertequals ( 0, read. length )
[4]: org. junit. assert. assertequals ( 4, read. length )

************

************
tgt: org . junit . assert . assertequals ( "bbb" , builder . tostring ( ) )
[0]: org. junit. assert. assertequals ( 2, read. length )
[1]: org. junit. assert. assertequals ( data, read )
[2]: org. junit. assert. assertequals ( 1, figures. size ( ) )
[3]: org. junit. assert. assertequals ( 0, figures. size ( ) )
[4]: org. junit. assert. assertequals ( 3, figures. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( gauge )
[0]: org. junit. assert. assertequals ( 2, figures. size ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( helper. hasassets ( pkg ) )
[3]: org. junit. assert. assertnotnull ( loadedcontributor. getname ( ) )
[4]: org. junit. assert. assertnull ( loadedcontributor. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( "hdfs://localhost:8020/" , mrlocalcluster . gethdfsdefaultfs ( ) )
[0]: org. junit. assert. assertequals ( kim, loadedcontributor. getname ( ) )
[1]: org. junit. assert. assertequals ( kim. getname ( ), loadedcontributor )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, expressiestrings. size ( ) )
[4]: org. junit. assert. assertequals ( 0, expressiestrings. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( connection )
[0]: org. junit. assert. assertequals ( org. springframework. data. redis. core. defaultgeooperationstests. point_palermo, remove ( key, key ) )
[1]: org. junit. assert. assertequals ( org. springframework. data. redis. core. defaultgeooperationstests. point_palermo, removes ( key, key ) )
[2]: org. junit. assert. assertequals ( org. springframework. data. redis. core. defaultgeooperationstests. point_palermo, remove ( key, null ) )
[3]: org. junit. assert. assertnotnull ( geooperations. remove ( key, null ) )
[4]: org. junit. assert. assertequals ( 1, geooperations. remove ( key, null ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , res . getsize ( ) )
[0]: org. junit. assert. assertnotnull ( hellomsg )
[1]: org. junit. assert. assertnull ( hellomsg )
[2]: org. junit. assert. assertequals ( hellomsg, hellomsg )
[3]: org. junit. assert. asserttrue ( hellomsg. isempty ( ) )
[4]: org. junit. assert. assertequals ( null, hellomsg )

************

************
tgt: org . junit . assert . assertsame ( operation , instance . settags ( tags ) )
[0]: org. junit. assert. assertequals ( true, dependency. isdependencyenabled ( ) )
[1]: org. junit. assert. assertequals ( true, dependencies. isdependencyenabled ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), true )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), true )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), true )

************

************
tgt: org . junit . assert . asserttrue ( result . passedvalidation ( ) )
[0]: org. junit. assert. assertequals ( 0, true )
[1]: org. junit. assert. assertequals ( 1, true )
[2]: org. junit. assert. assertequals ( org. dashbuilder. displayer. client. widgets. barchart, presenter. getselectedtype ( ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( result, null )

************

************
tgt: org . junit . assert . assertequals ( 1 , victim . getpreprocessors ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 5, cheddar. getprice ( ) )
[1]: org. junit. assert. assertnotnull ( cheddar. getprice ( ) )
[2]: org. junit. assert. assertequals ( 7, cheddar. getprice ( ) )
[3]: org. junit. assert. assertequals ( 5, chdar. getprice ( ) )
[4]: org. junit. assert. assertequals ( 1, cheddar. getprice ( ) )

************

************
tgt: org . junit . assert . assertequals ( int2 , int3 )
[0]: org. junit. assert. assertequals ( intlists. mutable. with ( 1, 2, 3 ), list )
[1]: org. junit. assert. assertequals ( intlists. mutable. with ( 1, 3, 1 ), list )
[2]: org. junit. assert. assertequals ( intlists. mutable. with ( 1, 1, 2 ), list )
[3]: org. junit. assert. assertequals ( intlists. mutable. with ( 1, 2, 1 ), list )
[4]: org. junit. assert. assertequals ( intlists. mutable. with ( 1, 1, 3 ), list )

************

************
tgt: org . junit . assert . assertequals ( 20 , countersize )
[0]: org. junit. assert. asserttrue ( ( ( a [ 0 ] ) < ( b [ 1 ] ) ) )
[1]: org. junit. assert. asserttrue ( ( ( a [ 2 ] ) < ( b [ 1 ] ) ) )
[2]: org. junit. assert. asserttrue ( ( ( a [ 1 ] ) < ( b [ 1 ] ) ) )
[3]: org. junit. assert. asserttrue ( ( ( a [ y ] ) < ( b [ y ] ) ) )
[4]: org. junit. assert. asserttrue ( ( ( a [ 1 ] ) < ( b [ 0 ] ) ) )

************

************
tgt: org . junit . assert . assertequals ( now , event . getexpirydate ( ) )
[0]: org. junit. assert. assertequals ( org. drools. compiler. integrationtests. propertyreactivitytest. order. class, order. getprice ( ) )
[1]: org. junit. assert. assertequals ( org. drools. compiler. integrationtests. propertyreactivitytest. order, order. getprice ( ) )
[2]: org. junit. assert. assertequals ( 1, order. getprice ( ) )
[3]: org. junit. assert. assertequals ( 0, order. getprice ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertsame ( str , test )
[0]: org. junit. assert. assertequals ( 1, microserviceinstanceresponse. getinstance ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, size )
[2]: org. junit. assert. assertequals ( 0, size )
[3]: org. junit. assert. assertequals ( 3, size )
[4]: org. junit. assert. assertequals ( 2, size )

************

************
tgt: org . junit . assert . assertnull ( role )
[0]: org. junit. assert. assertequals ( size, batchwritesize )
[1]: org. junit. assert. asserttrue ( rollup. isfreshenough ( ) )
[2]: org. junit. assert. assertequals ( true, rollup. isfreshenough ( ) )
[3]: org. junit. assert. assertequals ( false, rollup. isfreshenough ( ) )
[4]: org. junit. assert. assertfalse ( rollup. isfreshenough ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( true ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( child. getparent ( ) )
[2]: org. junit. assert. assertthat ( child. getparent ( ). size ( ), org. hamcrest. corematchers. equalto ( 1 ) )
[3]: org. junit. assert. assertthat ( child. getparent ( ), org. hamcrest. corematchers. equalto ( child ) )
[4]: org. junit. assert. assertthat ( child. getparent ( ). get ( ), org. hamcrest. corematchers. equalto ( child ) )

************

************
tgt: org . junit . assert . assertfalse ( iscanvasroot )
[0]: org. junit. assert. assertthat ( child. getparent ( ). size ( ), org. hamcrest. corematchers. equalto ( 0 ) )
[1]: org. junit. assert. assertnotnull ( testmodelview )
[2]: org. junit. assert. assertequals ( null, testmodelview )
[3]: org. junit. assert. assertnull ( testmodelview )
[4]: org. junit. assert. asserttrue ( ( testmodelview == null ) )

************

************
tgt: org . junit . assert . assertequals ( "harvard<sp>medical<sp>school,<sp>usa" , first . getstring ( "name" ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( query, r )
[2]: org. junit. assert. assertequals ( null, r )
[3]: org. junit. assert. assertnotnull ( r )
[4]: org. junit. assert. assertequals ( 1, r )

************

************
tgt: org . junit . assert . assertthat ( value , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( "test" ) ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( com. github. mygreen. supercsv. exception. supercsvannotationexception. class, e. getclass ( ) )
[2]: org. junit. assert. assertnull ( e )
[3]: org. junit. assert. assertequals ( com. github. mygreen. supercsv. exception. superclasscsvannotationexception. class, e. getclass ( ) )
[4]: org. junit. assert. asserttrue ( ( e instanceof java. lang. illegalargumentexception ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , status )
[0]: org. junit. assert. asserttrue ( ( e instanceof java. lang. illegalstateexception ) )
[1]: org. junit. assert. asserttrue ( expectedctx. includespropertiesof ( ctx ) )
[2]: org. junit. assert. asserttrue ( expectedctx, includespropertiesof ( ctx ) )
[3]: org. junit. assert. asserttrue ( expectedctx )
[4]: org. junit. assert. assertfalse ( expectedctx )

************

************
tgt: org . junit . assert . assertsame ( filter , mockfilter )
[0]: ) )
[1]: org. junit. assert. assertequals ( result, result )
[2]: org. junit. assert. assertequals ( result, result. tostring ( ) )
[3]: org. junit. assert. assertequals ( result, statements )
[4]: org. junit. assert. assertequals ( result, size )

************

************
tgt: org . junit . assert . assertequals ( list . size ( ) , result )
[0]: org. junit. assert. assertequals ( result, result. size ( ) )
[1]: org. junit. assert. assertequals ( 12, entities. size ( ) )
[2]: org. junit. assert. assertequals ( 15, entities. size ( ) )
[3]: org. junit. assert. assertequals ( 0, entities. size ( ) )
[4]: org. junit. assert. assertequals ( 10, entities. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . long . valueof ( beforeconvstr ) . equals ( afterconvlong ) , true )
[0]: org. junit. assert. assertequals ( 7, entities. size ( ) )
[1]: org. junit. assert. assertnotnull ( ref. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), ref. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), ref. tostring ( ) )
[4]: org. junit. assert. assertequals ( ref. tostring ( ), "lhs.rhs )

************

************
tgt: org . junit . assert . assertnull ( missingusernotificationdelivery )
[0]: . tostring ( ) )
[1]: org. junit. assert. assertequals ( 1, result. numfindings ( ) )
[2]: org. junit. assert. assertequals ( 5, result. numfindings ( ) )
[3]: org. junit. assert. asserttrue ( found )
[4]: org. junit. assert. assertnotnull ( found )

************

************
tgt: org . junit . assert . asserttrue ( item . isdisposed ( ) )
[0]: org. junit. assert. assertfalse ( found )
[1]: , found )
[2]: ) )
[3]: org. junit. assert. assertfalse ( ici. reportheartbeat ( address ) )
[4]: org. junit. assert. assertfalse ( ici. reportheartbeat ( dns ) )

************

************
tgt: org . junit . assert . assertequals ( expecting , e . render ( ) )
[0]: org. junit. assert. assertfalse ( ici. reportheartbeat ( null ) )
[1]: org. junit. assert. assertfalse ( ici. reportheartbeat ( person ) )
[2]: org. junit. assert. assertfalse ( cb. reportheartbeat ( address ) )
[3]: org. junit. assert. assertnotnull ( response )
[4]: org. junit. assert. assertequals ( 200, response. response ( ). getstatus ( ) )

************

************
tgt: org . junit . assert . assertsame ( elem , mergeelem )
[0]: org. junit. assert. assertequals ( 200, response. getstatus ( ) )
[1]: org. junit. assert. assertequals ( response. response ( ). size ( ), 1 )
[2]: org. junit. assert. assertequals ( 200, response. response ( ). size ( ) )
[3]: org. junit. assert. assertequals ( objects, db. get ( 1 ) )
[4]: org. junit. assert. assertequals ( objects, db. get ( objects. size ( ) ) )

************

************
tgt: org . junit . assert . assertthat ( managedpool . getleakedobjectscount ( ) , is ( 0l ) )
[0]: org. junit. assert. assertequals ( objects, db. get ( 0 ) )
[1]: org. junit. assert. assertequals ( objects, db. get ( object ) )
[2]: org. junit. assert. assertequals ( objects, db. get ( objects. iterator ( ) ) )
[3]: org. junit. assert. assertequals ( shibidentityprovider, result )
[4]: org. junit. assert. assertequals ( shibidentityprovider ( ), result )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , result )
[0]: org. junit. assert. assertequals ( result, shibidentityprovider )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( shibidentityprovider ( ), result )
[3]: org. junit. assert. assertequals ( message, result. message )
[4]: org. junit. assert. assertequals ( message, test. message )

************

************
tgt: org . junit . assert . assertequals ( pa , assignment )
[0]: org. junit. assert. assertfalse ( result. message. message )
[1]: org. junit. assert. assertfalse ( result. message )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( record. get ( org. mockito. mockito. mock ( java. lang. string. class ) ) )
[4]: org. junit. assert. assertnotnull ( record. get ( org. mockito. mockito. mock ( java. lang. integer. class ) ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertnotnull ( record )
[1]: org. junit. assert. assertnull ( record )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, tokenlist. size ( ) )
[4]: org. junit. assert. assertequals ( 1, tokenlist. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( errormsg , progresschangedafterlocationchanged . get ( ) )
[0]: org. junit. assert. assertequals ( null, tokenlist. size ( ) )
[1]: org. junit. assert. assertequals ( zero, tokenlist. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, cmdlets. size ( ) )
[4]: org. junit. assert. assertequals ( 1, cmdlets. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( o1 , o2 )
[0]: org. junit. assert. assertequals ( 1, rs )
[1]: org. junit. assert. assertequals ( str1, rs )
[2]: org. junit. assert. assertequals ( 0, rs )
[3]: org. junit. assert. assertequals ( str2, rs )
[4]: org. junit. assert. assertequals ( 5, rs )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , zerodollars . compareto ( onedollar ) )
[0]: org. junit. assert. assertequals ( 1, findid ( index, 3, 9.43 ) )
[1]: org. junit. assert. assertequals ( 1, findid ( index, 3, 9.43 ). size ( ) )
[2]: org. junit. assert. assertequals ( 3, findid ( index, 3, 9.43 ) )
[3]: org. junit. assert. assertequals ( 0, findid ( index, 3, 9.43 ) )
[4]: org. junit. assert. assertequals ( 1, findid ( index, 2, 9.43 ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . string . valueof ( byteswritten ) , result )
[0]: org. junit. assert. assertnotnull ( bootconf )
[1]: org. junit. assert. assertnull ( bootconf )
[2]: org. junit. assert. assertequals ( null, bootconf )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( caughtexception )
[0]: org. junit. assert. assertnull ( org. threadly. util. exceptionutils. getcauseoftype ( null, org. threadly. util. illegalargumentexception. class ) )
[1]: org. junit. assert. assertequals ( inetaddressmatcher. hostnamematcher. class, ipmatcher. getclass ( ) )
[2]: org. junit. assert. assertequals ( inetaddressmatcher. ipaddressmatcher. class, ipmatcher. getclass ( ) )
[3]: org. junit. assert. assertequals ( inetaddressmatcher. hostmatcher. class, ipmatcher. getclass ( ) )
[4]: org. junit. assert. assertequals ( inetaddressmatcher. ipmatcher. class, ipmatcher. getclass ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , executor . run ( adultunit ) )
[0]: org. junit. assert. assertequals ( inetaddressmatcher. namematcher. class, ipmatcher. getclass ( ) )
[1]: org. junit. assert. assertequals ( 1, b. hashcode ( ) )
[2]: org. junit. assert. assertequals ( 0, b. hashcode ( ) )
[3]: org. junit. assert. assertequals ( 0, hash. trailingzeros ( ) )
[4]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 0, 0 }, hash. trailingzeros ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedjsonstringoutput , actualjsonstringoutput )
[0]: org. junit. assert. assertarrayequals ( new byte [ ] { 0, 0, 0 }, hash. trailingzeros ( ) )
[1]: org. junit. assert. assertarrayequals ( new byte [ 0 ], hash. trailingzeros ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( totallines, result. getprocessedlines ( ). size ( ) )
[4]: org. junit. assert. assertequals ( patientprograms. size ( ), 1 )

************

************
tgt: org . junit . assert . assertequals ( 0 , timer . getwaittime ( ) )
[0]: org. junit. assert. assertequals ( patientprograms. size ( ), 0 )
[1]: org. junit. assert. assertequals ( patientprograms. size ( ), 3 )
[2]: org. junit. assert. assertequals ( patientprograms. size ( ), patientprograms )
[3]: ) )
[4]: org. junit. assert. assertequals ( body, deserializedcontent )

************

************
tgt: org . junit . assert . assertequals ( expected , d_analysis . getdependencies ( ) )
[0]: org. junit. assert. asserttrue ( deserializedcontent. contains ( body ) )
[1]: org. junit. assert. asserttrue ( deserializedcontent. equals ( body ) )
[2]: org. junit. assert. assertsame ( body, deserializedcontent )
[3]: org. junit. assert. assertnotnull ( deviceid )
[4]: org. junit. assert. assertnull ( deviceid )

************

************
tgt: org . junit . assert . asserttrue ( actual . execute ( ) )
[0]: org. junit. assert. assertequals ( deviceid, deviceid )
[1]: org. junit. assert. assertequals ( deviceid, deviceid )
[2]: ) )
[3]: org. junit. assert. assertequals ( ( trials + 1 ), p )
[4]: org. junit. assert. asserttrue ( delegate. isclientauthentication ( ) )

************

************
tgt: org . junit . assert . asserttrue ( message , passed )
[0]: org. junit. assert. assertequals ( delegate. isclientauthentication ( ), config )
[1]: org. junit. assert. assertequals ( delegate, config. isclientauthentication ( ) )
[2]: org. junit. assert. assertnull ( delegate. isclientauthentication ( ) )
[3]: org. junit. assert. assertnotnull ( delegate. isclientauthentication ( ) )
[4]: org. junit. assert. assertnotnull ( nl )

************

************
tgt: org . junit . assert . asserttrue ( getexception )
[0]: org. junit. assert. assertequals ( list1, nl )
[1]: org. junit. assert. assertequals ( lists1, nl )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, handle. match ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( inputfile . exists ( ) )
[0]: org. junit. assert. assertequals ( null, handle. match ( null ) )
[1]: org. junit. assert. assertnull ( handle )
[2]: org. junit. assert. assertnotnull ( handle )
[3]: org. junit. assert. assertequals ( null, handle )
[4]: org. junit. assert. assertequals ( 0, status )

************

************
tgt: org . junit . assert . assertequals ( puttedvalue , list . getbyteunsafe ( i ) )
[0]: org. junit. assert. assertequals ( 1, status )
[1]: org. junit. assert. assertequals ( 200, status )
[2]: org. junit. assert. assertequals ( 4, status )
[3]: , status )
[4]: org. junit. assert. assertequals ( 1, instance. getparameters ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( json , genson . serialize ( period ) )
[0]: org. junit. assert. assertequals ( 3, instance. getparameters ( ). size ( ) )
[1]: org. junit. assert. assertarrayequals ( expected, cz. zcu. kiv. jop. util. arrayutils. toprimitivearray ( expected ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( expected ), cz. zcu. kiv. jop. util. arrayutils. toprimitivearray ( expected ) )
[3]: org. junit. assert. assertarrayequals ( expected, cz. zcu. kiv. jop. util. arrayutils. toprimitivearray ( expected ). toarray ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( expected ), cz. zcu. kiv. jop. util. arrayutils. toprimitivearray ( expected ) )

************

************
tgt: org . junit . assert . asserttrue ( contains )
[0]: org. junit. assert. assertequals ( expected, cz. zcu. kiv. jop. util. arrayutils. toprimitivearray ( expected ) )
[1]: org. junit. assert. assertnotnull ( undertest. thencomposecaught ( cause ) )
[2]: org. junit. assert. assertequals ( undertest, undertest. thencomposecaught ( cause ) )
[3]: org. junit. assert. assertequals ( 1, meldingen. isempty ( ) )
[4]: org. junit. assert. assertequals ( 0, meldingen. isempty ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( script )
[0]: org. junit. assert. assertequals ( 0, beand. getconnectcount ( ) )
[1]: org. junit. assert. assertequals ( 1, beand. getconnectcount ( ) )
[2]: org. junit. assert. assertequals ( 0l, beand. getconnectcount ( ) )
[3]: org. junit. assert. assertnull ( beand. getconnectcount ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( validator . validate ( context , attribute , root ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, testtokenindex )
[1]: org. junit. assert. assertequals ( 0, features. length )
[2]: org. junit. assert. assertequals ( 0, teststokenindex )
[3]: org. junit. assert. assertequals ( 0, features. size ( )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( allserviceconfigresponses , org . hamcrest . corematchers . is ( expectedserviceconfigresponses ) )
[0]: org. junit. assert. assertnotnull ( parser. parse ( null ) )
[1]: org. junit. assert. assertnotnull ( parser. parse ( java. lang. string. class ) )
[2]: org. junit. assert. assertnull ( parser. parse ( null ) )
[3]: org. junit. assert. assertnotnull ( parser. parse ( new java. lang. string ( ) ) )
[4]: org. junit. assert. assertnotnull ( parser. parse ( string ) )

************

************
tgt: org . junit . assert . assertequals ( expectedisindex ( i ) , p . isindex ( i ) )
[0]: org. junit. assert. assertequals ( 1, mconfiguration. getms ( propertykey. proxy_stream_cache_timeout_ms ) )
[1]: org. junit. assert. assertnotnull ( mconfiguration. getms ( propertykey. proxy_stream_cache_timeout_ms ) )
[2]: org. junit. assert. assertequals ( 1, mconfiguration. getms ( propertykey. proxy_usage. getid ( ) ) )
[3]: org. junit. assert. assertnotnull ( mconfiguration. getms ( propertykey. proxy_usage. getid ( ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , buffer )
[0]: org. junit. assert. asserttrue ( meldingen. isempty ( ) )
[1]: org. junit. assert. assertequals ( true, meldingen. isempty ( ) )
[2]: org. junit. assert. asserttrue ( sametype ( type, deserializedtype ) )
[3]: org. junit. assert. asserttrue ( sametype ( transfer, deserializedtype ) )
[4]: org. junit. assert. asserttrue ( reversetype. sametype ( type, deserializedtype ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , level )
[0]: org. junit. assert. asserttrue ( sametype ( deserializedtype, deserializedtype ) )
[1]: org. junit. assert. asserttrue ( reversetype. sametype ( deserializedtype, type ) )
[2]: org. junit. assert. assertequals ( 1, context. getaltitude ( ) )
[3]: org. junit. assert. assertnotnull ( context. getaltitude ( ) )
[4]: org. junit. assert. assertequals ( 1, msg. getaltitude ( ) )

************

************
tgt: org . junit . assert . assertequals ( x , 20 )
[0]: org. junit. assert. assertequals ( 1, msg. getaltitude ( ). length )
[1]: org. junit. assert. assertequals ( 1, context. getaltitude ( ). length )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( list, result )

************

************
tgt: org . junit . assert . assertthat ( target . iserror ( "put" ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: ) )
[2]: org. junit. assert. assertequals ( metricsender. default_log_only, sender )
[3]: org. junit. assert. assertequals ( metricsender. def_log_only, sender )
[4]: org. junit. assert. assertequals ( metricsender. defaults_log_only, sender )

************

************
tgt: org . junit . assert . assertfalse ( validassert )
[0]: org. junit. assert. assertnotnull ( sender )
[1]: ) )
[2]: org. junit. assert. asserttrue ( validate ( context, servicedescriptor, root ). isempty ( ) )
[3]: org. junit. assert. assertnotnull ( validate ( context, servicedescriptor, root ) )
[4]: org. junit. assert. asserttrue ( validate ( context, entity, root ). isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( a1 , a2 )
[0]: org. junit. assert. asserttrue ( validate ( context, servicedescriptor, root ). size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( libns, librarytype. getname ( ) )
[3]: org. junit. assert. assertnull ( librarytype. getname ( ) )
[4]: org. junit. assert. assertnotnull ( librarytype. getname ( ) )

************

************
tgt: org . junit . assert . assertthat ( ( ! ( matchingartifacts . isempty ( ) ) ) , org . hamcrest . matchers . is ( false ) )
[0]: org. junit. assert. assertequals ( libraryns, librarytype. getname ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( msg, 0, msg. getownedtypeparameter ( ). size ( ) )
[3]: org. junit. assert. assertequals ( msg, 0, org. dresdenocl. metamodels. test. tests. testnamespace. package1. getownedtypeparameter ( ). length )
[4]: org. junit. assert. assertequals ( msg, 0, util. getownedtypeparameter ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "changed_name" , owner . getdisplayname ( ) )
[0]: org. junit. assert. assertequals ( msg, 0, java. util. collections. emptylist ( ). size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( expectedbloomkey1, uk. gov. gchq. gaffer. accumulostore. test. bloom. byteentitybloomelementfunctortest. elementfunctor. transform ( keys ) )
[3]: org. junit. assert. assertequals ( expectedbloomkey1, uk. gov. gchq. gaffer. accumulostore. test. bloom. byteentitybloomnumberest. elementfunctor. transform ( key1 ) )
[4]: org. junit. assert. assertequals ( expectedbloomkey1, org. apache. accumulo. util. bloom. byteentitybloomelementfunctortest. elementfunctor. transform ( key1 ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , count . get ( ) )
[0]: org. junit. assert. assertequals ( expectedbloomkey1, transform ( key1 ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( com. github. dockerjava. api. model. restartpolicy. parse ( null ), com. github. dockerjava. api. model. restartpolicy. norestart ( ) )
[3]: org. junit. assert. assertequals ( com. github. dockerjava. api. model. restartpolicy. parse ( string ), com. github. dockerjava. api. model. restartpolicy. norestart ( ) )
[4]: org. junit. assert. assertequals ( com. github. dockerjava. api. model. restartpolicy. parse ( null ), java. util. collections. emptylist ( ) )

************

************
tgt: org . junit . assert . asserttrue ( e . getmessage ( ) , true )
[0]: org. junit. assert. assertequals ( com. github. dockerjava. api. model. restartpolicy. parse ( null ), null )
[1]: org. junit. assert. assertequals ( com. github. dockerjava. api. model. restartpolicy. parse ( null ), com. github. dockerjava. api. model. restartpolicy. norestart )
[2]: org. junit. assert. assertequals ( true, evaluator. evaluate ( ) )
[3]: org. junit. assert. assertnotnull ( persooncheck. getwoonplaatsgeboorte ( ) )
[4]: org. junit. assert. assertnotnull ( persooncheck )

************

************
tgt: org . junit . assert . assertnull ( bean )
[0]: org. junit. assert. assertequals ( persoonsql, persooncheck )
[1]: org. junit. assert. assertnull ( persooncheck )
[2]: ) )
[3]: org. junit. assert. asserttrue ( gridss. extractsvreads. hasreadalignmentconsistentwithreference ( list ) [ 0 ] )
[4]: org. junit. assert. assertarrayequals ( gridss. extractsvreads. hasreadalignmentconsistentwithreference ( list ), list. toarray ( ) )

************

************
tgt: org . junit . assert . assertequals ( new java . math . bigdecimal ( 10 ) , count )
[0]: org. junit. assert. assertarrayequals ( gridss. extractsvreads. hasreadalignmentconsistentwithreference ( list ), com. google. common. collect. lists. newarraylist ( list ) )
[1]: org. junit. assert. assertarrayequals ( gridss. extractsvreads. hasreadalignmentconsistentwithreference ( list ), list. get ( 0 ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, org. apache. servicecomb. loadbalance. configuration. getsuccessivefailedtimes ( null ) )
[4]: org. junit. assert. assertequals ( 1, org. apache. servicecomb. loadbalance. configuration. getsuccessivefailedtimes ( null ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , outval )
[0]: org. junit. assert. assertequals ( null, org. apache. servicecomb. loadbalance. configuration. getsuccessivefailedtimes ( null ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), java. lang. integer. getsuccessivefailedtimes ( null ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( chats. size ( ), chatids. size ( ) )
[4]: org. junit. assert. assertequals ( chats. size ( ), chatids. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( gfun . getname ( ) )
[0]: org. junit. assert. assertequals ( xmpps. size ( ), chatids. size ( ) )
[1]: org. junit. assert. assertequals ( chat. size ( ), chatids. size ( ) )
[2]: org. junit. assert. assertequals ( chats. size ( ), chatids. size ( ) )
[3]: org. junit. assert. assertequals ( true, stub. isapplicable ( mock ( com. xebialabs. restito. semantics. call. class ) ) )
[4]: org. junit. assert. asserttrue ( stub. isapplicable ( mock ( com. xebialabs. restito. semantics. call. class ) ) )

************

************
tgt: org . junit . assert . assertfalse ( prop )
[0]: org. junit. assert. assertequals ( false, stub. isapplicable ( mock ( com. xebialabs. restito. semantics. call. class ) ) )
[1]: org. junit. assert. assertequals ( 1, ce. getnumber ( ) )
[2]: org. junit. assert. assertequals ( 0, ce. getnumber ( ) )
[3]: org. junit. assert. assertequals ( error, ce. getnumber ( ) )
[4]: org. junit. assert. assertequals ( ce. getnumber ( ), error )

************

************
tgt: org . junit . assert . assertequals ( org . phenotips . data . permissions . internal . defaultcollaboratortest . collaborator . getname ( ) , c . getusername ( ) )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( error ), error )
[1]: org. junit. assert. assertnotnull ( org. apache. hadoop. fs. quotausage. getheader ( ) )
[2]: org. junit. assert. assertnull ( org. apache. hadoop. fs. quotausage. getheader ( ) )
[3]: org. junit. assert. assertequals ( quotausage. quota_header, header. getheader ( ) )
[4]: org. junit. assert. assertnotnull ( org. apache. hadoop. fs. quotausage. getheader ( ). tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( hashbag , sizes . tobag ( ) )
[0]: org. junit. assert. assertnotnull ( header )
[1]: org. junit. assert. assertnotnull ( dna. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 1, dna. getvalue ( ) )
[3]: org. junit. assert. assertequals ( null, dna. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, dna. getvalue ( ). length )

************

************
tgt: org . junit . assert . assertequals ( filterdata , dojsonroundtrip ( filterdata ) )
[0]: org. junit. assert. assertequals ( 0, dna. getvalue ( ). length )
[1]: org. junit. assert. assertnull ( colname )
[2]: org. junit. assert. assertnotnull ( colname )
[3]: , colname )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( bewaardeafdruk , afdruk )
[0]: )
[1]: org. junit. assert. assertequals ( 3, operations. size ( ) )
[2]: org. junit. assert. assertequals ( 6, operations. size ( ) )
[3]: org. junit. assert. assertequals ( 1, operations. size ( ) )
[4]: org. junit. assert. assertfalse ( resutl )

************

************
tgt: org . junit . assert . asserttrue ( e . getmessage ( ) . contains ( invalidvalue ) )
[0]: org. junit. assert. asserttrue ( net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )
[1]: org. junit. assert. assertnotnull ( net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )
[2]: org. junit. assert. assertequals ( perms, net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )
[3]: org. junit. assert. assertequals ( 1, net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )
[4]: org. junit. assert. assertfalse ( net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )

************

************
tgt: org . junit . assert . assertequals ( highest , highestid . get ( ) )
[0]: org. junit. assert. assertequals ( spanone, resultsqo. get ( ) )
[1]: org. junit. assert. assertequals ( spanone. get ( ), resultsqo. get ( ) )
[2]: org. junit. assert. assertequals ( spanone, resultsqo. get ( ). get ( ) )
[3]: org. junit. assert. assertnotnull ( resultsqo. get ( ) )
[4]: org. junit. assert. assertequals ( spanone, resultsqo )

************

************
tgt: org . junit . assert . assertfalse ( visible )
[0]: org. junit. assert. asserttrue ( checker. isauthorized ( context, profiles, pac4jconstants. csrf_token, token ) )
[1]: org. junit. assert. asserttrue ( authorizer. isauthorized ( context, profiles, pac4jconstants. csrf_token, token ) )
[2]: org. junit. assert. asserttrue ( checker. isauthorized ( context, al, pac4jconstants. csrf_token, token ) )
[3]: org. junit. assert. asserttrue ( checker. isauthorized ( context, token, defaultauthorizers. is_token, null ) )
[4]: org. junit. assert. asserttrue ( true )

************

************
tgt: org . junit . assert . asserttrue ( handler . issessionrequired ( ) )
[0]: org. junit. assert. assertnull ( org. threadly. util. exceptionutils. getcauseoftypes ( null, null ) )
[1]: org. junit. assert. assertequals ( 1, refs. size ( ) )
[2]: org. junit. assert. assertequals ( 0, refs. size ( ) )
[3]: org. junit. assert. assertequals ( 1, references. size ( ) )
[4]: org. junit. assert. assertequals ( 0, references. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , out )
[0]: org. junit. assert. assertequals ( 3, refs. size ( ) )
[1]: org. junit. assert. assertnotnull ( obj )
[2]: org. junit. assert. assertequals ( obj, null )
[3]: org. junit. assert. assertequals ( 1, obj )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( "" , org . eclipse . kapua . commons . util . payloads . todisplaystring ( null ) )
[0]: 
[1]: org. junit. assert. assertequals ( 1, instance. getall ( ""key1"" ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, instance. getall ( ""key1. getid ( ) ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, instance. getall ( ""key1 ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, instance. getall ( null ). size ( ) )

************

************
tgt: org . junit . assert . assertnull ( consumer . receive ( 1000 ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. type )
[4]: org. junit. assert. assertequals ( 1, result. length )

************

************
tgt: org . junit . assert . assertthat ( repository . findjobregisterstatistics ( new java . util . date ( ) ) . size ( ) , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert. assertequals ( 1, result. list. length )
[1]: org. junit. assert. assertnotnull ( chronosserver )
[2]: org. junit. assert. assertnotnull ( chronosserver. s )
[3]: org. junit. assert. assertnotnull ( chronosserver. repository )
[4]: org. junit. assert. assertnotnull ( chronosserver. stack )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertnotnull ( chronosserver. output )
[1]: org. junit. assert. assertequals ( s, diff )
[2]: org. junit. assert. assertequals ( s, s )
[3]: org. junit. assert. assertequals ( s, count )
[4]: org. junit. assert. assertequals ( s, 1 )

************

************
tgt: org . junit . assert . assertfalse ( column . issummary ( ) )
[0]: org. junit. assert. assertequals ( s, num )
[1]: org. junit. assert. assertequals ( fieldvalue, kv. getfield ( ) )
[2]: org. junit. assert. assertequals ( fieldvalue, n. getfield ( ) )
[3]: org. junit. assert. assertequals ( fieldvalue, params. getfield ( ) )
[4]: org. junit. assert. assertnotnull ( fieldvalue )

************

************
tgt: org . junit . assert . assertequals ( 8 , result . getdouble ( 0 ) , 0.0 )
[0]: org. junit. assert. assertnull ( fieldvalue )
[1]: org. junit. assert. assertequals ( 0, children. size ( ) )
[2]: org. junit. assert. assertequals ( 1, children. size ( ) )
[3]: org. junit. assert. assertnotnull ( f. get ( ) )
[4]: org. junit. assert. asserttrue ( apikey. equals ( secondkey ) )

************

************
tgt: org . junit . assert . assertarrayequals ( listtokens . toarray ( new org . apache . ambari . server . api . predicate . token [ listtokens . size ( ) ] ) , tokens )
[0]: org. junit. assert. assertequals ( apikey, secondkey )
[1]: org. junit. assert. assertequals ( 1, plots. get ( 0 ). getid ( ) )
[2]: org. junit. assert. assertequals ( plots. get ( 0 ), plot1 )
[3]: org. junit. assert. assertequals ( 1, plots. get ( 0 ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, plots. get ( 0 ). length )

************

************
tgt: org . junit . assert . assertnull ( java . lang . system . getproperty ( const . url_prefix ) )
[0]: get ( 0 ) )
[1]: org. junit. assert. asserttrue ( result. contains ( loggingevent. tostring ( ) ) )
[2]: org. junit. assert. asserttrue ( result, result. contains ( loggingevent. tostring ( ) ) )
[3]: org. junit. assert. asserttrue ( result. contains ( loggingevent. tostring ( ). tostring ( ) ) )
[4]: org. junit. assert. assertequals ( true, contains )

************

************
tgt: org . junit . assert . assertthat ( min , org . hamcrest . corematchers . is ( 100.0 ) )
[0]: org. junit. assert. asserttrue ( contains )
[1]: org. junit. assert. asserttrue ( true )
[2]: org. junit. assert. asserttrue ( ( contains == true ) )
[3]: org. junit. assert. assertequals ( false, contains )
[4]: org. junit. assert. assertequals ( 1, resultaat. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( actual , expected )
[0]: org. junit. assert. assertequals ( 1, m. size ( ) )
[1]: org. junit. assert. assertequals ( 0, m. size ( ) )
[2]: org. junit. assert. assertequals ( 3, m. size ( ) )
[3]: org. junit. assert. assertequals ( 1, entryarray. length ( ) )
[4]: org. junit. assert. assertequals ( 1l, headers. getlongheader ( null, 1 ) )

************

************
tgt: org . junit . assert . assertequals ( flowstate . vserver_stopping , result )
[0]: org. junit. assert. assertequals ( 1l, headers. getlongheader ( null, 1l ) )
[1]: org. junit. assert. assertequals ( 0l, headers. getlongheader ( null, 0l ) )
[2]: org. junit. assert. assertequals ( 0l, headers. getlongheader ( null, 1 ) )
[3]: type ) )
[4]: org. junit. assert. assertnotnull ( preferences. get ( 0, null ) )

************

************
tgt: org . junit . assert . assertequals ( score , smsd1 . getenergyscore ( 0 ) )
[0]: org. junit. assert. assertnotnull ( preferences. get ( 5, null ) )
[1]: org. junit. assert. assertnotnull ( preferences. get ( null, null ) )
[2]: org. junit. assert. assertnotnull ( preferences. get ( 5, org. junit. assert. assertnotnull ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( highertempercentance, search. probabilityofacceptance ( highertemire, deltae ) )

************

************
tgt: org . junit . assert . assertequals ( 7 , results . size ( ) )
[0]: org. junit. assert. assertequals ( highertempercentance, search. probabilityofacceptance ( lowertemire, highertemire ) )
[1]: org. junit. assert. assertequals ( highertemire, search. probabilityofacceptance ( lowertemire, highertemire ) )
[2]: org. junit. assert. assertequals ( lowertempercentance, search. probabilityofacceptance ( highertemire, deltae ) )
[3]: org. junit. assert. assertequals ( highertempercentance, search. probabilityofacceptance ( lowertemire, deltae ) )
[4]: org. junit. assert. assertequals ( item0, set. iterator ( ). next ( ) )

************

************
tgt: org . junit . assert . asserttrue ( isfileadirectory )
[0]: org. junit. assert. assertequals ( item0. value, item0. value )
[1]: org. junit. assert. assertequals ( item0. getvalue ( ), item0. value )
[2]: org. junit. assert. assertnotnull ( item0. value )
[3]: type ) )
[4]: org. junit. assert. assertequals ( 4, set. getlength ( ) )

************

************
tgt: org . junit . assert . assertthat ( result . size ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( 3, set. getlength ( ) )
[1]: org. junit. assert. assertequals ( 1, set. getlength ( ) )
[2]: org. junit. assert. assertequals ( 0, set. getlength ( ) )
[3]: org. junit. assert. assertequals ( 2, set. getlength ( ) )
[4]: org. junit. assert. assertequals ( result, testtointeger )

************

************
tgt: org . junit . assert . asserttrue ( filter . matches ( record ) )
[0]: org. junit. assert. assertequals ( result, testtointeger. s )
[1]: org. junit. assert. assertequals ( result, testtointeger ( ) )
[2]: org. junit. assert. assertequals ( result, testtointeger. output )
[3]: org. junit. assert. assertequals ( result, testtointeger. fail )
[4]: org. junit. assert. assertequals ( 0, ret )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( "/" , "default" , "index" ) , org . apache . hadoop . yarn . webapp . webapp . parseroute ( "/" ) )
[0]: org. junit. assert. assertequals ( i, ret )
[1]: org. junit. assert. assertequals ( - 1, ret )
[2]: , ret )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, index. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( matcher . matches ( mocktext ) )
[0]: org. junit. assert. assertequals ( 0, index. size ( ) )
[1]: org. junit. assert. assertequals ( 2, index. size ( ) )
[2]: org. junit. assert. assertequals ( 3, index. size ( ) )
[3]: org. junit. assert. assertequals ( 4, index. size ( ) )
[4]: org. junit. assert. assertnotnull ( billy. get ( ) )

************

************
tgt: org . junit . assert . assertsame ( value , cachedvalue )
[0]: org. junit. assert. assertequals ( null, billy. get ( ) )
[1]: org. junit. assert. assertequals ( billy. get ( ), null )
[2]: org. junit. assert. assertnull ( billy. get ( ) )
[3]: ) )
[4]: org. junit. assert. assertthat ( mock. apply ( ), is ( 0 ) )

************

************
tgt: org . junit . assert . assertsame ( consumererror , geterror ( put ( 1 ) ) )
[0]: org. junit. assert. assertthat ( mock. apply ( ), is ( true ) )
[1]: org. junit. assert. assertthat ( mock. apply ( ), is ( false ) )
[2]: org. junit. assert. assertthat ( mock, apply ( ) )
[3]: org. junit. assert. assertthat ( mock, is ( mock ) )
[4]: org. junit. assert. assertequals ( 1, nuoftype1vehicles )

************

************
tgt: org . junit . assert . assertnull ( logentries )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertequals ( 0, list. size ( ) )
[2]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) == 1 ) )
[3]: org. junit. assert. assertequals ( ""1"", 1, list. size ( ) )
[4]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) == 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actualquery )
[0]: org. junit. assert. asserttrue ( java. util. collections. isempty ( ) )
[1]: org. junit. assert. asserttrue ( collection. isempty ( ) )
[2]: org. junit. assert. asserttrue ( java. util. arrays. isempty ( ) )
[3]: org. junit. assert. asserttrue ( s. isempty ( ) )
[4]: org. junit. assert. asserttrue ( parser. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( sourcefile . exists ( ) )
[0]: org. junit. assert. assertequals ( org. drools. modelcompiler. propertyreactivitytest. order. class, order. getprice ( ) )
[1]: org. junit. assert. assertequals ( org. drools. modelcompiler. propertyreactivitytest. order, order. getprice ( ) )
[2]: org. junit. assert. assertequals ( 1, order. getprice ( ) )
[3]: org. junit. assert. assertequals ( 1, order. getprice ( ). size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertarrayequals ( pkgclasses . toarray ( ) , defaultclasses . toarray ( ) )
[0]: org. junit. assert. assertequals ( 1, browser. ispresent ( ) )
[1]: org. junit. assert. asserttrue ( browser. ispresent ( ) )
[2]: org. junit. assert. assertnull ( edu. harvard. iq. dataverse. dataset. datasetutil. persistdatasetlogotostorageandcreatethumbnail ( null, fullsizeimage ) )
[3]: org. junit. assert. assertnotnull ( edu. harvard. iq. dataverse. dataset. datasetutil. persistdatasetlogotostorageandcreatethumbnail ( null, fullsizeimage ) )
[4]: org. junit. assert. assertnull ( edu. harvard. iq. dataverse. dataset. datasetutil. persistdatasetlogotostorage. persistdataset ( null, fullsizeimage ) )

************

************
tgt: org . junit . assert . assertnull ( hit )
[0]: org. junit. assert. assertnull ( edu. harvard. iq. dataverse. dataset. datasetutil. persistdatasetlogotostorageoncreatethumbnail ( null, fullsizeimage ) )
[1]: org. junit. assert. assertnull ( edu. harvard. iq. dataverse. dataset. datasetutil. persistdatasetlogotostorageandcreatethumbnail ( ) )
[2]: org. junit. assert. assertnull ( actual )
[3]: org. junit. assert. assertequals ( java. util. optional. empty ( ), actual )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), actual )

************

************
tgt: org . junit . assert . assertequals ( null , subject . execute ( parameters ) )
[0]: org. junit. assert. assertequals ( null, actual )
[1]: org. junit. assert. assertnotnull ( actual )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. asserttrue ( subject. controleer ( new nl. bzk. migratiebrp. synchronisatie. runtime. service. synchronisatie. verwerker. context. verwerkingscontext ( null, null, null, null ) ) )
[4]: org. junit. assert. assertnotnull ( subject. controleer ( new nl. bzk. migratiebrp. synchronisatie. runtime. service. synchronisatie. verwerker. context. verwerkingscontext ( null, null, null, null ) ) )

************

************
tgt: org . junit . assert . assertnotnull ( storyrunnerservice )
[0]: org. junit. assert. assertnotnull ( subject )
[1]: org. junit. assert. assertnull ( subject )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, fixture. readbyte ( ) )
[4]: org. junit. assert. asserttrue ( ( ( watch. start ( ) ) >= beforestopwatch ) )

************

************
tgt: org . junit . assert . asserttrue ( hasdata )
[0]: org. junit. assert. assertequals ( ( - beforestopwatch ), watch. getstarttime ( ) )
[1]: org. junit. assert. asserttrue ( ( ( watch. gettime ( ) ) >= beforestopwatch ) )
[2]: org. junit. assert. asserttrue ( ( ( watch. count ( ) ) >= beforestopwatch ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, resulta. compareto ( resultb ) )

************

************
tgt: org . junit . assert . asserttrue ( integersignature . canaccepttype ( int . class ) )
[0]: org. junit. assert. assertequals ( 1, resulta. compareto ( resultb ) )
[1]: org. junit. assert. assertequals ( true, ( ( resulta. compareto ( resultb ) ) == 0 ) )
[2]: org. junit. assert. assertequals ( ( - 1 ), resulta. compareto ( resultb ) )
[3]: org. junit. assert. assertequals ( 0, edu. illinois. library. cantaloupe. cache. infoservice. getinfocachesize ( ) )
[4]: org. junit. assert. assertequals ( ntests, network. fromstring ( network. tostring ( ) ) )

************

************
tgt: org . junit . assert . assertnotnull ( org . nmdp . ngs . variant . vcf . vcfgenotype . builder ( ) )
[0]: org. junit. assert. assertequals ( ntests, network. fromstring ( ntests ) )
[1]: org. junit. assert. assertequals ( ntests, network. fromstring ( network. getlabel ( ) ) )
[2]: org. junit. assert. assertequals ( ntests, network. fromstring ( net. tostring ( ) ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, errors. getall ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( myentry . equals ( entry2 ) )
[0]: org. junit. assert. assertequals ( 0, errors. getall ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, errors. getall ( ). length )
[2]: org. junit. assert. assertnotnull ( errors. getall ( ) )
[3]: org. junit. assert. assertequals ( 1, errors. getall ( ). size ( ) ) ;
[4]: org. junit. assert. assertequals ( order. getorderfee ( ), amount )

************

************
tgt: org . junit . assert . assertthat ( group , org . hamcrest . corematchers . is ( group2 ) )
[0]: org. junit. assert. assertequals ( order, returnorder )
[1]: org. junit. assert. assertequals ( order, returnedorder )
[2]: org. junit. assert. assertequals ( order, returnsorder )
[3]: order ( ), amount )
[4]: org. junit. assert. assertnotnull ( e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertnull ( network . delete ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. format ( msg, e. getmessage ( ) ), java. lang. string. format ( e. getmessage ( ) ) )
[1]: org. junit. assert. assertequals ( java. lang. string. format ( new java. lang. string [ ] { }, e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. format ( java. lang. string. class. getname ( ) ), e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[4]: org. junit. assert. assertfalse ( org. apache. tinkerpop. gremlin. structure. util. elementhelper. areequal ( v, null ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. asserttrue ( org. apache. tinkerpop. gremlin. structure. util. elementhelper. areequal ( v, null ) )
[1]: org. junit. assert. assertequals ( true, org. apache. tinkerpop. gremlin. structure. util. elementhelper. areequal ( v, null ) )
[2]: org. junit. assert. assertequals ( false, org. apache. tinkerpop. gremlin. structure. util. elementhelper. areequal ( v, null ) )
[3]: org. junit. assert. assertfalse ( org. apache. tinkerpop. gremlin. structure. util. elementhelper. areequals ( v, null ) )
[4]: org. junit. assert. assertequals ( value0. intvalue ( ), value2. intvalue ( ) )

************

************
tgt: org . junit . assert . asserttrue ( module . abort ( ) )
[0]: org. junit. assert. asserttrue ( ( ( ( value0. intvalue ( ) ) + ( value2. intvalue ( ) ) ) > ( value1. intvalue ( ) ) ) )
[1]: org. junit. assert. assertequals ( value0. intvalue ( ), ( ( value1. intvalue ( ) ) + value2 ) )
[2]: org. junit. assert. asserttrue ( ( ( ( value0. intvalue ( ) ) + ( value1. intvalue ( ) ) ) > ( value2. intvalue ( ) ) ) )
[3]: org. junit. assert. assertthat ( matcherwithtwotransformation, matcherwithtwotransformation )
[4]: org. junit. assert. assertthat ( matcherwithtwotransformation, match ( mockerrortype ) )

************

************
tgt: org . junit . assert . asserttrue ( complex . nan . reciprocal ( ) . isnan ( ) )
[0]: org. junit. assert. assertthat ( matcherwithtwotransformation )
[1]: match ( mockerrortype ) )
[2]: ) )
[3]: org. junit. assert. assertfalse ( array. equals ( null ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), instance. equals ( 1l ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), instance. equals ( 1 ) )
[1]: org. junit. assert. assertnull ( queue. equals ( null ) )
[2]: org. junit. assert. assertequals ( element. equals ( element ), true )
[3]: org. junit. assert. assertequals ( expectedexception, expectedexception )
[4]: org. junit. assert. assertequals ( expectedexception, exception )

************

************
tgt: org . junit . assert . assertthat ( actuallist . size ( ) , org . hamcrest . corematchers . is ( 1000 ) )
[0]: org. junit. assert. assertnotnull ( expectedexception )
[1]: org. junit. assert. assertequals ( expectedexception, actualexception )
[2]: org. junit. assert. assertnull ( expectedexception )
[3]: org. junit. assert. assertequals ( 0, sat. size ( ) )
[4]: org. junit. assert. assertequals ( 1, sat. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( buildsrootfolder . isdirectory ( ) )
[0]: org. junit. assert. asserttrue ( sat. isempty ( ) )
[1]: org. junit. assert. assertequals ( zero, sat. size ( ) )
[2]: org. junit. assert. assertequals ( 0, sat. length )
[3]: org. junit. assert. assertequals ( 1, items. size ( ) )
[4]: org. junit. assert. assertequals ( 0, items. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . double ( 10 ) , sum )
[0]: org. junit. assert. assertequals ( 3, items. size ( ) )
[1]: org. junit. assert. assertequals ( 2, items. size ( ) )
[2]: org. junit. assert. assertequals ( 1, item. size ( ) )
[3]: org. junit. assert. assertthat ( volume. get ( ), org. hamcrest. matchers. is ( java. util. optional. empty ( ) ) )
[4]: org. junit. assert. assertthat ( volume. get ( ). getid ( ), org. hamcrest. matchers. is ( java. util. optional. of ( ) ) )

************

************
tgt: org . junit . assert . assertthat ( amountofcrossings , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertthat ( volume. get ( ). tostring ( ), org. hamcrest. matchers. is ( java. util. optional. empty ( ) ) )
[1]: org. junit. assert. assertthat ( volume. get ( ). tostring ( ), org. hamcrest. matchers. is ( java. util. optional. of ( ) ) )
[2]: org. junit. assert. assertthat ( volume. get ( ). get ( ), org. hamcrest. matchers. is ( java. util. optional. of ( ) ) )
[3]: org. junit. assert. assertequals ( 1, anno4j. findall ( com. github. anno4j. model. impl. resourceobject. class ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, anno4j. findall ( com. github. anno4j. model. impl. resourceobject. class ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected . trim ( ) , actual )
[0]: org. junit. assert. assertnotnull ( anno4j. findall ( com. github. anno4j. model. impl. resourceobject. class ) )
[1]: org. junit. assert. assertequals ( 1, anno4j. findall ( java. lang. string. class ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, anno4j. findall ( com. github. anno4j. model. impl. resourcestring. class ). size ( ) )
[3]: org. junit. assert. assertnotnull ( provider. getnamedclusterbyname ( ncname, metastore ) )
[4]: org. junit. assert. assertnotnull ( provider. getnamedclusterbyname ( ncname, null ) )

************

************
tgt: org . junit . assert . assertequals ( output , history . tostring ( ) )
[0]: org. junit. assert. assertnull ( provider. getnamedclusterbyname ( ncname, metastore ) )
[1]: org. junit. assert. assertnotnull ( provider. getnamedclusterbyname ( ncname, ncname ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( singlequotedstring, ocsvtransformer. getcellcontent ( unquotedstring ) )
[4]: org. junit. assert. assertequals ( unquotedstring, ocsvtransformer. getcellcontent ( unquotedstring ) )

************

************
tgt: org . junit . assert . assertequals ( plot1 , plot2 )
[0]: org. junit. assert. assertequals ( dequotedstring, ocsvtransformer. getcellcontent ( unquotedstring ) )
[1]: org. junit. assert. assertequals ( firstquotedstring, ocsvtransformer. getcellcontent ( unquotedstring ) )
[2]: org. junit. assert. assertequals ( onequotedstring, ocsvtransformer. getcellcontent ( unquotedstring ) )
[3]: org. junit. assert. assertfalse ( result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( 2 , str . size ( ) )
[0]: org. junit. assert. asserttrue ( result )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertnotnull ( allelementslocated )
[4]: org. junit. assert. assertnull ( allelementslocated )

************

************
tgt: org . junit . assert . assertequals ( x . get ( ) , y . get ( ) )
[0]: org. junit. assert. assertequals ( allelementslocated, returned )
[1]: , allelementslocated )
[2]: ) )
[3]: org. junit. assert. assertequals ( samplehandler, challengehandler )
[4]: org. junit. assert. assertequals ( sampleshandler, challengehandler )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( expected ) )
[0]: org. junit. assert. assertequals ( sample handler, challengehandler )
[1]: testtest1 )
[2]: samplehandler ) )
[3]: org. junit. assert. assertequals ( boolean. false, s. getenablecounting ( ) )
[4]: org. junit. assert. assertequals ( true. false, s. getenablecounting ( ) )

************

************
tgt: org . junit . assert . assertfalse ( errors . haserrors ( ) )
[0]: org. junit. assert. assertequals ( boolean. true, s. getenablecounting ( ) )
[1]: org. junit. assert. assertequals ( false. false, s. getenablecounting ( ) )
[2]: org. junit. assert. assertequals ( message, decrypted )
[3]: org. junit. assert. assertequals ( msg, decrypted )
[4]: org. junit. assert. assertequals ( messages, decrypted )

************

************
tgt: org . junit . assert . assertequals ( tracks . get ( 1 ) , shortesttrack )
[0]: org. junit. assert. assertnotnull ( decrypted )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertthat ( actual, is ( equalto ( expected ) ) )
[4]: org. junit. assert. assertthat ( actual, is ( expected ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , cap . get ( 0 ) )
[0]: org. junit. assert. assertequals ( actual, expected )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, ws. isbound ( ) )
[3]: org. junit. assert. assertnull ( binding. get ( ) )
[4]: org. junit. assert. assertequals ( expr. accept ( visitor ), visitresult )

************

************
tgt: org . junit . assert . assertequals ( 1 , message . getmessageid ( ) )
[0]: org. junit. assert. assertequals ( expression. accept ( visitor ), visitresult )
[1]: org. junit. assert. assertequals ( expression, expr. accept ( visitor ) )
[2]: org. junit. assert. assertequals ( expected, expr. accept ( visitor ) )
[3]: org. junit. assert. assertequals ( expr. accept ( visitor ), visitresult )
[4]: org. junit. assert. assertfalse ( validator. hasfailures ( ) )

************

************
tgt: org . junit . assert . assertfalse ( baseclass . addtextareafield ( "field" , "pretty<sp>name" , 55 , 33 ) )
[0]: org. junit. assert. asserttrue ( validator. hasfailures ( ) )
[1]: org. junit. assert. assertnotnull ( validator. hasfailures ( ) )
[2]: org. junit. assert. assertfalse ( validator. hasfailures ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( shortform )

************

************
tgt: org . junit . assert . asserttrue ( terms . isempty ( ) )
[0]: org. junit. assert. assertequals ( iri, shortform )
[1]: org. junit. assert. assertnotnull ( short form )
[2]: org. junit. assert. assertnotnull ( shortforms )
[3]: org. junit. assert. assertequals ( iri, short form )
[4]: org. junit. assert. asserttrue ( userfile. checkowned ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( valid )
[0]: org. junit. assert. asserttrue ( userfile. checkowned ( ""test"" ) )
[1]: org. junit. assert. asserttrue ( userfile. checkowned ( name ) )
[2]: org. junit. assert. asserttrue ( userfile. checkowned ( userfile. location ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertsame ( pool1 , pool2 )
[0]: org. junit. assert. assertequals ( result, expected )
[1]: get the expected ) )
[2]: get the expected )
[3]: get expected )
[4]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( org. hamcrest. corematchers. equalto ( expected ) ) )

************

************
tgt: org . junit . assert . assertnull ( entryrelationship )
[0]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( expected ) )
[1]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( expected
[2]: org. junit. assert. assertthat ( expected, org. hamcrest. corematchers. is ( actual ) )
[3]: org. junit. assert. assertequals ( expected, actual )
[4]: org. junit. assert. assertequals ( 1, dao. maxsize ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( net . time4j . tz . model . ruleslikeberlin1947test . model . isempty ( ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( 0, dao. maxsize ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, store. maxsize ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, dao. maxsize ( ) )
[3]: org. junit. assert. assertequals ( 1, context. maxsize ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, factorybean. createtrustmanagerfactory ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( stack , org . hamcrest . matchers . contains ( 46 , 43 , 45 , 42 ) )
[0]: org. junit. assert. assertequals ( 1, replicas. size ( ) )
[1]: org. junit. assert. assertequals ( 0, replicas. size ( ) )
[2]: org. junit. assert. assertequals ( 2, replicas. size ( ) )
[3]: org. junit. assert. assertnotnull ( streams )
[4]: org. junit. assert. assertequals ( 1, streams. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "clm" , cf . getsegment ( ) )
[0]: org. junit. assert. assertequals ( 0, streams. size ( ) )
[1]: org. junit. assert. assertequals ( 2, streams. size ( ) )
[2]: org. junit. assert. assertequals ( 1, streams. length )
[3]: org. junit. assert. assertequals ( true, processed )
[4]: org. junit. assert. assertequals ( false, processed )

************

************
tgt: org . junit . assert . asserttrue ( rrd1 . equals ( rrd2 ) )
[0]: org. junit. assert. assertequals ( ""a"", buf. tostring ( ) )
[1]: org. junit. assert. assertequals ( null, buf. tostring ( ) )
[2]: org. junit. assert. assertequals ( 0, buf. tostring ( ). length ( ) )
[3]: org. junit. assert. assertequals ( ""1"", buf. tostring ( ) )
[4]: public void output ( ) { }

************

************
tgt: org . junit . assert . assertthat ( results , is ( new java . lang . string [ ] [ ] { new java . lang . string [ ] { "a" , "b" } , new java . lang . string [ ] { "c" , "d" } , new java . lang . string [ ] { "f" , "g" } } ) )
[0]: org. junit. assert. assertnotnull ( twilldiscoveryservice )
[1]: org. junit. assert. assertnotnull ( twilldiscoveryservice. status ( ) )
[2]: org. junit. assert. assertnotnull ( twilldiscoveryservice. getid ( ) )
[3]: org. junit. assert. assertnotnull ( twillnamespace )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( 0 , expressie . aantalelementen ( ) )
[0]: org. junit. assert. assertequals ( currentminute, result )
[1]: org. junit. assert. assertequals ( ( currentminute - 1 ), result )
[2]: org. junit. assert. assertequals ( ( currentminute + 1 ), result )
[3]: org. junit. assert. assertequals ( ( currentminute - 200 ), result )
[4]: org. junit. assert. assertequals ( 0, result )

************

************
tgt: org . junit . assert . asserttrue ( query . evaluate ( rewrite , context ) )
[0]: org. junit. assert. assertequals ( 1, composites. size ( ) )
[1]: org. junit. assert. assertequals ( 0, composites. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), composites )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertnull ( wrapper . getcomment ( ) )
[0]: org. junit. assert. assertequals ( result, transform ( properties ) )
[1]: org. junit. assert. assertequals ( result, converter. transform ( properties ) )
[2]: org. junit. assert. assertequals ( result, converter. transform ( result ) )
[3]: org. junit. assert. assertequals ( result, properties. transform ( result ) )
[4]: org. junit. assert. assertequals ( result, transformer. transform ( result ) )

************

************
tgt: org . junit . assert . assertequals ( expected , testutils . formattedresult . resultfactory . tostring ( rs ) )
[0]: org. junit. assert. assertequals ( expected, devent. getfield ( string ) )
[1]: org. junit. assert. assertequals ( expected, devent. getfield ( 20 ) )
[2]: org. junit. assert. assertequals ( expected, devent. getfield ( null ) )
[3]: org. junit. assert. assertequals ( expected, devent. getfield ( 0 ) )
[4]: org. junit. assert. assertequals ( expected, devent )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, left. compareto ( right ) )
[1]: org. junit. assert. assertequals ( 0, right. compareto ( right ) )
[2]: org. junit. assert. assertequals ( 0, 0. compareto ( right ) )
[3]: org. junit. assert. asserttrue ( ( ( left. compareto ( right ) ) == 0 ) )
[4]: org. junit. assert. asserttrue ( ( ( left. compareto ( right ) ) < 0 ) )

************

************
tgt: org . junit . assert . assertnotnull ( ver )
[0]: org. junit. assert. assertnotnull ( a )
[1]: org. junit. assert. assertnotnull ( a. getresult ( ) )
[2]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )
[3]: org. junit. assert. assertnull ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )
[4]: org. junit. assert. assertnotnull ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )

************

************
tgt: org . junit . assert . assertfalse ( resourcecache . containsvalid ( cachekey , latestmetacard ) )
[0]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. getmessage ( ) )
[1]: org. junit. assert. asserttrue ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )
[2]: org. junit. assert. assertequals ( 1, 1 )
[3]: org. junit. assert. assertequals ( 1, session. size ( ) )
[4]: org. junit. assert. assertequals ( 1, session. count )

************

************
tgt: org . junit . assert . assertfalse ( answer . getresult ( ) )
[0]: org. junit. assert. assertequals ( 1, session. count ( ) )
[1]: ) )
[2]: org. junit. assert. assertnull ( getarchimatemodel ( ) )
[3]: org. junit. assert. assertnull ( root. getarchimatemodel ( ) )
[4]: org. junit. assert. assertnull ( com. archimaticalmodel ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( double . negative_infinity ) == ( com . jogamp . opengl . math . binary16 . unpackdouble ( binary16 . negative_infinity ) ) ) )
[0]: org. junit. assert. assertnotnull ( getarchimatemodel ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( schedule. getoverlap ( 0, 4 ) )
[3]: org. junit. assert. assertnotnull ( schedule. getoverlap ( 0, 2 ) )
[4]: org. junit. assert. assertnotnull ( schedule. getoverlap ( 0, 3 ) )

************

************
tgt: org . junit . assert . asserttrue ( failures . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( schedule. getoverlap ( 0, 0 ) )
[1]: org. junit. assert. assertnotnull ( schedule. getoverlap ( 0, 8 ) )
[2]: org. junit. assert. assertequals ( expected, sqltext. tostring ( ) )
[3]: org. junit. assert. assertequals ( sqltext. tostring ( ), expected, sqltext. tostring ( ) )
[4]: org. junit. assert. assertequals ( sqltext. tostring ( ), expected )

************

************
tgt: org . junit . assert . assertnotnull ( ommetamgr )
[0]: org. junit. assert. assertequals ( sqltext. tostring ( ), expected, test [ 1 ] )
[1]: org. junit. assert. assertequals ( sqltext. tostring ( ), expected, test [ 0 ] )
[2]: org. junit. assert. assertequals ( true, first ( ) )
[3]: org. junit. assert. asserttrue ( first ( ). isempty ( ) )
[4]: org. junit. assert. assertfalse ( first ( ) )

************

************
tgt: org . junit . assert . asserttrue ( destinationjar . exists ( ) )
[0]: org. junit. assert. asserttrue ( first ( ) )
[1]: org. junit. assert. assertfalse ( first ( ). isempty (
[2]: org. junit. assert. assertnotnull ( node )
[3]: org. junit. assert. assertequals ( aleuuid, node. getid ( ) )
[4]: org. junit. assert. assertequals ( aleuuid, node. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( "hello" , result . hello ( ) )
[0]: org. junit. assert. assertequals ( aleuuid, node. tostring ( ) )
[1]: org. junit. assert. assertnull ( node )
[2]: org. junit. assert. assertequals ( 1, number [ 0 ] )
[3]: org. junit. assert. assertequals ( 1, this. collection. size ( ) )
[4]: org. junit. assert. assertequals ( 0, number [ 0 ] )

************

************
tgt: org . junit . assert . assertequals ( expected , boundsql . getsql ( ) )
[0]: org. junit. assert. assertequals ( 1, numbers [ 0 ] )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, vol, 0 )
[3]: org. junit. assert. assertequals ( 1.0, vol, 0.0 )
[4]: org. junit. assert. assertequals ( 1.0, vol, 0 )

************

************
tgt: org . junit . assert . assertequals ( reslocator . stream , res )
[0]: org. junit. assert. assertequals ( 1, vol, 0.0 )
[1]: org. junit. assert. assertequals ( 0.0, vol, 1.0 )
[2]: org. junit. assert. assertnotnull ( person )
[3]: org. junit. assert. assertequals ( 1, person. length )
[4]: org. junit. assert. assertnotnull ( person. array ( ) )

************

************
tgt: org . junit . assert . assertequals ( value , got . getpbigdecimal ( ) . tostring ( ) )
[0]: org. junit. assert. assertequals ( 0, person. length )
[1]: org. junit. assert. assertnotnull ( person. array )
[2]: org. junit. assert. assertequals ( 1, auditedaddresses. size ( ) )
[3]: org. junit. assert. assertequals ( 5, auditedaddresses. size ( ) )
[4]: org. junit. assert. assertequals ( 0, auditedaddresses. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( new org . apache . beam . sdk . io . xml . jaxbcodertest . testtype ( "abc" , 9999 ) , org . apache . beam . sdk . util . coderutils . decodefrombytearray ( coder , encoded ) )
[0]: org. junit. assert. assertequals ( 10, auditedaddresses. size ( ) )
[1]: org. junit. assert. assertnotnull ( auditedaddresses )
[2]: org. junit. assert. assertnull ( discount1 )
[3]: org. junit. assert. assertnotnull ( discount1 )
[4]: org. junit. assert. assertequals ( discount1, request1 )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( null, discount1 )
[1]: org. junit. assert. assertequals ( discount1, null )
[2]: org. junit. assert. asserttrue ( iterator. hasnext ( ) )
[3]: org. junit. assert. assertequals ( true, enforcement )
[4]: org. junit. assert. assertequals ( false, enforcement )

************

************
tgt: org . junit . assert . assertnotnull ( tg )
[0]: org. junit. assert. asserttrue ( enforcement )
[1]: org. junit. assert. assertnotnull ( enforcement )
[2]: org. junit. assert. assertfalse ( enforcement )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( expected . build ( ) , doc )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )
[2]: org. junit. assert. assertequals ( java. util. optional. empty ( ), result )
[3]: org. junit. assert. assertequals ( sb. tostring ( ), sb. tostring ( ) )
[4]: org. junit. assert. assertequals ( sb. tostring ( ), tailer. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( sb. tostring ( ), tailer. output ( ) )
[1]: org. junit. assert. assertequals ( sb. tostring ( ), tailer. next ( ) )
[2]: org. junit. assert. assertnotnull ( sb. tostring ( ) )
[3]: org. junit. assert. assertequals ( s1, org. apache. jackrabbit. oak. plugins. document. journaldiffloadertest. changechildnodes ( ns, s2, builder ) )
[4]: org. junit. assert. assertequals ( s1, org. apache. jackrabbit. oak. plugins. document. journaldiffloadertest. changechildnodes ( ns, s1, builder ) )

************

************
tgt: org . junit . assert . assertequals ( ch . cyberduck . core . nsobjectpathreference . get ( one ) , ch . cyberduck . core . nsobjectpathreference . get ( second ) )
[0]: org. junit. assert. assertequals ( s1, org. apache. jackrabbit. oak. plugins. document. journaldiffloadertest. changechildnodes ( ns, s2, repo ) )
[1]: org. junit. assert. assertequals ( s1, org. apache. jackrabbit. oak. plugins. document. journaldiffloadertest. changechildnodes ( ns, s1, repo ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( dest. getdesttype ( ), null )
[4]: org. junit. assert. assertequals ( dest. getdesttype ( ), expected )

************

************
tgt: org . junit . assert . assertequals ( 0 , berichten . size ( ) )
[0]: org. junit. assert. assertequals ( dest. getdesttype ( ), java. util. optional. of ( src ) )
[1]: org. junit. assert. assertequals ( dest. getdesttype ( ), java. lang. string. class )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( result, null )

************

************
tgt: org . junit . assert . assertequals ( handlerchain . getrequestinterceptors ( ) , java . util . collections . singletonlist ( requestinterceptor ) )
[0]: org. junit. assert. assertequals ( """", result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( """", result )
[3]: org. junit. assert. assertnotnull ( response )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertequals ( text , message )
[0]: org. junit. assert. assertequals ( javax. json. ioexception. class, e. getclass ( ) )
[1]: org. junit. assert. assertequals ( javax. ws. rs. core. service. leesuitbrpservicetest. error, e )
[2]: org. junit. assert. assertequals ( javax. ws. rs. core. service. leesuitbrpservicetest. exception, e )
[3]: org. junit. assert. assertnull ( e )
[4]: org. junit. assert. assertfalse ( accessible )

************

************
tgt: org . junit . assert . assertequals ( 1 , updates . getoperations ( ) . size ( ) )
[0]: org. junit. assert. assertnull ( testreducecompoundkey ( null ) )
[1]: org. junit. assert. assertnull ( testreducebugkey ( null ) )
[2]: org. junit. assert. assertnull ( testreducebotkey ( null ) )
[3]: org. junit. assert. assertnull ( reducecompoundkey ( null ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( server . isstarted ( ) )
[0]: org. junit. assert. asserttrue ( ( channel1 == channel2 ) )
[1]: org. junit. assert. assertequals ( com. oneeyedmen. fakir. defaultfactorytest. classtobefaked. class, factory. createa ( java. lang. string. class ). getclass ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class, factory. createa ( com. oneeyedmen. fakir. defaultfactorytest. classtobefaked. class ). getclass ( ) )
[3]: org. junit. assert. assertequals ( com. oneeyedmen. fakir. defaultfactorytest. classtobefaked. class, factory. createa ( java. lang. string. class ). gettype ( ) )
[4]: org. junit. assert. assertequals ( com. oneeyedmen. fakir. defaultfactorytest. classtobefaked. class, factory. createa ( thing ). getclass ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( driver )
[0]: org. junit. assert. assertequals ( thing, factory. createa ( com. oneeyedmen. fakir. defaultfactorytest. classtobefaked. class ) )
[1]: org. junit. assert. assertnull ( s )
[2]: org. junit. assert. assertnotnull ( s )
[3]: org. junit. assert. assertequals ( s, entity )
[4]: org. junit. assert. assertequals ( s, """" )

************

************
tgt: org . junit . assert . assertthat ( movies . isempty ( ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( s, ""1"" )
[1]: org. junit. assert. asserttrue ( runflag. get ( ) )
[2]: org. junit. assert. assertequals ( expected, runflag. get ( ) )
[3]: org. junit. assert. assertequals ( expected, runflag )
[4]: org. junit. assert. assertequals ( true, runflag. get ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( pathcalculator )
[0]: org. junit. assert. assertnotnull ( runflag. get ( ) )
[1]: org. junit. assert. asserttrue ( ancs. contains ( emb ) )
[2]: org. junit. assert. asserttrue ( ancs. contains ( entity ) )
[3]: org. junit. assert. asserttrue ( ancs. contains ( eub ) )
[4]: org. junit. assert. asserttrue ( acs. contains ( emb ) )

************

************
tgt: org . junit . assert . assertequals ( expected , identity )
[0]: org. junit. assert. asserttrue ( ancs. contains ( e ) )
[1]: org. junit. assert. assertnull ( resultmessage ( result, org. openstack. atlas. api. validation. validators. put ), result. passedvalidation ( ) )
[2]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. validation. validators. put ), result. passedvalidation ( ) )
[3]: org. junit. assert. assertequals ( 1, resultmessage ( result, org. openstack. atlas. api. validation. validators. put ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, resultmessage ( result, org. openstack. atlas. api. validation. validators. put ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , response . err ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, count )
[2]: org. junit. assert. assertequals ( 0, count )
[3]: org. junit. assert. assertequals ( 3, count )
[4]: org. junit. assert. assertequals ( 2, count )

************

************
tgt: org . junit . assert . assertsame ( bytes , deserialisedbytes )
[0]: org. junit. assert. assertequals ( 4, count )
[1]: org. junit. assert. assertequals ( 1, errorcount ( partijrol ) )
[2]: org. junit. assert. assertequals ( org. jboss. forge. addon. shell. parser. commandcompletiontest. quantity, test. getbuffer ( ) )
[3]: org. junit. assert. assertequals ( org. jboss. forge. client. shell. parser. commandcompletiontest. quantity, test. getbuffer ( ) )
[4]: org. junit. assert. assertequals ( org. jboss. forge. compiler. shell. parser. commandcompletiontest. quantity, test. getbuffer ( ) )

************

************
tgt: org . junit . assert . assertnull ( storageservice . getordercross ( "orderid" ) )
[0]: org. junit. assert. assertequals ( org. jboss. forge. console. shell. parser. commandcompletiontest. quantity, test. getbuffer ( ) )
[1]: org. junit. assert. assertequals ( org. jboss. forge. processor. parser. commandcompletiontest. quantity, test. getbuffer ( ) )
[2]: org. junit. assert. assertequals ( 8l, status. getlength ( ) )
[3]: org. junit. assert. assertequals ( 16l, status. getlength ( ) )
[4]: org. junit. assert. assertequals ( 10l, status. getlength ( ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( expectedarray , resultarray ) )
[0]: org. junit. assert. assertequals ( 1l, status. getlength ( ) )
[1]: org. junit. assert. assertequals ( 0l, status. getlength ( ) )
[2]: org. junit. assert. assertequals ( 1, dt. getvalue ( ) )
[3]: org. junit. assert. assertnotnull ( dt. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, dt. getvalue ( ). length )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, dt. getvalue ( ) )
[1]: ) )
[2]: org. junit. assert. assertnull ( facet )
[3]: org. junit. assert. assertequals ( timestamp, timestamp. getnanos ( ) )
[4]: org. junit. assert. assertequals ( timestamps, timestamp. getnanos ( ) )

************

************
tgt: org . junit . assert . assertequals ( assertion , eval )
[0]: org. junit. assert. assertnotnull ( timestamp. getnanos ( ) )
[1]: org. junit. assert. assertequals ( timestamp, documentsnapshot. getnanos )
[2]: org. junit. assert. assertequals ( timestamp, documentsnapshot. getnanos ) )
[3]: org. junit. assert. assertequals ( 1, searchscreenshots. size ( ) )
[4]: org. junit. assert. assertequals ( 0, list. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , cls . getcodeblock ( ) )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertnotnull ( list )
[2]: org. junit. assert. assertequals ( null, list )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, size )

************

************
tgt: org . junit . assert . assertequals ( expected , value )
[0]: org. junit. assert. assertequals ( 0, size )
[1]: org. junit. assert. assertthat ( root, not ( exists ( ) ) )
[2]: org. junit. assert. assertthat ( root, not ( java. io. file. class ) )
[3]: org. junit. assert. assertthat ( root, not ( file ( ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( resultmessage ( result , org . openstack . atlas . api . validation . validators . put ) , result . passedvalidation ( ) )
[0]: )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( expectedempotentop, result )
[3]: org. junit. assert. assertequals ( expectedempotentop. read ( ), result )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertequals ( 1 , counter . count )
[0]: org. junit. assert. assertequals ( expectedempotentop. get ( ), result )
[1]: org. junit. assert. assertnotnull ( property. tostringvalues ( ) )
[2]: org. junit. assert. assertequals ( 0, property. tostringvalues ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, property. tostringvalues ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, property. tostringvalues ( ). length )

************

************
tgt: org . junit . assert . assertnull ( e )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, errors. size ( ) )
[2]: org. junit. assert. assertequals ( 1, plugin. getslowtesttimelimit ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, plugin. getslowtesttimelimit ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1l, plugin. getslowtesttimelimit ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( list . size ( ) , 1 )
[0]: org. junit. assert. assertequals ( 1l, plugin. getslowtesttimelimit ( ) )
[1]: org. junit. assert. assertequals ( 1, plugin. getslowtesttimelimit ( ) )
[2]: org. junit. assert. assertequals ( 0, payload. length )
[3]: org. junit. assert. assertequals ( 1, payload. length )
[4]: org. junit. assert. assertequals ( null, payload )

************

************
tgt: org . junit . assert . assertequals ( 1 , children . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. tostring ( payload ), 0, payload. length )
[1]: ) )
[2]: org. junit. assert. assertthat ( alloffices. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[3]: org. junit. assert. assertnotnull ( container. getdatafiles ( ) )
[4]: org. junit. assert. asserttrue ( container. getdatafiles ( ). isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( originalinput . length ( ) ) < ( result . length ) ) )
[0]: org. junit. assert. asserttrue ( container. getdatafiles ( ). contains ( file ) )
[1]: org. junit. assert. assertequals ( 1, container. getdatafiles ( ). size ( )
[2]: ) )
[3]: org. junit. assert. asserttrue ( com. pi4j. io. gpio. test. gpiopindigitalinputtests. pin. isexported ( ) )
[4]: org. junit. assert. asserttrue ( exportsresource ( null ) )

************

************
tgt: org . junit . assert . assertfalse ( issameparent )
[0]: org. junit. assert. asserttrue ( exportresource ( null ) )
[1]: org. junit. assert. assertfalse ( exportsresource ( null ) )
[2]: org. junit. assert. asserttrue ( exportsresource ( """" ) )
[3]: ) )
[4]: org. junit. assert. assertnull ( file. getcoresession ( ) )

************

************
tgt: org . junit . assert . assertfalse ( visiblecomments . isempty ( ) )
[0]: org. junit. assert. assertequals ( originalnumberofmovies, moviescount )
[1]: org. junit. assert. assertequals ( 1, moviescount )
[2]: org. junit. assert. assertequals ( previousnumberofmovies, moviescount )
[3]: org. junit. assert. assertequals ( oldnumberofmovies, moviescount )
[4]: org. junit. assert. assertequals ( ( originalnumberofmovies + 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( to . isempty ( ) )
[0]: org. junit. assert. assertnull ( formatwithnullstring )
[1]: org. junit. assert. assertequals ( null, formatwithnullstring )
[2]: org. junit. assert. assertnotnull ( formatwithnullstring )
[3]: org. junit. assert. assertequals ( """", formatwithnullstring )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( result, cf )
[3]: org. junit. assert. assertequals ( cf, result )
[4]: , result )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . float ( 1 ) , preferencevalue )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertequals ( 1, events. size ( ) )
[2]: org. junit. assert. assertequals ( 1, root. getvertices ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, set. getvertices ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, set. getvertices ( ). length )

************

************
tgt: org . junit . assert . assertnotnull ( spatial4jpolygon )
[0]: org. junit. assert. assertequals ( expectation, result )
[1]: org. junit. assert. assertequals ( 1, comments. size ( ) )
[2]: org. junit. assert. assertequals ( 2, comments. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( secondissue ), comments )
[4]: org. junit. assert. assertequals ( 0, comments. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . pentaho . di . trans . steps . s3csvinput . s3objectsprovidertest . bucket2_name , actual . getname ( ) )
[0]: org. junit. assert. assertequals ( 1, issues. size ( ) )
[1]: org. junit. assert. assertnotnull ( ks )
[2]: org. junit. assert. assertequals ( null, ks )
[3]: org. junit. assert. assertnull ( ks )
[4]: , ks )

************

************
tgt: org . junit . assert . assertequals ( testdata . canconvert , convertermanager . canconvert ( testdata . fromclass , testdata . syntax , testdata . toclass ) )
[0]: ) )
[1]: org. junit. assert. assertthat ( occurrences. size ( ), is ( 1 ) )
[2]: org. junit. assert. assertthat ( occurrences. size ( ), is ( 0 ) )
[3]: org. junit. assert. assertthat ( occurrences. size ( ), is ( 3 ) )
[4]: org. junit. assert. assertequals ( 1, occurrences. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result . issuccess ( ) )
[0]: org. junit. assert. assertthat ( occurrences. size ( ), is ( 2 ) )
[1]: org. junit. assert. assertnotnull ( a )
[2]: org. junit. assert. assertequals ( 1, a. size ( ) )
[3]: org. junit. assert. assertnotnull ( a. getresult ( ) )
[4]: org. junit. assert. assertequals ( 1, a. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedjsonarray . tostring ( ) , actualjsonarray . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, a. getresult ( ) )
[1]: org. junit. assert. asserttrue ( resultnodes. isempty ( ) )
[2]: org. junit. assert. asserttrue ( resultnodes. equals ( resultnodes ) )
[3]: org. junit. assert. assertequals ( truenodes. size ( ), 1 )
[4]: org. junit. assert. asserttrue ( ( resultnodes. isempty ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( s . contains ( "some<sp>value<sp>of<sp>more<sp>than<sp>ten<sp>characters" ) )
[0]: org. junit. assert. asserttrue ( true )
[1]: org. junit. assert. assertequals ( true, r1. equals ( r2 ) )
[2]: org. junit. assert. assertfalse ( r1. equals ( r2 ) )
[3]: org. junit. assert. assertequals ( 1, users. count ( ) )
[4]: org. junit. assert. assertequals ( status. completed, jobcoordinator. getjobinfowire ( ). getstatus ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . collections . singletonlist ( "abc" ) , items )
[0]: org. junit. assert. assertequals ( status. finished, jobcoordinator. getjobinfowire ( ). getstatus ( ) )
[1]: org. junit. assert. assertequals ( state. completed, jobcoordinator. getjobinfowire ( ). getstatus ( ) )
[2]: org. junit. assert. assertequals ( status. complete, jobcoordinator. getjobinfowire ( ). getstatus ( ) )
[3]: org. junit. assert. assertnull ( jobcoordinator. getjobinfowire ( ). getstatus ( ) )
[4]: org. junit. assert. assertfalse ( org. springframework. flex. config. runtimeenvironment. ishibernate4supportavailable ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedconfiguration , actualconfiguration )
[0]: org. junit. assert. assertnotnull ( org. springframework. flex. config. runtimeenvironment. ishibernate4supportavailable ( ) )
[1]: org. junit. assert. assertnull ( org. springframework. flex. config. runtimeenvironment. ishibernate4supportavailable ( ) )
[2]: org. junit. assert. assertequals ( 1, org. springframework. flex. config. runtimeenvironment. ishibernate4supportavailable ( ) )
[3]: org. junit. assert. assertequals ( 0, org. springframework. flex. config. runtimeenvironment. ishibernate4supportavailable ( ) )
[4]: org. junit. assert. asserttrue ( filter )

************

************
tgt: org . junit . assert . assertthat ( array , org . hamcrest . corematchers . is ( new int [ ] { 2 , 3 , 5 , 7 } ) )
[0]: org. junit. assert. assertequals ( true, filter )
[1]: org. junit. assert. assertfalse ( filter )
[2]: org. junit. assert. assertequals ( instancestatus. deployed_started, this. app. getmysqlvm ( ). getstatus ( ) )
[3]: org. junit. assert. assertequals ( instancestatus. deployed_started, this. application. getmysqlvm ( ). getstatus ( ) )
[4]: org. junit. assert. assertnull ( this. app. getmysqlvm ( ). getstatus ( ) )

************

************
tgt: org . junit . assert . assertnull ( l3 )
[0]: org. junit. assert. assertequals ( instancestatus. deployed_started, this. app. getmysqlvm ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( persister. getoutputdirectory ( ) )
[3]: org. junit. assert. assertnotnull ( workdir. getoutputdirectory ( ) )
[4]: org. junit. assert. assertnotnull ( helper. getoutputdirectory ( ) )

************

************
tgt: org . junit . assert . assertequals ( value , result )
[0]: org. junit. assert. assertnull ( converter. converttomodel ( null, java. lang. enum. class, null ) )
[1]: org. junit. assert. assertequals ( null, converter. converttomodel ( null, java. lang. enum. class, null ) )
[2]: org. junit. assert. assertnull ( converter. converttomodel ( null, "<. null, null ) )
[3]: org. junit. assert. assertequals ( null, converter. converttomodel ( null, java. util. date. class, null ) )
[4]: org. junit. assert. assertnull ( converter. converttomodel ( null, java. util. list. class, null ) )

************

************
tgt: org . junit . assert . assertequals ( "b" 0 , response . getsource ( ) . get ( "b" 3 ) )
[0]: org. junit. assert. assertequals ( 0, contexts. size ( ) )
[1]: org. junit. assert. assertequals ( 1, contexts. size ( ) )
[2]: org. junit. assert. assertequals ( list ( testgraph1. startnode ), contexts )
[3]: org. junit. assert. assertequals ( list ( testgraph1. startnode ), contexts. get ( 0 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( 0, org. libsodium. jni. sodium. crypto_box_seal_open ( message, plaintext, 0, tot ) )
[1]: org. junit. assert. assertequals ( 0, org. libsodium. jni. sodium. crypto_box_seal_open ( message, plaintext, 0, plaintext. length ) )
[2]: org. junit. assert. assertequals ( 0, org. libsodium. jni. sodium. crypto_box_seal_open ( message, plaintext, 0, tot_key ) )
[3]: org. junit. assert. assertequals ( 0, org. libsodium. jni. sodium. crypto_box_seal_open ( message, plaintext, 0, publickeylen, null ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), t. gettype ( ) )

************

************
tgt: org . junit . assert . assertequals ( 7 , bean . getintfield ( ) )
[0]: org. junit. assert. assertequals ( com. erudika. para. utils. utils. gettype ( ), t )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), t. gettype ( ) )
[2]: org. junit. assert. assertnotnull ( t. gettype ( ) )
[3]: org. junit. assert. assertequals ( com. erudika. para. utils. utils. type ( ), t )
[4]: org. junit. assert. assertequals ( result. fail, handler. apply ( item ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , scores . size ( ) )
[0]: org. junit. assert. assertequals ( result. fail, parser. apply ( item ) )
[1]: org. junit. assert. assertequals ( result. fail, builder. apply ( item ) )
[2]: org. junit. assert. assertequals ( result. fail, instance. apply ( item ) )
[3]: ) )
[4]: org. junit. assert. assertthat ( domainarchivedeployer. deploypackagedartifact ( org. mule. runtime. module. deployment. internal. domainarchivedeployertestcase. domain_zip_path, empty ( ) ), org. hamcrest. matchers. is ( mockdomain ) )

************

************
tgt: org . junit . assert . assertequals ( sampleobject , clone )
[0]: org. junit. assert. assertnotnull ( domainarchivedeployer. deploypackagedartifact ( org. mule. runtime. module. deployment. internal. domainarchivedeployertestcase. domain_zip_path, empty ( ) ) )
[1]: org. junit. assert. assertthat ( domainarchivedeployer. deploypackagedartifact ( org. mule. runtime. module. deployment. internal. domainarchivedeployertestcase. domain_zip_path, empty ( ) ), org. hamcrest. matchers. equalto ( mockdomain ) )
[2]: org. junit. assert. assertthat ( domainarchivedeployer. deploypackagedartifact ( org. mule. runtime. module. deployment. internal. domainarchived_2ertestcase. domain_zip_path, empty ( ) ), org. hamcrest. matchers. is ( mockdomain ) )
[3]: org. junit. assert. assertthat ( domainarchivedeployer. deploypackagedartifact ( org. mule. runtime. module. deployment. internal. domainarchived actorertestcase. domain_zip_path, empty ( ) ), org. hamcrest. matchers. is ( mockdomain ) )
[4]: org. junit. assert. assertequals ( new java. lang. long ( 1 ), result )

************

************
tgt: org . junit . assert . assertequals ( 3 , org . openscience . cdk . tools . manipulator . reactionmanipulator . getallatomcontainers ( reaction ) . size ( ) )
[0]: org. junit. assert. assertequals ( new java. lang. long ( 1l ), result )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), result )
[2]: org. junit. assert. assertequals ( new java. lang. long ( 0 ), result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( 1, tuples. length )

************

************
tgt: org . junit . assert . assertequals ( s , v . tostring ( ) )
[0]: org. junit. assert. assertequals ( 2, tuples. length )
[1]: org. junit. assert. assertequals ( 0, tuples. length )
[2]: org. junit. assert. assertequals ( 3, tuples. length )
[3]: )
[4]: org. junit. assert. assertequals ( 1, countstream )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 0, countstream )
[1]: org. junit. assert. assertequals ( 3, countstream )
[2]: org. junit. assert. assertequals ( chargingscheduleperiod. getchargingscheduleperiod ( ). length, chargingscheduleperiod. length )
[3]: org. junit. assert. assertequals ( chargingscheduleperiod, chargingscheduleperiod. getchargingscheduleperiod ( ) )
[4]: org. junit. assert. assertequals ( chargingscheduleperiod. getchargingscheduleperiod ( ), chargingscheduleperiod )

************

************
tgt: org . junit . assert . assertequals ( java . lang . integer . valueof ( 1000 ) , result )
[0]: org. junit. assert. assertequals ( chargingscheduleperiod [ 0 ], chargingscheduleperiod. getchargingscheduleperiod ( ) )
[1]: org. junit. assert. assertequals ( chargingscheduleperiod [ 0 ], chargingscheduleperiod. getchargingscheduleperiod ( ). length )
[2]: org. junit. assert. assertnotnull ( found )
[3]: org. junit. assert. assertequals ( grammar, found )
[4]: org. junit. assert. assertequals ( null, found )

************

************
tgt: org . junit . assert . assertfalse ( false )
[0]: org. junit. assert. assertnull ( found )
[1]: org. junit. assert. assertequals ( grammar, found )
[2]: org. junit. assert. assertthat ( model2. getmyenum ( ), org. hamcrest. corematchers. is ( java. lang. long. valueof ( 2 ) ) )
[3]: org. junit. assert. assertthat ( model2. getmyenum ( ), org. hamcrest. corematchers. is ( java. lang. integer. valueof ( 2 ) ) )
[4]: org. junit. assert. assertthat ( model2. getmyenum ( ), org. hamcrest. corematchers. is ( java. lang. long. valueof ( 1 ) ) )

************

************
tgt: org . junit . assert . assertnull ( demomode . getdemouploadfile ( null ) )
[0]: org. junit. assert. assertthat ( model2. getmyenum ( ), org. hamcrest. corematchers. is ( java. lang. long. valueof ( 20 ) ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( givenvalue, convertedvalue )
[3]: org. junit. assert. assertequals ( convertedvalue, givenvalue )
[4]: org. junit. assert. assertequals ( givenvalue, valueasstr )

************

************
tgt: org . junit . assert . assertequals ( 1 , dbhandler . getdataelementcount ( ) )
[0]: org. junit. assert. assertequals ( givenvalue, givenvalue )
[1]: org. junit. assert. assertequals ( givenvalue, givenvalue, convertedvalue )
[2]: org. junit. assert. assertequals ( 1, fixture. mark ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, fixture. mark ( ). length )
[4]: org. junit. assert. assertequals ( 0, fixture. mark ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result . getresult ( ) )
[0]: org. junit. assert. assertequals ( 1, fixture. mark ( ) )
[1]: org. junit. assert. assertequals ( 0, fixture. mark ( ). length )
[2]: org. junit. assert. asserttrue ( ( expecteddelayinseconds > expecteddelayinseconds ) )
[3]: org. junit. assert. asserttrue ( ( expecteddelayinseconds > 0 ) )
[4]: org. junit. assert. asserttrue ( ( expecteddelayinseconds <= 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. asserttrue ( ( expecteddelayinseconds <= ( report. calculateddelayinseconds ) ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, methodreturnsint ( ) )
[3]: org. junit. assert. assertequals ( 1, methodreturnsint ( ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), methodreturnsint ( ) )

************

************
tgt: org . junit . assert . asserttrue ( containsactivationkeyvaluepair ( mdb , "destinationtype" , "shouldnotbeoverriddenstring" ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), methodreturnsint ( ) )
[1]: org. junit. assert. assertequals ( 0, event. methodreturnsint ( ) )
[2]: org. junit. assert. assertequals ( 1, dao. maxsize ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, dao. maxsize ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, store. maxsize ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( result . isempty ( ) , is ( true ) )
[0]: org. junit. assert. assertequals ( 1, dao. maxsize ( ) )
[1]: org. junit. assert. assertequals ( 1, context. maxsize ( ). size ( ) )
[2]: org. junit. assert. asserttrue ( doy. equals ( test ) )
[3]: org. junit. assert. assertfalse ( doy. equals ( test ) )
[4]: org. junit. assert. assertfalse ( test. equals ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( mbmessages . isempty ( ) )
[0]: org. junit. assert. assertequals ( false, test. equals ( null ) )
[1]: org. junit. assert. assertfalse ( doy. equals ( test ) )
[2]: org. junit. assert. assertequals ( 1.0, instance. max ( ), 0.0 )
[3]: org. junit. assert. assertequals ( 1, instance. max ( ) )
[4]: org. junit. assert. assertequals ( 1, instance. max ( ), 0.0 )

************

************
tgt: org . junit . assert . assertequals ( 123 , table . getitemheight ( ) )
[0]: org. junit. assert. assertequals ( 1, instance. max ( ), 0 )
[1]: org. junit. assert. assertequals ( 1.0, instance. max ( ), 0 )
[2]: org. junit. assert. assertequals ( 1l, datumliteral. alsinteger ( ) )
[3]: org. junit. assert. assertequals ( 1, datumliteral. alsinteger ( ) )
[4]: org. junit. assert. assertequals ( 0, datumliteral. alsinteger ( ) )

************

************
tgt: org . junit . assert . assertfalse ( rpcserviceavailable ( ) )
[0]: org. junit. assert. assertequals ( 0l, datumliteral. alsinteger ( ) )
[1]: org. junit. assert. assertequals ( 1l, datumliteral. alsinteger ( ). length )
[2]: org. junit. assert. assertnotnull ( passedsalt )
[3]: org. junit. assert. assertnotnull ( d )
[4]: org. junit. assert.null ( d )

************

************
tgt: org . junit . assert . assertequals ( 5 , surroundingcells . size ( ) )
[0]: org. junit. assert. null, d )
[1]: null, d )
[2]: null )
[3]: org. junit. assert. assertequals ( 0, results. size ( ) )
[4]: org. junit. assert. assertnotnull ( term )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( term )
[1]: org. junit. assert. assertnotnull ( term, term )
[2]: org. junit. assert. assertnotnull ( term )
[3]: ) )
[4]: org. junit. assert. assertequals ( pagenumber, this. request. getpagenumber ( ) )

************

************
tgt: org . junit . assert . assertthat ( command . accept ( state ) , org . hamcrest . core . is . is ( false ) )
[0]: org. junit. assert. assertsame ( pagenumber, this. request. getpagenumber ( ) )
[1]: org. junit. assert. assertequals ( pagenumber, this. adapter. getpagenumber ( ) )
[2]: org. junit. assert. assertnotnull ( this. request. getpagenumber ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, players. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedcommand , actualcommand )
[0]: org. junit. assert. assertequals ( 0, players. size ( ) )
[1]: org. junit. assert. assertequals ( 1, players. toarray ( ). length )
[2]: org. junit. assert. assertequals ( 1, players. isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, players. length )
[4]: org. junit. assert. assertequals ( 1, events. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( found )
[0]: org. junit. assert. assertequals ( 0, events. size ( ) )
[1]: org. junit. assert. assertequals ( expected, jsoupellipse )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. assertequals ( expected, response )
[4]: org. junit. assert. assertequals ( path. tostring ( ), result. tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( showing , org . hamcrest . matchers . is ( true ) )
[0]: org. junit. assert. assertequals ( result. tostring ( ), path. tostring ( ) )
[1]: org. junit. assert. assertequals ( string_1, result. tostring ( ) )
[2]: org. junit. assert. assertequals ( ""foo"", result. tostring ( ) )
[3]: org. junit. assert. assertequals ( null, result. tostring ( ) )
[4]: org. junit. assert. assertequals ( k, mfilesystem. getstatus ( uri ). tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( false , test . equals ( other ) )
[0]: org. junit. assert. assertequals ( k, mfilesystem. getstatus ( uri ). get ( ) )
[1]: org. junit. assert. assertequals ( k, mfilesystem. getstatus ( uri ). size ( ) )
[2]: org. junit. assert. assertequals ( k, mfilesystem. getstatus ( uri ). getname ( ) )
[3]: org. junit. assert. assertequals ( k, mfilesystem. getstatus ( uri ). getid ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. class, options. tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( row . getvalue ( "ref1" ) . getstring ( ) , org . hamcrest . core . is . is ( uuid1 ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), options )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), options. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), options )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), properties )
[4]: org. junit. assert. assertthat ( found. getid ( ), org. hamcrest. corematchers. is ( id ) )

************

************
tgt: org . junit . assert . asserttrue ( smssettings . isconfigured ( ) )
[0]: org. junit. assert. assertthat ( found. getid ( ), org. hamcrest. corematchers. is ( statusentity ) )
[1]: org. junit. assert. assertthat ( found. getid ( ), org. hamcrest. corematchers. is ( getid ( ) ) )
[2]: org. junit. assert. assertequals ( statusentity. getid ( ), found. getid ( ) )
[3]: org. junit. assert. assertnotnull ( found. getid ( ) )
[4]: org. junit. assert. assertequals ( 1, association. getatomcount ( ) )

************

************
tgt: org . junit . assert . assertequals ( result . size ( ) , 2 )
[0]: org. junit. assert. assertequals ( 0, association. getatomcount ( ) )
[1]: org. junit. assert. assertequals ( 3, association. getatomcount ( ) )
[2]: org. junit. assert. assertequals ( 6, association. getatomcount ( ) )
[3]: org. junit. assert. assertequals ( 5, association. getatomcount ( ) )
[4]: org. junit. assert. assertnull ( repository. validate ( io. motown. identificationauthorization. authorizationservice. identifying_token, io. motown. identificationauthorization. authorizationservice. charging_station_id ) )

************

************
tgt: org . junit . assert . assertequals ( result , true )
[0]: org. junit. assert. assertfalse ( repository. validate ( io. motown. identificationauthorization. authorizationservice. identifying_token, io. motown. identificationauthorization. authorizationservice. charging_station_id ). isvalid ( ) )
[1]: org. junit. assert. assertfalse ( repo. validate ( io. motown. identificationauthorization. authorizationservice. identifying_token, io. motown. identificationauthorization. authorizationservice. charging_station_id ). isvalid ( ) )
[2]: org. junit. assert. assertequals ( 0, repository. validate ( io. motown. identificationauthorization. authorizationservice. identifying_token, io. motown. identificationauthorization. authorizationservice. charging_station_id ). length )
[3]: org. junit. assert. assertequals ( 0, repository. validate ( io. motown. identificationauthorization. authorizationservice. identifying_token, io. motown. identificationauthorization. authorizationservice. charging_station_id ). size ( )
[4]: org. junit. assert. assertequals ( 1, event. ischecked ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( person )
[0]: org. junit. assert. assertequals ( null, event. ischecked ( ) )
[1]: org. junit. assert. assertequals ( 0, event. ischecked ( ) )
[2]: org. junit. assert. assertsame ( event. ischecked ( ), null )
[3]: org. junit. assert. assertsame ( event. ischecked ( ), null, null )
[4]: org. junit. assert. assertnotnull ( org. apache. shardingsphere. shardingjdbc. orchestration. internal. circuit. metadata. circuitbreakerdatabasemetadata ( ) )

************

************
tgt: org . junit . assert . assertthat ( request . headers . get ( httpconstants . header_content_type ) , org . hamcrest . corematchers . equalto ( httpconstants . application_json_with_charset_utf8 ) )
[0]: org. junit. assert. assertnotnull ( org. apache. shardingsphere. shardingjdbc. orchestration. internal. circuit. metadata. circuitbreakerdatabasemetadata. getmetadata ( ) )
[1]: org. junit. assert. assertequals ( 1, org. apache. shardingsphere. shardingjdbc. orchestration. internal. circuit. metadata. getmetadata ( ). getcolumncount ( ) )
[2]: org. junit. assert. assertthat ( org. apache. shardingsphere. shardingjdbc. orchestration. internal. circuit. metadata. circuitbreakerdatabasemetadata ( ), org. hamcrest. corematchers. is ( 1 ) )
[3]: org. junit. assert. assertequals ( 1, org. apache. shardingsphere. shardingjdbc. orchestration. internal. circuit. metadata. getmetadata ( ). getcolumncount ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedhashes . toarray ( ) , actualhashes . toarray ( ) )
[0]: org. junit. assert. assertfalse ( result )
[1]: org. junit. assert. assertequals ( false, result )
[2]: org. junit. assert. assertthat ( result, org )
[3]: , result )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( e instanceof org . apache . jena . arq . querybuilder . e_struuid ) )
[0]: org. junit. assert. assertequals ( created, got )
[1]: org. junit. assert. assertequals ( 1, activitylist. size ( ) )
[2]: org. junit. assert. assertequals ( 1, activitieslist. size ( ) )
[3]: org. junit. assert. assertequals ( 0, activitylist. size ( ) )
[4]: org. junit. assert. assertequals ( 1, actlist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 9 , classpathurls . length )
[0]: org. junit. assert. assertequals ( 1, activelist. size ( ) )
[1]: org. junit. assert. assertequals ( true, resultaat. issuccesvol ( ) )
[2]: org. junit. assert. assertequals ( 1, resultaat. issuccesvol ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, resultaat. issuccesvol ( ) )
[4]: org. junit. assert. assertequals ( true, resultaat. issuccesvol ( ). isempty ( ) )

************

************
tgt: org . junit . assert . assertnull ( cause )
[0]: org. junit. assert. assertequals ( false, resultaat. issuccesvol ( ) )
[1]: org. junit. assert. assertnull ( ind. put ( buf, v ) )
[2]: org. junit. assert. assertfalse ( ind. put ( buf, v ) )
[3]: org. junit. assert. assertnull ( ind. put ( buf ) )
[4]: org. junit. assert. assertnull ( ind. put ( buf, v, v ) )

************

************
tgt: org . junit . assert . assertnotnull ( vertex )
[0]: org. junit. assert. assertnull ( ind. put ( buf [ buf ], v ) )
[1]: org. junit. assert. assertequals ( 0, ctx. opensessionas ( java. lang. string. class ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), ctx. type )
[3]: org. junit. assert. assertequals ( 0, ctx. opensessionas ( null ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, ctx. opensessionas ( java. lang. string. class. getname ( ) ). length )

************

************
tgt: org . junit . assert . assertnotnull ( mapper . hashcode ( ) )
[0]: type ) )
[1]: org. junit. assert. assertnotnull ( block. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 1, block. getvalue ( ) )
[3]: org. junit. assert. assertequals ( null, block. getvalue ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , g . querydescendants ( obj ) . size ( ) )
[0]: )
[1]: org. junit. assert. assertthat ( org. diirt. util. array. listnumbers. listnumbers. binarysearchvalueorlower ( values, 3 ), equalto ( 0 ) )
[2]: org. junit. assert. assertthat ( org. diirt. util. array. listnumbers. listnumbers. binarysearchvalueorlower ( values, 3 ), equalto ( 1 ) )
[3]: org. junit. assert. assertthat ( org. diirt. util. array. listnumbers. listnumbers. binarysearchvalueorlower ( values, 3 ), equalto ( 9 ) )
[4]: org. junit. assert. assertthat ( org. diirt. util. array. listnumbers. listnumbers. binarysearchvalueorlower ( values, 3 ), equalto ( ( - 1 ) ) )

************

************
tgt: org . junit . assert . assertthat ( resolver . resolve ( com . spotify . dns . retainingdnssrvresolvertest . fqdn ) , org . hamcrest . matchers . equalto ( nodes1 ) )
[0]: org. junit. assert. assertthat ( org. diirt. util. array. listnumbers. listnumbers. binarysearchvalueorlower ( values, ( - 1 ) ), equalto ( 0 ) )
[1]: org. junit. assert. assertequals ( shell, item. gettext ( ) )
[2]: org. junit. assert. assertequals ( item. gettext ( ), item. tostring ( ) )
[3]: org. junit. assert. assertequals ( 0, item. gettext ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( item. gettext ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , app . executeapplication ( args ) )
[0]: org. junit. assert. assertequals ( item. gettext ( ), item. getmessage ( ) )
[1]: org. junit. assert. assertnotnull ( maxwidth )
[2]: org. junit. assert. assertnull ( maxwidth )
[3]: org. junit. assert. assertequals ( maxwidth )
[4]: org. junit. assert. assertnull ( maxwidth )

************

************
tgt: org . junit . assert . assertequals ( expectedvalues , actualvalues )
[0]: org. junit. assert. assertnotnull ( maxwidth )
[1]: org. junit. assert. assertnotnull ( field. getzero ( ) )
[2]: org. junit. assert. assertequals ( 0, field. getzero ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, field. getzero ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( field. getzero ( ). get ( mapentry. getkey ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( org . sonar . plugins . delphi . antlr . analyzer . impl . illegalargumentexception . class , e . getclass ( ) )
[0]: org. junit. assert. assertequals ( 1, field. getzero ( ). length )
[1]: org. junit. assert. asserttrue ( opennlp. tools. namefind. bilounamefindersequencevalidatortest. validator. validsequence ( 1, inputsequence, outcomessequence, outcome ) )
[2]: org. junit. assert. asserttrue ( opennlp. tools. namefind. bilounamefindersequencevalidatortest. validator. validsequence ( 3, inputsequence, outcomessequence, outcome ) )
[3]: org. junit. assert. asserttrue ( opennlp. tools. namefind. bilounamefindersequencevalidatortest. validator. validsequence ( 2, inputsequence, outcomessequence, outcome ) )
[4]: org. junit. assert. asserttrue ( opennlp. tools. namefind. bilounamefindersequencevalidatortest. validator. validsequence ( 0, inputsequence, outcomessequence, outcome ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , readrecordtype . getfieldtypeentries ( ) . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( empty, result )
[2]: org. junit. assert. assertequals ( new java. util. hashset < java. lang. character > ( empty, ab ), result )
[3]: org. junit. assert. assertequals ( new java. util. hashset < java. lang. character > ( empty. toarray ( ) ), result )
[4]: org. junit. assert. assertequals ( new java. util. hashset < java. lang. character > ( empty, a, b ), result )

************

************
tgt: org . junit . assert . assertnull ( profile . getlinkedid ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. < java. lang. character > emptylist ( ), result )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( dlg ), a. getcredentials ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( dlg ), java. util. arrays. aslist ( dlg ) )
[3]: org. junit. assert. assertequals ( 1, dlg. getcredentials ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), java. util. arrays. aslist ( dlg ) )

************

************
tgt: org . junit . assert . assertequals ( state , riakcluster . state . shutdown )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), java. util. collections. emptylist ( ) )
[1]: org. junit. assert. assertnotnull ( stroke )
[2]: org. junit. assert. assertequals ( n, session2. getpath ( ) )
[3]: org. junit. assert. assertnotnull ( n2. getpath ( ) )
[4]: org. junit. assert. assertsame ( n, session2. getpath ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( n, session. getpath ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( arr, arr. tensoralongdimension ( 0, 1 ) )
[3]: org. junit. assert. assertequals ( testcount, totallen )
[4]: org. junit. assert. assertequals ( testcount [ i ], totallen )

************

************
tgt: org . junit . assert . assertequals ( code , generated )
[0]: org. junit. assert. assertequals ( testcount. size ( ), totallen )
[1]: org. junit. assert. assertequals ( ( totallen + i ), totallen )
[2]: org. junit. assert. assertequals ( testcount, totallen, totallen )
[3]: org. junit. assert. assertequals ( text, script )
[4]: org. junit. assert. assertequals ( script, text )

************

************
tgt: org . junit . assert . assertthat ( latest . size ( ) , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert. assertequals ( string, script )
[1]: org. junit. assert. assertequals ( test, script )
[2]: org. junit. assert. assertequals ( body, script )
[3]: org. junit. assert. assertnotnull ( configurationserviceclientsearched )
[4]: org. junit. assert. assertequals ( configurationserviceclients. get ( ), configurationserviceclientsearched )

************

************
tgt: org . junit . assert . assertequals ( r1 , r2 )
[0]: org. junit. assert. assertequals ( configurationserviceclients. getid ( ), configurationserviceclientsearched )
[1]: org. junit. assert. assertnotnull ( at. gettemplate ( ) )
[2]: org. junit. assert. assertequals ( addresstemplate. gettemplate, at. gettemplate ( ) )
[3]: org. junit. assert. assertequals ( addresstemplate. gettemplate ( ), at )
[4]: org. junit. assert. assertequals ( addresstemplate, at. gettemplate ( ) )

************

************
tgt: org . junit . assert . assertthat ( requestedshutdowncallable . call ( ) , org . hamcrest . corematchers . equalto ( false ) )
[0]: org. junit. assert. assertnull ( at. gettemplate ( ) )
[1]: org. junit. assert. assertequals ( 1, actions. size ( ) )
[2]: org. junit. assert. assertequals ( 0, actions. size ( ) )
[3]: org. junit. assert. assertnotnull ( actions )
[4]: , actions )

************

************
tgt: org . junit . assert . assertequals ( control , test )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, loadmodules. size ( ) )
[2]: org. junit. assert. assertequals ( 0, simplefactory. getnumidle ( ) )
[3]: org. junit. assert. assertequals ( 0, obj. getnumidle ( ) )
[4]: org. junit. assert. assertequals ( 0, bean. getnumidle ( ) )

************

************
tgt: org . junit . assert . assertequals ( value , actualobjects . get ( 0 ) )
[0]: org. junit. assert. assertequals ( 0, identpool. getnumidle ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, values ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, events. values ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, values ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( eventhandler . isjobsucceeded ( ) , is ( false ) )
[0]: org. junit. assert. assertequals ( 1, initcontents. values ( ). size ( )
[1]: org. junit. assert. assertequals ( 0, initcontents. values ( ). size ( )
[2]: org. junit. assert. assertequals ( 0, validationfailures. getnumberofmessages ( ) )
[3]: org. junit. assert. assertequals ( 1, validationfailures. getnumberofmessages ( ) )
[4]: org. junit. assert. asserttrue ( ( ( validationfailures. getnumberofmessages ( ) ) > 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , ctx . a )
[0]: org. junit. assert. assertequals ( 3, validationfailures. getnumberofmessages ( ) )
[1]: org. junit. assert. asserttrue ( ( ( validationfailures. getnumberofmessages ( ) ) == 0 ) )
[2]: org. junit. assert. assertequals ( 1, args. length )
[3]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), permissions. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), permissions )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( java. util. arrays. tostring ( contents ), permissions )
[1]: org. junit. assert. assertnotnull ( permissions. tostring ( ) )
[2]: org. junit. assert. assertequals ( com. google. common. collect. immutableset. of ( ), permissions )
[3]: org. junit. assert. assertequals ( id, sessions. get ( id ) )
[4]: org. junit. assert. assertnotnull ( sessions. get ( id ) )

************

************
tgt: org . junit . assert . assertfalse ( decoder . consume ( buffer ) )
[0]: org. junit. assert. assertnotnull ( snapshot. getvalue ( ) )
[1]: org. junit. assert. assertequals ( snapshot, childeventlistener. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 1, snapshot. getvalue ( ) )
[3]: org. junit. assert. assertequals ( snapshot. getvalue ( ), childeventlistener )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( intercepted . get ( ) )
[0]: org. junit. assert. assertequals ( es. getaverageduration ( ), 3 )
[1]: org. junit. assert. assertequals ( es, es. getaverageduration ( ) )
[2]: org. junit. assert. assertequals ( 3, es. getaverageduration ( ) )
[3]: org. junit. assert. assertequals ( 1, es. getaverageduration ( ) )
[4]: org. junit. assert. assertequals ( 6, es. getaverageduration ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , workflows . size ( ) )
[0]: org. junit. assert. assertequals ( 0, out. size ( ) )
[1]: org. junit. assert. assertequals ( 0, out. errors. size ( ) )
[2]: org. junit. assert. assertequals ( 0, out. output. size ( ) )
[3]: org. junit. assert. assertequals ( 0, out. list. size ( ) )
[4]: org. junit. assert. assertequals ( 0, out. collection. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedvalue , newvalue )
[0]: org. junit. assert. assertnull ( fileextension )
[1]: org. junit. assert. assertnotnull ( fileextension )
[2]: org. junit. assert.null ( fileextension )
[3]: org. junit. assert. null, fileextension )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ! result ) )
[0]: org. junit. assert. asserttrue ( alg. execute ( m ) )
[1]: org. junit. assert. assertequals ( 1, alg. execute ( m ) )
[2]: org. junit. assert. assertequals ( i, next )
[3]: org. junit. assert. asserttrue ( ( i == next ) )
[4]: org. junit. assert. asserttrue ( ( i <= next ) )

************

************
tgt: org . junit . assert . assertequals ( false , test5 . equals ( null ) )
[0]: org. junit. assert. asserttrue ( ( i > next ) )
[1]: org. junit. assert. asserttrue ( ( i!= next ) )
[2]: org. junit. assert. assertthat ( minimumbalanceprincipal, org. hamcrest. corematchers. is ( s ) )
[3]: org. junit. assert. assertnotnull ( minimumbalanceprincipal )
[4]: org. junit. assert. assertequals ( september20thdetails, minimumbalanceprincipal )

************

************
tgt: org . junit . assert . assertequals ( 4 , counter )
[0]: org. junit. assert. assertequals ( september13thdetails, minimumbalanceprincipal )
[1]: ) )
[2]: org. junit. assert. assertthat ( uk. org. lidalia. slf4jtest. testloggerfactory. getallloggingevents ( ), org. hamcrest. corematchers. is ( 1 ) )
[3]: org. junit. assert. assertequals ( uk. org. lidalia. slf4jtest. loggingevent. getallloggingevents ( ). size ( ), 1 )
[4]: org. junit. assert. assertequals ( 1, uk. org. lidalia. slf4jtest. testloggerfactory. getallloggingevents ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( stopped )
[0]: org. junit. assert. assertequals ( uk. org. lidalia. slf4jtest. loggingevent. getallloggingevents ( ), 1 )
[1]: ) )
[2]: org. junit. assert. assertequals ( newip, response. get ( 0 ) )
[3]: org. junit. assert. assertnotnull ( response. get ( 0 ) )
[4]: org. junit. assert. assertnull ( response. get ( 0 ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: get ( 0 ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( str, exception. getmessage ( ) )
[3]: org. junit. assert. assertequals ( null, ex. waitforfaultmessage ( ) )
[4]: org. junit. assert. assertequals ( faulthandler, ex. waitforfaultmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( b , a )
[0]: org. junit. assert. assertnull ( ex. waitforfaultmessage ( ) )
[1]: org. junit. assert. assertequals ( 0, ex. waitforfaultmessage ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( config. construct ( java. lang. string. class ) )
[4]: org. junit. assert. assertequals ( java. lang. string. class, config. construct ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , impl . ensureall ( true ) )
[0]: org. junit. assert. assertequals ( null, config. construct ( java. lang. string. class ) )
[1]: org. junit. assert. assertnull ( config. construct ( java. lang. string. class ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class, config. construct ( java. lang. object. class ) )
[3]: org. junit. assert. assertthat ( spoondelegates. gethostname ( ), org. hamcrest. corematchers. equalto ( org. pentaho. di. ui. spoon. sharedobjectsyncutiltest. after_sync_value ) )
[4]: org. junit. assert. assertthat ( spoondelegates. gethostname ( ), org. hamcrest. matchers. equalto ( org. pentaho. di. ui. spoon. sharedobjectsyncutiltest. after_sync_value ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertthat ( slaondelegates. gethostname ( ), org. hamcrest. corematchers. equalto ( org. pentaho. di. ui. spoon. sharedobjectsyncutiltest. after_sync_value ) )
[1]: org. junit. assert. assertthat ( skondelegates. gethostname ( ), org. hamcrest. corematchers. equalto ( org. pentaho. di. ui. spoon. sharedobjectsyncutiltest. after_sync_value ) )
[2]: org. junit. assert. assertthat ( s. gethostname ( ), org. hamcrest. corematchers. equalto ( org. pentaho. di. ui. spoon. sharedobjectsyncutiltest. after_sync_value ) )
[3]: org. junit. assert. assertnotnull ( doc )
[4]: org. junit. assert. assertnotnull ( doc. getproperty ( 333l ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, doc. getproperty ( 333l ) )
[1]: type ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, tasks. size ( ) )
[4]: org. junit. assert. assertequals ( 2, tasks. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( typeargument . qname ( ) , org . hamcrest . matchers . equalto ( org . robobinding . codegen . apt . element . integer . class . getname ( ) ) )
[0]: org. junit. assert. assertequals ( 0, tasks. size ( ) )
[1]: org. junit. assert. assertnotnull ( tasks )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, client. listprivilegesbyrolename ( requestorusername, rolename, null, null ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, client. listprivilegesbyrolename ( requestorusername, rolename, ""name"", null, null ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , message )
[0]: org. junit. assert. assertequals ( 1, client. listprivilegesbyrolename ( requestorusername, rolename, ""name"", queryprivilege ). size ( ) )
[1]: org. junit. assert. assertequals ( com. google. common. collect. sets. newhashset ( queryprivilege ), listprivilegesbyrolename ( requestorusername, rolename, qprivilege ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, capturingpipeline. request. getcachettl ( ) )
[4]: org. junit. assert. assertequals ( 1, capturingpipeline. getcachettl ( ) )

************

************
tgt: org . junit . assert . assertequals ( test . findcontentchildren ( children , cookies ) , 2 )
[0]: org. junit. assert. assertnotnull ( pre )
[1]: org. junit. assert. assertnotnull ( parsedmetricvaluesizereasonable )
[2]: org. junit. assert. assertnotnull ( parsedmetric )
[3]: org. junit. assert. assertnotnull ( parsedmetric valuesizereasonable )
[4]: org. junit. assert. assertnotnull ( parsedmetric. getid ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertnotnull ( parsedmetric. tostring ( ) )
[1]: org. junit. assert. assertequals ( 1, user. getreceivedmessages ( ). length )
[2]: org. junit. assert. assertequals ( 0, user. getreceivedmessages ( ). length )
[3]: org. junit. assert. assertnotnull ( user. getreceivedmessages ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: )
[1]: org. junit. assert. assertequals ( val, reader. getdouble ( ), 0.0 )
[2]: org. junit. assert. assertequals ( val, reader. getdouble ( ), 0 )
[3]: org. junit. assert. assertequals ( val, reader. getdouble ( ), 1.0 )
[4]: org. junit. assert. assertequals ( val, reader. getdouble ( ), float. max_value )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . core . is . is ( "action" ) )
[0]: org. junit. assert. assertequals ( val, reader. getdouble ( ), 1 )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertsame ( result, this )
[4]: org. junit. assert. assertsame ( result, null )

************

************
tgt: org . junit . assert . assertequals ( true , showlogicallyinsert )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, tasks. size ( ) )
[2]: org. junit. assert. assertequals ( 1, tasks. size ( ) )
[3]: org. junit. assert. assertequals ( zero, tasks. size ( ) )
[4]: org. junit. assert. assertequals ( 3, tasks. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( emitente , notainfo . getemitente ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, session. from ( $ ( notevar ) ). list ( $ ( notevar ) ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. optional. of ( $ ( notevar ) ), session. from ( $ ( notevar ) ) )
[3]: org. junit. assert. assertequals ( 1, session. from ( $ ( notevar ) ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, session. from ( $ ( notevar ) ). where ( where ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , iv . size ( ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( org. hyperledger. fabric. sdk. clienttest. hfclient. getexecutorservice ( ) )
[2]: org. junit. assert. assertnotnull ( org. hyperledger. fabric. sdk. clienttest. hfclient. getexecutorservice ( ) )
[3]: org. junit. assert. assertequals ( true, clienttest. hfclient. getexecutorservice ( ) )
[4]: org. junit. assert. assertequals ( true, identclient. getexecutorservice ( ) )

************

************
tgt: org . junit . assert . asserttrue ( refreplicated . equals ( refreplicated ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, computed )
[2]: org. junit. assert. assertequals ( expected, computed. size ( ) )
[3]: org. junit. assert. assertequals ( expected, computed. get ( 0 ) )
[4]: org. junit. assert. assertequals ( expected, computed )

************

************
tgt: org . junit . assert . assertsame ( results , service . liststepexecutionsforstep ( "job" , "step" , 0 , 20 ) )
[0]: the expected, computed )
[1]: org. junit. assert. assertnotnull ( config )
[2]: org. junit. assert. assertnotnull ( config. output )
[3]: org. junit. assert. assertnotnull ( config. stream )
[4]: org. junit. assert. assertnotnull ( config. s )

************

************
tgt: org . junit . assert . assertfalse ( versioncontext . isdirty ( ) )
[0]: type ) )
[1]: org. junit. assert. assertequals ( 10, processedlist. size ( ) )
[2]: org. junit. assert. assertequals ( 0, processedlist. size ( ) )
[3]: org. junit. assert. assertequals ( 1, processedlist. size ( ) )
[4]: org. junit. assert. assertequals (statelist, processedlist )

************

************
tgt: org . junit . assert . assertthat ( org . slim3 . util . dateutil . todateandcleardatepart ( date ) , org . hamcrest . corematchers . is ( cal . gettime ( ) ) )
[0]: org. junit. assert. assertequals ( 9, processedlist. size ( ) )
[1]: org. junit. assert. assertequals ( capacity, txreq. numberoftransactionstorequest ( ) )
[2]: org. junit. assert. assertequals ( capacity, transactionreq. numberoftransactionstorequest ( ) )
[3]: org. junit. assert. assertequals ( ( capacity + ( capacity * 2 ) ), txreq )
[4]: org. junit. assert. assertequals ( ( capacity + ( capacity * 2 ) ), txreq ( ) )

************

************
tgt: org . junit . assert . assertequals ( first , second )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( serializer )
[2]: org. junit. assert. assertequals ( serializer, factory )
[3]: org. junit. assert. assertequals ( null, serializer )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , row . getkey ( ) )
[0]: 
[1]: org. junit. assert. assertnotnull ( c. get ( entityid ) )
[2]: org. junit. assert. assertequals ( 1, c. get ( entityid ) )
[3]: org. junit. assert. assertequals ( 1, c. get ( entityid ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, c. get ( entityid ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , locks . size ( ) )
[0]: org. junit. assert. assertequals ( 0, c. get ( entityid ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, 1 )
[2]: org. junit. assert. assertnotnull ( context )
[3]: org. junit. assert. assertnotnull ( s )
[4]: org. junit. assert. assertnotnull ( queue )

************

************
tgt: org . junit . assert . assertsame ( f , b . getfactory ( ) )
[0]: org. junit. assert. assertnotnull ( collection )
[1]: org. junit. assert. assertequals ( firstresult, parentresult. latest ( ) )
[2]: org. junit. assert. assertequals ( 3, parentresult. latest ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, parentresult. latest ( ). size ( ) )
[4]: org. junit. assert. assertequals ( firstresult, parentresult. latest ( ). tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( value instanceof java . time . instant ) )
[0]: org. junit. assert. assertequals ( r, parentresult. latest ( ) )
[1]: org. junit. assert. asserttrue ( isbatchempty ( batchid ) )
[2]: org. junit. assert. assertfalse ( isbatchempty ( batchid ) )
[3]: org. junit. assert. asserttrue ( hasbatchempty ( batchid ) )
[4]: ( batchid ) )

************

************
tgt: org . junit . assert . assertnotnull ( user )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, getmessage ( ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( expected, tostring )
[4]: org. junit. assert. assertequals ( expected, getmessage )

************

************
tgt: org . junit . assert . assertthat ( iscontained , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( expected, messages )
[1]: org. junit. assert. assertequals ( 1, tracingmongoclientbeans. length )
[2]: org. junit. assert. assertequals ( 0, tracingmongoclientbeans. length )
[3]: org. junit. assert. assertequals ( 3, tracingmongoclientbeans. length )
[4]: org. junit. assert. assertnotnull ( tracingmongoclientbeans )

************

************
tgt: org . junit . assert . assertequals ( "one" , result . getstring ( 0 ) )
[0]: [ 0 ] )
[1]: org. junit. assert. assertnotnull ( com. ibm. ws. security. registry. basic. fat. fattest. servlet. getrealm ( ) )
[2]: org. junit. assert. assertequals ( com. ibm. ws. security. registry. basic. fat. fattest. servlet. getrealm ( ), com. ibm. ws. security. registry. basic. fat. fattest. server )
[3]: org. junit. assert. assertequals ( com. ibm. ws. security. registry. basic. fat. fattest. servlet. getrealm ( ), com. ibm. ws. security. registry. basic. fat. fattest. default_config_file )
[4]: org. junit. assert. assertequals ( com. ibm. ws. security. registry. basic. fat. fattest. servlet. getrealm ( ), com. ibm. ws. security. registry. basic. fat. fattest. servlet. getrealm ( ) )

************

************
tgt: org . junit . assert . assertthat ( org . batfish . common . util . batfishobjectmapper . clone ( vs , org . batfish . datamodel . vnisettings . class ) , org . hamcrest . matchers . equalto ( vs ) )
[0]: org. junit. assert. assertequals ( com. ibm. ws. security. registry. basic. fat. fattest. server, com. ibm. ws. security. registry. basic. fat. fattest. servlet. getrealm ( ) )
[1]: org. junit. assert. assertequals ( object3, set1 )
[2]: org. junit. assert. assertequals ( object2, set1 )
[3]: org. junit. assert. assertequals ( set1, set2 )
[4]: org. junit. assert. assertequals ( 12, changelogs. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( principals . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertequals ( 0, changelogs. size ( ) )
[1]: org. junit. assert. assertequals ( 10, changelogs. size ( ) )
[2]: org. junit. assert. assertequals ( 1, changelogs. size ( ) )
[3]: org. junit. assert. assertequals ( 4, changelogs. size ( ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( graphdb )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. assertequals ( 9, result. size ( ) )
[2]: org. junit. assert. assertequals ( 2, result. size ( ) )
[3]: org. junit. assert. assertequals ( 3, result. size ( ) )
[4]: org. junit. assert. assertequals ( null, scopes )

************

************
tgt: org . junit . assert . assertnotnull ( appliance )
[0]: org. junit. assert. assertequals ( """", scopes )
[1]: org. junit. assert. assertnotnull ( scopes )
[2]: org. junit. assert. assertnull ( scopes )
[3]: type ) { } }
[4]: org. junit. assert. assertequals ( 0, com. feilong. core. util. sortutil. sortlistbypropertynamesvalue ( null, ( ( java. lang. string [ ] ) ( null ) ) ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , impl . getapparentagesecs ( entry ) )
[0]: org. junit. assert. assertequals ( 0, com. feilong. core. util. sortutil. sortlistbypropertynamesvalue ( null, ( ( java. util. list < java. lang. string > ) ( null ) ) ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, com. feilong. core. util. sortutil. sortlistbypropertynamesvalue ( new java. util. arraylist ( ), new java. lang. string [ ] { } ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, com. feilong. core. util. sortutil. sortlistbypropertynamesvalue ( null, ( ( java. util. list ) ( null ) ) ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, com. feilong. core. util. sortutil. sortlistbypropertynamesvalue ( java. util. collections. < java. lang. string > emptylist ( ), java. util. collections. emptylist ( ) ). size ( ) )
[4]: org. junit. assert. assertnotnull ( runsample ( azure ) )

************

************
tgt: org . junit . assert . assertequals ( io . motown . ocpp . v15 . soap . chargepoint . schema . io . motown . domain . api . chargingstation . reservationstatus , reservationstatus )
[0]: org. junit. assert. assertnotnull ( testsample ( azure ) )
[1]: org. junit. assert. assertnotnull ( testcreatecreatecreateoread ( azure ) )
[2]: org. junit. assert. assertnotnull ( testcreatecreatecreatecreateoread ( azure ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( com. google. cloud. spanner. partition. split ( fakepartitions. toarray ( ) ), result )

************

************
tgt: org . junit . assert . asserttrue ( calendar . canworkon ( org . libreplan . business . test . calendars . entities . basecalendartest . monday_local_date ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( fakepartitions. toarray ( ) ), result )
[1]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. containsinanyorder ( fakepartitions ) )
[2]: org. junit. assert. assertequals ( result, fakepartitions. toarray ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )
[4]: org. junit. assert. assertarrayequals ( result, result [ 0 ] )

************

************
tgt: org . junit . assert . assertequals ( 1 , errors . size ( ) )
[0]: org. junit. assert. assertequals ( result [ 0 ], result [ 0 ] )
[1]: org. junit. assert. assertequals ( result [ 0 ], result [ 1 ] )
[2]: org. junit. assert. assertarrayequals ( result, null )
[3]: org. junit. assert. assertarrayequals ( result, 0 )
[4]: org. junit. assert. assertnotnull ( form )

************

************
tgt: org . junit . assert . assertequals ( verwerkingssoort . wijziging , betrokkenheidhisvolledigview . getverwerkingssoort ( ) )
[0]: org. junit. assert. asserttrue ( panel. isvisible ( ) )
[1]: org. junit. assert. assertequals ( 1, visitor. getshards ( ) )
[2]: org. junit. assert. assertequals ( 1, visitor. getshards ( ). length )
[3]: org. junit. assert. assertnotnull ( visitor. getshards ( ) )
[4]: org. junit. assert. assertequals ( 1, visitor. getshards ( ). size ( )

************

************
tgt: org . junit . assert . assertequals ( result , propertyindexbykey )
[0]: ) )
[1]: org. junit. assert. assertequals ( user. getname ( ), userbystatus. getname ( ) )
[2]: org. junit. assert. assertequals ( user_name_adam, userbystatus. getname ( ) )
[3]: org. junit. assert. assertequals ( user, userbystatus. getname ( ) )
[4]: org. junit. assert. assertequals ( username. getname ( ), userbystatus. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( result , returnresult )
[0]: org. junit. assert. assertnotnull ( userbystatus. getname ( ) )
[1]: org. junit. assert. assertequals ( arguments, arguments. resolve ( null, null ) )
[2]: org. junit. assert. assertnotnull ( arguments. resolve ( null, null ) )
[3]: org. junit. assert. assertnull ( arguments. resolve ( null, null ) )
[4]: org. junit. assert. assertequals ( arguments, generator. resolve ( null, null ) )

************

************
tgt: org . junit . assert . assertequals ( "a<sp>type" , ie . gettype ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( userlist. size ( ), result )
[2]: org. junit. assert. assertequals ( 1, result )
[3]: org. junit. assert. assertequals ( userlist, result )
[4]: org. junit. assert. assertequals ( userlist. count ( ), result )

************

************
tgt: org . junit . assert . assertequals ( ( 12 * 30 ) , daysinyear )
[0]: org. junit. assert. assertequals ( 5, result )
[1]: org. junit. assert. assertequals ( 1, value )
[2]: org. junit. assert. assertequals ( 0, value )
[3]: org. junit. assert. assertequals ( 3, value )
[4]: org. junit. assert. assertequals ( 9, value )

************

************
tgt: org . junit . assert . assertequals ( "samplebasicrealm" , com . ibm . ws . security . registry . basic . fat . fattestfederated . servlet . getrealm ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, result )
[2]: org. junit. assert. assertequals ( result, expected )
[3]: org. junit. assert. assertequals ( exp, result )
[4]: org. junit. assert. assertequals ( actual, result )

************

************
tgt: org . junit . assert . assertfalse ( impl . addall ( tsdata ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( domain )
[2]: org. junit. assert. assertnull ( domain )
[3]: org. junit. assert.null ( domain )
[4]: null, domain )

************

************
tgt: org . junit . assert . assertequals ( 1 , childsitenavigationmenuitem1 . getorder ( ) )
[0]: null )
[1]: org. junit. assert. asserttrue ( result )
[2]: org. junit. assert. assertequals ( true, result )
[3]: org. junit. assert. assertequals ( 1, projectruleset. getfilecount ( ) )
[4]: org. junit. assert. assertequals ( 0, projectruleset. getfilecount ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( atlasmapping )
[0]: org. junit. assert. assertequals ( 1, project ruleset. getfilecount ( ) )
[1]: org. junit. assert. assertequals ( 2, projectruleset. getfilecount ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, getbucketresponse. getcommonprefixes ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, getbucketresponse. getcommonprefixes ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( outbound ) )
[0]: org. junit. assert. assertnotnull ( getbucketresponse. getcommonprefixes ( ) )
[1]: org. junit. assert. assertequals ( null, getbucketresponse. getcommonprefixes ( ) )
[2]: org. junit. assert. assertequals ( 1, getbucketresponse. getcommonprefixes ( ). count ( ) )
[3]: org. junit. assert. assertequals ( 1, ex. onlyid ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( onlyid ( ) )

************

************
tgt: org . junit . assert . asserttrue ( usergrouprolerolechecker . isdisabled ( role ) )
[0]: org. junit. assert. assertequals ( 1, ex. onlyid ( ) )
[1]: org. junit. assert. assertequals ( 1, e. onlyid ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( ex. onlyid ( ) )
[3]: org. junit. assert. assertnotnull ( d. getkeysemaphoresofsecondaryindexkey ( skey, pkey ) )
[4]: org. junit. assert. assertnotnull ( d. getkeysemaphoresofsecondaryindexkey ( skey, awk ) )

************

************
tgt: org . junit . assert . assertequals ( original , a )
[0]: org. junit. assert. assertnotnull ( d. getkeysemaphoresofsecondaryindexkey ( skey, null ) )
[1]: org. junit. assert. assertnotnull ( d. getkeysemaphoresofsecondaryindexkey ( skey, aw ) )
[2]: org. junit. assert. assertnotnull ( d. getkeysemaphoresofsecondaryindexkey ( skey, awr ) )
[3]: org. junit. assert. assertequals ( 1, diffs. size ( ) )
[4]: org. junit. assert. assertequals ( 0, diffs. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( newcompiler . build ( ) )
[0]: org. junit. assert. assertequals ( 1, com. google. cloud. tools. jib. registry. registryaliasgroup. getaliasesgroup ( alias ). size ( ) )
[1]: org. junit. assert. assertequals ( aliases, com. google. cloud. tools. jib. registry. registryaliasgroup. getaliasesgroup ( alias ) )
[2]: org. junit. assert. assertnotnull ( com. google. cloud. tools. jib. registry. registryaliasgroup. getaliasesgroup ( alias ) )
[3]: org. junit. assert. assertequals ( alias, com. google. cloud. tools. jib. registry. registryaliasgroup. getaliasesgroup ( alias ). size ( ) )
[4]: org. junit. assert. assertequals ( alias, com. google. cloud. tools. jib. registry. registryaliasgroup. getaliasesgroup ( alias ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( "../bar.html" , result )
[0]: org. junit. assert. assertequals ( org. mpatric. mp3agic. version. url, wrapper. geturl ( ) )
[1]: org. junit. assert. assertequals ( id3v2tag, wrapper. geturl ( ) )
[2]: org. junit. assert. assertequals ( com. mpatric. mp3agic. version. url, wrapper. geturl ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, id3v2tag. geturl ( ) )
[4]: org. junit. assert. assertequals ( null, wrapper. geturl ( ) )

************

************
tgt: org . junit . assert . assertequals ( "1" , linkid1 . tostring ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( result, null )
[4]: org. junit. assert. assertequals ( result, cache )

************

************
tgt: org . junit . assert . assertequals ( correctresultroot [ j ] , result [ j ] )
[0]: org. junit. assert. assertequals ( 1, server. getstats ( ) )
[1]: org. junit. assert. assertequals ( 1, server. getstats ( ). getconnected ( ) )
[2]: org. junit. assert. assertequals ( 1, server. getstats ( ). fail )
[3]: org. junit. assert. assertnotnull ( server. getstats ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , geoddiams . size ( ) )
[0]: org. junit. assert. assertequals ( expected, datastr )
[1]: org. junit. assert. assertequals ( expected, datastr, actual )
[2]: org. junit. assert. assertequals ( expected, datastr )
[3]: org. junit. assert. assertequals ( expected, contentstr )
[4]: org. junit. assert. assertequals ( expected, datastr, datastr )

************

************
tgt: org . junit . assert . asserttrue ( failures . tostring ( ) , failures . isempty ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr [ 0 ] )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr, res )
[3]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr [ 1 ] )
[4]: org. junit. assert. assertequals ( xml. tostring ( res ), strarr )

************

************
tgt: org . junit . assert . assertequals ( d1 , d2 )
[0]: org. junit. assert. assertequals ( expected, sorted )
[1]: org. junit. assert. assertequals ( expected, sorted. materialize ( ) )
[2]: org. junit. assert. assertequals ( expected, sorted. materializ ( ) )
[3]: org. junit. assert. assertequals ( expected, sorted, unsorted )
[4]: org. junit. assert. assertequals ( expected, sorted )

************

************
tgt: org . junit . assert . assertequals ( match , matcher . ismatch ( label ) )
[0]: org. junit. assert. assertnotnull ( schema2 )
[1]: org. junit. assert. assertequals ( schema2, schema2 )
[2]: org. junit. assert. assertequals ( schema1, schema2 )
[3]: org. junit. assert. assertnotnull ( schema1 )
[4]: org. junit. assert. assertequals ( schema2, schema1 )

************

************
tgt: org . junit . assert . assertequals ( fs . getlocaltmpdir ( ) , dir1 )
[0]: org. junit. assert. assertnotnull ( me. zzp. util. seq. join ( null, null ) )
[1]: org. junit. assert. assertnull ( me. zzp. util. seq. join ( null, null ) )
[2]: org. junit. assert. assertequals ( null, me. zzp. util. seq. join ( null, null ) )
[3]: org. junit. assert. assertequals ( 1, me. zzp. util. seq. join ( null, null ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, me. zzp. util. seq. join ( null, null ) )

************

************
tgt: org . junit . assert . assertfalse ( filemonitor . callhandlerifmodified ( ) )
[0]: org. junit. assert. assertequals ( ranking, array [ i ] )
[1]: org. junit. assert. assertequals ( i, array [ i ] )
[2]: org. junit. assert. assertequals ( ( ranking + i ), array [ i ] )
[3]: org. junit. assert. assertequals ( array [ i ], array [ i ] )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( string )
[0]: org. junit. assert. assertnotnull ( hi )
[1]: org. junit. assert. assertequals ( 1, hi. size ( ) )
[2]: org. junit. assert. assertequals ( 1, hi. length ( ) )
[3]: org. junit. assert. assertequals ( null, hi )
[4]: org. junit. assert. assertequals ( 1, hi )

************

************
tgt: org . junit . assert . assertnull ( resultcard )
[0]: org. junit. assert. assertequals ( 0, loggingbuffer. size ( ) )
[1]: org. junit. assert. assertequals ( 1, loggingbuffer. size ( ) )
[2]: org. junit. assert. assertequals ( 1, branch_conditions. size ( ) )
[3]: org. junit. assert. assertequals ( color, tree. getheaderforeground ( ) )
[4]: org. junit. assert. assertnotnull ( person. getpersonvoidreason ( ) )

************

************
tgt: org . junit . assert . assertfalse ( spy . iscomplete ( null ) )
[0]: org. junit. assert. asserttrue ( customerkey. prefixof ( key ) )
[1]: org. junit. assert. assertfalse ( customerkey. prefixof ( key ) )
[2]: org. junit. assert. asserttrue ( customerkey. prefixof ( customerkey ) )
[3]: org. junit. assert. asserttrue ( customerkey. prefixof ( null ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( file , fetched )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertequals ( 0, result )
[2]: org. junit. assert. assertequals ( result, 1 )
[3]: org. junit. assert. assertequals ( result, 0 )
[4]: org. junit. assert. assertequals ( 1, result ) ;

************

************
tgt: org . junit . assert . assertfalse ( app6done )
[0]: org. junit. assert. assertnotnull ( store )
[1]: org. junit. assert. assertnull ( store )
[2]: org. junit. assert. assertsame ( store, client )
[3]: org. junit. assert. assertsame ( store, client. getservice ( java. lang. object. class ) )
[4]: org. junit. assert. assertsame ( store, client. getservice ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( cls, cls. getnnf ( ) )
[1]: org. junit. assert. asserttrue ( response. isempty ( ) )
[2]: org. junit. assert. assertfalse ( samlresponse. isvalid ( ) )
[3]: org. junit. assert. assertequals ( user. getname ( ), userbystatus. getname ( ) )
[4]: org. junit. assert. assertequals ( user2. getname ( ), userbystatus. getname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( client . login ( ) )
[0]: org. junit. assert. assertequals ( user_name_adam, userbystatus. getname ( ) )
[1]: org. junit. assert. assertequals ( user, userbystatus. getname ( ) )
[2]: org. junit. assert. assertequals ( user1. getname ( ), userbystatus. getname ( ) )
[3]: org. junit. assert. assertequals ( 1, keys. size ( ) )
[4]: org. junit. assert. assertequals ( 0, keys. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( ( ( ( ( random == 0 ) || ( random == 1 ) ) || ( random == 2 ) ) || ( random == 3 ) ) || ( random == 4 ) ) || ( random == 5 ) ) )
[0]: org. junit. assert. assertequals ( 1, keys. size ( ) )
[1]: org. junit. assert. assertequals ( 1l, keys. size ( ) )
[2]: org. junit. assert. assertequals ( 1, keys. size ( ) )
[3]: org. junit. assert. assertnotnull ( sink. tostring ( ) )
[4]: org. junit. assert. assertequals ( p. tostring ( ), sink. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( connectfuture . isconnected ( ) )
[0]: org. junit. assert. assertequals ( rs. tostring ( ), sink. tostring ( ) )
[1]: org. junit. assert. assertequals ( s, sink. tostring ( ) )
[2]: org. junit. assert. assertequals ( p. tostring ( ), sink )
[3]: org. junit. assert. assertnotnull ( entity. gettype ( ) )
[4]: org. junit. assert. assertequals ( 1, entity. gettype ( ) )

************

************
tgt: org . junit . assert . assertequals ( dt , genson . deserialize ( json , java . time . localdate . class ) )
[0]: org. junit. assert. assertequals ( 5, entity. gettype ( ) )
[1]: org. junit. assert. assertequals ( 0, entity. gettype ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, x. size ( ) )
[4]: org. junit. assert. assertequals ( null, x )

************

************
tgt: org . junit . assert . assertthat ( result )
[0]: org. junit. assert. assertequals ( 1, x. size ( ) )
[1]: org. junit. assert. assertfalse ( transport. caninit ( ) )
[2]: org. junit. assert. assertequals ( 1, translate ( java. lang. object. class ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, translate ( java. lang. string. class ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, converter. translate ( java. lang. string. class ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( tokenconfiguration . name , composite . getname ( ) )
[0]: org. junit. assert. assertequals ( 1, converter. translate ( java. lang. object. class ). size ( ) )
[1]: org. junit. assert. assertnotnull ( translate ( java. lang. object. class ) )
[2]: org. junit. assert. assertequals ( record, roundtrippedrecord )
[3]: org. junit. assert. assertthat ( roundtrippedrecord, org. hamcrest. matchers. is ( record ) )
[4]: org. junit. assert. assertnotnull ( roundtrippedrecord )

************

************
tgt: org . junit . assert . assertarrayequals ( cachedelements , elements )
[0]: org. junit. assert. assertthat ( roundtrippedrecord, org. hamcrest. matchers. equalto ( record ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, ft. attributes ( ). size ( ) )
[3]: org. junit. assert. assertequals ( model, list. getmodel ( ) )
[4]: org. junit. assert. assertnotnull ( list. getmodel ( ) )

************

************
tgt: org . junit . assert . assertnull ( plugin . getsoftwareid ( null , properties ) )
[0]: org. junit. assert. assertequals ( model. getmodel ( ), list )
[1]: org. junit. assert. assertnull ( list. getmodel ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, event. events. size ( ) )
[4]: org. junit. assert. assertequals ( 1, event. children. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( queuemanagercapability . getactions ( ) . size ( ) ) == 1 ) )
[0]: org. junit. assert. assertequals ( 1, event. materialized ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, event. select ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), event )
[3]: org. junit. assert. assertequals ( 0, result )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . asserttrue ( reader . skipfirstlineasheader )
[0]: org. junit. assert. assertequals ( ( - 1 ), result )
[1]: org. junit. assert. assertequals ( - 1, result )
[2]: org. junit. assert. assertequals ( 2, result )
[3]: org. junit. assert. assertnotnull ( config. getindex ( null ) )
[4]: org. junit. assert. assertequals ( null, config. getindex ( null ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnull ( config. getindex ( null ) )
[1]: org. junit. assert. assertnotnull ( config. getindex ( ""foo"" ) )
[2]: org. junit. assert. assertequals ( ""foo"", config. getindex ( null ) )
[3]: org. junit. assert. assertfalse ( map. containskey ( i ) )
[4]: org. junit. assert. assertfalse ( map. containskey ( java. lang. string. valueof ( i ) ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . string ( spacearray ) , result )
[0]: org. junit. assert. assertfalse ( map. containskey ( java. lang. integer. valueof ( i ) ) )
[1]: org. junit. assert. asserttrue ( map. containskey ( i ) )
[2]: org. junit. assert. assertequals ( false, map. containskey ( i ) )
[3]: org. junit. assert. assertequals ( 1, dependencies. size ( ) )
[4]: org. junit. assert. assertequals ( 0, dependencies. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( uservalidated )
[0]: org. junit. assert. assertequals ( 2, dependencies. size ( ) )
[1]: org. junit. assert. assertequals ( 3, dependencies. size ( ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( result. read ( ) )
[4]: org. junit. assert. assertequals ( true, result. read ( ) )

************

************
tgt: org . junit . assert . assertthat ( startindex , org . hamcrest . core . is . is ( 20 ) )
[0]: org. junit. assert. assertequals ( false, result. read ( ) )
[1]: , result )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( name )
[4]: org. junit. assert. assertequals ( expected, name )

************

************
tgt: org . junit . assert . asserttrue ( ml . contains ( expectedmove ) )
[0]: org. junit. assert. assertequals ( name, row. getoperationname ( ) )
[1]: org. junit. assert. assertequals ( null, name )
[2]: org. junit. assert. assertequals ( 1, name. getoperationname ( ) )
[3]: org. junit. assert. assertequals ( ( - 10001 ), constraints. getexpirytime ( ) )
[4]: org. junit. assert. assertequals ( 1, uploadedfile. length ( ) )

************

************
tgt: org . junit . assert . assertequals ( result . size ( ) , testcount )
[0]: org. junit. assert. assertequals ( 0, uploadedfile. length ( ) )
[1]: org. junit. assert. assertequals ( 1, uploadedfile. exists ( ) )
[2]: org. junit. assert. assertnotnull ( uploadedfile )
[3]: org. junit. assert. assertequals ( true, uploadedfile. exists ( ) )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertequals ( 3 , itemsets . size ( ) )
[0]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( root, e )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, tablecount )

************

************
tgt: org . junit . assert . assertnull ( org . sentilo . common . utils . dateutils . timestamptostring ( null ) )
[0]: org. junit. assert. assertequals ( 0, tablecount )
[1]: org. junit. assert. assertequals ( 3, tablecount )
[2]: org. junit. assert. assertequals ( 1, tablescount )
[3]: org. junit. assert. assertequals ( 4, tablecount )
[4]: org. junit. assert. assertthat ( actual, containsinanyorder ( expected ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , documents . size ( ) )
[0]: org. junit. assert. asserttrue ( actual. containsinanyorder ( expected ) )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: , actual )
[3]: ) )
[4]: org. junit. assert. assertequals ( deserialized, jsonobject )

************

************
tgt: org . junit . assert . assertarrayequals ( longarray , decompressedarray . array ( ) )
[0]: org. junit. assert. assertequals ( deserialized, buff )
[1]: org. junit. assert. assertequals ( deserialized, deserialized )
[2]: org. junit. assert. assertequals ( deserialized, jsonarray )
[3]: org. junit. assert. assertequals ( deserialized, json )
[4]: org. junit. assert. assertnotnull ( listandparsesavedqueries ( ) )

************

************
tgt: org . junit . assert . assertthat ( expectedorder , org . hamcrest . corematchers . is ( nodes [ 1 ] ) )
[0]: org. junit. assert. assertnull ( listandparsesavedqueries ( ) )
[1]: org. junit. assert. assertequals ( 0, listandparsesavedqueries ( ). length )
[2]: type ) )
[3]: ) )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( specificdatacommunicator , grid . getdatacommunicator ( ) )
[0]: org. junit. assert. assertnull ( totruncat )
[1]: org. junit. assert. assertnull ( err )
[2]: org. junit. assert. assertnull ( to )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, forumtochange. getdisplayorder ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectvalue , actualvalue )
[0]: org. junit. assert. assertequals ( 0, forumtochange. getdisplayorder ( ) )
[1]: org. junit. assert. assertequals ( 1, toumtochange. getdisplayorder ( ) )
[2]: org. junit. assert. assertequals ( 1l, forumtochange. getdisplayorder ( ) )
[3]: org. junit. assert. assertnotnull ( forumtochange. getdisplayorder ( ) )
[4]: org. junit. assert. assertnotnull ( options. getsuboptions ( java. io. ioexception. class ) )

************

************
tgt: org . junit . assert . assertequals ( data . marksupported ( ) , in . marksupported ( ) )
[0]: org. junit. assert. assertnull ( options. getsuboptions ( java. io. ioexception. class ) )
[1]: org. junit. assert. assertequals ( 1, 1 )
[2]: org. junit. assert. assertnotnull ( context )
[3]: org. junit. assert. assertnotnull ( queue )
[4]: org. junit. assert. assertnotnull ( collection )

************

************
tgt: org . junit . assert . assertequals ( 0 , notsupported . size ( ) )
[0]: org. junit. assert. assertnotnull ( fixture )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. assertequals ( 0, plot. getdomainaxis ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, plot. getdomainaxis ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( element. gettagname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( meta . getuseawsdefaultcredentials ( ) )
[0]: org. junit. assert. assertequals ( element. gettagname ( ), pages. tostring ( ) )
[1]: org. junit. assert. assertequals ( 0, element. gettagname ( ) )
[2]: org. junit. assert. assertequals ( element. gettagname ( ), pages. values ( ) )
[3]: org. junit. assert. assertequals ( element. gettagname ( ), pages. detail )
[4]: org. junit. assert. assertequals ( origrequest, req. getpostbodyasstring ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new java . lang . object [ ] { 5 } , ( ( java . lang . object [ ] ) ( execution . next ( ) . get ( 0 ) ) ) )
[0]: org. junit. assert. assertequals ( origrequest. getpostbodyasstring ( ), origrequest )
[1]: org. junit. assert. assertthat ( result, is ( false ) )
[2]: org. junit. assert. assertthat ( result )
[3]: org. junit. assert. assertthat ( result, is ( true ) )
[4]: org. junit. assert. assertequals ( false, result )

************

************
tgt: org . junit . assert . asserttrue ( ( ( bytearray [ j ] ) == ( dstbuffer . get ( j ) ) ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( holidayasdatetime, nextworkingday )
[2]: org. junit. assert. assertequals ( holiday. tolocaldate ( ), nextworkingday )
[3]: org. junit. assert. assertnull ( nextworkingday )
[4]: org. junit. assert. assertequals ( holidayosdatetime, nextworkingday )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertequals ( new java. lang. long ( 1 ), millis )
[2]: org. junit. assert. assertequals ( null, millis )
[3]: org. junit. assert. assertequals ( 1, lines. length )
[4]: org. junit. assert. assertequals ( 0, lines. length )

************

************
tgt: org . junit . assert . assertequals ( c , result )
[0]: org. junit. assert. assertequals ( 4, lines. length )
[1]: org. junit. assert. assertequals ( 5, lines. length )
[2]: org. junit. assert. assertequals ( 1l, fixture. gettimestampend ( ) )
[3]: org. junit. assert. assertnotnull ( fixture. gettimestampend ( ) )
[4]: org. junit. assert. assertequals ( 0l, fixture. gettimestampend ( ) )

************

************
tgt: org . junit . assert . assertequals ( item . o , map . get ( item . c ) )
[0]: org. junit. assert. assertequals ( 1.0, fixture. gettimestampend ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, users. size ( ) )
[3]: org. junit. assert. assertequals ( 0, users. size ( ) )
[4]: org. junit. assert. assertnotnull ( useragent )

************

************
tgt: org . junit . assert . assertequals ( "herbert" , vcard . getname ( ) )
[0]: org. junit. assert. assertequals ( null, useragent )
[1]: org. junit. assert. assertequals ( assertnotnull, useragent )
[2]: org. junit. assert. assertequals ( info, useragent )
[3]: ) )
[4]: org. junit. assert. assertequals ( testthrowable, e. getcause ( ) )

************

************
tgt: org . junit . assert . assertequals ( routevaliditystate . valid , validitystatefound )
[0]: org. junit. assert. assertsame ( testthrowable, e. getcause ( ) )
[1]: org. junit. assert. assertequals ( testthrowable, e. getcause ( ). getmessage ( ) )
[2]: org. junit. assert. assertnotnull ( e. getcause ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( true, seenkeys. contains ( healthmessage. getkey ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 20 , decresult . intvalue ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), seenkeys )
[1]: org. junit. assert. assertequals ( false, seenkeys. contains ( healthmessage. getkey ( ) ) )
[2]: org. junit. assert. assertfalse ( seenkeys. contains ( healthmessage. getkey ( ) ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( victim. getthreadbeads ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( cosname. b, victim. getthreadbeads ( ) )
[1]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[2]: org. junit. assert. assertequals ( expected, testrowsuneresult )
[3]: org. junit. assert. assertequals ( expected, testrowsunredresult. formattedresult ( rs ) )
[4]: org. junit. assert. assertequals ( expected, testrowsunredresult. formattedresult ( ) )

************

************
tgt: org . junit . assert . assertequals ( foo , objectaccessor . get ( ) )
[0]: org. junit. assert. assertequals ( expected, testrowsunbounded. testutils. formattedresult. output ( rs ) )
[1]: org. junit. assert. assertequals ( org. hawkular. apm. api. utils. endpointutiltest. operation, decodeendpointuri ( result ) )
[2]: org. junit. assert. assertnull ( org. hawkular. apm. api. utils. endpointutiltest. operation. decodeendpointuri ( result ) )
[3]: org. junit. assert. assertequals ( org. hawkular. apm. api. utils. endpointutiltest. operation, decodeendpointuri ( result ). trim ( ) )
[4]: org. junit. assert. assertnotnull ( org. hawkular. apm. api. utils. endpointutiltest. operation. decodeendpointuri ( result ) )

************

************
tgt: org . junit . assert . assertequals ( com . baeldung . lombok . farewellserviceintegrationtest . translated , farewellservice . farewell ( ) )
[0]: org. junit. assert. assertequals ( org. hawkular. apm. api. utils. endpointutiltest. operation, decodeendpointuri ( result ). tostring ( ) )
[1]: org. junit. assert. assertequals ( a, b )
[2]: org. junit. assert. assertequals ( b, a )
[3]: org. junit. assert. assertequals ( null, a. lookahead ( b ) )
[4]: org. junit. assert. assertequals ( null, a. aggregate ( b ) )

************

************
tgt: org . junit . assert . assertequals ( new org . eclipse . swt . graphics . rectangle ( 100 , 0 , 0 , 1000 ) , rect )
[0]: org. junit. assert. assertnotnull ( a )
[1]: org. junit. assert. asserttrue ( ok. get ( ) )
[2]: org. junit. assert. assertnotnull ( ok. get ( ) )
[3]: org. junit. assert. assertfalse ( ok. get ( ) )
[4]: get ( ) )

************

************
tgt: org . junit . assert . assertequals ( idletime , idletime , ( 30 * 1000l ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, mat. groupcount ( ) )
[2]: org. junit. assert. assertequals ( 0, mat. groupcount ( ) )
[3]: org. junit. assert. assertequals ( 3, mat. groupcount ( ) )
[4]: org. junit. assert. assertequals ( i, mat. groupcount ( ) )

************

************
tgt: org . junit . assert . assertfalse ( couchdbinput . init ( couchdbinputmeta , couchdbinputdata ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( b. tostring ( ), i. tostring ( ) )
[2]: org. junit. assert. assertequals ( s. tostring ( ), b. tostring ( ) )
[3]: org. junit. assert. assertequals ( b. tostring ( ), 1 )
[4]: org. junit. assert. assertequals ( java. lang. integer. tostring ( 1 ), b )

************

************
tgt: org . junit . assert . assertsame ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( found )
[2]: org. junit. assert. assertequals ( simple, found )
[3]: org. junit. assert. assertnull ( found )
[4]: org. junit. assert. assertequals ( id, found )

************

************
tgt: org . junit . assert . assertnotnull ( xmpxml )
[0]: ) )
[1]: org. junit. assert. assertequals ( concatenated, last )
[2]: org. junit. assert. assertequals ( concatenated, first )
[3]: org. junit. assert. assertequals ( concatenated, previous )
[4]: org. junit. assert. assertequals ( concatenated, latest )

************

************
tgt: org . junit . assert . asserttrue ( ( ( ignored . getcause ( ) ) instanceof org . apache . flink . util . statemigrationexception ) )
[0]: org. junit. assert. assertequals ( concatenated, second )
[1]: org. junit. assert. assertequals ( 2, res. size ( ) )
[2]: org. junit. assert. assertequals ( 1, res. size ( ) )
[3]: org. junit. assert. assertequals ( true, result. isempty ( ) )
[4]: org. junit. assert. assertequals ( result, original )

************

************
tgt: org . junit . assert . assertequals ( entity . publicvalue , actualvalue )
[0]: org. junit. assert. assertequals ( true, res. isempty ( ) )
[1]: org. junit. assert. assertnotnull ( t. getparent ( ) )
[2]: org. junit. assert. assertequals ( t. getparent ( ), t )
[3]: org. junit. assert. assertequals ( t, t. getparent ( ) )
[4]: org. junit. assert. assertequals ( null, t. getparent ( ) )

************

************
tgt: org . junit . assert . assertequals ( "clientid-1" , kapuadisconnectmessage . getclientid ( ) )
[0]: org. junit. assert. assertnull ( t. getparent ( ) )
[1]: org. junit. assert. assertequals ( long1, long2 )
[2]: org. junit. assert. assertequals ( long1, ( long2 - longvalue ) )
[3]: org. junit. assert. assertequals ( ( long1 + longvalue ), long2 )
[4]: org. junit. assert. assertequals ( long1, ( long2 + longvalue ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , dao . create ( foo ) )
[0]: org. junit. assert. assertequals ( long1, ( long2 / longvalue ) )
[1]: org. junit. assert. assertnotnull ( get ( just. niubi. httprequest. httprequesttest. url ) )
[2]: org. junit. assert. assertnotnull ( get ( just. niubi. httprequest. httprequesttest. url ). body ( ) )
[3]: org. junit. assert. assertnotnull ( get ( just. niubi. httprequest. httprequesttest. url ). getid ( ) )
[4]: org. junit. assert. assertequals ( null, get ( just. niubi. httprequest. httprequesttest. url ) )

************

************
tgt: org . junit . assert . assertequals ( "f15490c4-fc6b-4e40-90b2-1a16a66b619f" , retrievedaccount . getid ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( path, relativepath )
[2]: org. junit. assert. assertequals ( path, relativepath. tostring ( ) )
[3]: org. junit. assert. assertequals ( path, relativepath. trim ( ) )
[4]: org. junit. assert. assertequals ( path, relativepath. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , runner . geterrorrecords ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( path, relativepath. getabsolutepath ( ) )
[1]: org. junit. assert. assertequals ( expected, fixture. tostring ( ) )
[2]: org. junit. assert. assertequals ( expected, serializer. tostring ( ) )
[3]: org. junit. assert. assertequals ( expected, model. tostring ( ) )
[4]: org. junit. assert. assertequals ( expected, subject. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( details . hasgetstatus ( ) )
[0]: org. junit. assert. assertequals ( expected, transform. tostring ( ) )
[1]: org. junit. assert. assertequals ( 1, e. getmax ( ) )
[2]: org. junit. assert. assertequals ( 1, form. getnumberofcomponents ( ) )
[3]: org. junit. assert. assertequals ( 0, form. getnumberofcomponents ( ) )
[4]: org. junit. assert. assertequals ( 1l, form. getnumberofcomponents ( ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , new java . lang . integer ( ( ( int ) ( 10 ) ) ) . longvalue ( ) , 0 )
[0]: org. junit. assert. assertequals ( 3, form. getnumberofcomponents ( ) )
[1]: org. junit. assert. assertequals ( 1, form. getnumberofcomponents ( ) ) )
[2]: org. junit. assert. assertequals ( 12, list. size ( ) )
[3]: org. junit. assert. assertequals ( 1, list. size ( ) )
[4]: org. junit. assert. assertequals ( 4, list. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( plot1 , plot2 )
[0]: org. junit. assert. assertequals ( 9, list. size ( ) )
[1]: public void size ( ) { }
[2]: org. junit. assert. assertequals ( specificdatumreader, deserialized )
[3]: org. junit. assert. assertnotnull ( deserialized )
[4]: org. junit. assert. assertequals ( specificdatumreader, decoder )

************

************
tgt: org . junit . assert . asserttrue ( results . isempty ( ) )
[0]: org. junit. assert. assertequals ( specificdatumreader, serialized )
[1]: org. junit. assert. assertequals ( existing, deserialized )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( result, java. lang. long )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( "ok" , result )
[0]: org. junit. assert. assertequals ( result, null )
[1]: org. junit. assert. assertequals ( result, java )
[2]: org. junit. assert. asserttrue ( ( result instanceof java. lang. character ) )
[3]: org. junit. assert. asserttrue ( ( result instanceof java. lang. long ) )
[4]: org. junit. assert. assertequals ( new com. flextrade. jfixture. nospecimen ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , json )
[0]: org. junit. assert. assertnotnull ( result )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( createdatabaseconnectionextraoptionsentry ( ) )
[3]: org. junit. assert. assertnotnull ( createdatabaseconnectionextraoptionsentry ( ). getid ( ) )
[4]: org. junit. assert. assertequals ( choosed, availablevalues )

************

************
tgt: org . junit . assert . assertequals ( b , a . rotate ( ) )
[0]: org. junit. assert. assertequals ( availablevalues, choosed )
[1]: org. junit. assert. assertequals ( list, choosed )
[2]: , choosed )
[3]: ) )
[4]: org. junit. assert. asserttrue ( itor. hasnext ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . apache . olingo . odata2 . ref . model . managertest . value_name , manager . getemployeename ( ) )
[0]: org. junit. assert. assertequals ( itor. hasnext ( ), true )
[1]: org. junit. assert. assertequals ( true, itor. hasnext ( ) )
[2]: org. junit. assert. assertnull ( converter. getmetadata ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), converter. getmetadata ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), fixture. getmetadata ( ) )

************

************
tgt: org . junit . assert . assertfalse ( bid1 . equals ( bid2 ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), converter. getmetadata ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), t. getmetadata ( ) )
[2]: org. junit. assert. assertnotnull ( server. clientbuilder ( true ) )
[3]: org. junit. assert. asserttrue ( server. clientbuilder ( true ) )
[4]: org. junit. assert. asserttrue ( server. clientbuilder ( false ) )

************

************
tgt: org . junit . assert . assertarrayequals ( image1 , image2 )
[0]: org. junit. assert. assertnotnull ( server. clientbuilder ( false ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, qid1. compareto ( qid2 ) )
[3]: org. junit. assert. assertequals ( 0, qid1. compareto ( qid2 ) )
[4]: org. junit. assert. assertequals ( desturlenc, createdurl )

************

************
tgt: org . junit . assert . assertequals ( basicpredgraph2 , basicpredgraph1 . getpredecessor ( ) )
[0]: org. junit. assert. assertequals ( authdomain, createdurl )
[1]: org. junit. assert. assertequals ( destinationurlenc, createdurl )
[2]: org. junit. assert. assertnotnull ( createdurl )
[3]: org. junit. assert. assertequals ( result, createdurl )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertequals ( 1 , parsingresult . getcontext ( ) . getparsingerrors ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( list ( testsubject. tostring ( ) ), result )
[1]: org. junit. assert. assertequals ( aslist ( testsubject. tostring ( ) ), result )
[2]: org. junit. assert. assertequals ( emptylist ( ), result )
[3]: , result )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( expected , actual ) )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. assertequals ( input. size ( ), result. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. size ( ), result. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, permutations. isempty ( ) )

************

************
tgt: org . junit . assert . assertsame ( exception , e )
[0]: org. junit. assert. assertequals ( 1, permutations. isempty ( ) )
[1]: org. junit. assert. assertequals ( null, permutations. isempty ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), permutations )
[3]: org. junit. assert. assertfalse ( schemanoqueries. isaggregationenabled ( ) )
[4]: org. junit. assert. assertnull ( schemanoqueries. isaggregationenabled ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( serializedan )
[0]: org. junit. assert. assertequals ( 0, schemanoqueries. isaggregationenabled ( ) )
[1]: org. junit. assert. assertequals ( false, schemanoqueries. isaggregationenabled ( ) )
[2]: org. junit. assert. assertequals ( 1, req. getparameters ( ). length )
[3]: org. junit. assert. assertnotnull ( req. getparameters ( ) )
[4]: org. junit. assert. assertequals ( 1, req. getparameters ( ). size ( )

************

************
tgt: org . junit . assert . assertequals ( 1000 , sessionconfiguration . getmaxinactiveinterval ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnotnull ( downloaddatafrommogilefile ( existingfile ) )
[3]: org. junit. assert. assertnull ( _c. convert ( null ) )
[4]: org. junit. assert. assertequals ( 0, _c. convert ( null ) )

************

************
tgt: org . junit . assert . assertequals ( rs . get ( pos ) , merged . get ( pos ) )
[0]: org. junit. assert. assertequals ( null, _c. convert ( null ) )
[1]: org. junit. assert. assertnotnull ( _c. convert ( null ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( exception. iscausedbyhttpexception ( ) )
[4]: org. junit. assert. assertequals ( java. util. optional. of ( 1 ), number. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( accessstatus . undetermined , result )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 2 ), number. get ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), number. get ( ) )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( 2 ), number. get ( ) )
[3]: org. junit. assert. assertequals ( java. util. optional. empty ( ), number. get ( ) )
[4]: org. junit. assert. assertequals ( 1, resultaat. getmeldingen ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( storedtimes , org . hamcrest . core . is . is ( persistedtimes ) )
[0]: org. junit. assert. assertequals ( 0, resultaat. getmeldingen ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, commitinfos. gettotal ( ) )
[2]: org. junit. assert. assertequals ( 0, commitinfos. gettotal ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( comment ), commitinfos. gettotal ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( comment ), commitinfos. gettotal ( ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( new java . lang . string [ ] { "a" , "b" , "c" , "d" } , configurable . getenabledprotocols ( ) ) )
[0]: org. junit. assert. assertequals ( 1l, commitinfos. gettotal ( ) )
[1]: org. junit. assert. asserttrue ( m. isempty ( ) )
[2]: org. junit. assert. assertequals ( true, m. isempty ( ) )
[3]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( null, e. getmessage ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( message, e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( string, e. getmessage ( ) )
[2]: . getmessage ( ) )
[3]: org. junit. assert. assertsame ( dynam, com. eclipsesource. v8. utils. v8objectutils. getvalue ( array, java. util. list. class ) )
[4]: org. junit. assert. assertsame (_2, com. eclipsesource. v8. utils. v8objectutils. getvalue ( array, java. util. list. class ) )

************

************
tgt: org . junit . assert . assertequals ( expecteddeploymentinfo , deploymentinfo )
[0]: org. junit. assert. assertsame ( dynam, com. eclipsesource. v8. utils. v8objectutils. getvalue ( array, java. lang. object. class ) )
[1]: org. junit. assert. assertsame ( dynam, array. getvalue ( 0, java. lang. object. class ) )
[2]: org. junit. assert. assertsame ( sag, com. eclipsesource. v8. utils. v8objectutils. getvalue ( array, java. util. list. class ) )
[3]: org. junit. assert. assertarrayequals ( new byte [ ] { 6, 6, 6 }, message. getdata ( ) )
[4]: org. junit. assert. assertarrayequals ( new byte [ ] { 6, 6 }, message. getdata ( ) )

************

************
tgt: org . junit . assert . assertequals ( "fantastic" , supplier . get ( ) )
[0]: org. junit. assert. assertequals ( 1, message. getdata ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( message. getdata ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( null, fa. get ( 0 ) )
[4]: org. junit. assert. assertequals ( 1, fa. get ( 0 ) )

************

************
tgt: org . junit . assert . assertnull ( datatag )
[0]: org. junit. assert. assertequals ( null, fa. get ( 1 ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), fa )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, fr. size ( ) )
[4]: org. junit. assert. assertequals ( 0, fr. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( deviceinformation . interfaceid ( ) . size ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( 3, fr. size ( ) )
[1]: org. junit. assert. assertequals ( 9, fr. size ( ) )
[2]: org. junit. assert. assertequals ( 4, fr. size ( ) )
[3]: org. junit. assert. assertequals ( 1, users. size ( ) )
[4]: org. junit. assert. assertequals ( 0, users. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( com . streamsets . datacollector . security . groupsinscope . executeignoregroups ( callable ) )
[0]: org. junit. assert. assertequals ( 2, users. size ( ) )
[1]: org. junit. assert. assertequals ( 3, users. size ( ) )
[2]: org. junit. assert. assertequals ( 1, users. length )
[3]: org. junit. assert. assertnull ( e. getmessage ( ) )
[4]: org. junit. assert. assertnull ( e )

************

************
tgt: org . junit . assert . assertnotnull ( usergroup )
[0]: org. junit. assert. asserttrue ( originallist. contains ( originallist. get ( 0 ) ) )
[1]: org. junit. assert. assertequals ( originallist. size ( ), originallist. size ( ) )
[2]: org. junit. assert. asserttrue ( originallist. contains ( originallist. indexof ( next ) ) )
[3]: org. junit. assert. asserttrue ( originallist. contains ( originallist. name ( ) ) )
[4]: org. junit. assert. assertequals ( originallist, originallist )

************

************
tgt: org . junit . assert . assertnotnull ( o )
[0]: org. junit. assert. assertequals ( 1, origins. size ( ) )
[1]: org. junit. assert. assertthat ( suggestions, hassize ( 0 ) )
[2]: org. junit. assert. assertthat ( suggestions, hassize ( null ) )
[3]: org. junit. assert. assertthat ( suggestions, hassize ( 1 ) )
[4]: org. junit. assert. assertthat ( suggestions, hassize ( nodes ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertequals ( expectedvalue, result )
[2]: org. junit. assert. assertarrayequals ( expectedvalue, result )
[3]: org. junit. assert. assertequals ( expectedvalue, result [ 0 ] )
[4]: , result )

************

************
tgt: org . junit . assert . assertequals ( expected , ( offset / 1000 ) )
[0]: ) )
[1]: org. junit. assert. assertfalse ( listresponse. getenvironments ( ). isempty ( ) )
[2]: org. junit. assert. asserttrue ( listresponse. getenvironments ( ). isempty ( ) )
[3]: org. junit. assert. assertnull ( listresponse. getenvironments ( ). isempty ( ) )
[4]: org. junit. assert. assertfalse ( listresponse. getenvironments ( ). isempty ( ). true )

************

************
tgt: org . junit . assert . asserttrue ( found )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, list. size ( ) )
[2]: org. junit. assert. assertequals ( 1, count )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, 1 )

************

************
tgt: org . junit . assert . assertarrayequals ( orig , uncompressed )
[0]: org. junit. assert. assertequals ( 1, one )
[1]: org. junit. assert. assertequals ( 0, e. getmessage ( ). length ( ) )
[2]: org. junit. assert. assertequals ( 0, e. getclass ( ) )
[3]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( 0, e. getclass ( ). getclassloader ( ) )

************

************
tgt: org . junit . assert . assertequals ( message , actual )
[0]: org. junit. assert. assertequals ( exception, e )
[1]: org. junit. assert. assertequals ( 1, _count. get ( ) )
[2]: org. junit. assert. assertequals ( 0, _count. get ( ) )
[3]: org. junit. assert. assertequals ( 1, scores. getscore ( ) )
[4]: org. junit. assert. assertnotnull ( director )

************

************
tgt: org . junit . assert . assertequals ( expected . build ( ) , doc )
[0]: org. junit. assert. assertequals ( 1, director. findinheritedadattributes ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, director. findinheritedautattributes ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, director. findinherited8attributes ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( twsearch. findbyusername ( ftweet ) )
[4]: org. junit. assert. assertnotnull ( _search. findbyusername ( ftweet ) )

************

************
tgt: org . junit . assert . asserttrue ( enabled )
[0]: org. junit. assert. assertnotnull ( twsearch. findbyusername ( ftweet. name ) )
[1]: org. junit. assert. assertnotnull ( ftweet )
[2]: ) )
[3]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[4]: org. junit. assert. assertequals ( expected, java. lang. string. format ( rs. tostringunsorted ( rs ) ) )

************

************
tgt: org . junit . assert . assertequals ( expecting , result )
[0]: org. junit. assert. assertequals ( expected, java. lang. string. valueof ( rs. tostringunsorted ( rs ) ) )
[1]: org. junit. assert. assertequals ( expected, java. util. arrays. tostringunsorted ( rs ) )
[2]: ) )
[3]: org. junit. assert. assertarrayequals ( expecteddescriptorarr, sources. toarray ( expecteddescriptorarr ) )
[4]: org. junit. assert. assertarrayequals ( expecteddescriptorarr, sources. toarray ( java. lang. object. class ) )

************

************
tgt: org . junit . assert . asserttrue ( resolver . isajax ( context ) )
[0]: org. junit. assert. assertarrayequals ( expecteddescriptorarr, sources. toarray ( java. lang. string. class ) )
[1]: org. junit. assert. assertarrayequals ( expecteddescriptorarr, sources. toarray ( testsource ) )
[2]: org. junit. assert. assertarrayequals ( expecteddescriptorarr, sources )
[3]: org. junit. assert. assertthat ( result. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[4]: org. junit. assert. assertthat ( result. size ( ), org. hamcrest. corematchers. is ( 0 ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , fixture . getserveraddresses ( ) )
[0]: org. junit. assert. assertnotnull ( generatedtoken )
[1]: org. junit. assert. assertequals ( userid, generatedtoken )
[2]: org. junit. assert. assertnull ( generatedtoken )
[3]: org. junit. assert. assertequals ( user, generatedtoken )
[4]: org. junit. assert. assertnotnull ( createdtoken )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( 1, copy_seq. getelements ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, copy_seq. getelements ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 3, copy_seq. getelements ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( gen_seq ), copy_seq )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( gen_seq ), copy_seq )

************

************
tgt: org . junit . assert . asserttrue ( save . ismodified ( f1 ) )
[0]: org. junit. assert. assertequals ( e1. eval ( t1, ce1, null ), ce1. eval ( t, ce1, null ) )
[1]: org. junit. assert. assertequals ( e1. eval ( t1, ce1, null ), ce1. eval ( t, null, null ) )
[2]: org. junit. assert. assertequals ( e1. eval ( t1, ce1, null ), ce1. eval ( t ) )
[3]: org. junit. assert. assertequals ( e1. eval ( t1, ce1, null ), ce1. eval ( t, ce1 ) )
[4]: org. junit. assert. assertequals ( e1. eval ( t1, ce1. eval ( t, null, null ) ), ce1. eval ( t, ce1 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertthat ( ddf. security. pdp. realm. xacml. xacmlpdptest. testrealm, org. hamcrest. matchers. is ( true ) )
[1]: org. junit. assert. assertthat ( ddf. security. pdp. realm. xacml. xacmlpdptest. testrealm )
[2]: org. junit. assert. assertthat ( ddf. security. pdp. realm. xacml )
[3]: org. junit. assert. assertthat ( ddf )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( mandatorysavingaccounts . size ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertnotnull ( bill )
[1]: org. junit. assert. assertnotnull ( jsdoc. getuserbyusername ( bill ) )
[2]: org. junit. assert. assertnotnull ( ugservice )
[3]: org. junit. assert. assertnotnull ( ugstore )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( link . touri ( ) , org . hamcrest . corematchers . equalto ( rooturi ) )
[0]: org. junit. assert. assertnotnull ( resourcecache. getproductcachedirectory ( ) )
[1]: org. junit. assert. assertnull ( resourcecache. getproductcachedirectory ( ) )
[2]: org. junit. assert. assertequals ( 0, resourcecache. getproductcachedirectory ( ) )
[3]: type ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( numeroatoconcessoriodrawback , detalheexportacao . getatoconcessoriodrawback ( ) )
[0]: org. junit. assert. assertnotnull ( echo. echo ( ""test"" ) )
[1]: org. junit. assert. assertequals ( echo, echo. echo ( ""test"" ) )
[2]: org. junit. assert. assertnotnull ( echo. echo ( 1 ) )
[3]: org. junit. assert. assertequals ( echo, echo. echo ( 1 ) )
[4]: org. junit. assert. assertnotnull ( echo )

************

************
tgt: org . junit . assert . assertfalse ( ( expected == actual ) )
[0]: org. junit. assert. assertequals ( 1, server. bounce_boolean ( true ) )
[1]: org. junit. assert. assertnotnull ( server. bounce_boolean ( true ) )
[2]: org. junit. assert. assertnotnull ( server )
[3]: org. junit. assert. assertequals ( 1, server. bounce_boolean ( false ) )
[4]: org. junit. assert. assertnotnull ( server. bounce_boolean ( false ) )

************

************
tgt: org . junit . assert . assertnull ( previous )
[0]: org. junit. assert. assertequals ( data, data2 )
[1]: org. junit. assert. assertequals ( data, data2. ref )
[2]: org. junit. assert. assertequals ( dataset, data2 )
[3]: org. junit. assert. assertequals ( data. ref, data2 )
[4]: org. junit. assert. assertequals ( data, data1 )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . analysiscount ( ) )
[0]: org. junit. assert. assertequals ( jwtassertion, jwtassertion )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( last ), resultset. events )
[2]: org. junit. assert. assertequals ( 1, resultset. size ( ) )
[3]: org. junit. assert. assertequals ( 1, resultset. children ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( resultset. tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( value , org . hamcrest . corematchers . is ( 16 ) )
[0]: org. junit. assert. assertnotnull ( converted )
[1]: org. junit. assert. assertfalse ( relevant )
[2]: org. junit. assert. assertequals ( false, relevant )
[3]: org. junit. assert. assertnull ( relevant )
[4]: org. junit. assert. assertthat ( relevant )

************

************
tgt: org . junit . assert . assertequals ( "yoda" , person . getname ( ) )
[0]: ) )
[1]: org. junit. assert. assertsame ( d1, d2 )
[2]: org. junit. assert. assertnotnull ( c. peek ( 1 ) )
[3]: org. junit. assert. assertequals ( 1, ( ( int ) ( c. peek ( 1 ) ) ) )
[4]: org. junit. assert. assertequals ( 1, ( ( long ) ( c. peek ( 1 ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , historicincidents )
[0]: org. junit. assert. assertequals ( null, c. peek ( 1 ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( originalvalue, resourceeditproperty. getpropertyvalue ( ) )
[3]: org. junit. assert. assertequals ( origvalue, resourceeditproperty. getpropertyvalue ( ) )
[4]: org. junit. assert. assertequals ( oldvalue, resourceeditproperty. getpropertyvalue ( ) )

************

************
tgt: org . junit . assert . assertthat ( lower . compareto ( higher ) , org . hamcrest . core . is . is ( 0 ) )
[0]: org. junit. assert. assertequals ( clonedvalue, resourceeditproperty. getpropertyvalue ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, nonstopcnt )
[3]: org. junit. assert. assertequals ( 0, nonstopcnt )
[4]: org. junit. assert. assertequals ( while, nonstopcnt )

************

************
tgt: org . junit . assert . assertequals ( size , buf . remaining ( ) )
[0]: , nonstopcnt )
[1]: ) )
[2]: org. junit. assert. assertequals ( n. getpath ( ), n. getpath ( ) )
[3]: org. junit. assert. assertequals ( n, session. getpath ( ) )
[4]: org. junit. assert. assertequals ( n. getpath ( ), null )

************

************
tgt: org . junit . assert . assertequals ( bigdecimaltype . type , com . redhat . lightblue . metadata . types . arith . promote ( bigdecimaltype . type , bigintegertype . type ) )
[0]: org. junit. assert. assertequals ( n. getpath ( ),
[1]: org. junit. assert. assertequals ( n. getpath ( ), new java. util. arraylist ( ) )
[2]: org. junit. assert. assertfalse ( recordwriter. nextkeyvalue ( ) )
[3]: org. junit. assert. assertfalse ( rows. nextkeyvalue ( ) )
[4]: org. junit. assert. assertfalse ( recordwriter. equalsproperly ( ) )

************

************
tgt: org . junit . assert . assertequals ( baseaction . cancel , action . execute ( ) )
[0]: org. junit. assert. assertnull ( recordwriter. nextkeyvalue ( ) )
[1]: org. junit. assert. assertarrayequals ( expectedproper, rows. nextkeyvalue )
[2]: org. junit. assert. assertequals ( vars, result )
[3]: org. junit. assert. assertequals ( variables, result )
[4]: org. junit. assert. assertsame ( vars, result )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( 1, client. getidleconnections ( ) )
[1]: org. junit. assert. assertequals ( 0, client. getidleconnections ( ) )
[2]: org. junit. assert. assertnotnull ( client. getidleconnections ( ) )
[3]: org. junit. assert. 1, client. getidleconnections ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , ranges [ 0 ] )
[0]: org. junit. assert. assertnotnull ( block )
[1]: org. junit. assert. assertequals ( null, block )
[2]: org. junit. assert. assertequals ( e, supported )
[3]: org. junit. assert. assertequals ( e, 1 )
[4]: org. junit. assert. assertequals ( e, java. lang. string. valueof ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( e, java. lang. long. valueof ( 1 ) )
[1]: org. junit. assert. assertequals ( e, java. lang. system. currenttimemillis ( ) )
[2]: org. junit. assert. assertnull ( org. teiid. query. eval. evaluator. evaluate ( ex ) )
[3]: org. junit. assert. assertfalse ( org. teiid. query. eval. evaluator. evaluate ( ex ) )
[4]: org. junit. assert. assertequals ( 0, org. teiid. query. eval. evaluator. evaluate ( ex ) )

************

************
tgt: org . junit . assert . assertthat ( list . size ( ) , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert. assertnull ( evaluate ( ex ) )
[1]: org. junit. assert. assertequals ( 0, org. teiid. query. eval. evaluator. evaluate ( ex ) )
[2]: org. junit. assert. assertequals ( true, player. isop ( ) )
[3]: org. junit. assert. asserttrue ( player. isop ( ) )
[4]: org. junit. assert. assertequals ( true, instance. isop ( ) )

************

************
tgt: org . junit . assert . asserttrue ( booleanselectorelement . getqualifier ( ) )
[0]: org. junit. assert. assertequals ( true, client. isop ( ) )
[1]: org. junit. assert. assertequals ( true, connection. isop ( ) )
[2]: org. junit. assert. assertequals ( date, org. restfulwhois. rdap. common. util. dateutil. parse ( datestring, formatstring ) )
[3]: org. junit. assert. assertequals ( null, org. restfulwhois. rdap. common. util. dateutil. parse ( datestring, formatstring ) )
[4]: org. junit. assert. assertnotnull ( org. restfulwhois. rdap. common. util. dateutil. parse ( datestring, formatstring ) )

************

************
tgt: org . junit . assert . assertthat ( command . accept ( state ) , org . hamcrest . core . is . is ( false ) )
[0]: org. junit. assert. assertequals ( iso, org. restfulwhois. rdap. common. util. dateutil. parse ( datestring, formatstring ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, list. size ( ) )
[3]: org. junit. assert. assertequals ( null, actualdeliveryhash )
[4]: org. junit. assert. asserttrue ( ( actualdeliveryhash == ( - 1 ) ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( "\n" + sql ) + "\n" ) , expected , testutils . formattedresult . resultfactory . tostring ( rs ) )
[0]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), actualdeliveryhash )
[1]: org. junit. assert. assertnotnull ( actualdeliveryhash )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( conn. getnetworktimeout ( ) )
[4]: org. junit. assert. assertequals ( 1, conn. getnetworktimeout ( ) )

************

************
tgt: org . junit . assert . assertequals ( tags , taggedmetric . gettags ( ) )
[0]: org. junit. assert. assertequals ( 0, conn. getnetworktimeout ( ) )
[1]: org. junit. assert. assertequals ( conn. getnetworktimeout ( ), 0 )
[2]: org. junit. assert. assertequals ( 3, conn. getnetworktimeout ( ) )
[3]: org. junit. assert. assertequals ( 0, count )
[4]: org. junit. assert. assertequals ( 1, count )

************

************
tgt: org . junit . assert . assertequals ( 10l , result )
[0]: org. junit. assert. assertequals ( 0, queue. size ( ) )
[1]: org. junit. assert. assertequals ( 0, result. size ( ) )
[2]: org. junit. assert. assertnotnull ( queue )
[3]: org. junit. assert. assertthat ( target. matchexactly ( action ), org. hamcrest. corematchers. is ( true ) )
[4]: org. junit. assert. assertthat ( target. matchexactly ( action ), org. hamcrest. corematchers. is ( false ) )

************

************
tgt: org . junit . assert . assertthat ( restored . isnull ( ) , is ( true ) )
[0]: org. junit. assert. asserttrue ( target. matchexactly ( action ) )
[1]: org. junit. assert. assertthat ( target. matchexactly ( action ), org. hamcrest. corematchers. is ( true ) ) ;
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, org. junit. tests. experimental. rules. testruletest. wasrun )
[4]: org. junit. assert. assertarrayequals ( input, rowkeysplitter. getbuffersize ( ) )

************

************
tgt: org . junit . assert . assertsame ( exception , e )
[0]: org. junit. assert. assertequals ( 1, rowkeysplitter. getbuffersize ( ). length )
[1]: org. junit. assert. assertequals ( input, rowkeysplitter. getbuffersize ( ) )
[2]: org. junit. assert. assertnotnull ( rowkeysplitter. getbuffersize ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, metadata. getrasterheight ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . apache . shindig . gadgets . render . proxyrenderertest . proxied_html_content , content )
[0]: org. junit. assert. assertequals ( 1, metadata. getrasterheight ( ) )
[1]: org. junit. assert. assertequals ( 0l, metadata. getrasterheight ( ) )
[2]: org. junit. assert. assertequals ( 1, handler. getresultlist ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, handler. getresultlist ( ). size ( ) )
[4]: org. junit. assert. assertequals ( serializeddata, service )

************

************
tgt: org . junit . assert . assertthat ( presenter . isdirty ( ) , org . hamcrest . corematchers . equalto ( false ) )
[0]: org. junit. assert. assertequals ( testval, com. tc. util. conversion. bytes2short ( convertedbytes ) )
[1]: org. junit. assert. assertarrayequals ( testval, com. tc. util. conversion. bytes2short ( convertedbytes ) )
[2]: org. junit. assert. assertnotnull ( returnedview )
[3]: org. junit. assert. assertequals ( view, returnedview )
[4]: org. junit. assert. assertthat ( results, org. hamcrest. corematchers. is ( data ) )

************

************
tgt: org . junit . assert . assertnotnull ( pmap . getnsprefixuri ( "ex" ) )
[0]: org. junit. assert. assertthat ( results, contains ( model ) )
[1]: org. junit. assert. assertthat ( results, contains ( data ) )
[2]: org. junit. assert. assertthat ( results, contains ( model, data ) )
[3]: )
[4]: org. junit. assert. assertequals ( options, returnedoptions )

************

************
tgt: org . junit . assert . asserttrue ( bericht . isingangsdatumgelijkinmeegegevenakten ( ) )
[0]: org. junit. assert. assertequals ( element, returnedoptions )
[1]: org. junit. assert. assertequals ( elements, returnedoptions )
[2]: org. junit. assert. assertequals ( list, returnedoptions )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . asserttrue ( ( ( counter . get ( ) ) == 2 ) )
[0]: org. junit. assert. assertnull ( org. sagebionetworks. file. worker. commandlinecachezipentrynameprovider. createzipentryname ( filehandleid, name ) )
[1]: org. junit. assert. assertnull ( org. sagebionetworks. file. worker. commandlinecachezipentrynameprovider. createzipentryname ( name, 1l ) )
[2]: org. junit. assert. assertnull ( org. sagebionetworks. file. worker. commandlinecachezipentrynameprovider. createzipentryname ( name, name ) )
[3]: org. junit. assert. assertnull ( org. sagebionetworks. file. worker. commandlinecachezipentrynameprovider. createzipentryname ( filenamehandleid, name ) )
[4]: org. junit. assert. assertnull ( createzipentryname ( filehandleid, name ) )

************

************
tgt: org . junit . assert . assertthat ( wrongdocument . exists ( ) , org . hamcrest . matchers . is ( true ) )
[0]: org. junit. assert. assertequals ( null, decorator. getdestination ( exchange, null ) )
[1]: org. junit. assert. assertequals ( null, decorator. getdestination ( exchange, message ) )
[2]: org. junit. assert. assertequals ( string, decorator. getdestination ( exchange, null ) )
[3]: org. junit. assert. assertnotnull ( decorator. getdestination ( exchange, message ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( dbms . getaveragelengthwithnullblankrows ( ) )
[0]: org. junit. assert. assertequals ( 1, p. getnum ( ) )
[1]: org. junit. assert. assertequals ( 0, p. getnum ( ) )
[2]: org. junit. assert. assertequals ( 3, p. getnum ( ) )
[3]: org. junit. assert. assertequals ( 1l, p. getnum ( ) )
[4]: org. junit. assert. assertequals ( 5, p. getnum ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( testcollection )
[0]: org. junit. assert. assertequals ( 1, sonia. scm. web. wireprotocol. commandsof ( request ). size ( ) )
[1]: org. junit. assert. assertequals ( 3, sonia. scm. web. wireprotocol. commandsof ( request ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, sonia. scm. web. wireprotocol. commandsof ( request ). size ( ) )
[3]: org. junit. assert. assertequals ( 2, sonia. scm. web. wireprotocol. commandsof ( request ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, sonia. scm. web. wireprotocol. commandsof ( request ). size ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( org . finra . herd . service . helper . nullpointerexception . class . getname ( ) , errorinformation . getmessage ( ) )
[0]: org. junit. assert. assertequals ( 1, view. getcheckeditemposition ( ) )
[1]: org. junit. assert. assertequals ( 1, view. getcheckeditemposition ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, view. getcheckeditemposition ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, view. getcheckeditemposition ( ) )
[4]: org. junit. assert. assertequals ( 1, view. getcheckeditemposition ( ). count ( ) )

************

************
tgt: org . junit . assert . assertfalse ( array . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( marshaller )
[1]: org. junit. assert. assertnotnull ( marshaller. getjaxbelement ( ) )
[2]: org. junit. assert. assertequals ( style, marshaller )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( exceptionthrown )
[0]: org. junit. assert. assertnotnull ( token. print ( null ) )
[1]: org. junit. assert. assertnotnull ( token. print ( java. lang. string. class ) )
[2]: org. junit. assert. assertnotnull ( token. print ( 0 ) )
[3]: org. junit. assert. assertnotnull ( token. print ( 1 ) )
[4]: org. junit. assert. assertnotnull ( token. print ( java. lang. object. class ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( list . size ( ) ) == ( grid . rowcount ( ) ) ) )
[0]: org. junit. assert. assertequals ( firstobject, pool. get ( equalobject ) )
[1]: org. junit. assert. assertfalse ( requestedshutdowncallable. call ( ) )
[2]: org. junit. assert. asserttrue ( requestedshutdowncallable. call ( ) )
[3]: org. junit. assert. assertthat ( requestedshutdowncallable. call ( ), is ( true ) )
[4]: org. junit. assert. assertthat ( requestedshutdowncallable. call ( ), is ( false ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual . getmessage ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. assertequals ( false, result )
[3]: org. junit. assert. asserttrue ( result )
[4]: org. junit. assert. assertfalse ( result )

************

************
tgt: org . junit . assert . assertequals ( "book" , text )
[0]: org. junit. assert. assertthat ( result, org )
[1]: org. junit. assert. assertequals ( 1, context. size ( ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( 1, context. get ( ) )
[4]: org. junit. assert. assertequals ( 1, context. run ( ) )

************

************
tgt: org . junit . assert . assertnull ( twinmetadata )
[0]: ) )
[1]: org. junit. assert. asserttrue ( true )
[2]: org. junit. assert. asserttrue ( (! ( bytessent <= realsyncs ) ) )
[3]: org. junit. assert. asserttrue ( ( ( row. length ) <= ( bytessent ) ) )
[4]: org. junit. assert. asserttrue ( ( ( row. length ) > 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( com . metamx . collections . intsettestutility . equalsets ( com . metamx . collections . intsettestutility . getsetbits ( ) , bitset ) )
[0]: org. junit. assert. assertfalse ( ( ( row. length ) <= bytessent ) )
[1]: org. junit. assert. assertnotnull ( wrapped )
[2]: org. junit. assert. assertequals ( wrapped, wrapped )
[3]: org. junit. assert. assertequals ( 1, wrapped. s )
[4]: org. junit. assert. assertequals ( 1, wrapped. type )

************

************
tgt: org . junit . assert . asserttrue ( sortedemptymap . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, wrapped. msg )
[1]: org. junit. assert. assertequals ( reader, status. nextlong ( ) )
[2]: org. junit. assert. assertnotnull ( status )
[3]: org. junit. assert. assertequals ( scan1, status. nextlong ( ) )
[4]: org. junit. assert. assertequals ( reader, status )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . matchers . is ( expected ) )
[0]: org. junit. assert. assertequals ( scan1, status )
[1]: org. junit. assert. assertequals ( null, d. getprimaryindexkeyofresourceid ( resource, key ). tostring ( ) )
[2]: org. junit. assert. assertequals ( 0, d. getprimaryindexkeyofresourceid ( resource, key ). tostring ( ) )
[3]: org. junit. assert. assertnull ( d. getprimaryindexkeyofresourceid ( resource, key ). tostring ( ) )
[4]: org. junit. assert. assertequals ( false, d. getprimaryindexkeyofresourceid ( resource, key ). tostring ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( objectcollection . getdata ( ) )
[0]: org. junit. assert. assertequals ( 0, d. getprimaryindexkeyofresourceid ( resource, key ). tostring ( ). length )
[1]: org. junit. assert. assertequals ( 1, delete. execute ( ) )
[2]: org. junit. assert. assertequals ( 0, delete. execute ( ) )
[3]: org. junit. assert. assertnotnull ( delete )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , time . minutes ( ) )
[0]: )
[1]: org. junit. assert. assertnotnull ( file )
[2]: org. junit. assert. assertequals ( bytes, param. getvalue ( ) )
[3]: org. junit. assert. assertequals ( bytes. length, param. getvalue ( ) )
[4]: org. junit. assert. assertarrayequals ( bytes, param. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , kandidaten . size ( ) )
[0]: org. junit. assert. assertnotnull ( param. getvalue ( ) )
[1]: org. junit. assert. assertequals ( 1, param. getvalue ( ) )
[2]: org. junit. assert. assertequals ( expected, materialized )
[3]: org. junit. assert. assertequals ( expected, effects )
[4]: org. junit. assert. assertequals ( expected, xstream )

************

************
tgt: org . junit . assert . assertnotnull ( prov )
[0]: org. junit. assert. assertequals ( expected, newfield )
[1]: org. junit. assert. assertequals ( expected, inferred )
[2]: org. junit. assert. assertnotnull ( pes. getservices ( ) )
[3]: org. junit. assert. assertequals ( 1, pes. getservices ( ). length )
[4]: org. junit. assert. assertnull ( pes. getservices ( ) )

************

************
tgt: org . junit . assert . assertsame ( expected , result )
[0]: org. junit. assert. assertequals ( 0, pes. getservices ( ). length )
[1]: org. junit. assert. assertequals ( 1, pes. getservices ( ). size ( )
[2]: org. junit. assert. assertequals ( cell1root, other )
[3]: org. junit. assert. assertequals ( cell1root, other. getfilesystem ( ) )
[4]: org. junit. assert. assertequals ( cell1, other )

************

************
tgt: org . junit . assert . asserttrue ( inv1 . fire ( "foo" ) )
[0]: org. junit. assert. assertequals ( cell2root, other )
[1]: org. junit. assert. assertnotnull ( other )
[2]: org. junit. assert. assertnotnull ( plugin. getid ( ) )
[3]: org. junit. assert. assertequals ( 1, result. length ( ) )
[4]: org. junit. assert. assertequals ( 0, result. length ( ) )

************

************
tgt: org . junit . assert . assertthat ( set . size ( ) , org . hamcrest . corematchers . is ( 3 ) )
[0]: org. junit. assert. assertequals ( 1, result. length ( ) )
[1]: org. junit. assert. assertequals ( 3, result. length ( ) )
[2]: org. junit. assert. assertequals ( ""1"", result )
[3]: org. junit. assert. assertequals ( expecteddiffoutput, actualdiffoutput )
[4]: org. junit. assert. assertequals ( targeturl, actualdiffoutput )

************

************
tgt: org . junit . assert . asserttrue ( resultfromnode ( resultnode ) )
[0]: org. junit. assert. assertequals ( targeturl, commitinfo )
[1]: org. junit. assert. assertequals ( patchdiffoutput, actualdiffoutput )
[2]: org. junit. assert. assertequals ( expecteddiffoutput, commitinfo )
[3]: org. junit. assert. asserttrue ( feature. isenabled ( null ) )
[4]: org. junit. assert. asserttrue ( feature. isenabled ( context ) )

************

************
tgt: org . junit . assert . assertfalse ( ( ( situation == null ) || ( ! ( situation . equalsignorecase ( "" ) ) ) ) )
[0]: org. junit. assert. asserttrue ( feature. isenabled ( 1 ) )
[1]: org. junit. assert. asserttrue ( feature. isenabled ( true ) )
[2]: type ) )
[3]: org. junit. assert. assertnotnull ( delete )
[4]: org. junit. assert. assertequals ( treap, delete )

************

************
tgt: org . junit . assert . asserttrue ( settingserrors . isempty ( ) )
[0]: org. junit. assert. assertnull ( delete )
[1]: org. junit. assert. assertequals ( rootleft, delete )
[2]: org. junit. assert. assertequals ( treeleft, delete )
[3]: org. junit. assert. assertequals ( 1, localfilesys. size ( ) )
[4]: org. junit. assert. assertnotnull ( localfilesys )

************

************
tgt: org . junit . assert . assertfalse ( helper . getcolumnvisibility ( "appid" , "ns" , "kind" , "col" ) )
[0]: org. junit. assert. assertequals ( 1, localfilesys. length )
[1]: org. junit. assert. assertequals ( 1, localfilesys. getid ( ) )
[2]: org. junit. assert. assertequals ( 0, localfilesys. size ( ) )
[3]: org. junit. assert. assertequals ( 0, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), result )
[1]: org. junit. assert. assertequals ( list ( ), result )
[2]: ) )
[3]: org. junit. assert. assertequals ( value, cache. remove ( key, value ) )
[4]: org. junit. assert. assertequals ( value, cache. remove ( key, ( value + 1 ) ) )

************

************
tgt: org . junit . assert . assertnull ( org . apache . usergrid . utils . uuidutils . min ( null , null ) )
[0]: org. junit. assert. assertequals ( value, cache. remove ( key, null ) )
[1]: org. junit. assert. assertequals ( value, cache. remove ( key, new java. lang. string ( ) ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 100, srgl13. getmeantimetorepairinhours ( ) )
[4]: org. junit. assert. assertequals ( 1, srgl13. getmeantimetorepairinhours ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( thrown )
[0]: org. junit. assert. assertequals ( 0, srgl13. getmeantimetorepairinhours ( ). size ( ) )
[1]: org. junit. assert. assertequals ( srgl13. getmeantimetorepairinhours ( ), 100 )
[2]: org. junit. assert. assertequals ( 1, srgl13. getmeantimetorepairinhours ( ). count ( ) )
[3]: org. junit. assert. assertequals ( 1, entity. getcomponents ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, ( ( int ) ( entity. getcomponents ( ). size ( ) ) ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( components ), entity. getcomponents ( ) )
[1]: org. junit. assert. assertequals ( 1, ( ( int ) ( entity. getcomponents ( ). get ( 0 ) ) ) )
[2]: org. junit. assert. assertequals ( 1, ( ( int ) ( entity. getcomponents ( ). get ( 0 ) ) ). size ( ) )
[3]: org. junit. assert. assertequals ( v8array, list. get ( 0 ) )
[4]: org. junit. assert. assertnull ( list. get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , events . size ( ) )
[0]: org. junit. assert. assertequals ( null, list. get ( 0 ) )
[1]: org. junit. assert. assertequals ( v8array, list. get ( 1 ) )
[2]: get ( 0 ) )
[3]: org. junit. assert. assertnotnull ( tested. gettaskmanager ( ) )
[4]: org. junit. assert. assertequals ( 1, tested. gettaskmanager ( ) )

************

************
tgt: org . junit . assert . assertequals ( "foo" , value )
[0]: org. junit. assert. assertequals ( ""test"", tested. gettaskmanager ( ) )
[1]: org. junit. assert. assertnotnull ( tested. gettaskmanager ( ). get ( 0 ) )
[2]: org. junit. assert. assertnotnull ( tested. gettaskmanager ( ). get ( ) )
[3]: org. junit. assert. assertequals ( expectedbuilder, actualsink )
[4]: org. junit. assert. assertequals ( expectedbuilder, actualsink. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedtitle , explorerscreen . gettitle ( ) )
[0]: org. junit. assert. assertequals ( expectedbuilder. actualsink, actualsink )
[1]: org. junit. assert. assertequals ( expectedbuilder. get ( ), actualsink )
[2]: org. junit. assert. assertequals ( expectedbuilder, actualsink. relation )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 100323 ), result )
[4]: org. junit. assert. assertequals ( result, new java. lang. integer ( 100323 ) )

************

************
tgt: org . junit . assert . assertthat ( each . getmaxfieldsize ( ) , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( 1l ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: ) )
[3]: org. junit. assert. assertequals ( a, b )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertnotnull ( keywords )
[0]: org. junit. assert. assertequals ( b, a )
[1]: org. junit. assert. assertequals ( expected, gb )
[2]: org. junit. assert. assertequals ( expected, buch )
[3]: org. junit. assert. assertequals ( 1, screen. getmenu ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), screen. getmenu ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , ( ( int ) ( diagnosis . getid ( ) ) ) )
[0]: org. junit. assert. assertequals ( null, screen. getmenu ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), screen )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), screen. getmenu )
[3]: org. junit. assert. assertequals ( 1, numoutputrecords )
[4]: org. junit. assert. assertequals ( 0, numoutputrecords )

************

************
tgt: org . junit . assert . asserttrue ( result . get ( ) )
[0]: org. junit. assert. assertnull ( com. rapid7. client. dcerpc. msrrp. dto. registryhive. getregistryhivebyname ( null ) )
[1]: org. junit. assert. assertnotnull ( com. rapid7. client. dcerpc. msrrp. dto. registryhive. getregistryhivebyname ( null ) )
[2]: org. junit. assert. assertnull ( com. rapid7. client. dcerpc. msrrp. dto. registryhive. getregistryhivebyname ( """" ) )
[3]: org. junit. assert. assertnotnull ( com. rapid7. client. dcerpc. msrrp. dto. registryhive. getregistryhivebyname ( """" ) )
[4]: org. junit. assert. assertnull ( com. rapid7. client. dcerpc. msrrp. dto. registryhive. getregistryhivebyname ( """" ) )

************

************
tgt: org . junit . assert . asserttrue ( "testfix<sp>error<sp>!!!" , ( ( org . apache . hadoop . io . mapfile . fix ( fs , dir , org . apache . hadoop . io . intwritable . class , org . apache . hadoop . io . text . class , true , org . apache . hadoop . io . testmapfile . conf ) ) == pair_size ) )
[0]: org. junit. assert. asserttrue ( encoder. getflags ( ) )
[1]: org. junit. assert. assertfalse ( encoder. getflags ( ) )
[2]: test testz1 )
[3]: test test5 )
[4]: testtest1 )

************

************
tgt: org . junit . assert . assertfalse ( module . login ( ) )
[0]: org. junit. assert. assertequals ( list, com. feilong. core. util. collectionsutil. selectrejected ( list, null, ( ( java. lang. string [ ] ) ( null ) ) ) )
[1]: org. junit. assert. assertequals ( list, com. feilong. core. util. collectionsutil. selectrejected ( list, ""name"", ( ( java. lang. string [ ] ) ( null ) ) ) )
[2]: org. junit. assert. assertequals ( list, com. feilong. core. util. collectionsutil. selectrejected ( list, liubei, ( ( java. lang. string [ ] ) ( null ) ) ) )
[3]: org. junit. assert. assertequals ( list, com. feilong. core. util. collectionsutil. selectrejected ( list, ""name"", ( ( java. lang. string [ ] ) ( null ) ) ) )
[4]: org. junit. assert. assertequals ( list, com. feilong. core. util. collectionsutil. selectrejected ( list, null, null ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . integer . valueof ( 2 ) , result )
[0]: org. junit. assert. assertfalse ( isumllinknotdetected ( fromclass, toclass ) )
[1]: org. junit. assert. assertequals ( 1l, num )
[2]: org. junit. assert. assertequals ( abstracthttpspandecoratortest. get_method, org. apache. camel. opentracing. decorators. abstracthttpspandecoratortest. gethttpmethod ( exchange, endpoint ) )
[3]: org. junit. assert. assertequals ( abstracthttpspandecoratortest. test_method, org. apache. camel. opentracing. decorators. abstracthttpspandecoratortest. gethttpmethod ( exchange, endpoint ) )
[4]: org. junit. assert. assertequals ( abstracthttpspandecoratortest. expected, org. apache. camel. opentracing. decorators. abstracthttpspandecoratortest. gethttpmethod ( exchange, endpoint ) )

************

************
tgt: org . junit . assert . assertnull ( asset )
[0]: org. junit. assert. assertequals ( abstracthttpspandecoratortest. b_method, org. apache. camel. opentracing. decorators. abstracthttpspandecoratortest. gethttpmethod ( exchange, endpoint ) )
[1]: org. junit. assert. assertequals ( abstracthttpspandecoratortest. get_method, org. apache. camel. opentracing. decorators. abstracthttpspandecoratortest. gethttpmethod ( exchange, endpoint ). get_method )
[2]: org. junit. assert. assertequals ( 1, instance. getwarnings ( ). size ( ) )
[3]: org. junit. assert. assertequals ( result, 1 )
[4]: org. junit. assert. assertequals ( result, 0 )

************

************
tgt: org . junit . assert . assertequals ( "sean" , last )
[0]: org. junit. assert. assertequals ( result, 2 )
[1]: org. junit. assert. assertequals ( result, 200 )
[2]: ) )
[3]: org. junit. assert. assertnull ( software. amazon. awssdk. core. util. idempotentutils. resolvestring ( idempotencytoken ) )
[4]: org. junit. assert. assertnotnull ( software. amazon. awssdk. core. util. idempotentutils. resolvestring ( idempotencytoken ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , count )
[0]: org. junit. assert. assertequals ( null, software. amazon. awssdk. core. util. idempotentutils. resolvestring ( idempotencytoken ) )
[1]: org. junit. assert. assertequals ( """", software. amazon. awssdk. core. util. idempotentutils. resolvestring ( idempotencytoken ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( this. root. getname ( ) )
[4]: org. junit. assert. assertnotnull ( this. project. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , getcountat ( org . openehealth . ipf . commons . test . performance . throughput . throughputdistributionstatisticstest . last_bin_index , distribution ) )
[0]: org. junit. assert. assertnotnull ( this. user. getname ( ) )
[1]: org. junit. assert. assertnotnull ( this. name. getname ( ) )
[2]: org. junit. assert. assertnotnull ( this. config. getname ( ) )
[3]: org. junit. assert. asserttrue ( errors. hasfielderrors ( ""name"" ) )
[4]: org. junit. assert. assertequals ( true, errors. hasfielderrors ( ""name"" ) )

************

************
tgt: org . junit . assert . assertequals ( absolutedir , fsys . getworkingdirectory ( ) )
[0]: org. junit. assert. assertequals ( 1, errors. hasfielderrors ( ""name"" ) )
[1]: org. junit. assert. asserttrue ( errors. hasfielderrors ( null ) )
[2]: org. junit. assert. assertequals ( 1, errors. hasfielderrors ( ""name"" ) )
[3]: org. junit. assert. assertequals ( swapped, correct )
[4]: org. junit. assert. assertnotnull ( correct )

************

************
tgt: org . junit . assert . assertsame ( layer , reference )
[0]: org. junit. assert. assertequals ( swapped, correctly )
[1]: org. junit. assert. assertequals ( swapped, actual )
[2]: )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( result, validator )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( result, null )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( result, validation )
[3]: org. junit. assert. assertarrayequals ( principal1. toarray ( ), principal2. toarray ( ) )
[4]: org. junit. assert. assertnotnull ( contextid )

************

************
tgt: org . junit . assert . asserttrue ( ( ( id1 . compareto ( id2 ) ) > 0 ) )
[0]: org. junit. assert. assertnull ( contextid )
[1]: org. junit. assert. assertthat ( contextid )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( expectedresult, result )

************

************
tgt: org . junit . assert . assertequals ( "value" , settingsbean . getcustomsourcevalue ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( expectedresult ), result )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( expectedresult ), result )
[2]: org. junit. assert. assertequals ( result, expectedresult )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( status . name ( ) , taskcompletionevent . gettaskstatus ( ) . name ( ) )
[0]: org. junit. assert. assertequals ( 1, countzero )
[1]: org. junit. assert. assertequals ( countzero, 1 )
[2]: org. junit. assert. assertequals ( s0, retval )
[3]: org. junit. assert. assertequals ( s1, retval )
[4]: org. junit. assert. assertequals ( true, retval )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. asserttrue ( rs. next ( ) )
[1]: org. junit. assert. assertfalse ( rs. next ( ) )
[2]: org. junit. assert. assertnotnull ( rs )
[3]: org. junit. assert. assertnotnull ( rs. next ( ) )
[4]: org. junit. assert. assertequals ( true, rs )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( canonicalname, classname. getname ( ) )
[1]: org. junit. assert. assertequals ( canonicalname, classname. tostring ( ) )
[2]: org. junit. assert. assertequals ( canonicalname, classname )
[3]: org. junit. assert. assertequals ( canonicalname, classname. trim ( ) )
[4]: org. junit. assert. assertequals ( canonicalname, classname. get ( ) )

************

************
tgt: org . junit . assert . assertfalse ( violation )
[0]: org. junit. assert. assertnotnull ( it )
[1]: org. junit. assert. assertequals ( new alluxio. proto. journal. journalentry ( ), it )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), it )
[3]: org. junit. assert. assertequals ( 1, it. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , computed )
[0]: org. junit. assert. assertnotnull ( n )
[1]: org. junit. assert. assertequals ( ""a"", n )
[2]: org. junit. assert. assertequals ( ""test"", n )
[3]: org. junit. assert. assertnotnull ( ns )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( result , expected )
[0]: org. junit. assert. assertequals ( 0l, count )
[1]: org. junit. assert. assertnotnull ( file )
[2]: org. junit. assert. assertnotnull ( file. getfilecharsetname ( file ) )
[3]: org. junit. assert. assertnotnull ( java. lang. system. getproperty ( file ) )
[4]: org. junit. assert. assertnotnull ( java. lang. system. currenttimemillis ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( re. getcause ( ) )
[2]: org. junit. assert. assertequals ( 0, re. getcause ( ). size ( ) )
[3]: org. junit. assert. assertequals ( null, re. getcause ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. class, re. getcause ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , server . finishediterationcount ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( null, empty. getdestionationwaypointid ( ) )
[2]: org. junit. assert. assertequals ( 1, empty. getdestionationwaypointid ( ) )
[3]: org. junit. assert. assertequals ( expected, empty. getdestionationwaypointid ( ) )
[4]: org. junit. assert. assertequals ( 1, empty. getdestionationwaypointid ( ). length )

************

************
tgt: org . junit . assert . assertnotnull ( action )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, c. poolmaxwaiters ( poolmaxwaiters ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, c. poolmaxwaiters ( poolmaxwaiters ). get ( ) )
[3]: org. junit. assert. assertequals ( 0, c. poolmaxwaiters ( poolmaxwaiters ). size ( ) )
[4]: org. junit. assert. assertnotnull ( c. poolmaxwaiters ( poolmaxwaiters ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , branch_conditions . size ( ) )
[0]: org. junit. assert. assertequals ( 1, c. poolmaxwaiters ( poolmaxwaiters ). list ( ). length )
[1]: org. junit. assert. asserttrue ( instance. accept ( name ) )
[2]: org. junit. assert. assertfalse ( instance. accept ( name ) )
[3]: org. junit. assert. assertequals ( true, instance. accept ( name ) )
[4]: org. junit. assert. asserttrue ( instance. accepts ( name ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , deserialized . getannotations ( ) . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expectedresponse, attrs )
[2]: org. junit. assert. assertequals ( expectedresponse, attributes )
[3]: org. junit. assert. assertequals ( expectedresponse, actualresponse )
[4]: org. junit. assert. assertequals ( expectedresponse, found )

************

************
tgt: org . junit . assert . assertequals ( expected , out )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( getactivitytype ( ) )
[2]: org. junit. assert. assertnotnull ( getactivitytype ( ). build ( ) )
[3]: org. junit. assert. assertnotnull ( getactivitytype ( ). getid ( ) )
[4]: org. junit. assert. assertnotnull ( getactivitytype ( ). collection ( ) )

************

************
tgt: org . junit . assert . assertnull ( rs1 )
[0]: org. junit. assert. assertnotnull ( getactivitytype ( ). get ( ) )
[1]: org. junit. assert. assertnotnull ( id )
[2]: org. junit. assert. assertequals ( id, topicbytes )
[3]: org. junit. assert. assertequals ( id, id )
[4]: org. junit. assert. assertequals ( 1, id. length )

************

************
tgt: org . junit . assert . assertequals ( versaoaplicacao , protocoloinfo . getversaoaplicacao ( ) )
[0]: org. junit. assert. assertequals ( id, type )
[1]: org. junit. assert. assertequals ( 0, query. fetch ( ). size ( ) )
[2]: org. junit. assert. assertnull ( query. fetch ( ) )
[3]: org. junit. assert. assertnotnull ( query. fetch ( ) )
[4]: org. junit. assert. assertequals ( 0, query. fetch ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( program . isstopped ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, getvisits ( java. util. collections. emptylist ( ), java. util. collections. emptylist ( ), null, null, null, null, null, null, false ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, getvisits ( java. util. collections. emptylist ( ), java. util. collections. emptylist ( ), null, null, null, null, null, false ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, getvisits ( java. util. collections. emptylist ( ), java. util. collections. emptylist ( ), null, null, null, null, null, null, false ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, getvisits ( java. util. collections. emptylist ( ), java. util. collections. emptylist ( ), null, null, null, null, null, null, false ) )

************

************
tgt: org . junit . assert . assertnotnull ( descr )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, numbers. length )
[2]: org. junit. assert. assertarrayequals ( new java. lang. integer [ ] { }, numbers )
[3]: org. junit. assert. assertequals ( 1, numbers. length )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), numbers )

************

************
tgt: org . junit . assert . assertequals ( 0 , type . getparameters ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), numbers )
[1]: org. junit. assert. assertnotnull ( uri. tostring ( ) )
[2]: org. junit. assert. assertequals ( expected, uri. tostring ( ) )
[3]: org. junit. assert. assertequals ( uri. tostring ( ), uri. tostring ( ) )
[4]: org. junit. assert. assertequals ( null, uri. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( set1 . get ( 1 ) , sequence1 . get ( 1 ) )
[0]: . tostring ( ) )
[1]: org. junit. assert. assertequals ( true, org. sagebionetworks. repo. model. table. tableconstants. isreservedcolumnname ( null ) )
[2]: org. junit. assert. assertequals ( false, org. sagebionetworks. repo. model. table. tableconstants. isreservedcolumnname ( null ) )
[3]: org. junit. assert. assertfalse ( result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( 5 , transformer . getminpts ( ) )
[0]: org. junit. assert. asserttrue ( result )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 1, roles. size ( ) )
[4]: org. junit. assert. assertequals ( 0, roles. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( tablequeryconfig , actualconfig )
[0]: org. junit. assert. assertequals ( 3, roles. size ( ) )
[1]: org. junit. assert. assertequals ( 2, roles. size ( ) )
[2]: org. junit. assert. assertequals ( 5, roles. size ( ) )
[3]: org. junit. assert. assertequals ( global, converted )
[4]: org. junit. assert. assertequals ( local, converted )

************

************
tgt: org . junit . assert . assertequals ( persoonbericht , persoon1 )
[0]: org. junit. assert. assertequals ( null, converted )
[1]: org. junit. assert. assertequals ( string, converted )
[2]: , converted )
[3]: org. junit. assert. assertequals ( expresult, result, 1.0 )
[4]: org. junit. assert. assertequals ( deque, deque. getfirst ( ) )

************

************
tgt: org . junit . assert . assertequals ( e1 , e2 )
[0]: org. junit. assert. assertequals ( deque. getfirst ( ), deque )
[1]: org. junit. assert. assertnull ( deque. getfirst ( ) )
[2]: org. junit. assert. assertequals ( new java. util. arraylist ( ), deque )
[3]: ) )
[4]: org. junit. assert. asserttrue ( records. isempty ( ) )

************

************
tgt: org . junit . assert . assertthat ( configuration . asmap ( ) . size ( ) , org . hamcrest . matchers . is ( 0 ) )
[0]: org. junit. assert. assertnotnull ( records )
[1]: org. junit. assert. assertnull ( records )
[2]: ) )
[3]: )
[4]: org. junit. assert. asserttrue ( net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , tuple . len ( ) )
[0]: org. junit. assert. assertnotnull ( net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )
[1]: org. junit. assert. assertequals ( 1, net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )
[2]: org. junit. assert. assertequals ( true, net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )
[3]: org. junit. assert. assertfalse ( net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )
[4]: org. junit. assert. assertnull ( l. lock ( true ) )

************

************
tgt: org . junit . assert . asserttrue ( org . jboss . as . test . integration . jsf . managedbean . xml . simplejsfxmlmanagedbean . ispostconstructcalled ( ) )
[0]: org. junit. assert. assertequals ( double. max_value, ( ( double ) ( hll. count ( ) ) ), delta )
[1]: org. junit. assert. assertequals ( 1.0, ( ( double ) ( hll. count ( ) ) ), delta )
[2]: org. junit. assert. assertequals ( double. min ( size, ( ( double ) ( hll. count ( ) ) ), delta )
[3]: org. junit. assert. assertequals ( ( ( double ) ( size ) ), ( ( double ) ( hll. count ( ) ) ) )
[4]: org. junit. assert. assertequals ( double. min ( size, ( ( double ) ( hll. count ( ) ) ), delta, delta )

************

************
tgt: org . junit . assert . assertequals ( "value<sp>{0\\}" , result )
[0]: org. junit. assert. assertnotnull ( lcnee )
[1]: org. junit. assert. assertnotnull ( lcnee. getmessage ( ) )
[2]: org. junit. assert. assertequals ( 1, lcnee. count )
[3]: org. junit. assert. assertnotnull ( values. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 0, values. getvalue ( ) )

************

************
tgt: org . junit . assert . assertfalse ( rs . next ( ) )
[0]: org. junit. assert. assertequals ( 1, values. getvalue ( ) )
[1]: org. junit. assert. assertequals ( 0, values. getvalue ( ). length )
[2]: ) )
[3]: org. junit. assert. assertthat ( period, org. hamcrest. corematchers. is ( this. start. plus ( period ) ) )
[4]: org. junit. assert. assertthat ( this. start, org. hamcrest. corematchers. is ( this. end ) )

************

************
tgt: org . junit . assert . assertfalse ( write ( 10 ) )
[0]: org. junit. assert. assertthat ( period, org. hamcrest. corematchers. is ( this. start ) )
[1]: org. junit. assert. assertthat ( this. start, org. hamcrest. corematchers. is ( this. start ) )
[2]: add ( this. end ) )
[3]: org. junit. assert. assertequals ( 0, v1. compareto ( v2 ) )
[4]: org. junit. assert. assertequals ( 1, v1. compareto ( v2 ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . getcontent ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( markdown, result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( markdown, actual )
[3]: org. junit. assert. assertequals ( markdown, results )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( tstheader )
[0]: org. junit. assert. assertequals ( 1, myservice. size ( ) )
[1]: org. junit. assert. assertequals ( 1, localreporter. size ( ) )
[2]: org. junit. assert. assertequals ( 0, myservice. size ( ) )
[3]: org. junit. assert. assertequals ( 0, localreporter. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , schemas . size ( ) )
[0]: org. junit. assert. assertequals ( 0, hello. sayhello ( ) )
[1]: org. junit. assert. assertequals ( 1, hello. sayhello ( ) )
[2]: org. junit. assert. assertequals ( 0, hello. sayhello ( ). length )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), hello )
[4]: type ) )

************

************
tgt: org . junit . assert . asserttrue ( sbf . issubgraph ( ) )
[0]: org. junit. assert. asserttrue ( trie. contains ( null ) )
[1]: org. junit. assert. assertfalse ( trie. contains ( null ) )
[2]: org. junit. assert. asserttrue ( trie. contains ( java. lang. string. class ) )
[3]: org. junit. assert. asserttrue ( trie. contains ( ""a"" ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( response . geterrors ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, appconfig. getconfddirectory ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( params ), appconfig. getconfddirectory ( ) )
[2]: org. junit. assert. assertnotnull ( appconfig. getconfddirectory ( ) )
[3]: org. junit. assert. assertequals ( 0, appconfig. getconfddirectory ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( params ), appconfig. getconfdsdirectory ( ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( expected ) ) )
[0]: org. junit. assert. assertequals ( o1, map. get ( oid1 ) )
[1]: org. junit. assert. assertequals ( o1, map. get ( oid2 ) )
[2]: org. junit. assert. assertequals ( o1, map. get ( oid1. oid1 ) )
[3]: org. junit. assert. assertnotnull ( map. get ( oid1 ) )
[4]: org. junit. assert. assertequals ( o1, map. get ( oid1. oid2 ) )

************

************
tgt: org . junit . assert . asserttrue ( syncdevices . isempty ( ) )
[0]: org. junit. assert. assertequals ( record. fieldtype ( ), record1. fieldtype ( ) )
[1]: org. junit. assert. assertequals ( record. fieldtype ( id ), record1. fieldtype ( ) )
[2]: org. junit. assert. assertequals ( record. fieldtype ( 0 ), record1. fieldtype ( ) )
[3]: org. junit. assert. assertequals ( record. fieldtype ( 1 ), record1. fieldtype ( ) )
[4]: org. junit. assert. assertequals ( record, record1. fieldtype ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( results1 . size ( ) , results2 . size ( ) )
[0]: org. junit. assert. assertequals ( org. apache. oozie. fluentjob. api. action. testfsactionbuilder. deletes, fsaction. getdeletes ( ) )
[1]: org. junit. assert. assertequals ( org. apache. oozie. fluentjob. api. action. testfsactionbuilder. deletes. length, fsaction. getdeletes ( ). size ( ) )
[2]: org. junit. assert. assertequals ( list ( org. apache. oozie. fluentjob. api. action. testfsactionbuilder. deletes ), fsaction. getdeletes ( ) )
[3]: org. junit. assert. assertequals ( 1, fsaction. getdeletes ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( org. apache. oozie. fluentjob. api. action. testfsactionbuilder. deletes ), fsaction )

************

************
tgt: org . junit . assert . asserttrue ( ( ( writer . getconstructorproviders ( ) ) != null ) )
[0]: org. junit. assert. assertequals ( 1, wrapper. getcount ( ) )
[1]: org. junit. assert. assertequals ( 1l, wrapper. getcount ( ) )
[2]: org. junit. assert. assertequals ( 0, wrapper. getcount ( ) )
[3]: org. junit. assert. assertequals ( 1 ), wrapper. getcount ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( org . pentaho . platform . plugin . services . importexport . commandlineprocessor . getexception ( ) )
[0]: org. junit. assert. assertnotnull ( tm. getlabel ( ) )
[1]: org. junit. assert. assertequals ( 1, tm. getlabel ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), tm. getlabel ( ) )
[3]: org. junit. assert. assertequals ( null, tm. getlabel ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "hello" , result )
[0]: org. junit. assert. assertequals ( edu. columbia. cs. psl. test. phosphor. droidbenchimplicititcase. gettaint ( imei ), 0 )
[1]: org. junit. assert. assertequals ( edu. columbia. cs. psl. test. phosphor. droidbenchimplicititcase. gettaint ( imei ), 1 )
[2]: org. junit. assert. assertnull ( value )
[3]: org. junit. assert. assertnotnull ( value )
[4]: org. junit. assert.null ( value )

************

************
tgt: org . junit . assert . assertequals ( false , dm . loadscript ( "nashorn" , "test" , javascriptsource ) )
[0]: , value )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( pattern. getfieldentityidchangelisteners ( ) )
[3]: org. junit. assert. assertnotnull ( pattern. getfieldentityidentityidchangelisteners ( ) )
[4]: org. junit. assert. assertequals ( 1, pattern. getfieldentityidchangelisteners ( ) )

************

************
tgt: org . junit . assert . assertequals ( driver . rotation ( ) , landscapeleftrotation )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( 1, methods. size ( ) )
[4]: org. junit. assert. assertequals ( 0, methods. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( 2, methods. size ( ) )
[1]: org. junit. assert. assertequals ( 1, method. size ( ) )
[2]: org. junit. assert. assertequals ( 3, methods. size ( ) )
[3]: org. junit. assert. assertequals ( str_en1, decode )
[4]: org. junit. assert. assertequals ( str_en0, decode )

************

************
tgt: org . junit . assert . assertfalse ( encounter . hasdiagnosis ( diagnosis ) )
[0]: org. junit. assert. assertequals ( str, decode )
[1]: org. junit. assert. assertequals ( str>en1, decode )
[2]: , decode )
[3]: org. junit. assert. assertnotnull ( e. getsource ( ) )
[4]: org. junit. assert. assertnotnull ( indexupgrader. getmigratedindexes ( ) )

************

************
tgt: org . junit . assert . assertequals ( 50 , tested . getminute ( ) )
[0]: org. junit. assert. assertnull ( indexupgrader. getmigratedindexes ( ) )
[1]: org. junit. assert. assertequals ( 1, indexupgrader. getmigratedindexes ( ). length )
[2]: org. junit. assert. assertnotnull ( indexupgrader. getmigratedindexes ( ). isempty ( ) )
[3]: org. junit. assert. assertnotnull ( indexupgrader. getmigratedindexes ( ). iterator ( ) )
[4]: org. junit. assert. assertequals ( 0, cmp. compare ( d1, d2 ) )

************

************
tgt: org . junit . assert . assertequals ( returnedacl , acl )
[0]: org. junit. assert. assertequals ( 1, cmp. compare ( d1, d2 ) )
[1]: org. junit. assert. assertequals ( 0, compare ( d1, d2 ) )
[2]: org. junit. assert. assertequals ( 1, compare ( d1, d2 ) )
[3]: org. junit. assert. assertequals ( 0, cmp. compare ( d2, d1 ) )
[4]: org. junit. assert. assertequals ( 1, allstates. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( expr . accept ( visitor ) , visitresult )
[0]: org. junit. assert. assertequals ( 0, allstates. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), allstates )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( firsthalfstates ), allstates )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( firsthalfstates ), allstates )
[4]: org. junit. assert. assertequals ( 1, res. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( originelestapel . size ( ) , rondverteerdestapel . size ( ) )
[0]: org. junit. assert. assertequals ( 0, res. size ( ) )
[1]: org. junit. assert. asserttrue ( loop )
[2]: org. junit. assert. assertequals ( true, loop )
[3]: org. junit. assert. assertequals ( false, loop )
[4]: org. junit. assert. assertfalse ( loop )

************

************
tgt: org . junit . assert . asserttrue ( isschemanotfound )
[0]: org. junit. assert. assertnotnull ( loop )
[1]: org. junit. assert. assertarrayequals ( new char [ ] { 1, 2, 3 }, array )
[2]: org. junit. assert. assertarrayequals ( new char [ ] { 1, 2, 3, 4, 5 }, array )
[3]: org. junit. assert. assertarrayequals ( new char [ ] { 1, 2, 3, 4 }, array )
[4]: org. junit. assert. assertarrayequals ( new char [ ] { 1, 1, 2, 3 }, array )

************

************
tgt: org . junit . assert . assertequals ( 10 , buttons . size ( ) )
[0]: org. junit. assert. assertequals ( 1, array. length )
[1]: org. junit. assert. assertequals ( 1, all. isempty ( ) )
[2]: org. junit. assert. assertequals ( true, all. isempty ( ) )
[3]: org. junit. assert. asserttrue ( all. isempty ( ) )
[4]: org. junit. assert. assertequals ( 0, all. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( checksameanalysis ( jsontwitterinputfile , tokenoutjson , m ) )
[0]: org. junit. assert. assertequals ( false, all. isempty ( ) )
[1]: org. junit. assert. assertequals ( null, failedtask. getname ( ) )
[2]: org. junit. assert. assertnotnull ( failedtask )
[3]: org. junit. assert. assertequals ( 1, failedtask. getname ( ) )
[4]: org. junit. assert. assertequals ( 0, failedtask. getname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertequals ( null, failedtask )
[1]: org. junit. assert. assertequals ( 0, emptystream. size ( ) )
[2]: org. junit. assert. assertequals ( emptystream. get ( 0 ), 0 )
[3]: org. junit. assert. assertequals ( 0, emptystream. length )
[4]: org. junit. assert. assertequals ( null, emptystream )

************

************
tgt: org . junit . assert . asserttrue ( expr . matches ( atom , 1 ) )
[0]: org. junit. assert. assertnotnull ( emptystream )
[1]: org. junit. assert. assertnotnull ( model. getinheritconverter ( ) )
[2]: org. junit. assert. assertequals ( 1, model. getinheritconverter ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, model. getinheritconverter ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, model. getinheritconverter ( ) )

************

************
tgt: org . junit . assert . assertequals ( 200 , response . getstatuscode ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( null, cache. get ( ""k1"" ) )
[2]: org. junit. assert. assertequals ( null, cache. get ( 0 ) )
[3]: org. junit. assert. assertequals ( null, cache. get ( ""k11"" ) )
[4]: org. junit. assert. assertequals ( null, cache. get ( ""k1 ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . size ( ) )
[0]: org. junit. assert. assertequals ( null, cache. get ( ""k11 ) )
[1]: org. junit. assert. assertthat ( jsonrepresentation. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[2]: org. junit. assert. assertthat ( jsonrepresentation. size ( ), org. hamcrest. corematchers. is ( 0 ) )
[3]: org. junit. assert. assertthat ( jsonrepresentation. size ( ), org. hamcrest. corematchers. is ( 5 ) )
[4]: org. junit. assert. assertthat ( jsonrepresentation. size ( ), org. hamcrest. corematchers. is ( 3 ) )

************

************
tgt: org . junit . assert . asserttrue ( found . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, jsonrepresentation. size ( ) )
[1]: org. junit. assert. assertequals ( annotation, result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( annotated, result )
[4]: org. junit. assert. assertequals ( annot, result )

************

************
tgt: org . junit . assert . assertnull ( principal )
[0]: org. junit. assert. assertequals ( annotation, results )
[1]: org. junit. assert. assertequals ( elementfirst, expectedchildfirst. get ( i ) )
[2]: org. junit. assert. assertequals ( elements [ i ], expectedchildfirst. get ( i ) )
[3]: org. junit. assert. assertequals ( elementfirst, elements. get ( i ) )
[4]: org. junit. assert. assertequals ( elements. get ( i ), expectedchildfirst )

************

************
tgt: org . junit . assert . assertfalse ( jsonobject1 . equals ( jsonobject2 ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( com. cloud. server. statscollectortest. graphite_default_port, port )
[2]: org. junit. assert. assertequals ( com. cloud. server. statisticscollectortest. graphite_default_port, port )
[3]: org. junit. assert. assertequals ( com. cloud. server. statscollectortest. mapite_default_port, port )
[4]: org. junit. assert. assertequals ( com. cloud. server. statscollectortest. graphch_default_port, port )

************

************
tgt: org . junit . assert . asserttrue ( filethatdoesntexist . exists ( ) )
[0]: org. junit. assert. assertequals ( 1, port )
[1]: org. junit. assert. assertsame ( microserviceversionrule, microserviceversionrule )
[2]: org. junit. assert. assertsame ( assertnotnull, microserviceversionrule )
[3]: org. junit. assert. assertsame ( testserviceversionrule, microserviceversionrule )
[4]: org. junit. assert. assertnotnull ( microserviceversionrule )

************

************
tgt: org . junit . assert . assertequals ( "hello<sp>world" , filesystem . readfileifitexists ( filepath ) . get ( ) )
[0]: org. junit. assert. assertsame ( microserviceversionrule )
[1]: org. junit. assert. assertequals ( address, text )
[2]: org. junit. assert. assertnotnull ( text )
[3]: org. junit. assert. assertequals ( addr, text )
[4]: org. junit. assert. assertnull ( text )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( email, text )
[1]: org. junit. assert. assertnotnull ( melding )
[2]: org. junit. assert. assertequals ( melding, melding )
[3]: org. junit. assert. assertequals ( 1, melding. length )
[4]: org. junit. assert. assertnotnull ( melding. trim ( ) )

************

************
tgt: org . junit . assert . asserttrue ( trackupdater . getpairwithlayers ( ) . isempty ( ) )
[0]: org. junit. assert. assertnull ( melding )
[1]: org. junit. assert. asserttrue ( ix. verify ( new org. cojen. tupl. largevaluetest. verificationobserver ( ) ) )
[2]: org. junit. assert. asserttrue ( ix. verify ( null ) )
[3]: org. junit. assert. asserttrue ( ix. verify ( org. cojen. tupl. largevaluetest. serializablevalue ( 592 ) ) )
[4]: org. junit. assert. asserttrue ( ix. verify ( org. cojen. tupl. largevaluetest. key ( 943, 1 ) ) )

************

************
tgt: org . junit . assert . assertequals ( expected , com . github . bordertech . wcomponents . util . htmlsanitizerutil . sanitize ( input ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( mod, mod. add ( mod ) )
[2]: org. junit. assert. assertsame ( mod, mod. add ( mod ) )
[3]: org. junit. assert. assertnotnull ( mod. add ( mod ) )
[4]: org. junit. assert. assertnull ( mod. add ( mod ) )

************

************
tgt: org . junit . assert . assertthat ( target . getedgeactions ( "node1" ) , org . hamcrest . corematchers . is ( actions ) )
[0]: ) )
[1]: org. junit. assert. assertarrayequals ( new org. eclipse. swt. widgets. tableitem [ ] { item2 }, table. getselection ( ) )
[2]: org. junit. assert. assertarrayequals ( item2. getselection ( ), table. getselection ( ) )
[3]: org. junit. assert. assertarrayequals ( new org. eclipse. swt. widgets. tableitem [ ] { item1 }, table. getselection ( ) )
[4]: org. junit. assert. assertarrayequals ( new java. lang. object [ ] { item2 }, table. getselection ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( signature )
[0]: org. junit. assert. assertarrayequals ( item1. getselection ( ), table. getselection ( ) )
[1]: org. junit. assert. assertequals ( 1, app. executeapplication ( args ) )
[2]: org. junit. assert. asserttrue ( target. parse ( ) )
[3]: org. junit. assert. assertnull ( target. parse ( ) )
[4]: org. junit. assert. assertnotnull ( target. parse ( ) )

************

************
tgt: org . junit . assert . assertequals ( result . size ( ) , 0 )
[0]: org. junit. assert. assertthat ( target. parse ( ), org
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, median )
[3]: org. junit. assert. assertequals ( 5, median )
[4]: org. junit. assert. assertequals ( 15, median )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( 1, presenter. getview ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, presenter. getview ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), presenter. getview ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), presenter. getview ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( view ), presenter )

************

************
tgt: org . junit . assert . asserttrue ( ( builder instanceof org . pentaho . big . data . impl . vfs . hdfs . nc . namedclusterconfigbuilder ) )
[0]: org. junit. assert. assertnotnull ( config )
[1]: org. junit. assert. assertequals ( deserialized, deserialized )
[2]: org. junit. assert. assertequals ( deserialized. getinstance ( ), deserialized )
[3]: org. junit. assert. assertnotnull ( deserialized )
[4]: org. junit. assert. assertequals ( null, deserialized. getinstance ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedblob , blob )
[0]: org. junit. assert. assertequals ( deserialized. getinstance ( ), deserialized. value )
[1]: org. junit. assert. assertequals ( 1, response. size ( ) )
[2]: org. junit. assert. assertnotnull ( response )
[3]: org. junit. assert. assertequals ( 0, response. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), response )

************

************
tgt: org . junit . assert . assertsame ( table1 , tables . get ( namespace ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), response )
[1]: org. junit. assert. assertequals ( 1, query. getcriterions ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 2, query. getcriterions ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, queries. getcriterions ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, query. getcriterions ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( results . iterator ( ) . hasnext ( ) )
[0]: org. junit. assert. assertnotnull ( query. getcriterions ( ) )
[1]: org. junit. assert. assertarrayequals ( array1, array2 )
[2]: org. junit. assert. assertequals ( array1, array2 )
[3]: org. junit. assert. assertarrayequals ( array1, array1 )
[4]: org. junit. assert. assertnotnull ( array1 )

************

************
tgt: org . junit . assert . assertequals ( toxml ( expected ) , toxml ( actual ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( com. gabstudios. cmdline. cmdline. class, e. getclass ( ) )
[2]: org. junit. assert. assertequals ( com. gabstudios. cmdline. cmdline. instance, e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( com. gabstudios. cmdline. cmdline. classes, e. getclass ( ) )
[4]: org. junit. assert. assertequals ( com. gabstudios. cmdline. cmdline. instance, e )

************

************
tgt: org . junit . assert . assertequals ( java . lang . integer . valueof ( 0 ) , done . get ( ) )
[0]: org. junit. assert. assertequals ( com. gabstudios. cmdline. cmdline. classes, e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 0, result. size ( ) )
[3]: org. junit. assert. assertequals ( token, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( 0 , results . size ( ) )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( token, results )
[2]: , result )
[3]: org. junit. assert. assertequals ( determinator. getname ( ), determinehistorylevel )
[4]: org. junit. assert. assertequals ( determinator. getname ( ), determinehistorylevel. getname ( ) )

************

************
tgt: org . junit . assert . assertnull ( upload )
[0]: org. junit. assert. assertequals ( determinator. defaulthistorylevel, determinehistorylevel )
[1]: org. junit. assert. assertequals ( determinator. getname ( ), determinehistorylevel. defaulthistorylevel )
[2]: org. junit. assert. assertequals ( determinator. getname ( ), determinehistorylevel. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( streamwithencoding. getwriter ( ) )
[4]: org. junit. assert. assertnotnull ( streamwithencoding )

************

************
tgt: org . junit . assert . assertequals ( origin , reconstructed )
[0]: org. junit. assert. assertequals ( stream, streamwithencoding. getwriter ( ) )
[1]: org. junit. assert. assertnull ( streamwithencoding. getwriter ( ) )
[2]: org. junit. assert. assertequals ( stream. getwriter ( ), streamwithencoding )
[3]: org. junit. assert. assertequals ( true, playerofgivencountry )
[4]: org. junit. assert. assertequals ( false, playerofgivencountry )

************

************
tgt: org . junit . assert . assertequals ( 1 , names . size ( ) )
[0]: org. junit. assert. asserttrue ( playerofgivencountry )
[1]: org. junit. assert. assertequals ( true, playerofgivencountry == false )
[2]: org. junit. assert. assertequals ( true, playerofgivencountry == true )
[3]: org. junit. assert. assertequals ( 0, configuration. size ( ) )
[4]: org. junit. assert. assertequals ( 1, configuration. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( canprescribe ( d ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), configuration )
[1]: org. junit. assert. assertnull ( configuration )
[2]: org. junit. assert. assertnotnull ( configuration )
[3]: org. junit. assert. assertnotnull ( value )
[4]: org. junit. assert. assertnull ( value )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( null, value )
[1]: , value )
[2]: ) )
[3]: org. junit. assert. assertequals ( line, song. getname ( ) )
[4]: org. junit. assert. assertnull ( song. getname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( com . ebay . pulsar . analytics . datasource . datasourcetyperegistry . getallsupporteddatasourcetypes ( ) . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( string, song. getname ( ) )
[1]: org. junit. assert. assertnotnull ( song. getname ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, json. get ( org. phenotips. data. internal. controller. lifestatuscontrollertest. data_name ) )
[4]: org. junit. assert. assertequals ( 0, json. get ( org. phenotips. data. internal. controller. lifestatuscontrollertest. data_name ). length ( ) )

************

************
tgt: org . junit . assert . assertequals ( input , result )
[0]: org. junit. assert. assertequals ( org. phenotips. data. internal. controller. lifestatuscontrollertest. deceased, json. get ( org. phenotips. data. internal. controller. lifestatuscontrollertest. name ) )
[1]: org. junit. assert. assertequals ( 0, json. length ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, sources. size ( ) )
[4]: org. junit. assert. assertnotnull ( md. getdocument ( ) )

************

************
tgt: org . junit . assert . assertequals ( eventcount , event . gettouchcount ( ) )
[0]: org. junit. assert. assertnull ( md. getdocument ( ) )
[1]: org. junit. assert. assertequals ( null, md. getdocument ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), md. getdocument ( ) )
[3]: org. junit. assert. assertnotnull ( md )
[4]: org. junit. assert. assertnull ( invalidgauge. getsamplevalue ( null ) )

************

************
tgt: org . junit . assert . assertarrayequals ( teobjectutil . te_lsp_exclude_route , org . opendaylight . protocol . util . bytearray . getallbytes ( output ) )
[0]: org. junit. assert. assertnull ( invalidgauge. getsamplevalue ( ""name"" ) )
[1]: org. junit. assert. assertnull ( invalidgauge. getsamplevalue ( ""a"" ) )
[2]: org. junit. assert. assertnull ( invalidgauge. getsamplevalue ( ""foo"" ) )
[3]: org. junit. assert. assertnull ( invalidgauge. getsamplevalue ( name ) )
[4]: org. junit. assert. assertequals ( true, meta. supportserrorhandling ( ) )

************

************
tgt: org . junit . assert . assertthat ( pathelement . getparent ( ) , org . hamcrest . core . is . is ( parentpathelement ) )
[0]: org. junit. assert. assertequals ( false, meta. supportserrorhandling ( ) )
[1]: org. junit. assert. assertfalse ( meta. supportserrorhandling ( ) )
[2]: org. junit. assert. asserttrue ( containsgroup ( ssrcsimgroup. getid ( ), ssrcsimgroup ) )
[3]: org. junit. assert. asserttrue ( containsgroup ( ssrcsimgroup. tostring ( ), ssrcsimgroup ) )
[4]: org. junit. assert. asserttrue ( containsgroup ( ssrcsimgroup. name ( ), ssrcsimgroup ) )

************

************
tgt: org . junit . assert . assertequals ( "cannot<sp>specify<sp>an<sp>empty<sp>collection<sp>for<sp>input<sp>urls." , e . getmessage ( ) )
[0]: org. junit. assert. asserttrue ( containsgroup ( ssrcsimgroup. serialize ( ), ssrcsimgroup ) )
[1]: org. junit. assert. asserttrue ( containsgroup ( ssrcsimgroup, ssrcsimgroup ) )
[2]: org. junit. assert. assertequals ( 0, styles. size ( ) )
[3]: org. junit. assert. assertequals ( 1, styles. size ( ) )
[4]: org. junit. assert. assertnull ( styles )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( l1 , l2 , l3 ) , rule . getlimits ( ) )
[0]: org. junit. assert. assertequals ( 0, styles. length )
[1]: org. junit. assert. assertnotnull ( styles )
[2]: org. junit. assert. assertequals ( 1, copy. getappcollectors ( ). length )
[3]: org. junit. assert. assertnotnull ( copy. getappcollectors ( ) )
[4]: org. junit. assert. assertequals ( 0, copy. getappcollectors ( ). length )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( 0, copy. getappcollectors ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, targets. keyset ( ) )
[3]: org. junit. assert. assertequals ( 2, targets. keyset ( ) )
[4]: org. junit. assert. assertequals ( 2, servicetrackermap. keyset ( ) )

************

************
tgt: org . junit . assert . assertequals ( sheep . getage ( ) , age )
[0]: org. junit. assert. assertequals ( 1, servicetrackermap. keyset ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, reservationstatus. getnumber ( ) )
[3]: org. junit. assert. assertequals ( 1, reservationstatus. getnumber ( ) )
[4]: org. junit. assert. assertnotnull ( reservationstatus )

************

************
tgt: org . junit . assert . asserttrue ( ( i0 == 16 ) )
[0]: org. junit. assert. assertequals ( 0, reservationstatus. getnumber ( ). length )
[1]: org. junit. assert. assertnull ( reservationstatus )
[2]: org. junit. assert. assertequals ( com. conveyal. r5. otp2. rangeraptor. transit. tripscheduleexactmatchsearchtest. forward, subject. getcandidatetriptime ( ) )
[3]: org. junit. assert. assertequals ( 1, subject. getcandidatetriptime ( ). size ( ) )
[4]: org. junit. assert. assertequals ( com. conveyal. r5. otp2. rangeraptor. transit. tripscheduleexactmatchsearchtest. message, subject. getcandidatetriptime ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( jcn )
[0]: org. junit. assert. assertequals ( 0, subject. getcandidatetriptime ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, subject. getcandidatetriptime ( ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertequals ( expected, future )

************

************
tgt: org . junit . assert . asserttrue ( this . expectedbagofcharacters ( characters ) )
[0]: org. junit. assert. assertequals ( expected, output )
[1]: ) )
[2]: org. junit. assert. assertequals ( testx86_64, org. adoptopenjdk. jitwatch. model. assembly. architecture. parsefromlogline ( testx86_37 ) )
[3]: org. junit. assert. assertequals ( testx86_64, org. adoptopenjdk. jitwatch. model. assembly. architecture. parsefromlogline ( testx86date ) )
[4]: org. junit. assert. assertequals ( testx86_64, org. adoptopenjdk. jitwatch. model. assembly. architecture. parsefromlogline ( testx86_33 ) )

************

************
tgt: org . junit . assert . assertequals ( session , manager . getexistingsession ( "2348031234567" ) )
[0]: org. junit. assert. assertequals ( testx86_64, org. adoptopenjdk. jitwatch. model. assembly. architecture. parsefromlogline ( testx86low ) )
[1]: org. junit. assert. assertnotnull ( org. adoptopenjdk. jitwatch. model. assembly. architecture. parsefromlogline ( testx86_64 ) )
[2]: org. junit. assert. assertequals ( null, transformed )
[3]: org. junit. assert. assertnull ( transformed )
[4]: org. junit. assert. assertnotnull ( transformed )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertsame ( transformed, subject )
[1]: ( transformed ) )
[2]: org. junit. assert. assertnotnull ( orgname )
[3]: org. junit. assert. assertequals ( orgname, orgname )
[4]: org. junit. assert. assertnull ( orgname )

************

************
tgt: org . junit . assert . assertarrayequals ( new java . lang . integer [ ] { 7 , 6 , 5 } , this . profile . getsamplerates ( ) )
[0]: org. junit. assert. assertequals ( orgname, null )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert.null ( result )
[4]: null ) )

************

************
tgt: org . junit . assert . assertequals ( esperado , obtido )
[0]: ) )
[1]: null )
[2]: org. junit. assert. assertnotnull ( field. realsheetname )
[3]: org. junit. assert. assertnotnull ( field )
[4]: org. junit. assert. assertequals ( 1, field. realsheetname )

************

************
tgt: org . junit . assert . assertnull ( org . eclipse . rap . rwt . internal . service . contextprovider . getuisession ( ) )
[0]: org. junit. assert. assertequals ( 1, datamock. realsheetname )
[1]: org. junit. assert. assertequals ( 1, field. realsheetname ( ) )
[2]: org. junit. assert. assertnotnull ( e )
[3]: org. junit. assert. assertequals ( 1, 1 )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , ps . size ( ) )
[0]: )
[1]: 
[2]: org. junit. assert. asserttrue ( event. iscanceled ( ) )
[3]: org. junit. assert. assertequals ( event. iscanceled ( ), true )
[4]: org. junit. assert. assertequals ( result, contextpath )

************

************
tgt: org . junit . assert . assertequals ( 100 , frame . getmaximumprogress ( ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( contextpath, result )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: , result )
[4]: org. junit. assert. assertequals ( null, mapsubsetfilter. filter ( null ) )

************

************
tgt: org . junit . assert . assertequals ( guideddecisiontableconstants . instance . executeworkitemactions ( ) , org . drools . workbench . screens . guided . dtable . client . wizard . column . pages . common . decisiontablecolumnviewutils . getcolumnmanagementgrouptitle ( column ) )
[0]: org. junit. assert. assertequals ( true, mapsubsetfilter. filter ( null ) )
[1]: org. junit. assert. assertequals ( ii, nestedlists. size ( ) )
[2]: org. junit. assert. assertequals ( ii. size ( ), 1 )
[3]: org. junit. assert. assertequals ( 1, nestedlists. size ( ) )
[4]: org. junit. assert. assertequals ( ii, serializedlists. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( existingassettagstats , newassettagstats )
[0]: org. junit. assert. assertequals ( ii, nestedlists )
[1]: org. junit. assert. assertequals ( true, cube. hasmetadata ( org. arquillian. cube. impl. client. cubemetadatatest. testmetadataimpl. class ) )
[2]: org. junit. assert. asserttrue ( cube. hasmetadata ( org. arquillian. cube. impl. client. cubemetadatatest. testmetadataimpl. class ) )
[3]: org. junit. assert. assertequals ( false, cube. hasmetadata ( org. arquillian. cube. impl. client. cubemetadatatest. testmetadataimpl. class ) )
[4]: org. junit. assert. assertthat ( cube. hasmetadata ( java. lang. string. class ), org. hamcrest. core. is. is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( exp , sum . nestedintweightedsum ( root ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, extractedimages. size ( ) )
[2]: org. junit. assert. assertequals ( null, extractedimages )
[3]: org. junit. assert. assertnull ( extractedimages )
[4]: , extractedimages )

************

************
tgt: org . junit . assert . assertequals ( "this<sp>is<sp>new<sp>text" , originalobject . getteststring ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( ( connection instanceof com. pawelmaslyk. gerritintegration4sonar. gerrit. emptygerritcommitfromsonarsettings ), true )
[2]: org. junit. assert. assertequals ( new com. pawelmaslyk. gerritintegration4sonar. gerrit. emptygerritcommitfromsonarsettings ( ), connection )
[3]: org. junit. assert. assertequals ( ( new com. pawelmaslyk. gerritintegration4sonar. gerrit. emptygerritcommitfromsonarsettings ( ) ), connection )
[4]: org. junit. assert. assertequals ( ( connection instanceof com. pawelmaslik. gerritintegration4sonar. gerrit. emptygerritcommitfromsonarsettings ), true )

************

************
tgt: org . junit . assert . assertequals ( 1 , resultlist . size ( ) )
[0]: org. junit. assert. assertequals ( ( connection instanceof com. pawelmaslyk. gerritintegration4sonar. gerrit. emptygerritcommitfromsonarsettings ), false )
[1]: org. junit. assert. assertequals ( checksumvalue, checksumvalue )
[2]: org. junit. assert. assertnotnull ( checksumvalue )
[3]: org. junit. assert. assertequals ( checksumvalue, checksumdata )
[4]: org. junit. assert. assertnull ( checksumvalue )

************

************
tgt: org . junit . assert . assertequals ( expectedvalue , createdvalue )
[0]: org. junit. assert. assertequals ( checksumvalue, checksumstring )
[1]: org. junit. assert. asserttrue ( manifest. checkschema ( ) )
[2]: org. junit. assert. assertequals ( false, selecteditemdefinition. ispresent ( ) )
[3]: org. junit. assert. assertequals ( true, selecteditemdefinition. ispresent ( ) )
[4]: org. junit. assert. assertequals ( old, p7. getname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( errors . isempty ( ) )
[0]: org. junit. assert. assertequals ( old, p4. getname ( ) )
[1]: org. junit. assert. assertequals ( new, p7. getname ( ) )
[2]: org. junit. assert. assertequals ( old, p7. name ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( new java. lang. object ( ""a"" ), value )

************

************
tgt: org . junit . assert . asserttrue ( patterns . isempty ( ) )
[0]: org. junit. assert. assertequals ( new java. lang. object ( ""1"" ), value )
[1]: org. junit. assert. assertequals ( new java. lang. object ( ""test"" ), value )
[2]: org. junit. assert. assertequals ( new java. lang. object ( ""bar"" ), value )
[3]: org. junit. assert. assertequals ( new java. lang. object ( ), value )
[4]: org. junit. assert. assertnotnull ( run ( ""name"" ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( baos . tobytearray ( ) , instance . tojson ( ) . getbytes ( ) ) )
[0]: org. junit. assert. assertnotnull ( run ( null ) )
[1]: org. junit. assert. assertnotnull ( run ( collection ( ) ) )
[2]: org. junit. assert. assertnotnull ( run ( info ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( result, request )

************

************
tgt: org . junit . assert . assertequals ( set ( rootsrc1 , rootsrc2 ) , set ( scope ) )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), out. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( ), out. tostring ( ) )
[3]: org. junit. assert. assertequals ( 1, out. tostring ( ). length ( ) )
[4]: org. junit. assert. assertequals ( 1, out. tostring ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( aredependencytypesdetected ( fromclass , toclass , typestofind , true ) )
[0]: org. junit. assert. assertnotnull ( out. tostring ( ) )
[1]: org. junit. assert. assertequals ( result, outcome_modification_error )
[2]: org. junit. assert. assertnotnull ( allraxaalert )
[3]: org. junit. assert. assertequals ( 1, allraxaalert )
[4]: org. junit. assert. assertequals ( 1, allraxaalert. length )

************

************
tgt: org . junit . assert . assertequals ( ( ( com . spotify . folsom . ketamaintegrationtest . value2 ) + ( com . spotify . folsom . ketamaintegrationtest . value1 ) ) , client . get ( com . spotify . folsom . ketamaintegrationtest . key1 ) . tocompletablefuture ( ) . get ( ) )
[0]: get ( 0 ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( e. getdumpfilepath ( ) )
[3]: org. junit. assert. assertequals ( e. getdumpfilepath ( ), e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( e. getdumpfilepath ( ), null )

************

************
tgt: org . junit . assert . assertfalse ( pokemons . isrecognized ( ) )
[0]: org. junit. assert. assertequals ( 1, e. getdumpfilepath ( ). size ( ) )
[1]: org. junit. assert. assertequals ( e. getdumpfilepath ( ), false )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( 1, prepared. evaluateexpressions ( start, attrs ). size ( ) )
[4]: org. junit. assert. assertnotnull ( prepared. evaluateexpressions ( start, attrs ) )

************

************
tgt: org . junit . assert . asserttrue ( path . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, prepared. evaluateexpressions ( start, attrs ) )
[1]: org. junit. assert. assertequals ( 1, prepared. evaluateexpressions ( null, attrs ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( true, result. iscomplete ( ) )
[4]: org. junit. assert. assertequals ( false, result. iscomplete ( ) )

************

************
tgt: org . junit . assert . assertsame ( java . io . printwriter . class , datasource . getlogwriter ( ) . getclass ( ) )
[0]: org. junit. assert. assertequals ( 1, result. iscomplete ( ) )
[1]: org. junit. assert. assertequals ( 0, result. iscomplete ( ) )
[2]: org. junit. assert. assertequals ( org. apache. qpid. jms. provider. providerfuture. iscomplete ( ), true )
[3]: org. junit. assert. assertequals ( 524, shortesttrack. getlength ( ) )
[4]: org. junit. assert. assertequals ( 524, shortesttrack )

************

************
tgt: org . junit . assert . asserttrue ( helper . hasassets ( pkg ) )
[0]: org. junit. assert. assertequals ( 1, shortesttrack. getlength ( ) )
[1]: org. junit. assert. assertequals ( 451, shortesttrack. getlength ( ) )
[2]: org. junit. assert. assertequals ( 15, shortesttrack. getlength ( ) )
[3]: org. junit. assert. assertnull ( testtransactionmanager. searchflow ( searchkey ) )
[4]: org. junit. assert. assertnotnull ( testtransactionmanager. searchflow ( searchkey ) )

************

************
tgt: org . junit . assert . assertequals ( "testvalue" , value )
[0]: org. junit. assert. assertequals ( 1, taskreportresults. size ( ) )
[1]: org. junit. assert. assertthat ( customeraccount. getcustomeraccount ( ), org. hamcrest. corematchers. is ( customeraccount ) )
[2]: org. junit. assert. assertthat ( customeraccount, org. hamcrest. corematchers. is ( customeraccount ) )
[3]: org. junit. assert. assertthat ( customeraccount, org. hamcrest. corematchers. is ( accountaccount ) )
[4]: org. junit. assert. assertthat ( customeraccount )

************

************
tgt: org . junit . assert . assertequals ( 4 , customers . size ( ) )
[0]: org. junit. assert. assertthat ( customeraccount, code getcustomeraccount ( ) )
[1]: org. junit. assert. assertequals ( 1, itemcount )
[2]: org. junit. assert. assertequals ( null, da. getdoctype ( ) )
[3]: org. junit. assert. assertequals ( 1, da. getdoctype ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), da. getdoctype ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( numjobs + 1 ) , overview . getjobs ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), da )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, aantalhersteldeberichten )
[3]: org. junit. assert. assertequals ( 0, aantalhersteldeberichten )
[4]: org. junit. assert. assertequals ( 1, anantalhersteldeberichten )

************

************
tgt: org . junit . assert . assertequals ( io . netty . buffer . unpooled . buffer ( ) , actual )
[0]: org. junit. assert. assertequals ( 1, aantalhersteldeberichten. length )
[1]: org. junit. assert. assertequals ( 1, aantalhersteldeberichten )
[2]: org. junit. assert. assertnull ( table. exists ( ) )
[3]: org. junit. assert. assertarrayequals ( new java. lang. integer [ ] { 1, 2, 3, 4 }, i. toarray ( ) )
[4]: org. junit. assert. assertarrayequals ( new java. lang. integer [ ] { 1, 2, 3, 4, 5 }, i. toarray ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( initialcount + 1 ) , count )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4, 5, 6 ), i. toarray ( ) )
[1]: org. junit. assert. assertarrayequals ( new java. lang. integer [ ] { 1, 2, 3 }, i. toarray ( ) )
[2]: org. junit. assert. assertarrayequals ( new java. lang. integer [ ] { 1, 2, 3, 4 }, i. toarray ( ), 0 )
[3]: org. junit. assert. assertequals ( 0, actual. compareto ( expected ) )
[4]: org. junit. assert. assertthat ( getminavailable ( 2 ), org. hamcrest. matchers. equalto ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , ksession . fireallrules ( ) )
[0]: org. junit. assert. assertthat ( getminavailable ( 5 ), org. hamcrest. matchers. equalto ( 0 ) )
[1]: org. junit. assert. assertthat ( getminavailable ( 2 ), org. hamcrest. matchers. equalto ( 4 ) )
[2]: org. junit. assert. assertthat ( getminavailable ( 2 ), org. hamcrest. matchers. is ( 0 ) )
[3]: org. junit. assert. assertthat ( getminavailable ( 5 ), org. hamcrest. matchers. is ( 0 ) )
[4]: org. junit. assert. assertequals ( numinputs, scheduler. get ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( info )
[0]: org. junit. assert. assertequals ( numinputs, numinputs )
[1]: org. junit. assert. assertequals ( numinputs, executorfuture. get ( ) )
[2]: org. junit. assert. assertequals ( numinputs, scheduler. size ( ) )
[3]: org. junit. assert. assertequals ( numinputs, count )
[4]: org. junit. assert. asserttrue ( cli. isconnected ( ) )

************

************
tgt: org . junit . assert . assertequals ( subject , mbmessage . getbody ( ) )
[0]: org. junit. assert. assertequals ( grammar, resource. geterrors ( ). tostring ( ) )
[1]: org. junit. assert. assertequals ( 1, meldingen. size ( ) )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( result, null )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertsame ( test , base )
[0]: org. junit. assert. asserttrue ( ( result == null )
[1]: null, result )
[2]: org. junit. assert. assertequals ( expected, out )
[3]: org. junit. assert. assertequals ( out, out )
[4]: org. junit. assert. assertnotnull ( out )

************

************
tgt: org . junit . assert . asserttrue ( ( count >= 2 ) )
[0]: org. junit. assert. assertequals ( output, out )
[1]: org. junit. assert. assertequals ( null, out )
[2]: org. junit. assert. assertequals ( 1, target. getlabelsymbols ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, cs. getlabelsymbols ( ). size ( ) )
[4]: org. junit. assert. assertequals ( source, target. getlabelsymbols ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , resulta . compareto ( resultb ) )
[0]: org. junit. assert. assertnotnull ( cs. getlabelsymbols ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, comparator. compare ( comparator. tostring ( ), null ) )
[3]: org. junit. assert. assertequals ( 0, comparator. compare ( comparator, null ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), comparator. compare ( comparator, null ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , set . size ( ) )
[0]: org. junit. assert. assertequals ( 0, comparator. compare ( null, comparator. tostring ( ) ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), comparator. compare ( comparator, null ) )
[2]: org. junit. assert. assertequals ( 4, queryevents. size ( ) )
[3]: org. junit. assert. assertequals ( 3, queryevents. size ( ) )
[4]: org. junit. assert. assertequals ( 2, queryevents. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , spans . length )
[0]: org. junit. assert. assertequals ( 6, queryevents. size ( ) )
[1]: org. junit. assert. assertequals ( 1, queryevents. size ( ) )
[2]: org. junit. assert. assertequals ( first, firstnullobject )
[3]: org. junit. assert. assertnull ( firstnullobject )
[4]: org. junit. assert. assertnotnull ( firstnullobject )

************

************
tgt: org . junit . assert . assertequals ( authorization . bad_request , result )
[0]: org. junit. assert. assertequals ( expectedrequest, mockserver )
[1]: org. junit. assert. assertequals ( expectedrequest, mockrequest )
[2]: org. junit. assert. assertnotnull ( expectedrequest )
[3]: org. junit. assert. assertnotnull ( mockrequest )
[4]: org. junit. assert. assertnotnull ( response )

************

************
tgt: org . junit . assert . asserttrue ( cz . zcu . kiv . jop . util . arrayutils . equals ( a1 , a2 ) )
[0]: org. junit. assert. asserttrue ( diagnosis. haserrors ( ) )
[1]: org. junit. assert. assertequals ( 1, diagnosis. haserrors ( ) )
[2]: org. junit. assert. assertfalse ( diagnosis. haserrors ( ) )
[3]: org. junit. assert. assertequals ( 0, diagnosis. haserrors ( ) )
[4]: org. junit. assert. assertnotnull ( diagnosis. haserrors ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( expected, results )
[1]: org. junit. assert. assertequals ( expected, result )
[2]: org. junit. assert. assertequals ( expected, resultjoin )
[3]: org. junit. assert. assertequals ( expected, resultbinding )
[4]: org. junit. assert. assertequals ( expected, list )

************

************
tgt: org . junit . assert . assertequals ( 0 , foutieveparsings )
[0]: org. junit. assert. assertequals ( old, test. getval ( ) )
[1]: org. junit. assert. assertnotnull ( test. getval ( ) )
[2]: org. junit. assert. assertequals ( old, testcase. getval ( ) )
[3]: org. junit. assert. assertnull ( test. getval ( ) )
[4]: org. junit. assert. assertequals ( old, tests. getval ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ! failed ) )
[0]: org. junit. assert. assertequals ( 1, compare )
[1]: org. junit. assert. assertequals ( 0, compare )
[2]: org. junit. assert. assertequals ( compare, 1 )
[3]: org. junit. assert. assertequals ( compare, 0 )
[4]: , compare )

************

************
tgt: org . junit . assert . assertequals ( true , result )
[0]: org. junit. assert. assertequals ( actual, actuals )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: public void method_1 ( ) { }
[3]: public void init ( ) { }
[4]: public void print ( ) { }

************

************
tgt: org . junit . assert . assertnotnull ( jsonobject )
[0]: org. junit. assert. assertfalse ( result )
[1]: org. junit. assert. assertequals ( false, result )
[2]: org. junit. assert. assertthat ( result )
[3]: org. junit. assert.false ( result )
[4]: org. junit. assert. assertthat ( result, org )

************

************
tgt: org . junit . assert . assertequals ( 3 , ids . size ( ) )
[0]: org. junit. assert. assertequals ( 1, listener. getstate ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, listener. getstate ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, listener. getstate ( ). get ( ) )
[3]: org. junit. assert. assertequals ( null, listener. getstate ( ) )
[4]: org. junit. assert. assertnotnull ( listener. getstate ( ) )

************

************
tgt: org . junit . assert . assertequals ( messages . tostring ( ) , 1 , messages . size ( ) )
[0]: org. junit. assert. assertnotnull ( syncbericht )
[1]: org. junit. assert. assertequals ( syncbericht, syncbericht )
[2]: org. junit. assert. assertequals ( null, syncbericht )
[3]: org. junit. assert. assertequals ( syncbericht, txbericht )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "" , org . uberfire . backend . server . util . paths . removeprefix ( repositoryroot , repositoryroot ) )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertequals ( 0, list. size ( ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 25 ), list. size ( ) )
[3]: org. junit. assert. assertequals ( 1l, list. size ( ) )
[4]: org. junit. assert. assertequals ( 3, list. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( loadhandler )
[0]: org. junit. assert. assertequals ( route, ctx. getrequest ( ) )
[1]: org. junit. assert. assertequals ( request, ctx. getrequest ( ) )
[2]: org. junit. assert. assertequals ( response, ctx. getrequest ( ) )
[3]: org. junit. assert. assertnotnull ( ctx. getrequest ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( testset )
[0]: org. junit. assert. asserttrue ( event. doit )
[1]: org. junit. assert. asserttrue ( listener. doit )
[2]: org. junit. assert. asserttrue ( events. doit )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( ( ( byte ) ( 2 ) ) , ( ( byte ) ( immediatevalue . getvalue ( ) ) ) )
[0]: org. junit. assert. assertequals ( 3, row. getnumberofcolumns ( ) )
[1]: org. junit. assert. assertequals ( 1, row. getnumberofcolumns ( ) )
[2]: org. junit. assert. assertequals ( 0, row. getnumberofcolumns ( ) )
[3]: org. junit. assert. assertequals ( 2, row. getnumberofcolumns ( ) )
[4]: org. junit. assert. assertthat ( row. getnumberofcolumns ( ), org. hamcrest.

************

************
tgt: org . junit . assert . assertnull ( returnedproperties . get ( property ) )
[0]: org. junit. assert. assertequals ( 1, setter. getprop ( ). size ( ) )
[1]: org. junit. assert. assertequals ( objinst, setter. getprop ( ) )
[2]: org. junit. assert. assertequals ( 0, setter. getprop ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( setter. getprop ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expectedvalues . entryset ( ) , result . entryset ( ) )
[0]: org. junit. assert. assertequals ( 1, bysequence. size ( ) )
[1]: org. junit. assert. assertequals ( 3, bysequence. size ( ) )
[2]: org. junit. assert. assertequals ( 4, bysequence. size ( ) )
[3]: org. junit. assert. assertnotnull ( bysequence )
[4]: org. junit. assert. assertequals ( 2, bysequence. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( handler . isbuffering ( ) )
[0]: org. junit. assert. assertequals ( true, result )
[1]: org. junit. assert. assertequals ( false, result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( true, result ) ;

************

************
tgt: org . junit . assert . assertequals ( "fish" , value )
[0]: org. junit. assert. assertequals ( string, actual )
[1]: org. junit. assert. assertequals ( string_2, actual )
[2]: org. junit. assert. assertequals ( string_1, actual )
[3]: org. junit. assert. assertequals ( string_3, actual )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "an<sp>incorrect<sp>result<sp>was<sp>obtained<sp>while<sp>querying<sp>a<sp>table<sp>with<sp>metadata<sp>cache<sp>files" , expectedrowcount , actualrowcount )
[0]: org. junit. assert. assertequals ( value, to. field )
[1]: org. junit. assert. assertequals ( value, from. field )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( value ), to. field )
[3]: org. junit. assert. asserttrue ( events. isempty ( ) )
[4]: org. junit. assert. assertfalse ( events. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( msg . getmessagebuffer ( ) , expectedresponse ) )
[0]: org. junit. assert. assertequals ( events. isempty ( ), true )
[1]: org. junit. assert. assertequals ( true, events. isempty ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( task. getname ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), task. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( issuersecretkey . getcryptoparams ( ) . getcontent ( ) . get ( 0 ) , storedissuersecretkey . getcryptoparams ( ) . getcontent ( ) . get ( 0 ) )
[0]: org. junit. assert. assertequals ( java. lang. string. class, task. getname ( ) )
[1]: org. junit. assert. assertnull ( task. getname ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( ), task. getname ( ) )
[3]: org. junit. assert. assertequals ( templatecontents, mustache. render ( templatecontents ) )
[4]: org. junit. assert. assertequals ( templatecontents, mustache. render ( null ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , alllinks . size ( ) )
[0]: org. junit. assert. assertequals ( templatecontents, mustache. render ( 0 ) )
[1]: org. junit. assert. assertequals ( templatecontents, org. trimou. mustache )
[2]: ) )
[3]: org. junit. assert. assertequals ( i, comp. tolong ( i ) )
[4]: org. junit. assert. assertequals ( 1, comp. tolong ( i ) )

************

************
tgt: org . junit . assert . assertequals ( expectedresults , resultsset )
[0]: org. junit. assert. assertequals ( 255, comp. tolong ( i ) )
[1]: org. junit. assert. assertequals ( ( i + 1 ), comp. tolong ( i ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, ri. getsize ( ) )
[4]: org. junit. assert. assertequals ( 0, ri. getsize ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0l, ri. getsize ( ) )
[1]: org. junit. assert. assertequals ( 1l, ri. getsize ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( getdirecciondao ( ) )
[4]: org. junit. assert. assertnull ( getdirecciondao ( ) )

************

************
tgt: org . junit . assert . asserttrue ( magdoorgaan )
[0]: org. junit. assert. assertnotnull ( getdirecciondao ( ). getid ( ) )
[1]: org. junit. assert. assertnull ( getdirecciondao ( ). getid ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( tm. getdescription ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), this. mocker. getcomponentundertest ( ). getdescription ( ) )

************

************
tgt: org . junit . assert . assertequals ( v2 , v1 )
[0]: org. junit. assert. assertequals ( java. util. optional. of ( ), this. mocker. getcomponentundertest ( ). getdescription ( ) )
[1]: org. junit. assert. assertequals ( java. util. optional. empty ( ), this. mocker. getcomponentundertest ( ). getdescription ( ) )
[2]: org. junit. assert. assertnotnull ( this. mocker. getcomponentundertest ( ). getdescription ( ) )
[3]: org. junit. assert. assertnotnull ( roothpath )
[4]: org. junit. assert. assertnull ( roothpath )

************

************
tgt: org . junit . assert . assertthat ( iterable , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . notnullvalue ( ) ) )
[0]: org. junit. assert. assertequals ( null, roothpath )
[1]: org. junit. assert. assertequals ( roothpath, roothpath )
[2]: org. junit. assert. assertequals ( roothpath, null )
[3]: org. junit. assert. assertequals ( mockconnectionlist, connectionlist )
[4]: org. junit. assert. assertequals ( 0, connectionlist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedextraclass , unmarshalledtec )
[0]: org. junit. assert. assertequals ( 1, connectionlist. size ( ) )
[1]: org. junit. assert. assertequals ( mockconnectionlist. size ( ), connectionlist )
[2]: ) )
[3]: org. junit. assert. assertthat ( finder. findparameterat ( 1 ), org. hamcrest. core. is. is ( parametersstring ) )
[4]: org. junit. assert. assertthat ( finder. findparameterat ( 0 ), org. hamcrest. core. is. is ( parametersstring ) )

************

************
tgt: org . junit . assert . assertequals ( 52 , ( ( long ) ( sight . getid ( ) ) ) )
[0]: type ) { } }
[1]: type ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( reuse, out )
[4]: org. junit. assert. assertnotnull ( reuse )

************

************
tgt: org . junit . assert . assertfalse ( violated )
[0]: org. junit. assert. assertequals ( reuse, out. blockingbinaryencoder ( reuse, null ) )
[1]: org. junit. assert. assertequals ( reuse, this. blockingbinaryencoder ( reuse, null ) )
[2]: ) )
[3]: org. junit. assert. assertthat ( deserializedvalue, org )
[4]: org. junit. assert. assertthat ( deserializedvalue, org ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( conversation . getmessagecount ( ) ) == 4 ) )
[0]: org. junit. assert. assertthat ( deserializedvalue )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( true, producer. hascontent ( ) )
[4]: org. junit. assert. asserttrue ( producer. hascontent ( ) )

************

************
tgt: org . junit . assert . assertfalse ( handler . respond ( ) )
[0]: org. junit. assert. assertequals ( false, producer. hascontent ( ) )
[1]: org. junit. assert. assertnull ( e. getvalidationreport ( ) )
[2]: org. junit. assert. assertnotnull ( e. getvalidationreport ( ) )
[3]: org. junit. assert. assertfalse ( e. getvalidationreport ( ) )
[4]: this ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , prefixes . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expectedfile, actualfile )
[2]: org. junit. assert. assertequals ( expectedfiles, actualfile )
[3]: org. junit. assert. assertequals ( expectedfile, actual file )
[4]: org. junit. assert. assertequals ( expected file, actualfile )

************

************
tgt: org . junit . assert . assertequals ( zkac , readzkac )
[0]: org. junit. assert. assertequals ( expectedfile, actualfile ) )
[1]: org. junit. assert. assertequals ( null, nmd. getmessag extractstatus ( ) )
[2]: org. junit. assert. assertequals ( null, nmd. getmessagedeliverystatus ( ) )
[3]: org. junit. assert. assertequals ( null, nmd. getmessagecachestatus ( ) )
[4]: org. junit. assert. assertequals ( null, nmd )

************

************
tgt: org . junit . assert . assertnull ( simple )
[0]: ) )
[1]: org. junit. assert. assertequals ( expectedproperties, properties )
[2]: org. junit. assert. assertequals ( expectedproperties, logger )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertthat ( project . property ( "java.version" ) , is ( version ) )
[0]: 
[1]: org. junit. assert. assertequals ( origrules, rulesafterdelete )
[2]: org. junit. assert. assertequals ( origrules, rulesafterdelete )
[3]: org. junit. assert. assertequals ( origrules. trim ( ), rulesafterdelete )
[4]: org. junit. assert. asserttrue ( rulesafterdelete. equals ( origrules ) )

************

************
tgt: org . junit . assert . assertequals ( expected , count . tostring ( ) )
[0]: org. junit. assert. assertequals ( origrules, rulesafterdelete. trim ( ) )
[1]: org. junit. assert. assertequals ( null, captor. getvalue ( ) )
[2]: org. junit. assert. assertnull ( captor. getvalue ( ) )
[3]: org. junit. assert. assertnotnull ( captor. getvalue ( ) )
[4]: string ) )

************

************
tgt: org . junit . assert . assertfalse ( appender . isstarted ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( protect )
[2]: org. junit. assert. asserttrue ( actual. findelement ( protect ). isempty ( ) )
[3]: org. junit. assert. assertnull ( protect )
[4]: org. junit. assert. assertsame ( protect, actual )

************

************
tgt: org . junit . assert . assertequals ( instance . tostring ( ) . hashcode ( ) , instance . hashcode ( ) )
[0]: org. junit. assert. assertnull ( protect. findelement ( ) )
[1]: org. junit. assert. assertequals ( strings, html )
[2]: org. junit. assert. assertequals ( string, html )
[3]: org. junit. assert. assertnotnull ( html )
[4]: org. junit. assert. assertequals ( strings. tostring ( ), html )

************

************
tgt: org . junit . assert . assertthat ( list . size ( ) , org . hamcrest . corematchers . is ( 0 ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( org. bonitasoft. engine. io. ioutil. getallcontentfrom ( file ) )
[2]: org. junit. assert. assertequals ( 1, org. bonitasoft. engine. io. ioutil. getallcontentfrom ( file ). length )
[3]: org. junit. assert. assertnotnull ( getallcontentfrom ( file ) )
[4]: org. junit. assert. assertequals ( 1, org. bonitasoft. engine. io. ioutil. getallcontentfrom ( file ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( actual . size ( ) , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( 0 ) ) )
[0]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 2, 3 }, org. bonitasoft. engine. io. ioutil ( file ) )
[1]: org. junit. assert. assertthat ( classes, org. hamcrest. core. is. is ( java. util. collections. emptylist ( ) ) )
[2]: org. junit. assert. assertthat ( classes. size ( ), org. hamcrest. core. is. is ( 1 ) )
[3]: org. junit. assert. assertequals ( 1, classes. size ( ) )
[4]: org. junit. assert. assertthat ( classes, contains ( archive, target ) )

************

************
tgt: org . junit . assert . assertnull ( fieldconfig )
[0]: ) )
[1]: org. junit. assert. assertequals ( i, m. getentry ( i, i ), 0.0 )
[2]: org. junit. assert. assertequals ( data [ i ], m. getentry ( i, i ), 0.0 )
[3]: org. junit. assert. assertequals ( i, m. getentry ( i, i ), 0 )
[4]: org. junit. assert. assertequals ( data [ i ], m. getentry ( i, i ), 0 )

************

************
tgt: org . junit . assert . assertequals ( clone . get ( "name" ) , n . get ( "name" ) )
[0]: org. junit. assert. assertequals ( data [ i ], m. getentry ( i, i ) )
[1]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 1, 1 }, org. opendaylight. protocol. util. bytearray. getallbytes ( aggregator ) )
[2]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 2, 3 }, org. opendaylight. protocol. util. bytearray. getallbytes ( aggregator ) )
[3]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 1 }, org. opendaylight. protocol. util. bytearray. getallbytes ( aggregator ) )
[4]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 1, 0 }, org. opendaylight. protocol. util. bytearray. getallbytes ( aggregator ) )

************

************
tgt: org . junit . assert . asserttrue ( result . isvalid ( ) )
[0]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 0, 1 }, org. opendaylight. protocol. util. bytearray. getallbytes ( aggregator ) )
[1]: org. junit. assert. assertequals ( o, class1 )
[2]: org. junit. assert. assertnotnull ( class1 )
[3]: org. junit. assert. assertsame ( o, class1 )
[4]: org. junit. assert. assertarrayequals ( o, class1 )

************

************
tgt: org . junit . assert . assertthat ( responseentity . getheaders ( ) . get ( "h" ) , org . hamcrest . matchers . contains ( "v" ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expectedfunction. get ( 0 ), result. evaluate ( ) )
[2]: org. junit. assert. assertequals ( expectedfunction. tostring ( ), result. tostring ( ) )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertequals ( expectedresult, result )

************

************
tgt: org . junit . assert . assertthat ( query . isreturningreferencedobjects ( ) , org . hamcrest . matchers . is ( false ) )
[0]: org. junit. assert. assertequals ( expectedfunction. evaluate ( ), result. evaluate ( ) )
[1]: org. junit. assert. assertnotnull ( user. getusername ( ) )
[2]: org. junit. assert. assertnotnull ( mlist. getusername ( ) )
[3]: org. junit. assert. assertnotnull ( dao. getusername ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( ctx )
[0]: )
[1]: org. junit. assert. assertequals ( 30, tffiledescriptor. getopenfiledescriptorcount ( ) )
[2]: org. junit. assert. assertequals ( tffiledescriptor. getopenfiledescriptorcount ( ), 30 )
[3]: org. junit. assert. assertequals ( 25, tffiledescriptor. getopenfiledescriptorcount ( ) )
[4]: org. junit. assert. assertequals ( 30, tffiledescriptor )

************

************
tgt: org . junit . assert . assertequals ( new javax . enterprise . util . typeliteral < org . jboss . weld . tests . unit . hierarchy . discovery . event . charlie < java . lang . integer > > ( ) { } . gettype ( ) , type )
[0]: ) )
[1]: org. junit. assert. assertequals ( org. pentaho. platform. repository2. unified. jcr. jackrabbit. security. springsecurityprincipalprovider_principalcreation_test. username, principal )
[2]: org. junit. assert. assertequals ( org. pentaho. platform. repository2. unified. jcr. jackrabbit. security. springsecurityprincipalprovider_principalcreation_test. username, principal. name )
[3]: org. junit. assert. assertequals ( org. pentaho. platform. repository2. unified. jcr. jackrabbit. security. springsecurityprincipalprovider_principalcreation_test, principal )
[4]: org. junit. assert. assertnotnull ( principal )

************

************
tgt: org . junit . assert . asserttrue ( valid )
[0]: org. junit. assert. assertequals ( context, cache. get ( org. springframework. retry. context. retrycontextsupport. class ) )
[1]: org. junit. assert. assertsame ( context, cache. get ( orgfoofoo ) )
[2]: org. junit. assert. assertnotnull ( cache. get ( org. springframework. retry. context. retrycontextsupport. class ) )
[3]: org. junit. assert. assertequals ( context, cache. get ( ""foo"" ) )
[4]: org. junit. assert. assertequals ( context, cache. get ( org. springframework. retry. context. retrycontextsupport. key ) )

************

************
tgt: org . junit . assert . assertequals ( dto , pass ( dto , org . openkilda . northbound . dto . v1 . flows . uniflowpingoutput . class ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( result, null )
[4]: , result )

************

************
tgt: org . junit . assert . assertequals ( expected , primitivedatachecksum . getvalue ( ) )
[0]: org. junit. assert. assertarrayequals ( new int [ ] { 1, 2 }, majorityelement. majorityelement ( nums ) )
[1]: org. junit. assert. assertequals ( ordered, majorityelement. majorityelement ( nums ) )
[2]: org. junit. assert. assertarrayequals ( new int [ ] { 1, 1 }, majorityelement. majorityelement ( nums ) )
[3]: org. junit. assert. assertarrayequals ( new int [ ] { 1, 2, 3 }, majorityelement ( nums ) )
[4]: org. junit. assert. assertarrayequals ( new int [ ] { 1, 2 }, majorityelement. majorityelement ( nums )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertnotnull ( com. redhat. lightblue. util. modifydoctest. doc. get ( new com. redhat. lightblue. util. path ( "x.arrarr ) ) )
[1]: org. junit. assert. assertnotnull ( com. redhat. lightblue. util. modifydoctest. doc. get ( new com. redhat. lightblue. util. path ( ) ) )
[2]: org. junit. assert. assertnotnull ( com. redhat. lightblue. util. modifydoctest. doc. get ( new com. redhat. lightblue. util. path ( "x.arrarrarr ) ) )
[3]: org. junit. assert. assertequals ( 1, com. redhat. lightblue. util. modifydoctest. doc. get ( new com. redhat. lightblue. util. path ( "x.arrarr ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( org . apache . commons . functor . adapter . nullaryprocedurenullaryfunction . adapt ( null ) )
[0]: org. junit. assert. assertequals ( null, resource. getid ( user ) )
[1]: org. junit. assert. assertequals ( 1, resource. getid ( user ). size ( ) )
[2]: org. junit. assert. assertnotnull ( resource. getid ( user ) )
[3]: org. junit. assert. assertequals ( 1, resource. getid ( user ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , ba . asbytearraycopy ( ) . length )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. assertequals ( 1, e. getmessage ( ). indexof ( valor ) )
[2]: org. junit. assert. assertequals ( 0, e. getmessage ( ). indexof ( valor ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, e. getclass ( ) )
[4]: org. junit. assert. assertequals ( 1, e. getmessage ( ). length )

************

************
tgt: org . junit . assert . assertequals ( expectatedmessage . trim ( ) , e . getmessage ( ) . trim ( ) )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertequals ( 0, result )
[2]: org. junit. assert. assertnotnull ( convertedvalidator )
[3]: org. junit. assert. assertequals ( 0, cfis. available ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, cfis. available ( ). length )

************

************
tgt: org . junit . assert . assertequals ( true , false )
[0]: org. junit. assert. assertequals ( 1, cfis. available ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( findbgs ( ) )
[2]: org. junit. assert. assertequals ( point, front. getpoint ( numberofpoints ) )
[3]: org. junit. assert. assertequals ( point, front. getpoint ( point ) )
[4]: org. junit. assert. assertequals ( 1, front. getpoint ( numberofpoints ). length )

************

************
tgt: org . junit . assert . asserttrue ( alleadresobjecten . isempty ( ) )
[0]: org. junit. assert. assertequals ( point, front. getpoint ( 0 ) )
[1]: org. junit. assert. assertequals ( point, front. getpoint ( ident_0 ) )
[2]: org. junit. assert. assertequals ( s, dt. tolocaltime ( ) )
[3]: org. junit. assert. assertequals ( t, dt. tolocaltime ( ) )
[4]: org. junit. assert. assertequals ( dt, dt. tolocaltime ( ) )

************

************
tgt: org . junit . assert . assertequals ( client1 , client2 )
[0]: org. junit. assert. assertequals ( dt. tolocaltime ( ), dt )
[1]: org. junit. assert. assertequals ( dt. tolocaltime ( ), dt. tostring ( ) )
[2]: org. junit. assert. assertnull ( com. openpojo. reflection. java. bytecode. bytecodefactory. getsubclass ( null ) )
[3]: org. junit. assert. assertnull ( com. openpojo. reflection. java. bytecode. bytecodefactory. getsubclass ( ( ( java. lang. object ) ( null ) ) ) )
[4]: org. junit. assert. assertnull ( com. openpojo. reflection. java. bytecode. bytecodefactory. getsubclass ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , resultaat . size ( ) )
[0]: org. junit. assert. assertnull ( com. openpojo. reflection. java. bytecode. bytecodefactory. getsubclass ( ( ( java. lang. class ) ( null ) ) ) )
[1]: org. junit. assert. assertnull ( com. openpojo. reflection. java. bytecode. bytecodefactory. getsubclass ( java. util. collection. class ) )
[2]: org. junit. assert. asserttrue ( p. equals ( t ) )
[3]: org. junit. assert. assertnotnull ( ref. get ( ) )
[4]: org. junit. assert. assertnotnull ( ref. getdestination ( ) )

************

************
tgt: org . junit . assert . asserttrue ( wordsfedfound )
[0]: org. junit. assert. assertnotnull ( ref. set ( ) )
[1]: org. junit. assert. assertnotnull ( ref. wait ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( true, logicallyinsert )
[4]: org. junit. assert. assertequals ( false, logicallyinsert )

************

************
tgt: org . junit . assert . assertnotnull ( customerid )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( expected, result )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( expected ), result )
[3]: org. junit. assert. assertnotnull ( doc. updatemetacharsetelement ( ) )
[4]: org. junit. assert. assertnull ( doc. updatemetacharsetelement ( ) )

************

************
tgt: org . junit . assert . assertequals ( str , newstr )
[0]: org. junit. assert. assertequals ( 0, doc. updatemetacharsetelement ( ) )
[1]: org. junit. assert. assertequals ( 0, doc. updatemetacharsetelement ( ). length )
[2]: ) )
[3]: org. junit. assert. assertequals ( true, resultaatstap )
[4]: org. junit. assert. assertequals ( 1, resultaatstap )

************

************
tgt: org . junit . assert . asserttrue ( csvoutputfile . exists ( ) )
[0]: org. junit. assert. assertequals ( false, resultaatstap )
[1]: org. junit. assert. assertequals ( null, resultaatstap )
[2]: org. junit. assert. assertequals ( true, resultaatstap ) to true )
[3]: org. junit. assert. assertnull ( r )
[4]: org. junit. assert. assertnotnull ( r )

************

************
tgt: org . junit . assert . asserttrue ( ( ( asyncevents . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertequals ( null, r )
[1]: org. junit. assert. assertequals ( string, r )
[2]: ) )
[3]: org. junit. assert. assertequals ( null, text )
[4]: org. junit. assert. assertnull ( text )

************

************
tgt: org . junit . assert . asserttrue ( result . get ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( expected ), text )
[1]: org. junit. assert. assertequals ( expected, text )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( date ), text )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( true ) )
[4]: org. junit. assert. assertthat ( result. size ( ), org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( instance . getfirstmapping ( ) )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( false ) )
[1]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( flow ) )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertnull ( animationmonitor. istriggered ( ) )
[4]: org. junit. assert. assertequals ( 0, toolchains. entryset ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( existingusertracker , newusertracker )
[0]: org. junit. assert. assertequals ( true, result )
[1]: org. junit. assert. assertequals ( 1, dao. count ( org. nutz. dao. test. meta. pet. class ) )
[2]: org. junit. assert. assertfalse ( result )
[3]: org. junit. assert. assertequals ( true, result )
[4]: org. junit. assert. assertequals ( false, result )

************

************
tgt: org . junit . assert . assertnull ( existingkey )
[0]: org. junit. assert. asserttrue ( result )
[1]: org. junit. assert. assertequals ( false, results )
[2]: org. junit. assert. assertequals ( 1, instanceconstraintviolationslist. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. tostring ( code ), 1, instanceconstraintviolationslist. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), 1, instanceconstraintviolationslist. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( groupid , result )
[0]: org. junit. assert. assertnotnull ( instanceconstraintviolationslist. tostring ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( code ), 0, instanceconstraintviolationslist. size ( ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( 1, conventionaware. getconventionvalue ( callable, null, false ) )
[4]: org. junit. assert. assertequals ( 0, conventionaware. getconventionvalue ( callable, null, false ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , repositorymethod . getannotatedquery ( ) )
[0]: org. junit. assert. assertsame ( callable, conventionaware. getconventionvalue ( null, null, false ) )
[1]: org. junit. assert. assertsame ( callable, conventionaware. getconventionvalue ( callable, null, false ) )
[2]: org. junit. assert. assertequals ( null, conventionaware. getconventionvalue ( callable, null, false ) )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. core )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( ( ( out . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertthat ( result )
[1]: , result )
[2]: ) )
[3]: org. junit. assert. asserttrue ( expected. equals ( result ) )
[4]: org. junit. assert. assertequals ( expectedresults, expectedresults )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . equalto ( expected ) )
[0]: org. junit. assert. assertequals ( expectedresults, resultsset )
[1]: org. junit. assert. asserttrue ( expectedresults. isempty ( ) )
[2]: org. junit. assert. asserttrue ( expectedresults. equals ( result ) )
[3]: org. junit. assert. assertequals ( expresult, result )
[4]: org. junit. assert. assertequals ( expresult. tostring ( ), result. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 200 , response . getstatus ( ) )
[0]: org. junit. assert. assertequals ( expresult. get ( i ), result. tostring ( ) )
[1]: org. junit. assert. assertequals ( expresult. get ( i ), result )
[2]: org. junit. assert. assertequals ( expresult, result. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( vxkeyact )
[4]: org. junit. assert. assertnotnull ( vxkeyact. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( service . getalltable ( usedbname ) . size ( ) , 1 )
[0]: org. junit. assert. assertsame ( vxkeyexp, vxkeyact )
[1]: org. junit. assert. assertequals ( bigdecimal. zero, out )
[2]: org. junit. assert. assertequals ( null, out )
[3]: org. junit. assert. assertequals ( bigdecimal. zeros, out )
[4]: org. junit. assert. assertequals ( ""1"", out )

************

************
tgt: org . junit . assert . assertequals ( servicetype . config , registered . type ( ) )
[0]: org. junit. assert. assertnotnull ( out )
[1]: org. junit. assert. assertequals ( 1, received. get ( ) )
[2]: org. junit. assert. assertequals ( 3, received. get ( ) )
[3]: org. junit. assert. assertequals ( 2, received. get ( ) )
[4]: org. junit. assert. assertequals ( 4, received. get ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( contextcm . getinstance ( org . xwiki . component . internal . contextcomponentmanagertest . role . class ) )
[0]: org. junit. assert. assertequals ( 1, received. size ( ) )
[1]: org. junit. assert. assertequals ( expectedinner, borderregions )
[2]: org. junit. assert. assertequals ( expectedinner, borderregions, result )
[3]: org. junit. assert. assertequals ( expectedinner, borderregions, 0 )
[4]: org. junit. assert. assertequals ( expectedinner, borderregions, null )

************

************
tgt: org . junit . assert . assertthat ( fetchcount ( ) , org . hamcrest . corematchers . is ( 1l ) )
[0]: identifies )
[1]: org. junit. assert. assertnotnull ( repository. createrepositorydirectory ( treemocked, newdirectory ). getpath ( ) )
[2]: org. junit. assert. assertnotnull ( repository. createrepositorydirectory ( treemocked, newdirectory ). getid ( ) )
[3]: org. junit. assert. assertnotnull ( repository )
[4]: org. junit. assert. assertnull ( repository )

************

************
tgt: org . junit . assert . assertequals ( expectedscript , observedscript )
[0]: org. junit. assert. assertnotnull ( repository, repository )
[1]: org. junit. assert. assertequals ( 1, overtreders. size ( ) )
[2]: org. junit. assert. assertequals ( result, rendered )
[3]: org. junit. assert. assertnotnull ( rendered )
[4]: , rendered )

************

************
tgt: org . junit . assert . assertequals ( val , proxyconnector . getconnectioncount ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( pb, pb. getconfiguration ( ) )
[3]: org. junit. assert. assertequals ( 0, resultaat. size ( ) )
[4]: org. junit. assert. assertequals ( 0, rs. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . collections . emptylist ( ) , bean )
[0]: org. junit. assert. assertequals ( 0, bdef. size ( ) )
[1]: org. junit. assert. assertequals ( null, result )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, ( thevalue & 2 ), 0 )
[4]: org. junit. assert. assertequals ( 1, ( thevalue & 2 ) )

************

************
tgt: org . junit . assert . assertnull ( namespace )
[0]: org. junit. assert. assertequals ( 1, ( thevalue & 1 ), 0 )
[1]: org. junit. assert. assertequals ( 1, ( thevalue & 1 ) )
[2]: org. junit. assert. assertequals ( 1, ( thevalue & 2 ), 1 )
[3]: org. junit. assert. assertequals ( true, prehandle )
[4]: org. junit. assert. asserttrue ( reconstructeddln. equals ( data ) )

************

************
tgt: org . junit . assert . assertnotnull ( db . getconnection ( ) )
[0]: org. junit. assert. assertfalse ( reconstructeddln. equals ( data ) )
[1]: org. junit. assert. assertsame ( org. eclipse. rap. rwt. internal. service. contextprovider. getuisession ( ), event. getuisession ( ) )
[2]: org. junit. assert. assertequals ( org. eclipse. rap. rwt. internal. service. contextprovider. getuisession ( ), event. getuisession ( ) )
[3]: org. junit. assert. assertsame ( org. eclipse. rap. rwt. internal. services. contextprovider. getuisession ( ), event. getuisession ( ) )
[4]: org. junit. assert. assertsame ( org. eclipse. rap. rwt. internal. service. contextprovider. getuisession ( ), event. getsuisession ( ) )

************

************
tgt: org . junit . assert . assertnull ( client . heartbeat ( null ) )
[0]: org. junit. assert. assertsame ( org. eclipse. rap. rwt. internal. service. contextprovider. getuisession ( ), events. getuisession ( ) )
[1]: org. junit. assert. assertequals ( 1, message. getoperationcount ( ) )
[2]: org. junit. assert. assertnotnull ( message. getoperationcount ( ) )
[3]: org. junit. assert. assertequals ( 0, message. getoperationcount ( ) )
[4]: org. junit. assert. assertnotnull ( message )

************

************
tgt: org . junit . assert . assertthat ( givenvalue , org . hamcrest . corematchers . is ( convertedvalue ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( failure, exceptionhandler. getlastthrowable ( ) )
[2]: org. junit. assert. assertsame ( failure, exceptionhandler. getlastthrowable ( ) )
[3]: org. junit. assert. assertnull ( exceptionhandler. getlastthrowable ( ) )
[4]: org. junit. assert. assertequals ( success, exceptionhandler. getlastthrowable ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , values )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, result. getruncount ( ) )
[2]: org. junit. assert. assertequals ( 0, result. getruncount ( ) )
[3]: org. junit. assert. assertequals ( 1l, result. getruncount ( ) )
[4]: org. junit. assert. assertequals ( 1, result. getruncount ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , allobjects . size ( ) )
[0]: org. junit. assert. assertequals ( 1, result. getruncount ( ). count )
[1]: org. junit. assert. assertnotnull ( msgout. getjmsexpiration ( ) )
[2]: org. junit. assert. assertnotnull ( msg. getjmsexpiration ( ) )
[3]: org. junit. assert. assertnotnull ( msgout )
[4]: org. junit. assert. assertequals ( msg, msgout )

************

************
tgt: org . junit . assert . assertthat ( can , org . hamcrest . core . is . is ( false ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( action )
[2]: org. junit. assert. assertequals ( 100l, shardserialization. loadshard ( shard1 ) )
[3]: org. junit. assert. assertequals ( 1, shardserialization. loadshard ( shard1 ) )
[4]: org. junit. assert. assertequals ( 50, shardserialization. loadshard ( shard1 ) )

************

************
tgt: org . junit . assert . asserttrue ( bc . contains ( subset ) )
[0]: org. junit. assert. assertequals ( 100, shardserialization. loadshard ( shard1 ) )
[1]: ) )
[2]: org. junit. assert. assertarrayequals ( l, deserialize )
[3]: org. junit. assert. assertequals ( l, deserialize )
[4]: org. junit. assert. assertarrayequals ( l, ( ( double [ ] ) ( deserialize ) ) )

************

************
tgt: org . junit . assert . assertnull ( missingsubscription )
[0]: org. junit. assert. assertarrayequals ( l, deserialized )
[1]: org. junit. assert. assertarrayequals ( l, de )
[2]: org. junit. assert. assertthat ( utc. getnanosecond ( timescale. posix ), org. hamcrest. corematchers. is ( 123456789 ) )
[3]: org. junit. assert. assertthat ( utc. getnanosecond ( timescale. utc ), org. hamcrest. corematchers. is ( 123456789 ) )
[4]: org. junit. assert. assertthat ( utc. getnanosecond ( timescale. tai ), org. hamcrest. corematchers. is ( 123456789 ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertthat ( utc. getnanosecond ( timescale ), org. hamcrest. corematchers. is ( 123456789 ) )
[1]: org. junit. assert. assertthat ( utc. getnanosecond ( timescale. posix ), org. hamcrest. corematchers. is ( 123456789. utc ) )
[2]: org. junit. assert. assertnotnull ( exchaccount.fox ( ) )
[3]: org. junit. assert. assertnotnull ( exchaccount. nextname ( ) )
[4]: org. junit. assert. assertequals ( 1, exchaccount. getvertices ( ). length )

************

************
tgt: org . junit . assert . assertequals ( getpacket ( ) , ab . build ( ) )
[0]: org. junit. assert. assertequals ( 1, exchaccount. getseverity ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, list. size ( ) )
[3]: org. junit. assert. assertequals ( 0, outofmemory )
[4]: org. junit. assert. assertequals ( 1, list. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( filter . matches ( ctmethod ) , org . hamcrest . core . is . is ( true ) )
[0]: org. junit. assert. assertequals ( zero, list. size ( ) )
[1]: org. junit. assert. assertequals ( null, list. size ( ) )
[2]: org. junit. assert. assertequals ( result. tostring ( ), values. length )
[3]: org. junit. assert. assertequals ( result. tostring ( ), values )
[4]: org. junit. assert. assertequals ( values. length, result. tostring ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( type )
[0]: org. junit. assert. assertequals ( com. ibm. ws. security. wim. adapter. ldap. fat. ldapregistrydynamicupdatetest. servlet. getuserdisplayname ( null ), org. ibm. ws. security. wim. adapter. ldap. fat. ldapregistrydynamicupdatetest. servlet )
[1]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. ldap. fat. ldapregistrydynamicupdatetest. servlet. getuserdisplayname ( org. ibm. ws. security. wim. adapter. ldap. fat. ldapregistrydynamicupdatetest. c ) )
[2]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. ldap. fat. ldapregistrydynamicupdatetest. servlet. getuserdisplayname ( null ) )
[3]: org. junit. assert. assertequals ( null, com. ibm. ws. security. wim. adapter. ldap. fat. ldapregistrydynamicupdatetest. servlet. getuserdisplayname ( null ) )
[4]: org. junit. assert. assertequals ( com. ibm. ws. security. wim. adapter. ldap. fat. ldapregistrydynamicupdatetest. servlet. getuserdisplayname ( null ), "entering<sp>test<sp>ldapconfigupdateloginpropertytest. servlet )

************

************
tgt: org . junit . assert . asserttrue ( configs . isempty ( ) )
[0]: org. junit. assert. assertfalse ( configuration. inheritable ( ) )
[1]: org. junit. assert. assertfalse ( this. inheritable ( ) )
[2]: org. junit. assert. assertfalse ( parent. inheritable ( ) )
[3]: org. junit. assert. asserttrue ( this. inheritable ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( addon1 . creatematchingdata ( ) . equals ( addon2 . creatematchingdata ( ) ) )
[0]: org. junit. assert. assertequals ( newmultimapwithkeysvalues ( values, key, values, null ), selectedmultimap )
[1]: org. junit. assert. assertequals ( newmultimapwithkeysvalues ( null, null, null, null ), selectedmultimap )
[2]: org. junit. assert. assertequals ( newmultimapwithkeysvalues ( values, key, values, 1 ), selectedmultimap )
[3]: org. junit. assert. assertequals ( newmultimapwithkeysvalues ( 1, 1, 2, 3 ), selectedmultimap )
[4]: org. junit. assert. assertequals ( newmultimapwithkeysvalues ( values, null, null, null ), selectedmultimap )

************

************
tgt: org . junit . assert . assertnotnull ( instance . getinfo ( identifier ) )
[0]: org. junit. assert. assertthat ( org. batfish. datamodel. ipprotocol. fromstring ( ipprotocol. tostring ( ) ), org. hamcrest. matchers. equalto ( ipprotocol ) )
[1]: org. junit. assert. assertthat ( org. batfish. datamodel. ipprotocol. fromstring ( ipprotocol. getid ( ) ), org. hamcrest. matchers. equalto ( ipprotocol ) )
[2]: org. junit. assert. assertthat ( ipprotocol, org. hamcrest. matchers. equalto ( org. batfish. datamodel. ipprotocol. fromstring ( ipprotocol. tostring ( ) ) ) )
[3]: org. junit. assert. assertthat ( org. batfish. datamodel. ipprotocol. fromstring ( ipprotocol ), org. hamcrest. matchers. equalto ( ipprotocol ) )
[4]: org. junit. assert. assertthat ( org. batfish. datamodel. ipprotocol. fromstring ( ipprotocol. trim ( ) ), org. hamcrest. matchers. equalto ( ipprotocol ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( testplfm )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertnotnull ( dataset )
[3]: org. junit. assert. assertnotnull ( results )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( com . ibm . ws . security . wim . core . fat . invalidbaseentryinrealmtest . servlet . checkpassword ( user , password ) )
[0]: org. junit. assert. assertnotnull ( nums )
[1]: org. junit. assert. assertequals ( e. getvalue ( ), nums )
[2]: org. junit. assert. assertequals ( e. getkey ( ), nums )
[3]: org. junit. assert. assertequals ( e. getvalue ( ), 1 )
[4]: org. junit. assert. assertequals ( e. getmessage ( ), 0 )

************

************
tgt: org . junit . assert . assertnull ( existingassetvocabulary )
[0]: org. junit. assert. assertequals ( 1, tasks. size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( tasks. size ( ) ) == 1 ) )
[2]: org. junit. assert. asserttrue ( ( ( tasks. size ( ) ) == 50 ) )
[3]: org. junit. assert. assertequals ( 0, tasks. size ( ) )
[4]: org. junit. assert. asserttrue ( ( ( tasks. size ( ) ) == 10 ) )

************

************
tgt: org . junit . assert . assertequals ( version . getparams ( ) . size ( ) , 0 )
[0]: org. junit. assert. assertfalse ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertfalse ( resulting )
[3]: org. junit. assert. asserttrue ( result )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( exp , d . getselectedoption ( ) )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 1, list. size ( ) )
[3]: org. junit. assert. assertequals ( 1, dataset. size ( ) )
[4]: org. junit. assert. assertequals ( 1, size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( realmidentity . exists ( ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), t )
[1]: org. junit. assert. assertequals ( 1, t. materialized ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, t. guaranteed ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( t ), t )
[4]: org. junit. assert. assertequals ( 1, t. materialized ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( faultfromjsonwithmeasurements )
[0]: org. junit. assert. assertnotnull ( builder. host ( ) )
[1]: org. junit. assert. assertequals ( null, builder. host ( ) )
[2]: org. junit. assert. assertnull ( builder. host ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertfalse ( combination . isbuiltin ( ) )
[0]: org. junit. assert. assertarrayequals ( new short [ ] { 2, 3, 5 }, array )
[1]: org. junit. assert. assertarrayequals ( new short [ ] { 2, 3 }, array )
[2]: org. junit. assert. assertarrayequals ( array, buffer )
[3]: org. junit. assert. assertnotnull ( array )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "mygroup" , group . getname ( ) )
[0]: org. junit. assert. assertnotnull ( mockelement. resolve ( mockelement ) )
[1]: org. junit. assert. assertequals ( null, mockelement. resolve ( mockelement ) )
[2]: org. junit. assert. assertnull ( mockelement. resolve ( mockelement ) )
[3]: org. junit. assert. assertequals ( null, mockelement. resolve ( mockelement ). tostring ( ) )
[4]: org. junit. assert. assertequals ( null, mockelement. resolve ( mockelement ). get ( ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . equalto ( expected ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( result, this. logger )
[2]: org. junit. assert. assertsame ( result, this )
[3]: org. junit. assert. assertnull ( result )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: org. junit. assert. assertequals ( 1, branch_conditions. size ( ) )
[1]: org. junit. assert. assertarrayequals ( key. getpubkey ( ), keyonion )
[2]: org. junit. assert. assertnotnull ( key. getpubkey ( ) )
[3]: org. junit. assert. assertequals ( key. getpubkey ( ), keyonion )
[4]: org. junit. assert. assertarrayequals ( keys. getpubkey ( ), keyonion )

************

************
tgt: org . junit . assert . asserttrue ( subject . controle ( context ) )
[0]: org. junit. assert. assertarrayequals ( key. getpubkey ( ), keysonion )
[1]: org. junit. assert. assertfalse ( resutl )
[2]: org. junit. assert. assertnull ( resutl )
[3]: org. junit. assert. assertequals ( false, resutl )
[4]: org. junit. assert. assertequals ( null, resutl )

************

************
tgt: org . junit . assert . assertequals ( stmt1 , stmt2 )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertequals ( 1l, result )
[2]: org. junit. assert. assertequals ( 130, result )
[3]: org. junit. assert. assertequals ( 1, found. size ( ) )
[4]: org. junit. assert. assertequals ( 0, found. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( new org . openengsb . core . workflow . api . model . processbag ( ) . equals ( processbag ) )
[0]: org. junit. assert. assertequals ( bigdecimal. zero, presenceratio )
[1]: org. junit. assert. assertnotnull ( presenceratio )
[2]: org. junit. assert. assertnull ( presenceratio )
[3]: org. junit. assert. assertequals ( bigdecimal. zeros, presenceratio )
[4]: org. junit. assert. assertequals ( bigdecimal. empty, presenceratio )

************

************
tgt: org . junit . assert . assertequals ( build , gf . getparentscript ( ) )
[0]: org. junit. assert. assertnull ( org. apache. tajo. catalog. testcatalog. catalogutil. containfunction ( null, org. apache. tajo. catalog. exception. nosuchfunctionexception. class ) )
[1]: org. junit. assert. assertnotnull ( org. apache. tajo. catalog. testcatalog. catalogutil. containfunction ( null, org. apache. tajo. catalog. exception. nosuchfunctionexception. class ) )
[2]: org. junit. assert. assertnull ( org. apache. tajo. catalog. testcatalog. catalogutil. containfunction ( null, org. apache. tajo. catalog. exception. nosuchfunctionrequest. class ) )
[3]: org. junit. assert. assertnotnull ( testsuchfunction ( org. apache. tajo. catalog. testcatalog. catalogutil. class, org. apache. tajo. catalog. catalog. catalogutil. class ) )
[4]: org. junit. assert. assertnull ( org. apache. tajo. catalog. testcatalog. catalogutil. containfunction ( null, testsuchfunctionrequest ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( false, reportprocessor. isquerylimitreached ( ) )
[1]: org. junit. assert. assertfalse ( reportprocessor. isquerylimitreached ( ) )
[2]: org. junit. assert. asserttrue ( reportprocessor. isquerylimitreached ( ) )
[3]: org. junit. assert. assertequals ( true, reportprocessor. isquerylimitreached ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( uaicriteria . getsingleresult ( ) , uaicriteriacto . getsingleresult ( ) )
[0]: org. junit. assert. assertequals ( expected, uri )
[1]: org. junit. assert. assertequals ( expected, uri, uri )
[2]: org. junit. assert. assertequals ( expected, url )
[3]: , uri )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( fix )
[0]: org. junit. assert. assertequals ( gameover, forgot )
[1]: org. junit. assert. assertequals ( gameover, forgot. getscore ( ) )
[2]: org. junit. assert. assertequals ( gameover. getscore ( ), forgot )
[3]: org. junit. assert. assertequals ( forgot, gameover. getscore ( ) )
[4]: org. junit. assert. assertequals ( ( gameover + 1 ), forgot )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , resultstring )
[0]: org. junit. assert. assertthat ( result. length, org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. asserttrue ( rawclient. isconnected ( ) )
[2]: org. junit. assert. assertequals ( true, rawclient. isconnected ( ) )
[3]: org. junit. assert. assertnotnull ( owner. getowner ( ) )
[4]: org. junit. assert. assertnull ( owner. getowner ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , resultval )
[0]: org. junit. assert. assertnotnull ( owner )
[1]: org. junit. assert. assertnull ( owner )
[2]: ) )
[3]: org. junit. assert. assertfalse ( matches )
[4]: org. junit. assert. assertequals ( false, matches )

************

************
tgt: org . junit . assert . assertfalse ( criterion . ismetby ( observer ) )
[0]: org. junit. assert. assertequals ( true, matches )
[1]: org. junit. assert. assertnotnull ( new org. apache. vysper. xmpp. delivery. failure. remoteservererrorcondition ( ). getstanzaerrorcondition ( ) )
[2]: org. junit. assert. assertequals ( stanzaerrorcondition. remote_server_timeout, null. getstanzaerrorcondition ( ) )
[3]: org. junit. assert. assertnull ( getstanzaerrorcondition ( ) )
[4]: org. junit. assert. assertequals ( root, new org. apache. vysper. xmpp. delivery. failure. remoteservererrorcondition ( ) )

************

************
tgt: org . junit . assert . assertequals ( expecting , found )
[0]: org. junit. assert. assertnotnull ( new org. apache. vysper. xmpp. delivery. failure. remoteservererrorcondition ( ) )
[1]: org. junit. assert. assertfalse ( org. openspotlight. common. util. assertions. accept ( state ) )
[2]: org. junit. assert. assertfalse ( state. accept ( state ) )
[3]: org. junit. assert. assertfalse ( parser. accept ( state ) )
[4]: org. junit. assert. assertfalse ( handler. accept ( state ) )

************

************
tgt: org . junit . assert . asserttrue ( berichtentiteits . isempty ( ) )
[0]: org. junit. assert. assertfalse ( org. openspotlight. common. util. assertions. accepting ( state ) )
[1]: org. junit. assert. assertequals ( null, url. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class. tostring ( ), url. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( ), url. tostring ( ) )
[4]: org. junit. assert. assertequals ( 1, url. tostring ( ). length ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , nestedarrayparameterized . getparameters ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. class. tostring ( ), url. getmessage ( ) )
[1]: org. junit. assert. assertnotnull ( mpreach. createunreach ( ) )
[2]: org. junit. assert. assertnotnull ( mpreach. createunreach )
[3]: org. junit. assert. assertequals ( 1, mpreach. createunreach ( ) )
[4]: org. junit. assert. assertequals ( mpreachexpected, mpreach. createunreach )

************

************
tgt: org . junit . assert . assertequals ( null , out )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( value )
[2]: org. junit. assert. assertequals ( pattern, value )
[3]: org. junit. assert. assertequals ( expected, value )
[4]: org. junit. assert. assertnull ( value )

************

************
tgt: org . junit . assert . assertequals ( 200 , response . getstatuscode ( ) )
[0]: org. junit. assert. assertequals ( pattern, value )
[1]: org. junit. assert. assertnotnull ( response )
[2]: org. junit. assert. null, response )
[3]: , response )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( size < expectedsize ) )
[0]: )
[1]: org. junit. assert. assertthat ( specificresourceallocation. getassignments ( ). size ( ), org. hamcrest. corematchers. equalto ( 1 ) )
[2]: org. junit. assert. assertthat ( specificresourceallocation. getassignments ( ). size ( ), org. hamcrest. corematchers. equalto ( 0 ) )
[3]: org. junit. assert. assertthat ( specificresourceallocation. getassignments ( ). size ( ), org. hamcrest. corematchers. equalto ( 3 ) )
[4]: org. junit. assert. assertthat ( specificresourceallocation. getassignments ( ). size ( ), org. hamcrest. corematchers. equalto ( 4 ) )

************

************
tgt: org . junit . assert . assertequals ( format ( expected . gettimeinmillis ( ) ) , format ( actual ) )
[0]: org. junit. assert. assertthat ( specificresourceallocation. getassignments ( ). size ( ), org. hamcrest. corematchers. equalto ( 5 ) )
[1]: org. junit. assert. assertequals ( 1, response. getstatuscode ( ) )
[2]: org. junit. assert. assertequals ( 0, response. getstatuscode ( ) )
[3]: org. junit. assert. assertequals ( 200, response. getstatuscode ( ) )
[4]: org. junit. assert. assertequals ( 3, response. getstatuscode ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . ethereum . trie . trietest . dog , new java . lang . string ( trie . get ( "" ) ) )
[0]: org. junit. assert. assertequals ( exp, arrayy )
[1]: org. junit. assert. assertequals ( 1, actual. isempty ( ) )
[2]: org. junit. assert. assertequals ( message, ex. getmessage ( ) )
[3]: org. junit. assert. assertequals ( 1, ex. get ( ) )
[4]: org. junit. assert. assertequals ( msg, ex. getmessage ( ) )

************

************
tgt: org . junit . assert . assertfalse ( org . openscience . cdk . tools . manipulator . molecularformulamanipulator . adjustprotonation ( mf , ( - 1 ) ) )
[0]: org. junit. assert. assertequals ( message, ex )
[1]: org. junit. assert. assertnotnull ( ex )
[2]: org. junit. assert. asserttrue ( response. isempty ( ) )
[3]: org. junit. assert. assertfalse ( response. isempty ( ) )
[4]: org. junit. assert. asserttrue ( response. isempty ( ) ) {

************

************
tgt: org . junit . assert . assertthat ( id1 . equals ( id2 ) , org . hamcrest . corematchers . is ( false ) )
[0]: . isempty ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( interceptorcontext. getcomponentname ( ) )
[3]: org. junit. assert. assertequals ( expected, interceptorcontext. getcomponentname ( ) )
[4]: org. junit. assert. assertequals ( input, interceptorcontext. getcomponentname ( ) )

************

************
tgt: org . junit . assert . assertequals ( "sash" , tabitem . gettext ( ) )
[0]: org. junit. assert. assertthat ( interceptorcontext. getcomponentname ( ), is ( input ) )
[1]: ) )
[2]: org. junit. assert. assertfalse ( k1. equals ( null ) )
[3]: org. junit. assert. assertfalse ( k1. equals ( java. lang. object. class ) )
[4]: org. junit. assert. assertfalse ( k1. equals ( k1 ) )

************

************
tgt: org . junit . assert . assertequals ( result . fail , and . apply ( pathdata , ( - 1 ) ) )
[0]: org. junit. assert. assertfalse ( k1. equals ( true ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, changes. size ( ) )
[3]: org. junit. assert. assertequals ( 0, changes. size ( ) )
[4]: org. junit. assert. assertequals ( 5, changes. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( concat , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( denyall ) ) )
[0]: org. junit. assert. assertequals ( 3, changes. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( text, adapter. getfilteredstringat ( 2, 1 ) )
[3]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( 1 ), result )
[4]: org. junit. assert. assertequals ( input, result )

************

************
tgt: org . junit . assert . assertequals ( new org . eclipse . rap . json . jsonarray ( ) . add ( 0 ) . add ( 1 ) . add ( 2 ) , jsonarray )
[0]: org. junit. assert. assertequals ( merger, result )
[1]: org. junit. assert. assertequals ( result, input )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( updatedobject )
[4]: org. junit. assert. assertnull ( updatedobject )

************

************
tgt: org . junit . assert . assertequals ( entry . getvalue ( ) , unwrap ( service . get ( entry . getkey ( ) ) ) )
[0]: org. junit. assert. assertequals ( updatedobject, null )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 1, cs. size ( ) )
[4]: org. junit. assert. assertnotnull ( str )

************

************
tgt: org . junit . assert . assertequals ( 0 , clone . size ( ) )
[0]: org. junit. assert. assertequals ( null, str )
[1]: org. junit. assert. assertequals ( ""test"", str )
[2]: org. junit. assert. assertequals ( f, str )
[3]: org. junit. assert. assertequals ( ""a"", str )
[4]: org. junit. assert. asserttrue ( b )

************

************
tgt: org . junit . assert . asserttrue ( ( ( cvs . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( 1, sensorslist. size ( ) )
[1]: org. junit. assert. assertequals ( 0, sensorslist. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( filteredsensorslist ), sensorslist )
[3]: org. junit. assert. assertequals ( 3, sensorslist. size ( ) )
[4]: org. junit. assert. assertequals ( 2, sensorslist. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( wrapper . shouldreadfrommaster ( ) )
[0]: org. junit. assert. assertequals ( instance1, getfieldvalue ( field_master_broker ) )
[1]: org. junit. assert. assertthat ( mapper. getstyleformetacard ( metacard ), org. hamcrest. matchers. is ( org. codice. ddf. spatial. kml. transformer. kmlstylemaptest. default_style_url ) )
[2]: org. junit. assert. assertthat ( mapper. getstyleformetacard ( metacard ), org. hamcrest. matchers. is ( org. codice. ddf. spatial. kml. transformer. kmlstylemaptest. default_style_url ) )
[3]: org. junit. assert. assertthat ( mapper. getstyleformetacard ( metacard ), org. hamcrest. matchers. is ( ""null"" ) )
[4]: org. junit. assert. assertthat ( mapper. getstyleformetacard ( metacard ), org. hamcrest. matchers. is ( """" ) )

************

************
tgt: org . junit . assert . assertthat ( restored . get ( ) , is ( option . get ( ) ) )
[0]: org. junit. assert. assertthat ( mapper. getstyleformetacard ( metacard ) )
[1]: org. junit. assert. assertnotnull ( syncbericht )
[2]: org. junit. assert. assertequals ( syncbericht, syncbericht )
[3]: org. junit. assert. assertequals ( null, syncbericht )
[4]: org. junit. assert. assertequals ( syncbericht, null )

************

************
tgt: org . junit . assert . assertequals ( "snap1" , tool . getsnapshotname ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, oauthtokencacheservice. tokencache. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( testtoken ), oauthtokencacheservice. tokencache )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), oauthtokencacheservice. tokencache )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( testtoken ), oauthtokencacheservice. tokencache )

************

************
tgt: org . junit . assert . asserttrue ( buildoutput . exists ( ) )
[0]: org. junit. assert. assertequals ( java. util. optional. empty ( ), oauthtokencacheservice. tokencache )
[1]: org. junit. assert. assertequals ( org. opendaylight. controller. cluster. access. commands. abiversion. object, clone )
[2]: org. junit. assert. assertequals ( org. opendaylight. controller. cluster. access. command. abiversion. object, clone )
[3]: org. junit. assert. assertnotnull ( clone )
[4]: org. junit. assert. assertequals ( org. opendaylight. controller. cluster. access. abiversion. object, clone )

************

************
tgt: org . junit . assert . assertnotnull ( filter )
[0]: org. junit. assert. assertnull ( clone )
[1]: org. junit. assert. assertnotnull ( text )
[2]: org. junit. assert. assertequals ( null, text )
[3]: org. junit. assert. assertequals ( ""test"", text )
[4]: org. junit. assert. assertequals ( """", text )

************

************
tgt: org . junit . assert . asserttrue ( isequal ( seqresult , openclresult ) )
[0]: org. junit. assert. assertequals ( ""a"", text )
[1]: org. junit. assert. assertequals ( 1, context. size ( ) )
[2]: org. junit. assert. assertequals ( 0, context. size ( ) )
[3]: org. junit. assert. assertequals ( 2, context. size ( ) )
[4]: org. junit. assert. assertequals ( 3, context. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( grid . getnextvisiblecolumn ( columns [ 4 ] ) )
[0]: org. junit. assert. assertequals ( 1, context. count ( ) )
[1]: org. junit. assert. assertarrayequals ( bytes, id3v2popmframedata. getaddress ( ) )
[2]: org. junit. assert. assertequals ( bytes, id3v2popmframedata. getaddress ( ) )
[3]: org. junit. assert. assertequals ( bytes. length, id3v2popmframedata. getaddress ( ). length )
[4]: org. junit. assert. assertnotnull ( id3v2popmframedata. getaddress ( ) )

************

************
tgt: org . junit . assert . assertfalse ( input . containskey ( "field1" ) )
[0]: org. junit. assert. assertequals ( bytes, id3v2popmframedata. getaddress ( ). tostring ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), answers )
[2]: org. junit. assert. assertequals ( java. util. collections. empty ( ), answers )
[3]: org. junit. assert. assertequals ( java. util. optional. empty ( ), answers )
[4]: org. junit. assert. assertequals ( java. util. arrays. empty ( ), answers )

************

************
tgt: org . junit . assert . asserttrue ( org . jboss . hal . core . finder . finderpath . from ( "<sp>" ) . isempty ( ) )
[0]: , answers )
[1]: org. junit. assert. assertequals ( bigdecimal. zero, returnvalue )
[2]: org. junit. assert. assertequals ( bigdecimal. zero, returnvalue, 0 )
[3]: org. junit. assert. assertequals ( bigdecimal. zero, returnvalue )
[4]: org. junit. assert. assertequals ( bigdecimal. zeros, returnvalue )

************

************
tgt: org . junit . assert . assertfalse ( check . run ( ) )
[0]: ) )
[1]: org. junit. assert. assertfalse ( attributedesc. isversion ( ) )
[2]: org. junit. assert. assertequals ( reference1, multi. selectitem ( index ). tostring ( ) )
[3]: org. junit. assert. assertequals ( reference1, multi. selectitem ( index ). get ( ) )
[4]: org. junit. assert. assertequals ( tt2, tt )

************

************
tgt: org . junit . assert . asserttrue ( var . isplaceholder ( ) )
[0]: org. junit. assert. assertequals ( tt1, tt )
[1]: org. junit. assert. assertnotnull ( tt2 )
[2]: org. junit. assert. assertequals ( lt2, tt )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, store. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( matcher . lookingat ( ) )
[0]: org. junit. assert. assertequals ( 0, store. size ( ) )
[1]: org. junit. assert. assertequals ( 8, binlogevent. length ( ) )
[2]: org. junit. assert. assertnotnull ( binlogevent )
[3]: org. junit. assert. assertequals ( 8, binlogevent. isempty ( ) )
[4]: org. junit. assert. assertequals ( 8, binlogevent. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( a . intersect ( b ) , org . hamcrest . corematchers . is ( c ) )
[0]: org. junit. assert. assertequals ( 4, binlogevent. length ( ) )
[1]: org. junit. assert. assertequals ( ( - 15l ), product. getmultiplier ( ) )
[2]: org. junit. assert. assertnull ( product. getmultiplier ( ) )
[3]: org. junit. assert. assertnotnull ( product. getmultiplier ( ) )
[4]: org. junit. assert. assertequals ( ( - 15l ), product. getmultipslier ( ) )

************

************
tgt: org . junit . assert . assertthat ( facebook . locations ( ) , org . hamcrest . corematchers . instanceof ( facebook4j . locationmethods . class ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( true, updateenginewithchanges )
[2]: org. junit. assert. assertequals ( false, updateenginewithchanges )
[3]: org. junit. assert. assertequals ( 1, updateenginewithchanges )
[4]: org. junit. assert. assertequals ( null, updateenginewithchanges )

************

************
tgt: org . junit . assert . assertequals ( arr , resultarr )
[0]: org. junit. assert. asserttrue ( updateenginewithchanges )
[1]: org. junit. assert. assertequals ( customerid, deleteoptions. customerid ( ) )
[2]: org. junit. assert. assertequals ( 1, errors. size ( ) )
[3]: org. junit. assert. assertfalse ( matcher. match ( msg, rule ) )
[4]: org. junit. assert. assertequals ( master, found )

************

************
tgt: org . junit . assert . asserttrue ( equals )
[0]: org. junit. assert. assertequals ( slave, found )
[1]: org. junit. assert. assertnotnull ( found )
[2]: org. junit. assert. assertequals ( null, found )
[3]: org. junit. assert. assertequals ( cms, found )
[4]: org. junit. assert. asserttrue ( config. ispluginenable ( ) )

************

************
tgt: org . junit . assert . assertequals ( result , ( lastsourceoffset + lastsourceoffset ) )
[0]: org. junit. assert. assertnotnull ( config. ispluginenable ( ) )
[1]: org. junit. assert. assertnotnull ( io. grpc. internal. dnsnameresolver. maybechooseserviceconfig ( choice, null, hosts ) )
[2]: org. junit. assert. assertnotnull ( io. grpc. internal. dnsnameresolver. maybechooseserviceconfig ( choice, null, host ) )
[3]: org. junit. assert. assertnotnull ( io. grpc. internal. dnsnameresolver. maybechooseserviceconfig ( choice, source, host ) )
[4]: org. junit. assert. assertnotnull ( io. grpc. internal. dnsnameresolver. maybechooseserviceconfig ( choice, host, null ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( url != null ) && ( ! ( url . isempty ( ) ) ) ) )
[0]: org. junit. assert. assertnotnull ( io. grpc. internal. dnsnameresolver )
[1]: org. junit. assert. assertequals ( ( ( long ) ( 3 ) ), hash )
[2]: org. junit. assert. assertequals ( ( ( long ) ( 1 ) ), hash )
[3]: org. junit. assert. assertequals ( ( ( byte ) ( 1 ) ), hash )
[4]: org. junit. assert. assertequals ( ( ( long ) ( 2 ) ), hash )

************

************
tgt: org . junit . assert . assertequals ( userid , result )
[0]: org. junit. assert. assertequals ( 0, hash )
[1]: org. junit. assert. assertnotnull ( user )
[2]: org. junit. assert. assertnull ( user )
[3]: org. junit. assert. assertequals ( null, user )
[4]: org. junit. assert. assertequals ( user, null )

************

************
tgt: org . junit . assert . assertfalse ( compatiblenames . contains ( name_en_uk ) )
[0]: , user )
[1]: org. junit. assert. assertequals ( bundles. length, 1 )
[2]: org. junit. assert. assertequals ( bundles. length, 0 )
[3]: org. junit. assert. assertequals ( bundles. length, 2 )
[4]: org. junit. assert. assertnull ( mock )

************

************
tgt: org . junit . assert . assertequals ( "" , text )
[0]: org. junit. assert. assertnotnull ( mock )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( ""foo"", result )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( ""test"", result )
[1]: org. junit. assert. assertequals ( message, expectedcontains, actual )
[2]: org. junit. assert. assertequals ( message, value, actual )
[3]: org. junit. assert. assertequals ( message, ( value + i ), actual )
[4]: org. junit. assert. assertequals ( message, ( value - actual ), actual )

************

************
tgt: org . junit . assert . assertequals ( collection . tostring ( ) , builder . tostring ( ) )
[0]: the message, value )
[1]: org. junit. assert. assertequals ( cachedcontent, returnedreader )
[2]: org. junit. assert. assertsame ( cachedcontent, returnedreader )
[3]: org. junit. assert. assertequals ( returnedreader, cachedcontent )
[4]: org. junit. assert. assertequals ( cachecontent, returnedreader )

************

************
tgt: org . junit . assert . assertnotnull ( tool )
[0]: org. junit. assert. assertsame ( cachedcontent, returnedreader )
[1]: org. junit. assert. assertequals ( false, wasupdated )
[2]: org. junit. assert. assertequals ( true, wasupdated )
[3]: org. junit. assert. assertnull ( org. springframework. roo. metadata. metadataidentificationutils. getmetadatainstance ( null ) )
[4]: org. junit. assert. assertnull ( org. springframework. roo. metadata. metadataidentificationutils. getmetadatainstance ( """" ) )

************

************
tgt: org . junit . assert . assertequals ( "ok" , api . test ( ) )
[0]: org. junit. assert. assertnull ( org. springframework. roo. metadata. metadataidentificationutils. getmetadatainstance ( ""foo"" ) )
[1]: org. junit. assert. assertnull ( org. springframework. roo. metadata. metadataidentificationutils. getmetadatainstance ( ""test"" ) )
[2]: org. junit. assert. assertnull ( org. springframework. roo. metadata. metadataidentificationutils. getmetadatainstance ( ""a"" ) )
[3]: org. junit. assert. asserttrue ( json. isempty ( ) )
[4]: org. junit. assert. asserttrue ( json, json. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( e . getmessage ( ) . indexof ( java . lang . string . class . getname ( ) ) ) >= 0 ) )
[0]: org. junit. assert. assertequals ( true, json. isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, errors. size ( ) )
[2]: org. junit. assert. assertequals ( 1, builder. errors. size ( ) )
[3]: org. junit. assert. assertequals ( 1, events. size ( ) )
[4]: org. junit. assert. assertequals ( 1, builder. count )

************

************
tgt: org . junit . assert . assertequals ( null , result )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertequals ( strategy, checkuploadneeded ( logstoragestatus ) )
[2]: org. junit. assert. assertequals ( strategy, strategy. checkuploadneeded ( logstoragestatus ) )
[3]: org. junit. assert. assertequals ( strategy, testuploadneeded ( logstoragestatus ) )
[4]: org. junit. assert. assertequals ( strategy, logstoragestatus )

************

************
tgt: org . junit . assert . assertequals ( 2 , intersecting . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( node. getquery ( ) )
[2]: org. junit. assert. assertequals ( node. getquery ( ), result. getquery ( ) )
[3]: org. junit. assert. assertequals ( node. getquery ( ), node. getquery ( ) )
[4]: org. junit. assert. assertequals ( node, fr. gouv. vitam. storage )

************

************
tgt: org . junit . assert . assertequals ( 1 , p1 . degree ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( queryplan. getchildqueryplans ( ) )
[2]: org. junit. assert. assertequals ( null, queryplan. getchildqueryplans ( ) )
[3]: _1 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( conf )
[0]: )
[1]: org. junit. assert. assertequals ( i, next )
[2]: org. junit. assert. asserttrue ( ( i == next ) )
[3]: org. junit. assert. asserttrue ( ( i <= next ) )
[4]: org. junit. assert. asserttrue ( ( i > next ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , aslist . size ( ) )
[0]: org. junit. assert. asserttrue ( ( i >= next ) )
[1]: org. junit. assert. assertthat ( ismatch )
[2]: org. junit. assert. assertfalse ( ismatch )
[3]: org. junit. assert. asserttrue ( ismatch )
[4]: , ismatch )

************

************
tgt: org . junit . assert . assertequals ( 0 , vh . geteventssize ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, v. get ( jetbrains. jetpad. projectional. view. viewtest. x_name_trait ). size ( ) )
[2]: org. junit. assert. assertequals ( null, v. get ( jetbrains. jetpad. projectional. view. viewtest. x_name_trait ) )
[3]: org. junit. assert. assertequals ( org. hamcrest. corematchers. is ( jetbrains. jetpad. projectional. view. viewtest. x_name_trait ) )
[4]: org. junit. assert. assertequals ( org. junit. assert. assertequals ( 0, v. get ( jetbrains. jetpad. projectional. view. viewtest. name ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , products . length )
[0]: org. junit. assert. assertequals ( org. junit. assert. assertequals ( 0, v. get ( jetbrains. jetpad. projectional. view. viewtest. x_name_trait ). length )
[1]: org. junit. assert. assertarrayequals ( expresult, result )
[2]: org. junit. assert. assertequals ( expresult, result )
[3]: org. junit. assert. assertequals ( 1l, config. getid ( ) )
[4]: org. junit. assert. assertequals ( 1l, config. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( encoded . equals ( expected ) )
[0]: org. junit. assert. assertequals ( 0l, config. size ( ) )
[1]: org. junit. assert. assertequals ( 0l, config. getid ( ) )
[2]: org. junit. assert. assertequals ( 1l, config. get ( ) )
[3]: org. junit. assert. assertnotnull ( email )
[4]: org. junit. assert. assertequals ( 1, email. to ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( email. to ( ) )
[1]: org. junit. assert. assertequals ( 0, email. to ( ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( divforclass )
[4]: org. junit. assert. assertequals ( 1, divforclass. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( featurestate . enabled , condition . process ( contextmanager ) )
[0]: org. junit. assert. assertnotnull ( divforclass. isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, divforclass. isempty ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, cf1. childlist ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, cf1. childlist ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( shardlist . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, cf3. childlist ( ). size ( ) )
[1]: org. junit. assert. assertequals ( mousecursor, niftymouse. getcurrentid ( ) )
[2]: org. junit. assert. assertnotnull ( niftymouse. getcurrentid ( ) )
[3]: org. junit. assert. assertnull ( niftymouse. getcurrentid ( ) )
[4]: org. junit. assert. assertequals ( mousecursor, niftymouse. getcurrentid ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( plainval , recval )
[0]: org. junit. assert. assertequals ( mousecursor, niftymouse. getcurrentid ( ). get ( ) )
[1]: org. junit. assert. asserttrue ( td. usebottomup ( ) )
[2]: org. junit. assert. asserttrue ( td. orderfalse ( ) )
[3]: org. junit. assert. asserttrue ( td. usebottomup ( order ) )
[4]: org. junit. assert. asserttrue ( td. contains ( rightouter ) )

************

************
tgt: org . junit . assert . assertnotnull ( manager )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, request. getcontenttype ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, request. getcontenttype ( ) )
[3]: org. junit. assert. assertequals ( 1, request. getcontenttype ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, request. getcontenttype ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( berichtentiteiten . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( request. getcontenttype ( ) )
[1]: org. junit. assert. assertnotnull ( getbody ( response ) )
[2]: org. junit. assert. asserttrue ( getbody ( response ). contains ( 1 ) )
[3]: org. junit. assert. asserttrue ( getbody ( response ). isempty ( ) )
[4]: org. junit. assert. asserttrue ( getbody ( response ) )

************

************
tgt: org . junit . assert . asserttrue ( checkboxclickevent . ischecked ( ) )
[0]: org. junit. assert. assertequals ( 1, getbody ( response ) )
[1]: org. junit. assert. assertequals ( com. laytonsmith. pureutilities. classloading. generaltest. class, c2. getclassreference ( ) )
[2]: org. junit. assert. assertequals ( true, a1. matches ( w ) )
[3]: org. junit. assert. asserttrue ( a1. matches ( w ) )
[4]: org. junit. assert. assertnotnull ( bean. hello ( ) )

************

************
tgt: org . junit . assert . assertnull ( newstate )
[0]: org. junit. assert. assertnull ( bean. hello ( ) )
[1]: org. junit. assert. assertnotnull ( bean )
[2]: org. junit. assert. assertequals ( 1, bean. hello ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( expected, org. threadly. util. exceptionutils. getcauseoftypes ( e, java. util. collections. singletonlist ( expected ) ) )

************

************
tgt: org . junit . assert . asserttrue ( dotest ( dynamicquery , query ) )
[0]: org. junit. assert. assertequals ( expected, org. threadly. util. exceptionutils. getcauseoftypes ( e, null ) )
[1]: org. junit. assert. assertequals ( expected, org. threadly. util. exceptionutils. getcauseoftypes ( e, e ) )
[2]: org. junit. assert. assertequals ( expected, org. threadly. util. exceptionutils. getcauseoftypes ( e, new java. util. illegalargumentexception ( ) ) )
[3]: org. junit. assert. assertequals ( expected, org. threadly. util. exceptionutils. getcauseoftypes ( e, com. google. common. collect. immutablelist. of ( ) ) )
[4]: org. junit. assert. assertnotnull ( collection )

************

************
tgt: org . junit . assert . assertequals ( 1 , rs . getint ( 1 ) )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertnotnull ( context )
[2]: org. junit. assert. assertnotnull ( queue )
[3]: type ) { }
[4]: org. junit. assert. asserttrue ( stream. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , planes . size ( ) )
[0]: org. junit. assert. asserttrue ( stream. stream ( ). isempty ( ) )
[1]: org. junit. assert. asserttrue ( stream. stream ( ). exists ( ) )
[2]: org. junit. assert. asserttrue ( stream. stream ( ) )
[3]: org. junit. assert. asserttrue ( stream. issuccess ( ) )
[4]: org. junit. assert. assertequals ( 1, reader. read ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ctx . result ( ) . size ( ) , 3 )
[0]: org. junit. assert. assertequals ( 0, reader. read ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 2, reader. read ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( reader. read ( ) )
[3]: org. junit. assert. assertequals ( 9, reader. read ( ). size ( ) )
[4]: org. junit. assert. assertequals ( ( size + 2 ), service. getallproviderattributetypes ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( multimap . get ( ( - 1 ) ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( ( size + 1 ), service. getallproviderattributetypes ( ). size ( ) )
[1]: org. junit. assert. assertequals ( ( size - 2 ), service. getallproviderattributetypes ( ). size ( ) )
[2]: org. junit. assert. assertequals ( sb. tostring ( ), ""1"" )
[3]: org. junit. assert. assertequals ( sb. tostring ( ), 3 )
[4]: org. junit. assert. assertequals ( sb. tostring ( ), 3 )

************

************
tgt: org . junit . assert . assertfalse ( mt . isempty ( ) )
[0]: org. junit. assert. assertequals ( sb. tostring ( ), 1.0 )
[1]: . tostring ( ) )
[2]: org. junit. assert. assertthat ( request, org. hamcrest. matchers. is ( m2 ) )
[3]: org. junit. assert. assertthat ( request, org. hamcrest. matchers. is ( m1 ) )
[4]: org. junit. assert. assertthat ( request. messages, org. hamcrest. matchers. is ( m2 ) )

************

************
tgt: org . junit . assert . assertequals ( "bar" , entrypoint . getparameter ( "foo" ) )
[0]: org. junit. assert. assertthat ( request. message, org. hamcrest. matchers. is ( m2 ) )
[1]: org. junit. assert. assertthat ( request. messages, org. hamcrest. matchers. is ( m1 ) )
[2]: org. junit. assert. assertequals ( 1, finding. size ( ) )
[3]: org. junit. assert. assertequals ( 2, finding. size ( ) )
[4]: org. junit. assert. assertequals ( 0, finding. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( result == args ) )
[0]: org. junit. assert. assertequals ( 4, finding. size ( ) )
[1]: org. junit. assert. assertequals ( 10, finding. size ( ) )
[2]: org. junit. assert. assertequals ( 1, twin. hashcode ( ) )
[3]: org. junit. assert. assertequals ( 0, twin. hashcode ( ) )
[4]: org. junit. assert. assertequals ( java. lang. long. hashcode ( 1 ), twin. hashcode ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , results . size ( ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), twin. hashcode ( ) )
[1]: org. junit. assert. assertequals ( java. lang. long. hashcode ( 200 ), twin. hashcode ( ) )
[2]: org. junit. assert. assertequals ( 1, def. size ( ) )
[3]: org. junit. assert. assertequals ( 2, def. size ( ) )
[4]: org. junit. assert. assertequals ( 0, def. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( streamid , e . streamid ( ) )
[0]: org. junit. assert. assertequals ( 3, def. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( previousbestchromosome, currentbestchromosome )
[3]: org. junit. assert. assertequals ( previousbestchromosome. fitness ( ), currentbestchromosome. fitness ( ) )
[4]: org. junit. assert. assertequals ( previousbestchromosome. size ( ), currentbestchromosome. size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( bytes , fetched )
[0]: org. junit. assert. assertequals ( previousbestchromosome, new java. lang. integer ( currentbestchromosome ) )
[1]: org. junit. assert. assertequals ( previousbestchromosome. getvalue ( ), currentbestchromosome. getvalue ( ) )
[2]: org. junit. assert. assertequals ( true, r )
[3]: org. junit. assert. assertequals ( false, r )
[4]: org. junit. assert. assertfalse ( r )

************

************
tgt: org . junit . assert . assertsame ( fred , manager . getuser ( 1 ) )
[0]: org. junit. assert. assertnull ( r )
[1]: org. junit. assert. assertequals ( expectedinnera, query )
[2]: org. junit. assert. assertequals ( expectedmustnot, query. get ( ) )
[3]: org. junit. assert. assertequals ( expectedinnera, query. get ( ) )
[4]: org. junit. assert. assertequals ( expectedmustnot, query )

************

************
tgt: org . junit . assert . assertequals ( "1999-05-31t02:09:32z" , com . epimorphics . jsonrdf . rdfutil . formatdatetime ( l , true ) )
[0]: org. junit. assert. assertequals ( expectedinnera, query. tostring ( ) )
[1]: org. junit. assert. assertfalse ( socket. isconnected ( ) )
[2]: org. junit. assert. assertequals ( 1, a. getlength ( ) )
[3]: org. junit. assert. assertequals ( 0, a. getlength ( ) )
[4]: org. junit. assert. assertequals ( 3, a. getlength ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , sink . tostring ( ) )
[0]: org. junit. assert. assertequals ( rulesblob, rulesblob )
[1]: org. junit. assert. assertequals ( null, rulesblob )
[2]: org. junit. assert. assertequals ( rulesblob. getbytes ( ), rulesblob )
[3]: org. junit. assert. assertequals ( parses, rulesblob )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( 0, chksumchannel. getchecksums ( ). length )
[1]: org. junit. assert. assertnull ( chksumchannel. getchecksums ( ) )
[2]: org. junit. assert. asserttrue ( chksumchannel. getchecksums ( ). isempty ( ) )
[3]: org. junit. assert. assertequals ( 0, chksumchannel. getchecksums ( ). size ( )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( rule . shouldproceed ( usersession , request ) )
[0]: org. junit. assert. asserttrue ( metadata. isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, this. getinputtypes ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, this. getinputtypes ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, list. getinputtypes ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, list. getinputtypes ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 8 , zerocount )
[0]: org. junit. assert. assertequals ( 1, dao. getinputtypes ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( credentials. getidentity ( ) )
[2]: org. junit. assert. assertequals ( ch. cyberduck. core. scheme. sftp, credentials. getidentity ( ) )
[3]: org. junit. assert. assertequals ( 1, credentials. getidentity ( ). size ( ) )
[4]: org. junit. assert. assertequals ( ch. cyberduck. core. sftp. client. getidentity ( ), credentials )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, results. size ( ) )
[2]: org. junit. assert. assertequals ( ordered, results )
[3]: org. junit. assert. assertnotnull ( results )
[4]: org. junit. assert. assertequals ( ordered, results. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( reportdata . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( ordered. size ( ), 1 )
[1]: org. junit. assert. assertfalse ( retriable )
[2]: org. junit. assert. assertthat ( oid1, org. hamcrest. corematchers. is ( oid2 ) )
[3]: org. junit. assert. assertthat ( oid2, org. hamcrest. corematchers. is ( oid1 ) )
[4]: org. junit. assert. assertthat ( oid1, org. hamcrest. matchers. is ( oid2 ) )

************

************
tgt: org . junit . assert . assertfalse ( hits . hasnext ( ) )
[0]: org. junit. assert. assertthat ( oid0, org. hamcrest. corematchers. is ( oid2 ) )
[1]: org. junit. assert. assertthat ( oid1, org. hamcrest. corematchers. is ( oid2 ) )
[2]: org. junit. assert. asserttrue ( valid )
[3]: org. junit. assert. assertequals ( instanceconstraintviolationslist. tostring ( ), 1, instanceconstraintviolationslist. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), 1, instanceconstraintviolationslist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . huawei . streaming . expression . boolean . class , notexpr . gettype ( ) )
[0]: org. junit. assert. assertnotnull ( instanceconstraintviolationslist. tostring ( ), instanceconstraintviolationslist. size ( ) )
[1]: org. junit. assert. assertnotnull ( instanceconstraintviolationslist. tostring ( ) )
[2]: . tostring ( ) )
[3]: org. junit. assert. assertequals ( com. google. common. collect. iterables. transform ( null ), flavorparser. parseflavorstring ( null ) )
[4]: org. junit. assert. assertequals ( com. google. common. collect. iterables. transform ( ""foo"" ), flavorparser. parseflavorstring ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertnotnull ( flavorparser. parseflavorstring ( null ) )
[1]: org. junit. assert. assertequals ( com. facebook. buck. core. parser. buildtargetparser. flavorparser. parseflavorstring ( null ), flavorparser )
[2]: org. junit. assert. assertequals ( com. google. common. collect. iterables. transform ( flavorparser. parseflavorstring ( null ) ), flavorparser )
[3]: org. junit. assert. assertequals ( false, validator. isvalid ( beans2, context ) )
[4]: org. junit. assert. assertequals ( 0, element. valideerinhoud ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "testusemessage" , m . gettext ( ) )
[0]: org. junit. assert. assertequals ( 1, element. valideerinhoud ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, elements. valideerinhoud ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( element. valideerinhoud ( ) )
[3]: org. junit. assert. assertequals ( 0, element. valideerinhoud ( ). length )
[4]: org. junit. assert. assertequals ( 1, dbmd. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( factory instanceof com . amazonaws . mobileconnectors . iot . awsiottlssocketfactory ) )
[0]: org. junit. assert. assertequals ( 1, dbmd. count ( ) )
[1]: org. junit. assert. assertequals ( 1, dbmd. get ( ) )
[2]: org. junit. assert. assertequals ( 1, dbmd. getid ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), callback. convert ( reply ) )
[4]: org. junit. assert. assertequals ( 0, org. appenders. log4j2. elasticsearch. bulkemittertest. class. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( actual )
[0]: org. junit. assert. assertequals ( 0, org. appenders. log4j2. elasticsearch. bulkemittertest. class )
[1]: org. junit. assert. assertequals ( 0, this. pool. getinvocations ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, logger. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, unfolded. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( 0, unfolded. size ( ) )
[1]: org. junit. assert. assertequals ( 1, unfolding. size ( ) )
[2]: org. junit. assert. assertequals ( 1, unfolded. size ( ) )
[3]: org. junit. assert. assertequals ( 1, unfolded. size ( ) )
[4]: org. junit. assert. assertequals ( true, postbuilditem. hasresult ( ) )

************

************
tgt: org . junit . assert . asserttrue ( sawexception )
[0]: org. junit. assert. assertequals ( false, postbuilditem. hasresult ( ) )
[1]: org. junit. assert. assertequals ( 0, postbuilditem. hasresult ( ) )
[2]: org. junit. assert. assertequals ( null, postbuilditem. hasresult ( ) )
[3]: org. junit. assert. assertequals ( 1, postbuilditem. hasresult ( ) )
[4]: org. junit. assert. assertequals ( result, null )

************

************
tgt: org . junit . assert . assertnull ( registertemplatecmdbyadmin . getzoneids ( ) )
[0]: org. junit. assert. assertequals ( result, result )
[1]: org. junit. assert. assertequals ( result, """" )
[2]: org. junit. assert. assertequals ( result, """" )
[3]: ) )
[4]: org. junit. assert. assertequals ( true, debugger. isconnected ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedvalue , result )
[0]: org. junit. assert. assertequals ( false, debugger. isconnected ( ) )
[1]: org. junit. assert. assertequals ( 1, debugger. isconnected ( ) )
[2]: org. junit. assert. assertequals ( 0, debugger. isconnected ( ) )
[3]: org. junit. assert. assertequals ( null, debugger. isconnected ( ) )
[4]: org. junit. assert. assertequals ( timestr, java. lang. string. valueof ( time ) )

************

************
tgt: org . junit . assert . assertequals ( com . oneops . notification . notificationmessagetest . test_value , notificationmessage . getpayloadstring ( com . oneops . notification . notificationmessagetest . entry_name ) )
[0]: org. junit. assert. assertequals ( null, timestr )
[1]: org. junit. assert. assertnull ( timestr )
[2]: org. junit. assert. assertequals ( timestr, java. lang. string. valueof ( null ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( 0 ), timestr )
[4]: org. junit. assert. assertsame ( areaprovider, imagemode. getimagenativesize ( image ) )

************

************
tgt: org . junit . assert . assertequals ( "hi" , hi )
[0]: org. junit. assert. assertnull ( imagemode. getimagenativesize ( image ) )
[1]: org. junit. assert. assertequals ( 1, imagemode. getimagenativesize ( image ). length )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnull ( docredentialsmatch ( token, info ) )

************

************
tgt: org . junit . assert . assertarrayequals ( testdata , actual )
[0]: org. junit. assert. assertnull ( info. docredentialsmatch ( token, info ) )
[1]: org. junit. assert. assertnull ( dao. docredentialsmatch ( token, info ) )
[2]: org. junit. assert. assertnull ( repository. docredentialsmatch ( token, info ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, c2. getvotes ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( samplekstore )
[0]: org. junit. assert. assertequals ( 3, c2. getvotes ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, 2. getvotes ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, c2. getvotes ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, c2. getvotes ( ) )
[4]: org. junit. assert. assertfalse ( state. isaggregatable ( ) )

************

************
tgt: org . junit . assert . assertfalse ( ctx . getresult ( ) )
[0]: org. junit. assert. assertequals ( event1, condition. match ( event1 ) )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( 1, 2, 3, 5 ), fixture )
[3]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( ), result )
[4]: org. junit. assert. assertequals ( expected, fixture )

************

************
tgt: org . junit . assert . assertnotnull ( org . simmetrics . metrics . stringmetrics . smithwaterman ( ) )
[0]: org. junit. assert. assertequals ( expected. size ( ), actual. size ( ) )
[1]: org. junit. assert. assertequals ( 1, points. size ( ) )
[2]: org. junit. assert. assertequals ( 3, points. size ( ) )
[3]: org. junit. assert. assertequals ( dnode1address, config1address )
[4]: org. junit. assert. assertequals ( dnode1address, config1. getappattempts ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( e )
[0]: org. junit. assert. assertequals ( dnode1address, config1. getid ( ) )
[1]: org. junit. assert. assertequals ( dnode1address, config1. tostring ( ) )
[2]: test dnode1address )
[3]: org. junit. assert. assertequals ( p1, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( codigoespecificadorsituacaotributaria , produto . getcodigoespecificadorsituacaotributaria ( ) )
[0]: org. junit. assert. assertequals ( p2, result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( p1, result. x )
[3]: org. junit. assert. assertequals ( 1, 1 )
[4]: org. junit. assert. assertnotnull ( s. collection ( ) )

************

************
tgt: org . junit . assert . assertnull ( state . getrequesttoken ( ) )
[0]: org. junit. assert. assertnotnull ( queue )
[1]: org. junit. assert. assertnotnull ( collection. collection ( ) )
[2]: org. junit. assert. assertnotnull ( collection )
[3]: org. junit. assert. assertequals ( kapuamessagefirst, kapuamessagesecond )
[4]: org. junit. assert. assertequals ( kapuamessagesecond, kapuamessagesecond )

************

************
tgt: org . junit . assert . assertequals ( orig , out )
[0]: org. junit. assert. assertequals ( kapuamessagesecond, kapuamessagefirst )
[1]: org. junit. assert. assertequals ( kapuamessagefirst, n )
[2]: ) )
[3]: org. junit. assert. assertfalse ( o. equals ( s ) )
[4]: org. junit. assert. assertfalse ( o. equals ( o ) )

************

************
tgt: org . junit . assert . assertsame ( returned , assertions )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertnull ( result )
[3]: , result )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , model . getnumberofcolumns ( ) )
[0]: org. junit. assert. assertequals ( 1, books. size ( ) )
[1]: org. junit. assert. assertequals ( 0, books. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. optional. of ( ), org. openl. rules. binding. fieldaccesstest. instance. test1 ( ) )
[3]: org. junit. assert. assertequals ( java. util. optional. empty ( ), org. openl. rules. binding. fieldaccesstest. instance. test1 ( ) )
[4]: org. junit. assert. assertequals ( org. openl. rules. binding. fieldaccesstest. instance. test1 ( ), org. openl. rules. binding. fieldaccesstest. instance )

************

************
tgt: org . junit . assert . assertthat ( receivedstatus , org . hamcrest . matchers . is ( forbidden ) )
[0]: org. junit. assert. assertequals ( org. openl. rules. binding. fieldaccesstest. instance. test1 ( ), org. openl. rules. binding. fieldaccesstest. test1 ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( id, container. getidbyindex ( 1 ) )
[3]: org. junit. assert. assertequals ( expct, result )
[4]: org. junit. assert. asserttrue ( result. contains ( expct ) )

************

************
tgt: org . junit . assert . assertnotnull ( mapping . find ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertthat ( result, is ( expct ) )
[3]: org. junit. assert. assertequals ( 1, results. getnumberofcalls ( ) )
[4]: org. junit. assert. assertequals ( 0, results. getnumberofcalls ( ) )

************

************
tgt: org . junit . assert . assertequals ( value , ( ( long ) ( contentlengthamattribute . convert ( java . lang . string . valueof ( value ) ) ) ) )
[0]: org. junit. assert. assertequals ( 3, results. getnumberofcalls ( ) )
[1]: org. junit. assert. assertequals ( 2, results. getnumberofcalls ( ) )
[2]: org. junit. assert. assertequals ( 9, results. getnumberofcalls ( ) )
[3]: org. junit. assert. asserttrue ( ept. evaluatetree ( ) )
[4]: org. junit. assert. assertequals ( 1, ept. evaluatetree ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( e . getmessage ( ) )
[0]: org. junit. assert. assertnotnull ( callback. getresult ( ) )
[1]: org. junit. assert. assertnull ( callback. getresult ( ) )
[2]: org. junit. assert. assertequals ( null, callback. getresult ( ) )
[3]: org. junit. assert. assertequals ( 0, callback. getresult ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( job . waitforcompletion ( true ) )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertequals ( 1, ( ( int ) ( list. size ( ) ) ) )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), list )
[3]: org. junit. assert. assertequals ( 0, list. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , test )
[0]: org. junit. assert. assertnotnull ( rebuilt )
[1]: org. junit. assert. assertequals ( person, rebuilt )
[2]: org. junit. assert. assertthat ( rebuilt, org. hamcrest. corematchers. is ( person ) )
[3]: org. junit. assert. asserttrue ( connection. isclosed ( ) )
[4]: org. junit. assert. assertequals ( 1, connection. isclosed ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . amazonaws . util . httputils . appenduri ( host , resourcepath , true ) , "foo.com/" )
[0]: org. junit. assert. assertnotnull ( resolveentity ( null, null ) )
[1]: org. junit. assert. assertnotnull ( resolveentity ( ""foo"", ""bar"" ) )
[2]: org. junit. assert. assertnotnull ( resolveentity ( ""a"", ""a"" ) )
[3]: org. junit. assert. assertequals ( null, resolveentity ( ""a"", ""b"" ) )
[4]: org. junit. assert. assertequals ( null, resolveentity ( ""a"", ""a"" ) )

************

************
tgt: org . junit . assert . assertthat ( target . equals ( action ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( version, distributiondetector. getdistversionstring ( null ) )
[1]: org. junit. assert. assertnotnull ( distributiondetector. getdistversionstring ( null ) )
[2]: org. junit. assert. assertnotnull ( distributiondetector. getdistversionstring ( org. google. common. collect. immutablelist. of ( ) ) )
[3]: org. junit. assert. assertnotnull ( distributiondetector. getdistversionstring ( version ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( downloader . waitforreportready ( ) )
[0]: org. junit. assert. assertnotnull ( kapuaappschannel. getclientid ( ) )
[1]: org. junit. assert. assertequals ( 1, kapuaappschannel. getclientid ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, kapuaappschannel. getclientid ( ). size ( ) )
[3]: org. junit. assert. assertequals ( kapuaappschannel, kapuaappschannel. getclientid ( ) )
[4]: org. junit. assert. assertequals ( 1, kapuaappschannel. getclientid ( ) )

************

************
tgt: org . junit . assert . asserttrue ( or . isdefined ( ) )
[0]: org. junit. assert. assertnotnull ( zipreader. getentryasstring ( tempzipfile ) )
[1]: org. junit. assert. assertequals ( null, zipreader. getentryasstring ( tempzipfile ) )
[2]: org. junit. assert. assertnull ( zipreader. getentryasstring ( tempzipfile ) )
[3]: org. junit. assert. assertnotnull ( zipreader. getentryasstring ( null ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( registeredexecutorservice , org . hamcrest . matchers . is ( executorservice ) )
[0]: org. junit. assert. assertequals ( 1, this. context. getnumcells ( ) )
[1]: org. junit. assert. assertequals ( 1, this. builder. getnumcells ( ) )
[2]: org. junit. assert. assertequals ( 1, this. model. getnumcells ( ) )
[3]: org. junit. assert. assertequals ( 1, this. grid. getnumcells ( ) )
[4]: org. junit. assert. assertequals ( 1, this. impl. getnumcells ( ) )

************

************
tgt: org . junit . assert . assertfalse ( resultaat )
[0]: org. junit. assert. assertequals ( 1, ut. getvalue ( ) )
[1]: org. junit. assert. assertequals ( guaranteed, ut. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 0, ut. getvalue ( ) )
[3]: org. junit. assert. assertequals ( 1, ut. getvalue ( ). length )
[4]: org. junit. assert. assertnotnull ( ut. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( g1 , g2 )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertthat ( s, org. hamcrest. corematchers. is ( """" ) )
[2]: org. junit. assert. assertequals ( ( previous + 1 ), scenariomodel. getscenarios ( ). size ( ) )
[3]: org. junit. assert. assertequals ( ( previous - 1 ), scenariomodel. getscenarios ( ). size ( ) )
[4]: org. junit. assert. assertequals ( previous, scenariomodel. getscenarios ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( display . isdisposed ( ) )
[0]: org. junit. assert. assertequals ( 1, scenariomodel. getscenarios ( ). size ( ) )
[1]: org. junit. assert. assertequals ( ( previous + 1 ), scenariomodel. getscenarios ( ). count ( ) )
[2]: org. junit. assert. assertequals ( abbaid, dbabba. getbiosummary ( ) )
[3]: org. junit. assert. assertequals ( 1, dbabba. getbiosummary ( ). size ( ) )
[4]: org. junit. assert. assertequals ( abba, dbabba. getbiosummary ( ) )

************

************
tgt: org . junit . assert . assertequals ( "0" , br . getvat ( ) )
[0]: org. junit. assert. assertequals ( 0, dbabba. getbiosummary ( ). size ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( ex. getmessage ( ) )
[3]: org. junit. assert. assertthat ( ex. getmessage ( ), org. hamcrest. corematchers. is ( ""foo"" ) )
[4]: org. junit. assert. assertthat ( ex. getmessage ( ), org. hamcrest. corematchers. is ( ""a"" ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( batteryinfos . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertthat ( ex. getmessage ( ), org. hamcrest. corematchers. is ( ""name"" ) )
[1]: org. junit. assert. assertthat ( ex. getmessage ( ), org. hamcrest. corematchers. is ( ""test"" ) )
[2]: org. junit. assert. assertequals ( expected, patterndocument )
[3]: org. junit. assert. assertequals ( expected, patterndocument. pattern ( ) )
[4]: org. junit. assert. assertequals ( expected, pattern ( pattern ( com. itextpdf. kernel. pdf. canvas. parser. biditextextractiontest. sourcefolder ) )

************

************
tgt: org . junit . assert . assertnotnull ( nodeconnectorinstanceidentifier )
[0]: org. junit. assert. assertequals ( expected, pattern )
[1]: org. junit. assert. assertequals ( expected, patterndocument. pattern ( pattern ( name ) ) )
[2]: org. junit. assert. assertequals ( 1, atomicinteger. get ( ) )
[3]: org. junit. assert. assertequals ( atomicinteger. get ( ), 1 )
[4]: org. junit. assert. assertequals ( 2, atomicinteger. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( m . isidentity ( ) )
[0]: get ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, testsources. size ( ) )
[3]: org. junit. assert. assertequals ( 1, listenerlistitempresenter. gettype ( ) )
[4]: org. junit. assert. assertequals ( null, listenerlistitempresenter. gettype ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , 2l , eofg . getintervallength ( ) )
[0]: org. junit. assert. assertequals ( 0, listenerlistitempresenter. gettype ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( stepdefinition, picklestep )
[4]: org. junit. assert. assertnull ( picklestep )

************

************
tgt: org . junit . assert . assertarrayequals ( array2 , output )
[0]: org. junit. assert. assertnull ( stepdefinition, picklestep )
[1]: org. junit. assert. assertnull ( stepdefinition )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, real )
[4]: org. junit. assert. assertequals ( 0, real )

************

************
tgt: org . junit . assert . assertthat ( analyzedrecords , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( records ) ) )
[0]: org. junit. assert. assertequals ( 100, real )
[1]: org. junit. assert. assertequals ( 3, real )
[2]: org. junit. assert. assertequals ( 5, real )
[3]: org. junit. assert. assertequals ( i, j )
[4]: org. junit. assert. assertnotnull ( term )

************

************
tgt: org . junit . assert . assertequals ( 1 , dbhandler . getgpstrackcount ( ) )
[0]: org. junit. assert. assertequals ( text, term )
[1]: org. junit. assert. assertnotnull ( term, term )
[2]: org. junit. assert. assertnotnull ( term )
[3]: ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. equals ( expectedsample [ i ], out [ i ], 0 ), expectedsample [ i ] )

************

************
tgt: org . junit . assert . assertequals ( com . sun . mail . util . proputil . getintproperty ( props , "test" , 1 ) , 1 )
[0]: org. junit. assert. assertequals ( org. hipparchus. util. precision. equals ( expectedsample [ i ], out [ i ], 0 ), 0 )
[1]: org. junit. assert. asserttrue ( java. util. arrays. equals ( expectedsample [ i ], out [ i ], 0 ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. equals ( expectedsample [ i ], out [ i ], 0 ), 0 )
[3]: org. junit. assert. assertequals ( java. util. arrays. equals ( expectedsample [ i ], out [ i ], 0 ), expectedsample [ i ], 0 )
[4]: org. junit. assert. assertequals ( message, indexedentity. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( value , java . lang . integer . valueof ( defaultvalue ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( attributevaluelistkeys ), result )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( attributevaluelistkeys ), result )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( attributevaluelistkeys ), result )
[3]: org. junit. assert. assertequals ( java. util. optional. empty ( ), result )
[4]: org. junit. assert. assertequals ( result, attributevaluelistkeys )

************

************
tgt: org . junit . assert . assertequals ( scorelangconstants . success_result , result )
[0]: org. junit. assert. assertequals ( 1, threadpriority. length )
[1]: org. junit. assert. assertnotnull ( processinstance )
[2]: org. junit. assert. assertnotnull ( name )
[3]: org. junit. assert. assertequals ( name, plist. tostring ( ) )
[4]: org. junit. assert. assertequals ( plist. getname ( ), name )

************

************
tgt: org . junit . assert . assertequals ( original , deserialized )
[0]: org. junit. assert. assertequals ( plist. tostring ( ), name )
[1]: org. junit. assert. assertequals ( name, plist. getname ( ) )
[2]: org. junit. assert. assertequals ( null, classundertest. get ( 0 ) )
[3]: org. junit. assert. assertnull ( classundertest. get ( 0 ) )
[4]: org. junit. assert. assertequals ( null, classundertest. get ( 1 ) )

************

************
tgt: org . junit . assert . assertfalse ( gerritserverone . isgerritsnapshotversion ( ) )
[0]: org. junit. assert. assertnull ( classundertest. get ( null ) )
[1]: _2 ) )
[2]: org. junit. assert. assertequals ( s, consumedmemory1 )
[3]: org. junit. assert. assertequals ( s, consumedmemory2 )
[4]: org. junit. assert. assertequals ( s, consumedmemory. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( s, consumedmemory. size ( ) )
[1]: org. junit. assert. assertequals ( s, s )
[2]: org. junit. assert. assertnotnull ( reply )
[3]: org. junit. assert. assertequals ( null, reply )
[4]: org. junit. assert. assertnull ( reply )

************

************
tgt: org . junit . assert . assertequals ( "23" , foo . baz ( ) )
[0]: org. junit. assert. assertequals ( string, reply )
[1]: ) )
[2]: org. junit. assert. assertthat ( space, org. hamcrest. matchers. equalto ( _b. tobuilder ( ). build ( ) ) )
[3]: org. junit. assert. assertthat ( _b. tobuilder ( ). build ( ), org. hamcrest. matchers. equalto ( space ) )
[4]: org. junit. assert. assertthat ( _b, org. hamcrest. matchers. equalto ( space. tobuilder ( ). build ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . collections . emptylist ( ) , values )
[0]: org. junit. assert. assertequals ( expected, result )
[1]: org. junit. assert. assertequals ( 1, generatedfiles. size ( ) )
[2]: org. junit. assert. assertequals ( 0, generatedfiles. size ( ) )
[3]: org. junit. assert. assertequals ( 2, generatedfiles. size ( ) )
[4]: org. junit. assert. assertequals ( 3, generatedfiles. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( valortotaltributos , imposto . getvalortotaltributos ( ) )
[0]: org. junit. assert. assertthat ( rc, is ( false ) )
[1]: org. junit. assert. assertthat ( rc, is ( true ) )
[2]: org. junit. assert. assertthat ( rc, org. hamcrest )
[3]: org. junit. assert. assertthat ( rc )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( instrument. s2_msi, org. esa. s3tbx. fu. detectinstrument. getinstrument ( product ) )
[1]: org. junit. assert. assertequals ( instrument. modis500, org. esa. s3tbx. fu. detectinstrument. getinstrument ( product ) )
[2]: org. junit. assert. assertequals ( instrument. modis, org. esa. s3tbx. fu. detectinstrument. getinstrument ( product ) )
[3]: org. junit. assert. assertequals ( instrument. seawifs, org. esa. s3tbx. fu. detectinstrument. getinstrument ( product ) )
[4]: org. junit. assert. assertnotnull ( org. esa. s3tbx. fu. detectinstrument. getinstrument ( product ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , results . size ( ) )
[0]: org. junit. assert. assertequals ( true, msg. isaccurate ( ) )
[1]: org. junit. assert. assertequals ( 1, msg. isaccurate ( ) )
[2]: org. junit. assert. assertequals ( 1, context. isaccurate ( ) )
[3]: org. junit. assert. assertequals ( null, context. isaccurate ( ) )
[4]: org. junit. assert. assertequals ( null, msg. isaccurate ( ) )

************

************
tgt: org . junit . assert . assertequals ( "type" , ksessionmodel . gettype ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertthat ( iscorrect, org. hamcrest. corematchers. is ( true ) )
[2]: org. junit. assert. assertequals ( new java. math. bigdecimal ( 1 ), result )
[3]: org. junit. assert. assertequals ( new java. math. bigdecimal ( 0 ), result )
[4]: org. junit. assert. assertequals ( new java. math. bigdecimal ( 1.0 ), result )

************

************
tgt: org . junit . assert . assertequals ( createembedding ( v0 , e0 , v1 , e1 , v2 , e2 , v3 ) , result . get ( 0 ) )
[0]: org. junit. assert. assertequals ( new java. math. bigdecimal ( 8 ), result )
[1]: org. junit. assert. assertequals ( new java. math. bigdecimal ( 5 ), result )
[2]: org. junit. assert. assertequals ( 1, multimap. values ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 3, multimap. values ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 3 ), multimap )

************

************
tgt: org . junit . assert . assertequals ( ( "failed<sp>due<sp>to<sp>exception:<sp>" 1 + ( testcase . getkey ( ) ) ) , testcase . getvalue ( ) , objectfilter . testfields ( testobject , com . intuit . wasabi . api . pagination . filters . paginationfiltertest . testobjectfilter . property . class ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 2, 3 ) )
[1]: ) )
[2]: org. junit. assert. assertnull ( ddmstructure. getstoragetype ( ) )
[3]: org. junit. assert. assertequals ( 0, ddmstructure. getstoragetype ( ) )
[4]: org. junit. assert. assertnotnull ( ddmstructure. getstoragetype ( ) )

************

************
tgt: org . junit . assert . assertthat ( violations . size ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( ddmstructure. getstoragetype ( ), ddmstructure. tostring ( ) )
[1]: org. junit. assert. assertequals ( ddmstructure. getstoragetype ( ), ddmstructures. tostring ( ) )
[2]: org. junit. assert. assertequals ( 0, rs. getint ( 1 ) )
[3]: org. junit. assert. assertequals ( 0, rs. getint ( 0 ) )
[4]: org. junit. assert. assertequals ( 1, rs. getint ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( bean , nestedproperty . getbean ( ) )
[0]: org. junit. assert. assertequals ( 1, rs. getint ( 0 ) )
[1]: org. junit. assert. assertequals ( expected, rs )
[2]: org. junit. assert. assertequals ( 1, users. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), users )
[4]: org. junit. assert. assertequals ( 2, users. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( accesstoken )
[0]: org. junit. assert. assertequals ( 0, users. size ( ) )
[1]: org. junit. assert. assertnotnull ( users )
[2]: org. junit. assert. assertequals ( 1l, result )
[3]: org. junit. assert. assertequals ( 0l, result )
[4]: org. junit. assert. assertequals ( structures. tostring ( ), 1, structures. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( nsme , eiie . getcause ( ) )
[0]: org. junit. assert. assertequals ( structures. tostring ( ), 2, structures. size ( ) )
[1]: org. junit. assert. assertequals ( structures. tostring ( ), 3, structures. size ( ) )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( attributevalue ), value )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( attributevalue ), value )
[4]: org. junit. assert. assertequals ( new java. lang. integer ( attributevalue, null ), value )

************

************
tgt: org . junit . assert . assertthat ( group )
[0]: org. junit. assert. assertequals ( null, value )
[1]: org. junit. assert. assertequals ( 1, genrule. gettype ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class, genrule. gettype ( ) )
[3]: org. junit. assert. assertequals ( genrule. gettype ( ), java. lang. string. class )
[4]: org. junit. assert. assertequals ( class, genrule. gettype ( ) )

************

************
tgt: org . junit . assert . assertequals ( barcodedatamatrix . dm_no_error , result )
[0]: ) )
[1]: org. junit. assert. assertequals ( book. getname ( ), address )
[2]: org. junit. assert. assertnotnull ( book. getname ( ) )
[3]: org. junit. assert. assertequals ( book. getname ( ), null )
[4]: org. junit. assert. assertequals ( book. getname ( ), "book. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( l , org . mapdb . elsa . elsaserializerbasetest . clone ( l ) )
[0]: org. junit. assert. assertequals ( book. getname ( ), "book. tostring ( ) )
[1]: org. junit. assert. assertequals ( 1, cache. size ( ) )
[2]: org. junit. assert. assertequals ( 0, cache. size ( ) )
[3]: org. junit. assert. assertequals ( 3, cache. size ( ) )
[4]: org. junit. assert. assertequals ( 9, cache. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( problem )
[0]: ) )
[1]: org. junit. assert. assertfalse ( interceptor. isenabled ( ) )
[2]: org. junit. assert. assertfalse ( g. isenabled ( ) )
[3]: org. junit. assert. assertfalse ( state. isenabled ( ) )
[4]: org. junit. assert. assertfalse ( trace. isenabled ( ) )

************

************
tgt: org . junit . assert . assertthat ( values . getweblogicoperatorimagepullpolicy ( ) , org . hamcrest . matchers . equalto ( stringvalue ) )
[0]: org. junit. assert. assertfalse ( filter. isenabled ( ) )
[1]: org. junit. assert. assertequals ( role, existingrole. getname ( ) )
[2]: org. junit. assert. assertnotnull ( existingrole. getname ( ) )
[3]: org. junit. assert. assertequals ( role, existingrole )
[4]: org. junit. assert. assertequals ( rolename, existingrole. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( "0050" , resultland )
[0]: org. junit. assert. assertnotnull ( existingrole )
[1]: org. junit. assert. assertequals ( 0.0, zero. getpartialderivative ( n ), epsilon [ n ] )
[2]: org. junit. assert. assertequals ( 1, config. getconfigfile ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, config. getconfigfile ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( config. getconfigfile ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . vaadin . flow . component . componenttest . testcomponent . class , instance . getcontent ( ) . getclass ( ) )
[0]: org. junit. assert. assertequals ( config. getconfigfile ( ). size ( ), 1 )
[1]: org. junit. assert. assertequals ( config. getconfigfile ( ), config. properties )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. asserttrue ( result )
[4]: text ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , result . size ( ) )
[0]: ) )
[1]: text )
[2]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( null, e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertfalse ( validationresult )
[0]: . getmessage ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( cip_chirality. r, org. openscience. cdk. geometry. cip. ciptool. getcipchirality ( chirality ) )
[3]: org. junit. assert. assertnull ( schema )
[4]: org. junit. assert. assertfalse ( ( schema == null ) )

************

************
tgt: org . junit . assert . assertequals ( expectedid , org . eclipse . winery . common . version . versionutils . getnewcomponentversionid ( servicetemplateid , appendix ) )
[0]: org. junit. assert. assertfalse ( schema. getid ( ). isempty ( ) )
[1]: org. junit. assert. assertfalse ( schema. getid ( ). equals ( null ) )
[2]: org. junit. assert. assertfalse ( schema. isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, actual. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), actual )

************

************
tgt: org . junit . assert . assertnotnull ( geometrycollection )
[0]: org. junit. assert. assertequals ( result, actual )
[1]: org. junit. assert. assertequals ( response, actual )
[2]: ) )
[3]: org. junit. assert. asserttrue ( exclusion1. equals ( exclusion2 ) )
[4]: org. junit. assert. assertequals ( 1, c. getstylename ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , entities . size ( ) )
[0]: org. junit. assert. assertequals ( ""foo"", c. getstylename ( ) )
[1]: org. junit. assert. assertequals ( null, c. getstylename ( ) )
[2]: org. junit. assert. assertequals ( """", c. getstylename ( ) )
[3]: org. junit. assert. assertequals ( 1, c. getstylename ( ). trim ( ) )
[4]: org. junit. assert. assertnotnull ( binding )

************

************
tgt: org . junit . assert . assertequals ( numsolutions [ ( i ++ ) ] , resultset . length )
[0]: org. junit. assert. assertnotnull ( circuit )
[1]: org. junit. assert. assertnotnull ( errors )
[2]: org. junit. assert. assertequals ( 0, errors. size ( ) )
[3]: org. junit. assert. assertequals ( 0, list. size ( ) )
[4]: org. junit. assert. assertequals ( java. lang. character. valueof ( ( ( char ) ( 65 + ( i ++ ) ) ) ), cdrs. getchar ( 1 ) )

************

************
tgt: org . junit . assert . assertthat ( rendered , org . hamcrest . corematchers . is ( test [ 1 ] ) )
[0]: org. junit. assert. assertequals ( java. lang. character. valueof ( ( ( char ) ( 65 + ( i ++ ) ) ) ), cdrs. getchar ( 0 ) )
[1]: org. junit. assert. assertequals ( java. lang. character. valueof ( ( ( char ) ( 65 + ( i ++ ) ) ) ), cdrs. getchar ( ) )
[2]: org. junit. assert. assertequals ( java. lang. character. valueof ( ( ( char ) ( 65 + ( i ++ ) ) ) ), cdrs. getchar ( i ) )
[3]: org. junit. assert. assertequals ( java. lang. character. valueof ( ( ( char ) ( 65 + i ) ) ), cdrs. getchar ( 1 ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), this. getnstrings ( ) )

************

************
tgt: org . junit . assert . assertequals ( zoneoperation , compute . attachdisk ( com . google . cloud . compute . deprecated . computeimpltest . instance_id , com . google . cloud . compute . deprecated . computeimpltest . persistent_disk_configuration ) )
[0]: org. junit. assert. assertequals ( 1, this. getnstrings ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4, 5 ), this. getnstrings ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4 ), this. getnstrings ( ) )
[3]: org. junit. assert. assertequals ( this. getnstrings ( ). size ( ), 1 )
[4]: org. junit. assert. assertnotnull ( collection )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( context )
[1]: ) )
[2]: )
[3]: 
[4]: org. junit. assert. assertequals ( s1, s2 )

************

************
tgt: org . junit . assert . assertequals ( 1 , list . size ( ) )
[0]: org. junit. assert. assertequals ( s2, s1 )
[1]: org. junit. assert. assertnotnull ( s2 )
[2]: org. junit. assert. assertequals ( s0, s2 )
[3]: org. junit. assert. assertequals ( s2, s2 )
[4]: org. junit. assert. assertnotnull ( id )

************

************
tgt: org . junit . assert . assertequals ( org . oscm . app . ror . lserverconfigurationtest . lserverid , lserverconfiguration . getserverid ( ) )
[0]: org. junit. assert. assertequals ( null, id )
[1]: org. junit. assert. assertequals ( id, null )
[2]: org. junit. assert. assertequals ( 1, id. length ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( org. apache. drill. exec. expr. fn. impl. bytefunctionhelpers. equal ( left. buffer, left. start, left. end, right. buffer, right. start, right. end ), 0 )

************

************
tgt: org . junit . assert . assertequals ( expected , p )
[0]: org. junit. assert. assertequals ( org. apache. drill. exec. expr. fn. impl. bytefunctionhelpers. equal ( left. buffer, left. start, left. end, right. buffer, right. start, right. end ), result )
[1]: org. junit. assert. assertequals ( org. apache. drill. exec. expr. fn. impl. bytefunctionhelpers. equal ( left. buffer, left. start, left. end, right. buffer, right. start, right. end ), right. tostring ( ) )
[2]: org. junit. assert. assertequals ( org. apache. drill. exec. expr. fn. impl. bytefunctionhelpers. equal ( left. buffer, left. start, left. end, right. buffer, right. start, right. end ), right. buffer )
[3]: org. junit. assert. assertequals ( org. apache. drill. exec. expr. fn. impl. bytefunctionhelpers. equal ( left. buffer, left. start, left. end, right. buffer, right. start, right. end ), right. fail ( ) )
[4]: org. junit. assert. assertequals ( expectatedmessage, e. getmessage ( ). trim ( ) )

************

************
tgt: org . junit . assert . assertequals ( projectmetadata , result )
[0]: org. junit. assert. assertequals ( expectatedmessage, e. getmessage ( ) )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( expectatedmessage. trim ( ), e. getmessage ( ) )
[3]: org. junit. assert. assertnotnull ( e )
[4]: org. junit. assert. assertequals ( string, firstnonnull )

************

************
tgt: org . junit . assert . assertequals ( 512 , rc . getcardinality ( ) )
[0]: org. junit. assert. assertequals ( strings, firstnonnull )
[1]: org. junit. assert. assertequals ( null, firstnonnull )
[2]: org. junit. assert. assertnotnull ( firstnonnull )
[3]: , firstnonnull )
[4]: org. junit. assert. asserttrue ( db. check ( encrypted, encrypted ) )

************

************
tgt: org . junit . assert . assertequals ( org . wikidata . wdtk . datamodel . implementation . datatypeidimpl . getjsondatatypefromdatatypeiri ( datatypeidimpl . dt_globe_coordinates ) , datatypeidimpl . json_dt_globe_coordinates )
[0]: org. junit. assert. asserttrue ( pwdservice. check ( encrypted, encrypted ) )
[1]: org. junit. assert. asserttrue ( java. util. arrays. check ( encrypted, encrypted ) )
[2]: org. junit. assert. asserttrue ( handler. check ( encrypted, encrypted ) )
[3]: org. junit. assert. asserttrue ( java. util. arrays. check ( encrypted, encrypted. getbytes ( ) ) )
[4]: org. junit. assert. assertnotnull ( reuploadedimageurl )

************

************
tgt: org . junit . assert . assertthat ( minpathsum ( grid ) , org . hamcrest . matchers . is ( 12 ) )
[0]: org. junit. assert. assertequals ( imagetocurl, reuploadedimageurl )
[1]: org. junit. assert. assertnotnull ( reuploadedimageimageurl )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, state. end )

************

************
tgt: org . junit . assert . assertnotnull ( mpd . getplaylist ( ) )
[0]: org. junit. assert. assertnotnull ( buffer )
[1]: org. junit. assert. assertequals ( 1, handler. count )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, samples. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( actie . getongeldigaangewezenobjectofvoorkomen ( ) )
[0]: org. junit. assert. assertequals ( 0, samples. size ( ) )
[1]: org. junit. assert. assertnotnull ( samples )
[2]: org. junit. assert. assertequals ( 2, samples. size ( ) )
[3]: org. junit. assert. assertequals ( 3, samples. size ( ) )
[4]: org. junit. assert. assertequals ( 1, mapconnection. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( state . constraintschangesforrelationshiptype ( 1 ) . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( mapconnection )
[1]: org. junit. assert. assertequals ( 0, mapconnection. size ( ) )
[2]: org. junit. assert. assertnotnull ( mapconnection. isempty ( ) )
[3]: ) )
[4]: org. junit. assert. assertnull ( isactivationallowed )

************

************
tgt: org . junit . assert . assertequals ( io . vertx . rx . java . test . gen . arrays . aslist ( "bar" , "foo" ) , list )
[0]: org. junit. assert. assertequals ( list1, list2 )
[1]: org. junit. assert. assertequals ( list, list1 )
[2]: org. junit. assert. assertequals ( list, list2 )
[3]: org. junit. assert. assertequals ( list1, list1 )
[4]: org. junit. assert. assertequals ( list2, list1 )

************

************
tgt: org . junit . assert . assertequals ( 0 , root . getchildnodecount ( 1 ) )
[0]: org. junit. assert. assertequals ( 0, item. getcreateditems ( ). length )
[1]: org. junit. assert. assertequals ( 1, item. getcreateditems ( ). length )
[2]: org. junit. assert. assertequals ( 5, item. getcreateditems ( ). length )
[3]: org. junit. assert. assertequals ( itemcount, item. getcreateditems ( ). length )
[4]: org. junit. assert. assertequals ( 2, item. getcreateditems ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( dummyclass . istrace ( ) )
[0]: org. junit. assert. assertarrayequals ( expectedindexes, result )
[1]: org. junit. assert. assertequals ( expectedindexes, result )
[2]: org. junit. assert. assertarrayequals ( result, expectedindexes )
[3]: , result )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( tempfile . delete ( ) )
[0]: org. junit. assert. assertnull ( handler. getcachecontrol ( controller, handler, null ) )
[1]: org. junit. assert. assertnull ( handler. getcachecontrol ( controller, null, null ) )
[2]: org. junit. assert. assertnull ( handler. getcachecontrol ( null, controller, null ) )
[3]: org. junit. assert. assertnull ( handler. getcachecontrol ( controller, controller, null ) )
[4]: org. junit. assert. assertnull ( handler, handler )

************

************
tgt: org . junit . assert . assertequals ( expected , res )
[0]: org. junit. assert. assertequals ( expectedjson, generatedjson )
[1]: org. junit. assert. assertequals ( expectedjson, generatedjson. trim ( ) )
[2]: org. junit. assert. assertequals ( actualjson, generatedjson )
[3]: org. junit. assert. assertequals ( resultjson, generatedjson )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertnotnull ( best. getcoverage ( ) )
[1]: org. junit. assert. assertequals ( 1, best. getcoverage ( ), 0 )
[2]: org. junit. assert. assertequals ( 1.0, best. getcoverage ( ), 0 )
[3]: org. junit. assert. assertequals ( 1.0, best. getcoverage ( ), 0.0 )
[4]: org. junit. assert. assertequals ( 1, best. getcoverage ( ), 0.0 )

************

************
tgt: org . junit . assert . assertequals ( "" , 0 , refs . size ( ) )
[0]: org. junit. assert. assertequals ( 1, cc. activecells ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, cc. activecells ( ). size ( ) )
[2]: org. junit. assert. assertequals ( cn, cc. activecells ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( activecolumns ), cc. activecells ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , tl . collect ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( org. hyperledger. fabric. sdk. channelconfigurationtest. test_bytes_1, testchannelconfig. getchannelconfigurationasbytes ( ) )
[1]: org. junit. assert. assertequals ( org. hyperledger. fabric. sdk. channelconfigurationtest. test_bytes_2, testchannelconfig. getchannelconfigurationasbytes ( ) )
[2]: org. junit. assert. assertequals ( org. hyperledger. fabric. sdk. channelconfigurationtest. test_bytes_1, testchannelconfig. getchannelconfigurationasbytes ( ). length )
[3]: org. junit. assert. assertequals ( org. hyperledger. fabric. sdk. channelconfigurationtest. test_bytes_2, testchannelconfig. getchannelconfigurationasbytes ( ). length )
[4]: org. junit. assert. assertnotnull ( testchannelconfig. getchannelconfigurationasbytes ( ) )

************

************
tgt: org . junit . assert . assertsame ( expectedresult , result )
[0]: org. junit. assert. assertequals ( 1, dataset. getsubreportcount ( ) )
[1]: org. junit. assert. assertequals ( 1, metadata. getsubreportcount ( ) )
[2]: org. junit. assert. assertequals ( 1, repository. getsubreportcount ( ) )
[3]: org. junit. assert. assertequals ( 0, dataset. getsubreportcount ( ) )
[4]: org. junit. assert. assertequals ( 1, fixture. getsubreportcount ( ) )

************

************
tgt: org . junit . assert . assertequals ( erroreval . value_invalid , indirect . instance . evaluate ( new org . apache . poi . ss . formula . eval . valueeval [ ] { } , null ) )
[0]: org. junit. assert. assertequals ( 1, found. size ( ) )
[1]: org. junit. assert. assertequals ( 0, found. size ( ) )
[2]: org. junit. assert. assertequals ( 3, found. size ( ) )
[3]: org. junit. assert. assertnotnull ( actie. valideercorrectieinhoud ( ) )
[4]: org. junit. assert. assertequals ( null, actie. valideercorrectieinhoud ( ) )

************

************
tgt: org . junit . assert . assertequals ( filenames , files )
[0]: org. junit. assert. assertnull ( actie. valideercorrectieinhoud ( ) )
[1]: org. junit. assert. assertequals ( 0, actie. valideercorrectieinhoud ( ). length )
[2]: org. junit. assert. assertequals ( 1, actie. valideercorrectieinhoud ( ). length )
[3]: org. junit. assert. assertequals ( l, longvalue )
[4]: org. junit. assert. assertequals ( 1, l )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( expected ) )
[0]: org. junit. assert. assertequals ( l, longvalue. readlong ( ) )
[1]: org. junit. assert. assertequals ( 0, l )
[2]: org. junit. assert. assertequals ( look, longvalue )
[3]: org. junit. assert. assertequals ( 1, this. filter. getextensions ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, this. list. getextensions ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( viewaction . project . visiblefiletry ( project . getname ( ) ) )
[0]: org. junit. assert. assertequals ( 1, filter. getextensions ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, new java. util. arraylist ( ). getextensions ( ) )
[2]: org. junit. assert. assertequals ( 1, this. filter. getextensions ( ). size ( )
[3]: org. junit. assert. assertequals ( 1, violations. size ( ) )
[4]: org. junit. assert. assertequals ( 3, violations. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( 0, violations. size ( ) )
[1]: org. junit. assert. assertequals ( 9, violations. size ( ) )
[2]: org. junit. assert. assertequals ( 5, violations. size ( ) )
[3]: org. junit. assert. assertnotnull ( artist )
[4]: org. junit. assert. assertequals ( 1, artist. s )

************

************
tgt: org . junit . assert . assertequals ( ( ( "select<sp>*<sp>from<sp>(" 0 + sqltext ) + "select<sp>*<sp>from<sp>(" 0 ) , expected , testutils . formattedresult . resultfactory . tostringunsorted ( rs ) )
[0]: org. junit. assert. assertequals ( null, artist )
[1]: org. junit. assert. assertequals ( 1, artist. lookahead )
[2]: org. junit. assert. assertnull ( artist )
[3]: org. junit. assert. assertequals ( markdown, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertnotnull ( base64 )
[0]: org. junit. assert. assertequals ( markdown, actual )
[1]: org. junit. assert. assertequals ( markdown, results )
[2]: org. junit. assert. assertequals ( markdown, content )
[3]: org. junit. assert. assertnull ( espereventprocessor. restoreconfiguration ( badconfiguration ) )
[4]: org. junit. assert. assertnull ( espereventprocessor. restoreconfiguration ( configuration ) )

************

************
tgt: org . junit . assert . assertequals ( expectedstatuses , node . getclustercoordinator ( ) . getconnectionstatuses ( ) )
[0]: org. junit. assert. assertnull ( espereventprocessor. restoreconfiguration ( conf ) )
[1]: org. junit. assert. assertfalse ( espereventprocessor. restoreconfiguration ( badconfiguration ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( item. getstate ( ). equals ( state ) )
[4]: org. junit. assert. assertequals ( 0, tbce. comparescreen ( empty ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , filter . size ( ) )
[0]: org. junit. assert. assertnotnull ( tbce. comparescreen ( empty. file ) )
[1]: org. junit. assert. assertnotnull ( tbce. comparescreen ( null ) )
[2]: org. junit. assert. assertequals ( 0, tbce. comparescreen ( empty. file ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( this. addworkitem ( 1, new java. util. arraylist < java. lang. object > ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( existingkaleotaskinstancetoken , newkaleotaskinstancetoken )
[0]: org. junit. assert. assertfalse ( this. store. addworkitem ( 1l, null ) )
[1]: org. junit. assert. assertfalse ( this. addworkitem ( 1, new java. util. arraylist < java. lang. object > ( ) ) )
[2]: org. junit. assert. assertfalse ( this. addworkitem ( 1l, new java. util. arraylist < java. lang. object > ( ) ) )
[3]: org. junit. assert. asserttrue ( this. addworkitem ( 1, new java. util. arraylist < < java. lang. object > > ( ) ) )
[4]: org. junit. assert. assertequals ( businessobjectdatakeys, response )

************

************
tgt: org . junit . assert . assertequals ( 1 , temp2 . getid ( ) )
[0]: org. junit. assert. assertequals ( result, response )
[1]: org. junit. assert. assertequals ( businessobjectdatakeys, response. result )
[2]: org. junit. assert. assertequals ( current, response )
[3]: org. junit. assert. assertequals ( ident_5, response )
[4]: org. junit. assert. assertequals ( 1, meldingen. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( tm. getlabel ( ) )
[1]: org. junit. assert. assertequals ( org. phenotips. translation. getlabel ( ), tm )
[2]: org. junit. assert. assertequals ( 1, tm. getlabel ( ). size ( ) )
[3]: org. junit. assert. assertequals ( null, tm. getlabel ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( usercredentials . createscopedrequired ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. asserttrue ( ( ( result. length ( ) ) == 1 ) )
[3]: org. junit. assert. assertequals ( ""test"", result )
[4]: org. junit. assert. asserttrue ( ( ( result. length ( ) ) == 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , actual )
[0]: org. junit. assert. assertequals ( 1, ksession. fireallrules ( ) )
[1]: org. junit. assert. assertequals ( 2, ksession. fireallrules ( ) )
[2]: org. junit. assert. assertequals ( 0, ksession. fireallrules ( ) )
[3]: org. junit. assert. assertequals ( 1, ksession. fiallrules ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . getdouble ( 0 ) , 0.0 )
[0]: org. junit. assert. asserttrue ( testisvalid )
[1]: org. junit. assert. asserttrue ( testisvalid. isvalidconfigfile ( ) )
[2]: org. junit. assert. asserttrue ( testisvalidentity. isvalidconfigfile ( ) )
[3]: org. junit. assert. asserttrue ( testisvalid_ isvalidconfigfile ( ) )
[4]: org. junit. assert. asserttrue ( testisvalid<sp. isvalid isvalidconfigfile )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( false ) )
[0]: org. junit. assert. assertnotnull ( tag )
[1]: org. junit. assert. assertequals ( ""foo"", tag )
[2]: org. junit. assert. assertequals ( ""test"", tag )
[3]: org. junit. assert. assertequals ( ""a"", tag )
[4]: org. junit. assert. assertequals ( null, tag )

************

************
tgt: org . junit . assert . assertfalse ( discoveruiresources . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( service. get ( 0 ) )
[1]: org. junit. assert. assertnotnull ( service. get ( 1 ) )
[2]: get ( 0 ) )
[3]: get ( 1 ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( msg , dynany . equal ( dynany2 ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( 1, results. size ( ) )
[2]: org. junit. assert. assertequals ( 1, referrers. size ( ) )
[3]: org. junit. assert. assertequals ( 0, referrers. size ( ) )
[4]: org. junit. assert. assertequals ( 3, referrers. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , 6 , actual . size ( ) )
[0]: org. junit. assert. assertequals ( 2, referrers. size ( ) )
[1]: org. junit. assert. assertequals ( 4, referrers. size ( ) )
[2]: org. junit. assert. assertequals ( 1, com. feilong. core. util. collectionsutil. select ( list, null, guanyu ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, com. feilong. core. util. collectionsutil. select ( list, liubei, guanyu ). size ( ) )
[4]: org. junit. assert. assertequals ( null, com. feilong. core. util. collectionsutil. select ( list, null, guanyu ) )

************

************
tgt: org . junit . assert . assertequals ( ( eventcount * 2 ) , event . gettouchcount ( ) )
[0]: org. junit. assert. assertequals ( 1, com. feilong. core. util. collectionsutil. select ( list, ""name"", ( ( java. lang. string ) ( null ) ) ) )
[1]: org. junit. assert. assertequals ( 1, com. feilong. core. util. collectionsutil. select ( list, null, ( ( java. lang. string ) ( null ) ) ) )
[2]: org. junit. assert. assertnotnull ( callable )
[3]: org. junit. assert. assertnotnull ( callable. get ( ) )
[4]: org. junit. assert. assertnotnull ( callable. execute ( ) )

************

************
tgt: org . junit . assert . asserttrue ( org . eclipse . hono . adapter . lora . providers . lorautils . isvalidloragateway ( gateway ) )
[0]: org. junit. assert. assertequals ( callable, callable )
[1]: ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class, org. nohope. reflection. introspectionutils. tryfromprimitive ( java. lang. string. class ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), org. nohope. reflection. introspectionutils. tryfromprimitive ( java. lang. long. class ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. nohope. reflection. introspectionutils. tryfromprimitive ( java. lang. object. class ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , ksession . fireallrules ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. class, org. nohope. reflection. introspectionutils. tryfromprimitive ( ( ( java. lang. object ) ( null ) ) ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. nohope. reflection. introspectionutils. tryfromprimitive ( java. util. arraylist. class ) )
[2]: org. junit. assert. assertnotnull ( dummyuri )
[3]: org. junit. assert. assertequals ( dummyuri, dummyuri )
[4]: org. junit. assert. assertnull ( dummyuri )

************

************
tgt: org . junit . assert . assertnull ( selected )
[0]: org. junit. assert. assertequals ( null, dummyuri )
[1]: )
[2]: org. junit. assert. assertequals ( 1, group. getresources ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, group. getresources ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( builder )

************

************
tgt: org . junit . assert . asserttrue ( org . apache . hadoop . hbase . procedure2 . testprocedurebypass . procexecutor . bypassprocedure ( id , 1000 , true , false ) )
[0]: org. junit. assert. assertnotnull ( builder. name )
[1]: org. junit. assert. assertnotnull ( builder. data )
[2]: org. junit. assert. assertnotnull ( builder. xml )
[3]: org. junit. assert. assertnotnull ( builder. my )
[4]: org. junit. assert. assertequals ( xml, pullouts )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , result )
[0]: org. junit. assert. assertequals ( xm, pullouts )
[1]: org. junit. assert. assertequals ( dom, pullouts )
[2]: org. junit. assert. assertequals ( o, pullouts )
[3]: ) )
[4]: org. junit. assert. assertequals ( comploader. getclassloader ( ), loadclass. getclassloader ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , context . performquery ( query ) . size ( ) )
[0]: org. junit. assert. assertnotnull ( loadclass )
[1]: org. junit. assert. assertnotnull ( loadclass. getclassloader ( ) )
[2]: org. junit. assert. assertequals ( comploader. getclassloader ( ), classloader. getclassloader ( ) )
[3]: org. junit. assert. assertequals ( comploader. getclassloader ( ), class. getclassloader ( ) )
[4]: org. junit. assert. assertnotnull ( ecaught. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( persoonbericht , berichtentiteits . get ( 0 ) )
[0]: org. junit. assert. assertequals ( ""foo"", ecaught. getmessage ( ) )
[1]: org. junit. assert. assertequals ( null, ecaught. getmessage ( ) )
[2]: . getmessage ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( features. iskeyordered ( ) )

************

************
tgt: org . junit . assert . asserttrue ( g1 . equals ( g2 ) )
[0]: org. junit. assert. assertnull ( features. iskeyordered ( ) )
[1]: org. junit. assert. assertequals ( 1, features. iskeyordered ( ) )
[2]: org. junit. assert. assertequals ( 1, features. iskeyordered ( ). length )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, status. getcompletedfilenames ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 200 , response . getstatus ( ) )
[0]: org. junit. assert. assertequals ( 0, errors. getcompletedfilenames ( ). length )
[1]: org. junit. assert. assertequals ( 0, getcompletedfilenames ( ). length )
[2]: type ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( response )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( null, response )
[1]: org. junit. assert. assertnull ( response )
[2]: org. junit. assert. assertequals ( response, null )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( failureprovided. get ( ) )

************

************
tgt: org . junit . assert . assertfalse ( cleanupsuccessful )
[0]: org. junit. assert. assertequals ( null, failureprovided. get ( ) )
[1]: org. junit. assert. assertequals ( testsubject, result )
[2]: org. junit. assert. assertequals ( testdvnumber, result )
[3]: org. junit. assert. assertequals ( testmanagedvalues, result )
[4]: org. junit. assert. assertequals ( test depentpent, result )

************

************
tgt: org . junit . assert . assertequals ( globaloperation , compute . getoperation ( com . google . cloud . compute . deprecated . computeimpltest . global_operation_id ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( error, me. getmessage ( ) )
[2]: org. junit. assert. assertequals ( err, me. getmessage ( ) )
[3]: org. junit. assert. assertequals ( msg, error. getmessage ( ) )
[4]: org. junit. assert. assertequals ( msg, me. getmessage ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: . getmessage ( ) )
[1]: org. junit. assert. asserttrue ( ( ( intentededamount. compareto ( realamount ) ) == 0 ) )
[2]: org. junit. assert. asserttrue ( ( ( intentededamount. compareto ( realamount ) ) < 0 ) )
[3]: org. junit. assert. assertequals ( org. pac4j. core. client. login. class, client. getuserprofile ( context, context ). getclass ( ) )
[4]: org. junit. assert. assertequals ( org. pac4j. core. client. util. collections. emptylist ( ), client. getuserprofile ( context, context ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( com . lightboxtechnologies . spectrum . json . getnonnull ( json , key ) ) != null ) )
[0]: org. junit. assert. assertequals ( org. pac4j. core. client. login_url, client. getuserprofile ( context, context ) )
[1]: org. junit. assert. assertequals ( org. pac4j. core. client. junit. assert. assertequals ( null, client. getuserprofile ( context, context ) )
[2]: org. junit. assert. assertequals ( null, client. getuserprofile ( context, context ) )
[3]: org. junit. assert. assertequals ( value, converter. tobyte ( value ) )
[4]: org. junit. assert. assertequals ( value, handler. tobyte ( value ) )

************

************
tgt: org . junit . assert . assertnotnull ( com . openpojo . reflection . construct . instancefactory . getmostcompleteinstance ( classwithstaticconstructorpojo ) )
[0]: org. junit. assert. assertequals ( value, tobyte ( value ) )
[1]: org. junit. assert. assertequals ( value, this. tobyte ( value ) )
[2]: org. junit. assert. assertequals ( value, root. tobyte ( value ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), e. tolist ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), e. tolist ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( springbean )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 0 ), e. tolist ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), e. tolist ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4, 5 ), e. tolist ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr [ 0 ] )

************

************
tgt: org . junit . assert . assertequals ( 1 , t . foo ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr, res )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr [ 1 ] )
[2]: ) )
[3]: org. junit. assert. assertequals ( path, relativepath )
[4]: org. junit. assert. assertequals ( path, relativepath. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( "odd<sp>single<sp>digit" , s )
[0]: org. junit. assert. assertequals ( path, relativepath. trim ( ) )
[1]: org. junit. assert. assertequals ( path, relativepath. getmessage ( ) )
[2]: org. junit. assert. assertequals ( path, relativepath. getabsolutepath ( ) )
[3]: org. junit. assert. assertnotnull ( pathrep ( ) )
[4]: org. junit. assert. assertnotnull ( pathrep ( ). tolist ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( path )
[0]: org. junit. assert. assertnotnull ( pathrep ( ). tostring ( ) )
[1]: org. junit. assert. assertnotnull ( pathrep ( ). getid ( ) )
[2]: org. junit. assert. assertnotnull ( pathrep ( ). collection ( ) )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( 0, result )

************

************
tgt: org . junit . assert . asserttrue ( ( ( jiraruntimeoptions . reporter ( classloader ) ) != null ) )
[0]: org. junit. assert. assertequals ( 0l, result )
[1]: org. junit. assert. assertequals ( zero, result )
[2]: org. junit. assert. assertequals ( 1, results )
[3]: org. junit. assert. assertequals ( org. jacoco. core. internal. analysis. counterimpl. getinstance ( 1, 1 ), complexity )
[4]: org. junit. assert. assertequals ( org. jacoco. core. internal. analysis. counterimpl. getinstance ( 1, 0 ), complexity )

************

************
tgt: org . junit . assert . assertnotnull ( e )
[0]: org. junit. assert. assertequals ( org. jacoco. core. internal. analysis. counterimpl. getinstance ( 0, 1 ), complexity )
[1]: org. junit. assert. assertequals ( org. jacoco. core. internal. analysis. counterimpl. getinstance ( 1, 2 ), complexity )
[2]: org. junit. assert. assertequals ( org. jacoco. core. internal. analysis. counterimpl. getinstance ( 2, 1 ), complexity )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 3 ), result )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), result )

************

************
tgt: org . junit . assert . asserttrue ( unita . getimports ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, p. getmaxbackreferencelength ( ) )
[1]: org. junit. assert. assertequals ( 0, p. getmaxbackreferencelength ( ) )
[2]: org. junit. assert. assertequals ( 1, p. getmaxbackreferencelength ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, p. getmaxbackreferencelength ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, p. getmaxbackreferencelength ( ). get ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( user )
[0]: org. junit. assert. assertequals ( 1, s. intvalue ( ) )
[1]: org. junit. assert. assertequals ( 0, s. intvalue ( ) )
[2]: org. junit. assert. assertequals ( 5, s. intvalue ( ) )
[3]: org. junit. assert. assertequals ( 3, s. intvalue ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertsame ( org . apache . accumulo . server . fs . pertablevolumechoosertest . mockchooser1 . class , delegate . getclass ( ) )
[0]: org. junit. assert. assertnotnull ( classundertest ( ). list ( ) )
[1]: org. junit. assert. assertnotnull ( classundertest ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( classundertest ( ) )
[3]: org. junit. assert. assertnotnull ( classundertest ( ). iterator ( ) )
[4]: org. junit. assert. assertnotnull ( classundertest ( ). get ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( new uk . gov . gchq . gaffer . types . freqmap ( ( ( java . lang . string ) ( null ) ) ) , result )
[0]: org. junit. assert. assertequals ( 1, allpatients. size ( ) )
[1]: org. junit. assert. assertequals ( 0, allpatients. size ( ) )
[2]: org. junit. assert. assertequals ( 1, anypatients. size ( ) )
[3]: org. junit. assert. assertequals ( 1, everypatients. size ( ) )
[4]: _2. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "p" 3 , param . getformatteddescription ( ) )
[0]: org. junit. assert. assertequals ( 1, request. getstacklevel ( ) )
[1]: org. junit. assert. assertequals ( 1, request. getstacklevel ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, request. getstacklevel ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, request. getstacklevel ( ) )
[4]: org. junit. assert. assertequals ( 1, request. getstacklevel ( ). get ( ) )

************

************
tgt: org . junit . assert . assertthat ( result . stream ( ) . count ( ) , org . hamcrest . matchers . is ( 0l ) )
[0]: org. junit. assert. assertnotnull ( listeners. getname ( ) )
[1]: org. junit. assert. assertequals ( 1, listener. getname ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, listeners. getname ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, listeners. getname ( ) )
[4]: org. junit. assert. assertequals ( 1, listener. getname ( ). length )

************

************
tgt: org . junit . assert . assertnull ( mp )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertequals ( 0, list. size ( ) )
[2]: org. junit. assert. assertequals ( s, s )
[3]: org. junit. assert. assertequals ( s, 1 )
[4]: org. junit. assert. assertnotnull ( s )

************

************
tgt: org . junit . assert . assertequals ( 12 , maps . size ( ) )
[0]: org. junit. assert. assertequals ( s, statements )
[1]: org. junit. assert. assertequals ( s, state )
[2]: org. junit. assert. assertnotnull ( info. renewlease ( ) )
[3]: org. junit. assert. assertequals ( info. renewlease ( ), 1 )
[4]: org. junit. assert. assertequals ( info, info. renewlease ( ) )

************

************
tgt: org . junit . assert . assertequals ( token . tostring ( ) , newtoken . tostring ( ) )
[0]: org. junit. assert. assertequals ( info. renewlease ( ). size ( ), 1 )
[1]: org. junit. assert. assertequals ( info. renewlease ( ). getid ( ), 1 )
[2]: org. junit. assert. assertnull ( impl. getresponsedelaysecs ( entry ) )
[3]: org. junit. assert. assertnotnull ( impl. getresponsedelaysecs ( entry ) )
[4]: org. junit. assert. assertnull ( entry. getresponsedelaysecs ( entry ) )

************

************
tgt: org . junit . assert . assertequals ( false , result )
[0]: org. junit. assert. assertequals ( 0, entry. getresponsedelaysecs ( entry ) )
[1]: org. junit. assert. assertnotnull ( entry. getresponsedelaysecs ( entry ) )
[2]: org. junit. assert. assertequals ( 1, aggregatedinvocations. size ( ) )
[3]: org. junit. assert. assertequals ( 0, aggregatedinvocations. size ( ) )
[4]: org. junit. assert. assertequals ( 3, aggregatedinvocations. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , countmarkers ( file ) )
[0]: org. junit. assert. assertequals ( 2, aggregatedinvocations. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( expectedpayload, actualpayload )
[3]: org. junit. assert. assertequals ( expectedpayload, actualpayload )
[4]: org. junit. assert. assertequals ( newdocs, responses )

************

************
tgt: org . junit . assert . assertequals ( groups . size ( ) , 0 )
[0]: org. junit. assert. assertnotnull ( responses )
[1]: org. junit. assert. assertequals ( 1, responses. size ( )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnull ( qname. getprefix ( ) )

************

************
tgt: org . junit . assert . assertequals ( stripnewlines ( expectedoutput ) , stripnewlines ( actualoutput ) )
[0]: org. junit. assert. assertnull ( qname )
[1]: org. junit. assert.null ( qname. getprefix ( ) )
[2]: org. junit. assert. assertnull ( qname, qname )
[3]: ) )
[4]: org. junit. assert. assertequals ( update_ok, testedstore. readproperty ( org. ff4j. commonsconf. update_ok ). getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedcmd , transformedstring )
[0]: org. junit. assert. assertequals ( updated_ok, testedstore. readproperty ( org. ff4j. commonsconf. update_ok ). getvalue ( ) )
[1]: org. junit. assert. assertnotnull ( testedstore. readproperty ( org. ff4j. commonsconf. update_ok ). getvalue ( ) )
[2]: org. junit. assert. assertequals ( updates_ok, testedstore. readproperty ( org. ff4j. commonsconf. update_ok ). getvalue ( ) )
[3]: org. junit. assert. assertnull ( testedstore. readproperty ( org. ff4j. commonsconf. update_ok ). getvalue ( ) )
[4]: org. junit. assert. asserttrue ( actual. isinsamedatabaseinstance ( target ) )

************

************
tgt: org . junit . assert . assertequals ( expecturi , p2repuri )
[0]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( true ) )
[1]: org. junit. assert. assertfalse ( actual. isinsamedatabaseinstance ( target ) )
[2]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( false ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( evaluatorfromset )

************

************
tgt: org . junit . assert . assertthat ( invocations . get ( ) , org . hamcrest . matchers . equalto ( actualinvocations ) )
[0]: org. junit. assert. assertequals ( evaluator, evaluatorfromset )
[1]: org. junit. assert. assertnull ( evaluatorfromset )
[2]: org. junit. assert. assertnotnull ( user. getid ( ) )
[3]: org. junit. assert. assertequals ( 1, user. getid ( ) )
[4]: org. junit. assert. assertequals ( model, user. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , o . getlogicalaxiomcount ( ) )
[0]: org. junit. assert. assertnull ( user. getid ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( null, diff )
[3]: org. junit. assert. assertnull ( diff )
[4]: org. junit. assert. assertequals ( 0, diff. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( flowstate . finished , status )
[0]: org. junit. assert. assertnotnull ( diff )
[1]: ) )
[2]: org. junit. assert. assertequals ( node. any, n )
[3]: org. junit. assert. assertnotnull ( n )
[4]: org. junit. assert. assertequals ( node. anything, n )

************

************
tgt: org . junit . assert . assertnotnull ( results )
[0]: org. junit. assert. assertequals ( nodes. any, n )
[1]: ) )
[2]: org. junit. assert. assertequals ( num1, metric. getvalue ( ) )
[3]: org. junit. assert. assertequals ( num1, metric. getvalue ( ), 0 )
[4]: org. junit. assert. assertequals ( num2, metric. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( number1, metric. getvalue ( ) )
[1]: org. junit. assert. assertequals ( 1, metric. getvalue ( ) )
[2]: org. junit. assert. assertequals ( org. apache. commons. lang3. pair. of ( 1, 1 ), org. apache. commons. lang3. pair. of ( 1, 1 ) )
[3]: org. junit. assert. assertequals ( org. apache. commons. lang3. pair. of ( 1, 1 ). size ( ), 1 )
[4]: org. junit. assert. assertequals ( java. util. collection. of ( 1, 1 ), org. apache. commons. lang3. pair. of ( 1, 1 ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedids , actualids )
[0]: org. junit. assert. assertequals ( org. apache. commons. lang3. pair. of ( 1, 1 ), org. apache. commons. lang3. pair. of ( 0, 1 ) )
[1]: org. junit. assert. assertequals ( org. apache. commons. lang3. pair. of ( 1, 1 ), org. apache. commons. lang3. pair. of ( 1, 2 ) )
[2]: org. junit. assert. assertequals ( expr. accept ( visitor ), visitresult )
[3]: org. junit. assert. assertequals ( expression. accept ( visitor ), visitresult )
[4]: org. junit. assert. assertequals ( expression, expr. accept ( visitor ) )

************

************
tgt: org . junit . assert . assertthat ( target . equals ( obj ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( e1. getmessage ( ), msg. tostring ( ) )
[1]: org. junit. assert. assertequals ( e1. getmessage ( ), msg. parse ( expectedsql ) )
[2]: org. junit. assert. assertequals ( e1. getmessage ( ), msg. pl ( ) )
[3]: org. junit. assert. assertequals ( msg. parse ( expectedsql ), msg. parse ( expectedsql ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( found )
[0]: org. junit. assert. assertequals ( pwd1, pwd2 )
[1]: org. junit. assert. assertnull ( org. guvnor. ala. ui. model. util. todomain ( null ) )
[2]: org. junit. assert. assertnull ( dao. todomain ( null ) )
[3]: org. junit. assert. assertnull ( org. guvnor. ala. ui. model. collection. todomain ( null ) )
[4]: org. junit. assert. assertnull ( org. guvnor. ala. ui. model. dao. todomain ( null ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( expected ) )
[0]: org. junit. assert. assertnotnull ( dao. todomain ( null ) )
[1]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( 1 ) )
[2]: org. junit. assert. assertthat ( result )
[3]: , result )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: )
[1]: org. junit. assert. assertfalse ( test. equals ( null ) )
[2]: org. junit. assert. assertfalse ( empty. equals ( new java. lang. object ( ) ) )
[3]: org. junit. assert. assertfalse ( java. util. arrays. equals ( null ) )
[4]: org. junit. assert. assertfalse ( array. equals ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( resourcepermissions . isempty ( ) )
[0]: org. junit. assert. assertfalse ( empty. equals ( null ) )
[1]: org. junit. assert. assertequals ( true, org. jbasics. arrays. islessthan ( twocomplementproblemlesser, twocomplementproblemgreater ) )
[2]: org. junit. assert. asserttrue ( org. jbasics. arrays. islessthan ( twocomplementproblemlesser, twocomplementproblemgreater ) )
[3]: org. junit. assert. assertequals ( true, org. jbasics. arrays. contains ( twocomplementproblemlesser, twocomplementproblemgreater ) )
[4]: org. junit. assert. asserttrue ( org. jbasics. arrays. contains ( twocomplementproblemlesser, twocomplementproblemgreater ) )

************

************
tgt: org . junit . assert . asserttrue ( errors . tostring ( ) , errors . isempty ( ) )
[0]: org. junit. assert. assertequals ( true, org. jbasics. arrays. islessthan ( twocomplementproblemlesser, twocomplementproblemgreater [ 0 ] )
[1]: org. junit. assert. assertnull ( ocsvtransformer. getcellcontent ( null ) )
[2]: org. junit. assert. assertnotnull ( org. opendaylight. yang. gen. v1. urn. opendaylight. params. xml. testbgpextendedmessageutil. tostring ( params ) )
[3]: org. junit. assert. assertnotnull ( org. opendaylight. yang. gen. v1. urn. opendaylight. params. xml. testbgpextendedmessageutil. get ( 0 ) )
[4]: org. junit. assert. assertnotnull ( org. opendaylight. yang. gen. v1. urn. opendaylight. params. xml. testbgpextendedmessageutil. build ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( theresult )
[0]: org. junit. assert. assertnotnull ( testbgpextendedmessage )
[1]: org. junit. assert. assertnotnull ( params )
[2]: org. junit. assert. assertnotnull ( path )
[3]: org. junit. assert. assertnull ( tester. isrulerunning ( 4 ) )
[4]: org. junit. assert. assertnull ( tester. isrulerunning ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( expecting , result )
[0]: org. junit. assert. assertnull ( tester. isrulerunning ( 5 ) )
[1]: org. junit. assert. assertnull ( tester. isrulerunning ( 7 ) )
[2]: org. junit. assert. assertnull ( tester. isrulerunning ( 3 ) )
[3]: org. junit. assert. assertfalse ( issystem )
[4]: org. junit. assert. asserttrue ( issystem )

************

************
tgt: org . junit . assert . assertequals ( repousername , instancerepousername )
[0]: org. junit. assert. assertfalse ( issystem )
[1]: , issystem )
[2]: ) )
[3]: org. junit. assert. asserttrue ( pubacked ( 1 ) )
[4]: org. junit. assert. assertequals ( true, pubacked ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( in . wasclosedproperly ( ) )
[0]: org. junit. assert. assertequals ( 1, pubacked ( 1 ) )
[1]: org. junit. assert. assertnotnull ( pubacked ( 1 ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, list1. compareto ( list2 ) )
[4]: org. junit. assert. assertequals ( 1, list1. compareto ( list2 ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , vh . geteventssize ( ) )
[0]: org. junit. assert. asserttrue ( ( ( list1. compareto ( list2 ) ) < 0 ) )
[1]: org. junit. assert. assertequals ( ( - 1 ), list1. compareto ( list2 ) )
[2]: org. junit. assert. asserttrue ( ( ( list1. compareto ( list2 ) ) == 0 ) )
[3]: org. junit. assert. assertequals ( 1, count )
[4]: org. junit. assert. assertequals ( 0, count )

************

************
tgt: org . junit . assert . assertequals ( expected , objectvalue . getvalue ( ) )
[0]: org. junit. assert. assertequals ( date, result )
[1]: org. junit. assert. assertequals ( result, date )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( now, result )
[4]: org. junit. assert. assertequals ( timestamp, result )

************

************
tgt: org . junit . assert . assertfalse ( didruleapply )
[0]: org. junit. assert. assertequals ( null, model. get ( org. springframework. springfaces. mvc. model. springfacesmodel. class ) )
[1]: org. junit. assert. assertnotnull ( model. get ( org. springframework. springfaces. mvc. model. springfacesmodel. class ) )
[2]: org. junit. assert. assertequals ( null, model. get ( org. springframework. springfaces. mvc. model. class ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, model. get ( org. springframework. springfaces. mvc. model. string. class ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( vxstringlist )
[0]: org. junit. assert. assertfalse ( resultaat )
[1]: org. junit. assert. assertequals ( 1, conceptsets. size ( ) )
[2]: org. junit. assert. assertequals ( 0, conceptsets. size ( ) )
[3]: org. junit. assert. assertequals ( conceptsets, conceptsets )
[4]: org. junit. assert. assertequals ( conceptsets. size ( ), 1 )

************

************
tgt: org . junit . assert . assertequals ( 0 , meldingen . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertthat ( tasks. isempty ( ), org. hamcrest. matchers. is ( true ) )
[2]: org. junit. assert. assertthat ( tasks. isempty ( ), org. hamcrest. corematchers. is ( true ) )
[3]: org. junit. assert. assertthat ( tasks. isempty ( ), org. hamcrest. corematchers. is ( false ) )
[4]: org. junit. assert. assertthat ( tasks. isempty ( ), org. hamcrest. matchers. is ( false ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 1, tasks. isempty ( ) )
[1]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), actual )
[2]: org. junit. assert. assertnotnull ( actual )
[3]: org. junit. assert. assertequals ( new java. lang. integer ( 0 ), actual )
[4]: org. junit. assert. assertequals ( 1, ( ( int ) ( actual ) ) )

************

************
tgt: org . junit . assert . assertnull ( getrevision ( com . b2international . index . revision . main , com . b2international . index . revision . revisionfixtures . revisiondata . class , com . b2international . index . revision . storage_key1 ) )
[0]: org. junit. assert. assertequals ( new java. lang. integer ( 3 ), actual )
[1]: org. junit. assert. assertequals ( 1, registry. getallvariables ( ). size ( ) )
[2]: org. junit. assert. asserttrue ( registry. getallvariables ( ). isempty ( ) )
[3]: org. junit. assert. assertequals ( 0, registry. getallvariables ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 2, registry. getallvariables ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , sw . tostring ( ) )
[0]: org. junit. assert. assertnotnull ( registry. getallvariables ( ) )
[1]: org. junit. assert. assertnotnull ( view )
[2]: org. junit. assert. assertnull ( view )
[3]: , view )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( m . eliminate ( ) , org . hamcrest . corematchers . is ( 2 ) )
[0]: )
[1]: org. junit. assert. assertnotnull ( hardwareversionenum. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 1, hardwareversionenum. getvalue ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, hardwareversionenum. getvalue ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( hardwareversionenum. getvalue ( ). tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( items , java . util . collections . singletonlist ( item ) )
[0]: org. junit. assert. assertequals ( 1, hardwareversionenum. getvalue ( ) )
[1]: org. junit. assert. asserttrue ( org. gitlab4j. api. jsonutils. comparejson ( event, event. tostring ( ) ) )
[2]: org. junit. assert. asserttrue ( org. gitlab4j. api. jsonutils. comparejson ( event, org. gitlab4j. api. jsonutils. comparejson ( event, null ) ) )
[3]: org. junit. assert. assertequals ( 1, org. gitlab4j. api. jsonutils. comparejson ( event, null ) )
[4]: org. junit. assert. assertnotnull ( org. gitlab4j. api. jsonutils. comparejson ( event, org. gitlab4j. api. jsonutils. comparejson ( event, null ) ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( 42 ) )
[0]: org. junit. assert. assertnotnull ( org. gitlab4j. api. jsonutils. comparejson ( event, event. tostring ( ) ) )
[1]: org. junit. assert. assertequals ( isotest. areisomorphic ( g1, g2 ), true )
[2]: org. junit. assert. assertequals ( isotest. areisomorphic ( g1, g2 ), isotest )
[3]: org. junit. assert. assertequals ( isotest. areisomorphic ( g1 ), isotest. areisomorphic ( g2 ) )
[4]: org. junit. assert. assertequals ( isotest. areisomorphic ( g1 ), isotest )

************

************
tgt: org . junit . assert . assertfalse ( result . haserrors ( ) )
[0]: org. junit. assert. assertequals ( isotest. areisomorphic ( g1 ). size ( ), 1 )
[1]: org. junit. assert. assertequals ( 1, processdefinition. getprocessapi ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, processdefinition. getprocessapi ( ). count ( ) )
[3]: org. junit. assert. assertequals ( 1, processdefinition. getprocessapi ( ). getnumberofopened ( ) )
[4]: org. junit. assert. assertequals ( 1, processdefinition. getprocessapi ( ). get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( httpstatus . bad_request , result . getstatuscode ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( assertions, returned )
[2]: org. junit. assert. assertnotnull ( returned )
[3]: org. junit. assert. assertnull ( returned )
[4]: org. junit. assert. assertequals ( assertion, returned )

************

************
tgt: org . junit . assert . assertfalse ( instances . isempty ( ) )
[0]: org. junit. assert. assertequals ( assertions, returned )
[1]: org. junit. assert. assertthat ( nextstartindex, org. hamcrest. corematchers. is ( 10 ) )
[2]: org. junit. assert. assertthat ( nextstartindex, org. hamcrest. corematchers. is ( 0 ) )
[3]: org. junit. assert. assertequals ( ( - 1 ), nextstartindex )
[4]: org. junit. assert. assertequals ( 1, nextstartindex )

************

************
tgt: org . junit . assert . assertsame ( org . jboss . msc . value . short . class , value . getvalue ( ) )
[0]: org. junit. assert. assertequals ( 1, nextstartindex, 0 )
[1]: org. junit. assert. assertequals ( 1, errors. size ( ) )
[2]: org. junit. assert. assertnotnull ( s. getprop ( s. tostring ( ) ) )
[3]: org. junit. assert. assertnotnull ( s. getprop ( s. getclass ( ) ) )
[4]: org. junit. assert. assertequals ( s, s. getprop ( s ) )

************

************
tgt: org . junit . assert . assertfalse ( socialsecurityconstraintsmanager . isallowed ( new org . ext . uberfire . social . activities . model . socialactivitiesevent ( ) ) )
[0]: org. junit. assert. assertnotnull ( s. getprop ( s ) )
[1]: ) )
[2]: org. junit. assert. assertfalse ( errors. getretired ( ) )
[3]: org. junit. assert. assertequals ( false, errors. getretired ( ) )
[4]: org. junit. assert. assertnull ( errors. getretired ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , events . size ( ) )
[0]: org. junit. assert. assertequals ( 0, errors. getretired ( ) )
[1]: org. junit. assert. assertequals ( true, errors. getretired ( ) )
[2]: org. junit. assert. assertequals ( 5, resultjobs )
[3]: org. junit. assert. assertequals ( 5, resultsjobs )
[4]: org. junit. assert. assertequals ( 5, terminjobs )

************

************
tgt: org . junit . assert . assertequals ( drug , org . openmrs . module . webservices . rest . web . v1_0 . resource . openmrs1_8 . obsresource1_8 . getvalue ( obs ) )
[0]: org. junit. assert. assertequals ( 5, completionjobs )
[1]: org. junit. assert. assertequals ( 5, failedjobs )
[2]: org. junit. assert. assertequals ( dfunidadefederativa. sc, retornoconsultacadastrodados. getuf ( ). get ( ) )
[3]: org. junit. assert. assertequals ( dfunidadefederativa. sc, retornoconsultacadastrodados. getuf ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( config. getconfig ( service ) )

************

************
tgt: org . junit . assert . assertequals ( "a" 5 , found )
[0]: org. junit. assert. assertnotnull ( configuration. getconfig ( service ) )
[1]: org. junit. assert. assertnotnull ( service. getconfig ( service ) )
[2]: org. junit. assert. assertnotnull ( dao. getconfig ( service ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( berichtentiteits. get ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( org . geotools . csw . emfutils . emfequals ( sr , reparsed ) )
[0]: org. junit. assert. assertnull ( berichtentiteits. get ( 0 ) )
[1]: org. junit. assert. assertnotnull ( berichtentiteits. get ( 1 ) )
[2]: org. junit. assert. assertnull ( berichtentiteits. get ( 1 ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( resourcedefinition )

************

************
tgt: org . junit . assert . assertequals ( o , hessianencoder . encode ( null , null , o ) )
[0]: org. junit. assert. assertequals ( embeddeddefinition, resourcedefinition )
[1]: org. junit. assert. assertequals ( 1, 1 )
[2]: org. junit. assert. assertnotnull ( collection )
[3]: org. junit. assert. assertnotnull ( s )
[4]: org. junit. assert. assertnotnull ( queue )

************

************
tgt: org . junit . assert . assertequals ( "/usr/lib/hadoop" , opts . gethadoopmapredhome ( ) )
[0]: type ) { }
[1]: org. junit. assert. assertequals ( 1, src. getone ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, dst. getone ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, src. getone ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, src. getone ( ). length )

************

************
tgt: org . junit . assert . assertequals ( systemsettingmanager . getsystemsettings ( keys ) . size ( ) , 3 )
[0]: org. junit. assert. assertequals ( 0, dst. getone ( ). size ( ) )
[1]: org. junit. assert. asserttrue ( builder. build ( ( ( short ) ( 2 ) ) ). isempty ( ) )
[2]: org. junit. assert. assertequals ( ( ( short ) ( 2 ) ), builder. build ( ( ( short ) ( 0 ) ) ) )
[3]: org. junit. assert. asserttrue ( builder. build ( ( ( short ) ( 2 ) ) ). equals ( builder. build ( 0 ) ) )
[4]: org. junit. assert. assertequals ( ( ( short ) ( 2 ) ), builder. build ( ( ( short ) ( 1 ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( "a" 3 , found )
[0]: org. junit. assert. assertequals ( ( ( short ) ( 2 ) ), builder. build ( ( ( short ) ( 0 ) ) ) ) )
[1]: org. junit. assert. assertequals ( 1, this. list. size ( ) )
[2]: org. junit. assert. assertequals ( 1, events. size ( ) )
[3]: org. junit. assert. assertequals ( 1, list. size ( ) )
[4]: org. junit. assert. assertequals ( 1, java. util. arrays. aslist ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertequals ( storepassword, sslcontext. getname ( ) )
[2]: org. junit. assert. assertnotnull ( sslcontext. getname ( ) )
[3]: org. junit. assert. assertequals ( user. getname ( ), sslcontext. getname ( ) )
[4]: org. junit. assert. assertequals ( session. getname ( ), sslcontext. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( undefined1 , undefined2 )
[0]: org. junit. assert. assertequals ( user. getname ( ), sslcontext. tostring ( ) )
[1]: org. junit. assert. assertthat ( interactionevent. isveto ( ), org. hamcrest. corematchers. is ( true ) )
[2]: org. junit. assert. assertfalse ( setuserusergroupchecker. isdisabled ( user ) )
[3]: org. junit. assert. assertequals ( expected, shortestpaths )
[4]: org. junit. assert. assertequals ( 1, shortestpaths. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( drunkunhappyking . ishappy ( ) )
[0]: org. junit. assert. assertequals ( expected, shortestpaths. memory ( ) )
[1]: org. junit. assert. assertequals ( expected, result. memory ( ) )
[2]: org. junit. assert. assertequals ( expected, totalpaths )
[3]: org. junit. assert. assertnotnull ( reconstructed )
[4]: org. junit. assert. assertequals ( null, reconstructed )

************

************
tgt: org . junit . assert . assertequals ( 5 , countlcs )
[0]: org. junit. assert. assertequals ( null, reconstructed. context )
[1]: org. junit. assert. assertequals ( 1, reconstructed. count )
[2]: org. junit. assert. assertnull ( reconstructed )
[3]: org. junit. assert. assertnotnull ( e )
[4]: org. junit. assert. assertnotnull ( exception )

************

************
tgt: org . junit . assert . assertnotnull ( member )
[0]: org. junit. assert. assertnotnull ( ex )
[1]: org. junit. assert. asserttrue ( true )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, myfixture. parametercount ( ) )
[4]: org. junit. assert. assertequals ( expected, content )

************

************
tgt: org . junit . assert . assertequals ( "input<sp>has<sp>not<sp>been<sp>read<sp>yet." , e . getmessage ( ) )
[0]: org. junit. assert. assertequals ( expected. trim ( ), content )
[1]: org. junit. assert. assertequals ( expected, content. trim ( ) )
[2]: org. junit. assert. assertequals ( expected + trim ), content )
[3]: org. junit. assert. assertequals ( expected, contents )
[4]: org. junit. assert. assertequals ( java. util. optional. empty ( ), restresponse. isnoarp ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . blazegraph . gremlin . structure . emptyblazeproperty . instance ( ) , vp . property ( "name" ) )
[0]: org. junit. assert. assertequals ( 1, restresponse. isnoarp ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 10 ), restresponse. isnoarp ( ) )
[2]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), restresponse. isnoarp ( ) )
[3]: org. junit. assert. assertequals ( 0, restresponse. isnoarp ( ). size ( ) )
[4]: org. junit. assert. assertequals ( subnetworkid, subnetworkid. setprojectid ( com. google. cloud. compute. deprecated. subnetworkidtest. project ) )

************

************
tgt: org . junit . assert . assertequals ( 470 , int0 )
[0]: org. junit. assert. assertnotnull ( subnetworkid. setprojectid ( com. google. cloud. compute. deprecated. subnetworkidtest. project ) )
[1]: org. junit. assert. assertsame ( subnetworkid, subnetworkid. setprojectid ( java. lang. string. class. getname ( ) ) )
[2]: org. junit. assert. assertsame ( subnetworkid, subnetworkid )
[3]: ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr )

************

************
tgt: org . junit . assert . assertequals ( 3 , seta . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr [ 0 ] )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr, res )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr [ 1 ] )
[3]: ) )
[4]: org. junit. assert. assertequals ( org. opendaylight. yangtools. yang. common. empty. getinstance ( ), read )

************

************
tgt: org . junit . assert . assertfalse ( oracle . kubernetes . operator . helpers . kubernetesutils . isfirstnewer ( domainmeta , domain2meta ) )
[0]: org. junit. assert. assertequals ( 0, ex. getmax ( 1, 1 ) )
[1]: org. junit. assert. assertequals ( 1, ex. getmax ( 1, 1 ) )
[2]: org. junit. assert. assertequals ( 0, ex. getmax ( 1, ( - 1 ) ) )
[3]: org. junit. assert. assertequals ( 4, ex. getmax ( 1, ( - 1 ) ) )
[4]: org. junit. assert. assertequals ( ( - 1 ), ex. getmax ( 1, 1 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( token. getsaslqop ( ) )
[1]: org. junit. assert. assertequals ( negotiatedqop, token. getsaslqop ( ) )
[2]: org. junit. assert. assertequals ( negotiationatedqop, token. getsaslqop ( ) )
[3]: org. junit. assert. assertnotnull ( token. getsaslqop ( ). get ( sasl. qop ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( version . isreleased ( ) )
[0]: org. junit. assert. assertthat ( venues, contains ( point ) )
[1]: org. junit. assert. assertthat ( venues, contains ( point, point ) )
[2]: org. junit. assert. assertnotnull ( venues )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertarrayequals ( java . lang . string . valueof ( i ) . getbytes ( ) , new java . lang . string ( event . getbody ( ) ) . getbytes ( ) )
[0]: org. junit. assert. assertequals ( 1, containerresource. getcontainercontents ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, datainstance. getvalue ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, datainstance. getvalue ( ) )
[3]: org. junit. assert. assertnotnull ( datainstance. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 3, datainstance. getvalue ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( e . getmessage ( ) )
[0]: ) )
[1]: org. junit. assert. assertarrayequals ( message, immunecapture. getvalue ( ) )
[2]: org. junit. assert. assertnull ( immunecapture. getvalue ( ) )
[3]: org. junit. assert. assertequals ( volume1, ex. getvolume ( ) )
[4]: org. junit. assert. assertequals ( 1, ex. getvolume ( ) )

************

************
tgt: org . junit . assert . asserttrue ( com . hazelcast . simulator . utils . cloudproviderutils . isstatic ( properties ) )
[0]: org. junit. assert. assertequals ( volume1, ex )
[1]: org. junit. assert. assertequals ( 0, ex. getvolume ( ) )
[2]: org. junit. assert. assertequals ( volume1. getvolume ( ), ex )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertnotnull ( results )
[3]: org. junit. assert. assertequals ( expectedlist, result )
[4]: org. junit. assert. assertequals ( result, expectedlist )

************

************
tgt: org . junit . assert . asserttrue ( bestaandestapel . getrelaties ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( expectedlist, result. size ( ) )
[1]: org. junit. assert. assertequals ( expectedlist, result. toarray ( ) )
[2]: org. junit. assert. assertequals ( expectedlist, result. values ( ) )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( clusterstatus2 . isenabled ( true , org . apache . blur . manager . clusterstatus . zookeeperclusterstatustest . default , org . apache . blur . manager . clusterstatus . zookeeperclusterstatustest . test ) )
[0]: org. junit. assert.null ( result )
[1]: , result )
[2]: ) )
[3]: org. junit. assert. assertequals ( com. spotify. folsom. ketamaintegrationtest. value1, client. get ( com. spotify. folsom. ketamaintegrationtest. key1 ). tocompletablefuture ( ). get ( ) )
[4]: org. junit. assert. assertequals ( 1, min )

************

************
tgt: org . junit . assert . assertfalse ( ex . getmessage ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, min )
[1]: org. junit. assert. assertequals ( min, 1 )
[2]: org. junit. assert. assertequals ( max, min )
[3]: org. junit. assert. assertequals ( max, 1 )
[4]: org. junit. assert. assertequals ( nrays, dotproduct, 0 )

************

************
tgt: org . junit . assert . assertequals ( 0l , messagelatch . getcount ( ) )
[0]: org. junit. assert. assertequals ( nrays, dotproduct, 0.0 )
[1]: org. junit. assert. assertequals ( nrays, dotproduct, 1.0 )
[2]: org. junit. assert. assertequals ( ( nrays + 1 ), dotproduct, 0 )
[3]: org. junit. assert. assertequals ( ( nrays + 1 ), dotproduct, 0.0 )
[4]: org. junit. assert. assertequals ( valoroutrasdespesasacessorias, produto. getvaloroutrasdespesasacessorias ( ) )

************

************
tgt: org . junit . assert . assertthat ( actualhashbase . tostring ( ) , org . hamcrest . corematchers . equalto ( expectedhashbase . tostring ( ) ) )
[0]: org. junit. assert. assertequals ( valoroutrasdespesasacessorias, produtos. getvaloroutrasdespesasacessorias ( ) )
[1]: org. junit. assert. assertequals ( valor outrasdespesasacessorias, produto. getvaloroutrasdespesasacessorias ( ) )
[2]: org. junit. assert. assertequals ( valoroutrasdespesasacessorias, produto. getvalor outrasdespesasacessorias ( ) )
[3]: org. junit. assert. assertequals ( valoroutrasdespesasacessorias, produto. getvaloroutrasdespesasacessorsias ( ) )
[4]: org. junit. assert. assertnull ( t1. tostring ( ) )

************

************
tgt: org . junit . assert . assertnull ( simple )
[0]: org. junit. assert. assertequals ( 0, t1. tostring ( ). length ( ) )
[1]: org. junit. assert. assertequals ( 0, t1. tostring ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, t1. tostring ( ) )
[3]: . tostring ( ) )
[4]: org. junit. assert. assertnotnull ( testsample )

************

************
tgt: org . junit . assert . assertequals ( "test" , mapping . gettuplefamilies ( ) )
[0]: org. junit. assert. assertnotnull ( testsample, testsample )
[1]: org. junit. assert. assertequals ( testsample, testsample )
[2]: org. junit. assert. asserttrue ( testsample, foundsample )
[3]: org. junit. assert. asserttrue ( testsample, testsample )
[4]: org. junit. assert. assertnotnull ( c )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( null, c )
[1]: org. junit. assert. assertequals ( c, true )
[2]: org. junit. assert. assertequals ( c, null )
[3]: org. junit. assert. assertnull ( c )
[4]: org. junit. assert. assertnull ( com. jogamp. opengl. math. binary16. packdouble ( 0.0 ) )

************

************
tgt: org . junit . assert . assertnotnull ( cellinfo )
[0]: org. junit. assert. assertequals ( null, com. jogamp. opengl. math. binary16. packdouble ( 0.0 ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), com. jogamp. opengl. math. binary16. packdouble ( 0.0 ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), com. jogamp. opengl. math. binary16. packdouble ( double. negative_zero ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( expected, actual, 0.0 )

************

************
tgt: org . junit . assert . assertfalse ( es . isnonsingular ( ) )
[0]: org. junit. assert. assertequals ( expected, actual, 0 )
[1]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( expected ) )
[2]: org. junit. assert. assertequals ( expected, actual, 1.0 )
[3]: org. junit. assert. assertnotnull ( actual )
[4]: org. junit. assert. assertthat ( bean. tofiltergroup ( ), org. hamcrest. matchers. equalto ( bean ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertthat ( bean, org. hamcrest. matchers. equalto ( bean. tofiltergroup ( ) ) )
[1]: org. junit. assert. assertthat ( java. util. collections. emptylist ( bean ), org. hamcrest. matchers. equalto ( bean ) )
[2]: org. junit. assert. assertthat ( bean, org. hamcrest. matchers. equalto ( bean ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( term )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( text, term )
[1]: org. junit. assert. assertnotnull ( term, term )
[2]: org. junit. assert. assertnotnull ( term )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( fixture. removesuffix ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( servlet . iscompleted ( ) )
[0]: org. junit. assert. assertequals ( null, fixture. removesuffix ( 0 ) )
[1]: org. junit. assert. assertnotnull ( fixture. removesuffix ( 1 ) )
[2]: org. junit. assert. assertnotnull ( fixture. removeuffix ( 0 ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( date, com. splicemachine. derby. utils. splicedatefunctions. to_date ( source, date ) )

************

************
tgt: org . junit . assert . assertequals ( "" , result )
[0]: org. junit. assert. assertequals ( expectedmsg, actualmsg )
[1]: org. junit. assert. assertequals ( expectedmsg, actualmsg. trim ( ) )
[2]: org. junit. assert. assertequals ( expectedmsg, actualmsg, actualmsg )
[3]: org. junit. assert. assertequals ( expectedmsg, actualmsg )
[4]: org. junit. assert. assertequals ( expectedmsg, actualmsg. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( volinfo . tojsonstring ( ) , newvollinfo . tojsonstring ( ) )
[0]: org. junit. assert. assertnotnull ( master2. getdetails ( ) )
[1]: org. junit. assert. assertequals ( master2, master1. getdetails ( ) )
[2]: org. junit. assert. assertnotnull ( master2 )
[3]: org. junit. assert. assertnull ( master2. getdetails ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( map , org . hamcrest . corematchers . is ( freqmap ) )
[0]: org. junit. assert. asserttrue ( file. containsgroup ( org. freedesktop. inistylefile. class ) )
[1]: org. junit. assert. asserttrue ( file. containsgroup ( ""key"" ) )
[2]: org. junit. assert. asserttrue ( file. containsgroup ( null ) )
[3]: org. junit. assert. asserttrue ( file. containsgroup ( "key ) )
[4]: org. junit. assert. asserttrue ( file. containsgroup ( org. springframework. data. redis. internal. persistence. class ) )

************

************
tgt: org . junit . assert . assertsame ( method , undertest . getmethod ( ) )
[0]: org. junit. assert. assertfalse ( emitted )
[1]: org. junit. assert. assertequals ( 1, getiterablesize ( iterable ) )
[2]: org. junit. assert. assertequals ( 0, getiterablesize ( iterable ) )
[3]: org. junit. assert. assertequals ( 2, resarr. size ( ) )
[4]: org. junit. assert. assertequals ( 2, resarr. length )

************

************
tgt: org . junit . assert . assertequals ( datastatus . active , empty . getcyclelockstatus ( ) )
[0]: org. junit. assert. assertequals ( 2, resarr. array ( ) )
[1]: org. junit. assert. assertequals ( two, resarr )
[2]: , resarr )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( 0, result )

************

************
tgt: org . junit . assert . assertnotnull ( uittevoerenregelsvoorverwerking )
[0]: org. junit. assert. assertequals ( 3, result )
[1]: org. junit. assert. assertequals ( 5, result )
[2]: org. junit. assert. assertequals ( 2, result )
[3]: org. junit. assert. assertnotnull ( associationindicationstatus. getvalue ( ) )
[4]: org. junit. assert. assertequals ( associationindicationstatus, associationindicationstatus. getvalue ( ) )

************

************
tgt: org . junit . assert . asserttrue ( verifyregistration ( org . onosproject . net . neighbour . impl . neighbourresolutionmanagertest . intf1 , org . onosproject . net . neighbour . impl . neighbourresolutionmanagertest . handler , org . onosproject . net . neighbour . impl . neighbourresolutionmanagertest . app_id ) )
[0]: org. junit. assert. assertequals ( associationindicationstatus. getvalue ( ), associationindicationstatus )
[1]: org. junit. assert. assertnull ( associationindicationstatus. getvalue ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[4]: org. junit. assert. assertequals ( expected, tostringunsorted ( rs ) )

************

************
tgt: org . junit . assert . assertequals ( com . eclipsesource . v8 . v8 . getundefined ( ) , result )
[0]: org. junit. assert. assertequals ( expected, java. lang. string. valueof ( result. tostringunsorted ( rs ) )
[1]: ( expected ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( action. remove ( server ) )
[4]: org. junit. assert. assertfalse ( action. remove ( server ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( org . glassfish . json . tests . jsonpatchbuildertest . expectedbuildperson ( ) ) )
[0]: org. junit. assert. assertequals ( false, action. remove ( server ) )
[1]: org. junit. assert. assertequals ( true, action. remove ( server ) )
[2]: ) )
[3]: org. junit. assert. assertthat ( parser. next ( ), is ( true ) )
[4]: org. junit. assert. assertnotnull ( definition )

************

************
tgt: org . junit . assert . assertnotnull ( newcloudsdkupdatejob ( ) . getmanagedcloudsdk ( ) )
[0]: org. junit. assert. assertnull ( definition )
[1]: org. junit. assert. assertequals ( null, definition )
[2]: org. junit. assert. assertequals ( definition, null )
[3]: org. junit. assert. assertequals ( definition, name )
[4]: org. junit. assert. assertnotnull ( recordvt1 )

************

************
tgt: org . junit . assert . assertequals ( test , ln . getsuffix ( 0 ) . tostring ( ) )
[0]: org. junit. assert. assertnotnull ( recordvt1. getfields ( ) )
[1]: org. junit. assert. assertequals ( recordvt1, readrecordv2 )
[2]: org. junit. assert. assertequals ( recordvt1, readrecordv1 )
[3]: org. junit. assert. assertnotnull ( readrecordv1 )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertnull ( sensor )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( result, roleservice )
[3]: org. junit. assert. assertequals ( null, result. type )
[4]: org. junit. assert. assertthat ( formdto. getloanofficers ( ), org. hamcrest. corematchers. is ( loanofficers ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertthat ( formdto. getloanofficers ( ). size ( ), org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertthat ( formdto. getloanofficers ( ). size ( ), org. hamcrest. corematchers. is ( 2 ) )
[2]: org. junit. assert. assertthat ( formdto. getloanofficers, org. hamcrest. corematchers. is ( loanofficers ) )
[3]: org. junit. assert. assertthat ( formdto, org. hamcrest. corematchers. is ( loanofficers ) )
[4]: org. junit. assert. assertequals ( false, actual )

************

************
tgt: org . junit . assert . assertequals ( get , f )
[0]: org. junit. assert. assertequals ( true, actual )
[1]: org. junit. assert. assertfalse ( actual )
[2]: org. junit. assert. asserttrue ( actual )
[3]: , actual )
[4]: org. junit. assert. assertnotnull ( class. getinstance ( com. mycila. guice. ext. service. serv2. class ) )

************

************
tgt: org . junit . assert . assertequals ( value , ris . read ( ) )
[0]: org. junit. assert. assertnotnull ( class. getinstance ( java. lang. string. class ) )
[1]: org. junit. assert. assertnotnull ( converter. getinstance ( com. mycila. guice. ext. service. serv2. class ) )
[2]: org. junit. assert. assertnotnull ( class. getinstance ( this. getclass ( ) ) )
[3]: org. junit. assert. assertnotnull ( class. getinstance ( java. lang. string. class ). make ( ) )
[4]: org. junit. assert. assertequals ( result1, future )

************

************
tgt: org . junit . assert . assertequals ( expectedlist . get ( iterator ) . tostring ( ) , resultlist . get ( iterator ) . tostring ( ) )
[0]: org. junit. assert. assertsame ( result1, future )
[1]: org. junit. assert. assertnotnull ( future )
[2]: org. junit. assert. asserttrue ( future. isempty ( ) )
[3]: result1 )
[4]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. manager. runnermanagerpresentertest. text, presenter. gettitle ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( e )
[0]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. manager. runnermanagerpresentertest. message, presenter. gettitle ( ) )
[1]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. manager. runnermanagerpresentertest. expected, presenter. gettitle ( ) )
[2]: org. junit. assert. assertequals ( java. util. optional. empty ( ), presenter. gettitle ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), presenter. gettitle ( ) )
[4]: org. junit. assert. assertequals ( 1, descricoes. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( reaction )
[0]: org. junit. assert. assertequals ( 0, descricoes. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), descricoes )
[2]: org. junit. assert. assertequals ( ( tpsize + tpsize ), org. ebayopensource. turmeric. runtime. sif. impl. internal. pipeline. localbindingthreadpool. getinstance ( ). getstatistics ( ). getpoolsize ( ) )
[3]: org. junit. assert. assertequals ( ( ( org. ebayopensource. turmeric. runtime. sif. impl. internal. pipeline. localbindingthreadpool. getinstance ( ). getstatistics ( ). getpoolsize ( ) ) - tpsize ), 0 )
[4]: org. junit. assert. assertequals ( ( tpsize - tpsize ), org. ebayopensource. turmeric. runtime. sif. impl. internal. pipeline. localbindingthreadpool. getinstance ( ). getstatistics ( ). getpoolsize ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( ( ( org. ebayopensource. turmeric. runtime. sif. impl. internal. pipeline. localbindingthreadpool. getinstance ( ). getstatistics ( ). getpoolsize ( ) ) + tpsize ), 0 )
[1]: org. junit. assert. assertequals ( ( ( org. ebayopensource. turmeric. runtime. sif. impl. internal. pipeline. localbindingthreadpool. getinstance ( ). getstatistics ( ). getpoolsize ( ) ) - tpsize ), 0, 0 )
[2]: org. junit. assert. asserttrue ( productdtos. isempty ( ) )
[3]: org. junit. assert. assertnotnull ( productdtos )
[4]: org. junit. assert. assertnull ( productdtos )

************

************
tgt: org . junit . assert . asserttrue ( ff4jconf . containskey ( "propstring" ) )
[0]: org. junit. assert. assertequals ( 0, productdtos. length )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, equalpredicate. evaluate ( user ) )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( accept )
[0]: org. junit. assert. assertequals ( 0, result )
[1]: org. junit. assert. assertequals ( """", result )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. assertequals ( keys, lister2. getkeys ( null ) )
[4]: org. junit. assert. assertnotnull ( lister2. getkeys ( null ) )

************

************
tgt: org . junit . assert . assertequals ( latency , org . hawkular . apm . server . processor . communicationdetails . communicationdetailsderiver . calculatelatency ( si , item , consumer ) )
[0]: org. junit. assert. assertequals ( keys, lister2. getkeys ( lister ) )
[1]: org. junit. assert. assertequals ( keys, lister2 )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, ldapusergroupprovider. getgroups ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, ldapusergroupprovider. getgroups ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( result . length ( ) ) < ( javacontent . length ( ) ) ) )
[0]: org. junit. assert. assertequals ( 2, ldapusergroupprovider. getgroups ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( get ( just. niubi. httprequest. httprequesttest. url ) )
[2]: org. junit. assert. assertnotnull ( get ( just. niubi. httprequest. httprequesttest. url ). bodyof 1 )
[3]: org. junit. assert. assertnotnull ( get ( just. niubi. httprequest. httprequesttest. url ). getid ( ) )
[4]: org. junit. assert. assertnotnull ( get ( just. niubi. httprequest. httprequesttest. url ). bodyofdocument ( ) )

************

************
tgt: org . junit . assert . assertequals ( remotedevice1 , found )
[0]: org. junit. assert. assertnotnull ( get ( just. niubi. httprequest. httprequesttest. url ). bodyofdata ( ) )
[1]: org. junit. assert. assertequals ( type1, type2. getrules ( ) )
[2]: org. junit. assert. assertequals ( type1, type2. getrules ( ). get ( type1 ) )
[3]: org. junit. assert. assertequals ( types1, type2. getrules ( ) )
[4]: org. junit. assert. assertequals ( type1, type2 )

************

************
tgt: org . junit . assert . assertequals ( 5 , interpreter . i )
[0]: org. junit. assert. assertequals ( type1, type2. getrules ( ). get ( 0 ) )
[1]: org. junit. assert. assertequals ( 0, classundertest ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, classundertest ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( classundertest ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( classundertest ( ). get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( "token<sp>2\n" , found )
[0]: org. junit. assert. assertequals ( 0, classundertest ( ). size ( ), 0 )
[1]: org. junit. assert. assertfalse ( mesostaskmanagerparameters. constraints ( ). isempty ( ) )
[2]: org. junit. assert. asserttrue ( mesostaskmanagerparameters. constraints ( ). isempty ( ) )
[3]: org. junit. assert. assertequals ( 0, mesostaskmanagerparameters. constraints ( ). length )
[4]: org. junit. assert. assertequals ( 0, mesostaskmanagerparameters. constraints ( ). size ( )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( libraryfile. getjavadocuri ( ) )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertequals ( string, result )
[1]: org. junit. assert. assertequals ( null, results )
[2]: org. junit. assert. asserttrue ( plugin. isfieldbindingvalid ( ) )
[3]: org. junit. assert. assertequals ( 1, size )
[4]: org. junit. assert. assertequals ( 0, size )

************

************
tgt: org . junit . assert . asserttrue ( violations . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1l, size )
[1]: org. junit. assert. assertequals ( 0l, size )
[2]: org. junit. assert. assertequals ( size, 1 )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), a )
[4]: org. junit. assert. assertequals ( 1, a. getid ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new int [ ] { 1 , 4 } , result )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), a )
[1]: org. junit. assert. assertequals ( java. util. optional. of ( a ), a )
[2]: org. junit. assert. assertnull ( wrapper. getartist ( ) )
[3]: org. junit. assert. assertnotnull ( wrapper. getartist ( ) )
[4]: org. junit. assert. assertequals ( null, wrapper. getartist ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , result )
[0]: getartist ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( fs. unlink ( 1 ) )
[3]: org. junit. assert. asserttrue ( fs. unlink ( obj ) )
[4]: org. junit. assert. asserttrue ( fs )

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: public void unlink ( ) { }
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, resp. getcontent ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, resp. getcontent ( ) )
[4]: org. junit. assert. assertequals ( resp, resp. getcontent ( ) )

************

************
tgt: org . junit . assert . assertnull ( actual )
[0]: org. junit. assert. assertequals ( string_1, resp. getcontent ( ) )
[1]: org. junit. assert. assertnotnull ( resp. getcontent ( ) )
[2]: org. junit. assert. asserttrue ( alphabet. checkvowelharmonya ( a, b ) )
[3]: org. junit. assert. asserttrue ( alphabet. checkvowelharmonya ( a, b [ i ] ) )
[4]: org. junit. assert. asserttrue ( alphabet. checkvowelharmonya ( a [ i ], b ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new javax . jcr . value [ ] { v , v } , properties . getproperty ( "relpath/prop" ) )
[0]: org. junit. assert. assertequals ( true, alphabet. checkvowelharmonya ( a [ i ], b ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected, returned )
[3]: org. junit. assert. assertsame ( expected, returned )
[4]: org. junit. assert. assertequals ( actual, returned )

************

************
tgt: org . junit . assert . assertthat ( edges , org . hamcrest . matchers . empty ( ) )
[0]: org. junit. assert. assertequals ( result, expected )
[1]: ) )
[2]: org. junit. assert. assertequals ( expectedopentsdbemitterconfig, expectedopentsdbemitterconfig )
[3]: org. junit. assert. asserttrue ( (! ( hasarrayindexoutofbounds. equals ( _after ) ) ) )
[4]: org. junit. assert. asserttrue ( (! ( getbranchafter. equals ( null ) ) ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. asserttrue ( deepafter. equals ( wimbefore ) )
[1]: org. junit. assert. asserttrue ( (! ( hasarrayindexoutofboundsexception ) ) )
[2]: org. junit. assert. asserttrue ( (! ( hasarrayindexoutofbounds. equals ( _before ) ) ) )
[3]: org. junit. assert. assertnotnull ( file )
[4]: org. junit. assert. assertequals ( 1, file. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( undertest . getcurrentphase ( ) , org . hamcrest . corematchers . is ( org . sonatype . nexus . extender . tasks ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( expected ), file )
[1]: org. junit. assert. assertequals ( 0, file. size ( ) )
[2]: org. junit. assert. assertequals ( 1, file. getcount ( ) )
[3]: org. junit. assert. assertnotnull ( org. apache. hadoop. http. lib. staticuserwebfilter. getusernamefromconf ( conf ) )
[4]: org. junit. assert. assertequals ( 1, org. apache. hadoop. http. lib. staticuserwebfilter. getusernamefromconf ( conf ). length )

************

************
tgt: org . junit . assert . assertequals ( expectedjson , genson . serialize ( dt ) )
[0]: org. junit. assert. assertnull ( org. apache. hadoop. http. lib. staticuserwebfilter. getusernamefromconf ( conf ) )
[1]: org. junit. assert. assertequals ( 0, org. apache. hadoop. http. lib. staticuserwebfilter. getusernamefromconf ( conf ). length )
[2]: ) )
[3]: org. junit. assert. assertfalse ( instance. isempty ( ) )
[4]: org. junit. assert. assertfalse ( org. openspotlight. common. util. assertions. accept ( state ) )

************

************
tgt: org . junit . assert . asserttrue ( internalcache . iscached ( rule ) )
[0]: org. junit. assert. assertfalse ( state. accept ( state ) )
[1]: org. junit. assert. assertfalse ( parser. accept ( state ) )
[2]: org. junit. assert. assertfalse ( handler. accept ( state ) )
[3]: org. junit. assert. assertfalse ( org. openspotlight. common. util. assertions. accepting ( state ) )
[4]: org. junit. assert. assertequals ( 1, dln. getlevelid ( 1 ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( options . getbytes ( ) , org . apache . directory . server . kerberos . shared . messages . value . kdcoptionstest . fprioptions ) )
[0]: org. junit. assert. assertequals ( 0, dln. getlevelid ( 1 ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, dln. getlevelid ( 0 ). size ( ) )
[2]: org. junit. assert. assertequals ( dln. getlevelid ( 1 ), dln. getlevelid ( 1 ) )
[3]: org. junit. assert. assertequals ( dln. getlevelid ( 1 ), dln. getlevelid ( 2 ) )
[4]: org. junit. assert. assertarrayequals ( null, secret )

************

************
tgt: org . junit . assert . assertequals ( noofelements , sum )
[0]: org. junit. assert. assertnotnull ( secret )
[1]: , secret )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnull ( context. controle ( context ) )

************

************
tgt: org . junit . assert . assertequals ( 1000 , bases )
[0]: org. junit. assert. assertnull ( context. controle ( context1 ) )
[1]: org. junit. assert. assertnull ( context. controle ( context2 ) )
[2]: org. junit. assert. assertequals ( controle ( context ), context. getmessage ( ) )
[3]: ) )
[4]: org. junit. assert. assertnull ( meldingen )

************

************
tgt: org . junit . assert . assertequals ( 1 , res . size ( ) )
[0]: org. junit. assert. assertfalse ( meldingen. isempty ( ) )
[1]: org. junit. assert. assertnull ( meldingen. size ( ) )
[2]: org. junit. assert. assertnull ( meldingen. isempty ( ) )
[3]: ) )
[4]: org. junit. assert. assertnull ( exception )

************

************
tgt: org . junit . assert . assertfalse ( ctx . getresult ( ) )
[0]: org. junit. assert. assertequals ( 0, resulta. compareto ( resultb ) )
[1]: org. junit. assert. assertequals ( 1, resulta. compareto ( resultb ) )
[2]: org. junit. assert. assertequals ( ( - 1 ), resulta. compareto ( resultb ) )
[3]: org. junit. assert. asserttrue ( ( ( resulta. compareto ( resultb ) ) == 0 ) )
[4]: org. junit. assert. asserttrue ( ( ( resulta. compareto ( resultb ) ) < 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( binaryoutput . exists ( ) )
[0]: org. junit. assert. assertequals ( 1, result. getnumelementsprocessed ( ) )
[1]: org. junit. assert. assertequals ( 0, result. getnumelementsprocessed ( ) )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( 3, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, com. sumzerotrading. ib. historical. historicaldatautils. buildbardatasizestring ( 1, lengthunit. hour ) )

************

************
tgt: org . junit . assert . assertfalse ( iter . hasnext ( ) )
[0]: org. junit. assert. assertequals ( 1, com. sumzerotrading. ib. historical. historicaldatautils. buildbardatasizestring ( 2, lengthunit. hour ) )
[1]: org. junit. assert. assertequals ( 1, com. sumzerotrading. ib. historical. historicaldatautils. buildbardatasizestring ( 0, lengthunit. hour ) )
[2]: org. junit. assert. assertequals ( 0, com. sumzerotrading. ib. historical. historicaldatautils. buildbardatasizestring ( 1, lengthunit. hour ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 50, testclient. getofflinepublishqueuebound ( ) )

************

************
tgt: org . junit . assert . assertequals ( mockedsecurityprovider , testconfig . getsecurityprovider ( ) )
[0]: org. junit. assert. assertequals ( 50, testclient. getofflinepublishqueuebound ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 50, testsclient. getofflinepublishqueuebound ( ) )
[2]: org. junit. assert. assertequals ( 50, testclient. getofflinepublishqueuebound ( ). count ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( timedelta, timedelta )

************

************
tgt: org . junit . assert . assertequals ( result . size ( ) , testcount )
[0]: org. junit. assert. assertequals ( timedelta, dest. getdestinationgeographicpoint ( ) )
[1]: org. junit. assert. assertequals ( 0, timedelta )
[2]: org. junit. assert. assertequals ( 0.0, timedelta )
[3]: org. junit. assert. assertequals ( timedelta, timedelta, 0 )
[4]: org. junit. assert. assertequals ( 1, vertexmap. getvertexlist ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( injectionpoint . getmember ( ) . getname ( ) , org . hamcrest . core . is . is ( "field" ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), vertexmap. getvertexlist ( ) )
[1]: org. junit. assert. assertequals ( 0, vertexmap. getvertexlist ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), vertexmap. getvertexlist ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), vertexmap. getvertexlist ( ). get ( 0 ) )
[4]: org. junit. assert. assertequals ( myentity, fromdb )

************

************
tgt: org . junit . assert . assertequals ( 1 , this . chartchangeevents . size ( ) )
[0]: org. junit. assert. assertnotnull ( fromdb )
[1]: org. junit. assert. assertequals ( myentity, todb )
[2]: org. junit. assert. assertnull ( fromdb )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, identity. getlevel ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( ( server != null ) )
[0]: org. junit. assert. assertequals ( 1, identity. getlevel ( ) )
[1]: org. junit. assert. assertequals ( 0, identity. getlevel ( ) )
[2]: org. junit. assert. assertequals ( 0, identity. getlevel ( ). length )
[3]: org. junit. assert. assertequals ( 1, identity. getlevel ( ). size ( )
[4]: org. junit. assert. assertequals ( 0, result )

************

************
tgt: org . junit . assert . assertequals ( vars . size ( ) , c . properties . size ( ) )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertequals ( 0l, result )
[2]: org. junit. assert. assertequals ( 1l, result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertequals ( t, expresult )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( expected ) )
[0]: org. junit. assert. assertnotnull ( expresult )
[1]: org. junit. assert. assertequals ( expectedjson, expansion )
[2]: org. junit. assert. assertequals ( expectedjson, objectmapper. writevalueasstring )
[3]: org. junit. assert. assertequals ( expectedjson, codesystem )
[4]: org. junit. assert. assertequals ( expectedjson, expandedjson )

************

************
tgt: org . junit . assert . assertnull ( ffilecontroller . getoutput ( ) )
[0]: expectedjson )
[1]: org. junit. assert. assertequals ( status. stopped, obj. getstringvalue ( ) )
[2]: org. junit. assert. assertequals ( status. interrupted, obj. getstringvalue ( ) )
[3]: org. junit. assert. assertequals ( obj. getstringvalue ( ), stopped. getstringvalue ( ) )
[4]: org. junit. assert. assertequals ( state. stopped, obj. getstringvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( reversefrom ( ) , to )
[0]: org. junit. assert. assertequals ( status, obj. getstringvalue ( ) )
[1]: org. junit. assert. assertequals ( 1, numberofrealtrees )
[2]: org. junit. assert. assertequals ( 1, numberofrealtrees )
[3]: org. junit. assert. assertequals ( 6, dataelementservice. query ( query ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, dataelementservice. query ( query ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, dataelementservice. query ( query ). size ( ) )
[1]: org. junit. assert. assertequals ( 2, dataelementservice. query ( query ). size ( ) )
[2]: org. junit. assert. assertequals ( 3, dataelementservice. query ( query ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. length ( ) )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . asserttrue ( expectedexceptionthrown )
[0]: org. junit. assert. assertequals ( ""test"", result )
[1]: org. junit. assert. assertequals ( ""test"", result )
[2]: org. junit. assert. assertequals ( ""foo"", result )
[3]: org. junit. assert. assertnotnull ( response )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertequals ( "query" , request . getsearchquery ( ) )
[0]: org. junit. assert. assertnotnull ( request )
[1]: org. junit. assert. assertnotnull ( result )
[2]: ) )
[3]: org. junit. assert. assertfalse ( org. openspotlight. graph. query. console. consolestate. accept ( state ) )
[4]: org. junit. assert. assertthat ( accept ( state ), org. hamcrest. core. is. is ( false ) )

************

************
tgt: org . junit . assert . assertsame ( org . apache . tiles . template . composestackutil . getcomposestack ( request ) , requestscope . get ( composestackutil . compose_stack_attribute_name ) )
[0]: org. junit. assert. assertfalse ( handler. accept ( state ) )
[1]: org. junit. assert. assertfalse ( parser. accept ( state ) )
[2]: org. junit. assert. assertthat ( handler. accept ( state ), org. hamcrest. corematchers. is ( false ) )
[3]: org. junit. assert. assertequals ( k, org. societies. security. policynegotiator. util. valuegenerator. generateuniqueint ( ) )
[4]: org. junit. assert. assertnotnull ( org. societies. security. policynegotiator. util. valuegenerator. generateuniqueint ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( sendcountbefore + 1 ) , com . kakao . hbase . common . util . alertsender . getsendcount ( ) )
[0]: org. junit. assert. assertequals ( 1, org. societies. security. policynegotiator. util. valuegenerator. generateuniqueint ( ) )
[1]: org. junit. assert. assertequals ( k, org. societies. security. policynegotiator. util. valuegenerator. generateuniqueint ( ). getid ( ) )
[2]: org. junit. assert. assertequals ( k, org. societies. security. policynegotiator. util. valuegenerator. generateuniqueint ( ). index ( ) )
[3]: org. junit. assert. assertequals ( elem, mergeelem )
[4]: org. junit. assert. assertnotnull ( mergeelem )

************

************
tgt: org . junit . assert . assertsame ( innode , result )
[0]: org. junit. assert. asserttrue ( programmes. hasnext ( ) )
[1]: org. junit. assert. assertequals ( true, programmes. hasnext ( ) )
[2]: org. junit. assert. assertnotnull ( site. login ( fkey, null, http ) )
[3]: org. junit. assert. assertnotnull ( site. login ( fkey, fkey, http ) )
[4]: org. junit. assert. assertnotnull ( site. login ( fkey, string_1, http ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . double ( ( - 1 ) ) , parameter . getvalue ( ) )
[0]: org. junit. assert. assertnotnull ( site )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0l, data. getdata ( ) )
[3]: org. junit. assert. assertnull ( data. getdata ( ) )
[4]: org. junit. assert. assertequals ( 0, data. getdata ( ). length )

************

************
tgt: org . junit . assert . assertnotnull ( array )
[0]: org. junit. assert. assertequals ( null, data. getdata ( ) )
[1]: org. junit. assert. assertnotnull ( data. getdata ( ) )
[2]: org. junit. assert. assertequals ( 0, g. getmaxrows ( ) )
[3]: org. junit. assert. assertequals ( 0, o. getmaxrows ( ) )
[4]: org. junit. assert. assertequals ( 0, transform. getmaxrows ( ) )

************

************
tgt: org . junit . assert . assertthat ( checkpoint . getcheckpoint ( shardid ) , org . hamcrest . matchers . equalto ( extendedsequencenumber ) )
[0]: org. junit. assert. assertequals ( 1, g. getmaxrows ( ) )
[1]: org. junit. assert. assertequals ( 0, this. context. getmaxrows ( ) )
[2]: org. junit. assert. assertequals ( 0, 1 )
[3]: org. junit. assert. assertequals ( 0, current. size ( ) )
[4]: org. junit. assert. assertequals ( 0, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( "com.example" , "com.another.example" ) , packages )
[0]: org. junit. assert. assertequals ( 0, a. length ( ) )
[1]: org. junit. assert. assertequals ( 0, a. length )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( expected ), result )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( expected ), result )

************

************
tgt: org . junit . assert . assertequals ( 1 , size ( results ) )
[0]: org. junit. assert. assertequals ( result, expected )
[1]: org. junit. assert. assertequals ( assertequals ( expected, result )
[2]: org. junit. assert. assertnotnull ( viewer. getlabelprovider ( ) )
[3]: org. junit. assert. assertequals ( true, report. haserror ( ) )
[4]: org. junit. assert. assertequals ( 1, list. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , result )
[0]: org. junit. assert. assertequals ( 0, list. size ( ) )
[1]: org. junit. assert. assertequals ( 3, list. size ( ) )
[2]: org. junit. assert. assertthat ( list. size ( ), org. hamcrest. matchers. is ( 1 ) )
[3]: org. junit. assert. assertequals ( 2, list. size ( ) )
[4]: org. junit. assert. asserttrue ( false )

************

************
tgt: org . junit . assert . assertnotnull ( informeproveedor . getid ( ) )
[0]: org. junit. assert. asserttrue ( true )
[1]: org. junit. assert. asserttrue ( exceptions. isempty ( ) )
[2]: org. junit. assert. assertnotnull ( context )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( found )

************

************
tgt: org . junit . assert . assertequals ( true , passed )
[0]: org. junit. assert. assertequals ( grammar, found )
[1]: org. junit. assert. assertnull ( found )
[2]: org. junit. assert. assertequals ( null, found )
[3]: org. junit. assert. assertequals ( grammar, found )
[4]: org. junit. assert. assertnotnull ( permissionprovider )

************

************
tgt: org . junit . assert . assertequals ( expected , actualquery )
[0]: org. junit. assert. assertnull ( permissionprovider )
[1]: org. junit. assert. assertnotnull ( permissionprovider. getinstance ( ) )
[2]: org. junit. assert. assertnull ( permissionprovider. getinstance ( ) )
[3]: org. junit. assert. assertnotnull ( permissionprovider. getinstance ( ). get ( ) )
[4]: org. junit. assert. assertequals ( httpservletresponse, o )

************

************
tgt: org . junit . assert . asserttrue ( ( ( psa . getlegend ( ) ) instanceof org . orbisgis . legend . thematic . proportional . proportionalpoint ) )
[0]: org. junit. assert. assertnotnull ( o )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. assertequals ( false, result )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( result, true )

************

************
tgt: org . junit . assert . asserttrue ( ( element instanceof org . vaadin . elements . registertest . nonexclusiveelement ) )
[0]: org. junit. assert. assertnotnull ( variablevalue )
[1]: org. junit. assert. assertequals ( result, callback. get ( ) )
[2]: org. junit. assert. assertsame ( result, callback )
[3]: org. junit. assert. assertequals ( result, callback. getclass ( ) )
[4]: org. junit. assert. assertequals ( result, callback )

************

************
tgt: org . junit . assert . assertequals ( 200 , response . getstatuscode ( ) )
[0]: org. junit. assert. assertnotnull ( callback )
[1]: org. junit. assert. assertequals ( expected, graph. gettokenlist ( ) )
[2]: org. junit. assert. assertequals ( expected, graph )
[3]: org. junit. assert. asserttrue ( graph. gettokenlist ( ). isempty ( ) )
[4]: org. junit. assert. asserttrue ( graph. gettokenlist ( ). equals ( expected ) )

************

************
tgt: org . junit . assert . assertfalse ( projectselector . isprojectidavailable ( null ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( a. equals ( b ) )
[2]: org. junit. assert. assertnotnull ( getlinesvisible ( ) )
[3]: org. junit. assert. assertnotnull ( item. getlinesvisible ( ) )
[4]: org. junit. assert. assertequals ( 0, event. getlinesvisible ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, o. getlinesvisible ( ) )
[1]: org. junit. assert. assertequals ( 0, event. getlinesvisible ( ). length )
[2]: org. junit. assert. assertfalse ( listvalue )
[3]: org. junit. assert. assertequals ( 1, map. entryset ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, map. entryset ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectesd , file . getfilepointer ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), map. entryset ( ) )
[1]: org. junit. assert. assertnotnull ( map. entryset ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( authzdepconf. get ( currentvar. getvar ( ) ), currentvar )
[4]: org. junit. assert. assertequals ( authzdepconf. get ( currentvar ), currentvar. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( parameterlistfirst , parameterlistsecond )
[0]: org. junit. assert. assertequals ( authzdepconf. get ( currentvar. getvar ( ) ), true )
[1]: org. junit. assert. assertequals ( authzdepconf. get ( currentvar. getvar ( ) ), actualvar )
[2]: org. junit. assert. assertequals ( authzdepconf. get ( currentvar ), currentvar )
[3]: org. junit. assert. assertequals ( dsb, dsd. getapprovaldataset ( ) )
[4]: org. junit. assert. assertequals ( dsa, dsd. getapprovaldataset ( ) )

************

************
tgt: org . junit . assert . assertthat ( hosts . size ( ) , org . hamcrest . corematchers . equalto ( 3 ) )
[0]: org. junit. assert. assertequals ( dsb, dea. getapprovaldataset ( ) )
[1]: org. junit. assert. assertequals ( dsa. getapprovaldataset ( ), dea )
[2]: org. junit. assert. assertequals ( dsa, dea. getapprovaldataset ( ) )
[3]: org. junit. assert. assertnotnull ( authorization )
[4]: org. junit. assert. assertnotnull ( accesstoken )

************

************
tgt: org . junit . assert . assertequals ( 2 , ( 1 + 1 ) )
[0]: org. junit. assert. assertnotnull ( authorizations )
[1]: org. junit. assert. assertequals ( authorization, authorization )
[2]: ) )
[3]: org. junit. assert. assertequals ( result, filterresult. getvalue ( ) )
[4]: org. junit. assert. assertequals ( result. getvalue ( ), filterresult. getvalue ( ) )

************

************
tgt: org . junit . assert . asserttrue ( hu . advancedweb . scott . runtime . track . stateregistry . getlocalvariablestates ( ) . isempty ( ) )
[0]: org. junit. assert. assertsame ( result, filterresult. getvalue ( ) )
[1]: org. junit. assert. assertnotnull ( filterresult. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 1, filterresult. getvalue ( ). size ( ) )
[3]: org. junit. assert. assertequals ( chats. size ( ), chatids. size ( ) )
[4]: org. junit. assert. assertequals ( xmpps. size ( ), chatids. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( java . lang . boolean ) ( result ) ) )
[0]: org. junit. assert. assertequals ( chats. size ( ), chatids. size ( ) )
[1]: org. junit. assert. assertequals ( chat. size ( ), chatids. size ( ) )
[2]: org. junit. assert. assertequals ( chats. size ( ), chatids. size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. getbidder ( ). size ( ) )
[4]: org. junit. assert. assertequals ( p3, result. getbidder ( ) )

************

************
tgt: org . junit . assert . assertnull ( facet )
[0]: org. junit. assert. assertequals ( 0, result. getbidder ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 3, result. getbidder ( ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, ew. setmaxescutoff ( 0.4 ) )
[4]: org. junit. assert. assertequals ( null, ew. setmaxescutoff ( 0.4 ) )

************

************
tgt: org . junit . assert . asserttrue ( e . iscancelled ( ) )
[0]: org. junit. assert. assertequals ( 0, ew. setmaxescutoff ( 0.4 ) )
[1]: org. junit. assert. assertequals ( java. util. optional. empty ( ), ew )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), ew )
[3]: org. junit. assert. assertnull ( llcup. getmapparameters ( ) )
[4]: org. junit. assert. assertnotnull ( llcup. getmapparameters ( ) )

************

************
tgt: org . junit . assert . assertequals ( view . getbundles ( ) . size ( ) , 20 )
[0]: org. junit. assert. assertequals ( 0, llcup. getmapparameters ( ). length )
[1]: org. junit. assert. asserttrue ( llcup. getmapparameters ( ). isempty ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( org. joda. money. testbigmoney. gbp_2_34, test )
[4]: org. junit. assert. assertthat ( config1. activeinterfaces ( ), org. hamcrest. matchers. equalto ( notignored2 ) )

************

************
tgt: org . junit . assert . assertthat ( java . lang . string . valueof ( model . getvalue ( ( row + 1 ) , col ) ) , org . hamcrest . matchers . is ( expected [ row ] [ col ] ) )
[0]: org. junit. assert. assertthat ( config1. activeinterfaces ( ), org. hamcrest. matchers. equalto ( notignored3 ) )
[1]: org. junit. assert. assertthat ( config1. activeinterfaces ( ), org. hamcrest. matchers. contains ( notignored2 ) )
[2]: org. junit. assert. assertthat ( configuration1. activeinterfaces ( ), org. hamcrest. matchers. equalto ( notignored2 ) )
[3]: org. junit. assert. assertthat ( config1, org. hamcrest. matchers. equalto ( notignored2 ) )
[4]: org. junit. assert. assertequals ( str, compresseddata )

************

************
tgt: org . junit . assert . assertequals ( clocale , org . cloudfoundry . autoscaler . api . util . localeutil . getlocale ( request ) )
[0]: org. junit. assert. assertequals ( str, contenttype )
[1]: org. junit. assert. assertequals ( str, null )
[2]: , str )
[3]: ) )
[4]: org. junit. assert. assertequals ( cause, response )

************

************
tgt: org . junit . assert . asserttrue ( org . csstudio . alarm . beast . notifier . workqueueunittest . actionmap . get ( 0 ) )
[0]: org. junit. assert. assertequals ( cause, response. getmessage ( ) )
[1]: org. junit. assert. assertnull ( newstate )
[2]: org. junit. assert. assertequals ( flowstate. finished, newstate )
[3]: org. junit. assert. assertnotnull ( newstate )
[4]: , newstate )

************

************
tgt: org . junit . assert . assertequals ( "mysubscriptions_url" , result )
[0]: ) )
[1]: org. junit. assert. assertthat ( tenantidprovider. parameters. size ( ), org. hamcrest. corematchers. is ( 2 ) )
[2]: org. junit. assert. assertthat ( tenantidprovider. parameters. size ( ), org. hamcrest. corematchers. is ( 0 ) )
[3]: org. junit. assert. assertthat ( tenantidprovider. parameters. size ( ), org. hamcrest. corematchers. is ( 3 ) )
[4]: org. junit. assert. assertthat ( helper, isnotificationenabled ( ) )

************

************
tgt: org . junit . assert . assertsame ( injected1 , injected2 )
[0]: org. junit. assert. assertnotnull ( helper. isnotificationenabled ( ) )
[1]: org. junit. assert. assertthat ( helper. isnotificationenabled ( ), org )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, pojo. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( verify )
[0]: org. junit. assert. assertequals ( 0, pojo. size ( ) )
[1]: org. junit. assert. asserttrue ( pojo. isempty ( ) )
[2]: org. junit. assert. assertequals ( 2, pojo. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( dao. get ( r ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( resultsq ) == null ) )
[0]: org. junit. assert. assertequals ( dummyresource, testresource )
[1]: org. junit. assert. assertnotnull ( testresource )
[2]: org. junit. assert. assertsame ( dummyresource, testresource )
[3]: org. junit. assert. assertequals ( dummyresource, testsresource )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( expected , objectmapper . writevalueasstring ( conceptproperty ) )
[0]: org. junit. assert. assertthat ( storage. readactivestate ( com. spotify. styx. storage. datastorestoragetest. workflow_instance1 ), org. hamcrest. matchers. is ( java. util. optional. empty ( ) ) )
[1]: org. junit. assert. assertthat ( readactivestate ( com. spotify. styx. storage. datastorestoragetest. workflow_instance1 ), org. hamcrest. matchers. is ( java. util. optional. empty ( ) ) )
[2]: org. junit. assert. assertthat ( storage. readactivestate ( com. spotify. styx. storage. datastorestoragetest. workflow_instance1 ), org. hamcrest. corematchers. is ( java. util. optional. empty ( ) ) )
[3]: org. junit. assert. assertthat ( storage. readactivestate ( com. spotify. styx. storage. datastorestoragetest. workflow_instance1 ), org. hamcrest. matchers. is ( java. util. optional. empty ( ) ) ) ;
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( value . contains ( "cas" ) )
[0]: org. junit. assert. assertequals ( 1, d. parameters ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, d. parameters ( ). length )
[2]: org. junit. assert. assertequals ( 0, d. parameters ( ). length )
[3]: org. junit. assert. assertnull ( middleware. getsession ( ) )
[4]: org. junit. assert. assertnotnull ( collection )

************

************
tgt: org . junit . assert . assertnotnull ( cause . getpkp ( ) )
[0]: org. junit. assert. assertnotnull ( context )
[1]: org. junit. assert. assertequals ( 1, 1 )
[2]: org. junit. assert. assertnotnull ( collection. collection ( ) )
[3]: org. junit. assert. assertnotnull ( container )
[4]: org. junit. assert. assertnotnull ( event )

************

************
tgt: org . junit . assert . assertequals ( 10 , routestate . get ( 0 ) )
[0]: org. junit. assert. assertequals ( 1, event. child. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. optional. empty ( ), event )
[2]: org. junit. assert. assertequals ( 1, event. child. s )
[3]: org. junit. assert. assertequals ( null, event )
[4]: org. junit. assert. assertequals ( 1, count )

************

************
tgt: org . junit . assert . assertequals ( 2 , count )
[0]: org. junit. assert. assertequals ( ( numcollections + 1 ), count )
[1]: org. junit. assert. assertequals ( ( numcollections * 1 ), count )
[2]: org. junit. assert. assertthat ( count, greaterthan ( 1 ) )
[3]: , count )
[4]: org. junit. assert. assertequals ( expectedstagedir, stagedir. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . string ( read ) , datastring )
[0]: org. junit. assert. assertequals ( expectedstagedir. tostring ( ), stagedir. tostring ( ) )
[1]: org. junit. assert. assertequals ( expectedstagedir, stagedir. tostring ( ). trim ( ) )
[2]: org. junit. assert. assertequals ( expectstagedir, stagedir. tostring ( ) )
[3]: org. junit. assert. assertequals ( expectedstagedir, stagedir. tostring ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( 1, obj. getcharcontent ( true ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( figures . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, sink. getcharcontent ( true ). size ( ) )
[1]: org. junit. assert. assertnotnull ( getcharcontent ( true ) )
[2]: org. junit. assert. assertequals ( 1, writer. getcharcontent ( true ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, writer. getcharcontent ( true ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, count )

************

************
tgt: org . junit . assert . assertnotnull ( detector )
[0]: org. junit. assert. assertequals ( 0, count )
[1]: org. junit. assert. assertequals ( 3, count )
[2]: org. junit. assert. assertequals ( ( count + 1 ), count )
[3]: org. junit. assert. assertequals ( ( count + 1 ), size )
[4]: org. junit. assert. assertequals ( expecting )

************

************
tgt: org . junit . assert . assertfalse ( helper . hasassets ( pkg ) )
[0]: org. junit. assertequals. expecting, found )
[1]: assertequals assertequals expecting, found )
[2]: , found )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( concatenator )

************

************
tgt: org . junit . assert . assertthat ( loadedcontributor . getname ( ) , org . hamcrest . matchers . equalto ( "kim" ) )
[0]: org. junit. assert. assertnotnull ( concatenator. newinstance ( ) )
[1]: org. junit. assert. assertnotnull ( concatenator. next ( ) )
[2]: org. junit. assert. assertnotnull ( concatenator. get ( ) )
[3]: org. junit. assert. assertnotnull ( concatenator. data )
[4]: org. junit. assert. assertequals ( 0, like. evaluate ( null ) )

************

************
tgt: org . junit . assert . assertequals ( 6 , expressiestrings . size ( ) )
[0]: org. junit. assert. assertnull ( like. evaluate ( null ) )
[1]: org. junit. assert. assertequals ( null, like. evaluate ( null ) )
[2]: org. junit. assert. assertequals ( 0, like. evaluate ( node ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( result. contains ( format ( rv ) ) )

************

************
tgt: org . junit . assert . assertnotnull ( fieldpopulator )
[0]: org. junit. assert. asserttrue ( result. contains ( str ) )
[1]: org. junit. assert. asserttrue ( result. contains ( string ) )
[2]: org. junit. assert. asserttrue ( result. contains ( ""test"" ) )
[3]: org. junit. assert. asserttrue ( result. contains ( testtest. pattern ) )
[4]: org. junit. assert. assertequals ( true, started. cancel ( true ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. asserttrue ( started. cancel ( true ) )
[1]: org. junit. assert. assertequals ( 1, started. cancel ( true ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class, started. cancel ( true ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, errors. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedrewritedhost , actualvalue )
[0]: org. junit. assert. asserttrue ( errors. isempty ( ) )
[1]: org. junit. assert. assertnotnull ( errors )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, server1. bounce_long ( 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( bytes )
[0]: org. junit. assert. assertequals ( 1, server1. bounce_long ( 0 ) )
[1]: org. junit. assert. assertequals ( 0, server1. bounce_long ( 1 ) )
[2]: org. junit. assert. assertnotnull ( server1. bounce_long ( 1 ) )
[3]: org. junit. assert. assertequals ( 1, server1. bounce_long ( 1 ). length )
[4]: org. junit. assert. assertthat ( getrevision ( source, a ), org. hamcrest. matchers. is ( revision ) )

************

************
tgt: org . junit . assert . assertthat ( geooperations . remove ( key , member1 ) , org . hamcrest . core . is . is ( 1l ) )
[0]: org. junit. assert. assertthat ( getrevision ( revision, null ), org. hamcrest. matchers. is ( revision ) )
[1]: org. junit. assert. assertthat ( getrevision ( source, null ), org. hamcrest. matchers. is ( revision ) )
[2]: org. junit. assert. assertnotnull ( getrevision ( a, null ) )
[3]: org. junit. assert. assertthat ( getrevision ( source, a ), contains ( revision ) )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertthat ( hellomsg , org . hamcrest . matchers . equalto ( "hello<sp>world!" ) )
[0]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[1]: org. junit. assert. assertnotnull ( err )
[2]: org. junit. assert. assertnotnull ( exception )
[3]: ) )
[4]: org. junit. assert. assertthat ( unpaidsaving2, org. hamcrest. corematchers. is ( dateofdeposit ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertthat ( unpaidsaving2, org. hamcrest. corematchers. is ( unpaidsaving2 ) )
[1]: org. junit. assert. assertthat ( unpaidsaving2, org. hamcrest. corematchers. is ( result ) )
[2]: org. junit. assert. assertthat ( unpaidsaving2 )
[3]: org. junit. assert. assertthat ( unpaidsaving2, org. hamcrest. corematchers. is ( dateofdeposits ) )
[4]: org. junit. assert. assertequals ( dedatarecordcollections. tostring ( ), 0, dedatarecordcollections. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, templateconfiguration. size ( ) )
[1]: org. junit. assert. assertequals ( 1, templateconfiguration. getid ( ) )
[2]: org. junit. assert. assertequals ( 1, templateconfiguration. getcount ( ) )
[3]: org. junit. assert. assertequals ( 1, templateconfiguration. count ( ) )
[4]: org. junit. assert. assertequals ( 1, templateconfiguration. length )

************

************
tgt: org . junit . assert . asserttrue ( dependency . isdependencyenabled ( ) )
[0]: org. junit. assert. assertnotnull ( name )
[1]: org. junit. assert. assertequals ( abc, name )
[2]: org. junit. assert. assertequals ( name, abc )
[3]: org. junit. assert. assertequals ( string, name )
[4]: org. junit. assert. assertnull ( name )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( true, ishurricaneseason )
[1]: org. junit. assert. assertequals ( 1, ishurricaneseason )
[2]: org. junit. assert. assertequals ( null, ishurricaneseason )
[3]: org. junit. assert. assertequals ( java. lang. boolean. valueof ( true ), ishurricaneseason )
[4]: org. junit. assert. assertequals ( false, ishurricaneseason )

************

************
tgt: org . junit . assert . assertequals ( presenter . getselectedtype ( ) , org . dashbuilder . displayer . client . widgets . barchart )
[0]: org. junit. assert. assertequals ( obj, e )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), scheduleversionstore. getcluster ( channel ). getid ( ) )
[2]: org. junit. assert. assertequals ( java. util. optional. of ( scheduleday ), scheduleversionstore. valueof ( scheduleday ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), scheduleversionstore. get ( channel, scheduleday ). get ( ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), scheduleversionstore. getcluster ( channel ). tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( result == null ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), scheduleversionstore. get ( channel, scheduleday ) )
[1]: org. junit. assert. assertnotnull ( runner. getstartcolumn ( ) )
[2]: org. junit. assert. assertnotnull ( root. getstartcolumn ( ) )
[3]: org. junit. assert. assertnotnull ( exception. getstartcolumn ( ) )
[4]: org. junit. assert. assertnotnull ( dao. getstartcolumn ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , options . size ( ) )
[0]: org. junit. assert. assertequals ( 1, runner. getstartcolumn ( ) )
[1]: org. junit. assert. assertequals ( expecteddir, confstagedir. tostring ( ) )
[2]: org. junit. assert. assertequals ( new java. lang. string ( expecteddir ), confstagedir. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. format ( expecteddir ), confstagedir. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( expecteddir ), confstagedir. tostring ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 2 }, content )
[2]: org. junit. assert. assertarrayequals ( new byte [ ] { 1 }, content )
[3]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 3 }, content )
[4]: org. junit. assert. assertnull ( content )

************

************
tgt: org . junit . assert . assertequals ( 10 , cheddar . getprice ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, qt. get ( ) )
[2]: org. junit. assert. assertequals ( 0, qt. get ( ) )
[3]: org. junit. assert. assertequals ( 1, qt. count )
[4]: , qt )

************

************
tgt: org . junit . assert . asserttrue ( kbcomments . isempty ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( eventtype. create, eventtype )
[2]: org. junit. assert. assertequals ( eventtype. delete, eventtype )
[3]: org. junit. assert. assertequals ( eventtype. created, eventtype )
[4]: org. junit. assert. assertequals ( eventtype. existing, eventtype )

************

************
tgt: org . junit . assert . assertequals ( intlists . mutable . with ( 3 , 2 , 1 ) , list )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( cjc )
[2]: org. junit. assert. assertnotnull ( cjc. errors )
[3]: org. junit. assert. assertnotnull ( cjc. error )
[4]: org. junit. assert. assertnotnull ( cjc. repository )

************

************
tgt: org . junit . assert . assertequals ( 1 , a [ 0 ] )
[0]: org. junit. assert. assertnotnull ( cjc. context )
[1]: org. junit. assert. asserttrue ( enable )
[2]: org. junit. assert. assertnotnull ( atestservice. validatestructure ( ) )
[3]: org. junit. assert. assertequals ( atestservice. validatestructure ( ), 1 )
[4]: org. junit. assert. assertequals ( 1, atestservice. validatestructure ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , order . getprice ( ) )
[0]: org. junit. assert. assertequals ( atestservice. validatestructure ( ). size ( ), 1 )
[1]: org. junit. assert. assertequals ( 0, atestservice. validatestructure ( ). size ( ) )
[2]: org. junit. assert. assertnull ( converter. getwordwrap ( ) )
[3]: org. junit. assert. assertequals ( null, "<. getwordwrap ( ) )
[4]: org. junit. assert. assertequals ( 0, "<. getwordwrap ( ) )

************

************
tgt: org . junit . assert . assertequals ( expect , depth )
[0]: org. junit. assert. assertnull ( "<. getwordwrap ( ) )
[1]: org. junit. assert. assertequals ( 0, "<. getwordwrap ( ). length )
[2]: org. junit. assert. assertequals ( r1, sol. getroutes ( ) )
[3]: org. junit. assert. assertequals ( r1, sol. getroutes ( ). get ( 0 ) )
[4]: org. junit. assert. assertequals ( r1. getroutes ( ), sol. getroutes ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( microserviceinstanceresponse . getinstance ( ) )
[0]: org. junit. assert. asserttrue ( sol. getroutes ( ). contains ( r1 ) )
[1]: org. junit. assert. assertequals ( r1, solution. getroutes ( ) )
[2]: org. junit. assert. assertnotnull ( j2w. getstdout ( ) )
[3]: org. junit. assert. assertequals ( 1, images. size ( ) )
[4]: org. junit. assert. assertnotnull ( images )

************

************
tgt: org . junit . assert . assertequals ( batchwritesize , size )
[0]: org. junit. assert. assertequals ( 0, images. size ( ) )
[1]: org. junit. assert. assertequals ( 3, images. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, source. processelement ( source ) )
[4]: org. junit. assert. assertequals ( 1, source. processelement ( source ). length )

************

************
tgt: org . junit . assert . assertthat ( rollup . isfreshenough ( ) , org . hamcrest . matchers . is ( true ) )
[0]: org. junit. assert. assertequals ( 1, source. processelement ( source ). count )
[1]: org. junit. assert. assertequals ( 1, source. processelement ( source ). count ( )
[2]: org. junit. assert. assertequals ( 1, source. processelement ( source ). size ( )
[3]: org. junit. assert. assertequals ( sql, expectedsql )
[4]: org. junit. assert. assertequals ( expectedsql, sql )

************

************
tgt: org . junit . assert . assertnotnull ( e )
[0]: org. junit. assert. assertnotnull ( sql )
[1]: org. junit. assert. assertequals ( null, sql )
[2]: org. junit. assert. assertnull ( sql )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( 0, result. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( entityuseroperator )
[0]: org. junit. assert. assertequals ( 3, result. size ( ) )
[1]: org. junit. assert. assertnull ( p )
[2]: org. junit. assert. assertthat ( actual. executeupdate ( new java. lang. string [ ] { 10 } ), org. hamcrest. corematchers. is ( 10 ) )
[3]: org. junit. assert. assertthat ( actual. executeupdate ( new java. lang. string [ ] { } ), org. hamcrest. corematchers. is ( 10 ) )
[4]: org. junit. assert. assertthat ( actual. executeupdate ( new java. lang. string [ ] { 10 } ), org. hamcrest. corematchers. is ( 10 } ) )

************

************
tgt: org . junit . assert . assertthat ( org . batfish . common . util . batfishobjectmapper . clone ( sr , org . batfish . datamodel . staticroute . class ) , org . hamcrest . matchers . equalto ( sr ) )
[0]: org. junit. assert. assertthat ( actual. executeupdate ( new java. lang. string [ ] { 10 } ), org. hamcrest. corematchers. is ( 10 } )
[1]: org. junit. assert. assertthat ( actual. executeupdate ( new java. lang. string [ ] { 10 } ), org. hamcrest. corematchers. is ( 10 ) ) ;
[2]: org. junit. assert. assertequals ( contentlengthstrategy, lenstrategy. determinelength ( message ) )
[3]: org. junit. assert. assertnotnull ( lenstrategy. determinelength ( message ) )
[4]: org. junit. assert. assertequals ( contentlengthstrategy. determinelength ( message ), lenstrategy )

************

************
tgt: org . junit . assert . assertthat ( child . getparent ( ) , org . hamcrest . corematchers . equalto ( taskgroup ) )
[0]: org. junit. assert. assertequals ( contentlengthstrategy. undefined, lenstrategy )
[1]: org. junit. assert. assertnotnull ( lenstrategy )
[2]: org. junit. assert. assertnotnull ( diff )
[3]: org. junit. assert. assertequals ( first, second )
[4]: org. junit. assert. assertequals ( n, readbiginteger ( ) )

************

************
tgt: org . junit . assert . assertequals ( javax . el . testbeanelresolver . bean_name , result )
[0]: org. junit. assert. assertequals ( n, reader. readbiginteger ( ) )
[1]: org. junit. assert. assertequals ( n, java. math. biginteger. readbiginteger ( ) )
[2]: org. junit. assert. assertequals ( n, new java. math. biginteger ( reader. readbiginteger ( ) ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( expected. equals ( result ) )

************

************
tgt: org . junit . assert . asserttrue ( ( testmodelview instanceof org . eurekastreams . commons . search . modelview . mymodelview ) )
[0]: org. junit. assert. assertnotnull ( d )
[1]: org. junit. assert. assertequals ( 1, d. s )
[2]: org. junit. assert. assertnotnull ( d. collection )
[3]: org. junit. assert. assertnotnull ( d. s )
[4]: )

************

************
tgt: org . junit . assert . assertfalse ( reader . isclosed ( ) )
[0]: org. junit. assert. assertequals ( 0, toolitemmenu. getitems ( ). length )
[1]: org. junit. assert. assertequals ( 1, toolitemmenu. getitems ( ). length )
[2]: org. junit. assert. assertequals ( 1, toolitemmenu. getitems ( ). size ( )
[3]: org. junit. assert. assertequals ( 0, toolitemmenu. getitems ( ). size ( )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "b" , r )
[0]: org. junit. assert. assertnotnull ( exp. getmessage ( ) )
[1]: org. junit. assert. assertnull ( exp. getmessage ( ) )
[2]: org. junit. assert. assertequals ( exp. getmessage ( ), null )
[3]: org. junit. assert. assertequals ( exp. getmessage ( ), statusline )
[4]: org. junit. assert. assertequals ( exp. getmessage ( ), false )

************

************
tgt: org . junit . assert . assertthat ( e )
[0]: org. junit. assert. assertfalse ( exceptionoccurred )
[1]: org. junit. assert. assertequals ( true, exceptionoccurred )
[2]: org. junit. assert. assertnotnull ( retrievedaccount. getid ( ) )
[3]: org. junit. assert. assertequals ( org. billforward. model. account. getid ( ), retrievedaccount. getid ( ) )
[4]: org. junit. assert. assertequals ( null, retrievedaccount. getid ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ctx . includespropertiesof ( expectedctx ) )
[0]: org. junit. assert. assertequals ( "f15490b2-1a16a66b619f, retrievedaccount. getid ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, obj. getid ( ) )
[3]: org. junit. assert. assertnotnull ( obj. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( obj. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( result , builder . tostring ( ) )
[0]: org. junit. assert. assertnotnull ( obj. s )
[1]: org. junit. assert. assertnotnull ( obj. getid ( ) )
[2]: org. junit. assert. assertequals ( product, service. getconfiguratorurl ( ) )
[3]: org. junit. assert. assertequals ( 1, service. getconfiguratorurl ( ). size ( ) )
[4]: org. junit. assert. assertequals ( product. getconfiguratorurl ( ), service )

************

************
tgt: org . junit . assert . assertnull ( output )
[0]: org. junit. assert. assertnotnull ( service. getconfiguratorurl ( ) )
[1]: org. junit. assert. assertequals ( 1, service. getconfiguratorurl ( ). length )
[2]: org. junit. assert. assertequals ( 1, errors. size ( ) )
[3]: org. junit. assert. assertequals ( 1, violations. size ( ) )
[4]: org. junit. assert. assertnull ( tested. getlocationexecutor ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( entities . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertnotnull ( getone ( spancache, span. getid ( ) ) )
[1]: org. junit. assert. assertequals ( span, getone ( spancache, spanid2 ) )
[2]: org. junit. assert. assertnull ( getone ( spancache, span. getid ( ) ) )
[3]: org. junit. assert. assertnotnull ( getone ( spancache, spanid2 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "lhs.rhs" , ref . tostring ( ) )
[0]: org. junit. assert. assertequals ( com. google. gwtmockito. gwtmockitorunnerlesstest. anotherinterface. dosomethingelse ( ), result. dosomethingelse ( ) )
[1]: org. junit. assert. assertequals ( com. google. gwtmockito. gwtmockitorunnerlesstest. anyinterface. class, result. dosomethingelse ( ). getclass ( ) )
[2]: org. junit. assert. assertequals ( com. google. gwtmockito. gwtmockitorunnerlesstest. otherinterface. class, result. dosomethingelse ( ) )
[3]: org. junit. assert. assertequals ( com. google. gwtmockito. gwtmockitorunnerlesstest. otherinterface. class, result. dosomethingelse ( ). getclass ( ) )
[4]: org. junit. assert. assertnotnull ( result. dosomethingelse ( ) )

************

************
tgt: org . junit . assert . assertfalse ( resultaat )
[0]: org. junit. assert. assertequals ( conf. getclassloader ( ), other. getclassloader ( ) )
[1]: org. junit. assert. assertequals ( conf, other. getclassloader ( ) )
[2]: org. junit. assert. assertnotnull ( other. getclassloader ( ) )
[3]: org. junit. assert. assertequals ( conf. getclassloader ( ), other. getclassloader ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , userlogins . size ( ) )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertequals ( template, prod. getconfiguratorurl ( ) )
[2]: org. junit. assert. assertequals ( template, product. getconfiguratorurl ( ) )
[3]: org. junit. assert. assertequals ( template, dr. getconfiguratorurl ( ) )
[4]: org. junit. assert. assertequals ( template, voservice. getconfiguratorurl ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( publickey )
[0]: org. junit. assert. assertequals ( template. getconfiguratorurl ( ), voservice )
[1]: org. junit. assert. assertfalse ( done )
[2]: org. junit. assert. assertequals ( true, done )
[3]: org. junit. assert. assertthat ( onconnectionchangedaddedpre ( msg ), org. hamcrest. corematchers. is ( true ) )
[4]: org. junit. assert. assertthat ( onconnectionchangedaddedpre ( msg ), org. hamcrest. corematchers. is ( false ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . numfindings ( ) )
[0]: org. junit. assert. assertthat ( onconnectionchangedaddedpre ( msg ), org. hamcrest. core. is. is ( true ) )
[1]: org. junit. assert. asserttrue ( onconnectionchangedaddedpre ( msg ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( false, parameter. isnamed ( ) )
[4]: org. junit. assert. assertequals ( true, parameter. isnamed ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( true ) )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. asserttrue ( false )
[2]: org. junit. assert. assertequals ( false, false )
[3]: org. junit. assert. assertequals ( 0, e. status )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( true , found )
[0]: org. junit. assert. assertequals ( 1, t. gettradeaverage ( ) )
[1]: org. junit. assert. assertequals ( 3, t. gettradeaverage ( ) )
[2]: org. junit. assert. assertequals ( 5, t. gettradeaverage ( ) )
[3]: org. junit. assert. assertequals ( 0, t. gettradeaverage ( ) )
[4]: org. junit. assert. assertequals ( 6, t. gettradeaverage ( ) )

************

************
tgt: org . junit . assert . assertfalse ( cm . reportheartbeat ( new org . apache . flink . runtime . instance . instanceid ( ) ) )
[0]: org. junit. assert. assertequals ( 1, afslist. size ( ) )
[1]: org. junit. assert. assertequals ( 0, afslist. size ( ) )
[2]: org. junit. assert. assertequals ( 3, afslist. size ( ) )
[3]: org. junit. assert. assertnotnull ( afslist )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( element . getelements ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, list. gettotalcount ( ) )
[1]: org. junit. assert. assertequals ( 0, list. gettotalcount ( ) )
[2]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), result )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 7 ), result )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 2 ), result )

************

************
tgt: org . junit . assert . assertequals ( response . getcode ( ) , 200 )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 0 ), result )
[1]: org. junit. assert. assertequals ( int. class, result )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 0 ), result )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( 0 ), result )
[4]: org. junit. assert. assertequals ( java. lang. double. valueof ( 0 ), result )

************

************
tgt: org . junit . assert . assertequals ( object , db . get ( object . getid ( ) ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 16 ), result )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 0 ), result )
[2]: org. junit. assert. assertnull ( tree_empty )
[3]: org. junit. assert. assertnotnull ( tree_empty )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), list )

************

************
tgt: org . junit . assert . assertthat ( leftnode . getports ( ) , org . hamcrest . corematchers . is ( expectedportorderleftnode ) )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), list )
[1]: org. junit. assert. assertequals ( 1, list. size ( ) )
[2]: org. junit. assert. assertnotnull ( list )
[3]: ) )
[4]: org. junit. assert. assertthat ( actual, is ( equalto ( expected ) ) )

************

************
tgt: org . junit . assert . assertfalse ( range . contains ( null ) )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertthat ( actual, is ( is ( expected ) ) )
[2]: org. junit. assert. assertthat ( actual, is ( expected ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, nuoftype1vehicles )

************

************
tgt: org . junit . assert . assertequals ( "davis" , result )
[0]: org. junit. assert. assertequals ( 4, nuoftype1vehicles )
[1]: org. junit. assert. assertequals ( 0, actual. gethits ( ). gethits ( ). length )
[2]: org. junit. assert. assertequals ( 1, results. size ( ) )
[3]: org. junit. assert. assertequals ( 0, results. size ( ) )
[4]: org. junit. assert. assertequals ( 3, results. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( test . message , result . message )
[0]: org. junit. assert. assertequals ( 2, results. size ( ) )
[1]: . size ( ) )
[2]: org. junit. assert. assertequals ( 1, val. getsignatures ( ). size ( ) )
[3]: org. junit. assert. assertfalse ( result )
[4]: org. junit. assert. assertequals ( false, result )

************

************
tgt: org . junit . assert . asserttrue ( areallvalid )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. assertequals ( false, result )
[3]: org. junit. assert. assertequals ( 0, missingproperties. getmissingproperties ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( model )

************

************
tgt: org . junit . assert . assertnotnull ( logger )
[0]: org. junit. assert. assertnotnull ( model. size ( ) )
[1]: org. junit. assert. assertnotnull ( model. tostring ( ) )
[2]: org. junit. assert. assertnotnull ( tree )
[3]: org. junit. assert. assertnotnull ( model. list ( ) )
[4]: org. junit. assert. assertequals ( 1, ringset. getatomcontainercount ( ) )

************

************
tgt: org . junit . assert . assertequals ( "???" , record . get ( "e0" ) )
[0]: org. junit. assert. assertequals ( 1, execs. size ( ) )
[1]: org. junit. assert. assertequals ( 0, execs. size ( ) )
[2]: org. junit. assert. asserttrue ( ( ( execs. size ( ) ) == 1 ) )
[3]: org. junit. assert. assertnull ( queue. dequeue ( null ) )
[4]: org. junit. assert. assertequals ( null, queue. dequeue ( null ) )

************

************
tgt: org . junit . assert . assertequals ( expectedfilename , filename )
[0]: org. junit. assert. assertnotnull ( queue. dequeue ( null ) )
[1]: org. junit. assert. assertnull ( queue )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, t. foo ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, t. foo ( ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( tokenlist . size ( ) , 0 )
[0]: org. junit. assert. assertequals ( 1, t. foo ( ). length )
[1]: org. junit. assert. assertequals ( 1, joinedsplits )
[2]: org. junit. assert. assertequals ( 0, joinedsplits )
[3]: org. junit. assert. assertequals ( 2, joinedsplits )
[4]: org. junit. assert. assertequals ( one, joinedsplits )

************

************
tgt: org . junit . assert . asserttrue ( ( ( cmdlets . size ( ) ) == 1 ) )
[0]: org. junit. assert. assertequals ( zero, joinedsplits )
[1]: org. junit. assert. asserttrue ( listenedlist. contains ( info. file ) )
[2]: org. junit. assert. asserttrue ( listenedlist. contains ( info ) )
[3]: org. junit. assert. asserttrue ( listenedlist. contains ( java. util. arrays. aslist ( ) ) )
[4]: org. junit. assert. asserttrue ( listenedlist. contains ( msg ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: ) )
[1]: org. junit. assert. assertthat ( element. getattribute ( ""value"" ), org. hamcrest. matchers. is ( ""value"" ) )
[2]: org. junit. assert. assertthat ( element. getattribute ( ""value"" ), org. hamcrest. matchers. is ( ""test"" ) )
[3]: org. junit. assert. assertthat ( element. getattribute ( 0 ), org. hamcrest. matchers. is ( pages. unescapedage ) )
[4]: org. junit. assert. assertthat ( element. getattribute ( ""value"" ), org. hamcrest. matchers. is ( """" ) )

************

************
tgt: org . junit . assert . assertequals ( count1 , count2 )
[0]: org. junit. assert. assertthat ( element. getattribute ( ""value"" ), org. hamcrest. matchers. is ( ""name"" ) )
[1]: org. junit. assert. assertnotnull ( builder. tostring ( ) )
[2]: org. junit. assert. assertequals ( null, builder. tostring ( ) )
[3]: org. junit. assert. assertnull ( builder. tostring ( ) )
[4]: org. junit. assert. assertequals ( 0, builder. tostring ( ). length )

************

************
tgt: org . junit . assert . assertequals ( "" , 2 , rs )
[0]: org. junit. assert. assertequals ( 0, builder. tostring ( ). length ( )
[1]: org. junit. assert. assertequals ( emptylist ( ), nesteditems )
[2]: org. junit. assert. assertequals ( 1, nesteditems. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), nesteditems )
[4]: org. junit. assert. assertequals ( 0, nesteditems. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , output . tostring ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), nesteditems )
[1]: org. junit. assert. assertequals ( addr, value. read ( ) )
[2]: org. junit. assert. assertnull ( value. read ( ) )
[3]: org. junit. assert. assertequals ( 3, keys. count ( ) )
[4]: org. junit. assert. assertequals ( 1, keys. count ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , findid ( index , 51.2 , 9.4 ) )
[0]: org. junit. assert. assertequals ( 2, keys. count ( ) )
[1]: org. junit. assert. assertequals ( 0, keys. count ( ) )
[2]: org. junit. assert. assertequals ( 5, keys. count ( ) )
[3]: org. junit. assert. assertnotnull ( build )
[4]: org. junit. assert. assertequals ( null, build )

************

************
tgt: org . junit . assert . assertequals ( "application2.properties" , bootconf )
[0]: org. junit. assert. assertnull ( build )
[1]: org. junit. assert. assertequals ( null, build. s )
[2]: , build )
[3]: org. junit. assert. assertequals ( importtask, pollabletask )
[4]: org. junit. assert. assertequals ( 1, pollabletask. getdropid ( ) )

************

************
tgt: org . junit . assert . assertnull ( org . threadly . util . exceptionutils . getcauseoftype ( null , org . threadly . util . exception . class ) )
[0]: org. junit. assert. assertequals ( 1, repository. getdropid ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 1, router. getruletargets ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, router. getruletargets ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( inetaddressmatcher . regexpnamematcher . class , ipmatcher . getclass ( ) )
[0]: org. junit. assert. assertnotnull ( router. getruletargets ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( rules ), router )
[2]: org. junit. assert. assertequals ( 1, router. getruletargets ( ). size ( )
[3]: org. junit. assert. assertequals ( ansicolormap. defaultname, instance. getcolormapname ( ) )
[4]: org. junit. assert. assertequals ( ansicolor map. defaultname, instance. getcolormapname ( ) )

************

************
tgt: org . junit . assert . assertequals ( a . hashcode ( ) , b . hashcode ( ) )
[0]: org. junit. assert. assertequals ( ansicolormap. defname, instance. getcolormapname ( ) )
[1]: org. junit. assert. assertequals ( ansicolormap. standardname, instance. getcolormapname ( ) )
[2]: org. junit. assert. assertnotnull ( instance. getcolormapname ( ) )
[3]: org. junit. assert. assertequals ( 1, createdummy. length )
[4]: org. junit. assert. assertequals ( org. dummycreator. dummyfactories. randomarrayfactorytest. testclass [ 1 ], createdummy. length )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedvalues , columnvalues )
[0]: org. junit. assert. assertequals ( org. dummycreator. dummyfactories. randomarrayfactorytest. testclass [ 1 ], createdummy )
[1]: org. junit. assert. assertequals ( org. dummycreator. dummyfactories. randomarrayfactorytest. testclass [ 0 ], createdummy. length )
[2]: org. junit. assert. assertequals ( 0, createdummy. length )
[3]: org. junit. assert. assertequals ( s, expected )
[4]: org. junit. assert. assertequals ( expected, s )

************

************
tgt: org . junit . assert . assertnotnull ( rs )
[0]: org. junit. assert. assertequals ( result, expected )
[1]: org. junit. assert. assertequals ( s, expected }
[2]: sample s )
[3]: org. junit. assert. assertequals ( customtype, content. getvalue ( ) )
[4]: org. junit. assert. assertequals ( customtype. getvalue ( ), content )

************

************
tgt: org . junit . assert . assertnull ( existinglock )
[0]: org. junit. assert. assertnotnull ( content. getvalue ( ) )
[1]: org. junit. assert. assertnull ( content. getvalue ( ) )
[2]: org. junit. assert. assertnotnull ( content )
[3]: org. junit. assert. assertnotnull ( springsprout )
[4]: org. junit. assert. assertequals ( 1, res. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( messagetosend , received )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( 1, resources. size ( ) )
[2]: org. junit. assert. assertequals ( 1, results. size ( ) )
[3]: org. junit. assert. assertequals ( 1, count )
[4]: org. junit. assert. assertnotnull ( returnedfund )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , triadcensus )
[0]: org. junit. assert. assertthat ( returnedfund, org. hamcrest. corematchers. is ( fundname ) )
[1]: org. junit. assert. assertthat ( returnedfund, org. hamcrest. corematchers. is ( funddao ) )
[2]: org. junit. assert. assertthat ( returnedfund, org. hamcrest. corematchers. is ( fundnames ) )
[3]: org. junit. assert. assertequals ( fundname, returnedfund )
[4]: org. junit. assert. asserttrue ( ( e == rootcause ) )

************

************
tgt: org . junit . assert . assertequals ( hash . size_in_trits , hash . trailingzeros ( ) )
[0]: org. junit. assert. asserttrue ( ( e instanceof org. threadly. util. exceptionutils. getrootcause ( rootcause ) ) )
[1]: org. junit. assert. asserttrue ( ( e instanceof org. threadly. util. exceptionutils ) )
[2]: org. junit. assert. asserttrue ( ( e == rootcause. getrootcause ( e ) ) )
[3]: org. junit. assert. asserttrue ( ( e instanceof org. threadly. util. exceptionutils. getrootcause ( rootcause ) )
[4]: org. junit. assert. assertequals ( null, view )

************

************
tgt: org . junit . assert . assertequals ( totallines , result . getprocessedlines ( ) )
[0]: org. junit. assert. assertequals ( string, view )
[1]: org. junit. assert. assertequals ( list, view )
[2]: org. junit. assert. assertequals ( java. lang. string. class, view )
[3]: )
[4]: org. junit. assert. asserttrue ( resultblob. equals ( blob ) )

************

************
tgt: org . junit . assert . assertequals ( userconfiguredservices , processedservices )
[0]: org. junit. assert. assertfalse ( resultblob. equals ( blob ) )
[1]: org. junit. assert. assertequals ( true, resultblob. equals ( blob ) )
[2]: org. junit. assert. asserttrue ( testblob. equals ( blob ) )
[3]: org. junit. assert. asserttrue ( resultblob. equals ( blob ) ) ;
[4]: org. junit. assert. assertequals ( apppath, context. getpathname ( req ) )

************

************
tgt: org . junit . assert . assertequals ( orgset , procset )
[0]: org. junit. assert. assertequals ( apppath, path. getpathname ( req ) )
[1]: org. junit. assert. assertequals ( apppath, this. getpathname ( req ) )
[2]: org. junit. assert. assertequals ( 1, this. getpathname ( req ). size )
[3]: org. junit. assert. assertequals ( 1, path. getpathname ( req ). size )
[4]: org. junit. assert. assertequals ( simple, find. get ( ). getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( patientprograms . size ( ) , org . openmrs . module . webservices . rest . test . util . getresultssize ( result ) )
[0]: org. junit. assert. assertequals ( simple, find. getname ( ) )
[1]: org. junit. assert. assertequals ( simple. getname ( ), find. get ( ) )
[2]: org. junit. assert. assertequals ( simple. getname ( ), find. getname ( ) )
[3]: org. junit. assert. assertequals ( simple. getname ( ), find. remove ( ) )
[4]: org. junit. assert. assertequals ( 1, tablemetas. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( deserializedcontent )
[0]: org. junit. assert. assertequals ( org. ardulink. core. beans. beanpropertiestest. ourowntestanno. class, attribute. gettype ( ) )
[1]: org. junit. assert. assertequals ( org. ardulink. core. beans. beanpropertiestest. myowntestanno. class, attribute. gettype ( ) )
[2]: org. junit. assert. assertnull ( attribute. gettype ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, attribute. gettype ( ) )
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( vocustomer, customer. getname ( ) )
[1]: org. junit. assert. assertequals ( vocustomer. getname ( ), customer. getname ( ) )
[2]: org. junit. assert. assertequals ( vocustomer. getname ( ), customer. getid ( ) )
[3]: org. junit. assert. assertequals ( vocustomer. getname ( ), customer. tostring ( ) )
[4]: org. junit. assert. assertequals ( vocustomer. getid ( ), customer. getname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( accepts )
[0]: org. junit. assert. assertequals ( 16, in. available ( ) )
[1]: org. junit. assert. assertequals ( 8, in. available ( ) )
[2]: org. junit. assert. assertequals ( 32, in. available ( ) )
[3]: org. junit. assert. assertequals ( 9, in. available ( ) )
[4]: org. junit. assert. assertequals ( 15, in. available ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 1, topics. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), topics )
[2]: org. junit. assert. assertequals ( 0, topics. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), topics )
[4]: , topics )

************

************
tgt: org . junit . assert . assertequals ( "udn<sp>identifier<sp>string" , deviceid )
[0]: org. junit. assert. assertequals ( 1, instance. getscreenshotimages ( seconds ). size ( ) )
[1]: org. junit. assert. assertnotnull ( instance. getscreenshotimages ( seconds ) )
[2]: org. junit. assert. assertequals ( 0, instance. getscreenshotimages ( seconds ). size ( ) )
[3]: org. junit. assert. assertequals ( 3, instance. getscreenshotimages ( seconds ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, instance. getscreenshotimages ( seconds ). length )

************

************
tgt: org . junit . assert . assertequals ( expected_out , out . tostring ( ) )
[0]: org. junit. assert. assertequals ( msg, 0, org. openehealth. ipf. platform. camel. ihe. xds. myrejectionhandlingstrategy. getcount ( ) )
[1]: org. junit. assert. assertequals ( msg, 1, org. openehealth. ipf. platform. camel. ihe. xds. myrejectionhandlingstrategy. getcount ( ) )
[2]: org. junit. assert. assertequals ( msg, 2, org. openehealth. ipf. platform. camel. ihe. xds. myrejectionhandlingstrategy. getcount ( ) )
[3]: org. junit. assert. assertequals ( msg, org. openehealth. ipf. platform. camel. ihe. xds. myrejectionhandlingstrategy. getcount ( ) )
[4]: org. junit. assert. assertequals ( msg, java. lang. string. valueof ( msg. getcount ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( ( trials / 2 ) , p )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), s )
[1]: org. junit. assert. assertequals ( 1, s. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), s )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), s )
[4]: org. junit. assert. assertequals ( 0, s. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( config . isclientauthentication ( ) )
[0]: org. junit. assert. assertequals ( true, result )
[1]: org. junit. assert. assertequals ( false, result )
[2]: org. junit. assert. assertfalse ( trylock )
[3]: org. junit. assert. asserttrue ( s. timedoutcommand (acity. execute ( ) ) )
[4]: org. junit. assert. asserttrue ( s. timedoutcommand (acity. size ( ) ) )

************

************
tgt: org . junit . assert . assertsame ( list1 , nl . list )
[0]: org. junit. assert. asserttrue ( execute. timedoutcommand ( 10 ) )
[1]: org. junit. assert. asserttrue ( execute. timedoutcommand ( 0 ) )
[2]: org. junit. assert. asserttrue ( threads. timedoutcommand (acity. execute ( ) ) )
[3]: org. junit. assert. assertequals ( action, instance. gethealthcheckactions ( ). get ( 0 ) )
[4]: org. junit. assert. assertequals ( action, instance. gethealthcheckactions ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( handle . match ( any_ ) )
[0]: org. junit. assert. assertequals ( actions, instance. gethealthcheckactions ( ). get ( 0 ) )
[1]: org. junit. assert. assertequals ( actions, instance. gethealthcheckactions ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, instance. gethealthcheckactions ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( service )
[4]: org. junit. assert. assertnull ( service )

************

************
tgt: org . junit . assert . asserttrue ( ( status == 0 ) )
[0]: org. junit. assert. assertequals ( null, service )
[1]: org. junit. assert. assertequals ( null, service. name )
[2]: org. junit. assert. assertequals ( null, service. field )
[3]: org. junit. assert. assertnotnull ( cookie. getdomain ( ) )
[4]: org. junit. assert. assertequals ( 1, cookie. getdomain ( ). length )

************

************
tgt: org . junit . assert . assertequals ( parameters , instance . getparameters ( ) )
[0]: org. junit. assert. assertequals ( 0, cookie. getdomain ( ). length )
[1]: org. junit. assert. assertequals ( 1, cookie. getdomain ( ). size ( )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( clone )
[4]: org. junit. assert. assertequals ( e, e )

************

************
tgt: org . junit . assert . assertfalse ( lfs . util ( ) . exists ( rpath ) )
[0]: org. junit. assert. assertequals ( null, e )
[1]: org. junit. assert. assertnotnull ( e )
[2]: org. junit. assert. assertequals ( e, b )
[3]: , e )
[4]: org. junit. assert. assertequals ( false, iterator. hasnext ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , ( ( boolean [ ] ) ( cz . zcu . kiv . jop . util . arrayutils . toprimitivearray ( expected ) ) ) )
[0]: org. junit. assert. assertequals ( true, iterator. hasnext ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), list )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), list )
[3]: org. junit. assert. assertnotnull ( list )
[4]: , list )

************

************
tgt: org . junit . assert . assertequals ( undertest , undertest . thencomposecaught ( transform ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, found. size ( ) )
[2]: org. junit. assert. assertequals ( 1, found. size ( ) )
[3]: org. junit. assert. asserttrue ( ( ( found. size ( ) ) == 0 ) )
[4]: org. junit. assert. assertequals ( 1, found. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( meldingen . isempty ( ) )
[0]: org. junit. assert. asserttrue ( ( ( found. size ( ) ) == 1 ) )
[1]: org. junit. assert. assertequals ( 1, resultaat. size ( ) )
[2]: org. junit. assert. assertequals ( 0, resultaat. size ( ) )
[3]: org. junit. assert. assertequals ( 3, resultaat. size ( ) )
[4]: org. junit. assert. assertequals ( 2, resultaat. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( beand . getconnectcount ( ) , org . hamcrest . matchers . is ( 5 ) )
[0]: org. junit. assert. assertequals ( 1, resultaat )
[1]: org. junit. assert. assertnotnull ( iter. next ( ) )
[2]: org. junit. assert. assertnotnull ( iter. hasnext ( ) )
[3]: org. junit. assert. assertnotnull ( iteration. next ( ) )
[4]: org. junit. assert. assertnotnull ( iter )

************

************
tgt: org . junit . assert . assertequals ( collection , result )
[0]: org. junit. assert. assertnotnull ( reslist )
[1]: org. junit. assert. assertnull ( result. getfirstheader ( null ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnotnull ( result. getfirstheader ( null ) )
[4]: org. junit. assert. assertequals ( originresponse, result. getfirstheader ( null ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , features . size ( ) )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertnull ( compute. getmachinetype ( com. google. cloud. compute. deprecated. computeimpltest. machine_type_id, ""name"" ) )
[2]: org. junit. assert. assertnull ( compute. getmachinetype ( com. google. cloud. compute. deprecated. computeimpltest. machine_type_id, ""foo"" ) )
[3]: org. junit. assert. assertnull ( compute. getmachinetype ( com. google. cloud. compute. deprecated. computeimpltest. machine_type_id, "" "" ) )
[4]: org. junit. assert. assertnull ( compute. getmachinetype ( com. google. cloud. compute. deprecated. computeimpltest. machine_type_id, ""test"" ) )

************

************
tgt: org . junit . assert . assertnull ( parser . parse ( "" ) )
[0]: org. junit. assert. assertnull ( compute. getmachinetype ( com. google. cloud. compute. deprecated. computeimpltest. machine_type_id, ""name"" ) )
[1]: org. junit. assert. asserttrue ( ( ( results. size ( ) ) == 1 ) )
[2]: org. junit. assert. assertequals ( 1, results. size ( ) )
[3]: org. junit. assert. assertequals ( 0, results. size ( ) )
[4]: org. junit. assert. asserttrue ( page. cansetupdefaultvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( 100 , mconfiguration . getms ( propertykey . proxy_stream_cache_timeout_ms ) )
[0]: org. junit. assert. asserttrue ( nodeone. isbalancedtree ( ) )
[1]: org. junit. assert. assertequals ( true, nodeone. isbalancedtree ( ) )
[2]: org. junit. assert. asserttrue ( tree. isbalancedtree ( ) )
[3]: org. junit. assert. assertthat ( nodeone. isbalancedtree ( ) )
[4]: org. junit. assert. assertequals ( true, nodeone. isbalancedtree ( ) &&

************

************
tgt: org . junit . assert . assertequals ( 0 , changes . size ( ) )
[0]: org. junit. assert. assertequals ( 1, comparejson ( event, null ) )
[1]: org. junit. assert. assertequals ( 1, comparejson ( event, java. lang. string. class ) )
[2]: org. junit. assert. asserttrue ( comparejson ( event, event. tostring ( ) ) )
[3]: org. junit. assert. assertequals ( comparejson ( event, null ), 1 )
[4]: org. junit. assert. assertequals ( 1, comparejson ( event, java. lang. throwable. class ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , proposals . size ( ) )
[0]: org. junit. assert. assertnotnull ( md. getplaintext ( ) )
[1]: org. junit. assert. assertequals ( null, md. getplaintext ( ) )
[2]: org. junit. assert. assertnull ( md. getplaintext ( ) )
[3]: org. junit. assert. assertequals ( 0, md. getplaintext ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( repo2 )
[1]: org. junit. assert. assertnotnull ( repo )
[2]: org. junit. assert. assertnotnull ( repo1 )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertfalse ( meldingen . isempty ( ) )
[0]: org. junit. assert. assertnull ( dbmap )
[1]: org. junit. assert. assertnotnull ( dbmap )
[2]: org. junit. assert. assertequals ( null, dbmap )
[3]: org. junit. assert. asserttrue ( dbmap. isempty ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( org . eclipse . swt . dnd . transferdata . sametype ( type , deserializedtype ) )
[0]: org. junit. assert. assertnotnull ( greeting. sayhello ( ) )
[1]: org. junit. assert. assertequals ( 1, greeting. sayhello ( ) )
[2]: org. junit. assert. assertequals ( 0, greeting. sayhello ( ) )
[3]: org. junit. assert. assertequals ( null, greeting. sayhello ( ) )
[4]: org. junit. assert. assertnotnull ( greeting )

************

************
tgt: org . junit . assert . assertequals ( 16 , msg . getaltitude ( ) )
[0]: org. junit. assert. assertequals ( count, result. get ( ) )
[1]: org. junit. assert. assertequals ( 0, result. get ( ) )
[2]: org. junit. assert. assertequals ( 1, result. get ( ) )
[3]: get ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( result != null ) )
[0]: org. junit. assert. assertnotnull ( advance. getid ( ) )
[1]: org. junit. assert. assertequals ( 1, advance. getid ( ) )
[2]: org. junit. assert. assertequals ( 1, advance. getid ( ). size ( ) )
[3]: org. junit. assert. asserttrue ( result. validate ( ) )
[4]: org. junit. assert. assertequals ( true, result. validate ( ) )

************

************
tgt: org . junit . assert . assertnull ( existingfragmentcollection )
[0]: org. junit. assert. assertfalse ( result. validate ( ) )
[1]: org. junit. assert. assertequals ( false, result. validate ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( expectedresult, result ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( expectedresult ), result ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( expectedresult, result ( ). trim ( ) )
[1]: org. junit. assert. assertequals ( result ( ), expectedresult )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( drawable )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), drawable )

************

************
tgt: org . junit . assert . asserttrue ( ( sender instanceof com . hotels . bdp . circustrain . metrics . graphitemetricsender ) )
[0]: org. junit. assert. assertnull ( drawable )
[1]: org. junit. assert. assertequals ( 0, drawable. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. optional. empty ( ), drawable )
[3]: org. junit. assert. assertnull ( resolver. resolve ( "id ) )
[4]: org. junit. assert. assertequals ( null, resolver. resolve ( "id ) )

************

************
tgt: org . junit . assert . assertfalse ( validator . validate ( context , metric , root ) . isempty ( ) )
[0]: org. junit. assert. assertnull ( resolver. resolve ( orgid ) )
[1]: org. junit. assert. assertequals ( null, resolver. resolve ( orgid ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, value )
[4]: org. junit. assert. assertequals ( 0, value )

************

************
tgt: org . junit . assert . assertequals ( expectquery , actualquery )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), value )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), value )
[2]: org. junit. assert. assertequals ( 1l, value )
[3]: org. junit. assert. assertsame ( a, addavg. call ( a, 0l ) )
[4]: org. junit. assert. assertnotnull ( element )

************

************
tgt: org . junit . assert . assertnull ( newstate )
[0]: org. junit. assert. assertnotnull ( element. getconstructorscope ( ) )
[1]: org. junit. assert. assertequals ( msg, column, line )
[2]: org. junit. assert. assertequals ( msg, line )
[3]: org. junit. assert. assertequals ( msg, line, column )
[4]: org. junit. assert. assertequals ( msg, line, line )

************

************
tgt: org . junit . assert . assertequals ( type , librarytype . getname ( ) )
[0]: org. junit. assert. assertequals ( msg, row )
[1]: org. junit. assert. assertequals ( updateusername, getlastauthenticated )
[2]: org. junit. assert. assertequals ( updatepass, getlastauthenticated )
[3]: org. junit. assert. assertnotnull ( getlastauthenticated )
[4]: org. junit. assert. assertequals ( updatedusername, getlastauthenticated )

************

************
tgt: org . junit . assert . assertequals ( msg , 0 , org . dresdenocl . metamodels . test . tests . testnamespace . package1 . getownedtypeparameter ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( updatesusername, getlastauthenticated )
[1]: org. junit. assert. assertequals ( 1, constraintviolations. size ( ) )
[2]: org. junit. assert. assertnotnull ( actualdecorator )
[3]: org. junit. assert. assertnull ( actualdecorator )
[4]: org. junit. assert. assertnull ( actualdecorator )

************

************
tgt: org . junit . assert . assertequals ( expectedbloomkey1 , uk . gov . gchq . gaffer . accumulostore . test . bloom . byteentitybloomelementfunctortest . elementfunctor . transform ( key1 ) )
[0]: _1 ) )
[1]: _1 )
[2]: org. junit. assert. assertfalse ( result. ismatch ( ) )
[3]: org. junit. assert. assertequals ( false, result. ismatch ( ) )
[4]: org. junit. assert. assertnotnull ( content )

************

************
tgt: org . junit . assert . asserttrue ( runner . contains ( task ) )
[0]: org. junit. assert. assertnull ( content )
[1]: org. junit. assert. assertequals ( ""test"", content )
[2]: org. junit. assert. assertequals ( ""foo"", content )
[3]: org. junit. assert. assertequals ( ""a"", content )
[4]: org. junit. assert. assertnotnull ( com. openshift. internal. restclient. model. buildconfig. getbuildtriggers ( ) )

************

************
tgt: org . junit . assert . assertequals ( s , stringvalue )
[0]: org. junit. assert. assertequals ( 1, com. openshift. internal. restclient. model. buildconfig. getbuildtriggers ( ). size ( ) )
[1]: org. junit. assert. assertequals ( com. openshift. internal. restclient. model. buildconfig. getbuildtriggers ( ). size ( ), 1 )
[2]: org. junit. assert. assertequals ( com. openshift. internal. restclient. model. buildconfig. getbuildtriggers ( ), list )
[3]: ) )
[4]: org. junit. assert. assertequals ( expected, merged )

************

************
tgt: org . junit . assert . assertequals ( com . github . dockerjava . api . model . restartpolicy . parse ( "on-failure" ) , com . github . dockerjava . api . model . restartpolicy . onfailurerestart ( 0 ) )
[0]: org. junit. assert. assertequals ( result, merged )
[1]: org. junit. assert. assertequals ( exp, merged )
[2]: org. junit. assert. assertequals ( expected, merged, null )
[3]: org. junit. assert. assertequals ( expected, merged, data )
[4]: org. junit. assert. assertequals ( ""test"", task. getdatastring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( evaluator . evaluate ( ) )
[0]: org. junit. assert. assertequals ( null, task. getdatastring ( ) )
[1]: org. junit. assert. assertnotnull ( task. getdatastring ( ) )
[2]: org. junit. assert. assertnull ( task. getdatastring ( ) )
[3]: public void init ( ) { }
[4]: org. junit. assert. assertnull ( searchstring )

************

************
tgt: org . junit . assert . assertnull ( persooncheck . getwoonplaatsgeboorte ( ) )
[0]: org. junit. assert. assertnull ( searchesstring )
[1]: org. junit. assert. assertnull ( foundstring )
[2]: org. junit. assert. assertnotnull ( searchstring )
[3]: , searchstring )
[4]: org. junit. assert. assertequals ( 1, userdao. findall ( params ). size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new boolean [ ] { false , false , true } , gridss . extractsvreads . hasreadalignmentconsistentwithreference ( list ) )
[0]: org. junit. assert. assertequals ( 0, userdao. findall ( params ). size ( ) )
[1]: org. junit. assert. assertthat ( context. getpath ( ), org. hamcrest. corematchers. is ( expectedpath ) )
[2]: org. junit. assert. assertthat ( context. getpath ( ), org. hamcrest. matchers. is ( expectedpath ) )
[3]: org. junit. assert. assertequals ( expectedpath, context. getpath ( ) )
[4]: org. junit. assert. assertthat ( context. getpath ( ), org. hamcrest. corematchers. equalto ( expectedpath ) )

************

************
tgt: org . junit . assert . assertfalse ( datacutelist . isempty ( ) )
[0]: org. junit. assert. assertthat ( context. getpath ( ), org. hamcrest. matchers. equalto ( expectedpath ) )
[1]: org. junit. assert. assertequals ( 1, 1 )
[2]: org. junit. assert. assertnotnull ( queue )
[3]: org. junit. assert. assertnotnull ( context )
[4]: org. junit. assert. assertnotnull ( collection )

************

************
tgt: org . junit . assert . assertnotnull ( configuration . instance . getsuccessivefailedtimes ( "test" ) )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertnotnull ( name. getname ( ) )
[2]: org. junit. assert. assertnotnull ( module. getname ( ) )
[3]: org. junit. assert. assertnotnull ( fixture. getname ( ) )
[4]: org. junit. assert. assertnotnull ( method. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( o , mockplaylist )
[0]: org. junit. assert. assertnotnull ( converter. getname ( ) )
[1]: org. junit. assert. asserttrue ( exists )
[2]: org. junit. assert. assertequals ( false, exists )
[3]: org. junit. assert. assertequals ( true, exists )
[4]: org. junit. assert. assertthat ( binaryclient. casget ( com. spotify. folsom. integrationtest. key1 ). tocompletablefuture ( ). get ( ), org. hamcrest. corematchers. is ( cas ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , chatids . size ( ) )
[0]: org. junit. assert. assertequals ( com. spotify. folsom. integrationtest. value1, binaryclient. casget ( com. spotify. folsom. integrationtest. key1 ). tocompletablefuture ( ). get ( ) )
[1]: org. junit. assert. assertthat ( binaryclient. casget ( com. spotify. folsom. integrationtest. key1 ). tocompletablefuture ( ). get ( ), org. hamcrest. core. is. is ( cas ) )
[2]: org. junit. assert. assertequals ( com. spotify. folsom. integrationtest. value1, cas. get ( com. spotify. folsom. integrationtest. key1 ). tocompletablefuture ( ). get ( ) )
[3]: org. junit. assert. assertthat ( binaryclient. casget ( com. spotify. folsom. integrationtest. key1 ). tocompletablefuture ( ). get ( ), org. hamcrest. matchers. is ( cas ) )
[4]: org. junit. assert. assertequals ( scan1, testtask. gettablename ( ) )

************

************
tgt: org . junit . assert . assertfalse ( stub . isapplicable ( mock ( com . xebialabs . restito . semantics . call . class ) ) )
[0]: org. junit. assert. assertequals ( scan2, testtask. gettablename ( ) )
[1]: org. junit. assert. assertequals ( scan1. gettablename ( ), testtask. gettablename ( ) )
[2]: org. junit. assert. assertequals ( scan2. gettablename ( ), testtask. gettablename ( ) )
[3]: org. junit. assert. assertequals ( scan1. gettablename ( ), testtask. gettablename ( ). tostring ( ) )
[4]: org. junit. assert. asserttrue ( resultaat )

************

************
tgt: org . junit . assert . asserttrue ( success )
[0]: org. junit. assert. assertequals ( 1, count )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertfalse ( resultaat )
[3]: ) )
[4]: org. junit. assert. assertequals ( monetarylocationematches, mbean. getbundlelocation ( pid ) )

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: org. junit. assert. assertequals ( pomfilelocationematches, mbean. getbundlelocation ( pid ) )
[1]: org. junit. assert. assertequals ( cmslocationematches, mbean. getbundlelocation ( pid ) )
[2]: org. junit. assert. assertequals ( cmslocationfriendlyurl, mbean. getbundlelocation ( pid ) )
[3]: org. junit. assert. assertequals ( cmslocationematches, mbean )
[4]: org. junit. assert. assertnotnull ( order )

************

************
tgt: org . junit . assert . asserttrue ( ( ( ce . getnumber ( ) ) == error ) )
[0]: org. junit. assert. assertequals ( 1, order. count ( ) )
[1]: org. junit. assert. assertequals ( 1, order. size ( ) )
[2]: org. junit. assert. assertequals ( 1, order. count )
[3]: org. junit. assert. assertequals ( order, keytest )
[4]: org. junit. assert. assertequals ( smssettings. blank, smssettings. phonenumberat ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( smssettings. blank, smssettings. phonenumberat ( 1 ) )
[1]: org. junit. assert. assertequals ( smssettings. empty, smssettings. phonenumberat ( 0 ) )
[2]: org. junit. assert. assertequals ( smssettings. unique, smssettings. phonenumberat ( 0 ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( returnedshard. getpointer ( ) )

************

************
tgt: org . junit . assert . assertequals ( header , org . apache . hadoop . fs . quotausage . getheader ( ) )
[0]: org. junit. assert. assertequals ( delta, actual )
[1]: org. junit. assert. assertequals ( 1, delta )
[2]: org. junit. assert. assertequals ( delta, actual, 0 )
[3]: org. junit. assert. assertequals ( 0, delta )
[4]: org. junit. assert. assertequals ( delta, actual, 0l )

************

************
tgt: org . junit . assert . assertequals ( existinguadpartialentry , newuadpartialentry )
[0]: org. junit. assert. assertequals ( 1, _directory. getimagewidth ( ) )
[1]: org. junit. assert. assertequals ( 0, _directory. getimagewidth ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 123 ), _directory. getimagewidth ( ) )
[3]: org. junit. assert. assertequals ( 1l, _directory. getimagewidth ( ) )
[4]: org. junit. assert. assertequals ( 0l, _directory. getimagewidth ( ) )

************

************
tgt: org . junit . assert . assertequals ( "actg" , dna . getvalue ( ) )
[0]: org. junit. assert. assertequals ( expected, testredvalues ( input ) )
[1]: org. junit. assert. assertequals ( expected, redactvalues ( input ) )
[2]: org. junit. assert. assertequals ( expected, input )
[3]: org. junit. assert. assertequals ( expected, actual )
[4]: org. junit. assert. assertequals ( expected, testredinstance ( input ) )

************

************
tgt: org . junit . assert . assertequals ( "column_name" , colname )
[0]: org. junit. assert. assertnotnull ( foundrepo. getdirectory ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( origin ), reconstructed )
[2]: org. junit. assert. assertequals ( 1, reconstructed. getdata ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, reconstructed. data. size ( ) )
[4]: org. junit. assert. assertequals ( null, reconstructed )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 1, reconstructed. context )
[1]: org. junit. assert. assertequals ( 0, ln. compareto ( ln2 ) )
[2]: org. junit. assert. assertequals ( 1, ln. compareto ( ln2 ) )
[3]: org. junit. assert. assertequals ( ( - 1 ), ln. compareto ( ln2 ) )
[4]: org. junit. assert. assertequals ( 0, ln2. compareto ( ln2 ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( 0, ln. compareto ( ln1 ) )
[1]: org. junit. assert. asserttrue ( this. rm. validatefop2pdf ( pdffile, pdffile ) )
[2]: org. junit. assert. assertequals ( path. tostring ( ), path. tostring ( ) )
[3]: org. junit. assert. assertequals ( path. tostring ( ), expected )
[4]: org. junit. assert. assertequals ( path. tostring ( ), root. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , operations . size ( ) )
[0]: org. junit. assert. assertequals ( path. tostring ( ), null )
[1]: tostring ( ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertnotnull ( request )

************

************
tgt: org . junit . assert . assertnotnull ( group )
[0]: test case for
[1]: ) )
[2]: org. junit. assert. assertnotnull ( org. apache. jackrabbit. oak. spi. security. principal. compositeprincipalprovider. of ( java. util. collections. emptylist ( ) ) )
[3]: org. junit. assert. assertnull ( org. apache. jackrabbit. oak. spi. security. principal. compositeprincipalprovider. of ( java. util. collections. emptylist ( ) ) )
[4]: org. junit. assert. assertnotnull ( org. apache. jackrabbit. oak. spi. security. principal. compositeprincipalprovider. of ( java. util. collections. < java. lang. string > emptylist ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( null , results )
[0]: org. junit. assert. assertnull ( org. apache. jackrabbit. oak. spi. security. principal. compositeprincipalprovider. of ( java. util. collections. < java. lang. string > emptylist ( ) ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), testof ( java. util. collections. emptylist ( ) ) )
[2]: org. junit. assert. assertequals ( 0, dummyobserver. addlistener ( dummyobserver ) )
[3]: org. junit. assert. assertequals ( null, dummyobserver. addlistener ( dummyobserver ) )
[4]: org. junit. assert. assertequals ( false, dummyobserver. addlistener ( dummyobserver ) )

************

************
tgt: org . junit . assert . asserttrue ( resutl )
[0]: org. junit. assert. assertnull ( dummyobserver )
[1]: org. junit. assert. assertnotnull ( dummyobserver )
[2]: org. junit. assert. assertequals ( 1, result )
[3]: org. junit. assert. assertequals ( 0, result )
[4]: org. junit. assert. assertequals ( result, 3 )

************

************
tgt: org . junit . assert . assertthat ( testuristr , org . hamcrest . corematchers . is ( expecteduristr ) )
[0]: org. junit. assert. assertequals ( 3, result )
[1]: org. junit. assert. assertequals ( 6, result )
[2]: org. junit. assert. assertequals ( 1, redis. zrange ( key, 0, ( - 1 ) ) )
[3]: org. junit. assert. assertequals ( list ( ), redis. zrange ( key, 0, ( - 1 ) ) )
[4]: org. junit. assert. assertequals ( 0, redis. zrange ( key, 0, ( - 1 ) ) )

************

************
tgt: org . junit . assert . asserttrue ( resolver . has ( perms , perm ) )
[0]: org. junit. assert. assertequals ( 1, redis. zrange ( key, 1, ( - 1 ) ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, operation. getrepetition ( ) )
[3]: org. junit. assert. assertequals ( 0, operation. getrepetition ( ) )
[4]: org. junit. assert. assertequals ( 12, operation. getrepetition ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( 0, operation. getrepetition ( ). length )
[1]: ) )
[2]: org. junit. assert. assertequals ( boxedboolean. unbox ( ), true )
[3]: org. junit. assert. assertequals ( boxedboolean. unbox ( ), primitive )
[4]: org. junit. assert. assertequals ( boxedboolean. unbox ( ), false )

************

************
tgt: org . junit . assert . assertthat ( resultsqo . get ( ) , contains ( spanone , spantwo ) )
[0]: org. junit. assert. assertnotnull ( boxedboolean. unbox ( ) )
[1]: org. junit. assert. assertnotnull ( boxedboolean )
[2]: org. junit. assert. assertnull ( instance. getfirstvalue ( null ) )
[3]: org. junit. assert. assertnull ( instance. getfirstvalue ( ""a"" ) )
[4]: org. junit. assert. assertnull ( instance. getfirstvalue ( string. tostring ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( checker . isauthorized ( context , profiles , defaultauthorizers . csrf_check , null ) )
[0]: org. junit. assert. assertnull ( instance. getfirstvalue ( key ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, net. jonbell. examples. methodprof. profilelogger. dump ( ). size ( ) )
[3]: org. junit. assert. assertequals ( result, null )
[4]: org. junit. assert. assertequals ( result, user. tostring ( ) )

************

************
tgt: org . junit . assert . assertnull ( org . threadly . util . exceptionutils . getcauseoftypes ( null , java . util . collections . singletonlist ( org . threadly . util . exception . class ) ) )
[0]: org. junit. assert. assertequals ( result, user. getid ( ) )
[1]: org. junit. assert. assertequals ( result, user. trim ( ) )
[2]: result )
[3]: org. junit. assert. assertequals ( 1, executor. getreturnvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, nodes. length )

************

************
tgt: org . junit . assert . assertnotnull ( examplerating )
[0]: org. junit. assert. assertequals ( 0, nodes. length )
[1]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 1 }, nodes )
[2]: org. junit. assert. assertarrayequals ( new long [ ] { 0, 1 }, nodes )
[3]: org. junit. assert. assertequals ( source, nodes [ 0 ] )
[4]: org. junit. assert. assertequals ( 1, eventdata1. compareto ( eventdata2 ) )

************

************
tgt: org . junit . assert . assertnotnull ( decryptor )
[0]: org. junit. assert. assertequals ( 0, eventdata1. compareto ( eventdata2 ) )
[1]: org. junit. assert. assertequals ( 1, org. apache. storm. eventhubs. geta1. compareto ( eventdata1 ) )
[2]: org. junit. assert. assertequals ( 1l, eventdata1. compareto ( eventdata2 ) )
[3]: org. junit. assert. assertequals ( 1, eventdata1. compareto ( eventdata1 ) )
[4]: org. junit. assert. assertequals ( result. fail, s. apply ( item ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( refs . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertequals ( result. fail, _. apply ( item ) )
[1]: org. junit. assert. assertequals ( result. fail, parser. apply ( item ) )
[2]: org. junit. assert. assertequals ( result. fail, m. apply ( item ) )
[3]: org. junit. assert. assertequals ( result. fail, handler. apply ( item ) )
[4]: org. junit. assert. assertfalse ( processdefinition. issuspended ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( obj instanceof java . lang . string [ ] ) )
[0]: org. junit. assert. assertfalse ( responsedefinition. issuspended ( ) )
[1]: org. junit. assert. assertfalse ( (! ( processdefinition. issuspended ( ) ) ) )
[2]: org. junit. assert. assertfalse ( processordefinition. issuspended ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, count )

************

************
tgt: org . junit . assert . assertequals ( 2 , instance . getall ( "key1" ) . size ( ) )
[0]: org. junit. assert. assertequals ( 0, count )
[1]: org. junit. assert. assertequals ( 2, count )
[2]: org. junit. assert. assertequals ( 8, count )
[3]: org. junit. assert. assertequals ( 1l, count )
[4]: org. junit. assert. assertequals ( 1000, org. apache. hadoop. hbase. replication. regionserver. testregionreplicareplicationendpointnomaster. entries. length )

************

************
tgt: org . junit . assert . assertequals ( value , genericsolutionattribute . getattribute ( solution ) )
[0]: org. junit. assert. assertequals ( 5, epackages. size ( ) )
[1]: org. junit. assert. assertequals ( 1, epackages. size ( ) )
[2]: org. junit. assert. assertequals ( 2, epackages. size ( ) )
[3]: org. junit. assert. assertequals ( 4, epackages. size ( ) )
[4]: org. junit. assert. assertequals ( 3, epackages. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( exceptiontype . sql , result )
[0]: org. junit. assert. assertnotnull ( sut. getmessage ( ) )
[1]: org. junit. assert. assertequals ( 2, index. getsize ( ) )
[2]: org. junit. assert. assertequals ( 1, index. getsize ( ) )
[3]: org. junit. assert. assertequals ( 4, index. getsize ( ) )
[4]: org. junit. assert. assertequals ( 3, index. getsize ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: . commit ( ) )
[1]: org. junit. assert. assertequals ( 4, activesessionprincipalmap. size ( ) )
[2]: org. junit. assert. assertequals ( 3, activesessionprincipalmap. size ( ) )
[3]: org. junit. assert. assertequals ( 5, activesessionprincipalmap. size ( ) )
[4]: org. junit. assert. assertequals ( expecetedtablename, expecetedtablename )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( expected , result ) )
[0]: org. junit. assert. assertequals ( false, couldhold )
[1]: org. junit. assert. assertfalse ( couldhold )
[2]: org. junit. assert. assertthat ( couldhold )
[3]: , couldhold )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( anonymousid , authinfo . getuserid ( ) )
[0]: org. junit. assert. asserttrue ( result )
[1]: org. junit. assert. assertfalse ( result )
[2]: org. junit. assert. assertequals ( false, result )
[3]: org. junit. assert. assertequals ( 0, count )
[4]: org. junit. assert. assertequals ( new java. lang. object ( ), count )

************

************
tgt: org . junit . assert . assertequals ( orig . get ( i ) , bin )
[0]: org. junit. assert. assertequals ( new java. util. hashset ( tested ), tested )
[1]: org. junit. assert. assertequals ( expectedsize, count )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, compareint ( key1, key2 ) )
[4]: org. junit. assert. assertequals ( compareint ( key1, key2 ), orderbyvalue. compareint ( key1, val2 ) )

************

************
tgt: org . junit . assert . assertequals ( kv . getfield ( ) , fieldvalue )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( key1 ), compareint ( key2, val1 ) )
[1]: org. junit. assert. assertequals ( 0, compareint ( key1, val2 ) )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( key1 ), compareint ( key2, val1 ) )
[3]: org. junit. assert. assertfalse ( guangdong. notexisted ( ) )
[4]: org. junit. assert. assertequals ( false, guangdong. notexisted ( ) )

************

************
tgt: org . junit . assert . assertequals ( first , firstresult )
[0]: org. junit. assert. assertequals ( true, guangdong. notexisted ( ) )
[1]: org. junit. assert. assertnotnull ( transactionid )
[2]: org. junit. assert. assertequals ( spantransactionid, transactionid )
[3]: org. junit. assert. assertnotnull ( transactionid, transactionid )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , props . size ( ) )
[0]: )
[1]: org. junit. assert. asserttrue ( user. hasmanagerrole ( ) )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( 0, result. length ( ) )
[1]: org. junit. assert. assertequals ( java. lang. string. class, result )
[2]: org. junit. assert. assertequals ( true, result )
[3]: org. junit. assert. assertequals ( false, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertnotnull ( page )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. asserttrue ( result )
[2]: org. junit. assert. assertequals ( 1, uri. getpath ( ). length )
[3]: org. junit. assert. assertequals ( path, uri. getpath ( ) )
[4]: org. junit. assert. assertequals ( guaranteed, uri. getpath ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . apache . oozie . fluentjob . api . action . testdistcpactionbuilder . resource_manager , action . getresourcemanager ( ) )
[0]: org. junit. assert. assertequals ( 1, uri. getpath ( ) )
[1]: org. junit. assert. assertequals ( 1, uri. getpath ( ). length ( ) )
[2]: org. junit. assert. assertequals ( 1, filter. order ( ) )
[3]: org. junit. assert. assertequals ( 1, testfilter. order ( ) )
[4]: org. junit. assert. assertequals ( 1, context. order ( ) )

************

************
tgt: org . junit . assert . assertnull ( f . get ( ) )
[0]: org. junit. assert. assertequals ( 1, testfilterisorderedtobelast ( ) )
[1]: org. junit. assert. assertequals ( 1, task. order ( ) )
[2]: org. junit. assert. assertequals ( jobs, returnjobs )
[3]: org. junit. assert. assertnotnull ( returnjobs )
[4]: org. junit. assert. assertequals ( job, returnjobs )

************

************
tgt: org . junit . assert . assertnotnull ( oncomplete )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( ( - 1 ), result )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( ( - 2 ), result )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( hasdomain )
[0]: org. junit. assert. assertnotnull ( filter. filter ( bundle ) )
[1]: org. junit. assert. assertequals ( filter, filter. filter ( bundle ) )
[2]: org. junit. assert. assertequals ( filter. filter ( bundle ), filter )
[3]: org. junit. assert. assertequals ( filter. filter ( bundle ), true )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( apikey . equals ( secondkey ) )
[0]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )
[1]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. getmessage ( ) )
[2]: org. junit. assert. assertnotnull ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )
[3]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. content ( ) )
[4]: org. junit. assert. assertnull ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( plots . get ( 0 ) ) == plot1 ) )
[0]: org. junit. assert. assertequals ( 200, radetail2. geterrorcode ( ) )
[1]: org. junit. assert. assertequals ( 200, radetail2. size ( ) )
[2]: org. junit. assert. assertequals ( 200, count )
[3]: org. junit. assert. assertequals ( 1, radetail2. geterrorcode ( ) )
[4]: org. junit. assert. assertequals ( 200, response. getstatus ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, resultaat. getmeldingen ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, resultaat. getmeldingen ( ). size ( ) )
[2]: org. junit. assert. asserttrue ( resultaat. getmeldingen ( ). isempty ( ) )
[3]: org. junit. assert. assertnotnull ( resultaat. getmeldingen ( ) )
[4]: org. junit. assert. assertequals ( 1, resultaat. getmeldingen ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( result . contains ( loggingevent . getmessage ( ) . tostring ( ) ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), i18nproviderimpl. gettimezone ( ) )
[1]: org. junit. assert. assertequals ( java. util. optional. empty ( ), i18nproviderimpl. gettimezone ( ) )
[2]: org. junit. assert. assertnotnull ( i18nproviderimpl. gettimezone ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), i18nproviderimpl )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( buffer . length , buffer2 . length )
[0]: org. junit. assert. asserttrue ( merge )
[1]: org. junit. assert. assertequals ( com. github. anno4j. model. impl. state. timestatetest. good_date, result )
[2]: org. junit. assert. assertequals ( com. github. anno4j. model. impl. state. timestatetest. good_date, result. getsourcedatestart )
[3]: org. junit. assert. assertsame ( com. github. anno4j. model. impl. state. timestatetest. good_date, result )
[4]: org. junit. assert. assertnull ( result. getsourcedatestart ( ) )

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertequals ( result, state. getsourcedatestart ( ) )
[1]: org. junit. assert. assertequals ( currenttime, timeslot )
[2]: org. junit. assert. assertnotnull ( timeslot )
[3]: org. junit. assert. assertequals ( 1, timeslot )
[4]: org. junit. assert. assertequals ( 0, timeslot )

************

************
tgt: org . junit . assert . assertequals ( 0 , logrecordlist . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( path, presenter. getconcurrentupdatesessioninfo ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( path ), presenter. getconcurrentupdatesessioninfo ( ) )
[3]: org. junit. assert. assertequals ( null, presenter. getconcurrentupdatesessioninfo ( ) )
[4]: org. junit. assert. assertequals ( path, versionrecordmanager. getconcurrentupdatesessioninfo ( ) )

************

************
tgt: org . junit . assert . asserttrue ( resultaat . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, presenter. getconcurrentupdatesessioninfo ( ) )
[1]: org. junit. assert. assertequals ( ascii, txt )
[2]: org. junit. assert. assertequals ( ascii, txt. ascii ( txt ) )
[3]: org. junit. assert. assertequals ( ascii ( txt ), readoption. update )
[4]: org. junit. assert. assertequals ( ascii ( txt ), writeoption. update )

************

************
tgt: org . junit . assert . assertequals ( bufferread . get ( i ) , bufferwrite . get ( i ) )
[0]: org. junit. assert. assertnotnull ( txt )
[1]: org. junit. assert. assertequals ( 1, score )
[2]: org. junit. assert. assertequals ( 0, score )
[3]: org. junit. assert. assertequals ( score, 1 )
[4]: org. junit. assert. assertequals ( 3, score )

************

************
tgt: org . junit . assert . assertequals ( expectedcontainers , actualcontainers )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, m. numberofstudents ( ) )
[2]: org. junit. assert. assertequals ( 0, m. numberofstudents ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. size ( ), m. numberofstudents ( ) )
[4]: org. junit. assert. assertequals ( allstudents. length, m. numberofstudents ( ) )

************

************
tgt: org . junit . assert . assertequals ( varvalue , result . tostring ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( allstudents ), m. numberofstudents )
[1]: org. junit. assert. assertequals ( 1, count. get ( ) )
[2]: org. junit. assert. assertequals ( 3, uuid. length ( ) )
[3]: org. junit. assert. assertequals ( 2, uuid. length ( ) )
[4]: org. junit. assert. assertequals ( 1, rawcells. length )

************

************
tgt: org . junit . assert . assertequals ( 2 , m . size ( ) )
[0]: org. junit. assert. assertequals ( 0, rawcells. length )
[1]: org. junit. assert. assertequals ( rawcells. length, 0 )
[2]: org. junit. assert. assertequals ( rawcells. length, 1 )
[3]: org. junit. assert. assertequals ( rawcells. length, org. apache. hadoop )
[4]: org. junit. assert. assertnotnull ( search. getlookupkey ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , entryarray . length ( ) )
[0]: org. junit. assert. assertnotnull ( key. getlookupkey ( ) )
[1]: org. junit. assert. assertequals ( search. getlookupkey ( ), key )
[2]: org. junit. assert. assertnull ( search. getlookupkey ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, attributes. permissions ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( exceptionthrown )
[0]: org. junit. assert. assertequals ( 0, attributes. permissions ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1l, attributes. permissions ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 2, attributes. permissions ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 3, attributes. permissions ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertequals ( 100 , headers . getlongheader ( "content-length" , ( - 1 ) ) )
[0]: org. junit. assert. assertequals ( result, ebxml )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( result, result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( 1, notes. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( postings , postingscopy )
[0]: org. junit. assert. assertequals ( 0, notes. size ( ) )
[1]: org. junit. assert. assertequals ( 1, note. size ( ) )
[2]: org. junit. assert. assertequals ( 3, notes. size ( ) )
[3]: org. junit. assert. assertequals ( 1, children [ 0 ]. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, children [ 0 ]. getindex ( ) )

************

************
tgt: org . junit . assert . assertequals ( "1.2.3.4" , preferences . get ( "developer<sp>tools" , "proxy<sp>host" ) . getvalue ( ) )
[0]: org. junit. assert. assertequals ( 1, children [ 0 ]. getid ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertnotnull ( st )
[4]: org. junit. assert. assertequals ( firsttry, st )

************

************
tgt: org . junit . assert . asserttrue ( ( ( search . probabilityofacceptance ( lowertemperature , deltae ) ) < ( search . probabilityofacceptance ( highertemperature , deltae ) ) ) )
[0]: org. junit. assert. assertequals ( secondtry, st )
[1]: org. junit. assert. assertnull ( st )
[2]: ) )
[3]: org. junit. assert. assertequals ( useragentversion, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( true , result )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( useragentversion, returned )
[2]: org. junit. assert. assertequals ( useragentversion, results )
[3]: org. junit. assert. assertnotnull ( leasecopy. renewlease ( leasecopy ) )
[4]: org. junit. assert. assertnotnull ( renewlease ( leasecopy ) )

************

************
tgt: org . junit . assert . assertequals ( 99 , set . iterator ( ) . next ( ) . value )
[0]: org. junit. assert. assertnotnull ( leasecopy )
[1]: org. junit. assert. assertnotnull ( leaserefresher )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( node )
[4]: org. junit. assert. assertnotnull ( node. attribute ( ) )

************

************
tgt: org . junit . assert . assertequals ( 15 , set . getlength ( ) )
[0]: org. junit. assert. assertnotnull ( node. attribute ( 0 ) )
[1]: org. junit. assert. assertnotnull ( node. attribute ( 1 ) )
[2]: org. junit. assert. assertnotnull ( node. attribute ( null ) )
[3]: org. junit. assert. assertequals ( 1, obj. getcharcontent ( true ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, obj. getcharcontent ( true ). size ( ) )

************

************
tgt: org . junit . assert . assertnull ( readdata )
[0]: org. junit. assert. assertequals ( null, obj. getcharcontent ( true ) )
[1]: org. junit. assert. assertequals ( 0, obj. getcharcontent ( true ). length )
[2]: type ) )
[3]: org. junit. assert. assertnotnull ( message. getsource ( ) )
[4]: org. junit. assert. assertequals ( 1, message. getsource ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( result , 10 )
[0]: org. junit. assert. assertequals ( null, message. getsource ( ) )
[1]: org. junit. assert. assertnull ( message. getsource ( ) )
[2]: org. junit. assert. assertequals ( java. util. optional. of ( 1 ), message )
[3]: org. junit. assert. asserttrue ( target. iswcinport ( ) )
[4]: org. junit. assert. assertnotnull ( target. iswcinport ( ) )

************

************
tgt: org . junit . assert . asserttrue ( innercache2 . willget ( path ) )
[0]: org. junit. assert. assertequals ( 1, target. iswcinport ( ) )
[1]: org. junit. assert. assertfalse ( target. iswcinport ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, directory. size ( ) )
[4]: org. junit. assert. assertequals ( 0, directory. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( i - 1 ) , ret )
[0]: org. junit. assert. assertequals ( 3, directory. size ( ) )
[1]: org. junit. assert. assertequals ( 1, dir. size ( ) )
[2]: org. junit. assert. assertequals ( 5, directory. size ( ) )
[3]: org. junit. assert. assertnotnull ( org. patientview. radar. util. radarutility. isnhsnumbervalid ( validcode ) )
[4]: org. junit. assert. assertnull ( org. patientview. radar. util. radarutility. isnhsnumbervalid ( validcode ) )

************

************
tgt: org . junit . assert . assertequals ( index . size ( ) , 1 )
[0]: org. junit. assert. assertequals ( 1, org. patientview. radar. util. radarutility. isnhsnumbervalid ( validcode ) )
[1]: org. junit. assert. assertequals ( null, org. patientview. radar. util. radarutility. isnhsnumbervalid ( validcode ) )
[2]: org. junit. assert. assertequals ( 0, org. patientview. radar. util. radarutility. isnhsnumbervalid ( validcode ) )
[3]: org. junit. assert. assertequals ( result, future. get ( ) )
[4]: org. junit. assert. assertequals ( 1, result. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedname , actualname )
[0]: org. junit. assert. assertequals ( 1, future. get ( ) )
[1]: org. junit. assert. assertnull ( future. get ( ) )
[2]: get ( ) )
[3]: org. junit. assert. assertequals ( 1l, value )
[4]: org. junit. assert. assertequals ( 1, value )

************

************
tgt: org . junit . assert . asserttrue ( dlfileversions . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0l, value )
[1]: org. junit. assert. assertequals ( 0, value )
[2]: org. junit. assert. assertequals ( 1l, value, 0 )
[3]: org. junit. assert. assertnotnull ( concept. getname ( localetosearch, false ) )
[4]: org. junit. assert. assertnull ( concept. getname ( localetosearch, false ) )

************

************
tgt: org . junit . assert . assertequals ( "billy2" , billy . get ( ) )
[0]: org. junit. assert. assertnotnull ( concept. getname ( localetosearch, true ) )
[1]: org. junit. assert. assertnull ( concept. getname ( localetosearch, true ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, parser. getfoo ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, builder. getfoo ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( mock . apply ( ) , is ( "hello,<sp>world!" ) )
[0]: org. junit. assert. assertequals ( 1, msg. getfoo ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, ident_1. getfoo ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, org. jboss. weld. tests. resolution. named )
[3]: org. junit. assert. assertequals ( 1, votenantsettings. size ( ) )
[4]: org. junit. assert. assertequals ( 0, votenantsettings. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , nuoftype1vehicles )
[0]: org. junit. assert. assertequals ( 3, votenantsettings. size ( ) )
[1]: org. junit. assert. assertequals ( 2, votenantsettings. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( action )
[4]: org. junit. assert. assertnotnull ( createddataset. getname ( ) )

************

************
tgt: org . junit . assert . assertthat ( list . size ( ) , org . hamcrest . corematchers . is ( 4 ) )
[0]: org. junit. assert. assertequals ( dataset, createddataset )
[1]: org. junit. assert. assertnotnull ( createddataset )
[2]: org. junit. assert. assertequals ( dataset. getname ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( list )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 1, org. openkilda. persistence. repositories. impl. neo4jislrepositorytest. islrepository. findsymmetricactivewithavailablebandwidth ( availablebandwidth ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, selectordata. getvalues ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, selectordata. getvalues ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), selectordata. getvalues ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( selectordata ), tested )

************

************
tgt: org . junit . assert . assertnotnull ( groupbyclause )
[0]: org. junit. assert. assertnotnull ( selectordata. getvalues ( ) )
[1]: org. junit. assert. assertarrayequals ( digest1, digest2 )
[2]: org. junit. assert. assertequals ( datatosign1, digest2 )
[3]: org. junit. assert. assertnotnull ( digest1 )
[4]: org. junit. assert. assertnotnull ( digest1, digest2 )

************

************
tgt: org . junit . assert . asserttrue ( list . isempty ( ) )
[0]: )
[1]: org. junit. assert. asserttrue ( result )
[2]: org. junit. assert. assertequals ( true, result )
[3]: org. junit. assert. assertequals ( false, result )
[4]: org. junit. assert. assertnull ( servlet )

************

************
tgt: org . junit . assert . assertequals ( expectation , result )
[0]: org. junit. assert. assertnotnull ( source )
[1]: org. junit. assert. assertnull ( source )
[2]: org. junit. assert. assertequals ( 1, source. length )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( 0 , value . length )
[0]: org. junit. assert. assertequals ( com. sun. sgs. test. impl. service. data. testdataserviceimpl. service. createreference ( x ). getid ( ), y. getid ( ) )
[1]: org. junit. assert. assertequals ( com. sun. sgs. test. impl. service. data. testdataserviceimpl. service. createreference ( x ). getid ( ), com. sun. sgs. test. impl. service. data. testdataserviceimpl. service. createreference ( y ). getid ( ) )
[2]: org. junit. assert. assertequals ( com. sun. sgs. test. impl. service. data. testdataserviceimpl. service. createreference ( x ). tostring ( ), com. sun. sgs. test. impl. service. data. testdataserviceimpl. service. createreference ( y ). tostring ( ) )
[3]: org. junit. assert. assertequals ( com. sun. sgs. test. impl. service. data. testdataserviceimpl. service. createreference ( x ). equals ( com. sun. sgs. test. impl. service. data. testdataserviceimpl. service. createreference ( y ) ), false )
[4]: org. junit. assert. assertequals ( com. sun. sgs. test. impl. service. data. testdataserviceimpl. service. createreference ( x ). equals ( com. sun. sgs. test. impl. service. data. testdataserviceimpl. service. createreference ( y ) ), true )

************

************
tgt: org . junit . assert . assertequals ( 10 , order . getprice ( ) )
[0]: org. junit. assert. assertequals ( 1, firstkpldouble. size ( ) )
[1]: org. junit. assert. assertequals ( 0, firstkpldouble. size ( ) )
[2]: org. junit. assert. assertequals ( firstkpldouble, firstkpldouble. size ( ) )
[3]: org. junit. assert. assertequals ( firstkpldouble. size ( ), firstkpldouble. length )
[4]: org. junit. assert. assertequals ( 3, firstkpldouble. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( browser . ispresent ( ) )
[0]: org. junit. assert. assertequals ( 1, filter. test ( null ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, filter. test ( null ) )
[2]: org. junit. assert. assertequals ( 0, filter. test ( null ). size ( ) )
[3]: org. junit. assert. assertnotnull ( filter. test ( null ) )
[4]: org. junit. assert. assertequals ( 2, filter. test ( null ). size ( ) )

************

************
tgt: org . junit . assert . assertnull ( edu . harvard . iq . dataverse . dataset . datasetutil . persistdatasetlogotostorageandcreatethumbnail ( null , null ) )
[0]: org. junit. assert. assertnotnull ( forest. getroot ( n ) )
[1]: org. junit. assert. assertnotnull ( forest. getroot ( 1 ) )
[2]: org. junit. assert. assertnotnull ( forest. getroot ( 0 ) )
[3]: org. junit. assert. assertnotnull ( forest )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( org . oscm . serviceprovisioningservice . bean . productsearchtest . restriction_category , actual )
[0]: org. junit. assert. assertnotnull ( collection )
[1]: org. junit. assert. assertnotnull ( collection. isempty ( ) )
[2]: org. junit. assert. assertnotnull ( collection. collection ( ) )
[3]: org. junit. assert. assertnotnull ( collection. size ( ) )
[4]: org. junit. assert. assertnotnull ( handler. collection )

************

************
tgt: org . junit . assert . asserttrue ( pagelist . tryexclusivelock ( pageref ) )
[0]: org. junit. assert. asserttrue ( elector. getactivedata ( ) )
[1]: org. junit. assert. assertnotnull ( elector. getactivedata ( ) )
[2]: org. junit. assert. asserttrue ( elector. isempty ( ) )
[3]: org. junit. assert. asserttrue ( elector. getexitcode ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( actual , expected )
[0]: org. junit. assert. assertequals ( result, buffer )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( sample, result )
[4]: org. junit. assert. assertequals ( sample. trim ( ), result )

************

************
tgt: org . junit . assert . asserttrue ( matchlength )
[0]: org. junit. assert. assertequals ( sample. tolowercase ( ), result )
[1]: org. junit. assert. assertequals ( result, sample )
[2]: org. junit. assert. assertequals ( samples, result )
[3]: org. junit. assert. assertnull ( projectinfo. getfullname ( ) )
[4]: org. junit. assert. assertnull ( metastore. getgroupid ( projectinfo ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , read )
[0]: org. junit. assert. assertnull ( metastore. getfullname ( projectinfo ) )
[1]: org. junit. assert. assertnull ( metastore. getgroupid ( null ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, fsaction. getdeletes ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), fsaction. getdeletes ( ) )

************

************
tgt: org . junit . assert . assertfalse ( subject . controleer ( new nl . bzk . migratiebrp . synchronisatie . runtime . service . synchronisatie . verwerker . context . verwerkingscontext ( null , null , null , null ) ) )
[0]: org. junit. assert. assertequals ( java. util. collections. < org. apache. oozie. fluentjob. api. action. testfsactionbuilder. deletes ), fsaction. getdeletes ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), fsaction. getdeletes ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), fsaction. getdeletes ( ). get ( 0 ) )
[3]: org. junit. assert. assertnotnull ( transformer. transform ( inputstream ) )
[4]: org. junit. assert. assertnotnull ( transform ( inputstream ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , fixture . readbyte ( ) )
[0]: org. junit. assert. assertnotnull ( reader. transform ( inputstream ) )
[1]: org. junit. assert. assertnotnull ( reader. transform ( inputstream. tostring ( ) ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0l, castedelement. getlong ( ) )
[4]: org. junit. assert. assertequals ( 0, castedelement. getlong ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( watch . getstarttime ( ) ) >= beforestopwatch ) )
[0]: org. junit. assert. assertnull ( castedelement. getlong ( ) )
[1]: org. junit. assert. assertequals ( null, castedelement. getlong ( ) )
[2]: org. junit. assert. assertequals ( 0, castedelement. getlong ( ). size ( ) )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertthat ( result, is ( equalto ( expected ) ) )

************

************
tgt: org . junit . assert . assertequals ( true , ( ( resulta . compareto ( resultb ) ) < 0 ) )
[0]: org. junit. assert. assertequals ( 1, args. next ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, args. next ( ). length )
[2]: org. junit. assert. assertequals ( 0, args. next ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, args. next ( ) )
[4]: org. junit. assert. assertequals ( 0, args. next ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 0 , instance . getinfocachesize ( ) )
[0]: org. junit. assert. assertequals ( dest, victim. topagedestination ( catalog, catalog ) )
[1]: org. junit. assert. assertequals ( dest, victim. topagedestination ( null, catalog ) )
[2]: org. junit. assert. assertequals ( dest, victim. topagedestination ( dest, catalog ) )
[3]: org. junit. assert. assertequals ( dest, victim. topagedestination ( catalog, null ) )
[4]: org. junit. assert. assertequals ( dest )

************

************
tgt: org . junit . assert . assertequals ( network , com . googlecode . ipv6 . ipv6network . fromstring ( network . tostring ( ) ) )
[0]: org. junit. assert. assertnotnull ( parser. gotanyheader ( ) )
[1]: org. junit. assert. assertequals ( 1, parser. gotanyheader ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, parser. gotanyheader ( ). size ( ) )
[3]: org. junit. assert. assertnull ( parser. gotanyheader ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( dbms . getaveragelengthwithblankrows ( ) )
[0]: org. junit. assert. assertequals ( testconstants. valid_deliverer_name, mockvalid. getname ( ) )
[1]: org. junit. assert. asserttrue ( resolver. findwildcardmatch ( multitargetlocation, singlelocation ). isempty ( ) )
[2]: org. junit. assert. asserttrue ( resolver. findwildcardmatch ( multitargetlocation, resolver ). isempty ( ) )
[3]: org. junit. assert. asserttrue ( resolver. findwildcardmatch ( multitargetlocation, singlelocation ) )
[4]: org. junit. assert. asserttrue ( resolver. findwildcardmatch ( multitargetlocation, null ). isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( data . get ( i ) , reconstructed . get ( i ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( s )
[2]: org. junit. assert. assertnotnull ( queue )
[3]: org. junit. assert. assertnotnull ( collection )
[4]: org. junit. assert. assertnotnull ( context )

************

************
tgt: org . junit . assert . assertthat ( errors . getall ( ) )
[0]: org. junit. assert. assertnotnull ( s. collection )
[1]: org. junit. assert. assertarrayequals ( expectedresults, data )
[2]: org. junit. assert. assertarrayequals ( expectedresults, actualresults )
[3]: org. junit. assert. assertarrayequals ( expectedresults, result )
[4]: org. junit. assert. assertnotnull ( internalfact. getobject ( ) )

************

************
tgt: org . junit . assert . assertequals ( noofelements , sum )
[0]: org. junit. assert. assertequals ( 1, internalfact. getobject ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, internalfact. getobject ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, internalfact. getobject ( ) )
[3]: org. junit. assert. assertequals ( 1, internalfact. getobject ( ). getid ( ) )
[4]: org. junit. assert. assertequals ( 1, computer. calculatvalues ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( order . getorderfee ( ) , io . pivotal . springtrader . portfolio . servicetestconfiguration . order ( ) . getorderfee ( ) )
[0]: org. junit. assert. assertequals ( 1, computer. run ( context ) )
[1]: org. junit. assert. assertequals ( 1, computer. stderr ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, computer. run ( context ) )
[3]: org. junit. assert. assertequals ( 1, computer. calculatvalues ( ). length )
[4]: org. junit. assert. assertequals ( 1, splitsample. estimatesourcesize ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( "error" , e . getmessage ( ) )
[0]: org. junit. assert. assertequals ( 0, splitsample. estimatesourcesize ( 1 ) )
[1]: org. junit. assert. assertequals ( 0, splitsample. estimatesourcesize ( 1l ) )
[2]: org. junit. assert. assertequals ( 1, splitsample. estimatesourcesize ( 1l ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( set1, set1 )

************

************
tgt: org . junit . assert . assertnotnull ( resp )
[0]: org. junit. assert. assertequals ( set1, set2 )
[1]: org. junit. assert. asserttrue ( e. iscancelled ( ) )
[2]: org. junit. assert. assertequals ( e. iscancelled ( ), true )
[3]: org. junit. assert. assertequals ( e. iscancelled ( ), false )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), actual )

************

************
tgt: org . junit . assert . assertfalse ( org . apache . tinkerpop . gremlin . structure . util . elementhelper . areequal ( ( ( org . apache . tinkerpop . gremlin . structure . element ) ( null ) ) , v ) )
[0]: org. junit. assert. assertequals ( emptylist ( ), actual )
[1]: org. junit. assert. assertequals ( 1.0, testresult, 0.0 )
[2]: org. junit. assert. assertequals ( 1, testresult, 0.0 )
[3]: org. junit. assert. assertequals ( 0.0, testresult, 0.0 )
[4]: org. junit. assert. assertequals ( 1, testresult, 0 )

************

************
tgt: org . junit . assert . asserttrue ( ( ( ( value0 . intvalue ( ) ) * ( value1 . intvalue ( ) ) ) > ( value2 . intvalue ( ) ) ) )
[0]: org. junit. assert. assertequals ( 0, testresult, 0.0 )
[1]: org. junit. assert. assertequals ( org. apache. oozie. fluentjob. api. action. testfsactionbuilder. moves, fsaction. getmoves ( ) )
[2]: org. junit. assert. assertequals ( org. apache. oozie. fluentjob. api. action. testfsactionbuilder. moves, fsaction. getmoves ( ). get ( 0 ) )
[3]: org. junit. assert. assertequals ( list ( org. apache. oozie. fluentjob. api. action. testfsactionbuilder. moves ), fsaction. getmoves ( ) )
[4]: org. junit. assert. assertequals ( org. apache. oozie. fluentjob. api. action. testfsactionbuilder. moves, fsaction. getmoves ( ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, fsaction. getmoves ( ). size ( ) )
[1]: org. junit. assert. assertequals ( initlength, jq ( 1 ). length ( ) )
[2]: org. junit. assert. assertequals ( initlength, jq ( 0 ). length ( ) )
[3]: org. junit. assert. assertequals ( 1, jq ( initlength ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( uidescriptor )
[0]: )
[1]: org. junit. assert. assertequals ( expected, result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( result, expected )
[4]: org. junit. assert. assertequals ( result, null )

************

************
tgt: org . junit . assert . assertnotnull ( custom )
[0]: org. junit. assert. assertequals ( result, result )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 0, result. size ( ) )
[3]: org. junit. assert. assertequals ( result. size ( ), 1 )
[4]: org. junit. assert. assertequals ( 2, result. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( matcherwithtwotransformation . match ( mockerrortype ) , org . hamcrest . matchers . is ( false ) )
[0]: the size ( ) )
[1]: org. junit. assert. assertequals ( 0, data. size ( ) )
[2]: org. junit. assert. assertequals ( 7, data. size ( ) )
[3]: org. junit. assert. assertequals ( 1, data. size ( ) )
[4]: org. junit. assert. assertequals ( 2, data. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( gip . hasitemchanged ( g1 , g2 ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( metadatadom )
[2]: org. junit. assert. assertnotnull ( pre )
[3]: org. junit. assert. assertequals ( 1, fields. length )
[4]: org. junit. assert. asserttrue ( ( ( fields. length ) == 1 ) )

************

************
tgt: org . junit . assert . assertfalse ( type . equals ( new java . lang . object ( ) ) )
[0]: org. junit. assert. assertequals ( 0, fields. length )
[1]: org. junit. assert. asserttrue ( ( ( fields. length ) >= 1 ) )
[2]: org. junit. assert. assertnotnull ( fields )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( pipedemo. status, result )

************

************
tgt: org . junit . assert . assertnotnull ( order )
[0]: org. junit. assert. assertequals ( result, pipedemo. status )
[1]: org. junit. assert. assertequals ( query, result )
[2]: org. junit. assert. assertequals ( result, wfdemo. status )
[3]: org. junit. assert. assertequals ( ( ( long ) ( filesize ) ), ecs. get ( ) )
[4]: org. junit. assert. assertequals ( ( ( long ) ( filesize ) ), ecs. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( state . isalarm ( ) )
[0]: org. junit. assert. assertequals ( ( ( long ) ( filesize ) ), ecs. next ( ) )
[1]: org. junit. assert. assertequals ( ecs. get ( ), true )
[2]: org. junit. assert. assertequals ( ecs. size ( ), size )
[3]: org. junit. assert. assertnull ( field. get ( clonedsnapshot ) )
[4]: org. junit. assert. assertnull ( field. newinstance ( ) )

************

************
tgt: org . junit . assert . assertnull ( engine )
[0]: org. junit. assert. assertnull ( field. gettype ( ) )
[1]: org. junit. assert. assertsame ( snapshot, field. getproperties ( ) )
[2]: org. junit. assert. assertnull ( field. invoke ( snapshot ) )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, results. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . baeldung . easymock . illegalargumentexception . class , expectedexception . getclass ( ) )
[0]: org. junit. assert. assertequals ( 3, results. size ( ) )
[1]: org. junit. assert. assertequals ( 3, result. size ( ) )
[2]: org. junit. assert. assertequals ( 1, contentsodatatype. size ( )
[3]: org. junit. assert. assertfalse ( user. isunitadministrator ( ) )
[4]: org. junit. assert. assertequals ( window, context )

************

************
tgt: org . junit . assert . asserttrue ( bufferedimagesequal ( bi1 , bi2 ) )
[0]: org. junit. assert. assertequals ( windows, context )
[1]: org. junit. assert. assertnotnull ( context )
[2]: org. junit. assert. assertsame ( window, context )
[3]: org. junit. assert. assertequals ( window, context. window )
[4]: org. junit. assert. assertequals ( 1, changedservice. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , sat . size ( ) )
[0]: org. junit. assert. assertequals ( 0, changedservice. size ( ) )
[1]: org. junit. assert. assertequals ( 2, changedservice. size ( ) )
[2]: org. junit. assert. assertthat ( rs. size ( ), org. hamcrest. corematchers. is ( 0 ) )
[3]: org. junit. assert. assertthat ( rs. size ( ), org. hamcrest. corematchers. is ( java. util. collections. emptylist ( ) ) )
[4]: org. junit. assert. assertthat ( rs. values ( ). size ( ), org. hamcrest. corematchers. is ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( items . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertthat ( rs. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertequals ( 0, rs. size ( ) )
[2]: org. junit. assert. assertnotnull ( gera. token ( ) )
[3]: org. junit. assert. assertnotnull ( gera )
[4]: org. junit. assert. assertnotnull ( gera. tokens ( ) )

************

************
tgt: org . junit . assert . assertthat ( volume . get ( ) , org . hamcrest . matchers . is ( org . onosproject . net . resource . discreteresourcetest . d1 ) )
[0]: org. junit. assert. assertnotnull ( gera. token ( ). tostring ( ) )
[1]: org. junit. assert. assertnotnull ( gmintcash )
[2]: org. junit. assert. assertequals ( s, map. get ( i ) )
[3]: org. junit. assert. assertequals ( s, map. tostring ( ) )
[4]: org. junit. assert. assertequals ( s, map. get ( s ) )

************

************
tgt: org . junit . assert . assertequals ( anno4j . findall ( com . github . anno4j . model . impl . resourceobject . class ) . size ( ) , 3 )
[0]: org. junit. assert. assertequals ( s, map. tostring ( i ) )
[1]: org. junit. assert. assertequals ( s, s )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. assertequals ( result, expected )
[4]: org. junit. assert. assertarrayequals ( expected. toarray ( ), result )

************

************
tgt: org . junit . assert . assertequals ( nc , provider . getnamedclusterbyname ( ncname , null ) )
[0]: org. junit. assert. assertequals ( expected, results )
[1]: ) )
[2]: org. junit. assert. assertequals ( expectedtostring, query. getquery ( ) )
[3]: org. junit. assert. assertequals ( expectedtostring, query. getquery ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( expectedtostring, query. getquery ( ). trim ( ) )

************

************
tgt: org . junit . assert . asserttrue ( org . picketlink . identity . federation . core . saml . v2 . util . assertionutil . hasexpired ( assertion ) )
[0]: org. junit. assert. assertequals ( expectedtostring, queries. getquery ( ) )
[1]: org. junit. assert. assertequals ( expectedtostring, query. getquery ( ). get ( ) )
[2]: org. junit. assert. assertequals ( false, out. firstelement ( ). get ( ) )
[3]: org. junit. assert. assertfalse ( result )
[4]: org. junit. assert. asserttrue ( result )

************

************
tgt: org . junit . assert . assertequals ( unquotedstring , ocsvtransformer . getcellcontent ( singlequotedstring ) )
[0]: org. junit. assert. assertnull ( result )
[1]: , result )
[2]: ) )
[3]: org. junit. assert. assertequals ( encs. size ( ), ( originallength - 1 ) )
[4]: org. junit. assert. assertequals ( encs2. size ( ), originallength )

************

************
tgt: org . junit . assert . assertnull ( wrapper . gettitle ( ) )
[0]: org. junit. assert. assertequals ( encs. size ( ), originallength )
[1]: org. junit. assert. assertequals ( encs. size ( ), ( originallength + 1 ) )
[2]: org. junit. assert. assertequals ( encs, originallength )
[3]: org. junit. assert. assertequals ( metric, registry. addifabsent ( id, metric ) )
[4]: org. junit. assert. assertequals ( metric, registry. addifabsent ( id, metric2 ) )

************

************
tgt: org . junit . assert . assertnotnull ( message )
[0]: org. junit. assert. assertequals ( 0, com. gisgraphy. importer. importerhelper. listgisfiles ( null ). length )
[1]: org. junit. assert. assertnull ( com. gisgraphy. importer. importerhelper. listgisfiles ( null ) )
[2]: org. junit. assert. assertnotnull ( com. gisgraphy. importer. importerhelper. listgisfiles ( null ) )
[3]: org. junit. assert. asserttrue ( com. gisgraphy. importer. importerhelper. listgisfiles ( null ). isempty ( ) )
[4]: org. junit. assert. assertequals ( 0, com. gisgraphy. importer. importerhelper. listgisfiles ( guaranteed ). length )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertnotnull ( command )
[1]: org. junit. assert. assertequals ( null, command )
[2]: org. junit. assert. assertequals ( msg, command )
[3]: , command )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , gcoperations . length )
[0]: org. junit. assert. assertnotnull ( pr. getpath ( ) )
[1]: org. junit. assert. assertequals ( cachedpaths, pr. getpath ( ) )
[2]: org. junit. assert. assertequals ( pr. getpath ( ), pr. getpath ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( connection . isactive ( ) )
[0]: org. junit. assert. assertthat ( datumtijdeindeformeleperioderesultaat, org. hamcrest. corematchers. is ( datumtijdklaarzettenbericht ) )
[1]: org. junit. assert. assertnotnull ( datumtijdeindeformeleperioderesultaat )
[2]: org. junit. assert. assertequals ( datumtijdeindeformeleperioderesultaat, datumtijdklaarzettenbericht )
[3]: org. junit. assert. assertthat ( datumtijdeindeformeleperioderesultaat. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[4]: org. junit. assert. assertthat ( datumtijdeindeformeleperioderesultaat, org. hamcrest. corematchers. is ( datumtijdklaarzetabsbericht ) )

************

************
tgt: org . junit . assert . asserttrue ( b . get ( ) )
[0]: org. junit. assert. asserttrue ( key1. equals ( key2 ) )
[1]: org. junit. assert. assertequals ( null, controllercapture. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 0, controllercapture. getvalue ( ). size ( ) )
[3]: org. junit. assert. assertequals ( null, controllercapture. get ( ) )
[4]: org. junit. assert. assertequals ( 0, controllercapture. getvalue ( ) )

************

************
tgt: org . junit . assert . assertfalse ( iterator . hasnext ( ) )
[0]: org. junit. assert. assertequals ( 0, controllercapture. get ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 9, n. getsize ( ) )
[2]: org. junit. assert. assertequals ( 9, n. getsize ( ). length )
[3]: org. junit. assert. assertequals ( 9, n. getsize ( ), 0 )
[4]: org. junit. assert. assertequals ( 930, n. getsize ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , identity )
[0]: org. junit. assert. assertequals ( 9999, n. getsize ( ) )
[1]: org. junit. assert. assertnotnull ( book )
[2]: org. junit. assert. assertequals ( book, book )
[3]: org. junit. assert. assertnotnull ( book. encode ( ) )
[4]: org. junit. assert. assertequals ( book, createdenum )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( book, enumname )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( ""foo"", result )

************

************
tgt: org . junit . assert . assertthat ( notification . isnotificationneeded ( ) , equalto ( false ) )
[0]: org. junit. assert. assertequals ( ""a"", result )
[1]: org. junit. assert. assertequals ( input, found )
[2]: org. junit. assert. assertequals ( com. google. common. collect. immutablemap. of ( key, value ), lists. iterator ( ). next ( ). get ( 0 ) )
[3]: org. junit. assert. assertequals ( com. google. common. collect. immutablemap. of ( key, value ), lists. iterator ( ). next ( ). get ( 1 ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( value ), lists. iterator ( ). next ( ). get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( webelements , allelementslocated )
[0]: org. junit. assert. assertequals ( com. google. common. collect. immutablemap. of ( key, value ), lists. iterator ( ). next ( ) )
[1]: org. junit. assert. assertequals ( com. google. common. collect. immutablemap. of ( key, value, msg. iterator ( ). next ( ) ), lists. iterator ( ) )
[2]: org. junit. assert. assertequals ( updateduser, user )
[3]: org. junit. assert. assertequals ( updateduser, updateduser )
[4]: org. junit. assert. assertequals ( productata, updateduser )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( prodata, updateduser )
[1]: org. junit. assert. assertequals ( updateduser, updateduser )
[2]: org. junit. assert. assertequals ( 1, results. size ( ) )
[3]: org. junit. assert. assertequals ( ocantype1, cdsantype2 )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertnotnull ( ct )
[0]: org. junit. assert. assertequals ( ocantype1, cdsformversion2 )
[1]: org. junit. assert. assertequals ( expected, results )
[2]: org. junit. assert. assertequals ( expectedstr, result )
[3]: org. junit. assert. assertequals ( expectedstr, library )
[4]: org. junit. assert. assertequals ( expectedstr, library. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( expectedstr, seg )
[1]: org. junit. assert. assertequals ( expectedstr, seg. tostring ( ) )
[2]: org. junit. assert. assertequals ( 1, message. getoperationcount ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( randombytes ), address. tobytearray ( ) )
[4]: org. junit. assert. assertequals ( 0, address. tobytearray ( ). length )

************

************
tgt: org . junit . assert . assertsame ( samplehandler , challengehandler )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ntests ), address. tobytearray ( ) )
[1]: org. junit. assert. assertarrayequals ( new byte [ ] { ntests, ntests }, address. tobytearray ( ) )
[2]: org. junit. assert. assertequals ( ntests, address. tobytearray ( ). length )
[3]: org. junit. assert. assertequals ( 10, result )
[4]: org. junit. assert. assertequals ( result, 10 )

************

************
tgt: org . junit . assert . assertequals ( value , message . getchar ( itemname ) )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertequals ( 0, result )
[2]: , result )
[3]: org. junit. assert. asserttrue ( check )
[4]: org. junit. assert. assertequals ( true, iskeyentity )

************

************
tgt: org . junit . assert . assertnull ( s . getenablecounting ( ) )
[0]: org. junit. assert. assertnotnull ( credentials. getaccount ( ) )
[1]: org. junit. assert. asserttrue ( credentials. getaccount ( ) )
[2]: org. junit. assert. assertnull ( credentials. getaccount ( ) )
[3]: org. junit. assert. assertnotnull ( credentials )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expectedconfiguration , config . asorderedproperties ( ) )
[0]: org. junit. assert. assertnotnull ( principal. getsessionhandler ( ) )
[1]: org. junit. assert. assertequals ( 1, principal. getsessionhandler ( ). size ( ) )
[2]: org. junit. assert. assertequals ( principal, authentication. getsessionhandler ( ) )
[3]: org. junit. assert. assertequals ( com. streamsets. lib. security. http. testdisconnectedauthentication )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . integer . valueof ( 0 ) , result )
[0]: org. junit. assert. assertequals ( 1, mytest. getconnectioncount ( ) )
[1]: org. junit. assert. assertequals ( 0, mytest. getconnectioncount ( ) )
[2]: org. junit. assert. assertnotnull ( strategy. getconnectioncount ( ) )
[3]: org. junit. assert. assertnotnull ( mytest. getconnectioncount ( ) )
[4]: org. junit. assert. assertequals ( 1, mytest. getconnectioncount )

************

************
tgt: org . junit . assert . assertequals ( decrypted , message )
[0]: org. junit. assert. assertnotnull ( handler. paramvalue )
[1]: org. junit. assert. assertnotnull ( handler )
[2]: org. junit. assert. assertnotnull ( handler, paramvalue )
[3]: org. junit. assert. assertnotnull ( handler. paramvalue )
[4]: org. junit. assert. assertnotnull ( handler = paramvalue )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . matchers . is ( org . hamcrest . matchers . equalto ( expected ) ) )
[0]: org. junit. assert. asserttrue ( datawave. query. jexl. visitors. hastoplevelnegationvisitor. hastoplevelnegation ( script ) )
[1]: org. junit. assert. assertnotnull ( datawave. query. jexl. visitors. hastoplevelnegationvisitor. hastoplevelnegation ( script ) )
[2]: org. junit. assert. assertnotnull ( script. hastoplevelnegation ( script ) )
[3]: org. junit. assert. asserttrue ( datawave. query. jexl. visitors. hastoplevelnegationvisitor. hastoplevelneget ( script ) )
[4]: org. junit. assert. asserttrue ( datawave. query. jexl. visitors. hastoplevelnegationvisitor ( script ) )

************

************
tgt: org . junit . assert . assertfalse ( isrelated )
[0]: org. junit. assert. assertequals ( classname, viewentityentity. getclassname ( ) )
[1]: org. junit. assert. assertequals ( class, viewentityentity. getclassname ( ) )
[2]: org. junit. assert. assertequals ( name, viewentityentity. getclassname ( ) )
[3]: org. junit. assert. assertnotnull ( viewentityentity. getclassname ( ) )
[4]: type ) )

************

************
tgt: org . junit . assert . asserttrue ( ws . isbound ( ) )
[0]: org. junit. assert. assertequals ( 0, result )
[1]: org. junit. assert. assertequals ( 7, result )
[2]: org. junit. assert. assertequals ( mvnormal. density ( i ), mscores [ i ], 0 )
[3]: org. junit. assert. assertequals ( mvnormal. density ( i ), mscores [ i ], 0.0 )
[4]: org. junit. assert. assertequals ( mvnormal. density ( i ), mscores [ i ] [ i ], 0 )

************

************
tgt: org . junit . assert . assertnull ( event . get ( ) )
[0]: org. junit. assert. assertequals ( mvnormal. density ( i ), mscores [ i ] [ i ], 0.0 )
[1]: ) )
[2]: org. junit. assert. assertequals ( original, parsed )
[3]: org. junit. assert. assertequals ( orig, parsed )
[4]: org. junit. assert. assertequals ( old, parsed )

************

************
tgt: org . junit . assert . assertequals ( 1 , patientcount )
[0]: )
[1]: 
[2]: org. junit. assert. assertequals ( java. lang. long. tostring ( ), writer. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. lang. integer. tostring ( 200 ), writer. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. tostring ( 1 ), writer. tostring ( ) )

************

************
tgt: org . junit . assert . assertsame ( expr . accept ( visitor ) , visitresult )
[0]: org. junit. assert. assertequals ( java. lang. integer. tostring ( ), writer. tostring ( ) )
[1]: org. junit. assert. assertnotnull ( writer. tostring ( ) )
[2]: org. junit. assert. assertfalse ( allzeros )
[3]: org. junit. assert. assertequals ( false, allzeros )
[4]: org. junit. assert. assertequals ( true, allzeros )

************

************
tgt: org . junit . assert . asserttrue ( result . hasfailures ( ) )
[0]: org. junit. assert. assertequals ( s, value )
[1]: org. junit. assert. assertequals ( exprs [ f ], s )
[2]: org. junit. assert. assertnotnull ( errors )
[3]: org. junit. assert. assertequals ( exprs [ f ], result )
[4]: org. junit. assert. assertnotnull ( expressions )

************

************
tgt: org . junit . assert . assertnotnull ( driver )
[0]: org. junit. assert. assertnotnull ( msg )
[1]: org. junit. assert. assertequals ( 1, countresolvedgriditems ( ) )
[2]: org. junit. assert. assertequals ( 0, countresolvedgriditems ( ) )
[3]: org. junit. assert. assertequals ( 3, countresolvedgriditems ( ) )
[4]: org. junit. assert. assertequals ( 2, countresolvedgriditems ( ) )

************

************
tgt: org . junit . assert . assertequals ( 50 , config . getsnapshotintervalmillis ( ) )
[0]: org. junit. assert. assertequals ( 8, countresolvedgriditems ( ) )
[1]: org. junit. assert. asserttrue ( _searchcontainer. isrecalculatecur ( ) )
[2]: org. junit. assert. assertfalse ( _searchcontainer. isrecalculatecur ( ) )
[3]: org. junit. assert. assertequals ( true, _searchcontainer. isrecalculatecur ( ) )
[4]: org. junit. assert. assertequals ( 1, results. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "x" , shortform )
[0]: org. junit. assert. assertequals ( 0, f. evaluate ( ) )
[1]: org. junit. assert. assertequals ( 1, f. evaluate ( ) )
[2]: org. junit. assert. assertnotnull ( f. evaluate ( ) )
[3]: org. junit. assert. assertequals ( 0, f. evaluate ( ). size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( propertyvalue )
[0]: org. junit. assert. assertnotnull ( outputstream. tobytearray ( ) )
[1]: org. junit. assert. assertequals ( 0, outputstream. tobytearray ( ). length )
[2]: org. junit. assert. assertequals ( 1, outputstream. tobytearray ( ). length )
[3]: org. junit. assert. assertnotnull ( outputstream )
[4]: org. junit. assert. assertequals ( 0, outputstream. size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( data , stream . tobytearray ( ) )
[0]: org. junit. assert. assertequals ( 1, stores. size ( ) )
[1]: org. junit. assert. assertequals ( 0, stores. size ( ) )
[2]: org. junit. assert. assertequals ( 1, store. size ( ) )
[3]: org. junit. assert. assertequals ( 1l, stores. size ( ) )
[4]: org. junit. assert. assertequals ( 2, stores. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( m , org . apache . commons . math4 . testutils . serializeandrecover ( m ) )
[0]: org. junit. assert. assertfalse ( m. containskey ( 0 ) )
[1]: org. junit. assert. assertfalse ( m. containskey ( 1 ) )
[2]: org. junit. assert. asserttrue ( m. containskey ( 0 ) )
[3]: org. junit. assert. asserttrue ( m. containskey ( 1 ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( userfile . checkowned ( "testlocation" ) )
[0]: org. junit. assert. assertequals ( expected, variablelistenersupport. ismovedoable ( scoredirector ) )
[1]: org. junit. assert. assertequals ( widget1, variablelistenersupport. ismovedoable ( scoredirector ) )
[2]: org. junit. assert. assertequals ( false, variablelistenersupport. ismovedoable ( scoredirector ) )
[3]: org. junit. assert. assertequals ( control1, variablelistenersupport. ismovedoable ( scoredirector ) )
[4]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( ), variables )

************

************
tgt: org . junit . assert . assertequals ( 1 , list . size ( ) )
[0]: org. junit. assert. assertequals ( 10, content. length ( ) )
[1]: org. junit. assert. assertequals ( 10, content. split ( ). length )
[2]: org. junit. assert. assertequals ( 10, content. trim ( ). length ( ) )
[3]: org. junit. assert. assertnotnull ( content )
[4]: ) )

************

************
tgt: org . junit . assert . assertsame ( expected , result )
[0]: org. junit. assert. assertequals ( 0, io. datakernel. http. asynchttpservertest. tobytearray ( socket ). length )
[1]: org. junit. assert. assertnotnull ( io. datakernel. http. asynchttpservertest. tobytearray ( socket ) )
[2]: org. junit. assert. assertequals ( 1, io. datakernel. http. asynchttpservertest. tobytearray ( socket ). length )
[3]: org. junit. assert. assertnotnull ( socket. tobytearray ( new java. io. bytearrayinputstream ( socket. getinputstream ( ) ) ) )
[4]: org. junit. assert. assertnotnull ( io. datakernel. http. asynchttpservertest. tobytearray ( socket. getinputstream ( ) ) )

************

************
tgt: org . junit . assert . assertfalse ( testresult )
[0]: org. junit. assert. assertequals ( 1, orgs. size ( ) )
[1]: org. junit. assert. assertequals ( 0, orgs. size ( ) )
[2]: org. junit. assert. assertequals ( 12, orgs. size ( ) )
[3]: org. junit. assert. assertequals ( 5, orgs. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( expected ) ) )
[0]: org. junit. assert. assertequals ( spec1, andspec )
[1]: org. junit. assert. assertequals ( andspec, spec1 )
[2]: org. junit. assert. assertequals ( exp, andspec )
[3]: org. junit. assert. assertequals ( identspec, andspec )
[4]: org. junit. assert. assertnotnull ( andspec )

************

************
tgt: org . junit . assert . asserttrue ( ( ( instance . maxsize ( ) ) > 1000 ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( result, instance )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( x )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnotnull ( result. type )
[2]: org. junit. assert. assertnotnull ( result. expression )
[3]: org. junit. assert. assertequals ( result. type, result )
[4]: org. junit. assert. assertequals ( result. type, n )

************

************
tgt: org . junit . assert . assertequals ( 1 , relaties . size ( ) )
[0]: org. junit. assert. assertequals ( org. geotools. filter. filterstest. ff, result )
[1]: org. junit. assert. assertequals ( result, org. geotools. filter. filterstest. ff )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( result, filterstest. ff )

************

************
tgt: org . junit . assert . assertnotnull ( factorybean . createtrustmanagerfactory ( ) )
[0]: org. junit. assert. assertnotnull ( ec1. tostring ( ) )
[1]: org. junit. assert. assertnotnull ( ec1 )
[2]: org. junit. assert. assertnotnull ( ec2. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( ec2 )
[4]: org. junit. assert. assertnotnull ( ec1, ec2 )

************

************
tgt: org . junit . assert . assertequals ( 3 , replicas . size ( ) )
[0]: org. junit. assert. asserttrue ( mmap. contains ( name ) )
[1]: org. junit. assert. asserttrue ( command. isenabled ( ) )
[2]: org. junit. assert. assertequals ( message, decrypted )
[3]: org. junit. assert. asserttrue ( decrypted. equals ( message ) )
[4]: org. junit. assert. assertequals ( msg, decrypted )

************

************
tgt: org . junit . assert . asserttrue ( mrjob . run ( ) )
[0]: org. junit. assert. asserttrue ( decrypted. contains ( message ) )
[1]: org. junit. assert. assertnotnull ( decrypted )
[2]: org. junit. assert. assertequals ( in, out )
[3]: org. junit. assert. assertequals ( from, out )
[4]: org. junit. assert. assertequals ( out, in )

************

************
tgt: org . junit . assert . assertequals ( user , tokenspool . getbasetoken ( token ) )
[0]: org. junit. assert. assertequals ( input, out )
[1]: org. junit. assert. assertequals ( err, out )
[2]: org. junit. assert. assertequals ( true, start. issuccessful ( ) )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. equalto ( fibs ) )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. empty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. contains ( fibs ) )
[1]: , result )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( information. getidtype ( ) )
[4]: org. junit. assert. assertthat ( information. getidtype ( ), is ( org. springframework. data. jpa. repository. support. jpaentityinformationsupport. class ) )

************

************
tgt: org . junit . assert . assertfalse ( processed )
[0]: org. junit. assert. assertthat ( information. getidtype ( ), org. hamcrest. matchers. is ( org. hamcrest. matchers. empty ( ) ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), information. getidtype ( ) )
[2]: org. junit. assert. assertequals ( null, information. getidtype ( ) )
[3]: org. junit. assert. assertequals ( false, hasnext )
[4]: org. junit. assert. assertnotnull ( property. tostringvalues ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , buf . tostring ( ) )
[0]: org. junit. assert. assertnull ( property. tostringvalues ( ) )
[1]: org. junit. assert. asserttrue ( property. tostringvalues ( ). isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, property. tostringvalues ( ). length )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, theindex. count ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( discoverable )
[0]: org. junit. assert. assertequals ( 0, theindex. count ( ) )
[1]: org. junit. assert. assertequals ( 1, thisindex. count ( ) )
[2]: org. junit. assert. assertequals ( 3, theindex. count ( ) )
[3]: org. junit. assert. assertequals ( 1, allindex. count ( ) )
[4]: org. junit. assert. assertequals ( 1, request. getopnum ( ) )

************

************
tgt: org . junit . assert . assertequals ( timeunit . minutes . tomillis ( ( tominute - currentminute ) ) , result )
[0]: org. junit. assert. assertequals ( 0, request. getopnum ( ) )
[1]: org. junit. assert. assertequals ( 1, requests. getopnum ( ) )
[2]: org. junit. assert. assertnull ( request. getopnum ( ) )
[3]: org. junit. assert. assertequals ( 1, request. getopnum ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, numberofguesses )

************

************
tgt: org . junit . assert . assertequals ( generatedjavascript , expectedjavascript )
[0]: org. junit. assert. assertequals ( 0, numberofguesses )
[1]: org. junit. assert. assertequals ( 6, numberofguesses )
[2]: org. junit. assert. assertequals ( 3, numberofguesses )
[3]: ) )
[4]: org. junit. assert. assertequals ( com. turn. shapeshifter. testing. testprotos. actor, parsedactor )

************

************
tgt: org . junit . assert . assertthat ( properties , org . hamcrest . corematchers . is ( expected ) )
[0]: org. junit. assert. assertequals ( com. turn. shapeshifter. testing. testprotos. actor. parse ( json, parsedactor ), parsedactor )
[1]: org. junit. assert. assertequals ( com. turn. shapeshifter. testing. testprotos. actor. parse ( actor, parsedactor ), parsedactor )
[2]: org. junit. assert. assertequals ( 1, delete. execute ( ) )
[3]: org. junit. assert. assertequals ( 1, date. parseisodate ( null ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, date. parseisodate ( ""a"" ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( root , child1 , child2 ) , composites )
[0]: org. junit. assert. assertequals ( 1, date. parseisodate ( 1 ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, date. parseisodate ( ""test"" ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( workitem1, workitem2 ), date )
[3]: org. junit. assert. assertsame ( expression, manager. gettype ( ) )
[4]: org. junit. assert. assertsame ( expression, jexlselector. gettype ( ) )

************

************
tgt: org . junit . assert . assertthat ( converter . transform ( properties ) , org . hamcrest . matchers . is ( result ) )
[0]: org. junit. assert. assertsame ( expression, expression. gettype ( ) )
[1]: , expression )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( actualfileinput )
[4]: org. junit. assert. assertequals ( 1, history. isstepforwardallowed ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( sts )
[0]: org. junit. assert. assertequals ( 0, history. isstepforwardallowed ( ) )
[1]: org. junit. assert. assertequals ( true, history. isstepforwardallowed ( ) )
[2]: org. junit. assert. assertequals ( 1l, history. isstepforwardallowed ( ) )
[3]: org. junit. assert. assertequals ( false, history. isstepforwardallowed ( ) )
[4]: org. junit. assert. assertequals ( 1, resultplaceholder. getresult ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , devent . getfield ( "foo" ) )
[0]: org. junit. assert. assertequals ( 1, resultassert. getresult ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, resultplaceholder. getresult ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, result. getresult ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, resultassert. getresult ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, du )

************

************
tgt: org . junit . assert . assertthat ( left . compareto ( right ) , org . hamcrest . matchers . is ( 0 ) )
[0]: org. junit. assert. assertequals ( 1, du )
[1]: org. junit. assert. assertequals ( 0l, du )
[2]: org. junit. assert. assertequals ( 1l, du )
[3]: org. junit. assert. assertequals ( 2, du )
[4]: org. junit. assert. assertequals ( header, org. apache. hadoop. fs. contentsummary. getheader ( true ) )

************

************
tgt: org . junit . assert . asserttrue ( a . getresult ( ) )
[0]: org. junit. assert. asserttrue ( mat. matches ( ) )
[1]: org. junit. assert. assertequals ( 1, mat. matches ( ) )
[2]: org. junit. assert. assertequals ( 1, mat. matches ( ). size ( ) )
[3]: org. junit. assert. assertequals ( true, mat. matches ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( e instanceof java . io . ioexception ) )
[0]: org. junit. assert. assertequals ( 1, gri. getmaximalstructures ( ) )
[1]: org. junit. assert. assertequals ( 0, gri. getmaximalstructures ( ) )
[2]: org. junit. assert. assertequals ( 1l, gri. getmaximalstructures ( ) )
[3]: org. junit. assert. assertequals ( 1, gri. getmaximalstructures ( ). length )
[4]: org. junit. assert. assertnotnull ( gri. getmaximalstructures ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( valueanalytic, value, periodlength )
[1]: org. junit. assert. assertequals ( valueanalytic, value, 0 )
[2]: org. junit. assert. assertequals ( valueanalytic, value, 0.0 )
[3]: org. junit. assert. assertequals ( valueanalytic, value, default )
[4]: org. junit. assert. assertequals ( valueanalytic, value, tol )

************

************
tgt: org . junit . assert . assertfalse ( resultmessage ( result , org . openstack . atlas . api . mgmt . validation . validators . post ) , result . passedvalidation ( ) )
[0]: org. junit. assert. assertequals ( 32, count )
[1]: org. junit. assert. assertequals ( 64, count )
[2]: org. junit. assert. assertequals ( 16, count )
[3]: org. junit. assert. assertequals ( 20, count )
[4]: org. junit. assert. assertequals ( 8, count )

************

************
tgt: org . junit . assert . assertnotnull ( session )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertequals ( s )
[2]: org. junit. assert. assertequals ( mystring )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertsame ( model , model . getarchimatemodel ( ) )
[0]: org. junit. assert. assertthat ( captured. size ( ), org. hamcrest. matchers. is ( 1 ) )
[1]: org. junit. assert. assertthat ( captured. get ( ), org. hamcrest. matchers. is ( 1 ) )
[2]: org. junit. assert. assertthat ( capture. size ( ), org. hamcrest. matchers. is ( 1 ) )
[3]: org. junit. assert. assertthat ( capture, org. hamcrest. matchers. is ( 1 ) )
[4]: org. junit. assert. assertthat ( capture. get ( ), org. hamcrest. matchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( schedule . getoverlap ( 1 , 3 ) )
[0]: org. junit. assert. assertequals ( 1, newmap. size ( ) )
[1]: org. junit. assert. assertequals ( 3, newmap. size ( ) )
[2]: org. junit. assert. assertequals ( 0, newmap. size ( ) )
[3]: org. junit. assert. assertequals ( 1l, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1l, returned. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( sqltext . tostring ( ) , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( expected ) ) )
[0]: org. junit. assert. assertequals ( 1l, actual. size ( ) )
[1]: org. junit. assert. assertequals ( 1l, 1l )
[2]: org. junit. assert. assertequals ( expectedresult, result )
[3]: org. junit. assert. assertnotnull ( com. redhat. lightblue. util. modifydoctest. doc. get ( new com. redhat. lightblue. util. path ( ) ) )
[4]: org. junit. assert. assertnotnull ( com. redhat. lightblue. util. modifydoctest. doc. get ( new com. redhat. lightblue. util. path ( "x1 ) ) )

************

************
tgt: org . junit . assert . assertequals ( existinglayoutpagetemplateentry , newlayoutpagetemplateentry )
[0]: org. junit. assert. assertnotnull ( com. redhat. lightblue. util. modifydoctest. doc. get ( new java. lang. string ( ) ) )
[1]: org. junit. assert. assertequals ( 1, com. redhat. lightblue. util. modifydoctest. doc. get ( new com. redhat. lightblue. util. path ( ) ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( iterable. isempty ( ) )
[4]: org. junit. assert. assertequals ( false, iterable. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( iterator . first ( ) )
[0]: org. junit. assert. assertfalse ( iterable. isempty ( ) )
[1]: org. junit. assert. assertequals ( true, iterable. isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, iterable. isempty ( ) )
[3]: org. junit. assert. assertnotnull ( lastrequest. getheader ( null ) )
[4]: org. junit. assert. assertnotnull ( lastrequest. getheader ( string ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertnotnull ( lastrequest. getheader ( name ) )
[1]: org. junit. assert. assertnotnull ( lastrequest )
[2]: type ) )
[3]: org. junit. assert. assertequals ( expectedbindingstring, volumeconfiguration. getbind ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( expectedbindingstring, volumeconfiguration. getbind ( ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( aleid , node . getid ( ) , 0l )
[0]: org. junit. assert. assertequals ( expectedbindingstring, volumeconfiguration. getbind ( ) )
[1]: org. junit. assert. assertequals ( expectedbindingstring, volumeconfiguration. getbind ( ). trim ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( isfocusinsideelement ( checkboxgroup ) )
[4]: org. junit. assert. assertequals ( 1, isfocusinsideelement ( checkboxgroup ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( number [ 0 ] ) == 21 ) )
[0]: org. junit. assert. assertnotnull ( metaobjectliteral. gettype ( metaobjectliteral ) )
[1]: org. junit. assert. assertnotnull ( metaobjectliteral. gettype ( null ) )
[2]: org. junit. assert. assertequals ( expressietype. groot_getal, metaobjectliteral )
[3]: org. junit. assert. assertnotnull ( metaobjectliteral )
[4]: type ) )

************

************
tgt: org . junit . assert . asserttrue ( ( vol > 0 ) )
[0]: org. junit. assert. assertequals ( users. tostring ( ), 1, users. size ( ) )
[1]: org. junit. assert. assertequals ( users. tostring ( ), 2, users. size ( ) )
[2]: org. junit. assert. assertequals ( users. tostring ( ), 0, users. size ( ) )
[3]: org. junit. assert. assertequals ( users. tostring ( ), 3, users. size ( ) )
[4]: org. junit. assert. assertequals ( dinfo, dinfo2 )

************

************
tgt: org . junit . assert . assertequals ( 0 , registry . getactivesessions ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( dinfo. county, end )
[1]: org. junit. assert. assertfalse ( policy. canretry ( context ) )
[2]: org. junit. assert. assertequals ( true, policy. canretry ( context ) )
[3]: org. junit. assert. assertequals ( ""test"", echo. echo ( ""test"" ) )
[4]: org. junit. assert. assertnotnull ( echo. echo ( ""test"" ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , count )
[0]: org. junit. assert. assertnotnull ( echo )
[1]: org. junit. assert. assertnotnull ( echo. echo ( ) )
[2]: org. junit. assert. assertequals ( ""test"", echo. echo ( ""test"" ) )
[3]: org. junit. assert. assertnotnull ( receivedmessage )
[4]: org. junit. assert. assertequals ( message, receivedmessage )

************

************
tgt: org . junit . assert . assertnotnull ( currentstate [ 0 ] )
[0]: org. junit. assert. assertequals ( null, receivedmessage )
[1]: org. junit. assert. assertequals ( msg, receivedmessage )
[2]: org. junit. assert. assertequals ( receivedmessage, message )
[3]: org. junit. assert. assertnotnull ( html )
[4]: org. junit. assert. assertnull ( html )

************

************
tgt: org . junit . assert . assertequals ( 4 , auditedaddresses . size ( ) )
[0]: , html )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( n, session2. getpath ( ) )
[4]: org. junit. assert. assertequals ( n, session. getpath ( ) )

************

************
tgt: org . junit . assert . assertequals ( o1 , o2 )
[0]: org. junit. assert. assertnotnull ( n2. getpath ( ) )
[1]: org. junit. assert. assertequals ( n, n2. getpath ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, res. size ( ) )
[4]: org. junit. assert. assertequals ( 0, res. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( discount1 . getdiscountamt ( ) , org . hamcrest . corematchers . is ( 0l ) )
[0]: org. junit. assert. assertequals ( 3, res. size ( ) )
[1]: org. junit. assert. assertequals ( 2, res. size ( ) )
[2]: org. junit. assert. assertequals ( res. size ( ), 1 )
[3]: org. junit. assert. assertequals ( expresult, result )
[4]: org. junit. assert. assertequals ( expresult, result. trim ( ) )

************

************
tgt: org . junit . assert . assertfalse ( iterator . hasnext ( ) )
[0]: org. junit. assert. assertequals ( expresult, result. substring ( 1 ) )
[1]: org. junit. assert. assertequals ( result, expresult )
[2]: org. junit. assert. assertequals ( expresult, result. substring ( 0 ) )
[3]: org. junit. assert. assertthat ( bean. toserviceobject ( ), org. hamcrest. matchers. equalto ( serviceobject ) )
[4]: org. junit. assert. assertthat ( bean, org. hamcrest. matchers. equalto ( serviceobject ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , actual . size ( ) )
[0]: org. junit. assert. assertthat ( bean. toserviceobject ( ), org. hamcrest. matchers. contains ( serviceobject ) )
[1]: org. junit. assert. assertthat ( bean. toserviceobject ( ), org. hamcrest. matchers. empty ( ) )
[2]: org. junit. assert. assertthat ( bean, org. hamcrest. matchers. equalto ( serviceobject. toserviceobject ( ) ) )
[3]: org. junit. assert. assertequals ( r, string )
[4]: org. junit. assert. assertequals ( r, name )

************

************
tgt: org . junit . assert . asserttrue ( writer . beginflush ( ) )
[0]: org. junit. assert. assertnotnull ( r )
[1]: org. junit. assert. assertequals ( r, named )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, outputs. getall ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 3, outputs. getall ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( enforcement == false ) )
[0]: org. junit. assert. assertequals ( 2, outputs. getall ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, outputs. getall ( ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertarrayequals ( expected, materialized. getallitems ( ) )
[4]: org. junit. assert. assertarrayequals ( expected, inferred. getallitems ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , welcomemessage )
[0]: org. junit. assert. assertarrayequals ( expected, mlist. getallitems ( ) )
[1]: org. junit. assert. assertarrayequals ( expected, getterminal. getallitems ( ) )
[2]: org. junit. assert. assertarrayequals ( expected, ( ( java. lang. object [ ] ) ( sampl. getallitems ( ) ) ) )
[3]: org. junit. assert. assertequals ( false, dit. hasnext ( ) )
[4]: org. junit. assert. assertequals ( 1, endpointlifecyclemanager. endpoints ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( new com . amazonaws . services . elasticmapreduce . model . instancegroupconfig ( com . amazonaws . services . elasticmapreduce . model . instanceroletype . master , ec2_instance_type , instance_count ) , result )
[0]: org. junit. assert. assertequals ( 0, endpointlifecyclemanager. endpoints ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, endpoints ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, endpoints ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), endpoints ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. class, options. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( "value=" + i ) , sb . tostring ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), options )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), options. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), options )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 1 ), options )
[4]: org. junit. assert. assertarrayequals ( ms, intersectsorted ( xs, ys ) )

************

************
tgt: org . junit . assert . assertequals ( newhashset ( "foo" ) , org . apache . jackrabbit . oak . plugins . document . journaldiffloadertest . changechildnodes ( ns , s1 , s2 ) )
[0]: org. junit. assert. assertarrayequals ( m. intersectsorted ( xs, zs ), zs )
[1]: org. junit. assert. assertarrayequals ( p, intersectsorted ( xs, ys ) )
[2]: org. junit. assert. assertequals ( mikera. vectorz. util. intarrays. intersectsorted ( xs, ys ), zs )
[3]: org. junit. assert. assertarrayequals ( m. intersectsorted ( xs, zs ), m. toarray ( ) )
[4]: org. junit. assert. assertequals ( 1, cities. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "foo" , dest . getdesttype ( ) . tostring ( ) )
[0]: org. junit. assert. assertequals ( clickme. gettext ( ), buttontext )
[1]: org. junit. assert. assertequals ( clickme, buttontext )
[2]: org. junit. assert. assertequals ( clickedme. gettext ( ), buttontext )
[3]: org. junit. assert. assertnotnull ( clickme. gettext ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( blankterms . isempty ( ) )
[0]: org. junit. assert. assertfalse ( display. getdefault ( ) )
[1]: org. junit. assert. asserttrue ( display. getdefault ( ) )
[2]: org. junit. assert. assertnull ( display. getdefault ( ) )
[3]: org. junit. assert. assertnotnull ( display. getdefault ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , type )
[0]: org. junit. assert. assertarrayequals ( org. talend. esb. servicelocator. testcontent. content_any_1, content )
[1]: org. junit. assert. assertequals ( org. talend. esb. servicelocator. testcontent. content_any_1, content )
[2]: org. junit. assert. assertequals ( org. talend. esb. servicelocator. testcontent. content_any_1, new byte [ ] { } )
[3]: org. junit. assert. assertnull ( content )
[4]: org. junit. assert. assertnotnull ( content )

************

************
tgt: org . junit . assert . assertarrayequals ( buffer . array ( ) , writedata )
[0]: org. junit. assert. assertequals ( expr. accept ( visitor ), visitresult )
[1]: org. junit. assert. assertequals ( expression. accept ( visitor ), visitresult )
[2]: org. junit. assert. assertequals ( expression, expr. accept ( visitor ) )
[3]: org. junit. assert. assertnotnull ( metadata. getorganisationunitgroups ( ) )
[4]: org. junit. assert. assertequals ( orgunitgroupmembership, metadata. getorganisationunitgroups ( ) )

************

************
tgt: org . junit . assert . assertequals ( "http://[2a00:8a00:6000:40::1413]:30300/test" , result )
[0]: org. junit. assert. assertequals ( 1, metadata. getorganisationunitgroups ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, metadata. getorganisationunitgroups ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, getter. get ( foo ) )
[3]: org. junit. assert. assertequals ( foo, getter. get ( foo ) )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( foo ), getter. get ( foo ) )

************

************
tgt: org . junit . assert . assertnull ( response )
[0]: org. junit. assert. assertnull ( getter. get ( foo ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( org. nd4j. linalg. factory. nd4j. create ( new double [ ] { 1, 2, 3, 4, 5, 6 } ), vector )
[3]: org. junit. assert. assertequals ( org. nd4j. linalg. factory. nd4j. create ( new double [ ] { 1, 2, 3, 4, 5 } ), vector )
[4]: org. junit. assert. assertequals ( org. nd4j. linalg. factory. nd4j. create ( new double [ ] { 1, 2, 3 } ), vector )

************

************
tgt: org . junit . assert . assertnotnull ( "er<sp>zou<sp>een<sp>fout<sp>op<sp>moeten<sp>treden." , e )
[0]: org. junit. assert. assertequals ( org. nd4j. linalg. factory. nd4j. create ( new double [ ] { 1, 4, 5, 6 } ), vector )
[1]: org. junit. assert. assertequals ( org. nd4j. linalg. factory. nd4j. create ( new double [ ] { 1, 4, 5 } ), vector )
[2]: org. junit. assert. assertnotnull ( text )
[3]: org. junit. assert. assertequals ( text, null )
[4]: org. junit. assert. assertequals ( text, found )

************

************
tgt: org . junit . assert . assertfalse ( iav1 . equals ( iav2 ) )
[0]: org. junit. assert. assertequals ( text, result )
[1]: org. junit. assert. assertequals ( text, "test"" )
[2]: org. junit. assert. assertequals ( soortsynchronisatie. volledigbericht, soortsynchronisatie )
[3]: org. junit. assert. assertequals ( soortsynchronisatie, soortsynchronisatie )
[4]: org. junit. assert. assertequals ( soortsynchronisatie. volumeledigbericht, soortsynchronisatie )

************

************
tgt: org . junit . assert . asserttrue ( accessible )
[0]: org. junit. assert. assertnotnull ( soortsynchronisatie )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, resultaat. getmeldingen ( ). length )
[3]: org. junit. assert. assertequals ( 1, resultaat. getmeldingen ( ). length )
[4]: org. junit. assert. assertnotnull ( resultaat. getmeldingen ( ) )

************

************
tgt: org . junit . assert . assertnull ( service . reducecompoundkey ( null ) )
[0]: org. junit. assert. asserttrue ( resultaat. getmeldingen ( ). isempty ( ) )
[1]: org. junit. assert. assertequals ( 0, resultaat. getmeldingen ( ). size ( )
[2]: org. junit. assert. assertnotnull ( err )
[3]: org. junit. assert. assertnotnull ( id )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertfalse ( matches )
[0]: org. junit. assert. assertnotnull ( s )
[1]: insert the methods description here
[2]: org. junit. assert. assertequals ( p. size ( ), c )
[3]: org. junit. assert. assertequals ( p. tostring ( ), c )
[4]: org. junit. assert. assertequals ( p. intvalue ( ), c )

************

************
tgt: org . junit . assert . assertnotnull ( categoria . getid ( ) )
[0]: org. junit. assert. assertequals ( p. count, c )
[1]: , c )
[2]: org. junit. assert. assertequals ( 0, result. length )
[3]: org. junit. assert. assertequals ( 1, result. length )
[4]: org. junit. assert. assertequals ( 3, result. length )

************

************
tgt: org . junit . assert . asserttrue ( ( channel1 != channel2 ) )
[0]: , result. length )
[1]: , result )
[2]: org. junit. assert. assertnotnull ( te2 )
[3]: org. junit. assert. assertnull ( te2 )
[4]: org. junit. assert. assertnotnull ( te1 )

************

************
tgt: org . junit . assert . assertequals ( "bob" , ( ( com . oneeyedmen . fakir . defaultfactorytest . classtobefaked ) ( factory . createa ( ( ( java . lang . reflect . type ) ( com . oneeyedmen . fakir . defaultfactorytest . classtobefaked . class ) ) ) ) ) . thing ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnotnull ( transactionid )
[3]: org. junit. assert. assertequals ( java. lang. string. class, transactionid )
[4]: org. junit. assert. assertnull ( transactionid )

************

************
tgt: org . junit . assert . assertequals ( "stuff" , s )
[0]: org. junit. assert. assertequals ( null, transactionid )
[1]: ) )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( 3 ), new java. lang. integer ( loops. size ( ) ) )
[3]: org. junit. assert. assertequals ( new java. lang. integer ( 5 ), new java. lang. integer ( loops. size ( ) ) )
[4]: org. junit. assert. assertequals ( new java. lang. integer ( 2 ), new java. lang. integer ( loops. size ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( arr , resultarr )
[0]: org. junit. assert. assertequals ( new java. util. hashset ( java. util. arrays. aslist ( ) ), new java. util. hashset ( loops ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), map. hashingstrategy ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), map. hashingstrategy ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), map. hashingstrategy ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4 ), map. hashingstrategy ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), map. hashingstrategy ( ). tolist ( ) )
[2]: org. junit. assert. assertequals ( result. tostring ( ), path. tostring ( ) )
[3]: org. junit. assert. assertequals ( result. tostring ( ), expected )
[4]: org. junit. assert. assertequals ( result. tostring ( ), expected. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( "txcount<sp>:<sp>" + ( org . apache . fluo . integration . impl . stochasticbankit . txcount . get ( ) ) ) , ( ( org . apache . fluo . integration . impl . stochasticbankit . txcount . get ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( expected, result. tostring ( ) )
[1]: org. junit. assert. assertnotnull ( result. tostring ( ) )
[2]: org. junit. assert. asserttrue ( from. isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, from. isempty ( ) )
[4]: org. junit. assert. assertequals ( 0, from. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ancs . contains ( aer ) )
[0]: org. junit. assert. assertequals ( true, from. isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, to. isempty ( ) )
[2]: org. junit. assert. assertequals ( 1, list. size ( ) )
[3]: org. junit. assert. assertequals ( 3, list. size ( ) )
[4]: org. junit. assert. assertequals ( 4, list. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( credentials . hashcode ( ) , othercredentials . hashcode ( ) )
[0]: org. junit. assert. assertequals ( 0, list. size ( ) )
[1]: org. junit. assert. assertequals ( 2, list. size ( ) )
[2]: org. junit. assert. assertnotnull ( qname. gettype ( ) )
[3]: org. junit. assert. assertequals ( null, qname. gettype ( ) )
[4]: org. junit. assert. assertnull ( qname. gettype ( ) )

************

************
tgt: org . junit . assert . assertequals ( consumers , result )
[0]: org. junit. assert. assertequals ( 1, qname. gettype ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( com. hazelcast. simulator. common. gitinfo. getcommittime ( ), com. hazelcast. simulator. common. gitinfo. unknown )
[3]: org. junit. assert. assertequals ( null, com. hazelcast. simulator. common. gitinfo. getcommittime ( ) )
[4]: org. junit. assert. assertequals ( com. hazelcast. simulator. common. gitinfo. getcommittime ( ), java. util. arraylist. class )

************

************
tgt: org . junit . assert . assertfalse ( resultmessage ( result , org . openstack . atlas . api . validation . validators . put ) , result . passedvalidation ( ) )
[0]: org. junit. assert. assertnotnull ( builder2. create ( ) )
[1]: org. junit. assert. assertequals ( 1, numberofoccurences )
[2]: org. junit. assert. assertequals ( 0, numberofoccurences )
[3]: org. junit. assert. assertequals ( 3, numberofoccurences )
[4]: org. junit. assert. assertequals ( 5, numberofoccurences )

************

************
tgt: org . junit . assert . assertequals ( expecteddatabases , actualdatabases )
[0]: org. junit. assert. assertequals ( 12, numberofoccurences )
[1]: org. junit. assert. assertnotnull ( context. tenant ( ) )
[2]: org. junit. assert. assertnull ( context. tenant ( ) )
[3]: org. junit. assert. assertnotnull ( context )
[4]: org. junit. assert. assertnotnull ( context. tenant )

************

************
tgt: org . junit . assert . assertequals ( 5 , count )
[0]: org. junit. assert. assertthat ( context. tenant ( ), org )
[1]: org. junit. assert. assertequals ( 1, actualvertices. size ( ) )
[2]: org. junit. assert. assertequals ( 2, actualvertices. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), actualvertices )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( genericauditentity1 . equals ( genericauditentity2 ) )
[0]: )
[1]: org. junit. assert. assertequals ( unmarshallervalue, unmarshallervalue )
[2]: org. junit. assert. assertsame ( unmarshallervalue, unmarshallervalue )
[3]: org. junit. assert. assertthat ( unmarshallervalue, is ( unmarshallervalue ) )
[4]: org. junit. assert. assertnotnull ( unmarshallervalue )

************

************
tgt: org . junit . assert . assertequals ( resp , actualresponse )
[0]: org. junit. assert. assertthat ( unmarshallervalue, equalto ( unmarshallervalue ) )
[1]: org. junit. assert. assertequals ( 1, texts. size ( ) )
[2]: org. junit. assert. assertequals ( 0, texts. size ( ) )
[3]: org. junit. assert. assertequals ( 3, texts. size ( ) )
[4]: org. junit. assert. assertequals ( 2, texts. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , instance )
[0]: org. junit. assert. assertequals ( 4, texts. size ( ) )
[1]: org. junit. assert. assertnotnull ( file )
[2]: org. junit. assert. assertnotnull ( parsed )
[3]: org. junit. assert. assertnotnull ( parse )
[4]: org. junit. assert. assertequals ( internalindexstate. online, state )

************

************
tgt: org . junit . assert . assertequals ( 0 , errorcount ( partijrol ) )
[0]: org. junit. assert. assertequals ( internalindexstate. offline, state )
[1]: org. junit. assert. assertequals ( internalindexstate. auth, state )
[2]: org. junit. assert. assertequals ( internalindexstate. finished, state )
[3]: org. junit. assert. assertnotnull ( state )
[4]: org. junit. assert. assertequals ( 1, m. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "foocommand<sp>-h<sp>" , test . getbuffer ( ) )
[0]: org. junit. assert. assertequals ( 0, m. size ( ) )
[1]: org. junit. assert. assertequals ( 1, m. collection. size ( ) )
[2]: org. junit. assert. assertequals ( 1, m. data. size ( ) )
[3]: org. junit. assert. assertequals ( 1, m. values ( ). length )
[4]: org. junit. assert. assertequals ( hostandportstring, hostandportstring )

************

************
tgt: org . junit . assert . asserttrue ( result . haserrors ( ) )
[0]: org. junit. assert. assertnotnull ( hostandportstring )
[1]: org. junit. assert. assertequals ( hostandportstring, hostandport )
[2]: org. junit. assert. assertnull ( hostandportstring )
[3]: org. junit. assert. assertequals ( hostandportstring, hostandportstring
[4]: org. junit. assert. assertequals ( input, results )

************

************
tgt: org . junit . assert . assertequals ( 8l , status . getlength ( ) , 0l )
[0]: org. junit. assert. assertnotnull ( results )
[1]: org. junit. assert. assertequals ( output, results )
[2]: org. junit. assert. assertequals ( null, results )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, c. count ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( featurecollection . getfeatures ( ) )
[0]: org. junit. assert. assertequals ( 0, c. count ( ) )
[1]: org. junit. assert. assertequals ( 1, c. count )
[2]: org. junit. assert. assertnotnull ( c )
[3]: org. junit. assert. assertequals ( value, c. guaranteed ( ) )
[4]: org. junit. assert. assertequals ( 1, count )

************

************
tgt: org . junit . assert . assertequals ( "11:33:01.123" , dt . getvalue ( ) )
[0]: org. junit. assert. assertequals ( 0, count )
[1]: org. junit. assert. assertequals ( 3, count )
[2]: org. junit. assert. assertthat ( loaded, is ( p ) )
[3]: org. junit. assert. assertthat ( loaded, is ( p. values ( ) ) )
[4]: org. junit. assert. assertthat ( load, is ( p ) )

************

************
tgt: org . junit . assert . assertnotnull ( facet )
[0]: , loaded )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, dao. getparametercount ( ) )
[3]: org. junit. assert. assertequals ( 0, dao. getparametercount ( ) )
[4]: org. junit. assert. assertequals ( 1, events. getparametercount ( ) )

************

************
tgt: org . junit . assert . assertfalse ( exec . isfailure ( exitvalue ) )
[0]: org. junit. assert. assertequals ( 0, events. getparametercount ( ) )
[1]: org. junit. assert. assertequals ( 0, context. getparametercount ( ) )
[2]: org. junit. assert. assertequals ( expectedtostring, query. getquery ( ) )
[3]: org. junit. assert. assertequals ( expectedtostring, query. getquery ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( expectedtostring, queries. getquery ( ) )

************

************
tgt: org . junit . assert . assertequals ( 123000 , timestamp . getnanos ( ) )
[0]: org. junit. assert. assertthat ( query. getquery ( ), org. hamcrest. core )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, nodes. size ( ) )
[3]: org. junit. assert. assertequals ( 2, gisfeature. getalternatenames ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, gisfeature. getalternatenames ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , searchscreenshots . size ( ) )
[0]: org. junit. assert. assertequals ( 0, gisfeature. getalternatenames ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 4, gisfeature. getalternatenames ( ). size ( ) )
[2]: org. junit. assert. assertnull ( gisfeature. getalternatenames ( ) )
[3]: org. junit. assert. assertfalse ( isbalanced ( root ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( parser1, parser2 ), parsers )

************

************
tgt: org . junit . assert . asserttrue ( list . contains ( "" ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( parser1 ), parsers )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), parsers )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( parser3, parser2 ), parsers )
[3]: org. junit. assert. assertnotnull ( parsers )
[4]: org. junit. assert. assertequals ( 0, srvnodes. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , size )
[0]: org. junit. assert. assertequals ( 1, srvnodes. size ( ) )
[1]: org. junit. assert. assertequals ( 3, srvnodes. size ( ) )
[2]: org. junit. assert. assertequals ( 4, srvnodes. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), list )
[4]: org. junit. assert. assertequals ( 1, list. toarray ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 0 , ipv6device . sourceport )
[0]: org. junit. assert. assertequals ( list, list. toarray ( ) )
[1]: org. junit. assert. assertequals ( list. toarray ( ), list )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( handler. paramvalue )
[4]: org. junit. assert. assertnotnull ( handler )

************

************
tgt: org . junit . assert . asserttrue ( friendlyurlentries . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( handler, paramvalue )
[1]: org. junit. assert. assertnotnull ( handler. paramvalue )
[2]: org. junit. assert. assertnotnull ( handler = paramvalue )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( expected ) )
[4]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( ( expected + 1 ) ) )

************

************
tgt: org . junit . assert . assertthat ( root , not ( exists ( "a.txt" ) ) )
[0]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( is ( expected ) ) )
[1]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( " ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( 0, result )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( result, 0 )
[1]: , result )
[2]: ) )
[3]: org. junit. assert. assertthat ( mcb. size ( ), org. hamcrest. corematchers. is ( 0 ) )
[4]: org. junit. assert. assertthat ( mcb. size ( ), org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( dataprovider )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( ""null, result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( ""null, result )

************

************
tgt: org . junit . assert . assertnotnull ( e )
[0]: org. junit. assert. asserttrue ( var6. equals ( var5 ) )
[1]: org. junit. assert. assertfalse ( var6. equals ( var5 ) )
[2]: org. junit. assert. asserttrue ( var5. equals ( var5 ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( input, result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. assertequals ( result, header )
[4]: org. junit. assert. assertequals ( result, null )

************

************
tgt: org . junit . assert . assertequals ( s , expected , s )
[0]: org. junit. assert. assertequals ( true, deleted )
[1]: org. junit. assert. assertequals ( 1, deleted )
[2]: org. junit. assert. assertequals ( false, deleted )
[3]: org. junit. assert. assertnull ( copy )
[4]: org. junit. assert. assertnotnull ( copy )

************

************
tgt: org . junit . assert . assertequals ( expecting , result )
[0]: org. junit. assert. assertequals ( nodeid, copy )
[1]: org. junit. assert. assertsame ( nodeid, copy )
[2]: ) )
[3]: org. junit. assert. assertsame ( r, m )
[4]: org. junit. assert. assertsame ( null, m )

************

************
tgt: org . junit . assert . asserttrue ( ( e instanceof java . io . ioexception ) )
[0]: org. junit. assert. assertsame ( m, engine. getreaction ( m ) )
[1]: org. junit. assert. assertsame ( m, engine. getreaction ( ei ) )
[2]: org. junit. assert. assertsame ( m, engine. getreaction ( j ) )
[3]: org. junit. assert. assertnotnull ( actual )
[4]: org. junit. assert. assertequals ( null, actual )

************

************
tgt: org . junit . assert . assertnotnull ( group )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertnull ( actual )
[2]: org. junit. assert. assertequals ( string, actual )
[3]: org. junit. assert. assertequals ( r, express )
[4]: org. junit. assert. assertnotnull ( r )

************

************
tgt: org . junit . assert . assertfalse ( property . tostringvalues ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( r, ""foo"" )
[1]: org. junit. assert. assertequals ( r, null )
[2]: org. junit. assert. assertequals ( r )
[3]: org. junit. assert. assertnotnull ( data )
[4]: org. junit. assert. assertequals ( data, data )

************

************
tgt: org . junit . assert . assertequals ( 0 , errors . size ( ) )
[0]: org. junit. assert. assertarrayequals ( data, data )
[1]: org. junit. assert. assertequals ( data [ 0 ], data )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, view. getcontent ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( view. getcontent ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1000l , org . infinitest . eclipse . infinitestglobalsettings . getslowtesttimelimit ( ) )
[0]: org. junit. assert. assertequals ( view, view. getcontent ( ) )
[1]: org. junit. assert. assertequals ( 1, view. getcontent ( ). length )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, range. count )
[4]: org. junit. assert. assertnotnull ( range )

************

************
tgt: org . junit . assert . assertnull ( payload )
[0]: org. junit. assert. assertequals ( range, range )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 0, generatedcolumnmappings. size ( ) )
[4]: org. junit. assert. assertequals ( 1, generatedcolumnmappings. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( alloffices . size ( ) , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert. assertequals ( 0, createdcolumnmappings. size ( ) )
[1]: org. junit. assert. assertequals ( 0, outputcolumnmappings. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( fieldmappings )
[3]: org. junit. assert. assertequals ( validcacheexpireshours, config. getcacheexpireshours ( ) )
[4]: org. junit. assert. assertthat ( config. getcacheexpireshours ( ), org. hamcrest. matchers. equalto ( validcacheexpireshours ) )

************

************
tgt: org . junit . assert . assertthat ( actual . getorelse ( 0l ) , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( 123l ) ) )
[0]: org. junit. assert. assertequals ( 0, config. getcacheexpireshours ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, config. getcacheexpireshours ( ) )
[2]: org. junit. assert. assertequals ( 0, config. getcacheexpireshours ( ). length )
[3]: org. junit. assert. assertequals ( p. i, setter. i )
[4]: org. junit. assert. assertequals ( p. i, i. i )

************

************
tgt: org . junit . assert . assertequals ( childartifactversion , new org . codehaus . mojo . versions . requiredmavenversionfinder ( mavenproject ) . find ( ) )
[0]: org. junit. assert. assertequals ( p. i, getter. i )
[1]: org. junit. assert. assertequals ( p. i, 1 )
[2]: ) )
[3]: org. junit. assert. assertequals ( values [ i ], v. rowcount ( ), 0.0 )
[4]: org. junit. assert. assertequals ( values [ i ], v. rowcount ( ), 0 )

************

************
tgt: org . junit . assert . assertequals ( 2 , container . getdatafiles ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 0.0, v. rowcount ( ), 0.0 )
[1]: org. junit. assert. assertequals ( 0.0, v. rowcount ( ), 0 )
[2]: insert the methods description here
[3]: org. junit. assert. assertequals ( 1, pollchoices. getuserid ( ) )
[4]: org. junit. assert. assertequals ( 0, pollchoices. getuserid ( ) )

************

************
tgt: org . junit . assert . assertfalse ( com . pi4j . io . gpio . test . gpiopindigitalinputtests . pin . isexported ( ) )
[0]: org. junit. assert. assertequals ( 1, pollsquestion. getuserid ( ) )
[1]: org. junit. assert. assertequals ( 0, pollsquestion. getuserid ( ) )
[2]: org. junit. assert. assertequals ( com. liferay. portal. kernel. test. util. testpropsvalues. getuserid ( ), pollchoices )
[3]: org. junit. assert. assertequals ( expectedvmargs, configuration. tostring ( ) )
[4]: org. junit. assert. assertequals ( expectedvmargs, config. tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( filter . exportsresource ( "" ) , org . hamcrest . corematchers . equalto ( false ) )
[0]: org. junit. assert. assertequals ( expectedvmargs, configuration. tostring ( ). trim ( ) )
[1]: org. junit. assert. assertequals ( expectedvmargs, configuration. tostring ( ). tostring ( ) )
[2]: org. junit. assert. assertequals ( expectedvmargs, configurations. tostring ( ) )
[3]: org. junit. assert. assertequals ( 1, list. getinternallist ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( location ), list. getinternallist ( ) )

************

************
tgt: org . junit . assert . asserttrue ( hit )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), list. getinternallist ( ) )
[1]: org. junit. assert. assertequals ( 0, list. getinternallist ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( location ), list. getinternallist ( ) )
[3]: org. junit. assert. assertequals ( false, channel. haspendingdata ( ) )
[4]: org. junit. assert. assertequals ( true, channel. haspendingdata ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , buildglobpatternforfilewithextension )
[0]: org. junit. assert. assertequals ( 0, channel. haspendingdata ( ) )
[1]: org. junit. assert. asserttrue ( channel. haspendingdata ( ) )
[2]: org. junit. assert. assertequals ( 1, channel. haspendingdata ( ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( result, null )

************

************
tgt: org . junit . assert . assertnotnull ( file . getcoresession ( ) )
[0]: org. junit. assert. assertequals ( result, result )
[1]: org. junit. assert. assertequals ( result, instance )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( true, hooks )
[4]: org. junit. assert. assertequals ( 1, workertool. getmaxworkers ( ) )

************

************
tgt: org . junit . assert . assertthat ( moviescount , org . hamcrest . matchers . equalto ( originalnumberofmovies ) )
[0]: org. junit. assert. assertnotnull ( workertool. getmaxworkers ( ) )
[1]: org. junit. assert. assertequals ( 1, workertool. getmaxworkers ( ). length )
[2]: org. junit. assert. assertequals ( java. util. optional. empty ( ), workertool )
[3]: type ) { } }
[4]: org. junit. assert. assertnotnull ( currentsession ( ) )

************

************
tgt: org . junit . assert . asserttrue ( exceptionoccured )
[0]: org. junit. assert. assertnotnull ( currentlysession ( ) )
[1]: org. junit. assert. assertnotnull ( form )
[2]: org. junit. assert. assertnotnull ( currentsession )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, fxform. getelements ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , recips . size ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. format ( year ), sdf. format ( year ) )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( year ), sdf. format ( year ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( year ), sdf. format ( year ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( year ), sdf. format ( year ) )
[4]: org. junit. assert. assertequals ( 1, sdf. format ( year ) )

************

************
tgt: org . junit . assert . assertequals ( "null" , formatwithnullstring . getnullstring ( ) )
[0]: org. junit. assert. assertfalse ( handler. handlerequest ( null, step, null ) )
[1]: org. junit. assert. assertfalse ( handler. handlerequest ( null, null, null ) )
[2]: org. junit. assert. assertfalse ( handler. handlerequest ( null, session, null ) )
[3]: org. junit. assert. assertfalse ( handler. handlerequest ( session, null, null ) )
[4]: org. junit. assert. assertfalse ( handler. handlerequest ( null, step, true ) )

************

************
tgt: org . junit . assert . asserttrue ( result . containskey ( servicename ) )
[0]: org. junit. assert. asserttrue ( inputformat. issplitable ( null, null ) )
[1]: org. junit. assert. asserttrue ( inputformat. issplitable ( true, null ) )
[2]: org. junit. assert. assertequals ( 0, hits. size ( ) )
[3]: org. junit. assert. assertequals ( 1, hits. size ( ) )
[4]: org. junit. assert. assertequals ( 3, hits. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( tree2 . isempty ( ) )
[0]: org. junit. assert. assertequals ( 2, hits. size ( ) )
[1]: org. junit. assert. assertequals ( 5, hits. size ( ) )
[2]: org. junit. assert. assertequals ( 1, numentitieswritten )
[3]: org. junit. assert. assertequals ( 0, numentitieswritten )
[4]: org. junit. assert. assertequals ( 1l, numentitieswritten )

************

************
tgt: org . junit . assert . assertequals ( 0 , output . size ( ) )
[0]: org. junit. assert. assertequals ( 0l, numentitieswritten )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, visitor. getshards ( ) )
[3]: org. junit. assert. assertequals ( 1, visitor. getshards ( ). length )
[4]: org. junit. assert. assertnotnull ( visitor. getshards ( ) )

************

************
tgt: org . junit . assert . assertequals ( result , expectation )
[0]: org. junit. assert. assertequals ( 1, visitor. getshards ( ). size ( )
[1]: ) )
[2]: org. junit. assert. assertequals ( bulkrequest. tojson ( ), result. tojson ( ) )
[3]: org. junit. assert. assertequals ( bulkrequest. tojson ( ), ( ( java. util. map ) ( result. tojson ( ) ) ). size ( ) )
[4]: org. junit. assert. assertequals ( bulkrequest. tojson ( ), ( ( java. util. map ) ( request. tojson ( ) ) ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( c1 . equals ( c2 ) )
[0]: org. junit. assert. assertequals ( bulkrequest. tostring ( ), result. tojson ( ) )
[1]: org. junit. assert. assertequals ( bulkrequest. size ( ), result. size ( ) )
[2]: org. junit. assert. asserttrue ( musics. isempty ( ) )
[3]: org. junit. assert. assertnull ( musics )
[4]: org. junit. assert. assertnotnull ( musics )

************

************
tgt: org . junit . assert . assertthat ( issues , org . hamcrest . corematchers . is ( expectedissuestocarryover ) )
[0]: org. junit. assert. assertequals ( 0, musics. size ( )
[1]: ) )
[2]: org. junit. assert. assertequals ( initialtime, lastaccess )
[3]: org. junit. assert. assertequals ( inittime, lastaccess )
[4]: org. junit. assert. assertequals ( initialtime, ( lastaccess ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ks == null ) )
[0]: org. junit. assert. assertequals ( initial time, lastaccess )
[1]: org. junit. assert. asserttrue ( ( initialtime == lastaccess ) )
[2]: org. junit. assert. assertequals ( factory, factory2 )
[3]: org. junit. assert. assertarrayequals ( p1, cache. remove ( 1, p2, 0, p1. length ) )
[4]: org. junit. assert. assertarrayequals ( p1, cache. remove ( 1, p2, 0, p1 ) )

************

************
tgt: org . junit . assert . assertequals ( expressieverwacht , expressie )
[0]: org. junit. assert. assertarrayequals ( p1, cache. remove ( 1, p2, 0, 1 ) )
[1]: org. junit. assert. assertarrayequals ( p1, cache. remove ( 1, p2, 0, true ) )
[2]: org. junit. assert. assertequals ( 1, cache. remove ( 1, p1, p2, 0 ) )
[3]: org. junit. assert. assertnotnull ( getcertificatedirectory ( ) )
[4]: org. junit. assert. assertnotnull ( tlscertificateauthorityclientcommandline. getcertificatedirectory ( ) )

************

************
tgt: org . junit . assert . assertthat ( occurrences . size ( ) , is ( 10 ) )
[0]: org. junit. assert. assertnotnull ( testcertificatefile )
[1]: org. junit. assert. assertequals ( 1, testcertificatefile. getcertificatedirectory ( ) )
[2]: org. junit. assert. assertequals ( 1, testcertificatefile. getcertificatedirectory ( ). length )
[3]: org. junit. assert. assertequals ( allowed, wms. getcrss ( ) )
[4]: org. junit. assert. assertequals ( 1, wms. getcrss ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . size ( ) )
[0]: org. junit. assert. assertnotnull ( wms. getcrss ( ) )
[1]: org. junit. assert. assertequals ( 0, wms. getcrss ( ). size ( ) )
[2]: org. junit. assert. assertequals ( supported, wms. getcrss ( ) )
[3]: org. junit. assert. assertnotnull ( obj )
[4]: org. junit. assert. assertequals ( obj, stringclass )

************

************
tgt: org . junit . assert . asserttrue ( a . getresult ( ) )
[0]: org. junit. assert. assertequals ( 0, dao. getrules ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, dao. getrules ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, root. getrules ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, impl. getrules ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, collection. getrules ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( canadd )
[0]: org. junit. assert. assertnotnull ( isopen ( ) )
[1]: org. junit. assert. assertnull ( isopen ( ) )
[2]: org. junit. assert. assertfalse ( isopen ( ) )
[3]: org. junit. assert. assertequals ( 0, isopen ( ) )
[4]: org. junit. assert. assertequals ( 0, isopen ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( truenodes , resultnodes )
[0]: org. junit. assert. assertequals ( parentidcertificate, deserializedparentid )
[1]: org. junit. assert. assertequals ( parenthandle, deserializedparentid )
[2]: org. junit. assert. assertequals ( parentparentcertificate, deserializedparentid )
[3]: org. junit. assert. assertequals ( parentcncertificate, deserializedparentid )
[4]: org. junit. assert. assertthat ( node1. gettokens ( ), org. hamcrest. matchers. is ( expected ) )

************

************
tgt: org . junit . assert . asserttrue ( rs . next ( ) )
[0]: org. junit. assert. assertthat ( node1, org. hamcrest. matchers. is ( expected ) )
[1]: org. junit. assert. assertequals ( expected, node1. gettokens ( ) )
[2]: org. junit. assert. assertequals ( expected, graph. gettokens ( ) )
[3]: org. junit. assert. assertthat ( node1. gettokens ( ), org. hamcrest. matchers. contains ( expected ) )
[4]: org. junit. assert. assertnotnull ( getcontexthandles ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , time . gettime ( ) )
[0]: org. junit. assert. assertequals ( 0, getcontexthandles ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, getcontexthandles ( ). size ( ) )
[2]: org. junit. assert. assertnull ( getcontexthandles ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( pn. getfamilyname2 ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertnotnull ( pn )
[1]: org. junit. assert. assertnotnull ( pn. getfamilyname1 ( ) )
[2]: org. junit. assert. assertnull ( pn )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, datamanager. getqueries ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( result2 , org . hamcrest . corematchers . is ( interfaceip ) )
[0]: org. junit. assert. assertequals ( 9, datamanager. getqueries ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 2, datamanager. getqueries ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 3, datamanager. getqueries ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, datamanager. getqueries ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , result )
[0]: org. junit. assert. assertequals ( input, e )
[1]: org. junit. assert. assertnull ( e )
[2]: org. junit. assert. asserttrue ( true )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( getmanager ( ). stream ( ) )

************

************
tgt: org . junit . assert . asserttrue ( r1 . equals ( r2 ) )
[0]: org. junit. assert. assertnotnull ( getmanager ( ) )
[1]: org. junit. assert. assertnotnull ( getmanager ( ). collect ( ) )
[2]: org. junit. assert. assertnotnull ( getmanager ( ). union ( ) )
[3]: org. junit. assert. assertnotnull ( getmanager ( ). collection ( ) )
[4]: org. junit. assert. assertequals ( firstinstance, secondinstance )

************

************
tgt: org . junit . assert . assertequals ( 0 , users . count ( ) )
[0]: org. junit. assert. assertequals ( 1, com. intendia. gwt. autorest. client. jreresourcebuildertest. rest. many ( ). tolist ( ). blockingget ( ). size ( ) )
[1]: org. junit. assert. asserttrue ( edu. uci. ics. texera. api. utils. testutils. equals ( expectedresults, exactresults ) )
[2]: org. junit. assert. asserttrue ( edu. uci. ics. texera. api. utils. testutils. contains ( expectedresults, exactresults ) )
[3]: org. junit. assert. asserttrue ( edu. uci. ics. texera. api. constants. testutils. equals ( expectedresults, exactresults ) )
[4]: org. junit. assert. asserttrue ( edu. uci. ics. texera. api. utils. testutils. result ( expectedresults, exactresults ) )

************

************
tgt: org . junit . assert . assertequals ( true , result )
[0]: org. junit. assert. asserttrue ( edu. uci. ics. texera. api. utils. ident_31. equals ( expectedresults, exactresults ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), lambdalist. iterator ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 2 ), lambdalist. iterator ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), lambdalist. iterator ( ) )
[4]: org. junit. assert. assertequals ( 1, lambdalist. iterator ( ). next ( ) )

************

************
tgt: org . junit . assert . assertequals ( status . running , jobcoordinator . getjobinfowire ( ) . getstatus ( ) )
[0]: org. junit. assert. assertnotnull ( lambdalist. iterator ( ) )
[1]: org. junit. assert. assertequals ( n, readbigdecimal ( ) )
[2]: org. junit. assert. assertequals ( n, reader. readbigdecimal ( ) )
[3]: org. junit. assert. assertequals ( n, java. math. bigdecimal. readbigdecimal ( ) )
[4]: org. junit. assert. assertequals ( n, new java. math. bigdecimal ( reader. readbigdecimal ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( org . springframework . flex . config . runtimeenvironment . ishibernate4supportavailable ( ) )
[0]: ) )
[1]: org. junit. assert. assertthat ( effect, is ( 1 ) )
[2]: org. junit. assert. assertequals ( lastmodificationtimems, inodedirectory. getlastmodificationtimems ( ) )
[3]: org. junit. assert. asserttrue ( ( lastmodificationtimems > newlastmodificationtimems ) )
[4]: org. junit. assert. assertnotnull ( inodedirectory. getlastmodificationtimems ( ) )

************

************
tgt: org . junit . assert . assertsame ( objectelement , superclass . aselement ( ) )
[0]: org. junit. assert. asserttrue ( ( lastmodificationtimems < ( inodedirectory. getlastmodificationtimems ) ) )
[1]: org. junit. assert. assertequals ( lastmodificationtimems, inodedirectory. getlastmodificationtimems ( ). length )
[2]: org. junit. assert. assertnull ( request. getproperty ( null ) )
[3]: org. junit. assert. assertnull ( request. getproperty ( ""foo"" ) )
[4]: org. junit. assert. assertnull ( request. getproperty ( 0 ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( null, request. getproperty ( null ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( target. getinlink ( ) )
[3]: org. junit. assert. assertequals ( 1, target. getinlink ( ) )
[4]: org. junit. assert. assertequals ( 1, target. getinlink ( ). length )

************

************
tgt: org . junit . assert . assertnotnull ( filter )
[0]: org. junit. assert. assertequals ( 1, target. getinlink ( ). size ( )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, vc. getattributeasintlistoffset ( null, 0, 1 ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, vc. getattributeasintlistoffset ( null, 1, 1 ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, vc. getattributeasintlistoffset ( null, 0, 1 ) )

************

************
tgt: org . junit . assert . assertequals ( instancestatus . stopping , this . app . getmysqlvm ( ) . getstatus ( ) )
[0]: org. junit. assert. assertequals ( 0, vc. getattributeasintlistoffset ( null, 1, 1 ) )
[1]: org. junit. assert. assertequals ( 0, vc. getattributeasintlistoffset ( ""a"", 1, 1 ) )
[2]: org. junit. assert. assertarrayequals ( expected, output )
[3]: org. junit. assert. assertequals ( expected, output )
[4]: org. junit. assert. assertarrayequals ( expected, actual )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertequals ( expected, actualcapability )
[2]: org. junit. assert. assertequals ( integer. max_value, result )
[3]: org. junit. assert. assertequals ( line, arrowable. getarrowline ( ) )
[4]: org. junit. assert. assertnotnull ( elapsed )

************

************
tgt: org . junit . assert . assertequals ( tmpdir , persister . getoutputdirectory ( ) )
[0]: org. junit. assert. assertequals ( 1, elapsed )
[1]: org. junit. assert. assertequals ( 5, elapsed )
[2]: org. junit. assert. assertequals ( 3, elapsed )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, sibs. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( null , converter . converttomodel ( "" , java . lang . enum . class , null ) )
[0]: org. junit. assert. assertequals ( i, totalevents )
[1]: org. junit. assert. assertequals ( 1, totalevents )
[2]: org. junit. assert. assertequals ( expectedfiles, totalevents )
[3]: org. junit. assert. assertequals ( ( i * j ), totalevents )
[4]: org. junit. assert. assertequals ( org. apache. hadoop. util. collections. emptylist ( ), totalevents )

************

************
tgt: org . junit . assert . asserttrue ( other . isprefixof ( fixture ) )
[0]: org. junit. assert. assertequals ( 1, sc. invokedestinationcalled ( ) )
[1]: org. junit. assert. assertequals ( 0, sc. invokedestinationcalled ( ) )
[2]: org. junit. assert. assertequals ( true, sc. invokedestinationcalled ( ) )
[3]: org. junit. assert. asserttrue ( sc. invokedestinationcalled ( ) )
[4]: org. junit. assert. assertequals ( 1, sc. invokedestinationcalled ( ). size ( )

************

************
tgt: org . junit . assert . assertequals ( evalcount , contexts . size ( ) )
[0]: org. junit. assert. assertequals ( 1, time )
[1]: org. junit. assert. assertequals ( 0, time )
[2]: org. junit. assert. assertequals ( 2, time )
[3]: org. junit. assert. assertequals ( 20, time )
[4]: org. junit. assert. assertequals ( 3, time )

************

************
tgt: org . junit . assert . assertequals ( 0 , ret )
[0]: org. junit. assert. assertequals ( 0, root. getchildren ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), root. getchildren ( ) )
[2]: org. junit. assert. asserttrue ( root. getchildren ( ). isempty ( ) )
[3]: org. junit. assert. assertnull ( root. getchildren ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( output )
[0]: org. junit. assert. assertequals ( expecting, result )
[1]: org. junit. assert. assertequals ( expecting, a1. tostring ( ) )
[2]: org. junit. assert. assertequals ( expecting, a1. getmessage ( ) )
[3]: org. junit. assert. assertequals ( expecting, a2. getmessage ( ) )
[4]: assertequals assertequals expecting, result )

************

************
tgt: org . junit . assert . assertequals ( "asd" , t . gettype ( ) )
[0]: org. junit. assert. assertnotnull ( temp )
[1]: org. junit. assert. assertnotnull ( temporary )
[2]: , temp )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( result . fail , user . apply ( item ) )
[0]: org. junit. assert. assertequals ( expresult, words )
[1]: org. junit. assert. assertequals ( expresult, words, words )
[2]: org. junit. assert. assertequals ( expresult, words )
[3]: org. junit. assert. assertequals ( expresult, words ( ) )
[4]: org. junit. assert. assertequals ( expresult, words, null )

************

************
tgt: org . junit . assert . assertthat ( domainarchivedeployer . deploypackagedartifact ( org . mule . runtime . module . deployment . internal . domainarchivedeployertestcase . domain_zip_path , empty ( ) ) , org . hamcrest . core . is . is ( mockdomain ) )
[0]: org. junit. assert. assertequals ( current, t. deltams ( current ) )
[1]: org. junit. assert. assertequals ( instant, t. deltams ( current ) )
[2]: org. junit. assert. assertequals ( new long ( current ), t. deltams ( current ) )
[3]: org. junit. assert. assertequals ( ( current - current ), t. deltams ( current ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . long . valueof ( 1l ) , result )
[0]: org. junit. assert. assertnotnull ( theexpression. get ( ) )
[1]: org. junit. assert. assertnull ( theexpression. get ( ) )
[2]: org. junit. assert. assertnotnull ( thisexpression. get ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertnotnull ( tuples )
[0]: org. junit. assert. assertequals ( locale, testapimisuse10. getlocale ( ) )
[1]: org. junit. assert. assertnotnull ( testapimisuse10. getlocale ( ) )
[2]: org. junit. assert. assertequals ( locale, testapimws. getlocale ( ) )
[3]: org. junit. assert. assertnull ( testapimisuse10. getlocale ( ) )
[4]: org. junit. assert. assertequals ( locale, testapimisuse10 )

************

************
tgt: org . junit . assert . asserttrue ( ddmstructureversions . isempty ( ) )
[0]: org. junit. assert. asserttrue ( this. document. ismetadatadirty ( ) )
[1]: org. junit. assert. asserttrue ( this. document. hasmetadatadirty ( ) )
[2]: org. junit. assert. assertfalse ( this. document. ismetadatadirty ( ) )
[3]: org. junit. assert. asserttrue ( this. document. aremetadatadirty ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , countstream )
[0]: org. junit. assert. assertnotnull ( actual. getjobname ( ) )
[1]: org. junit. assert. assertnotnull ( actual )
[2]: org. junit. assert. assertequals ( jobname, actual )
[3]: org. junit. assert. assertequals ( jobname, actual. getjobname )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( chargingschedule . getchargingscheduleperiod ( ) , org . hamcrest . corematchers . equalto ( chargingscheduleperiod ) )
[0]: org. junit. assert. assertequals ( 1, billinginput. getsubscriptionkeys ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, billinginput. getsubscriptionkeys ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 3, billinginput. getsubscriptionkeys ( ). size ( ) )
[3]: org. junit. assert. assertequals ( true, billinginput. getsubscriptionkeys ( ). isempty ( ) )
[4]: org. junit. assert. assertequals ( 6, billinginput. getsubscriptionkeys ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnull ( lm . getcredentials ( ) )
[0]: org. junit. assert. assertequals ( true, com. lassekoskela. time. clock. clockisticking ( ) )
[1]: org. junit. assert. assertfalse ( com. lassekoskela. time. clock. clockisticking ( ) )
[2]: org. junit. assert. assertequals ( false, com. lassekoskela. time. clock. clockisticking ( ) )
[3]: org. junit. assert. assertequals ( true, com. unsekoskela. time. clock. clockisticking ( ) )
[4]: org. junit. assert. assertequals ( true, clockisticking ( ) )

************

************
tgt: org . junit . assert . assertequals ( "a" 0 , found )
[0]: org. junit. assert. assertequals ( 1, question. getattachments ( ). size ( ) )
[1]: org. junit. assert. assertthat ( processedclaims. size ( ), org. hamcrest. corematchers. is ( 0 ) )
[2]: org. junit. assert. assertthat ( processedclaims. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[3]: org. junit. assert. assertthat ( processedclaims. size ( ), org. hamcrest. corematchers. is ( 0l ) )
[4]: org. junit. assert. assertequals ( string, zipreader. getentryasstring ( string ) )

************

************
tgt: org . junit . assert . assertthat ( model2 . getmyenum ( ) , org . hamcrest . corematchers . is ( sortdirection . ascending ) )
[0]: org. junit. assert. assertequals ( string, zipreader. getentryasstring ( null ) )
[1]: org. junit. assert. assertequals ( string, zipreader. getentryasstring ( name ) )
[2]: org. junit. assert. assertequals ( string, zipreader. getentryasstring ( 0 ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( list )

************

************
tgt: org . junit . assert . assertequals ( tenantdto , foundtenant )
[0]: org. junit. assert. assertnotnull ( list. size ( ) )
[1]: org. junit. assert. assertnotnull ( list. isempty ( ) )
[2]: org. junit. assert. assertequals ( expected, list )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( msg . getpayloadbuffer ( ) , expectedresponsev1 ) )
[0]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( 1, e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( 1, e. count )
[3]: ) )
[4]: org. junit. assert. assertequals ( shouldbe, attr. get ( shouldbe ) )

************

************
tgt: org . junit . assert . assertthat ( givenvalue , org . hamcrest . corematchers . is ( convertedvalue ) )
[0]: org. junit. assert. assertequals ( shouldbe, attr. get ( teststring [ 0 ] ) )
[1]: org. junit. assert. assertequals ( shouldbe, attr. get ( willbe ) )
[2]: org. junit. assert. assertequals ( shouldbe, attr. get ( string. length ( ) ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, commitinfo. getnewrevision ( ) )

************

************
tgt: org . junit . assert . assertfalse ( subject . controleer ( persoon , verzoek ) )
[0]: org. junit. assert. assertequals ( 0, commitinfo. getnewrevision ( ) )
[1]: org. junit. assert. assertequals ( expected, result )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( long. class ), jetbrains. jetpad. hybrid. hybridsynchronizer. getcells ( null ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), jetbrains. jetpad. hybrid. hybridsynchronizer. getcells ( null ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( null ), jetbrains. jetpad. hybrid. hybridsynchronizer. getcells ( null ) )

************

************
tgt: org . junit . assert . assertnotnull ( zielobjekt )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( ), jetbrains. jetpad. hybrid. hybridsynchronizer. getcells ( null ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( tenanteventfamilymaps, storedfamilymaps )
[3]: org. junit. assert. assertequals ( 1, storedfamilymaps. size ( ) )
[4]: org. junit. assert. assertequals ( 0, storedfamilymaps. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( tenanteventfamilymaps, storedetags )
[1]: org. junit. assert. assertequals ( tenant tenantfamilymaps, storedfamilymaps )
[2]: org. junit. assert. assertequals ( output, multiplexed )
[3]: org. junit. assert. assertequals ( output. tostring ( ), multiplexed. tostring ( ) )
[4]: org. junit. assert. assertequals ( output. touppercase ( ), multiplexed. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , fixture . mark ( ) )
[0]: org. junit. assert. assertequals ( output. touppercase ( ), multiplexed. touppercase ( ) )
[1]: org. junit. assert. assertequals ( badcell, e. getmessage ( ) )
[2]: org. junit. assert. assertnotnull ( badcell )
[3]: org. junit. assert. assertequals ( badcell, badcell )
[4]: org. junit. assert. assertequals ( badcell, ee. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectederrmsg , e . getmessage ( ) )
[0]: org. junit. assert. assertnull ( badcell )
[1]: org. junit. assert. assertequals ( content, decoded. content ( ) )
[2]: org. junit. assert. assertequals ( content, decoded )
[3]: org. junit. assert. assertequals ( string, decoded. content ( ) )
[4]: org. junit. assert. assertequals ( content. content ( ), decoded )

************

************
tgt: org . junit . assert . assertequals ( slice1assert , slice1test )
[0]: ) )
[1]: org. junit. assert. assertequals ( false, dialog. isbuilding ( ) )
[2]: org. junit. assert. assertequals ( null, dialog. isbuilding ( ) )
[3]: org. junit. assert. assertequals ( true, dialog. isbuilding ( ) )
[4]: org. junit. assert. assertequals ( 0, dialog. isbuilding ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expecteddelayinseconds , 60 , 2 )
[0]: org. junit. assert. assertequals ( false, dialog. isbuilding ( ). get ( ) )
[1]: org. junit. assert. assertequals ( 1, objmap. get ( field_int ) )
[2]: org. junit. assert. assertequals ( null, objmap. get ( field_int ) )
[3]: org. junit. assert. assertequals ( 0, objmap. get ( field_int ) )
[4]: org. junit. assert. assertequals ( 1, objmap. get ( null ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( obj . methodreturnsint ( ) , 0 )
[0]: org. junit. assert. assertequals ( 0, objmap. get ( field_int ). length )
[1]: org. junit. assert. assertequals ( 0.1, com. cloud. utils. db. genericdaobase. getobject ( com. cloud. utils. db. long. class, resultset, 1 ), 0.1 )
[2]: org. junit. assert. assertequals ( 0.1, com. cloud. utils. db. genericdaobase. getobject ( com. cloud. utils. db. double. class, resultset, 1 ), 0.1 )
[3]: org. junit. assert. assertequals ( 0.1, com. cloud. utils. db. genericdaobase. getobject ( com. cloud. utils. db. integer. class, resultset, 1 ), 0.1 )
[4]: org. junit. assert. assertequals ( 0.1, com. cloud. utils. db. genericdaobase. getobject ( com. cloud. utils. db. boolean. class, resultset, 1 ), 0.1 )

************

************
tgt: org . junit . assert . assertsame ( expectedresponse , actualresponse )
[0]: org. junit. assert. assertequals ( 0.1, com. cloud. utils. db. genericdaobase. getobject ( com. cloud. utils. db. long. class, resultset, 1 ) )
[1]: org. junit. assert. assertequals ( expected, input )
[2]: org. junit. assert. assertequals ( expected, input. escape ( input ) )
[3]: org. junit. assert. assertequals ( recipe, matchshapedrecipe ( tree, testingredients ) )
[4]: org. junit. assert. assertequals ( recipe, tree. matchshapedrecipe ( testingredients, testingredients ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( instance . maxsize ( ) ) > 100 ) )
[0]: org. junit. assert. assertequals ( recipe, matchesshapedrecipe ( tree, testingredients ) )
[1]: org. junit. assert. assertequals ( recipe. matchshapedrecipe ( testingredients, testingredients ), tree )
[2]: org. junit. assert. assertsame ( recipe, matchshapedrecipe ( tree, testingredients ) )
[3]: org. junit. assert. assertequals ( 1, assignedclientid )
[4]: org. junit. assert. assertequals ( 0, assignedclientid )

************

************
tgt: org . junit . assert . assertequals ( false , test . equals ( doy ) )
[0]: org. junit. assert. assertequals ( 1001, assignedclientid )
[1]: org. junit. assert. assertequals ( assignedclientid, assignedclientid )
[2]: org. junit. assert. assertequals ( 2001, assignedclientid )
[3]: org. junit. assert. assertequals ( 0, list. entryset ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, this. list. entryset ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( entry , serde )
[0]: org. junit. assert. assertthat ( list. entryset ( ), org. hamcrest. matchers. empty ( ) )
[1]: org. junit. assert. assertthat ( list. entryset ( ). size ( ), org. hamcrest. matchers. is ( 0 ) )
[2]: org. junit. assert. assertequals ( 0, set. entryset ( ). size ( ) )
[3]: org. junit. assert. assertthat ( (! ( matchingartifacts. isempty ( ) ) ), org. hamcrest. matchers. is ( false ) )
[4]: org. junit. assert. assertthat ( matchingartifacts. isempty ( ), org. hamcrest. matchers. is ( false ) )

************

************
tgt: org . junit . assert . assertfalse ( token . isset ( ) )
[0]: org. junit. assert. assertthat ( matchartifacts. isempty ( ), org. hamcrest. matchers. is ( false ) )
[1]: org. junit. assert. assertthat ( matchedartifacts. isempty ( ), org. hamcrest. matchers. is ( false ) )
[2]: org. junit. assert. assertthat ( (! ( matchingartifacts. isempty ( ) ) ), org. hamcrest. matchers. is ( true ) )
[3]: org. junit. assert. assertequals ( pagecount, content. length )
[4]: org. junit. assert. assertarrayequals ( pagecount, content )

************

************
tgt: org . junit . assert . asserttrue ( ( ( instance . max ( ) ) == ( double . positive_infinity ) ) )
[0]: org. junit. assert. assertequals ( pagecount, content )
[1]: org. junit. assert. assertnotnull ( content )
[2]: , content. length )
[3]: org. junit. assert. assertequals ( true, handler. isenabled ( ) )
[4]: org. junit. assert. assertfalse ( handler. isenabled ( ) )

************

************
tgt: org . junit . assert . assertequals ( 20170000 , datumliteral . alsinteger ( ) )
[0]: org. junit. assert. assertequals ( false, handler. isenabled ( ) )
[1]: org. junit. assert. assertequals ( 1, getresidenttimesecs ( entry, now ) )
[2]: org. junit. assert. assertequals ( 1, impl. getresidenttimesecs ( entry, now ) )
[3]: org. junit. assert. assertequals ( 0, impl. getresidenttimesecs ( entry, now ) )
[4]: org. junit. assert. assertequals ( 1, entry. getresidenttimesecs ( null, now ) )

************

************
tgt: org . junit . assert . assertnotnull ( factory )
[0]: org. junit. assert. assertequals ( 1, impl. getresidenttimesecs ( entry, now ). length )
[1]: org. junit. assert. assertthat ( diff, org. hamcrest. matchers. empty ( ) )
[2]: org. junit. assert. assertequals ( diff, org. javersion. core. difftest. map ( diff ) )
[3]: org. junit. assert. assertequals ( 1, diff. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), diff )

************

************
tgt: org . junit . assert . assertarrayequals ( salt , passedsalt )
[0]: org. junit. assert. assertnotnull ( diff )
[1]: org. junit. assert. assertequals ( 1, nvar )
[2]: org. junit. assert. assertequals ( 0, nvar )
[3]: org. junit. assert. assertequals ( 1, nvar, 0 )
[4]: org. junit. assert. assertequals ( 1l, nvar )

************

************
tgt: org . junit . assert . assertequals ( 0 , pairs . size ( ) )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertequals ( 1, size )
[2]: org. junit. assert. assertequals ( 0, size )
[3]: org. junit. assert. assertthat ( size, org. hamcrest. core )
[4]: org. junit. assert. assertequals ( 6, size )

************

************
tgt: org . junit . assert . assertthat ( facebook . games ( ) , org . hamcrest . corematchers . instanceof ( facebook4j . gamemethods . class ) )
[0]: org. junit. assert. assertequals ( 3, size )
[1]: org. junit. assert. assertequals ( true, crop. haseffect ( ) )
[2]: org. junit. assert. assertequals ( false, crop. haseffect ( ) )
[3]: org. junit. assert. assertfalse ( crop. haseffect ( ) )
[4]: org. junit. assert. assertequals ( null, crop. haseffect ( ) )

************

************
tgt: org . junit . assert . assertnull ( d )
[0]: org. junit. assert. assertthat ( rulekeywithoutdep, org. hamcrest. matchers. equalto ( rulekeywithoutdep ) )
[1]: org. junit. assert. assertequals ( grammar, found )
[2]: org. junit. assert. assertnull ( found )
[3]: org. junit. assert. assertnotnull ( found )
[4]: org. junit. assert. assertequals ( 1, found )

************

************
tgt: org . junit . assert . assertequals ( 1 , results . size ( ) )
[0]: org. junit. assert. assertequals ( null, found )
[1]: org. junit. assert. assertnotnull ( westpanel. getparentpanel ( ) )
[2]: org. junit. assert. assertnotnull ( westpanel )
[3]: org. junit. assert. assertequals ( part1, westpanel )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( term , org . hamcrest . corematchers . is ( this . expected ) )
[0]: )
[1]: org. junit. assert. assertequals ( assertions, returned )
[2]: org. junit. assert. assertequals ( org. sagebionetworks. evaluation. manager. submissionmanagertest. userinfo, retrieved. getdockerdigest ( ) )
[3]: org. junit. assert. assertequals ( org. sagebionetworks. evaluation. manager. submissionmanagertest. aggregator, retrieved. getdockerdigest ( ) )
[4]: org. junit. assert. assertequals ( null, retrieved. getdockerdigest ( ) )

************

************
tgt: org . junit . assert . assertthat ( this . request . getpagenumber ( ) , org . hamcrest . corematchers . is ( pagenumber ) )
[0]: org. junit. assert. assertnotnull ( retrieved. getdockerdigest ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( valsuffix, map. get ( key ) )
[3]: org. junit. assert. assertnotnull ( map. get ( key ) )
[4]: org. junit. assert. assertequals ( valsuffix, keys. get ( key ) )

************

************
tgt: org . junit . assert . assertequals ( players . get ( 0 ) , game . getplayerinbtn ( ) )
[0]: org. junit. assert. assertequals ( key, map. get ( key ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( optionlist, result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( events . isempty ( ) )
[0]: , result )
[1]: ) )
[2]: org. junit. assert. assertequals ( input, output )
[3]: org. junit. assert. assertnotnull ( output )
[4]: org. junit. assert. assertnull ( output )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: , output )
[1]: ) )
[2]: org. junit. assert. assertequals ( representation. full, getrepresentation ( restconstants. representation_fullrepresentation. tostring ( ) ) )
[3]: org. junit. assert. assertequals ( representation. full, getrepresentation ( restconstants. representation_full ) )
[4]: org. junit. assert. assertequals ( representation. full, getrepresentation ( restconstants. representation_fullrepresentation ) )

************

************
tgt: org . junit . assert . assertequals ( 0.7777f , org . simmetrics . example . stringmetricsexample . example02 ( ) , org . simmetrics . example . stringmetricsexampletest . delta )
[0]: org. junit. assert. assertequals ( representation. full, getrepresentation ( restconstants. representation_fullrepresentation. getid ( ) ) )
[1]: org. junit. assert. assertequals ( representation. default, getrepresentation ( restconstants. representation_fullrepresentation. tostring ( ) ) )
[2]: org. junit. assert. assertnotnull ( r )
[3]: org. junit. assert. assertequals ( null, r )
[4]: org. junit. assert. assertnull ( r )

************

************
tgt: org . junit . assert . assertequals ( "/a/d" , result . tostring ( ) )
[0]: org. junit. assert. assertequals ( 200, r )
[1]: ) )
[2]: org. junit. assert. assertequals ( now, eventwhichfails. geteventlengthinseconds ( ) )
[3]: org. junit. assert. assertnotnull ( eventwhichfails. geteventlengthinseconds ( ) )
[4]: org. junit. assert. assertequals ( 1, eventwhichfails. geteventlengthinseconds ( ) )

************

************
tgt: org . junit . assert . assertnull ( existinglayout )
[0]: org. junit. assert. assertequals ( now. geteventlengthinseconds ( ), eventwhichfails )
[1]: org. junit. assert. assertequals ( now, eventwhichfails )
[2]: org. junit. assert. assertequals ( 1, result. geterrors ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, result. geterrors ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 2, result. geterrors ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( mfilesystem . getstatus ( uri ) )
[0]: org. junit. assert. asserttrue ( result. geterrors ( ). isempty ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( htd, deserializedhtd )
[3]: org. junit. assert. assertequals ( hte, deserializedhtd )
[4]: org. junit. assert. assertequals ( htds, deserializedhtd )

************

************
tgt: org . junit . assert . assertnull ( wallpaper )
[0]: org. junit. assert. assertequals ( htc, deserializedhtd )
[1]: org. junit. assert. assertequals ( htd, deserializedhtd ) )
[2]: org. junit. assert. assertthat ( info. id ( ), org. hamcrest. matchers. is ( expectedid ) )
[3]: org. junit. assert. assertthat ( info. id ( ), org. hamcrest. matchers. equalto ( expectedid ) )
[4]: org. junit. assert. assertequals ( expectedid, info. id ( ) )

************

************
tgt: org . junit . assert . assertfalse ( target . validate ( ) )
[0]: org. junit. assert. assertthat ( info, org. hamcrest. matchers. is ( expectedid ) )
[1]: org. junit. assert. assertthat ( information. id ( ), org. hamcrest. matchers. is ( expectedid ) )
[2]: org. junit. assert. assertequals ( 0, klass. getprop ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, klass. getprop ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, klass. getprop ( ) )

************

************
tgt: org . junit . assert . assertequals ( options , java . lang . system . getproperty ( com . ea . agentloader . test . agentloadertest . someagent . class . getname ( ) ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), klass )
[1]: org. junit. assert. assertequals ( 0, klass. getprop ( ). length )
[2]: org. junit. assert. assertequals ( expected, builder. tostring ( ) )
[3]: org. junit. assert. assertequals ( expected, output )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertequals ( 1 , wb . getnumberofsheets ( ) )
[0]: org. junit. assert. assertequals ( expected, builder. build ( ) )
[1]: org. junit. assert. assertequals ( expected, builder. output ( ) )
[2]: org. junit. assert. asserttrue ( gradok )
[3]: org. junit. assert. assertequals ( gradok, act )
[4]: org. junit. assert. assertequals ( gradok, act2 )

************

************
tgt: org . junit . assert . assertthat ( found . getid ( ) , org . hamcrest . corematchers . is ( statusentity . getid ( ) ) )
[0]: org. junit. assert. assertequals ( gradok, actu )
[1]: org. junit. assert. assertarrayequals ( act, act )
[2]: org. junit. assert. assertequals ( 1, branch_conditions. size ( ) )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( expected ) )
[4]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( equalto ( expected ) ) )

************

************
tgt: org . junit . assert . assertequals ( filterreply . neutral , filter . decide ( event ) )
[0]: org. junit. assert. assertthat ( actual, is ( org. hamcrest. corematchers. equalto ( expected ) ) )
[1]: org. junit. assert. assertthat ( actual, is ( equalto ( expected ) ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. asserttrue ( iterator. hasnext ( ) )
[4]: org. junit. assert. assertequals ( 1, sourcefilelist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , association . getatomcount ( ) )
[0]: org. junit. assert. assertequals ( 7, sourcefilelist. size ( ) )
[1]: org. junit. assert. assertequals ( 0, sourcefilelist. size ( ) )
[2]: , sourcefilelist )
[3]: ) )
[4]: org. junit. assert. assertequals ( configurator. getport ( ), port )

************

************
tgt: org . junit . assert . asserttrue ( params . equals ( expectparams ) )
[0]: org. junit. assert. assertequals ( 1, configurator. getport ( ) )
[1]: org. junit. assert. assertequals ( null, configurator. getport ( ) )
[2]: org. junit. assert. assertequals ( net, configurator. getport ( ) )
[3]: org. junit. assert. assertequals ( org. englishtown. vertx. cassandra. util. arraylist. class, configurator. getport ( ) )
[4]: org. junit. assert. assertnotnull ( datasource )

************

************
tgt: org . junit . assert . assertfalse ( org . teiid . net . teiidurl . isvalidserverurl ( server_url ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( result, this )
[3]: org. junit. assert. assertequals ( result, null )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. asserttrue ( com. sun. mail. util. proputil. getbooleanproperty ( props, null, false ) )
[1]: org. junit. assert. asserttrue ( com. sun. mail. util. proputil. getbooleanproperty ( props, null, true ) )
[2]: org. junit. assert. asserttrue ( com. sun. mail. util. proputil. getbooleanproperty ( props, ""test"", true ) )
[3]: org. junit. assert. assertequals ( 1, com. sun. mail. util. proputil. getbooleanproperty ( props, null, true ) )
[4]: org. junit. assert. asserttrue ( com. sun. mail. util. proputil. getbooleanproperty ( props, ""test"", false ) )

************

************
tgt: org . junit . assert . asserttrue ( service . validate ( io . motown . identificationauthorization . authorizationservice . identifying_token , io . motown . identificationauthorization . authorizationservice . charging_station_id ) . isvalid ( ) )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertequals ( expected, buchberger )
[2]: org. junit. assert. assertequals ( a, b )
[3]: org. junit. assert. assertequals ( expected, gb )
[4]: org. junit. assert. assertequals ( expected, buchz )

************

************
tgt: org . junit . assert . assertnotnull ( changed . getvalue ( ) )
[0]: org. junit. assert. assertnotnull ( lockingservice. lockpatient ( null ) )
[1]: org. junit. assert. assertnull ( lockingservice. lockpatient ( null ) )
[2]: org. junit. assert. assertnotnull ( lockingservice. lockpatient ( patientid ) )
[3]: org. junit. assert. assertnotnull ( lockingservice )
[4]: org. junit. assert. assertnull ( lockingservice )

************

************
tgt: org . junit . assert . assertfalse ( event . ischecked ( ) )
[0]: org. junit. assert. assertequals ( 1, rowkeys. size ( ) )
[1]: org. junit. assert. assertequals ( 0, rowkeys. size ( ) )
[2]: org. junit. assert. assertequals ( s, added )
[3]: org. junit. assert. assertequals ( s, list )
[4]: org. junit. assert. assertequals ( s, songindex )

************

************
tgt: org . junit . assert . assertnotnull ( ds . get ( key ) )
[0]: org. junit. assert. assertnotnull ( artistindex )
[1]: org. junit. assert. assertequals ( s, result )
[2]: org. junit. assert. assertnotnull ( sink )
[3]: org. junit. assert. assertnotnull ( com. hazelcast. jet. impl. connector. hazelcastconnectortest. jetinstance )
[4]: org. junit. assert. assertnotnull ( source )

************

************
tgt: org . junit . assert . assertequals ( value , enumerationitem . getvalue ( ) )
[0]: org. junit. assert. assertnotnull ( compress )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( resultentity )
[3]: org. junit. assert. assertequals ( true, client. hasmobile ( ) )
[4]: org. junit. assert. assertnotnull ( response )

************

************
tgt: org . junit . assert . asserttrue ( ( ( connection . getmetadata ( ) ) instanceof org . apache . shardingsphere . shardingjdbc . orchestration . internal . circuit . metadata . circuitbreakerdatabasemetadata ) )
[0]: org. junit. assert. assertequals ( null, response )
[1]: org. junit. assert. assertequals ( key. getresource, response )
[2]: org. junit. assert. assertequals ( 1, key. count )
[3]: ) )
[4]: org. junit. assert. assertequals ( 3, results. getresultsize ( ), 10 )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( 4, results. getresultsize ( ), 10 )
[1]: org. junit. assert. assertequals ( 4, results. getresultsize ( ) )
[2]: org. junit. assert. assertequals ( 3, results. getresultsize ( ) )
[3]: org. junit. assert. assertequals ( 200, results. getresultsize ( ) )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( 0, result )
[1]: org. junit. assert. assertequals ( 3, result )
[2]: org. junit. assert. assertequals ( 5, result )
[3]: org. junit. assert. assertnotnull ( treated )
[4]: org. junit. assert. assertnull ( treated )

************

************
tgt: org . junit . assert . asserttrue ( containsall )
[0]: org. junit. assert. assertequals ( entity, treated
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( data, this. item. getdata ( ) )
[4]: org. junit. assert. assertequals ( data, item. getdata ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( node )
[0]: org. junit. assert. assertequals ( data, this. data. getdata ( ) )
[1]: data ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, instance. getjarartifact ( ). length )
[4]: org. junit. assert. assertequals ( 1, instance. getjarartifact ( ). length )

************

************
tgt: org . junit . assert . assertnotnull ( jobresult )
[0]: org. junit. assert. assertequals ( 0, instance. getjarartifact ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, instance. getjarartifact ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( instance. getjarartifact ( ) )
[3]: org. junit. assert. assertequals ( 1, job. getnumreducetasks ( ) )
[4]: org. junit. assert. assertnotnull ( incrementcounterlistener. counter )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, incrementcounterlistener. counter )
[1]: ( counter ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnotnull ( cell. focused ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. asserttrue ( cell. focused ( ). isempty ( ) )
[1]: org. junit. assert. assertnull ( cell. focused ( ) )
[2]: org. junit. assert. assertequals ( 1, cell. focused ( ) )
[3]: org. junit. assert. assertequals ( 1, cell. focused ( ). length )
[4]: org. junit. assert. assertnotnull ( gegeveninonderzoek. getentiteitofvoorkomen ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , meldingen . size ( ) )
[0]: org. junit. assert. assertnotnull ( gegeveninonderzoek. getentiteitofvoorkomen ( ). get ( 0 ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), xvalues )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), xvalues )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), xvalues )
[4]: org. junit. assert. assertequals ( subst, xvalues )

************

************
tgt: org . junit . assert . asserttrue ( success )
[0]: ) )
[1]: org. junit. assert. assertequals ( filesizebefore, filesizeafter )
[2]: org. junit. assert. assertequals ( filesizeafter, filesizebefore )
[3]: org. junit. assert. assertequals ( filesizeafter, filesizeafter )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( issymboliclink )
[0]: org. junit. assert. assertequals ( s, _get )
[1]: org. junit. assert. assertequals ( expected, xtendunsugaredared )
[2]: org. junit. assert. assertnotnull ( xtendunsugaredaredaredok )
[3]: org. junit. assert. assertnotnull ( xtendunsugaredexpression )
[4]: org. junit. assert. assertnotnull ( deleteuserkramerduplicate )

************

************
tgt: org . junit . assert . assertsame ( created , got )
[0]: org. junit. assert. assertequals ( 1, analyzer. getresults ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, analyz. getresults ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( analyzer. getresults ( ) )
[3]: org. junit. assert. assertnotnull ( analyzer. getresults ( ). get ( 0 ) )
[4]: org. junit. assert. assertnotnull ( analyzer. getresults ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( existingddmforminstancerecord , newddmforminstancerecord )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. assertequals ( exception, e )
[2]: org. junit. assert. assertequals ( 0, e. getclass ( ) )
[3]: org. junit. assert. assertequals ( 1, e. getclass ( ) )
[4]: org. junit. assert. assertequals ( 1, e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertthat ( list ( namepattern, namepattern ), org. hamcrest. matchers. contains ( jobid1, jobid2 ) )
[1]: org. junit. assert. assertthat ( list ( namepattern, job1 ), org. hamcrest. matchers. contains ( jobid1, jobid2 ) )
[2]: org. junit. assert. assertthat ( list ( namepattern, job1 ), org. hamcrest. matchers. is ( java. util. optional. of ( jobid1 ) ) )
[3]: org. junit. assert. assertthat ( list ( jobid1. tostring ( ), namepattern ), org. hamcrest. matchers. contains ( jobid2. tostring ( ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( activitylist . size ( ) ) == 1 ) )
[0]: org. junit. assert. assertequals ( expectedexception, result )
[1]: org. junit. assert. assertequals ( 1, c. getminheight ( ) )
[2]: org. junit. assert. assertequals ( 0, c. getminheight ( ) )
[3]: org. junit. assert. assertnotnull ( c. getminheight ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( resultaat . issuccesvol ( ) )
[0]: )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( scope, result )
[3]: org. junit. assert. assertequals ( result, scope )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( ind . put ( keysd [ i ] , v ) )
[0]: )
[1]: org. junit. assert. assertnotnull ( schema. getfields ( ) )
[2]: org. junit. assert. assertnotnull ( schema. getfields ( ). size ( ) )
[3]: org. junit. assert. asserttrue ( schema. getfields ( ). isempty ( ) )
[4]: org. junit. assert. assertnotnull ( schema. getfields ( ). isempty ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( ctx )
[0]: ) )
[1]: org. junit. assert. asserttrue ( ok. get ( ) )
[2]: org. junit. assert. assertnotnull ( ok. get ( ) )
[3]: org. junit. assert. assertfalse ( ok. get ( ) )
[4]: get ( ) )

************

************
tgt: org . junit . assert . assertequals ( block . getvalue ( ) , "6" )
[0]: ) )
[1]: org. junit. assert. assertequals ( mocked, actual )
[2]: org. junit. assert. assertequals ( new java. lang. double ( 1 ), sum )
[3]: org. junit. assert. assertequals ( new java. lang. double ( 1.0 ), sum )
[4]: org. junit. assert. assertequals ( null, sum )

************

************
tgt: org . junit . assert . assertthat ( org . diirt . util . array . listnumbers . listnumbers . binarysearchvalueorlower ( values , 2 ) , equalto ( 1 ) )
[0]: org. junit. assert. assertequals ( new java. lang. double ( 2 ), sum )
[1]: org. junit. assert. assertequals ( 1, sum, 0 )
[2]: org. junit. assert. assertnull ( credentialsprovider )
[3]: org. junit. assert. assertequals ( expected, credentialsprovider )
[4]: org. junit. assert. assertequals ( credentialsprovider, credentialsprovider )

************

************
tgt: org . junit . assert . assertequals ( "treeitem1menuitem1" , item . gettext ( ) )
[0]: org. junit. assert. assertnull ( credentialsprovider. getvalue ( ) )
[1]: org. junit. assert. assertequals ( response1, credentialsprovider )
[2]: org. junit. assert. assertnotnull ( firstvalidinput )
[3]: org. junit. assert. assertarrayequals ( firstvalidinput, inputs )
[4]: org. junit. assert. assertequals ( 999l, downloadar. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( requestresult . success , requestresult )
[0]: org. junit. assert. asserttrue ( downloadar. testunmetforentity ( ) )
[1]: org. junit. assert. assertequals ( 999l, downloadar. method_8 ( ) )
[2]: org. junit. assert. assertequals ( 999l, downloadar. result )
[3]: org. junit. assert. assertnotnull ( downloadar )
[4]: org. junit. assert. assertarrayequals ( expected, result )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertnull ( com. google. cloud. tools. eclipse. appengine. localserver. server. moduleutils. getserviceid ( module ) )
[1]: org. junit. assert. assertequals ( 0, com. google. cloud. tools. eclipse. appengine. localserver. server. moduleutils. getserviceid ( module ) )
[2]: org. junit. assert. assertnotnull ( com. google. cloud. tools. eclipse. appengine. localserver. server. moduleutils. getserviceid ( module ) )
[3]: org. junit. assert. assertequals ( null, com. google. cloud. tools. eclipse. appengine. localserver. server. moduleutils. getserviceid ( module ) )
[4]: org. junit. assert. assertfalse ( com. google. cloud. tools. eclipse. appengine. localserver. server. moduleutils. getserviceid ( module ) )

************

************
tgt: org . junit . assert . assertequals ( "2" , maxwidth )
[0]: org. junit. assert. assertequals ( 1, category. getproducts ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, category. getproducts ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 2, category. getproducts ( ). size ( ) )
[3]: org. junit. assert. assertequals ( ordered. size ( ), category. getproducts ( ). length )
[4]: org. junit. assert. assertequals ( ordered. size ( ), category. getproducts ( ). size ( )

************

************
tgt: org . junit . assert . asserttrue ( field . getzero ( ) . equals ( map . get ( mapentry . getkey ( ) ) ) )
[0]: org. junit. assert. asserttrue ( meldingen. isempty ( ) )
[1]: org. junit. assert. asserttrue ( feature. evaluate ( filter ) )
[2]: org. junit. assert. asserttrue ( feature. evaluate ( feature ) )
[3]: org. junit. assert. asserttrue ( feature. evaluate ( null ) )
[4]: org. junit. assert. asserttrue ( feature. evaluate ( collection ) )

************

************
tgt: org . junit . assert . assertfalse ( opennlp . tools . namefind . bilounamefindersequencevalidatortest . validator . validsequence ( 1 , inputsequence , outcomessequence , outcome ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( value, org. apache. oozie. util. stringserializationutil. readstring ( datainput ) )
[2]: org. junit. assert. assertequals ( value, org. apache. oozie. util. stringserializationutil. readstring ( datainput. tobytearray ( ) ) )
[3]: org. junit. assert. assertequals ( value, org. apache. oozie. util. stringserializationutil. readstring ( datainput. getvalue ( ) ) )
[4]: org. junit. assert. assertequals ( values, org. apache. oozie. util. stringserializationutil. readstring ( datainput ) )

************

************
tgt: org . junit . assert . assertequals ( k , dk )
[0]: org. junit. assert. assertequals ( value, org. apache. oozie. util. stringserializationutil. readstring ( datainput, baos ) )
[1]: org. junit. assert. assertequals ( 1, customer1. getsources ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, customer1. getsources ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 2, customer1. getsources ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, org. oscm. accountservice. bean. organizations. customer1. customers. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . contains ( empty , a , b , ab ) )
[0]: org. junit. assert. assertequals ( customer1. getsources ( ). size ( ), 1 )
[1]: org. junit. assert. assertequals ( true, exceptionoccured )
[2]: org. junit. assert. assertthat ( ts. getpattern ( ), org. hamcrest. corematchers. is ( 2 ) )
[3]: org. junit. assert. assertthat ( ts. getpattern ( ), org. hamcrest. corematchers. is ( java. lang. string. valueof ( 2 ) ) )
[4]: org. junit. assert. assertthat ( ts. getpattern ( ), org. hamcrest. corematchers. is ( java. lang. long. tostring ( 2 ) ) )

************

************
tgt: org . junit . assert . assertequals ( dlg . getcredentials ( ) . getclass ( ) . getname ( ) , user . getcredentials ( ) . getclass ( ) . getname ( ) )
[0]: org. junit. assert. assertthat ( ts. getpattern ( ), org. hamcrest. corematchers. is ( java. lang. system. currenttimemillis ( ) ) )
[1]: org. junit. assert. assertthat ( ts. getpattern ( ), org. hamcrest. corematchers. is ( java. util. optional. of ( ) ) )
[2]: org. junit. assert. assertnull ( value )
[3]: org. junit. assert. assertequals ( null, value )
[4]: org. junit. assert. assertnotnull ( value )

************

************
tgt: org . junit . assert . assertequals ( expectedpoolcount , info . getconsumertypecountbypool ( ) )
[0]: org. junit. assert. assertnull ( ( value == null ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( expr. accept ( visitor ), visitresult )
[3]: org. junit. assert. assertthat ( option, is ( null ) )
[4]: org. junit. assert. assertthat ( option, is ( option ) )

************

************
tgt: org . junit . assert . assertequals ( stroke , acceleratorkey )
[0]: org. junit. assert. assertthat ( option, is ( options ) )
[1]: type ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, p1. compareto ( p2 ) )
[4]: org. junit. assert. assertequals ( 0, p1. compareto ( p2 ) )

************

************
tgt: org . junit . assert . assertequals ( "/parent/new" , n2 . getpath ( ) )
[0]: org. junit. assert. assertequals ( 1, p0. compareto ( p2 ) )
[1]: org. junit. assert. assertequals ( 1, p2. compareto ( p1 ) )
[2]: org. junit. assert. assertequals ( 1, p1. compareto ( p2 ) ) ;
[3]: org. junit. assert. assertarrayequals ( expected, key )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertequals ( expected [ i ] , actual )
[0]: org. junit. assert. assertequals ( expected, result )
[1]: org. junit. assert. assertarrayequals ( expected, result )
[2]: org. junit. assert. assertarrayequals ( expected, actual )
[3]: org. junit. assert. assertequals ( 1, ret )
[4]: org. junit. assert. assertequals ( 1, mroundedcolordrawable. iscircle ( ) )

************

************
tgt: org . junit . assert . asserttrue ( program . isstopped ( ) )
[0]: org. junit. assert. assertnotnull ( mroundedcolordrawable. iscircle ( ) )
[1]: org. junit. assert. assertequals ( true, mroundedcolordrawable. iscircle ( ) )
[2]: org. junit. assert. assertequals ( null, mroundedcolordrawable. iscircle ( ) )
[3]: org. junit. assert. assertequals ( 1, mroundedcolordrawable. iscircle ( ). length )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( arr . tensoralongdimension ( 0 , 1 ) , arr . tensoralongdimension ( 0 , 1 ) )
[0]: org. junit. assert. assertnotnull ( results )
[1]: org. junit. assert. assertnotnull ( res )
[2]: org. junit. assert. assertnotnull ( find )
[3]: org. junit. assert. assertnotnull ( omonomer. getmonomertype ( ) )
[4]: org. junit. assert. assertequals ( 2, omonomer. getmonomertype ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( totallen - 100 ) , sizecontrollablefile . size ( ) )
[0]: org. junit. assert. assertequals ( null, omonomer. getmonomertype ( ) )
[1]: org. junit. assert. assertnull ( omonomer. getmonomertype ( ) )
[2]: org. junit. assert. assertequals (monomer. getmonomertype ( ), omonomer )
[3]: org. junit. assert. assertequals ( statedescription1. getoptions ( ), finalstatedescription. getoptions ( ) )
[4]: org. junit. assert. assertequals ( statedescription1, finalstatedescription. getoptions ( ) )

************

************
tgt: org . junit . assert . assertequals ( script , "" )
[0]: org. junit. assert. assertequals ( statedescription1. getoptions ( ), finalstatedescription )
[1]: org. junit. assert. assertequals ( statedescription1. getoptions ( ), finalstatedescription. getoptions ( ) )
[2]: org. junit. assert. assertequals ( statedescription1. getoptions ( ), finalstatedescription. getoptions )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertnotnull ( str )
[0]: org. junit. assert. assertequals ( result, null )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. assertnotnull ( mm. getgrid ( ) [ 8 ] [ 8 ] )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )

************

************
tgt: org . junit . assert . assertequals ( configurationserviceclient , configurationserviceclientsearched )
[0]: org. junit. assert. assertequals ( 1, result. getundefined ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, result. getundefined ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), result )
[4]: org. junit. assert. assertnotnull ( message )

************

************
tgt: org . junit . assert . asserttrue ( ( ( at . gettemplate ( ) . length ( ) ) == 0 ) )
[0]: org. junit. assert. assertequals ( reconstructedwrapper, reconstructed )
[1]: org. junit. assert. assertequals ( reconstructedwrapper, reconstructed
[2]: org. junit. assert. assertnotnull ( reconstructed )
[3]: org. junit. assert. assertnotnull ( reconstructedwrapper )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( actions , org . hamcrest . matchers . contains ( new querqy . rewrite . commonrules . model . action ( java . util . arrays . aslist ( instructions ) , termmatches ( s1 ) , 0 , 1 ) ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 9 ), org. campagnelab. dl. genotype. segments. segmentlabelmapper. sortbyindices ( teststring, testindices ) )
[1]: org. junit. assert. assertequals ( org. campagnelab. dl. genotype. segments. segmentlabelmapper. sortbyindices ( teststring, testindices ), testindices )
[2]: org. junit. assert. assertequals ( teststring, org. campagnelab. dl. genotype. segments. segmentlabelmapper. sortbyindices ( teststring, testindices ) )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 9 ), org. campagnelab. dl. genotype. segments. segmentlabelmapper. sortbyindices ( teststring, testindices ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. campagnelab. dl. genotype. segments. segmentlabelmapper. sortbyindices ( teststring, testindices ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , loadmodules . size ( ) )
[0]: org. junit. assert. assertequals ( 1, testbean. getresult ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, testbean. getresult ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1l, testbean. getresult ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( testbean. getresult ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( missingfriendlyurlentrylocalization )
[0]: org. junit. assert. asserttrue ( connectionsource. isforeign ( ) )
[1]: org. junit. assert. assertfalse ( connectionsource. isforeign ( ) )
[2]: org. junit. assert. assertequals ( true, fieldtype. isforeign ( ) )
[3]: org. junit. assert. assertfalse ( fieldtype. isforeign ( ) )
[4]: org. junit. assert. assertequals ( false, fieldtype. isforeign ( ) )

************

************
tgt: org . junit . assert . assertfalse ( filter . shouldfilter ( ) )
[0]: org. junit. assert. assertequals ( true, result )
[1]: org. junit. assert. assertequals ( expectedoutput, out )
[2]: org. junit. assert. assertequals ( expectedoutput, out. tostring ( ) )
[3]: org. junit. assert. assertequals ( expectedoutput, output )
[4]: org. junit. assert. assertequals ( expectedoutput, output. tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( receivedstatus , org . hamcrest . matchers . is ( forbidden ) )
[0]: org. junit. assert. assertequals ( expectedoutput, out. getmessage ( ) )
[1]: org. junit. assert. assertnotnull ( relationship. getname ( ) )
[2]: org. junit. assert. assertequals ( org. apache. commons. lang3. stringutils. class, relationship. getname ( ) )
[3]: org. junit. assert. assertequals ( org. apache. hadoop. conf. configuration. class, relationship. getname ( ) )
[4]: org. junit. assert. assertequals ( propertyset. getname ( ), relationship. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , genericobjectpool . getnumidle ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( javax. servlet. http. httpservletresponse. sc_bad_request, exceptionreport. gethttpstatuscode ( ) )
[2]: org. junit. assert. assertequals ( httpservletresponse. sc_bad_request, exceptionreport. gethttpstatuscode ( ) )
[3]: org. junit. assert. assertequals ( getexpectedstatuscode ( ), exceptionreport. gethttpstatuscode ( ) )
[4]: org. junit. assert. assertequals ( javax. servlet. http. httpservletresponse. sc_bad_request, exceptionreport )

************

************
tgt: org . junit . assert . assertthat ( state . values ( ) )
[0]: org. junit. assert. assertequals ( javax. servlet. http. httpservletresponse. sc_bad_request, exceptionreport. gethttpstatuscode ( ) )
[1]: org. junit. assert. assertnotnull ( scan )
[2]: org. junit. assert. assertequals ( rs, scan )
[3]: org. junit. assert. assertequals ( rootfunction, overwritefunction. getresource ( ) )
[4]: org. junit. assert. assertnotnull ( overwritefunction. getresource ( ) )

************

************
tgt: org . junit . assert . assertthat ( validationfailures . getnumberofmessages ( ) , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert. assertequals ( rootfunction. getresource ( ), overwritefunction )
[1]: org. junit. assert. assertnull ( overwritefunction. getresource ( ) )
[2]: org. junit. assert. assertequals ( rootfunction. getresource ( ), overwritefunction
[3]: org. junit. assert. assertequals ( ticksstyle. bottom, axes1. getticksstyle ( ) )
[4]: org. junit. assert. assertequals ( ticksstyle. bottom, axis1. getticksstyle ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , args . length )
[0]: org. junit. assert. assertequals ( ticksstyle. top, axes1. getticksstyle ( ) )
[1]: org. junit. assert. assertequals ( tickstyle. bottom, axes1. getticksstyle ( ) )
[2]: org. junit. assert. assertnotnull ( axes1. getticksstyle ( ) )
[3]: org. junit. assert. assertequals ( 6, cumulates. size ( ) )
[4]: org. junit. assert. assertequals ( 1, cumulates. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, cumulates. size ( ) )
[1]: org. junit. assert. assertequals ( 5, cumulates. size ( ) )
[2]: org. junit. assert. assertthat ( match. equals ( match ), org. hamcrest. corematchers. is ( false ) )
[3]: org. junit. assert. assertthat ( match. equals ( null ), org. hamcrest. corematchers. is ( false ) )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( result, expected )
[1]: org. junit. assert. assertequals ( exp, result )
[2]: org. junit. assert. assertequals ( expected, results )
[3]: org. junit. assert. assertequals ( expected, result ) of )
[4]: org. junit. assert. assertequals ( null, plaintext )

************

************
tgt: org . junit . assert . asserttrue ( permissions . tostring ( ) , permissions . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( plaintext )
[1]: org. junit. assert. assertequals ( string, plaintext )
[2]: type ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( response )

************

************
tgt: org . junit . assert . assertarrayequals ( new short [ ] { 1 , 2 } , array )
[0]: org. junit. assert. assertnotnull ( adapter. tostring ( ) )
[1]: org. junit. assert. assertnotnull ( payload )
[2]: org. junit. assert. assertnotnull ( response. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( null, cookie. getname ( ) )

************

************
tgt: org . junit . assert . assertnull ( sessions . get ( id ) )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( null ), cookie. getname ( ) )
[1]: org. junit. assert. assertequals ( 1, cookie. getname ( ) )
[2]: org. junit. assert. assertequals ( 0, cookie. getname ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 0 ), cookie. getname ( ) )
[4]: org. junit. assert. assertfalse ( testedstore. existproperty ( null ) )

************

************
tgt: org . junit . assert . assertequals ( xml , notainfoitemproduto . tostring ( ) )
[0]: org. junit. assert. assertnull ( testedstore. existproperty ( null ) )
[1]: org. junit. assert. assertfalse ( testedstore. existproperty ( ""test"" ) )
[2]: org. junit. assert. assertfalse ( testedstore. existproperty ( name ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( specificdatumreader, deserialized )

************

************
tgt: org . junit . assert . assertequals ( com . google . common . collect . immutablelist . of ( "test1" ) , snapshot . getvalue ( ) )
[0]: org. junit. assert. assertequals ( specdatumreader, deserialized )
[1]: org. junit. assert. assertequals ( existingdatumreader, deserialized )
[2]: org. junit. assert. assertequals ( specificdatumreader. read ( ), deserialized )
[3]: org. junit. assert. assertnotnull ( deserialized )
[4]: org. junit. assert. assertequals ( null, pp. getpassword ( ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . double ( 2 ) , new java . lang . double ( es . getaverageduration ( ) ) )
[0]: org. junit. assert. assertequals ( 1, foundusers. size ( ) )
[1]: org. junit. assert. asserttrue ( foundusers. isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, foundusers. size ( ) )
[3]: org. junit. assert. assertequals ( 1, foundusers. size ( )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , out . out . size ( ) )
[0]: org. junit. assert. assertequals ( newmultimapwithkeysvalues ( values, 2, 3 ), rejectedmultimap )
[1]: org. junit. assert. assertequals ( newmultimapwithkeysvalues ( values, 2, 1 ), rejectedmultimap )
[2]: org. junit. assert. assertequals ( newmultimapwithkeysvalues ( values, null, null ), rejectedmultimap )
[3]: org. junit. assert. assertequals ( 1, rejectedmultimap )
[4]: org. junit. assert. assertnotnull ( rejectedmultimap )

************

************
tgt: org . junit . assert . assertequals ( 0 , metric . count ( ) )
[0]: org. junit. assert. assertequals ( messagetrace1, messagetrace2 )
[1]: org. junit. assert. assertequals ( messagetrace2, messagetrace1 )
[2]: org. junit. assert. assertnull ( messagetrace1 )
[3]: org. junit. assert. assertequals ( messagetrace1, messagreferences2 )
[4]: org. junit. assert. assertequals ( messagetrace1, messagetrace1 )

************

************
tgt: org . junit . assert . assertequals ( 1 , j . get ( ) )
[0]: org. junit. assert. assertequals ( org. omg. corba. arg_in. value, mode )
[1]: org. junit. assert. assertequals ( 1, mode )
[2]: org. junit. assert. assertequals ( 0, mode )
[3]: org. junit. assert. assertequals ( org. omg. corba. arg_in. values, mode )
[4]: org. junit. assert. assertequals ( 3, mode )

************

************
tgt: org . junit . assert . assertequals ( null , fileextension )
[0]: org. junit. assert. asserttrue ( ( ( ( intruth - numagree ) < 50 ) && ( ( normalvecs. size ( ) ) > 50 ) ) )
[1]: org. junit. assert. asserttrue ( ( ( ( intruth - numagree ) < 50 ) || ( ( normalvecs. size ( ) ) < 50 ) ) )
[2]: org. junit. assert. asserttrue ( ( ( ( intruth. size ( ) ) > 0 ) && ( ( normalvecs. size ( ) ) < 50 ) ) )
[3]: org. junit. assert. asserttrue ( ( ( v. size ( ) ) < 50 ) )
[4]: org. junit. assert. asserttrue ( ( ( ( intruth. size ( ) ) > ( - 15 ) ) && ( ( normalvecs. size ( ) ) < 50 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , subschemaentry . size ( ) )
[0]: org. junit. assert. assertnotnull ( headerbuilder. tostring ( ) )
[1]: org. junit. assert. assertequals ( headerbuilder. tostring ( ), headerbuilder. tostring ( ) )
[2]: org. junit. assert. assertequals ( 0, headerbuilder. tostring ( ). length ( ) )
[3]: org. junit. assert. assertequals ( headerbuilder. tostring ( ), headerbuilder. getmessage ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( target , instance . gettarget ( ) )
[0]: org. junit. assert. assertequals ( expectedpath, testpath )
[1]: org. junit. assert. assertequals ( expectedpath, testspath )
[2]: org. junit. assert. assertequals ( expected path, testpath )
[3]: org. junit. assert. assertequals ( expectedpath, testpath. trim ( ) )
[4]: org. junit. assert. assertequals ( result, testpath )

************

************
tgt: org . junit . assert . asserttrue ( alg . execute ( element ) )
[0]: org. junit. assert. assertequals ( 1, actions. size ( ) )
[1]: org. junit. assert. assertthat ( tomap ( deserialized ), org. hamcrest. matchers. is ( entries ) )
[2]: org. junit. assert. assertthat ( tomap ( deserialized ), org. hamcrest. matchers. equalto ( entries ) )
[3]: org. junit. assert. assertthat ( tomap ( deserialized ), org. hamcrest. matchers. contains ( entries ) )
[4]: org. junit. assert. assertequals ( entries, tomap ( deserialized ) )

************

************
tgt: org . junit . assert . assertequals ( h , h2 )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, command. getvariables ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, command. getvariables ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 3, command. getvariables ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 4, command. getvariables ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( i + 20 ) == next ) )
[0]: org. junit. assert. assertequals ( jv1, jv2 )
[1]: org. junit. assert. assertequals ( jv2, jv1 )
[2]: org. junit. assert. assertequals ( jv2, jv2 )
[3]: org. junit. assert. assertnotnull ( jv2 )
[4]: org. junit. assert. assertequals ( jvparent, jv2 )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, specificresourceallocation. getassignments ( ). size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( specificresourceallocation. getassignments ( ). size ( ) ) == 1 ) )
[2]: org. junit. assert. assertequals ( 1, entries. size ( ) )
[3]: org. junit. assert. assertequals ( 0, entries. size ( ) )
[4]: org. junit. assert. assertnotnull ( entries )

************

************
tgt: org . junit . assert . assertthat ( minimumbalanceprincipal , org . hamcrest . corematchers . is ( org . mifos . framework . testutils . createmoney ( "12000" ) ) )
[0]: org. junit. assert. assertequals ( emptylist ( ), entries )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0.25, percentile. getresult ( ) )
[3]: org. junit. assert. assertarrayequals ( 0.25, percentile. getresult ( ) )
[4]: org. junit. assert. assertarrayequals ( res, percentile. getresult ( ) )

************

************
tgt: org . junit . assert . assertthat ( uk . org . lidalia . slf4jtest . testloggerfactory . getallloggingevents ( ) , org . hamcrest . corematchers . is ( aslist ( uk . org . lidalia . slf4jtest . loggingevent . info ( "message1" ) , uk . org . lidalia . slf4jtest . loggingevent . info ( "message2" ) ) ) )
[0]: org. junit. assert. assertequals ( res, percentile. getresult ( ) )
[1]: org. junit. assert. assertequals ( 0.25 }, percentile. getresult ( ) )
[2]: org. junit. assert. assertequals ( 3, result. events. size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. events. size ( ) )
[4]: org. junit. assert. assertequals ( 2, result. events. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( html , sanitized )
[0]: org. junit. assert. assertequals ( 3, result. events. get ( ). count )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, e. getontologyid ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, e. getontologyid ( ) )
[4]: org. junit. assert. assertequals ( i139, e. getontologyid ( ) )

************

************
tgt: org . junit . assert . asserttrue ( response . get ( 1 ) . contains ( "[error]<sp>configuration<sp>for<sp>loopback<sp>interface<sp>not<sp>allowed" ) )
[0]: org. junit. assert. assertnotnull ( e. getontologyid ( ) )
[1]: org. junit. assert. assertequals ( 1, e. getontologyid ( ). length )
[2]: org. junit. assert. assertnotnull ( host. gethostname ( ) )
[3]: org. junit. assert. assertequals ( null, host. gethostname ( ) )
[4]: org. junit. assert. assertequals ( 0, host. gethostname ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( exception . getmessage ( ) , str )
[0]: org. junit. assert. assertequals ( 0, host. gethostname ( ) )
[1]: ) )
[2]: org. junit. assert. assertthat ( props. getproductname ( ), org. hamcrest. core. is. is ( configurationadmin ) )
[3]: org. junit. assert. assertthat ( props. getproductname ( ), org. hamcrest. core. is. is ( configurationadmin. getdatname ( ) ) )
[4]: org. junit. assert. assertthat ( props. getproductname ( ), org. hamcrest. core. is. is ( configadmin ) )

************

************
tgt: org . junit . assert . assertnotnull ( goodhandler . waitforfaultmessage ( ) )
[0]: org. junit. assert. assertthat ( props. getproductname ( ), org. hamcrest. core. is. is ( configadmin. getdatname ( ) ) )
[1]: org. junit. assert. assertthat ( props. getproductname ( ), org. hamcrest. core. is. is ( configprops ) )
[2]: org. junit. assert. assertequals ( 0, iterator. next ( ). length )
[3]: org. junit. assert. assertequals ( 0, iterator. hasnext ( ) )
[4]: org. junit. assert. assertequals ( 0, iterator. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "hello" , config . construct ( java . lang . string . class ) )
[0]: org. junit. assert. assertequals ( 0, iterator. next ( ). count )
[1]: org. junit. assert. assertequals ( 1, iterator. next ( ). length )
[2]: org. junit. assert. assertnotnull ( value. gettype ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), value. gettype ( ) )
[4]: org. junit. assert. assertnull ( value. gettype ( ) )

************

************
tgt: org . junit . assert . assertthat ( slaveserver1 . gethostname ( ) , org . hamcrest . corematchers . equalto ( org . pentaho . di . ui . spoon . sharedobjectsyncutiltest . after_sync_value ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. class, value. gettype ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( }, value. gettype ( ) )
[2]: org. junit. assert. asserttrue ( role. haspermission ( permission ) )
[3]: org. junit. assert. asserttrue ( permission. haspermission ( permission ) )
[4]: org. junit. assert. asserttrue ( permission. haspermission ( role ) )

************

************
tgt: org . junit . assert . assertequals ( 333l , doc . getproperty ( "cmpf:attachedfile/vignettes/vignette[0]/width" ) . getvalue ( ) )
[0]: org. junit. assert. asserttrue ( filter. haspermission ( permission ) )
[1]: , role )
[2]: org. junit. assert. assertequals ( org. apache. flink. streaming. connectors. activemq. activemqconnectoritcase. messages_num, response )
[3]: org. junit. assert. assertequals ( org. apache. flink. streaming. connectors. activemq. activemqconnectoritcase. messages_num, subscription )
[4]: org. junit. assert. assertequals ( org. apache. flink. streaming. connectors. activemq. activemqconnectoritcase. messages_num, response2 )

************

************
tgt: org . junit . assert . asserttrue ( tasks . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( response )
[1]: org. junit. assert. assertnotnull ( event )
[2]: org. junit. assert. asserttrue ( properties. hasproperty ( vf ) )
[3]: org. junit. assert. asserttrue ( properties. hasproperty ( pax ) )
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , client . listprivilegesbyrolename ( requestorusername , rolename , org . apache . sentry . provider . db . generic . service . thrift . solr , "service1" ) . size ( ) )
[0]: type ) {
[1]: ) )
[2]: org. junit. assert. asserttrue ( arr. some ( callbackfn ) )
[3]: org. junit. assert. assertnotnull ( tree. getparentitem ( ) )
[4]: org. junit. assert. assertequals ( 1, tree. getparentitem ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 10 , capturingpipeline . request . getcachettl ( ) )
[0]: org. junit. assert. assertequals ( 0, tree. getparentitem ( ). length )
[1]: org. junit. assert. assertarrayequals ( filtered, supportedciphers. toarray ( ) )
[2]: org. junit. assert. assertarrayequals ( defaultciphers. toarray ( ), supportedciphers. toarray ( ) )
[3]: org. junit. assert. assertarrayequals ( defaultciphers. toarray ( ), filtered )
[4]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { }, filtered )

************

************
tgt: org . junit . assert . assertthat ( model , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . notnullvalue ( ) ) )
[0]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { defaultciphers, null }, filtered )
[1]: org. junit. assert. assertequals ( 1, arrays. size ( ) )
[2]: org. junit. assert. assertequals ( 0, arrays. size ( ) )
[3]: org. junit. assert. assertnotnull ( arrays )
[4]: org. junit. assert. assertequals ( 2, arrays. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( alluxio . client . file . basefilesystemtest . exception , e )
[0]: org. junit. assert. assertequals ( 1, array. size ( ) )
[1]: org. junit. assert. assertnotnull ( runtime. getruntime ( database ) )
[2]: org. junit. assert. assertnull ( runtime. getruntime ( database ) )
[3]: org. junit. assert. assertequals ( null, runtime. getruntime ( database ) )
[4]: org. junit. assert. assertequals ( runtime. getruntime ( database ), runtime )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: type ) )
[1]: org. junit. assert. asserttrue ( from ( aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. g0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v2 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layout
[2]: org. junit. assert. asserttrue ( from ( aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. g0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v2 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layout
[3]: org. junit. assert. asserttrue ( from ( aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. g0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layout
[4]: org. junit. assert. asserttrue ( from ( aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. g0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v2 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layout

************

************
tgt: org . junit . assert . asserttrue ( guid1 . equals ( guid1 ) )
[0]: org. junit. assert. asserttrue ( from ( aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. g0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v0, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. v1, org. gradoop. flink. model. impl. layouts. gve. gvelayouttest. e1 ), aslist ( org. gradoop. flink. model. impl. layout
[1]: org. junit. assert. assertequals ( 200, response. getstatus ( ) )
[2]: org. junit. assert. assertequals ( response. getstatus ( ), 200 )
[3]: org. junit. assert. assertequals ( 1, response. getstatus ( ) )
[4]: org. junit. assert. assertequals ( 100, response. getstatus ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedarg , parsedarg )
[0]: org. junit. assert. assertequals ( 403, response. getstatus ( ) )
[1]: org. junit. assert. assertnotnull ( auditlogdataisempty ( ) )
[2]: org. junit. assert. assertnotnull ( timefield. gettext ( ) )
[3]: org. junit. assert. assertthat ( timefield. gettext ( ), org. hamcrest. corematchers. is ( """" ) )
[4]: org. junit. assert. assertthat ( timefield. gettext ( ), org. hamcrest. corematchers. is ( ""1"" ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( expirationtimechooser. time_field_name, timefield. gettext ( ) )
[1]: org. junit. assert. assertequals ( ""foo"", timefield. gettext ( ) )
[2]: org. junit. assert. assertequals ( event, result )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: type ) { result )
[1]: type ) )
[2]: org. junit. assert. assertnotnull ( map. get ( 1 ) )
[3]: org. junit. assert. assertnull ( map. get ( null ) )
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( parsedmetric , null )
[0]: ) )
[1]: type )
[2]: org. junit. assert. assertequals ( ts1, testfile. lastmodified ( ) )
[3]: org. junit. assert. assertequals ( ts1, testsfile. lastmodified ( ) )
[4]: org. junit. assert. assertequals ( ts1, ( ts1 + 1 ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , greenmail . getreceivedmessages ( ) . length )
[0]: org. junit. assert. assertequals ( ts0, testfile. lastmodified ( ) )
[1]: org. junit. assert. assertequals ( ts 1, testfile. lastmodified ( ) )
[2]: org. junit. assert. assertequals ( decodedvalue, result )
[3]: org. junit. assert. assertequals ( encodedvalue, result )
[4]: org. junit. assert. assertequals ( decodedkey, result )

************

************
tgt: org . junit . assert . assertequals ( val , reader . getdouble ( ) , 10 )
[0]: org. junit. assert. assertequals ( result, decodedvalue )
[1]: org. junit. assert. assertequals ( encodedkey, result )
[2]: org. junit. assert. assertequals ( 1, factor, 0 )
[3]: org. junit. assert. assertequals ( 3, factor, 0 )
[4]: org. junit. assert. assertequals ( 0, factor, 0 )

************

************
tgt: org . junit . assert . assertsame ( result , this . logger )
[0]: org. junit. assert. assertequals ( 1.0, factor, 0 )
[1]: org. junit. assert. assertequals ( 2, factor, 0 )
[2]: org. junit. assert. assertnotnull ( lo3inhoud )
[3]: org. junit. assert. assertequals ( 1, lo3inhoud. size ( ) )
[4]: org. junit. assert. assertnull ( lo3inhoud )

************

************
tgt: org . junit . assert . assertequals ( 2 , tasks . size ( ) )
[0]: org. junit. assert. asserttrue ( lo3inhoud. isempty ( ) )
[1]: org. junit. assert. assertequals ( 0, lo3inhoud. size ( ) )
[2]: org. junit. assert. assertequals ( 1, splitbycomma. size ( ) )
[3]: org. junit. assert. assertequals ( 0, splitbycomma. size ( ) )
[4]: org. junit. assert. assertequals ( 1, splitbyroutes. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 1, splitbycomments. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( expected ) )
[4]: org. junit. assert. assertthat ( actual, org. hamcrest.matchers. is ( expected ) )

************

************
tgt: org . junit . assert . asserttrue ( ( e instanceof java . lang . illegalargumentexception ) )
[0]: org. junit. assert. assertequals ( actual, expected )
[1]: ) )
[2]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( expected ) )
[3]: org. junit. assert. assertthat ( actual, is ( org. hamcrest. corematchers. equalto ( expected ) ) )
[4]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( equalto ( expected ) ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , session . from ( $ ( notevar ) ) . where ( where ) . list ( $ ( notevar ) ) . size ( ) )
[0]: org. junit. assert. assertthat ( expected, org. hamcrest. corematchers. is ( actual ) )
[1]: org. junit. assert. assertthat ( actual, is ( equalto ( expected ) ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 1, 1, 2, 2, 3 ), lists )
[3]: org. junit. assert. assertequals ( aslist ( aslist ( 1, 1, 1, 2, 2, 3 ) ), lists )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 1, 1, 2, 2 ), lists )

************

************
tgt: org . junit . assert . asserttrue ( payload . equals ( new java . lang . string ( deserializedevent . getbytes ( ) ) ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 1, 1 ), lists )
[1]: get ( 0 ) )
[2]: org. junit. assert. assertequals ( 0, data. getcomponents ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, data. getcomponents ( ). size ( ) )
[4]: org. junit. assert. assertequals ( true, resultaat )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertthat ( resultaat )
[1]: org. junit. assert. asserttrue ( resultaat )
[2]: org. junit. assert. assertfalse ( resultaat )
[3]: org. junit. assert. assertthat ( resultaat, em )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( lit3, lit2 ), nodes )

************

************
tgt: org . junit . assert . assertsame ( threadpoolexecutor , org . hyperledger . fabric . sdk . clienttest . hfclient . getexecutorservice ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( lit3, lit1 ), nodes )
[1]: org. junit. assert. assertequals ( aslist ( lit3, lit2, lit1 ), nodes )
[2]: org. junit. assert. assertequals ( aslist ( lit3, lit2 ), nodes )
[3]: org. junit. assert. assertequals ( list ( lit3, lit2 ), nodes )
[4]: org. junit. assert. assertequals ( 1, position )

************

************
tgt: org . junit . assert . assertequals ( expectedhash , computedhash )
[0]: org. junit. assert. assertequals ( 0, position )
[1]: org. junit. assert. assertequals ( 10, position )
[2]: org. junit. assert. assertequals ( 2, position )
[3]: org. junit. assert. assertequals ( 3, position )
[4]: org. junit. assert. assertnotnull ( updateresult )

************

************
tgt: org . junit . assert . assertequals ( java . util . timezone . gettimezone ( "america/sao_paulo" ) , config . gettimezone ( ) )
[0]: org. junit. assert. assertequals ( 1, updateresult )
[1]: org. junit. assert. assertequals ( 3, updateresult )
[2]: org. junit. assert. assertequals ( 2, updateresult )
[3]: ) )
[4]: org. junit. assert. assertequals ( expected, sb. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 15 , processedlist . size ( ) )
[0]: org. junit. assert. asserttrue ( sb. tostring ( ). contains ( expected ) )
[1]: org. junit. assert. assertequals ( sb. tostring ( ), expected )
[2]: test test5 )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, a. getrfc ( ) )

************

************
tgt: org . junit . assert . assertequals ( body , getresp . getbody ( ) )
[0]: org. junit. assert. assertequals ( 0, a. getrfc ( ) )
[1]: org. junit. assert. assertnotnull ( a. getrfc ( ) )
[2]: org. junit. assert. assertequals ( rfc, a. getrfc ( ) )
[3]: org. junit. assert. assertequals ( 1, a. getrfc ( ). length )
[4]: org. junit. assert. assertequals ( 1, context. getorder ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( long. max_value, filter. getorder ( ) )
[1]: org. junit. assert. assertequals ( 0, context. getorder ( ) )
[2]: org. junit. assert. assertequals ( 1, filter. getorder ( ) )
[3]: org. junit. assert. assertequals ( aggregate. getorder ( ), 1 )
[4]: org. junit. assert. asserttrue ( instance. accept ( extension ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , request . getheaders ( ) . length )
[0]: org. junit. assert. asserttrue ( instance. accept ( file ) )
[1]: org. junit. assert. asserttrue ( instance. accept ( java. util. file. extension ) )
[2]: org. junit. assert. asserttrue ( instance. accept ( java. util. file. class ) )
[3]: org. junit. assert. assertfalse ( instance. accept ( extension ) )
[4]: org. junit. assert. assertequals ( ( before + 1 ), checksum. getvalue ( ) )

************

************
tgt: org . junit . assert . assertnull ( fullname )
[0]: org. junit. assert. assertequals ( dbo, translateddto )
[1]: org. junit. assert. assertequals ( null, translateddto )
[2]: org. junit. assert. assertnull ( translateddto )
[3]: org. junit. assert. assertequals ( tv, translateddto )
[4]: org. junit. assert. assertequals ( exchange, translateddto )

************

************
tgt: org . junit . assert . assertequals ( result . pass , test . apply ( item ) )
[0]: org. junit. assert. assertequals ( 1, out. getlength ( ) )
[1]: org. junit. assert. assertequals ( 0, out. getlength ( ) )
[2]: org. junit. assert. assertequals ( output. getlength ( ), 0 )
[3]: org. junit. assert. assertequals ( length, out. getlength ( ) )
[4]: org. junit. assert. assertequals ( format. ntriples. getlength ( ), 0 )

************

************
tgt: org . junit . assert . assertequals ( ( capacity * 2 ) , txreq . numberoftransactionstorequest ( ) )
[0]: org. junit. assert. assertnull ( values )
[1]: org. junit. assert. assertnull ( set. toarray ( ) )
[2]: org. junit. assert. assertequals ( 1, tagservice. findalltags ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, tagservice. findalltags ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, tagsservice. findalltags ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( name , policy . getanonymousaccountrealmname ( ) )
[0]: org. junit. assert. assertnotnull ( tagservice. findalltags ( ) )
[1]: org. junit. assert. assertequals ( 1, tagservice. findalltags ( ). length )
[2]: org. junit. assert. assertequals ( 3, crh1. getcount ( ) )
[3]: org. junit. assert. assertequals ( 2, crh1. getcount ( ) )
[4]: org. junit. assert. assertequals ( 4, crh1. getcount ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . github . jloisel . reactive . conversion . jackson . jacksonserializer . class , serializer . getclass ( ) )
[0]: org. junit. assert. assertequals ( 1, crh1. getcount ( ) )
[1]: org. junit. assert. assertequals ( crh1. getcount ( ), crh2 )
[2]: org. junit. assert. assertequals ( o1. name ( ), o1. name ( ) )
[3]: org. junit. assert. assertequals ( eden. name ( ), o1. name ( ) )
[4]: org. junit. assert. assertequals ( name ( ), o1. name ( ) )

************

************
tgt: org . junit . assert . assertequals ( c , mlife . get ( entityid ) )
[0]: org. junit. assert. assertequals ( o1. name ( ), o1. tostring ( ) )
[1]: org. junit. assert. assertnotnull ( o1. name ( ) )
[2]: org. junit. assert. assertequals ( value, storeundertest. get ( ) )
[3]: org. junit. assert. assertequals ( value, storeundertest. get ( ). get ( ) )
[4]: org. junit. assert. assertequals ( value, storeundertest. get ( ). getstring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . size ( ) )
[0]: org. junit. assert. assertequals ( value, storeundertest. get ( ). tostring ( ) )
[1]: org. junit. assert. assertequals ( value, storeundertest. get ( ). value ( ) )
[2]: org. junit. assert. assertnull ( int. class. getsuperclass ( ) )
[3]: org. junit. assert. assertnotnull ( int. class. getsuperclass ( ) )
[4]: org. junit. assert. assertnull ( int. builder. getsuperclass ( ) )

************

************
tgt: org . junit . assert . asserttrue ( subject . controleer ( persoon , verzoek ) )
[0]: org. junit. assert. assertnull ( int. classifier. getsuperclass ( ) )
[1]: org. junit. assert. assertnull ( int )
[2]: org. junit. assert. assertequals ( withcreate, ret )
[3]: org. junit. assert. assertnotnull ( ret )
[4]: org. junit. assert. assertequals ( usingcreate, ret )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( hascreate, ret )
[1]: org. junit. assert. assertequals ( withcreate )
[2]: org. junit. assert. assertequals ( 0, org. nuxeo. ecm. core. event. test. dummypostcommiteventlistener. handledcount ( ) )
[3]: org. junit. assert. assertequals ( 3, org. nuxeo. ecm. core. event. test. dummypostcommiteventlistener. handledcount ( ) )
[4]: org. junit. assert. assertequals ( 1, org. nuxeo. ecm. core. event. test. dummypostcommiteventlistener. handledcount ( ) )

************

************
tgt: org . junit . assert . assertequals ( "some<sp>value" , parentresult . latest ( ) . tostring ( ) )
[0]: org. junit. assert. assertequals ( 0, org. nuxeo. ecm. core. event. test. dummypostcommiteventlistener. handledcount ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0l, org. nuxeo. ecm. core. event. test. dummypostcommiteventlistener. handledcount ( ) )
[2]: org. junit. assert. assertthat ( expected, org. hamcrest. corematchers. is ( actual ) )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( expected ) )
[4]: org. junit. assert. assertthat ( actual, is ( equalto ( expected ) ) )

************

************
tgt: org . junit . assert . assertarrayequals ( l , l2 )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: ) )
[2]: org. junit. assert. asserttrue ( reader. isnull ( ) )
[3]: org. junit. assert. assertfalse ( reader. isnull ( ) )
[4]: org. junit. assert. assertequals ( false, reader. isnull ( ) )

************

************
tgt: org . junit . assert . assertfalse ( registry . isbatchempty ( batchid ) )
[0]: org. junit. assert. assertequals ( true, reader. isnull ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( provider. issupported ( org. apache. cxf. jaxrs. provider. abstractjaxbprovider. class, null, null ) )
[3]: org. junit. assert. asserttrue ( provider. issupported ( java. lang. string. class, null, testbean. class ) )
[4]: org. junit. assert. asserttrue ( provider. issupported ( java. lang. string. class, null, testissjaxbprovider. class ) )

************

************
tgt: org . junit . assert . assertequals ( "this<sp>description<sp>has<sp>reallylongvaluesthatarelongerthanthewidthofthecolumns<sp>" 9 , expected , sw . tostring ( ) )
[0]: org. junit. assert. asserttrue ( provider. issupported ( java. lang. string. class, null, test ) )
[1]: ) )
[2]: org. junit. assert. assertthat ( format, org. hamcrest. matchers. is ( string ) )
[3]: org. junit. assert. assertthat ( format, is ( string ) )
[4]: , format )

************

************
tgt: org . junit . assert . asserttrue ( isvalid )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertarrayequals ( outcontent, incontent )
[3]: org. junit. assert. assertarrayequals ( newfd, incontent )
[4]: org. junit. assert. assertarrayequals ( outcontent, outcontent )

************

************
tgt: org . junit . assert . assertthat ( tracingmongoclientbeans . length , org . hamcrest . matchers . is ( 0 ) )
[0]: org. junit. assert. assertarrayequals ( outputcontent, incontent )
[1]: , outcontent )
[2]: org. junit. assert. assertnull ( value )
[3]: org. junit. assert. assertnull ( ( value )
[4]: org. junit. assert. assertnull ( name )

************

************
tgt: org . junit . assert . assertequals ( "samplebasicrealm" , com . ibm . ws . security . registry . basic . fat . fattest . servlet . getrealm ( ) )
[0]: org. junit. assert. assertnull ( ( value ) )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( euclideanassertion, euclideanassertion )
[3]: org. junit. assert. assertequals ( path. tostring ( ), path. tostring ( ) )
[4]: org. junit. assert. assertequals ( path. tostring ( ), root. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( set3 , set1 )
[0]: org. junit. assert. assertequals ( path. tostring ( ), null )
[1]: org. junit. assert. assertequals ( path. tostring ( ), expected )
[2]: . tostring ( ) )
[3]: org. junit. assert. assertequals ( 1, scheduler. getsimtime ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 2, 1 ), scheduler. getsimtime ( ) )

************

************
tgt: org . junit . assert . assertfalse ( answer . getresult ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 2, 10 ), scheduler. getsimtime ( ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), scheduler. getsimtime ( ) )
[2]: org. junit. assert. assertequals ( 0, scheduler. getsimtime ( ) )
[3]: org. junit. assert. assertequals ( 1, processor. getcounter ( ) )
[4]: org. junit. assert. assertequals ( 1, runner. getcounter ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( ninja. resulttest. testobject, testobject. getrenderable ( ) )
[1]: org. junit. assert. assertequals ( ninja. resulttest. testobject, result. getrenderable ( ) )
[2]: org. junit. assert. assertequals ( ninja. resulttest. testobject. getrenderable ( ), testobject )
[3]: org. junit. assert. assertequals ( ninja. resulttest. testobject, testobject. getrenderable ( ). tostring ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "parses<sp>correctly<sp>formatted<sp>changelog" , 2 , changelogs . size ( ) )
[0]: org. junit. assert. assertnotnull ( authorizable. getpath ( ) )
[1]: org. junit. assert. assertequals ( path, authorizable. getpath ( ) )
[2]: org. junit. assert. assertequals ( uri, authorizable. getpath ( ) )
[3]: org. junit. assert. assertequals ( javaca/b/c_2, authorizable )
[4]: org. junit. assert. assertequals ( javaca/b/calternative, authorizable )

************

************
tgt: org . junit . assert . assertequals ( 6 , result . size ( ) )
[0]: org. junit. assert. assertequals ( "28087726000122_2, retorno. getcnpj ( ) )
[1]: org. junit. assert. assertequals ( "28087726000122 }, retorno. getcnpj ( ) )
[2]: org. junit. assert. assertequals ( "28087726000122alternative, retorno. getcnpj ( ) )
[3]: org. junit. assert. assertequals ( org28087726000122_2, retorno. getcnpj ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "" , scopes )
[0]: org. junit. assert. assertnotnull ( info. getmessage ( ) )
[1]: org. junit. assert. assertnotnull ( s. getmessage ( ) )
[2]: org. junit. assert. assertnotnull ( dao. getmessage ( ) )
[3]: org. junit. assert. assertnotnull ( err )
[4]: org. junit. assert. assertequals ( 1, s. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( emptylist ( ) , com . feilong . core . util . sortutil . sortlistbypropertynamesvalue ( ( ( java . util . list ) ( null ) ) , "name" ) )
[0]: org. junit. assert. assertequals ( 1, actualrowcount )
[1]: org. junit. assert. assertequals ( numrecords, actualrowcount )
[2]: org. junit. assert. assertequals ( 0, actualrowcount )
[3]: org. junit. assert. assertequals ( nrecords, actualrowcount )
[4]: org. junit. assert. assertequals ( count, actualrowcount )

************

************
tgt: org . junit . assert . asserttrue ( com . microsoft . azure . management . compute . samples . createvirtualmachinesusingcustomimageorspecializedvhd . runsample ( azure ) )
[0]: org. junit. assert. assertequals ( exception, e )
[1]: org. junit. assert. assertequals ( exception. getmessage ( ), e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( exception, e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( 1, e. getmessage ( ). length ( ) )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . containsinanyorder ( fakepartitions . toarray ( ) ) )
[0]: org. junit. assert. assertthat ( actual. tostring ( ), org. hamcrest. corematchers. is ( expected ) )
[1]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( expected ) ) )
[2]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. tostring ( ) ) )
[3]: org. junit. assert. assertthat ( expected, org. hamcrest. corematchers. is ( actual. tostring ( ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( result2 , org . hamcrest . corematchers . is ( interfaceip ) )
[0]: org. junit. assert. asserttrue ( cz. zcu. kiv. jop. util. primitiveutils. iswrapper ( null ) )
[1]: org. junit. assert. assertequals ( sheep, sheep )
[2]: org. junit. assert. assertequals ( sheep. getid ( ), tos )
[3]: org. junit. assert. asserttrue ( result )
[4]: org. junit. assert. assertequals ( 1, getfieldvalue ( context ) )

************

************
tgt: org . junit . assert . assertequals ( tx , result [ 0 ] )
[0]: org. junit. assert. assertequals ( 1, getfieldvalue ( rest ) )
[1]: org. junit. assert. assertequals ( 1, getfieldvalue ( null ) )
[2]: type ) )
[3]: ) )
[4]: org. junit. assert. assertarrayequals ( new java. lang. byte [ ] { ( ( byte ) ( 1 ) ) }, ( ( byte [ ] ) ( marko. property ( ). value ( ) ) ) )

************

************
tgt: org . junit . assert . assertnull ( form )
[0]: org. junit. assert. assertarrayequals ( new java. lang. byte [ ] { ( ( byte ) ( 1 ) ) }, ( ( byte [ ] ) ( marko. property ( "bytes ). value ( ) ) ) )
[1]: org. junit. assert. assertarrayequals ( new java. lang. byte [ ] { ( ( byte ) ( 1 ) ) }, ( ( byte [ ] ) ( marko. property ( "bytestext ). value ( ) ) ) )
[2]: org. junit. assert. assertarrayequals ( new java. lang. byte [ ] { ( ( byte ) ( 1 ) ) }, ( ( byte ) ( marko. property ( ). value ( ) ) ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( response )

************

************
tgt: org . junit . assert . assertfalse ( panel . isvisible ( ) )
[0]: org. junit. assert. assertnotnull ( response. getstatuscode ( ) )
[1]: org. junit. assert. assertnotnull ( response. response ( ) )
[2]: org. junit. assert. assertnotnull ( response. body ( ) )
[3]: org. junit. assert. assertnotnull ( response. getmessage ( ) )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . assertequals ( 0 , rsp . getcompactssize ( ) )
[0]: org. junit. assert. assertequals ( 0, result )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 13 ), result )
[2]: org. junit. assert. assertequals ( org. oscm. internal. account. backoff. class, result )
[3]: org. junit. assert. assertequals ( zero, result )
[4]: org. junit. assert. assertfalse ( a. equals ( null ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , visitor . getshards ( ) . size ( ) )
[0]: org. junit. assert. assertfalse ( a. equals ( new java. lang. string ( ) ) )
[1]: org. junit. assert. assertfalse ( a. equals ( """" ) )
[2]: org. junit. assert. assertfalse ( a. equals ( new java. lang. string ( null ) ) )
[3]: org. junit. assert. assertfalse ( a. equals ( new java. lang. string ( a ) ) )
[4]: org. junit. assert. asserttrue ( instance. ismonitoringenabled ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , entry . gettotalresults ( ) )
[0]: org. junit. assert. assertfalse ( instance. ismonitoringenabled ( ) )
[1]: org. junit. assert. assertnotnull ( instance. ismonitoringenabled ( ) )
[2]: org. junit. assert. assertequals ( true, instance. ismonitoringenabled ( ) )
[3]: org. junit. assert. assertequals ( 1, instance. ismonitoringenabled ( ) )
[4]: org. junit. assert. assertthat ( targettoprojectpathmapbuilder. size ( ), org. hamcrest. matchers. is ( 0 ) )

************

************
tgt: org . junit . assert . assertthat ( userbystatus . getname ( ) )
[0]: org. junit. assert. assertthat ( targettoprojectpathmapbuilder. get ( ), org. hamcrest. matchers. is ( false ) )
[1]: org. junit. assert. assertnull ( targettoprojectpathmapbuilder. get ( ) )
[2]: org. junit. assert. assertthat ( targettoprojectpathmapbuilder, org. hamcrest. matchers. empty ( ) )
[3]: org. junit. assert. assertthat ( targettoprojectpathmapbuilder, org. hamcrest. matchers. is ( false ) )
[4]: org. junit. assert. assertequals ( 1, providerlist. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( arguments . resolve ( null , null ) , contains ( "1" , "2" , "3" , "4" ) )
[0]: org. junit. assert. assertequals ( 0, providerlist. size ( ) )
[1]: org. junit. assert. assertequals ( 1, providerslist. size ( ) )
[2]: org. junit. assert. assertnotnull ( providerlist )
[3]: org. junit. assert. assertequals ( 1, provider list. size ( ) )
[4]: org. junit. assert. asserttrue ( flowcapablabldetails."", flowcapabldetails."" )

************

************
tgt: org . junit . assert . asserttrue ( blueprint . shouldskipfailure ( ) )
[0]: org. junit. assert. assertequals ( 0, flowcapablabldetails. size ( ) )
[1]: org. junit. assert. asserttrue ( flowcapablabldetails."", flowcapablabldetails."" )
[2]: org. junit. assert. assertequals ( 0, flowcapablablabldetails. size ( ) )
[3]: org. junit. assert. asserttrue ( flowcapablablabldetails."", flowcapabldetails."" )
[4]: org. junit. assert. assertnotnull ( leaftype )

************

************
tgt: org . junit . assert . assertequals ( xs , ys )
[0]: org. junit. assert. assertnotnull ( childtype )
[1]: org. junit. assert. assertnotnull ( leavestype )
[2]: org. junit. assert. assertnotnull ( leaf type )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( map )

************

************
tgt: org . junit . assert . assertequals ( 2 , result )
[0]: org. junit. assert. assertarrayequals ( expected, received. tobytearray ( ) )
[1]: org. junit. assert. assertarrayequals ( expected. tobytearray ( ), received )
[2]: org. junit. assert. assertequals ( expected, received )
[3]: org. junit. assert. assertarrayequals ( expected, received )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expressionname , result )
[0]: org. junit. assert. assertarrayequals ( expected, command )
[1]: org. junit. assert. assertfalse ( configs. isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, configs. size ( ) )
[3]: org. junit. assert. assertequals ( false, configs. isempty ( ) )
[4]: org. junit. assert. assertequals ( testval, i )

************

************
tgt: org . junit . assert . assertequals ( 15 , value )
[0]: org. junit. assert. assertequals ( testval [ i ], testval )
[1]: org. junit. assert. assertequals ( testval [ i ], testval [ i ] )
[2]: org. junit. assert. assertequals ( testval [ i ], testvals [ i ] )
[3]: org. junit. assert. assertarrayequals ( testvals, testval )
[4]: org. junit. assert. assertequals ( s, parser. parse ( l ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( expected ) )
[0]: org. junit. assert. assertequals ( s, l, parse ( s ) )
[1]: org. junit. assert. assertequals ( s, c. parse ( s ) )
[2]: org. junit. assert. assertequals ( s, parse ( l ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . assertequals ( expecting , found )
[0]: org. junit. assert. assertequals ( 0, result )
[1]: org. junit. assert. assertequals ( 3, result )
[2]: org. junit. assert. assertequals ( 5, result )
[3]: org. junit. assert. assertequals ( str, exception. getmessage ( ) )
[4]: org. junit. assert. assertnotnull ( con )

************

************
tgt: org . junit . assert . assertequals ( 1 , result )
[0]: org. junit. assert. assertequals ( con, con )
[1]: org. junit. assert. assertnull ( con )
[2]: org. junit. assert. assertequals ( null, con )
[3]: ) )
[4]: org. junit. assert. assertequals ( true, readonly )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( false, readonly )
[1]: org. junit. assert. asserttrue ( readonly )
[2]: org. junit. assert. assertequals ( 1, wrapper. getcount ( ) )
[3]: org. junit. assert. assertequals ( 1l, wrapper. getcount ( ) )
[4]: org. junit. assert. assertequals ( 0, wrapper. getcount ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( domain != null ) )
[0]: org. junit. assert. assertequals ( 3, wrapper. getcount ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( objectset. isempty ( ) )
[3]: org. junit. assert. assertfalse ( result )
[4]: org. junit. assert. assertequals ( false, result )

************

************
tgt: org . junit . assert . assertequals ( null , org . apache . hadoop . crypto . opensslcipher . getloadingfailurereason ( ) )
[0]: org. junit. assert. assertequals ( true, result )
[1]: org. junit. assert. asserttrue ( result )
[2]: org. junit. assert. assertequals ( false, results )
[3]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )
[4]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. getmessage ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. content ( ) )
[1]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. getid ( ) )
[2]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. body ( ) )
[3]: org. junit. assert. assertnotnull ( transactionid )
[4]: org. junit. assert. assertequals ( 0, transactionid. length ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , cmd . getfilecount ( ) )
[0]: org. junit. assert. assertequals ( null, transactionid )
[1]: org. junit. assert. assertequals ( 0, transactionid )
[2]: ) )
[3]: org. junit. assert. assertequals ( io. cereebro. core. defaultsystemservicetest. name, systemresolver. resolve ( io. cereebro. core. defaultsystemservicetest. name ) )
[4]: org. junit. assert. assertnotnull ( systemresolver. resolve ( io. cereebro. core. defaultsystemservicetest. name ) )

************

************
tgt: org . junit . assert . asserttrue ( actual )
[0]: org. junit. assert. assertequals ( io. cereebro. core. defaultsystemservicetest. name, systemresolver. resolve ( io. cereebro. core. defaultsystemservicetest. name ). name )
[1]: org. junit. assert. assertequals ( input, systemresolver. resolve ( io. cereebro. core. defaultsystemservicetest. name ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( newarraylist ( embeddedmethodinvokerfilter ), applicationproviders. getmethodinvokerfilters ( embeddedmethodinvokerfilter ) )
[4]: org. junit. assert. assertequals ( newarraylist ( embeddedmethodinvoker filter ), applicationproviders. getmethodinvokerfilters ( embeddedmethodinvokerfilter ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , getbucketresponse . getcommonprefixes ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( newarraylist ( embeddedmethodinvokerfilter ), applicationproviders. getmethodinvokerfilters ( allmatchesmethodinvokerfilter ) )
[1]: org. junit. assert. assertequals ( newarraylist ( embeddedmethodinvokerfilter ), allmatchesmethodinvokerfilter. getmethodinvokerfilters ( embeddedmethodinvokerfilter ) )
[2]: org. junit. assert. assertequals ( newarraylist ( embeddedmethodinvokerfilter ), allmatchesmethodinvokerfilter. getmethodinvokerfilters ( embeddedmethodinvoker filter ) )
[3]: org. junit. assert. assertnotnull ( appender. getfilename ( ) )
[4]: org. junit. assert. assertnotnull ( appender )

************

************
tgt: org . junit . assert . assertequals ( vals , java . util . arrays . aslist ( java . util . optional . of ( arr1 . getarrowinset ( ) ) , java . util . optional . of ( arr2 . getarrowinset ( ) ) ) )
[0]: org. junit. assert. assertnotnull ( appender, appender. getfilename ( ) )
[1]: org. junit. assert. assertnotnull ( appender. repository )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, latch. getcount ( ) )
[4]: org. junit. assert. assertnotnull ( map. get ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertnotnull ( map )
[1]: org. junit. assert. assertnotnull ( map. get ( 0 ) )
[2]: org. junit. assert. assertnotnull ( map. get ( 5 ) )
[3]: ) )
[4]: org. junit. assert. assertthat ( lastruletobebuilt. get ( ), org. hamcrest. matchers. is ( id ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertthat ( lastruletobebuilt. get ( ), org. hamcrest. matchers. is ( 0 ) )
[1]: org. junit. assert. assertequals ( 1, lastruletobebuilt. get ( ) )
[2]: org. junit. assert. assertnotnull ( lastruletobebuilt. get ( ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( branch_conditions. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( d . getkeysemaphoresofsecondaryindexkey ( nameindex , skey ) . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( true, branch_conditions. isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, branch_conditions. isempty ( ) )
[2]: org. junit. assert. assertequals ( false, branch_conditions. isempty ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( client. login ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , diffs . size ( ) )
[0]: org. junit. assert. assertequals ( pod. getstatus ( ), 1 )
[1]: org. junit. assert. assertequals ( pod. getstatus ( ), 200 )
[2]: org. junit. assert. assertequals ( pod. getstatus ( ), 0 )
[3]: org. junit. assert. assertequals ( pod. getstatus ( ), null )
[4]: org. junit. assert. assertequals ( pod, result. getstatus ( ) )

************

************
tgt: org . junit . assert . assertequals ( aliases , new java . util . hashset ( com . google . cloud . tools . jib . registry . registryaliasgroup . getaliasesgroup ( alias ) ) )
[0]: org. junit. assert. assertnotnull ( actualmap )
[1]: org. junit. assert. null, actualmap )
[2]: null ) )
[3]: ) )
[4]: null )

************

************
tgt: org . junit . assert . assertequals ( "a<sp>url" , id3v2tag . geturl ( ) )
[0]: org. junit. assert. assertnull ( compute. attachdisk ( com. google. cloud. compute. deprecated. computeimpltest. instance_id, attacheddisk ) )
[1]: org. junit. assert. assertequals ( null, compute. attachdisk ( com. google. cloud. compute. deprecated. computeimpltest. instance_id, attacheddisk ) )
[2]: org. junit. assert. assertnull ( compute. attachdisk ( com. google. cloud. compute. deprecated. computeimpltest. instance_id, attacheddisk. data ) )
[3]: org. junit. assert. assertnull ( compute. attachdisk ( com. google. cloud. compute. deprecated. computeimpltest. instance_id, attacheddisk. data ( ) ) )
[4]: org. junit. assert. assertnull ( compute. attachdisk ( com. google. cloud. compute. deprecated. computeimpltest. instance_id, attacheddisk. topb ) )

************

************
tgt: org . junit . assert . assertequals ( "{blha}hlab" , result )
[0]: org. junit. assert. assertfalse ( validator. validate ( entitynames. education_organization, teacherschoolassociations ). equals ( teacherschoolassociations ) )
[1]: org. junit. assert. asserttrue ( validator. validate ( entitynames. education_organization, teacherschoolassociations ). equals ( teacherschoolassociations ) )
[2]: org. junit. assert. assertequals ( schoolassociations, validate ( entitynames. teacher_school_association, teacherschoolassociations ) )
[3]: org. junit. assert. assertequals ( schoolassociations, validate ( entitynames. education_organization, teacherschoolassociations ) )
[4]: org. junit. assert. assertequals ( schoolassociations, validate ( entitynames. teacher_school_association, teacherschoolassociations ). tostring ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( client . getstats ( ) )
[0]: org. junit. assert. assertequals ( 2, helper. getjobsadded ( ) )
[1]: org. junit. assert. assertequals ( 1, helper. getjobsadded ( ) )
[2]: org. junit. assert. assertequals ( 0, helper. getjobsadded ( ) )
[3]: org. junit. assert. assertequals ( 3, helper. getjobsadded ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( postbody , result )
[0]: org. junit. assert. asserttrue ( e. getmessage ( ). contains ( null ) )
[1]: org. junit. assert. asserttrue ( e. getmessage ( ). contains ( ""foo"" ) )
[2]: org. junit. assert. asserttrue ( e. getmessage ( ). contains ( java. lang. string. class ) )
[3]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertnotnull ( m )
[1]: org. junit. assert. assertequals ( 1, m. matches ( ) )
[2]: org. junit. assert. assertequals ( true, m. matches ( ) )
[3]: org. junit. assert. assertequals ( 1, m. count ( ) )
[4]: org. junit. assert. assertequals ( 1, m. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected . trim ( ) , datastr . trim ( ) )
[0]: org. junit. assert. assertnull ( source )
[1]: org. junit. assert. assertequals ( 1, tree. calculatedepth ( ). size ( ) )
[2]: org. junit. assert. asserttrue ( e. getmessage ( ). contains ( null ) )
[3]: org. junit. assert. assertfalse ( e. getmessage ( ). contains ( null ) )
[4]: org. junit. assert. assertequals ( true, e. getmessage ( ). contains ( null ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( false, e. getmessage ( ). contains ( null ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, firstdate. compareto ( seconddate ) )
[3]: org. junit. assert. assertequals ( 1, firstdate. compareto ( seconddate ) )
[4]: org. junit. assert. asserttrue ( ( ( firstdate. compareto ( seconddate ) ) == 0 ) )

************

************
tgt: org . junit . assert . assertfalse ( instance . iscorrectrequiredvalue ( null ) )
[0]: org. junit. assert. assertequals ( 0, seconddate. compareto ( firstdate ) )
[1]: org. junit. assert. assertequals ( 1, seconddate. compareto ( firstdate ) )
[2]: org. junit. assert. assertequals ( 1, properties. size ( ) )
[3]: org. junit. assert. assertequals ( 0, properties. size ( ) )
[4]: org. junit. assert. assertnotnull ( contextcm )

************

************
tgt: org . junit . assert . assertequals ( "abx" , org . apache . hadoop . hbase . util . bytes . tostring ( res ) )
[0]: org. junit. assert. assertnotnull ( contextcm. getid ( ) )
[1]: org. junit. assert. assertnotnull ( contextcm. getmessage ( ) )
[2]: org. junit. assert. assertnotnull ( contextcm. next ( ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( resultmap. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , com . google . common . collect . lists . newarraylist ( sorted . materialize ( ) ) )
[0]: org. junit. assert. assertequals ( true, resultmap. isempty ( ) )
[1]: org. junit. assert. assertfalse ( resultmap. isempty ( ) )
[2]: org. junit. assert. assertequals ( false, resultmap. isempty ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( "" "", result )
[1]: org. junit. assert. assertequals ( body, responsestring )
[2]: org. junit. assert. assertnotnull ( responsestring )
[3]: org. junit. assert. assertequals ( responsestring, body )
[4]: org. junit. assert. assertequals ( resultstring, responsestring )

************

************
tgt: org . junit . assert . assertequals ( schema , schema2 )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( expected. getinstance ( org. junit. assert. assertnotnull ( expected ) )
[2]: org. junit. assert. assertnotnull ( expected. getinstance ( org. junit. collect. immutablelist. of ( expected ) ) )
[3]: org. junit. assert. assertnotnull ( expected. getinstance ( org. hamcrest. corematchers. is ( expected ) )
[4]: org. junit. assert. assertnotnull ( expected )

************

************
tgt: org . junit . assert . assertequals ( "" , me . zzp . util . seq . join ( null , "" ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( true, persoonviewopactiespredikaat. evaluate ( formeelverantwoordbaar ) )
[2]: org. junit. assert. assertequals ( false, persoonviewopactiespredikaat. evaluate ( formeelverantwoordbaar ) )
[3]: org. junit. assert. assertequals ( text, list. tostring ( ) )
[4]: org. junit. assert. assertequals ( text, list. get ( 0 ). tolegacytext ( ) )

************

************
tgt: org . junit . assert . assertnull ( compute . deleteimage ( com . google . cloud . compute . deprecated . computeimpltest . image_id ) )
[0]: org. junit. assert. assertequals ( text, java. util. arrays. tostring ( list. toarray ( ) ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( text ), list )
[2]: type ) )
[3]: org. junit. assert. assertnotnull ( context )
[4]: org. junit. assert. assertnotnull ( queue )

************

************
tgt: org . junit . assert . assertequals ( expectedurls , urls )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertnotnull ( collection )
[2]: type ) { }
[3]: org. junit. assert. assertequals ( inputvalues, inputvalues )
[4]: org. junit. assert. assertequals ( inputvalues, outputvalues )

************

************
tgt: org . junit . assert . assertequals ( java . lang . integer . tostring ( ( ( ( array . length ) - i ) - 1 ) ) , array [ i ] . getname ( ) )
[0]: org. junit. assert. assertequals ( outputvalues, inputvalues )
[1]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 2, 3 }, array )
[2]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 1, 2, 3 }, array )
[3]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 2, 3, 4 }, array )
[4]: org. junit. assert. assertequals ( 1, array. length )

************

************
tgt: org . junit . assert . assertequals ( "hi" , hi )
[0]: org. junit. assert. assertequals ( 0, array. length )
[1]: org. junit. assert. assertequals ( timer1, restoredfactory )
[2]: org. junit. assert. assertequals ( timer1, timer2 )
[3]: org. junit. assert. assertnotnull ( timer1 )
[4]: org. junit. assert. assertequals ( timer2, restoredfactory )

************

************
tgt: org . junit . assert . assertequals ( 20 , loggingbuffer . size ( ) )
[0]: org. junit. assert. assertnull ( timer1 )
[1]: org. junit. assert. assertequals ( 1, instance. list. size ( ) )
[2]: org. junit. assert. assertequals ( 0, instance. list. size ( ) )
[3]: org. junit. assert. assertnotnull ( reporter. hasreportedproperty ( 10, counter ) )
[4]: org. junit. assert. assertthat ( reporter, org. hamcrest. corematchers. hasreportedproperty ( 10, 10 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , branch_conditions . size ( ) )
[0]: org. junit. assert. assertthat ( reporter. hasreportedproperty ( 10, counter ), org. hamcrest. corematchers. is ( true ) )
[1]: org. junit. assert. assertequals (periodicreporter. hasreportedproperty ( 10, counter ), reporter. getproperties ( ) )
[2]: org. junit. assert. assertthat ( reporter. hasreportedproperty ( 10, counter ), org. hamcrest. corematchers. is ( false ) )
[3]: org. junit. assert. assertequals ( null, converter. encode ( null ) )
[4]: org. junit. assert. assertequals ( null, encode ( null ) )

************

************
tgt: org . junit . assert . assertnull ( tree . getheaderforeground ( ) )
[0]: org. junit. assert. assertequals ( null, m. encode ( null ) )
[1]: org. junit. assert. assertequals ( null, converter. encode ( """" ) )
[2]: org. junit. assert. assertnull ( encode ( null ) )
[3]: org. junit. assert. assertfalse ( undertest. matches ( parser ) )
[4]: org. junit. assert. assertnotnull ( response )

************

************
tgt: org . junit . assert . assertnull ( person . getpersonvoidreason ( ) )
[0]: org. junit. assert. assertequals ( ( ( ( ( ( file ) + ':' ) + ( file ) ) + ':' ) + folder ), response )
[1]: org. junit. assert. assertequals ( ( ( ( ( ( file ) + ':' ) + message ) + ':' ) + folder ), response )
[2]: org. junit. assert. assertequals ( 1, response. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( actualmqttcallback )

************

************
tgt: org . junit . assert . asserttrue ( topicmetadata . containskey ( topicname ) )
[0]: org. junit. assert. assertequals ( 1, body. size ( ) )
[1]: org. junit. assert. assertequals ( 0, body. size ( ) )
[2]: org. junit. assert. assertequals ( null, body )
[3]: org. junit. assert. assertnotnull ( body )
[4]: , subsub1 )

************

************
tgt: org . junit . assert . asserttrue ( ( ! ( customerkey . prefixof ( key ) ) ) )
[0]: org. junit. assert. asserttrue ( ( result == null ) )
[1]: org. junit. assert. assertequals ( result, command )
[2]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )
[3]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. getmessage ( ) )
[4]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. content ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( result == 1 ) )
[0]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. result ( ) )
[1]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. size ( ) )
[2]: org. junit. assert. assertequals ( 0, response. getid ( ). length )
[3]: org. junit. assert. assertequals ( 1, response. getid ( ). length )
[4]: org. junit. assert. assertequals ( 1, response. getid ( ) )

************

************
tgt: org . junit . assert . assertsame ( store , client . getservice ( com . eclipsesource . tabris . clientstore . class ) )
[0]: org. junit. assert. assertequals ( responseelt, response. getid ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( status )
[3]: org. junit. assert. assertfalse ( status )
[4]: org. junit. assert. assertequals ( true, status )

************

************
tgt: org . junit . assert . assertequals ( cls . getnnf ( ) , cls )
[0]: org. junit. assert. asserttrue ( state )
[1]: org. junit. assert. asserttrue ( ( status == true )
[2]: org. junit. assert. asserttrue ( found )
[3]: org. junit. assert. assertequals ( java. lang. boolean. valueof ( true ), found )
[4]: org. junit. assert. assertequals ( root, root. getproperties ( null ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , worker . getstoremetafull ( ) . getnumberofblocks ( ) )
[0]: org. junit. assert. assertnotnull ( root. getproperties ( null ) )
[1]: org. junit. assert. assertequals ( root, root. getproperties ( ""test"" ) )
[2]: org. junit. assert. assertequals ( root, root. getproperties ( ""a"" ) )
[3]: org. junit. assert. assertnotnull ( root )
[4]: org. junit. assert. assertequals ( 1, agreement. findbyparty ( party ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( response . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, agreement. findbyparty ( existingrole ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, agreement. findbyparty ( newrole ). size ( ) )
[2]: org. junit. assert. assertequals ( existingrole, agreement. findbyparty ( party ). size ( ) )
[3]: org. junit. assert. assertequals ( existingrole, agreement. findbyparty ( party ) )
[4]: org. junit. assert. assertequals ( 1, ksession. fireallrules ( ) )

************

************
tgt: org . junit . assert . asserttrue ( samlresponse . isvalid ( ) )
[0]: org. junit. assert. assertequals ( 0, ksession. fireallrules ( ) )
[1]: org. junit. assert. assertequals ( 1, folderopenmode )
[2]: org. junit. assert. assertequals ( 0, folderopenmode )
[3]: org. junit. assert. assertequals ( 3, folderopenmode )
[4]: org. junit. assert. assertequals ( 12, folderopenmode )

************

************
tgt: org . junit . assert . assertnotnull ( logicalnodeid )
[0]: )
[1]: org. junit. assert. assertequals ( 0, sih. invoke ( m, m, null ) )
[2]: org. junit. assert. assertnull ( sih. invoke ( m, m, null ) )
[3]: org. junit. assert. assertequals ( 1, sih. invoke ( sih, m, null ) )
[4]: org. junit. assert. assertequals ( 0, sih. invoke ( m, m, null ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( userbystatus . getname ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( result, null )

************

************
tgt: org . junit . assert . assertequals ( 2 , keys . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, result )
[2]: org. junit. assert. assertequals ( expresult, result )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertequals ( i, result )

************

************
tgt: org . junit . assert . asserttrue ( new org . drools . workbench . services . verifier . plugin . client . api . headermetadata ( new java . util . hashmap ( ) ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( expresult, result2 )
[1]: org. junit. assert. asserttrue ( receivedfiles. contains ( peerb ) )
[2]: org. junit. assert. asserttrue ( receivedfiles. contains ( peera ) )
[3]: org. junit. assert. asserttrue ( receivedfiles. isempty ( ) )
[4]: org. junit. assert. assertequals ( 1, receivedfiles. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . oscm . app . ror . rorvsystemcommunicationtest . vsysid , result )
[0]: org. junit. assert. assertnull ( receivedfiles. get ( 0 ) )
[1]: org. junit. assert. assertequals ( 0, vh. geteventssize ( ) )
[2]: org. junit. assert. assertequals ( sortcolumn, this. request. getsortcolumn ( ) )
[3]: org. junit. assert. assertequals ( sortcolumn, this. adapter. getsortcolumn ( ) )
[4]: org. junit. assert. assertequals ( sortcolumn, this. delegate. getsortcolumn ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , sink . tostring ( ) )
[0]: org. junit. assert. assertnotnull ( this. request. getsortcolumn ( ) )
[1]: org. junit. assert. assertnotnull ( sortcolumn )
[2]: org. junit. assert. assertequals ( 1, elementsinstring. length )
[3]: org. junit. assert. assertnotnull ( elementsinstring )
[4]: org. junit. assert. assertequals ( 0, elementsinstring. length )

************

************
tgt: org . junit . assert . assertequals ( "foo" , entity . gettype ( ) )
[0]: org. junit. assert. assertequals ( 5, elementsinstring. length )
[1]: org. junit. assert. assertnotnull ( elementsinstring. length )
[2]: org. junit. assert. assertequals ( 1, networkloggingdecorator. getnoofparties ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, networkloggingdecorator. getnoofparties ( ). length )
[4]: org. junit. assert. assertequals ( 0, networkloggingdecorator. getnoofparties ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( x )
[0]: org. junit. assert. assertequals ( 0, networkloggingdecorator. getnoofparties ( ). length )
[1]: org. junit. assert. assertnotnull ( networkloggingdecorator. getnoofparties ( ) )
[2]: org. junit. assert. assertequals ( 1, envelopes. size ( ) )
[3]: org. junit. assert. assertnotnull ( ss )
[4]: org. junit. assert. asserttrue ( ( ss == null ) )

************

************
tgt: org . junit . assert . assertequals ( crc32 , crcresult )
[0]: org. junit. assert. assertnotnull ( buildrule. getproject ( ) )
[1]: org. junit. assert. assertnull ( buildrule. getproject ( ) )
[2]: org. junit. assert. assertnotnull ( builder. getproject ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: org. junit. assert. assertnull ( createiterator ( ) )
[1]: org. junit. assert. assertnull ( createiterator ( ). next ( ) )
[2]: org. junit. assert. assertnull ( createiterator ( ). tolist ( ) )
[3]: org. junit. assert. assertnull ( createiterator ( ). iterator ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( resolvedtype , org . apache . asterix . om . types . auniontype . createunknownabletype ( leftrecordtype ) )
[0]: org. junit. assert. assertnotnull ( id3v2tag. getalbum ( ) )
[1]: org. junit. assert. assertnull ( id3v2tag. getalbum ( ) )
[2]: org. junit. assert. assertequals ( null, id3v2tag. getalbum ( ) )
[3]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. getalbum ( ), id3v2tag )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( op )
[0]: org. junit. assert. assertthat ( result ( ), org. hamcrest. matchers. is ( org. hamcrest. matchers. equalto ( expectedresult ) )
[1]: org. junit. assert. assertthat ( result ( ), org. hamcrest. matchers. is ( java. util. optional. of ( expectedresult ) ) )
[2]: org. junit. assert. assertthat ( result ( ), org. hamcrest. matchers. is ( java. util. arrays. aslist ( expectedresult ) ) )
[3]: org. junit. assert. assertthat ( result ( ), org. hamcrest. matchers. contains ( expectedresult ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertarrayequals ( new int [ ] { 0, 1, 2, 3 }, result )
[1]: org. junit. assert. assertarrayequals ( new int [ ] { 1, 1, 2, 3 }, result )
[2]: org. junit. assert. assertequals ( 1, result. length )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( 0, result. length )

************

************
tgt: org . junit . assert . asserttrue ( transport . caninit ( ) )
[0]: org. junit. assert. assertequals ( 1, this. getcount ( ) )
[1]: org. junit. assert. assertequals ( 1, zk. getcount ( ) )
[2]: org. junit. assert. assertequals ( 1, this. manager. getcount ( ) )
[3]: org. junit. assert. assertequals ( 0, this. manager. getcount ( ) )
[4]: org. junit. assert. assertequals ( 1, my. getcount ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( moo . translate ( java . lang . string . class ) )
[0]: org. junit. assert. assertequals ( 1, currentquarterwithguava. getquarter ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( currentquarterwithguava. getquarter ( ) )
[2]: org. junit. assert. assertequals ( 0, currentquarterwithguava. getquarter ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, currentquarterwithguava. getquarter ( ). getid ( ) )
[4]: org. junit. assert. assertequals ( null, currentquarterwithguava. getquarter ( ) )

************

************
tgt: org . junit . assert . assertthat ( roundtrippedrecord , org . hamcrest . corematchers . equalto ( record ) )
[0]: org. junit. assert. assertnull ( actual )
[1]: org. junit. assert.null ( actual )
[2]: org. junit. assert. null, actual )
[3]: org. junit. assert. assertnull ( actual )
[4]: null ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , found . size ( ) )
[0]: org. junit. assert. assertequals ( expected, tokens )
[1]: org. junit. assert. assertfalse ( defn. close ( document ) )
[2]: org. junit. assert. assertfalse ( defn. close ( 0 ) )
[3]: org. junit. assert. assertequals ( defn, document. close ( 0 ) )
[4]: org. junit. assert. assertnotnull ( defn. close ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , ft . attributes ( ) . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, events. getimages ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, metadata. getimages ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, event. getimages ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, list. getimages ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedfoldername , p . getmainframedatasetfolder ( ) )
[0]: org. junit. assert. assertequals ( 1, collection. getimages ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( echo )
[2]: org. junit. assert. assertnotnull ( echo. output )
[3]: org. junit. assert. assertnotnull ( echo. echo ( ) )
[4]: org. junit. assert. assertequals ( 1, echo. count )

************

************
tgt: org . junit . assert . assertequals ( expectedcontent , actualcontent )
[0]: org. junit. assert. assertequals ( 1, echo. result )
[1]: org. junit. assert. assertequals ( expectedmsg, actualmsg )
[2]: org. junit. assert. assertequals ( expectedmsg, actualmsg, actualmsg )
[3]: org. junit. assert. assertequals ( expectedmsg, actualmsg. trim ( ) )
[4]: org. junit. assert. assertequals ( expectedmsg, actualmsg )

************

************
tgt: org . junit . assert . assertsame ( model , list . getmodel ( ) )
[0]: org. junit. assert. assertequals ( expectedmsg, actualmsg. getmessage ( ) )
[1]: org. junit. assert. assertequals ( 1, queue. size ( ) )
[2]: org. junit. assert. assertequals ( 0, queue. size ( ) )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 3 ), queue. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 3 ), queue. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( event )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), queue. size ( ) )
[1]: org. junit. assert. assertnotnull ( loadjob. getimage ( ) )
[2]: org. junit. assert. assertequals ( label, loadjob. getimage ( ) )
[3]: org. junit. assert. assertnull ( loadjob. getimage ( ) )
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , result )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, file. tostring ( ) )
[2]: org. junit. assert. assertequals ( expected, object. tostring ( ) )
[3]: org. junit. assert. assertequals ( expected, actual. tostring ( ) )
[4]: org. junit. assert. assertequals ( expected, data. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( rules . issuppressed ( device ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, hostresult. size ( ) )
[2]: org. junit. assert. assertequals ( 0, hostresult. size ( ) )
[3]: org. junit. assert. assertequals ( 3, hostresult. size ( ) )
[4]: org. junit. assert. assertequals ( 5, hostresult. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "foo" , config . getindex ( "foo" ) )
[0]: org. junit. assert. assertequals ( 1, hostsresult. size ( ) )
[1]: org. junit. assert. assertarrayequals ( expected, actual )
[2]: org. junit. assert. assertarrayequals ( expected, list. size ( ) )
[3]: org. junit. assert. assertequals ( 1, products. size ( ) )
[4]: org. junit. assert. assertequals ( 2, products. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( map . containskey ( java . lang . integer . tostring ( i ) ) )
[0]: org. junit. assert. asserttrue ( b )
[1]: org. junit. assert. assertnotnull ( b )
[2]: org. junit. assert. assertequals ( true, b
[3]: , b )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 7 , dependencies . size ( ) )
[0]: org. junit. assert. assertequals ( null, s )
[1]: org. junit. assert. assertequals ( s, null )
[2]: org. junit. assert. assertnotnull ( s )
[3]: org. junit. assert. assertequals ( java. lang. string. class, s )
[4]: org. junit. assert. assertequals ( """", s )

************

************
tgt: org . junit . assert . assertthat ( result . read ( ) , org . hamcrest . matchers . is ( true ) )
[0]: org. junit. assert. assertequals ( 1, effect )
[1]: org. junit. assert. assertequals ( 0, effect )
[2]: org. junit. assert. assertequals ( 1, effects )
[3]: org. junit. assert. assertequals ( 1, effect, 0 )
[4]: org. junit. assert. assertequals ( 1l, effect )

************

************
tgt: org . junit . assert . assertequals ( operation . getoperationname ( ) , name )
[0]: org. junit. assert. assertequals ( 1, lines. length ( ) )
[1]: org. junit. assert. assertequals ( 1, lines. length )
[2]: org. junit. assert. assertequals ( 0, lines. length )
[3]: org. junit. assert. assertequals ( 0, lines. length ( ) )
[4]: org. junit. assert. assertequals ( 5, lines. length ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( expecteddelayinseconds, report. calculatedelayinseconds )
[1]: org. junit. assert. asserttrue ( ( expecteddelayinseconds > 0 ) )
[2]: org. junit. assert. asserttrue ( ( expecteddelayinseconds > now ) )
[3]: org. junit. assert. asserttrue ( ( expecteddelayinseconds <= now ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( constraints . getexpirytime ( ) ) < ( java . lang . system . currenttimemillis ( ) ) ) )
[0]: org. junit. assert. assertequals ( result. getlist ( ). get ( 0 ), java. lang. string. format ( "name%03dpriority ) )
[1]: org. junit. assert. assertequals ( result. getlist ( ). get ( 0 ). name, java. lang. string. format ( "name%03dsuperkeyword ) )
[2]: org. junit. assert. assertequals ( result. getlist ( ). get ( 0 ). name, java. lang. string. format ( "name%03dpriority ) )
[3]: org. junit. assert. assertequals ( result. getlist ( ). get ( 0 ). name. format ( ), i )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( uploadedfile . exists ( ) )
[0]: org. junit. assert. asserttrue ( java. util. arrays. equals ( examplemessages. important_quote_text, plainba. tobytearray ( ) ) )
[1]: org. junit. assert. assertarrayequals ( examplemessages. important_quote_text, plainba. tobytearray ( ) )
[2]: org. junit. assert. assertequals ( expectedoutput, output. tostring ( builder ) )
[3]: org. junit. assert. assertfalse ( edu. kit. aifb. cumulus. store. persistentmaptest. map. isempty ( ) )
[4]: org. junit. assert. assertnotnull ( themessage )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( null, val )
[1]: org. junit. assert. assertnotnull ( e )
[2]: org. junit. assert. asserttrue ( true )
[3]: org. junit. assert. asserttrue ( false )
[4]: type ) )

************

************
tgt: org . junit . assert . assertthat ( tablecount )
[0]: ) )
[1]: org. junit. assert. asserttrue ( listener. startup ( null ) )
[2]: org. junit. assert. asserttrue ( listener. startup ( new java. lang. object ( ) ) )
[3]: org. junit. assert. assertequals ( true, listener. startup ( null ) )
[4]: org. junit. assert. asserttrue ( listener. startup ( new java. lang. string ( ) ) )

************

************
tgt: org . junit . assert . assertthat ( references . size ( ) , equalto ( 0 ) )
[0]: org. junit. assert. asserttrue ( listener. startup ( listener ) )
[1]: org. junit. assert. assertequals ( s, buffer. tostring ( ) )
[2]: org. junit. assert. assertequals ( s, s. tostring ( ) )
[3]: org. junit. assert. assertequals ( s, builder. tostring ( ) )
[4]: org. junit. assert. assertequals ( s, tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( expected , org . hamcrest . matchers . containsinanyorder ( actual . toarray ( ) ) )
[0]: test s )
[1]: org. junit. assert. assertequals ( list, com. feilong. core. util. sortutil. sortlist ( list, ( ( java. util. comparator ) ( null ) ) ) )
[2]: org. junit. assert. assertthat ( table, org. hamcrest. corematchers. is ( eventreplicatable ) )
[3]: org. junit. assert. assertthat ( table. newtable ( ), org. hamcrest. corematchers. is ( eventreplicatable ) )
[4]: org. junit. assert. assertnotnull ( table )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , actual )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( shouldfind, selection. textinput ( com. redhat. darcy. ui. by. id ( ) ) )
[3]: org. junit. assert. assertsame ( shouldfind, selection. textinput ( com. redhat. darcy. ui. by. id ( ) ) )
[4]: org. junit. assert. assertequals ( shouldfind, selection. textinput ( com. redhat. darcy. ui. api. elements. id ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , mock . foo ( ) )
[0]: org. junit. assert. assertequals ( shouldfind, selection. textinput ( null ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, framenodata. getaveragetimemilis ( ) )
[3]: org. junit. assert. assertequals ( 1, framenodata. getaveragetimemilis ( ) )
[4]: org. junit. assert. assertequals ( 12, framenodata. getaveragetimemilis ( ) )

************

************
tgt: org . junit . assert . assertequals ( jsonobject , deserialized )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 1, docs. size ( ) )
[3]: org. junit. assert. assertnotnull ( docs )
[4]: org. junit. assert. assertequals ( 3, docs. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedelementid , elementid )
[0]: org. junit. assert. assertequals ( 4, docs. size ( ) )
[1]: org. junit. assert. assertequals ( 0, docs. size ( ) )
[2]: org. junit. assert. assertnotnull ( tm. getlabel ( ) )
[3]: org. junit. assert. assertequals ( org. phenotips. translation. getlabel ( ), tm )
[4]: org. junit. assert. assertequals ( 1, tm. getlabel ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( listandparsesavedqueries ( ) , org . hamcrest . corematchers . is ( empty ( ) ) )
[0]: org. junit. assert. assertequals ( null, tm. getlabel ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, output. length ( ) )
[3]: org. junit. assert. assertequals ( 1, output. size ( ) )
[4]: org. junit. assert. assertequals ( 0, output. length ( ) )

************

************
tgt: org . junit . assert . assertfalse ( hasdata ( statement , org . apache . sentry . tests . e2e . hive . tbl1 ) )
[0]: org. junit. assert. assertnotnull ( output )
[1]: org. junit. assert. assertequals ( null, output )
[2]: org. junit. assert. assertequals ( 1, storecompactionsmoketest. size ( ) )
[3]: org. junit. assert. assertequals ( 1, storefileinfos. size ( ) )
[4]: org. junit. assert. asserttrue ( ( ( storefileinfos. size ( ) ) == 1 ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , forumtochange . getdisplayorder ( ) )
[0]: org. junit. assert. assertequals ( 0, storefileinfos. size ( ) )
[1]: org. junit. assert. assertequals ( 3, storefileinfos. size ( ) )
[2]: org. junit. assert. assertequals ( portletinstance. getinstanceid ( ), portletinstance. tostring ( ) )
[3]: org. junit. assert. assertequals ( portletinstance. getinstanceid ( ), portletinstance. getinstanceid ( ) )
[4]: org. junit. assert. assertequals ( portletkeys. test, portletinstance. getinstanceid ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( portletinstance. getinstanceid ( ), portletinstance. getmessage ( ) )
[1]: org. junit. assert. assertequals ( portletinstance. getinstanceid ( ), portletinstance. length )
[2]: org. junit. assert. assertnull ( getter. get ( row ) )
[3]: org. junit. assert. assertequals ( null, getter. get ( row ) )
[4]: org. junit. assert. assertequals ( ""null, getter. get ( row ) )

************

************
tgt: org . junit . assert . assertnotnull ( options . getsuboptions ( java . io . serializable . class ) )
[0]: get ( row ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( result, null )
[1]: , result )
[2]: org. junit. assert. assertthat ( c. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[3]: org. junit. assert. assertthat ( c. count, org. hamcrest. corematchers. is ( 1 ) )
[4]: org. junit. assert. assertnotnull ( c )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( validationresult. ok, validateconnection ( properties ) )
[3]: org. junit. assert. assertequals ( validationresult. ok, validateconnection ( sss ) )
[4]: org. junit. assert. assertequals ( validationresult. ok, validator. validateconnection ( properties ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( validationresult. ok, validateconnection ( props ) )
[1]: ) )
[2]: org. junit. assert. assertthat ( message. tostring ( ), org. hamcrest. matchers. is ( encoded ) )
[3]: org. junit. assert. assertequals ( 1, callcount. get ( ) )
[4]: org. junit. assert. assertequals ( 0, callcount. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , tasks . size ( ) )
[0]: org. junit. assert. assertequals ( data, decrypteddata )
[1]: org. junit. assert. assertnotnull ( decrypteddata )
[2]: org. junit. assert. assertnull ( decrypteddata )
[3]: , decrypteddata )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( null , plot . getdomainaxis ( ) )
[0]: org. junit. assert. assertequals ( 0, view. estimatedduration ( ) )
[1]: org. junit. assert. assertequals ( 0l, view. estimatedduration ( ) )
[2]: org. junit. assert. assertnull ( view. estimatedduration ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertthat ( element . gettagname ( ) . tolowercase ( ) , org . hamcrest . matchers . is ( "input" ) )
[0]: org. junit. assert. assertnull ( out )
[1]: org. junit. assert. assertequals ( 1, coordinate. getlongitude ( ) )
[2]: org. junit. assert. assertequals ( 1, coordinate. getlongitude ( ). length )
[3]: org. junit. assert. assertequals ( 12.345, coordinate. getlongitude ( ) )
[4]: org. junit. assert. assertequals ( 0, coordinate. getlongitude ( ). length )

************

************
tgt: org . junit . assert . assertequals ( data , req . getpostbodyasstring ( ) )
[0]: org. junit. assert. assertnotnull ( coordinate. getlongitude ( ) )
[1]: org. junit. assert. assertequals ( 1, sum [ 0 ] )
[2]: org. junit. assert. assertequals ( 0, sum [ 0 ] )
[3]: org. junit. assert. assertnotnull ( sum [ 0 ] )
[4]: org. junit. assert. assertequals ( 1, sum [ 1 ] )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . is ( false ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, size )
[2]: org. junit. assert. assertequals ( 50, size )
[3]: org. junit. assert. assertequals ( 0, size )
[4]: org. junit. assert. assertequals ( 100, size )

************

************
tgt: org . junit . assert . assertthat ( nextworkingday , org . hamcrest . matchers . is ( workingday ) )
[0]: org. junit. assert. assertequals ( 5, size )
[1]: org. junit. assert. assertnotnull ( map2. addone2all ( map ) )
[2]: org. junit. assert. assertequals ( map2, map. addone2all ( map ) )
[3]: org. junit. assert. assertequals ( map2, map2 )
[4]: org. junit. assert. assertnotnull ( map2 )

************

************
tgt: org . junit . assert . assertnull ( millis )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( actualvalue )
[2]: org. junit. assert. assertequals ( entity. oid, actualvalue )
[3]: org. junit. assert. assertequals ( entity, actualvalue )
[4]: , actualvalue )

************

************
tgt: org . junit . assert . assertequals ( a1 , a2 )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, continuityofcaredocument. getid ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), continuityofcaredocument )
[3]: org. junit. assert. assertequals ( 0, continuityofcaredocument. getid ( ) )
[4]: org. junit. assert. assertequals ( 1, continuityofcaredocument. count ( ) )

************

************
tgt: org . junit . assert . assertfalse ( prozessor . isnodeenabled ( ) )
[0]: org. junit. assert. assertequals ( null, continuityofcaredocument )
[1]: org. junit. assert. assertequals ( ps1, ps2 )
[2]: org. junit. assert. assertsame ( ps1, ps2 )
[3]: org. junit. assert. assertequals ( ps2, ps1 )
[4]: org. junit. assert. assertnotnull ( ps1 )

************

************
tgt: org . junit . assert . assertequals ( 3 , lines . length )
[0]: org. junit. assert. assertsame ( ps1, ps2 }
[1]: org. junit. assert. assertnotnull ( converter. getdataclass ( ) )
[2]: org. junit. assert. assertnull ( converter. getdataclass ( ) )
[3]: org. junit. assert. asserttrue ( ( ( converter. getdataclass ( ) ) == null ) )
[4]: org. junit. assert. assertequals ( io. robe. convert. samplepojo )

************

************
tgt: org . junit . assert . assertequals ( fixture . gettimestampend ( ) , 1l )
[0]: type ) )
[1]: org. junit. assert. assertequals ( 1, metadata. getmeasures ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, e. iscancelled ( ) )
[3]: org. junit. assert. assertequals ( true, e. iscancelled ( ) )
[4]: org. junit. assert. assertnull ( e. iscancelled ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , users . size ( ) )
[0]: org. junit. assert. assertthat ( ids [ i ], is ( objects. get ( i ) ) )
[1]: org. junit. assert. assertequals ( ids [ i ], objects. get ( i ) )
[2]: org. junit. assert. assertthat ( ids [ i ], is ( object. get ( i ) ) )
[3]: org. junit. assert. assertthat ( ids [ i ], is ( objects [ i ] ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "foo" , useragent )
[0]: org. junit. assert. assertequals ( 0, imarkers. length )
[1]: org. junit. assert. assertequals ( 1, imarkers. length )
[2]: org. junit. assert. assertequals ( 0, imarkers [ 0 ]. length )
[3]: org. junit. assert. assertequals ( zero, imarkers. length )
[4]: org. junit. assert. assertequals ( 0, imarkers [ 0 ]. size )

************

************
tgt: org . junit . assert . assertequals ( org . codice . ddf . admin . application . service . applicationserviceexceptiontest . test_throwable_message , e . getcause ( ) . getmessage ( ) )
[0]: org. junit. assert. assertequals ( true, allowedtowrite )
[1]: org. junit. assert. assertthat ( allowedtowrite, is ( true ) )
[2]: org. junit. assert. asserttrue ( allowedtowrite )
[3]: org. junit. assert. assertequals ( false, allowedtowrite )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ! ( seenkeys . contains ( healthmessage . getkey ( ) ) ) ) )
[0]: org. junit. assert. assertequals ( 1, violations. size ( ) )
[1]: org. junit. assert. assertequals ( 0, violations. size ( ) )
[2]: org. junit. assert. assertequals ( 3, violations. size ( ) )
[3]: org. junit. assert. assertequals ( 2, violations. size ( ) )
[4]: org. junit. assert. assertequals ( 4, violations. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( page . cansetuplimitedvalue ( ) )
[0]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. ldap. fat. fattestidswithssltrustonly. servlet. getrealm ( ) )
[1]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. ldap. fat. fattestidswithssltrustonly. servlet )
[2]: org. junit. assert. assertequals ( com. ibm. ws. security. wim. adapter. ldap. fat. fattestidswithssltrustonly. servlet. getrealm ( ), null )
[3]: org. junit. assert. assertequals ( null, com. ibm. ws. security. wim. adapter. ldap. fat. fattestidswithssltrustonly. servlet. getrealm ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( victim . getthreadbeads ( ) . isempty ( ) )
[0]: org. junit. assert. asserttrue ( instance. istransformable ( ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertnotnull ( builder )
[3]: org. junit. assert. assertnotnull ( storage )
[4]: org. junit. assert. assertnotnull ( output )

************

************
tgt: org . junit . assert . assertequals ( testresponse , result )
[0]: org. junit. assert. assertnotnull ( driver )
[1]: org. junit. assert. assertnotnull ( tr. findcertinfo ( null ) )
[2]: org. junit. assert. assertnull ( tr. findcertinfo ( null ) )
[3]: org. junit. assert. assertnotnull ( tr. findcertinfo ( new java. lang. object [ ] { null } ) )
[4]: org. junit. assert. assertnotnull ( tr. findcertinfo ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( icmssetado , icms . geticmssn101 ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( pk. getschedulerstatus ( ) )
[2]: org. junit. assert. assertequals ( 0, pk. getschedulerstatus ( ) )
[3]: org. junit. assert. assertnull ( pk. getschedulerstatus ( ) )
[4]: org. junit. assert. assertequals ( false, pk. getschedulerstatus ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( "<sp>120<sp>|<sp>3<sp>|<sp>75000<sp>|130000<sp>|" 9 + sqltext ) + "<sp>120<sp>|<sp>3<sp>|<sp>75000<sp>|130000<sp>|" 9 ) , expected , testutils . formattedresult . resultfactory . tostringunsorted ( rs ) )
[0]: org. junit. assert. assertequals ( null, pk. getschedulerstatus ( ) )
[1]: org. junit. assert. assertequals ( 1, manager. getrules ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, manager. getrules ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( manager. getrules ( ) )
[4]: org. junit. assert. assertequals ( 1, variables. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( org . joda . money . testmoney . gbp_2_34 , test )
[0]: org. junit. assert. assertfalse ( element. isdisplayed ( ) )
[1]: org. junit. assert. assertthat ( swapsourceanddestinationfields ( orig, ip3 ), org. hamcrest. matchers. equalto ( orig ) )
[2]: org. junit. assert. assertthat ( swapsourceanddestinationfields ( orig, ip4 ), org. hamcrest. matchers. equalto ( orig ) )
[3]: org. junit. assert. assertthat ( swapsourceanddestinationfields ( orig ), org. hamcrest. matchers. equalto ( orig ) )
[4]: org. junit. assert. assertthat ( swapsourceanddestinationfields ( orig, ip5 ), org. hamcrest. matchers. equalto ( orig ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertthat ( swapsourceanddestinationfields, org. hamcrest. matchers. equalto ( orig ) )
[1]: org. junit. assert. assertequals ( 0, org. pentaho. big. data. kettle. plugins. mapreduce. jobentryhadooptransjobexecutortest. exec. getnummaptasks ( ) )
[2]: org. junit. assert. assertequals ( 1, org. pentaho. big. data. kettle. plugins. mapreduce. jobentryhadooptransjobexecutortest. exec. getnummaptasks ( ) )
[3]: org. junit. assert. assertequals ( 0l, org. pentaho. big. data. kettle. plugins. mapreduce. jobentryhadooptransjobexecutortest. exec. getnummaptasks ( ) )
[4]: org. junit. assert. assertequals ( 1l, org. pentaho. big. data. kettle. plugins. mapreduce. jobentryhadooptransjobexecutortest. exec. getnummaptasks ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . hawkular . apm . api . utils . endpointutiltest . uri , org . hawkular . apm . api . utils . endpointutil . decodeendpointuri ( result ) )
[0]: org. junit. assert. assertequals ( 0, org. pentaho. big. data. kettle. plugins. mapreduce. jobentry hadooptransjobexecutortest. exec. getnummaptasks ( ) )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( 1, ( thevalue & 2 ), 0 )
[3]: org. junit. assert. assertequals ( 1, ( thevalue & 2 ) )
[4]: org. junit. assert. assertequals ( 1, ( thevalue & 1 ), 0 )

************

************
tgt: org . junit . assert . assertsame ( a , b )
[0]: org. junit. assert. assertequals ( 1, ( thevalue & 1 ) )
[1]: org. junit. assert. assertequals ( 1, set ( thevalue, 0 ) )
[2]: org. junit. assert. assertequals ( sizelimit, cachesize. tolong ( ) )
[3]: org. junit. assert. assertequals ( 1, cachesize. tolong ( ) )
[4]: org. junit. assert. assertequals ( 0l, cachesize. tolong ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , ok . get ( ) )
[0]: org. junit. assert. assertequals ( 0, cachesize. tolong ( ) )
[1]: org. junit. assert. assertequals ( sizelimit. tolong ( ), cachesize )
[2]: org. junit. assert. assertequals ( 1, _persistit. getcommittedcount ( ) )
[3]: org. junit. assert. assertequals ( 0, _persistit. getcommittedcount ( ) )
[4]: org. junit. assert. assertequals ( 3, _persistit. getcommittedcount ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual , delta )
[0]: org. junit. assert. assertequals ( 1, _persistin. getcommittedcount ( ) )
[1]: org. junit. assert. assertequals ( 2, _persistit. getcommittedcount ( ) )
[2]: org. junit. assert. assertnull ( tw. next ( ) )
[3]: org. junit. assert. assertnotnull ( profile )
[4]: org. junit. assert. assertnull ( profile )

************

************
tgt: org . junit . assert . assertequals ( ( i + 1 ) , mat . groupcount ( ) )
[0]: org. junit. assert. assertequals ( profile, view )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertnotnull ( modified )
[4]: org. junit. assert. assertnull ( modified )

************

************
tgt: org . junit . assert . assertequals ( "123" , b . tostring ( ) )
[0]: org. junit. assert. assertequals ( headers, modified )
[1]: org. junit. assert. assertequals ( modified, headers )
[2]: org. junit. assert. assertequals ( modified, header )
[3]: org. junit. assert. assertequals ( 1, forum. gettotaltopics ( ) )
[4]: org. junit. assert. assertequals ( 0, forum. gettotaltopics ( ) )

************

************
tgt: org . junit . assert . assertequals ( id , found . getid ( ) )
[0]: org. junit. assert. assertequals ( 1, node. getpermissions ( role ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, node. getpermissions ( node ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, serializer. getpermissions ( node ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, node. getpermissions ( role ). size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 12 , concatenated )
[0]: org. junit. assert. assertequals ( 1, ex. getcauses ( ). length )
[1]: org. junit. assert. assertequals ( 0, ex. getcauses ( ). length )
[2]: org. junit. assert. assertequals ( img, mt. getadjustedextent ( ) )
[3]: org. junit. assert. assertequals ( extent, mt. getadjustedextent ( ) )
[4]: org. junit. assert. assertequals ( image, mt. getadjustedextent ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , handler . getrecords ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( imag, mt. getadjustedextent ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( bytes, bytearrayinputstream. read ( bytes ) )
[3]: org. junit. assert. assertequals ( 4, bytearrayinputstream. read ( bytes ) )
[4]: org. junit. assert. assertequals ( bytes. length, bytearrayinputstream. read ( bytes ) )

************

************
tgt: org . junit . assert . assertequals ( coolbar , coolitem . getparent ( ) )
[0]: org. junit. assert. assertarrayequals ( bytes, bytearrayinputstream. read ( bytes ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, org. opendaylight. protocol. bgp. parser. impl. message. update. extended. communities. four. octect. as. specific. sourceas4octecthandler. getsubtype ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, org. opendaylight. protocol. bgp. parser. impl. message. update. extended. communities. four. octect. as. specific. sourceas4octecthandler. getsubtype ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( org. opendaylight. protocol. bgp. parser. impl. message. update. extended. communities. four. octect. as. specific. sourceas4octecthandler. getsubtype ( ) )

************

************
tgt: org . junit . assert . assertequals ( t . getparent ( ) . equals ( tree ) , true )
[0]: org. junit. assert. assertequals ( 0, org. opendaylight. protocol. bgp. parser. impl. message. update. extended. communities. four. octect. as. specific. sourceas4octecthandler. getsubtype ( ). length )
[1]: org. junit. assert. assertequals ( org. opendaylight. protocol. bgp. parser. impl. message. update. extended. communities. four. octect. as. specific. sourceas4octecthandler. getsubtype ( ), sourceas4octecthandler )
[2]: org. junit. assert. assertnotnull ( propertyeditorpresenter. geteditingpropertyfields ( org. drools. workbench. screens. scenariosimulation. client. collectioneditor. propertypresentertest. item_id, org. drools. workbench. screens. scenariosimulation. client. collectioneditor. propertypresentertest. test_propertyvalue ) )
[3]: org. junit. assert. assertnotnull ( propertyeditorpresenter. geteditingpropertyfields ( org. drools. workbench. screens. scenariosimulation. client. collectioneditor. propertypresentertest. item_id, org. drools. workbench. screens. scenariosimulation. client. collectioneditor. propertypresentertest. item_id ) )
[4]: org. junit. assert. assertnotnull ( propertyeditorpresenter, org. drools. workbench. screens. scenariosimulation. client. collectioneditor. propertypresentertest. test_propertyvalue )

************

************
tgt: org . junit . assert . asserttrue ( ( long1 == long2 ) )
[0]: org. junit. assert. assertnotnull ( propertyeditorpresenter )
[1]: type ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( result, actual )
[4]: org. junit. assert. assertequals ( exp, actual )

************

************
tgt: org . junit . assert . assertequals ( ( startingrequestcount + 1 ) , org . apache . hadoop . security . testgroupscaching . fakegroupmapping . getrequestcount ( ) )
[0]: org. junit. assert. assertequals ( actual, expected )
[1]: ) )
[2]: org. junit. assert. assertequals ( color, gc. getbackground ( ) )
[3]: org. junit. assert. assertnotnull ( processor. processdisconnectmessage ( ctxmock, msg ) )
[4]: org. junit. assert. assertnotnull ( processor. processdisconnectmessage ( context, msg ) )

************

************
tgt: org . junit . assert . assertequals ( "http://nowhere" , get ( just . niubi . httprequest . httprequesttest . url ) . location ( ) )
[0]: org. junit. assert. assertnotnull ( processor. processdisconnectmessage ( msg, context ) )
[1]: org. junit. assert. assertnotnull ( processdisconnectmessage ( context, msg ) )
[2]: org. junit. assert. assertnotnull ( processor. processdisconnectmessage ( msg, contextmock ) )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( expected ) )
[4]: org. junit. assert. assertthat ( actual, is ( org. hamcrest. corematchers. equalto ( expected ) ) )

************

************
tgt: org . junit . assert . assertequals ( path , ( ( ( ( ( ( ( ( ".." + ( java . io . file . separatorchar ) ) + ".." ) + ( java . io . file . separatorchar ) ) + "some" ) + ( java . io . file . separatorchar ) ) + "dir" ) + ( java . io . file . separatorchar ) ) + "dir2" ) )
[0]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( expected ) )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: ) )
[3]: org. junit. assert. assertequals ( i, servernb )
[4]: org. junit. assert. assertequals ( 1, servernb )

************

************
tgt: org . junit . assert . assertequals ( expected , table . tostring ( ) )
[0]: org. junit. assert. assertequals ( 0, servernb )
[1]: org. junit. assert. assertnotnull ( servernb )
[2]: ) )
[3]: org. junit. assert. asserttrue ( list. isempty ( ) )
[4]: org. junit. assert. assertequals ( true, list. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , getcontents ( tree ) . size ( ) )
[0]: org. junit. assert. assertequals ( false, list. isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, taskattempts. size ( ) )
[2]: org. junit. assert. assertequals ( 10, taskattempts. size ( ) )
[3]: org. junit. assert. assertequals ( 0, taskattempts. size ( ) )
[4]: org. junit. assert. assertequals ( 5, taskattempts. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , e . getmax ( ) )
[0]: org. junit. assert. assertequals ( 1, taskattempts )
[1]: org. junit. assert. assertnotnull ( handle. getservice ( ) )
[2]: org. junit. assert. assertnotnull ( cache. getservice ( ) )
[3]: org. junit. assert. assertnotnull ( store. getservice ( ) )
[4]: org. junit. assert. assertnotnull ( handler. getservice ( ) )

************

************
tgt: org . junit . assert . assertequals ( form . getnumberofcomponents ( ) , 4 )
[0]: org. junit. assert. assertnotnull ( handle. getservice ( ) ) )
[1]: org. junit. assert. assertnotnull ( testinterceptor. getexcludemethods ( ) )
[2]: org. junit. assert. assertequals ( 1, testinterceptor. getexcludemethods ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, testinterceptor. getexcludemethods ( ) )
[4]: org. junit. assert. assertequals ( 0, testinterceptor. getexcludemethods ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( list . size ( ) ) == 1 ) )
[0]: org. junit. assert. assertequals ( null, testinterceptor. getexcludemethods ( ) )
[1]: org. junit. assert. assertfalse ( this. equals ( this ) )
[2]: org. junit. assert. asserttrue ( this. equals ( this ) )
[3]: org. junit. assert. assertequals ( equals ( this ), true )
[4]: org. junit. assert. assertfalse ( this. equals ( null ) )

************

************
tgt: org . junit . assert . assertnull ( entity . gettimestamp ( ) )
[0]: )
[1]: org. junit. assert. assertequals ( expected, java. util. arrays. tostring ( rs ) )
[2]: org. junit. assert. assertequals ( expected, java. lang. string. valueof ( sql ) )
[3]: org. junit. assert. assertequals ( expected, testutils. formattedresult. output ( rs ) )
[4]: org. junit. assert. assertequals ( expected, tostring ( rs ) )

************

************
tgt: org . junit . assert . assertequals ( specificrecord , deserialized )
[0]: org. junit. assert. assertequals ( expected, sql )
[1]: org. junit. assert. assertnotnull ( e )
[2]: org. junit. assert. assertequals ( posicao, e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( 1, e. getmessage ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( flownodetransitionswrapper . issimplemerge ( ) )
[0]: org. junit. assert. assertequals ( posicao, e )
[1]: org. junit. assert. assertequals ( 0, issues. size ( ) )
[2]: org. junit. assert. assertequals ( 1, issues. size ( ) )
[3]: org. junit. assert. assertequals ( 0, errors. size ( ) )
[4]: org. junit. assert. assertequals ( 0, issues. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( features )
[0]: org. junit. assert. assertequals ( 0, examples. size ( ) )
[1]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[2]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostring ( rs ) )
[3]: org. junit. assert. assertequals ( expected, test formattedresult. resultfactory. tostring ( rs ) )
[4]: org. junit. assert. assertequals ( testutils. formattedresult. resultfactory. tostringunsorted ( rs ), expected, testgroupingfunction ( rs ) )

************

************
tgt: org . junit . assert . assertnull ( existingphone )
[0]: ( expected ) )
[1]: org. junit. assert. assertequals ( a. hashcode ( ), b. hashcode ( ) )
[2]: org. junit. assert. assertequals ( 1, a. hashcode ( ) )
[3]: org. junit. assert. assertnotnull ( a. hashcode ( ) )
[4]: org. junit. assert. assertnull ( a. hashcode ( ) )

************

************
tgt: org . junit . assert . assertequals ( result , java . lang . long . valueof ( 0 ) )
[0]: org. junit. assert. assertequals ( a. hashcode ( ),b. hashcode ( ) )
[1]: org. junit. assert. assertequals ( 1, trie. count )
[2]: org. junit. assert. assertnotnull ( trie )
[3]: org. junit. assert. assertequals ( 0, trie. count )
[4]: org. junit. assert. asserttrue ( ( trie == null ) )

************

************
tgt: org . junit . assert . assertequals ( new com . flextrade . jfixture . nospecimen ( ) , result )
[0]: org. junit. assert. asserttrue ( true )
[1]: org. junit. assert. assertequals ( user, authenticateduser )
[2]: org. junit. assert. assertequals ( 1, instance. getparents ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( parent1 ), instance. getparents ( ) )
[4]: org. junit. assert. assertequals ( 0, instance. getparents ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( tipocolportor . getid ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), instance. getparents ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, org. junit. tests. experimental. rules. methodrulestest. wasrun )
[3]: org. junit. assert. assertequals ( 1, buffer. materialized ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, buffer. getvertices ( ). length )

************

************
tgt: org . junit . assert . assertnotnull ( factory . createdatabaseconnectionextraoptionsentry ( ) )
[0]: org. junit. assert. assertequals ( 1, buffer. getvertices ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4, 5 ), buffer. materialized ( ) )
[2]: org. junit. assert. assertequals ( 1, buffer. size ( ) )
[3]: org. junit. assert. assertequals ( 0, time )
[4]: org. junit. assert. assertequals ( 1, time )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( 1l, time )
[1]: org. junit. assert. assertequals ( 0l, time )
[2]: org. junit. assert. assertequals ( time, 1 )
[3]: org. junit. assert. asserttrue ( result. isempty ( ) )
[4]: org. junit. assert. asserttrue ( text. issamenode ( elem ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , choosed . size ( ) )
[0]: org. junit. assert. assertequals ( 1, predicate. test ( record ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, predicate. test ( record ). size ( ) )
[2]: org. junit. assert. assertnotnull ( predicate. test ( record ) )
[3]: org. junit. assert. assertequals ( 1, predicate. test ( record ) )
[4]: org. junit. assert. assertnull ( predicate. test ( record ) )

************

************
tgt: org . junit . assert . assertthat ( windowedcoder , org . hamcrest . matchers . equalto ( coderandcomponents . getcoder ( ) ) )
[0]: org. junit. assert. assertequals ( null, sm. getextensionconverterprovider ( ) )
[1]: org. junit. assert. assertnull ( sm. getextensionconverterprovider ( ) )
[2]: org. junit. assert. assertnotnull ( sm. getextensionconverterprovider ( ) )
[3]: org. junit. assert. assertequals ( 1, sm. getextensionconverterprovider ( ). length )
[4]: org. junit. assert. assertequals ( 1, sm. getextensionconverterprovider ( ). size ( )

************

************
tgt: org . junit . assert . assertfalse ( itor . hasnext ( ) )
[0]: org. junit. assert. assertequals ( old, o1. getlastname ( ) )
[1]: org. junit. assert. assertequals ( old, o1. getlastname ( ). tostring ( ) )
[2]: org. junit. assert. assertequals ( old, o1. getlastname ( ). tolowercase ( ) )
[3]: org. junit. assert. assertequals ( old, o1. getlastname ( ). getid ( ) )
[4]: org. junit. assert. assertequals ( old, o0. getlastname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , called . get ( ) )
[0]: org. junit. assert. asserttrue ( shown. isdisplayed ( ) )
[1]: org. junit. assert. assertnotnull ( dao. save ( 1 ) )
[2]: org. junit. assert. assertnotnull ( dao. save ( null ) )
[3]: org. junit. assert. assertnotnull ( dao. save ( session ) )
[4]: org. junit. assert. assertnotnull ( dao )

************

************
tgt: org . junit . assert . assertnotnull ( rs . getmetadata ( ) )
[0]: ) )
[1]: org. junit. assert. assertthat ( expr. cast ( java. lang. string. class ), org. hamcrest. matchers. is ( 1 ) )
[2]: org. junit. assert. assertthat ( expr. cast ( java. lang. string. class ), org. hamcrest. matchers. is ( true ) )
[3]: org. junit. assert. assertthat ( expr. cast ( java. lang. object. class ), org. hamcrest. matchers. is ( true ) )
[4]: org. junit. assert. assertthat ( expr. cast ( java. lang. string. class ), org. hamcrest. matchers. is ( 0 ) )

************

************
tgt: org . junit . assert . assertnotnull ( content )
[0]: org. junit. assert. assertequals ( null, expr. cast ( java. lang. string. class ) )
[1]: org. junit. assert. assertnotnull ( s )
[2]: org. junit. assert. assertequals ( s, project. tostring ( ) )
[3]: org. junit. assert. assertequals ( s, project. name )
[4]: org. junit. assert. assertequals ( s, project. getid ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( com . questdb . net . http . httpservertest . clientbuilder ( true ) . build ( ) . execute ( new org . apache . http . client . methods . httpget ( "https://localhost:9000/upload.html" ) ) )
[0]: org. junit. assert. asserttrue ( true )
[1]: org. junit. assert. asserttrue ( status )
[2]: org. junit. assert. assertfalse ( status )
[3]: org. junit. assert. assertequals ( true, status )
[4]: org. junit. assert. asserttrue ( state )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. asserttrue ( ( status == true )
[1]: org. junit. assert. assertnotnull ( u. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), u. tostring ( ) )
[3]: org. junit. assert. assertequals ( string, u. tostring ( ) )
[4]: org. junit. assert. assertequals ( string_1, u. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( fast . iscachedismissed ( ) )
[0]: . tostring ( ) )
[1]: org. junit. assert. assertnotnull ( license )
[2]: org. junit. assert. assertequals ( 0, song. getid ( ) )
[3]: org. junit. assert. assertnotnull ( song. getid ( ) )
[4]: org. junit. assert. assertequals ( 1, song. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( basebean . outcome_error , outcome )
[0]: org. junit. assert. assertequals ( null, song. getid ( ) )
[1]: ) )
[2]: org. junit. assert. assertnull ( output )
[3]: org. junit. assert. assertnotnull ( output )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), output )

************

************
tgt: org . junit . assert . assertfalse ( node . ispresent ( ) )
[0]: org. junit. assert. assertequals ( null, output )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, other. equals ( other ) )
[3]: org. junit. assert. assertequals ( false, other. equals ( other ) )
[4]: org. junit. assert. asserttrue ( other. equals ( other ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( qid1 . compareto ( qid2 ) ) < 0 ) )
[0]: org. junit. assert. assertfalse ( other. equals ( other ) )
[1]: org. junit. assert. assertequals ( false, other. equals ( null ) )
[2]: org. junit. assert. assertequals ( 1, user. getcreatedat ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . asserttrue ( createdurl . startswith ( desturlenc ) )
[0]: org. junit. assert. assertequals ( expected, result )
[1]: org. junit. assert. assertnull ( result )
[2]: ) )
[3]: org. junit. assert. asserttrue ( fi. helsinki. cs. tmc. cli. backend. tmcutil. hasconnection ( ctx ) )
[4]: org. junit. assert. assertnotnull ( foo. gets ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedmkdirs , attributes . getmkdirs ( ) )
[0]: org. junit. assert. assertequals ( 1, foo. gets ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, foo. gets ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, foo. gets ( ). length )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, counter )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, counter )
[1]: org. junit. assert. assertequals ( 2, counter )
[2]: org. junit. assert. assertequals ( 3, counter )
[3]: org. junit. assert. assertequals ( 8, counter )
[4]: org. junit. assert. assertnotnull ( lserverconfiguration. getprivateip ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( null, lserverconfiguration. getprivateip ( ) )
[1]: org. junit. assert. assertequals ( 0, lserverconfiguration. getprivateip ( ) )
[2]: org. junit. assert. assertequals ( 0, lserverconfiguration. getprivateip ( ). length )
[3]: ) )
[4]: org. junit. assert. assertequals ( 3, violations. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected . tostring ( ) , result . tostring ( ) )
[0]: org. junit. assert. assertequals ( 4, violations. size ( ) )
[1]: org. junit. assert. assertequals ( 2, violations. size ( ) )
[2]: org. junit. assert. assertequals ( 3, violations )
[3]: org. junit. assert. assertequals ( 3, violations. length )
[4]: org. junit. assert. assertnotnull ( text )

************

************
tgt: org . junit . assert . assertequals ( 1024 , result . size ( ) )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. assertequals ( null, e )
[2]: org. junit. assert. assertnotnull ( propinfo )
[3]: org. junit. assert. assertnull ( e )
[4]: 

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertnotnull ( ml )
[1]: org. junit. assert. assertequals ( ml, classundertest )
[2]: org. junit. assert. assertfalse ( rv. properties ( ). isempty ( ) )
[3]: org. junit. assert. assertnull ( rv. properties ( ) )
[4]: org. junit. assert. assertthat ( array, equalto ( array. wrappedarray ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertthat ( array, equalto ( array ) )
[1]: org. junit. assert. assertthat ( array, equalto ( java. util. arrays. aslist ( ) ) )
[2]: org. junit. assert. assertthat ( array. wrappedarray ( ), equalto ( null ) )
[3]: org. junit. assert. assertthat ( array, wrappedarray ( ) )
[4]: org. junit. assert. assertequals ( 1, poolstats. gettotalbeansdestroyed ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( s )
[0]: org. junit. assert. assertequals ( 0, poolstats. gettotalbeansdestroyed ( ) )
[1]: org. junit. assert. assertnotnull ( poolstats. gettotalbeansdestroyed ( ) )
[2]: org. junit. assert. assertequals ( 2, poolstats. gettotalbeansdestroyed ( ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( newmethod. equals ( newmethod ) )

************

************
tgt: org . junit . assert . asserttrue ( permutations . isempty ( ) )
[0]: org. junit. assert. assertfalse ( newmethod. equals ( newmethod ) )
[1]: org. junit. assert. asserttrue ( newmethod. equals ( newmethod ) )
[2]: org. junit. assert. assertthat ( newmethod. equals ( newmethod ), is ( true ) )
[3]: org. junit. assert. assertthat ( newmethod. equals ( newmethod ), is ( false ) )
[4]: org. junit. assert. assertequals ( 1, query. count ( ) )

************

************
tgt: org . junit . assert . assertfalse ( schemanoaggregators . isaggregationenabled ( ) )
[0]: org. junit. assert. assertequals ( 1l, query. count ( ) )
[1]: org. junit. assert. assertequals ( 0, query. count ( ) )
[2]: the count ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, counter. get ( ) )

************

************
tgt: org . junit . assert . assertthat ( req . getparameters ( ) . getvalue ( net . jadler . requesttest . param_name_url_encoded ) , is ( net . jadler . requesttest . param_value_url_encoded ) )
[0]: org. junit. assert. asserttrue ( monitoringlocationsexists ( ) )
[1]: org. junit. assert. assertnotnull ( monitoringlocationsexists ( ) )
[2]: org. junit. assert. assertnotnull ( message. getmessageannotations ( ) )
[3]: org. junit. assert. assertnotnull ( characteristics. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( characteristics. serialize ( ) )

************

************
tgt: org . junit . assert . assertequals ( overwrite , downloaddatafrommogilefile ( existingfile ) )
[0]: org. junit. assert. assertnotnull ( characteristics. out. tostring ( ) )
[1]: org. junit. assert. assertnotnull ( characteristics. xml. tostring ( ) )
[2]: org. junit. assert. assertnotnull ( characteristics. sw. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( obs. getvalue ( falseconcept ) )
[4]: org. junit. assert. assertnull ( obs. getvalue ( null ) )

************

************
tgt: org . junit . assert . assertequals ( null , _c . convert ( "" ) )
[0]: org. junit. assert. assertnotnull ( obs )
[1]: org. junit. assert. assertnull ( obs )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( this. bean )
[4]: org. junit. assert. assertnotnull ( converter )

************

************
tgt: org . junit . assert . assertfalse ( exception . iscausedbyhttpexception ( ) )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertnotnull ( context )
[2]: org. junit. assert. assertnotnull ( this. list )
[3]: org. junit. assert. asserttrue ( ex. isprime ( 1 ) )
[4]: org. junit. assert. assertfalse ( ex. isprime ( 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. asserttrue ( ex. isprime ( 0 ) )
[1]: org. junit. assert. assertfalse ( ex. isprime ( 0 ) )
[2]: org. junit. assert. asserttrue ( ex. isprime ( 2 ) )
[3]: org. junit. assert. assertequals ( 0, style. getsizestarttext ( ). length )
[4]: org. junit. assert. assertequals ( 0, style. getsizestarttext ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( null, style. getsizestarttext ( ) )
[1]: org. junit. assert. assertequals ( 1, style. getsizestarttext ( ). length )
[2]: type ) )
[3]: org. junit. assert. assertnotnull ( cm. getcontextcomponentmanager ( ) )
[4]: org. junit. assert. assertequals ( 1, cm. getcontextcomponentmanager ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertnull ( cm. getcontextcomponentmanager ( ) )
[1]: org. junit. assert. assertequals ( 0, cm. getcontextcomponentmanager ( ) )
[2]: org. junit. assert. assertnotnull ( cm )
[3]: org. junit. assert. assertarrayequals ( str. getbytes ( ), victim. getbytes ( ) )
[4]: org. junit. assert. assertarrayequals ( str. getbytes ( ), victim )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertarrayequals ( new byte [ ] { str }, victim. getbytes ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 1, indicaties. size ( ) )
[4]: org. junit. assert. assertequals ( 0, indicaties. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , flag . get ( ) )
[0]: org. junit. assert. assertequals ( persoonid, indicaties. size ( ) )
[1]: org. junit. assert. assertequals ( persoonid. size ( ), indicaties. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertarrayequals ( body, request. getbody ( ) )
[4]: org. junit. assert. assertequals ( body, request. getbody ( ) )

************

************
tgt: org . junit . assert . assertthat ( com . asakusafw . runtime . io . json . jsonformattest . read ( format , written ) , contains ( 1.25 ) )
[0]: org. junit. assert. assertequals ( byte [ ], request. getbody ( ) )
[1]: org. junit. assert. assertequals ( byte [ ]. class, request. getbody ( ) )
[2]: org. junit. assert. assertequals ( byte [ ]. length, request. getbody ( ) )
[3]: org. junit. assert. assertnotnull ( e )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), e )

************

************
tgt: org . junit . assert . assertequals ( seta . hashcode ( ) , setb . hashcode ( ) )
[0]: org. junit. assert. assertequals ( java. util. optional. empty ( ), e. getmessage )
[1]: org. junit. assert. assertnull ( e )
[2]: ) )
[3]: org. junit. assert. assertequals ( page_size, server. getpagingmanager ( ). size ( ) )
[4]: org. junit. assert. assertequals ( page_size, server. getpagingmanager ( ) )

************

************
tgt: org . junit . assert . assertequals ( number . get ( ) , new java . lang . integer ( 2 ) )
[0]: org. junit. assert. assertequals ( page_size, server. getpagingmanager ( ). getid ( ) )
[1]: org. junit. assert. assertequals ( page_max, server. getpagingmanager ( ). size ( ) )
[2]: org. junit. assert. assertequals ( page_height, server. getpagingmanager ( ). size ( ) )
[3]: org. junit. assert. assertequals ( admvalidator. length_comment, domainobject. getcomment ( ). length )
[4]: org. junit. assert. assertequals ( admvalidator, domainobject. getcomment ( ). length_comment )

************

************
tgt: org . junit . assert . asserttrue ( resultaat . getmeldingen ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( admvalidator, domainobject. getcomment ( ) )
[1]: org. junit. assert. assertequals ( admvalidator, domainobject. getcomment ( ). length ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( endpoint1, endpoint2 )
[4]: org. junit. assert. assertnotnull ( endpoint1 )

************

************
tgt: org . junit . assert . assertfalse ( valid )
[0]: org. junit. assert. assertnotnull ( endpoint1, endpoint2 )
[1]: org. junit. assert. assertequals ( endpoint2, endpoint1 )
[2]: org. junit. assert. assertequals ( endpoint2, endpoint2 )
[3]: org. junit. assert. assertequals ( ba, pre2 )
[4]: org. junit. assert. assertnotnull ( pre. typecheck ( ba, pre2, null ) )

************

************
tgt: org . junit . assert . assertequals ( m1 , m2 )
[0]: org. junit. assert. assertnotnull ( pre. typecheck ( ba, pre2, false ) )
[1]: org. junit. assert. assertnotnull ( pre. typecheck ( ba, pre2, true ) )
[2]: org. junit. assert. assertnotnull ( pre2 )
[3]: org. junit. assert. assertnotnull ( b. getid ( ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), b. getid ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( commitinfos . gettotal ( ) ) >= 1 ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), b. getid ( ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), b. getid ( ) )
[2]: org. junit. assert. assertequals ( 1, b. getid ( ) )
[3]: org. junit. assert. assertequals ( 1, list. size ( ) )
[4]: org. junit. assert. assertnotnull ( list )

************

************
tgt: org . junit . assert . assertfalse ( m . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, list. size ( ) )
[1]: org. junit. assert. asserttrue ( list. isempty ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( reversedlinesfilereader. readline ( ) )
[4]: org. junit. assert. assertnotnull ( reversedlinesfilereader )

************

************
tgt: org . junit . assert . assertequals ( "test" , e . getmessage ( ) )
[0]: org. junit. assert. asserttrue ( reversedlinesfilereader. readline ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertnotnull ( target. getpackets ( ) )
[4]: org. junit. assert. assertnull ( target. getpackets ( ) )

************

************
tgt: org . junit . assert . asserttrue ( isvalid )
[0]: org. junit. assert. assertequals ( null, target. getpackets ( ) )
[1]: org. junit. assert. assertequals ( null, target. getpackets ( ). isempty ( ) )
[2]: ) )
[3]: org. junit. assert. assertnull ( otherconnection )
[4]: org. junit. assert. assertnull ( anotherconnection )

************

************
tgt: org . junit . assert . assertequals ( 1 , com . eclipsesource . v8 . utils . v8objectutils . getvalue ( array , 0 ) )
[0]: org. junit. assert. assertequals ( null, otherconnection )
[1]: org. junit. assert. assertnotnull ( otherconnection )
[2]: ) )
[3]: org. junit. assert. assertfalse ( lease2. isvalidandcontiguous ( lease1 ) )
[4]: org. junit. assert. assertequals ( prefix, actual )

************

************
tgt: org . junit . assert . assertarrayequals ( new byte [ ] { 6 , 6 , 6 } , message . getdata ( ) . getvalue ( ) )
[0]: org. junit. assert. assertequals ( name, actual )
[1]: org. junit. assert. assertequals ( prefixed, actual )
[2]: org. junit. assert. assertequals ( prefixes, actual )
[3]: org. junit. assert. assertequals ( string, actual )
[4]: org. junit. assert. assertequals ( s1, deserialized )

************

************
tgt: org . junit . assert . assertequals ( 15 , fa . get ( 3 ) . length ( ) )
[0]: org. junit. assert. assertequals ( s0, deserialized )
[1]: org. junit. assert. assertsame ( s1, deserialized )
[2]: org. junit. assert. assertequals ( s1, deserialized )
[3]: org. junit. assert. assertnotnull ( deserialized )
[4]: org. junit. assert. assertequals ( 1, rssizeof ( rs ) )

************

************
tgt: org . junit . assert . assertequals ( wsbytebuffer . type_wsbytebuffer , buffer . gettype ( ) )
[0]: org. junit. assert. assertequals ( 0, rssizeof ( rs ) )
[1]: org. junit. assert. assertequals ( 1, this. rssizeof ( rs ) )
[2]: org. junit. assert. assertequals ( 3, rssizeof ( rs ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, list. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( fr . size ( ) ) >= 1 ) )
[0]: org. junit. assert. assertequals ( json, an. tojson ( ) )
[1]: org. junit. assert. assertequals ( json, a. tojson ( ) )
[2]: org. junit. assert. assertequals ( json, an. tojson ( ) )
[3]: org. junit. assert. assertequals ( json, an. tojson ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( initialvalue , unsupportedinitializedtype )
[0]: org. junit. assert. asserttrue ( com. beijunyi. parallelgit. utils. gitfileutils. issymboliclink ( null, commit, repo ) )
[1]: org. junit. assert. asserttrue ( com. beijunyi. parallelgit. utils. gitfileutils. issymboliclink ( guaranteedtest_file.txt, commit, repo ) )
[2]: org. junit. assert. asserttrue ( com. beijunyi. parallelgit. utils. gitfileutils. issymboliclink ( string, commit, repo ) )
[3]: org. junit. assert. asserttrue ( com. beijunyi. parallelgit. utils. gitfileutils. issymboliclink ( string_1, commit, repo ) )
[4]: org. junit. assert. asserttrue ( com. beijunyi. parallelgit. utils. gitfileutils. issymboliclink ( guaranteedtest_file.txt, rollback, repo ) )

************

************
tgt: org . junit . assert . assertequals ( qa . qcri . aidr . dbmanager . ejb . remote . facade . imp . testnominallabelresourcefacadeimp . nominallabel . getname ( ) , result . getname ( ) )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertnotnull ( context )
[2]: org. junit. assert. assertnotnull ( collection )
[3]: org. junit. assert. assertnotnull ( s )
[4]: org. junit. assert. assertnotnull ( builder )

************

************
tgt: org . junit . assert . asserttrue ( ( ( users . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( 1, classundertest. getprefix ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, classundertest. getprefix ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class, classundertest. getprefix ( ) )
[3]: org. junit. assert. assertequals ( null, classundertest. getprefix ( ) )
[4]: org. junit. assert. assertequals ( 1, classundertest. getprefix ( ). length ( ) )

************

************
tgt: org . junit . assert . asserttrue ( k . equals ( k ) )
[0]: org. junit. assert. assertequals ( 1, markers. length )
[1]: org. junit. assert. assertequals ( useragentstring, os )
[2]: org. junit. assert. assertnotnull ( os )
[3]: org. junit. assert. assertnull ( os )
[4]: org. junit. assert. assertequals ( useragentstring, operating )

************

************
tgt: org . junit . assert . assertnotnull ( e )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, errorcount ( bijhouderfiatteringsuitzondering ) )
[2]: org. junit. assert. assertfalse ( iscustomelementname ( name ) )
[3]: org. junit. assert. assertfalse ( com. vaadin. flow. internal. customelementnamevalidator. iscustomelementname ( name ) )
[4]: org. junit. assert. asserttrue ( iscustomelementname ( name ) )

************

************
tgt: org . junit . assert . assertequals ( originallist , aslist ( "one" , "two" , "three" ) )
[0]: org. junit. assert. assertfalse ( com. vaadin. flow. internal. customelementnameinformation. iscustomelementname ( name ) )
[1]: org. junit. assert. assertfalse ( instance. iscustomelementname ( name ) )
[2]: org. junit. assert. assertequals ( ks, ks2 )
[3]: org. junit. assert. assertnotnull ( ks2 )
[4]: org. junit. assert. assertnotnull ( ks, ks2 )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( ks, ks1 )
[1]: org. junit. assert. assertnotnull ( ks )
[2]: org. junit. assert. asserttrue ( polyelement. isclosed ( ) )
[3]: org. junit. assert. asserttrue ( testnode1. isclosed ( ) )
[4]: org. junit. assert. assertfalse ( polyelement. isclosed ( ) )

************

************
tgt: org . junit . assert . assertthat ( filteredlist . size ( ) , org . hamcrest . matchers . is ( namefilter . size ( ) ) )
[0]: org. junit. assert. asserttrue ( msg. isclosed ( ) )
[1]: org. junit. assert. asserttrue ( root. isclosed ( ) )
[2]: org. junit. assert. assertnotnull ( options. getsuboptions ( fr. opensagres. xdocreport. converter. converter. class ) )
[3]: org. junit. assert. assertnotnull ( options. getsuboptions ( fr. opensagres. xdocreport. converter. illegalargumentexception. class ) )
[4]: org. junit. assert. assertnull ( options. getsuboptions ( fr. opensagres. xdocreport. converter. converter. class ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , origins . size ( ) )
[0]: org. junit. assert. assertnotnull ( options. getsuboptions ( fr. opensagres. xdocreport. converter. long. class ) )
[1]: org. junit. assert. assertnull ( options. getsuboptions ( java. lang. string. class ) )
[2]: org. junit. assert. assertnotnull ( subject. converteernaarlo3 ( nl. bzk. brp. levering. lo3. tabel. woonplaatsconversietabeltest. x ) )
[3]: org. junit. assert. assertnull ( subject. converteernaarlo3 ( nl. bzk. brp. levering. lo3. tabel. woonplaatsconversietabeltest. x ) )
[4]: org. junit. assert. assertequals ( null, subject. converteernaarlo3 ( nl. bzk. brp. levering. lo3. tabel. woonplaatsconversietabeltest. x ) )

************

************
tgt: org . junit . assert . assertthat ( suggestions , org . hamcrest . matchers . hassize ( 4 ) )
[0]: org. junit. assert. assertequals ( nl. bzk. brp. levering. lo3. tabel. woonplaatsconversietabeltest. x, subject. converteernaarlo3 ( null ). size ( ) )
[1]: org. junit. assert. assertequals ( null, subject. converteernaarlo3 ( nl. bzk. brp. levering. lo3. tabel. woonplaatsconversietabeltest. x ). get ( ) )
[2]: org. junit. assert. assertequals ( 1, lis. size ( ) )
[3]: org. junit. assert. assertequals ( 0, lis. size ( ) )
[4]: org. junit. assert. assertequals ( 3, lis. size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expect , got )
[0]: org. junit. assert. assertequals ( 2, lis. size ( ) )
[1]: org. junit. assert. assertequals ( 5, lis. size ( ) )
[2]: org. junit. assert. assertnotnull ( token )
[3]: org. junit. assert. assertnull ( e )
[4]: org. junit. assert. assertequals ( null, e )

************

************
tgt: org . junit . assert . assertequals ( expectedvalue , new java . lang . string ( result ) )
[0]: org. junit. assert. assertnotnull ( e )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertnotnull ( dropdown. isdndenabled ( ) )
[4]: org. junit. assert. assertequals ( 1, dropdown. isdndenabled ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , listresponse . getenvironments ( ) . size ( ) )
[0]: org. junit. assert. assertnull ( dropdown. isdndenabled ( ) )
[1]: org. junit. assert. assertequals ( null, dropdown. isdndenabled ( ) )
[2]: org. junit. assert. assertequals ( 0, dropdown. isdndenabled ( ) )
[3]: org. junit. assert. assertequals ( 1, posts. size ( ) )
[4]: org. junit. assert. assertequals ( 0, posts. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( "declare<sp>fruit<sp>id<sp>:<sp>int<sp>@key<sp>end<sp>" 2 ) , list )
[0]: org. junit. assert. assertequals ( 5, posts. size ( ) )
[1]: org. junit. assert. assertequals ( 1, counter. getbeforefiletreewalkcount ( ) )
[2]: org. junit. assert. assertequals ( 0, counter. getbeforefiletreewalkcount ( ) )
[3]: org. junit. assert. assertequals ( null, variablevaluefromop )
[4]: org. junit. assert. assertnotnull ( variablevaluefromop )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertfalse ( ctx. haslogin ( ) )
[1]: org. junit. assert. asserttrue ( ctx. haslogin ( ) )
[2]: org. junit. assert. assertequals ( info, ctx. haslogin ( ) )
[3]: org. junit. assert. assertequals ( 1, children. getsize ( ) )
[4]: org. junit. assert. assertequals ( 1, children. getsize ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 2 , _count . get ( ) )
[0]: org. junit. assert. assertequals ( 0, children. getsize ( ) )
[1]: org. junit. assert. assertequals ( 0, children. getsize ( ). length )
[2]: ) )
[3]: org. junit. assert. assertequals ( true, b )
[4]: org. junit. assert. assertequals ( false, b )

************

************
tgt: org . junit . assert . assertequals ( 0 , scores . getscore ( ) )
[0]: org. junit. assert. assertequals ( 1, b )
[1]: org. junit. assert. assertarrayequals ( responsebody, response )
[2]: org. junit. assert. assertnotnull ( response )
[3]: org. junit. assert. assertequals ( responsebody, response )
[4]: , response )

************

************
tgt: org . junit . assert . asserttrue ( recentlayoutsetbranchs . isempty ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expecteddir, actualdir )
[2]: org. junit. assert. assertequals ( expecteddir, new java. lang. string ( anonymous ) )
[3]: org. junit. assert. assertequals ( expecteddir, expecteddir )
[4]: org. junit. assert. assertequals ( expecteddir, e. getsourcedir ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new int [ ] { 2 , 1 , 1 } , res . iarr )
[0]: org. junit. assert. assertequals ( expecteddir, foundwhere )
[1]: org. junit. assert. assertnotnull ( dao. make ( ) )
[2]: org. junit. assert. assertnotnull ( dao. build ( ) )
[3]: org. junit. assert. assertnotnull ( dao. create ( ) )
[4]: org. junit. assert. assertnotnull ( dao. call ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , director . findinheritedvirtualattributes ( ) . size ( ) )
[0]: test test5
[1]: org. junit. assert. assertequals ( new java. lang. string ( array [ i ] ), buffer. get ( i ) )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), buffer. get ( i ) )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( i ), buffer. get ( i ) )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( ( i + 1 ) ), buffer. get ( i ) )

************

************
tgt: org . junit . assert . assertnotnull ( deser )
[0]: org. junit. assert. assertequals ( new java. lang. long ( i ), buffer. get ( i ) )
[1]: org. junit. assert. assertnull ( pulled )
[2]: org. junit. assert. assertnotnull ( pulled )
[3]: org. junit. assert. assertequals ( null, pulled )
[4]: org. junit. assert. assertequals ( 1, meldingen. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( basebean . marketplace_start_site , result )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( somenotsorandomasciiaslist ), somenotsorandomasciiaslist )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4, 5, 6 ), somenotsorandomasciiaslist )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( somenotsorandomasciiaslist. toarray ( ) ), somenotsorandomasciiaslist )
[3]: org. junit. assert. assertequals ( 1, somenotsorandomasciiaslist. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4, 5, 6, 7, 82 ) )

************

************
tgt: org . junit . assert . assertnotnull ( twsearch . findbyusername ( "karsten" ) )
[0]: org. junit. assert. assertequals ( org. eclipse. tycho. plugins. p2. director. profilenametest. specific_linux_config. getname ( ), name )
[1]: org. junit. assert. assertequals ( org. eclipse. tycho. plugins. p2. director. profilenametest. specific_linux_config. tostring ( ), name )
[2]: org. junit. assert. assertequals ( org. eclipse. tycho. plugins. p2. director. profilenametest. specific_linux_config. name ( ), name )
[3]: org. junit. assert. assertequals ( org. eclipse. tycho. plugins. p2. director. profilenametest. specific_linux_config. getid ( ), name )
[4]: org. junit. assert. assertequals ( org. eclipse. tycho. plugins. p2. director. profilenametest. specific_linux_config. class. getname ( ), name

************

************
tgt: org . junit . assert . assertequals ( ( ( "\n" + sqltext ) + "\n" ) , expected , testutils . formattedresult . resultfactory . tostringunsorted ( rs ) )
[0]: org. junit. assert. assertnull ( actual )
[1]: org. junit. assert. assertequals ( """", actual )
[2]: org. junit. assert. assertequals ( null, actual )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), actual )
[4]: org. junit. assert. assertequals ( java. util. optional. empty ( ), actual )

************

************
tgt: org . junit . assert . assertsame ( exception , e )
[0]: org. junit. assert. assertnotnull ( set )
[1]: org. junit. assert. assertequals ( 1, issue. getclosedat ( ). gettime ( ) )
[2]: org. junit. assert. assertequals ( 0, issue. getclosedat ( ). gettime ( ) )
[3]: org. junit. assert. assertequals ( 1, issue. getclosedat ( ). size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( firstresult . equals ( lastresult ) )
[0]: )
[1]: org. junit. assert. assertequals ( record. get ( 1 ). tostring ( ), decoded. get ( 1 ). tostring ( ) )
[2]: org. junit. assert. assertnotnull ( decoded. get ( 0 ) )
[3]: org. junit. assert. assertnotnull ( decoded. get ( 1 ) )
[4]: org. junit. assert. assertequals ( record. get ( 1 ), decoded. get ( 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( builder )
[0]: org. junit. assert. assertequals ( record. get ( 0 ). tostring ( ), decoded. get ( 1 ). tostring ( ) )
[1]: org. junit. assert. assertequals ( properties, filter. getheadervalue ( ) )
[2]: org. junit. assert. assertequals ( 1, filter. getheadervalue ( ) )
[3]: org. junit. assert. assertequals ( 0, filter. getheadervalue ( ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( properties ), filter. getheadervalue ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expecteddescriptorarr , sources . toarray ( new ddf . catalog . source . sourcedescriptor [ sources . size ( ) ] ) )
[0]: org. junit. assert. assertequals ( properties. getheadervalue ( ), filter. getheadervalue ( ) )
[1]: org. junit. assert. assertnotnull ( container. gettype ( ) )
[2]: org. junit. assert. assertequals ( org. digidoc4j. test. customcontainer. class, container. gettype ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), container. gettype ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), container. gettype ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( 1, container. gettype ( ) )
[1]: org. junit. assert. assertfalse ( promise. hasanswer ( ) )
[2]: org. junit. assert. assertfalse ( consumer. hasanswer ( ) )
[3]: org. junit. assert. assertfalse ( job. hasanswer ( ) )
[4]: org. junit. assert. assertfalse ( condition. hasanswer ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( msg )
[0]: org. junit. assert. assertfalse ( op. hasanswer ( ) )
[1]: org. junit. assert. assertequals ( 1, update. branch ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, update. branch ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, update. branch ( ) )
[4]: org. junit. assert. assertnotnull ( update. branch ( ) )

************

************
tgt: org . junit . assert . assertthat ( result . size ( ) , org . hamcrest . corematchers . is ( 2 ) )
[0]: org. junit. assert. assertnotnull ( update )
[1]: org. junit. assert. assertnotnull ( process ( entry, account, portfolio ) )
[2]: org. junit. assert. assertequals ( packet, process ( entry, account, portfolio ) )
[3]: org. junit. assert. assertnotnull ( process ( entry, portfolio, portfolio ) )
[4]: org. junit. assert. assertequals ( 1, name. process ( entry, account, portfolio ) )

************

************
tgt: org . junit . assert . assertequals ( token , generatedtoken )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, bestmatchpos )
[2]: org. junit. assert. assertequals ( 1, bestmatchpos, 0 )
[3]: org. junit. assert. assertequals ( 1, bestmatchpos, 1 )
[4]: org. junit. assert. assertequals ( 0, bestmatchpos )

************

************
tgt: org . junit . assert . assertthat ( predicate . test ( com . oracle . bedrock . testsupport . junit . options . integer . class ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( 2, bestmatchpos )
[1]: org. junit. assert. assertequals ( 1, text. getparagraphs ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, text. getparagraphs ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 3, text. getparagraphs ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, text. getparagraphs ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( copy_seq . getelements ( ) . equals ( cra_u6_seq ) )
[0]: org. junit. assert. assertnotnull ( text. getparagraphs ( ) )
[1]: org. junit. assert. assertnull ( mockelement. getvalueifvisible ( mockelement, null ) )
[2]: org. junit. assert. assertnull ( instance. getvalueifvisible ( mockelement, null ) )
[3]: org. junit. assert. assertnull ( mockfastexcelprinter ( mockelement, null ) )
[4]: org. junit. assert. assertnull ( mockelement )

************

************
tgt: org . junit . assert . assertequals ( eval ( t , e1 , null ) , eval ( t , ce1 , null ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( null, p. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 0, p. getvalue ( ) )
[3]: org. junit. assert. assertnotnull ( p. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, p. getvalue ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( bytes , result )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, list. size ( ) )
[2]: org. junit. assert. assertequals ( 12, list. size ( ) )
[3]: org. junit. assert. assertequals ( 4, list. size ( ) )
[4]: org. junit. assert. assertequals ( 9, list. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( delegate , delegate2 )
[0]: public void size ( ) { }
[1]: org. junit. assert. assertequals ( new java. lang. float ( 1 ), preferencevalue )
[2]: org. junit. assert. assertequals ( new java. lang. float ( 2 ), preferencevalue )
[3]: org. junit. assert. assertequals ( new java. lang. float ( 0 ), preferencevalue )
[4]: org. junit. assert. assertequals ( new java. lang. float ( 1.0 ), preferencevalue )

************

************
tgt: org . junit . assert . asserttrue ( streamhandlercalled . get ( ) )
[0]: org. junit. assert. assertnull ( preferencevalue )
[1]: org. junit. assert. assertequals ( 1, result. gettrackingrefupdates ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, result. gettrackingrefupdates ( ). size ( ) )
[3]: org. junit. assert. assertequals ( rru. gettrackingrefupdates ( ), result )
[4]: org. junit. assert. assertequals ( rru. gettrackingrefupdates ( ). size ( ), result )

************

************
tgt: org . junit . assert . assertthat ( ddf . security . pdp . realm . xacml . xacmlpdptest . testrealm . ispermitted ( request ) , org . hamcrest . matchers . equalto ( true ) )
[0]: org. junit. assert. assertequals ( rru. gettrackingrefupdates ( ), result. getid ( ) )
[1]: org. junit. assert. assertnotnull ( session )
[2]: org. junit. assert. assertnotnull ( session. createclass ( java. lang. string. class ) )
[3]: org. junit. assert. assertnotnull ( session. getclass ( java. lang. string. class ) )
[4]: org. junit. assert. assertnotnull ( session. createclass ( java. util. list. class ) )

************

************
tgt: org . junit . assert . assertnull ( ugstore . getuserbyusername ( "bill" ) )
[0]: org. junit. assert. assertnotnull ( session. createclass ( java. util. arraylist. class ) )
[1]: org. junit. assert. assertequals ( 1, scores. score ( ) )
[2]: org. junit. assert. assertequals ( 0, scores. score ( ) )
[3]: org. junit. assert. assertequals ( 1, score ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, score ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( 1, scores. score ( ). length )
[1]: org. junit. assert. assertthat ( message, org. hamcrest. core. is. is ( message ) )
[2]: org. junit. assert. assertthat ( message, org. hamcrest. core. is. is ( index ) )
[3]: org. junit. assert. assertthat ( message, org. hamcrest. core. is. is ( msg ) )
[4]: org. junit. assert. assertthat ( message, org. hamcrest. core. is. is ( 2 ) )

************

************
tgt: org . junit . assert . assertequals ( "" , resourcecache . getproductcachedirectory ( ) )
[0]: , message )
[1]: org. junit. assert. asserttrue ( result. equals ( b2 ) )
[2]: org. junit. assert. asserttrue ( result. equals ( b2. tostring ( ) ) )
[3]: org. junit. assert. asserttrue ( result. equals ( b2. getclass ( ) ) )
[4]: org. junit. assert. assertequals ( certificateauthoritysigneddeviceauthenticationjson, serializeddevice )

************

************
tgt: org . junit . assert . asserttrue ( ispropagatemembership ( ) )
[0]: org. junit. assert. assertnotnull ( serializeddevice )
[1]: org. junit. assert. assertequals ( certauthoritysigneddeviceauthenticationjson, serializeddevice )
[2]: org. junit. assert. assertequals ( certificatesauthoritysigneddeviceauthenticationjson, serializeddevice )
[3]: org. junit. assert. assertequals ( certificateauthoritysigneddeviceauthenticationjson, serializeddevice )
[4]: org. junit. assert. assertequals ( 5, extractor. getvectorlength ( ) )

************

************
tgt: org . junit . assert . assertequals ( "test" , echo . echo ( "test" ) )
[0]: org. junit. assert. assertequals ( 4, extractor. getvectorlength ( ) )
[1]: org. junit. assert. assertequals ( instruction, instructions. get ( 0 ) )
[2]: org. junit. assert. assertnotnull ( instructions. get ( 0 ) )
[3]: org. junit. assert. assertnotnull ( dao. isloggedin ( ) )
[4]: org. junit. assert. assertnotnull ( context. isloggedin ( ) )

************

************
tgt: org . junit . assert . assertfalse ( server . bounce_boolean ( false ) )
[0]: org. junit. assert. assertnotnull ( root. isloggedin ( ) )
[1]: org. junit. assert. assertnull ( root. isloggedin ( ) )
[2]: org. junit. assert. assertnotnull ( user. isloggedin ( ) )
[3]: org. junit. assert. asserttrue ( bpinfo1. equals ( bpinfo2 ) )
[4]: org. junit. assert. assertequals ( value, field. in ( fieldname ) )

************

************
tgt: org . junit . assert . assertequals ( data . ref , data2 . ref )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( value ), field. in ( fieldname ) )
[1]: org. junit. assert. assertequals ( ( ( java. lang. string ) ( value ) ), field. in ( fieldname ) )
[2]: org. junit. assert. assertsame ( value, field. in ( fieldname ) )
[3]: org. junit. assert. assertequals ( object, field. in ( fieldname ) )
[4]: org. junit. assert. assertnotnull ( msg )

************

************
tgt: org . junit . assert . assertnotnull ( jwtassertion )
[0]: org. junit. assert. assertequals ( msg, null )
[1]: org. junit. assert. assertnull ( msg )
[2]: org. junit. assert. assertequals ( null, msg )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, project. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( callrecord , org . hamcrest . corematchers . equalto ( correctanswer ) )
[0]: org. junit. assert. assertequals ( project. size ( ), 1 )
[1]: org. junit. assert. assertequals ( null, project. getid ( ) )
[2]: org. junit. assert. assertequals ( project. size ( ), 0 )
[3]: org. junit. assert. assertequals ( dataset. size ( ), project. length )
[4]: org. junit. assert. assertnotnull ( intersect )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( intersect, range )
[1]: org. junit. assert. assertnull ( intersect )
[2]: , intersect )
[3]: ) )
[4]: org. junit. assert. assertequals ( r1. getvariables ( ). size ( ), 1 )

************

************
tgt: org . junit . assert . assertequals ( remainder , actual )
[0]: org. junit. assert. asserttrue ( dtvalidresult. hasproblems ( ) )
[1]: org. junit. assert. assertequals ( 1, tested. size ( ) )
[2]: org. junit. assert. assertequals ( 0, tested. size ( ) )
[3]: org. junit. assert. assertequals ( 1, tested. thread. size ( ) )
[4]: org. junit. assert. assertnotnull ( tested )

************

************
tgt: org . junit . assert . assertnotnull ( resultset )
[0]: org. junit. assert. assertequals ( 1, tested. list ( ). length )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), map. get ( string :: valueof ) )
[2]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), map. values ( ) )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 4 ), map. get ( string :: valueof ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), map. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( resource , converted )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), map. size ( ) )
[1]: org. junit. assert. assertequals ( result, testtoshort )
[2]: org. junit. assert. assertequals ( result, testtoshort. unknown )
[3]: org. junit. assert. assertequals ( result, testtoshort. guaranteed )
[4]: org. junit. assert. assertequals ( result, testtoshort. s )

************

************
tgt: org . junit . assert . assertthat ( relevant , org . hamcrest . matchers . is ( false ) )
[0]: org. junit. assert. assertequals ( result, testtoshort ( ) )
[1]: org. junit. assert. assertequals ( 0, score )
[2]: org. junit. assert. assertequals ( 1, score )
[3]: org. junit. assert. assertequals ( 50, score )
[4]: org. junit. assert. assertequals ( 3, score )

************

************
tgt: org . junit . assert . assertnotnull ( x )
[0]: ) )
[1]: org. junit. assert. assertarrayequals ( original_text, value )
[2]: org. junit. assert. assertequals ( original_text, value )
[3]: org. junit. assert. assertarrayequals ( old_text, value )
[4]: org. junit. assert. assertarrayequals ( original_text, value )

************

************
tgt: org . junit . assert . assertfalse ( a . matches ( b ) )
[0]: , value )
[1]: org. junit. assert. assertequals ( expectatedmessage, e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( expectedarray, e )
[3]: org. junit. assert. assertequals ( expectatedmessage, e )
[4]: org. junit. assert. assertequals ( expectedarray, e. getmessage ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result . issuccessful ( ) )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. assertequals ( 1, tokens. size ( ) )
[2]: org. junit. assert. assertequals ( false, it. hasnext ( ) )
[3]: org. junit. assert. assertnotnull ( file )
[4]: org. junit. assert. asserttrue ( file. exists ( ) )

************

************
tgt: org . junit . assert . assertequals ( d1 , d2 )
[0]: org. junit. assert. assertnotnull ( file. getabsolutepath ( ) )
[1]: org. junit. assert. assertnotnull ( file. exists ( ) )
[2]: org. junit. assert. assertequals ( 1.5, msg. getdouble ( this. name ), 0 )
[3]: org. junit. assert. assertequals ( 1.0, msg. getdouble ( this. name ), 1.5 )
[4]: org. junit. assert. assertequals ( 1.5, msg. getdouble ( this. name ), 1.5 )

************

************
tgt: org . junit . assert . assertequals ( md5asbase64 , hash )
[0]: org. junit. assert. assertequals ( 1, msg. getdouble ( this. name ), 1.5 )
[1]: org. junit. assert. assertequals ( 1.0, msg. getdouble ( this. name ), 0 )
[2]: org. junit. assert. assertequals ( initialcount, actualcount )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( exp , out )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertnotnull ( resource. getbatchassignments ( applicationname, userid, createassignment, experimentbatch, headers, experimentbatch, forceprofilecheck ) )
[2]: org. junit. assert. assertnotnull ( resource. getbatchassignments ( applicationname, userid, createassignment, forceprofilecheck, headers, experimentbatch, headers ) )
[3]: org. junit. assert. assertnotnull ( resource )
[4]: , null )

************

************
tgt: org . junit . assert . assertnull ( com . googlecode . catchexception . throwable . catchthrowable . caughtthrowable ( ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( classundertest. hasperiod ( period ) )
[2]: org. junit. assert. assertfalse ( classundertest. hasperiod ( period ) )
[3]: org. junit. assert. assertequals ( false, classundertest. hasperiod ( period ) )
[4]: org. junit. assert. asserttrue ( classundertest, hasperiod ( period ) )

************

************
tgt: org . junit . assert . assertnull ( toolitem . getdata ( rwt . badge ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, e. evaluate ( ), 0.0 )
[2]: org. junit. assert. assertequals ( expected, e. evaluate ( ) )
[3]: org. junit. assert. assertequals ( expr, e. evaluate ( ) )
[4]: org. junit. assert. assertequals ( expected, e. evaluate ( ), 0.0 )

************

************
tgt: org . junit . assert . assertequals ( ( ( java . lang . integer ) ( 1 ) ) , c . peek ( 1 ) )
[0]: org. junit. assert. assertequals ( expected, e. evaluate ( ), 1.0 )
[1]: org. junit. assert. assertequals ( 1, parameters. discardoutline ( ) )
[2]: org. junit. assert. assertnotnull ( parameters. discardoutline ( ) )
[3]: org. junit. assert. assertequals ( 0, parameters. discardoutline ( ) )
[4]: org. junit. assert. assertequals ( null, parameters. discardoutline ( ) )

************

************
tgt: org . junit . assert . assertequals ( newvalue , resourceeditproperty . getpropertyvalue ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( """", val )
[2]: org. junit. assert. assertnull ( val )
[3]: org. junit. assert. assertequals ( null, val )
[4]: org. junit. assert. assertnull ( val )

************

************
tgt: org . junit . assert . asserttrue ( isdirty )
[0]: org. junit. assert. assertequals ( """", val )
[1]: org. junit. assert. assertequals ( 1, wrapperservice. countnodes ( ) )
[2]: org. junit. assert. assertequals ( 0, wrapperservice. countnodes ( ) )
[3]: org. junit. assert. assertequals ( 3, wrapperservice. countnodes ( ) )
[4]: org. junit. assert. assertequals ( 1, wrapperservice. countsnodes ( ) )

************

************
tgt: org . junit . assert . assertequals ( keep_cnt , nonstopcnt )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, result )
[2]: org. junit. assert. assertequals ( expected, result. trim ( ) )
[3]: org. junit. assert. assertequals ( result, expected )
[4]: org. junit. assert. assertequals ( expected, results )

************

************
tgt: org . junit . assert . assertequals ( "/moved" , n . getpath ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( getpollinterval ( ) )
[2]: org. junit. assert. assertnotnull ( method. getpollinterval ( ) )
[3]: org. junit. assert. assertnotnull ( builder. getpollinterval ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( recordwriter )
[0]: )
[1]: org. junit. assert. assertnotnull ( val )
[2]: org. junit. assert. assertequals ( null, val )
[3]: org. junit. assert. assertequals ( 200, val )
[4]: org. junit. assert. assertequals ( string, val )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( expected, val )
[1]: org. junit. assert. assertequals ( expectedresultset, actualresults )
[2]: org. junit. assert. assertequals ( 1, actualresults. size ( ) )
[3]: org. junit. assert. assertequals ( 0, actualresults. size ( ) )
[4]: org. junit. assert. assertequals ( expectedresultset. size ( ), actualresults )

************

************
tgt: org . junit . assert . assertequals ( 5 , client . getidleconnections ( ) )
[0]: 
[1]: org. junit. assert. assertnotnull ( builder. accountname ( ) )
[2]: org. junit. assert. assertnotnull ( builder )
[3]: org. junit. assert. assertnotnull ( builder. accountname )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( block )
[0]: )
[1]: org. junit. assert. assertequals ( 3, p. gettotalpages ( ) )
[2]: org. junit. assert. assertequals ( 1, p. gettotalpages ( ) )
[3]: org. junit. assert. assertequals ( 5, p. gettotalpages ( ) )
[4]: org. junit. assert. assertequals ( 4, p. gettotalpages ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( datasetsubtype . checklist_dataset_subtypes . contains ( e ) ) || ( datasetsubtype . occurrence_dataset_subtypes . contains ( e ) ) ) )
[0]: org. junit. assert. assertequals ( 0, p. gettotalpages ( ) )
[1]: org. junit. assert. assertequals ( null, ed. gettext ( ) )
[2]: org. junit. assert. assertequals ( java. util. optional. empty ( ), ed. gettext ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, ed. gettext ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. class, ed. gettext ( ). getclass ( ) )

************

************
tgt: org . junit . assert . assertfalse ( ( ( java . lang . boolean ) ( org . teiid . query . eval . evaluator . evaluate ( ex ) ) ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( cronexpression )
[2]: org. junit. assert. assertnull ( cronexpression )
[3]: org. junit. assert. assertequals ( cronexpression, cronexpression )
[4]: org. junit. assert. assertnotnull ( cronexpression, forcron )

************

************
tgt: org . junit . assert . asserttrue ( user . isop ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, meldingen. size ( ) )
[2]: org. junit. assert. assertequals ( 1, comments. size ( ) )
[3]: org. junit. assert. assertequals ( 1, comments. count )
[4]: org. junit. assert. assertequals ( 1, comments. count ( ) )

************

************
tgt: org . junit . assert . asserttrue ( papv . shouldaudit ( ) )
[0]: org. junit. assert. assertequals ( 0, comments. size ( ) )
[1]: org. junit. assert. assertequals ( 0, comments. count ( ) )
[2]: org. junit. assert. assertequals ( 2, count. get ( ) )
[3]: org. junit. assert. assertnotnull ( linetobecopied. tostring ( ) )
[4]: org. junit. assert. assertnull ( linetobecopied. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( null, linetobecopied. tostring ( ) )
[1]: org. junit. assert. assertequals ( 0, linetobecopied. tostring ( ). length )
[2]: . tostring ( ) )
[3]: org. junit. assert. assertnull ( endpointuri )
[4]: org. junit. assert. assertnotnull ( endpointuri )

************

************
tgt: org . junit . assert . assertequals ( date . compareto ( org . restfulwhois . rdap . common . util . dateutil . parse ( datestring , formatstring ) ) , 0 )
[0]: org. junit. assert. assertequals ( null, endpointuri )
[1]: org. junit. assert. assertequals ( """", endpointuri )
[2]: org. junit. assert. assertequals ( 0, endpointuri )
[3]: org. junit. assert. assertnotnull ( ob. getpropertyvalue ( null ) )
[4]: org. junit. assert. assertnotnull ( ob )

************

************
tgt: org . junit . assert . assertnotnull ( list )
[0]: org. junit. assert. assertnotnull ( ob. getpropertyvalue ( 1 ) )
[1]: org. junit. assert. assertnotnull ( ob. getpropertyvalue ( string ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( localdatetime, actualmonth )
[4]: org. junit. assert. assertequals ( localdatetime. length, actualmonth )

************

************
tgt: org . junit . assert . assertequals ( msg , ise . getmessage ( ) )
[0]: org. junit. assert. assertequals ( localdatetime ), actualmonth )
[1]: org. junit. assert. assertequals ( 1, actualmonth )
[2]: org. junit. assert. assertequals ( localdatetime ), actualmonth, 0 )
[3]: org. junit. assert. assertnotnull ( n. getvariablename ( ) )
[4]: org. junit. assert. assertequals ( t, n. getvariablename ( ) )

************

************
tgt: org . junit . assert . asserttrue ( com . jmethods . catatumbo . datastorestatstest . equals ( statentity , nativeentity ) )
[0]: org. junit. assert. assertequals ( t, de. getvariablename ( ) )
[1]: org. junit. assert. assertequals ( t )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, set. size ( ) )
[4]: org. junit. assert. assertequals ( 0, set. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( actualdeliveryhash != ( - 1 ) ) )
[0]: org. junit. assert. assertequals ( 2, set. size ( ) )
[1]: org. junit. assert. assertequals ( set, set )
[2]: , set )
[3]: org. junit. assert. assertequals ( 1, ordersettings. getordersettings ( ) )
[4]: org. junit. assert. assertequals ( 1, instance. getordersettings ( ) )

************

************
tgt: org . junit . assert . assertequals ( timeunit . seconds . tomillis ( 5 ) , conn . getnetworktimeout ( ) )
[0]: org. junit. assert. assertnotnull ( ordersettings. getordersettings ( ) )
[1]: org. junit. assert. assertequals ( 0, ordersettings. getordersettings ( ) )
[2]: ) )
[3]: org. junit. assert. assertthat ( filterrules. shouldignore ( req ), is ( true ) )
[4]: org. junit. assert. assertnotnull ( filterrules. shouldignore ( req ) )

************

************
tgt: org . junit . assert . asserttrue ( timer . didtaskexecute ( ) )
[0]: org. junit. assert. assertequals ( 1, filterrules. shouldignore ( req ) )
[1]: org. junit. assert. assertthat ( filterrules. shouldignore ( request ), is ( true ) )
[2]: org. junit. assert. assertequals ( 1, getnietvervallenmaterielegroepen ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, getnietvervallenmaterielegroepen ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, persoon. getnietvervallenmaterielegroepen ( ). length )

************

************
tgt: org . junit . assert . assertthat ( target . matchexactly ( ( ( org . o3project . odenos . core . component . network . flow . basic . flowaction ) ( action ) ) ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( 1, persoon. getnietvervallenmaterielegroepen ( ). length )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, query. getcommandtext ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, query. getcommandtext ( ). length )
[4]: org. junit. assert. assertequals ( 1, query. getcommandtext ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( org . junit . tests . experimental . rules . testruletest . wasrun )
[0]: org. junit. assert. assertequals ( null, query. getcommandtext ( ) )
[1]: org. junit. assert. assertequals ( 0, query. getcommandtext ( ). length ( ) )
[2]: org. junit. assert. assertequals ( now, result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( 11 , rowkeysplitter . getbuffersize ( ) )
[0]: , result )
[1]: ) )
[2]: org. junit. assert. asserttrue ( rpc. failed ( ) )
[3]: org. junit. assert. assertequals ( 1, output. length ( ) )
[4]: org. junit. assert. assertnotnull ( output )

************

************
tgt: org . junit . assert . assertequals ( 200 , metadata . getrasterheight ( ) )
[0]: org. junit. assert. assertequals ( 1, output. size ( ) )
[1]: org. junit. assert. assertequals ( 0, output. length ( ) )
[2]: org. junit. assert. assertequals ( null, output )
[3]: org. junit. assert. assertnotnull ( builder. getoptions ( ) )
[4]: org. junit. assert. assertnotnull ( configuration. getoptions ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , handler . getresultlist ( ) . size ( ) )
[0]: org. junit. assert. assertnotnull ( this. configuration. getoptions ( ) )
[1]: org. junit. assert. assertnotnull ( context. getoptions ( ) )
[2]: org. junit. assert. assertequals ( 1, impl. getoptions ( ). length )
[3]: org. junit. assert. asserttrue ( inactivitytipoccurred )
[4]: org. junit. assert. asserttrue ( inactivitytialoccurred )

************

************
tgt: org . junit . assert . assertnotnull ( service )
[0]: org. junit. assert. asserttrue ( inactivitytrequestedoccurred )
[1]: org. junit. assert. asserttrue ( inactivitytacoccurred )
[2]: org. junit. assert. asserttrue ( inactivitytutionoccurred )
[3]: org. junit. assert. assertthat ( history. getlengthofyear ( historicera, 1 ), org. hamcrest. corematchers. is ( - 1 ) )
[4]: org. junit. assert. assertthat ( history. getlengthofyear ( historicera, 1 ), org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( ( testval == ( com . tc . util . conversion . bytes2short ( convertedbytes ) ) ) )
[0]: org. junit. assert. assertthat ( history. getlengthofyear ( historicera, 1 ), org. hamcrest. corematchers. is ( 0 ) )
[1]: org. junit. assert. assertthat ( history. getlengthofyear ( historicera, 1 ), org. hamcrest. corematchers. is ( 2 ) )
[2]: org. junit. assert. assertthat ( history. getlengthofyear ( historicera, 1 ), org. hamcrest. corematchers. is ( ( - 1 ) )
[3]: org. junit. assert. assertequals ( servicekey, sessionbeanbean. getsubscribetoservicekey ( ) )
[4]: org. junit. assert. assertequals ( servicekey, confirmationbean. getsubscribetoservicekey ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , ( ( int ) ( patientidentifiertype . getpatientidentifiertypeid ( ) ) ) )
[0]: org. junit. assert. assertnotnull ( dao. findbyicd9 ( 1 ) )
[1]: org. junit. assert. assertnotnull ( dao. findbyicd9 ( entity. getid ( ) ) )
[2]: org. junit. assert. assertequals ( 1, dao. findbyicd9 ( 1 ). size ( ) )
[3]: org. junit. assert. assertnotnull ( entity. findbyicd9 ( 1 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertsame ( view , returnedview )
[0]: org. junit. assert. asserttrue ( rs. next ( ) )
[1]: org. junit. assert. assertequals ( 1, actual. getloggingclasses ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, actual. getloggingclasses ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, actual. getloggingclasses ( ) )
[4]: org. junit. assert. assertequals ( 1, actual. getloggingclasses ( ). length )

************

************
tgt: org . junit . assert . assertthat ( results , is ( new java . lang . string [ ] [ ] { new java . lang . string [ ] { "value" } , new java . lang . string [ ] { "hello,<sp>world!" } } ) )
[0]: org. junit. assert. assertnotnull ( actual. getloggingclasses ( ) )
[1]: org. junit. assert. assertequals ( expectedlistlength, list. size ( ) )
[2]: org. junit. assert. assertequals ( expectedlistlength, ( ( list. size ( ) ) + 1 ) )
[3]: org. junit. assert. assertequals ( expectedlistlength, java. lang. string. valueof ( list. size ( ) ) )
[4]: org. junit. assert. assertequals ( expectedlistlength, ( ( list. size ( ) ) + expectedlistlength ) )

************

************
tgt: org . junit . assert . assertnotnull ( experiment )
[0]: org. junit. assert. assertequals ( expectedlistlength, size ( ) )
[1]: org. junit. assert. assertnull ( finddisplay ( displaythread ) )
[2]: org. junit. assert. assertnull ( finddisplay ( displayedthread ) )
[3]: org. junit. assert. assertnull ( finddisplay ( monitorthread ) )
[4]: org. junit. assert. assertnull ( finddisplay ( captthread ) )

************

************
tgt: org . junit . assert . assertsame ( options , returnedoptions )
[0]: null ) )
[1]: org. junit. assert. assertequals ( saleposition. getorder ( ), order. getorder ( ) )
[2]: org. junit. assert. assertequals ( saleposition, order. getorder ( ) )
[3]: org. junit. assert. assertequals ( saleposition. getorder ( ). size ( ), 1 )
[4]: org. junit. assert. assertequals ( saleposition. getorder ( ), 1 )

************

************
tgt: org . junit . assert . asserttrue ( assertion )
[0]: org. junit. assert. assertequals ( saleposition. getorder ( ), order )
[1]: org. junit. assert. assertnotnull ( collection )
[2]: org. junit. assert. assertnotnull ( s )
[3]: org. junit. assert. assertequals ( 1, 1 )
[4]: org. junit. assert. assertnotnull ( context )

************

************
tgt: org . junit . assert . assertequals ( 0 , result )
[0]: org. junit. assert. assertnotnull ( queue )
[1]: org. junit. assert. asserttrue ( ( newschema == null ) )
[2]: org. junit. assert. assertnotnull ( newschema )
[3]: org. junit. assert. asserttrue ( ( newschema == ( expected ) ) )
[4]: org. junit. assert. assertequals ( expected, newschema )

************

************
tgt: org . junit . assert . assertequals ( "foo.txt" , provider . createzipentryname ( name , filehandleid ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( paralellcalls. get ( ), 1 )
[2]: org. junit. assert. assertequals ( paralellcalls. get ( ), 0 )
[3]: org. junit. assert. assertequals ( paralellcalls. get ( ), 2 )
[4]: the paralellcalls. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( overriddenid , order . getid ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( module. getjdbcurl ( ) )
[2]: org. junit. assert. assertnotnull ( module. hdfsurl ( ) )
[3]: org. junit. assert. assertnotnull ( setting. getjdbcurl ( ) )
[4]: org. junit. assert. assertnotnull ( module. stmturl ( ) )

************

************
tgt: org . junit . assert . assertequals ( "test" , decorator . getdestination ( exchange , null ) )
[0]: ) )
[1]: org. junit. assert. assertfalse ( result )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. asserttrue ( result )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , p . getnum ( ) )
[0]: )
[1]: org. junit. assert. asserttrue ( hasspecialchar )
[2]: org. junit. assert. assertfalse ( hasspecialchar )
[3]: org. junit. assert. asserttrue ( hasspecialc )
[4]: org. junit. assert. asserttrue ( hasspecialmi )

************

************
tgt: org . junit . assert . assertnull ( network . reload ( ) )
[0]: org. junit. assert. asserttrue ( hasspecialchar ) )
[1]: org. junit. assert. assertequals ( 1, victim. gettotalusage ( ) )
[2]: org. junit. assert. assertequals ( 0, victim. gettotalusage ( ) )
[3]: org. junit. assert. assertequals ( 2, victim. gettotalusage ( ) )
[4]: org. junit. assert. assertnotnull ( victim. gettotalusage ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , update )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, newestversion. getindex ( ) )
[2]: org. junit. assert. assertequals ( expected, statement ( null ) )
[3]: org. junit. assert. assertequals ( expected, statement ( result. tostring ( ) ) )
[4]: org. junit. assert. assertequals ( expected, statement ( result ) )

************

************
tgt: org . junit . assert . assertequals ( value , convert ( value ) )
[0]: org. junit. assert. assertequals ( expected, statement ( input ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( ra. getconfigproperties ( ) )
[3]: org. junit. assert. assertequals ( ra. getconfigproperties ( ). size ( ), 0 )
[4]: org. junit. assert. assertnotnull ( ra. getconfigproperties ( ). tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( sonia . scm . web . wireprotocol . commandsof ( request ) . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( ra. getconfigproperties ( ). get ( 0 ) )
[1]: org. junit. assert. assertequals ( ra. getconfigproperties ( ), 0 )
[2]: org. junit. assert. assertequals ( inputscss, outputscss )
[3]: org. junit. assert. assertequals ( outputcss, outputscss )
[4]: org. junit. assert. assertequals ( inputscss, outputcss )

************

************
tgt: org . junit . assert . assertthat ( view . getcheckeditemposition ( ) , org . hamcrest . corematchers . equalto ( checkeditemposition ) )
[0]: org. junit. assert. assertequals ( inputscss, outputcss )
[1]: org. junit. assert. assertequals ( inputscss, outputcs )
[2]: org. junit. assert. assertsame ( solution1, org. uma. jmetal. util. solutionlistutils. findbestsolution ( list, comparator ) )
[3]: org. junit. assert. assertequals ( 2, org. uma. jmetal. util. solutionlistutils. findbestsolution ( list, comparator ) )
[4]: org. junit. assert. asserttrue ( actualurl. equals ( expectedurl0 ) )

************

************
tgt: org . junit . assert . assertfalse ( updateviewhook . applytouser ( userbuilder . build ( ) ) )
[0]: org. junit. assert. asserttrue ( actualurl, expectedurl0. equals ( actualurl ) )
[1]: org. junit. assert. asserttrue ( expectedurl0. equals ( actualurl ) )
[2]: org. junit. assert. asserttrue ( actualurl, actualurl. equals ( expectedurl0 ) )
[3]: org. junit. assert. asserttrue ( expectedurl1. equals ( actualurl ) )
[4]: org. junit. assert. assertnotnull ( trackable. read ( 1, null, null ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertnotnull ( trackable. read ( null, null, null ) )
[1]: org. junit. assert. assertnotnull ( trackable. read ( new java. io. file ( input ), null, null ) )
[2]: org. junit. assert. assertnotnull ( trackable. read ( 0, null, null ) )
[3]: org. junit. assert. assertnotnull ( trackable. read ( new java. io. file ( ), null, null ) )
[4]: org. junit. assert. assertnull ( map. containskey ( 123 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , nextchallenge . length )
[0]: org. junit. assert. assertequals ( 0, map. containskey ( 123 ) )
[1]: org. junit. assert. assertequals ( null, map. containskey ( 123 ) )
[2]: org. junit. assert. asserttrue ( map. containskey ( 123 ) )
[3]: org. junit. assert. assertequals ( 1, map. containskey ( 123 ) )
[4]: org. junit. assert. assertequals ( 1, singlecsvrecord. getvalues ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, singlecsvrecord. getvalues ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( dataset ), singlecsvrecord. getvalues ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( dataset ), singlecsvrecord )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), singlecsvrecord )
[4]: org. junit. assert. assertequals ( 1, actie. bepaaltevervallenvoorkomen ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( p . print ( token ) , org . hamcrest . corematchers . is ( "a" ) )
[0]: org. junit. assert. assertequals ( 0, actie. bepaaltevervallenvoorkomen ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, actie. bepaaltevervallenvoorkomen ( ) )
[2]: org. junit. assert. assertnotnull ( actie. bepaaltevervallenvoorkomen ( ) )
[3]: org. junit. assert. assertequals ( element, actie. bepaaltevervallenvoorkomen ( ) )
[4]: org. junit. assert. assertequals ( 0, count. getresult ( ) )

************

************
tgt: org . junit . assert . assertfalse ( secondfactorauthenticator . authorize ( uk . gov . pay . adminusers . service . secondfactorauthenticatortest . base32_encoded_secret , passcode ) )
[0]: org. junit. assert. assertequals ( 0, size ( ) )
[1]: org. junit. assert. assertequals ( 0, count. getresult ( ). length )
[2]: org. junit. assert. assertequals ( 0, count. getresult ( ). size ( )
[3]: ) )
[4]: org. junit. assert. assertequals ( iterable. tostring ( ), parametertypes )

************

************
tgt: org . junit . assert . assertequals ( ex , intr . get ( ) )
[0]: org. junit. assert. assertequals ( iterable, object )
[1]: org. junit. assert. assertequals ( iterable, actual )
[2]: org. junit. assert. assertequals ( iterable, ident_18 )
[3]: 
[4]: org. junit. assert. assertequals ( 1, result. getstatesize ( ) )

************

************
tgt: org . junit . assert . assertsame ( firstobject , pool . get ( equalobject ) )
[0]: org. junit. assert. assertequals ( 0, result. getstatesize ( ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( size ), result. getstatesize ( ) )
[2]: org. junit. assert. assertequals ( 1, c. count )
[3]: org. junit. assert. assertequals ( 1, c. length )
[4]: org. junit. assert. assertequals ( 1, c )

************

************
tgt: org . junit . assert . assertnotnull ( chirality )
[0]: org. junit. assert. assertequals ( 1, c. size ( )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( info. getbodyasstring ( ) )
[3]: org. junit. assert. assertnotnull ( result. getbodyasstring ( ) )
[4]: org. junit. assert. assertnotnull ( info )

************

************
tgt: org . junit . assert . assertnotnull ( dbmd )
[0]: org. junit. assert. assertnotnull ( result )
[1]: ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), this. metadatafactory ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), this. metadatafactory ( ) )
[4]: org. junit. assert. assertnotnull ( this. metadatafactory ( ). getmetadatafactory ( ) )

************

************
tgt: org . junit . assert . assertthat ( requestedshutdowncallable . call ( ) , org . hamcrest . corematchers . equalto ( false ) )
[0]: org. junit. assert. assertequals ( 1, this. metadatafactory. getmetadatafactory ( ). getcolumncountfactory ( ) )
[1]: org. junit. assert. assertnotnull ( this. metadatafactory ( ) )
[2]: org. junit. assert. assertequals ( 1, 1 )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, list. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( 1, a. size ( ) )
[1]: org. junit. assert. assertequals ( 1, a. length )
[2]: org. junit. assert. assertequals ( 1, rw. next ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, rw. next ( ). get ( ) )
[4]: org. junit. assert. assertequals ( 1, rw. next ( ). getid ( ) )

************

************
tgt: org . junit . assert . assertthat ( isisroutertype , org . hamcrest . corematchers . is ( isisroutertype . l1 ) )
[0]: org. junit. assert. assertequals ( 0, rw. next ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, rw. next ( ) )
[2]: org. junit. assert. assertequals ( 1, meldingen. size ( ) )
[3]: org. junit. assert. assertnotnull ( dog )
[4]: org. junit. assert. assertnull ( dog )

************

************
tgt: org . junit . assert . asserttrue ( excep . getmessage ( ) , true )
[0]: org. junit. assert. assertequals ( null, dog )
[1]: org. junit. assert. assertequals ( 0, dog. length )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( session )
[4]: org. junit. assert. assertnotnull ( listener. session )

************

************
tgt: org . junit . assert . assertequals ( dim , three . getdimension2 ( ) )
[0]: org. junit. assert. assertnull ( session )
[1]: org. junit. assert. assertnotnull ( ( session )
[2]: org. junit. assert. assertnotnull ( listener. session )
[3]: org. junit. assert. assertequals ( expected, prettifyxml ( input ) )
[4]: org. junit. assert. assertequals ( expected, prettifyxml ( input ). tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( update - realsyncs ) < realsyncs ) )
[0]: org. junit. assert. assertequals ( expected, prettifyxml ( input ). trim ( ) )
[1]: org. junit. assert. assertequals ( expected, prettifyxml ( input ). get ( ) )
[2]: ) )
[3]: org. junit. assert. assertnull ( com. fincatto. documentofiscal. nfe310. classes. nfnotainfoimpostotributacaoissqn. valueofcodigo ( null ) )
[4]: org. junit. assert. assertnull ( com. fincatto. documentofiscal. nfe310. classes. nfnotainfoimpostotributacaoissqn. valueofcodigo ( ""a"" ) )

************

************
tgt: org . junit . assert . assertequals ( oinwaarde , bericht . getoinwaardeondertekenaar ( ) )
[0]: org. junit. assert. assertnotnull ( com. fincatto. documentofiscal. nfe310. classes. nfnotainfoimpostotributacaoissqn. valueofcodigo ( null ) )
[1]: org. junit. assert. assertnull ( com. fincatto. documentofiscal. nfe310. classes. nfnotainfoimpostotributacaoissqn. valueofcodigo ( ""1"" ) )
[2]: org. junit. assert. assertnull ( com. fincatto. documentofiscal. nfe310. classes. nfnotainfoimpostotributacaoissqn. valueofcodigo ( """" ) )
[3]: org. junit. assert. asserttrue ( isoneaway ( null, b ) )
[4]: org. junit. assert. asserttrue ( isoneaway ( null, null ) )

************

************
tgt: org . junit . assert . assertequals ( verificationpath , fixture . getfullyformattedcommand ( ) )
[0]: org. junit. assert. assertfalse ( isoneaway ( null, b ) )
[1]: org. junit. assert. assertequals ( true, isoneaway ( null, b ) )
[2]: org. junit. assert. asserttrue ( isoneaway ( ""a"", """" ) )
[3]: org. junit. assert. assertnull ( compute. deletesnapshot ( java. util. collections. emptylist ( ) ) )
[4]: org. junit. assert. assertnull ( compute. deletesnapshot ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertnotnull ( in )
[0]: org. junit. assert. assertnull ( compute. deletesnapshot ( null ) )
[1]: org. junit. assert. assertnull ( compute )
[2]: ) )
[3]: org. junit. assert. assertequals ( future, thinghandler. device. isinitialized ( ) )
[4]: org. junit. assert. asserttrue ( thinghandler. device. isinitialized ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , proposals . size ( ) )
[0]: org. junit. assert. assertfalse ( thinghandler. device. isinitialized ( ) )
[1]: org. junit. assert. assertequals ( true, thinghandler. device. isinitialized ( ) )
[2]: org. junit. assert. assertequals ( future, thinghandler. devices. isinitialized ( ) )
[3]: org. junit. assert. assertnotnull ( geboorte. valideer ( ) )
[4]: org. junit. assert. assertnull ( geboorte. valideer ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( wrapped instanceof software . amazon . awssdk . http . apache . internal . conn . wrapped ) )
[0]: org. junit. assert. assertequals ( null, geboorte. valideer ( ) )
[1]: org. junit. assert. assertequals ( 0, geboorte. valideer ( ). length )
[2]: org. junit. assert. assertequals ( 0, geboorte. valideer ( ). size ( )
[3]: org. junit. assert. assertequals ( dedatalayout1, dedatalayout2 )
[4]: org. junit. assert. assertequals ( dedatalayout, dedatalayout2 )

************

************
tgt: org . junit . assert . assertequals ( statustocopy , status )
[0]: org. junit. assert. assertequals ( dedatalayout2, dedatalayoutafter )
[1]: org. junit. assert. assertequals ( dedatalayout2, dedatalayout2 )
[2]: org. junit. assert. assertequals ( dedatalayout2, dedatalayoutafter. getowner ( ) )
[3]: org. junit. assert. assertequals ( associations, validate ( entitynames. student_school_association, associations ) )
[4]: org. junit. assert. asserttrue ( validator. validate ( entitynames. student_school_association, associations ). isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( key , d . getprimaryindexkeyofresourceid ( resource , ( key + 1 ) ) . tostring ( ) )
[0]: org. junit. assert. assertequals ( associations, validator. validate ( entitynames. student_school_association, associations ) )
[1]: org. junit. assert. assertequals ( 0, validator. validate ( entitynames. student_school_association, associations ). size ( )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, placed )
[4]: org. junit. assert. assertequals ( 1, placed )

************

************
tgt: org . junit . assert . assertequals ( 2 , delete . execute ( ) )
[0]: org. junit. assert. assertequals ( 1, validationhelper. geteventssize ( ) )
[1]: org. junit. assert. assertequals ( 123123, result )
[2]: org. junit. assert. assertnull ( this. isvalid ( ) )
[3]: org. junit. assert. assertnull ( this. configuration. isvalid ( ) )
[4]: org. junit. assert. assertnull ( validator. isvalid ( ) )

************

************
tgt: org . junit . assert . assertequals ( value , message . readlong ( ) )
[0]: org. junit. assert. assertnull ( configuration. isvalid ( ) )
[1]: org. junit. assert. assertnull ( org. onosproject. driver. optical. config )
[2]: org. junit. assert. assertnotnull ( user )
[3]: org. junit. assert. assertequals ( null, user )
[4]: org. junit. assert. assertequals ( assertnotnull ( user )

************

************
tgt: org . junit . assert . asserttrue ( file . exists ( ) )
[0]: type ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, result )
[3]: org. junit. assert. assertequals ( false, result )
[4]: org. junit. assert. asserttrue ( result )

************

************
tgt: org . junit . assert . assertnull ( missingversionedentryversion )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertequals ( 1, 1 )
[2]: org. junit. assert. assertnotnull ( collection )
[3]: org. junit. assert. assertnotnull ( s. collection ( ) )
[4]: org. junit. assert. assertnotnull ( collection. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( "test" , param . getvalue ( ) )
[0]: org. junit. assert. assertequals ( 1, count )
[1]: org. junit. assert. assertequals ( 0, count )
[2]: org. junit. assert. assertequals ( 3, count )
[3]: org. junit. assert. assertequals ( 1, fields. length )
[4]: org. junit. assert. assertequals ( 0, userparam. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , buildertype )
[0]: org. junit. assert. assertequals ( table. getcolcount ( ), 1 )
[1]: org. junit. assert. assertequals ( 1, table. getcolcount ( ) )
[2]: org. junit. assert. assertequals ( table. getcolcount ( ), 2 )
[3]: org. junit. assert. assertequals ( table. getcolcount ( ), 0 )
[4]: org. junit. assert. assertequals ( 0, table. getcolcount ( ) )

************

************
tgt: org . junit . assert . asserttrue ( pes . getservices ( ) . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( com. datatorrent. stram. util. loggerutil. getlogfileinformation ( ) )
[1]: org. junit. assert. assertnotnull ( rfa. getlogfileinformation ( ) )
[2]: org. junit. assert. assertnotnull ( org. apache. logatorrent. stram. util. loggerutil. getlogfileinformation ( ) )
[3]: org. junit. assert. assertequals ( rfa. getlogfileinformation ( ), rfa )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( order )
[0]: org. junit. assert. assertequals ( 1, realize )
[1]: org. junit. assert. assertequals ( 1, loggers. size ( ) )
[2]: org. junit. assert. assertequals ( 0, loggers. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), loggers )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( empty ( ) ), loggers )

************

************
tgt: org . junit . assert . assertequals ( cell2root , other . getfilesystem ( ) . getrootpath ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), loggers )
[1]: org. junit. assert. assertequals ( 1, runner. runvalidateconfigs ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( runner. runvalidateconfigs ( ) )
[3]: org. junit. assert. assertequals ( 0, runner. runvalidateconfigs ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 2, runner. runvalidateconfigs ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( remove )
[0]: org. junit. assert. assertequals ( 0, params. dockerforcepullimage ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, params. dockerforcepullimage ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, params. dockerforcepullimage ( ) )
[3]: org. junit. assert. assertequals ( 0, params. dockerforcepullimage ( ). length )
[4]: org. junit. assert. assertequals ( 0, params. dockerforcepullimage ( ). size ( )

************

************
tgt: org . junit . assert . assertnotnull ( plugin )
[0]: org. junit. assert. assertnotnull ( o )
[1]: org. junit. assert. assertnull ( o )
[2]: org. junit. assert. assertequals ( 1, o. size )
[3]: org. junit. assert. assertequals ( 1, o. count )
[4]: org. junit. assert. assertnotnull ( o. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( id , instance . getid ( ) )
[0]: org. junit. assert. assertequals ( firstelement, strings )
[1]: org. junit. assert. assertequals ( firstelement, string )
[2]: org. junit. assert. assertequals ( firstelement, msg )
[3]: , firstelement )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( a1 , a2 )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertequals ( 1, list. size ( ) )
[2]: org. junit. assert. assertequals ( 1, this. list. size ( ) )
[3]: org. junit. assert. assertequals ( 1, events. size ( ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result . passedvalidation ( ) )
[0]: org. junit. assert. assertequals ( 0, futures. size ( ) )
[1]: org. junit. assert. assertequals ( 1, futures. size ( ) )
[2]: org. junit. assert. assertequals ( zero, futures. size ( ) )
[3]: org. junit. assert. assertequals ( 2, futures. size ( ) )
[4]: org. junit. assert. assertequals ( 3, futures. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( positions , org . apache . distributedlog . util . futureutils . result ( store . getlastcommitpositions ( ) ) )
[0]: org. junit. assert. assertequals ( 1, ( initialgroupuserscount + initialgroupuserscount ) )
[1]: org. junit. assert. assertequals ( 1, ( initialgroupuserscount + 1 ) )
[2]: org. junit. assert. assertequals ( 1, ( initialgroupuserscount - initialgroupuserscount ) )
[3]: org. junit. assert. assertequals ( 1, ( initialgroupuserscount + firstgroupuserscount ) )
[4]: org. junit. assert. assertequals ( 1, initialgroupuserscount )

************

************
tgt: org . junit . assert . asserttrue ( ( ( result . trim ( ) . length ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( record, record2 )
[1]: org. junit. assert. assertequals ( request, record2 )
[2]: org. junit. assert. assertequals ( response, record2 )
[3]: org. junit. assert. assertnotnull ( record2 )
[4]: org. junit. assert. assertequals ( record, record1 )

************

************
tgt: org . junit . assert . assertarrayequals ( null , com . feilong . core . bean . convertutil . tostrings ( null ) )
[0]: org. junit. assert. assertequals ( 0, getnumberofrecords ( sample ) )
[1]: org. junit. assert. assertequals ( 1, getnumberofrecords ( sample ) )
[2]: sample ) )
[3]: ) )
[4]: sample )

************

************
tgt: org . junit . assert . asserttrue ( net . violet . platform . events . handlers . ztampeventshandler . isinactiveperiod ( thesettings ) )
[0]: org. junit. assert. assertequals ( control, testorder )
[1]: org. junit. assert. assertequals ( control, results )
[2]: org. junit. assert. assertequals ( control, control )
[3]: org. junit. assert. assertequals ( control, entry )
[4]: , control )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertfalse ( b2. isstreamcopyoptimized ( ) )
[1]: org. junit. assert. assertnotnull ( nichandle )
[2]: org. junit. assert. assertequals ( nichandle, nichandle )
[3]: org. junit. assert. assertnull ( nichandle )
[4]: org. junit. assert. asserttrue ( ( nichandle!= null ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , commitinfo . getnewrevision ( ) )
[0]: org. junit. assert. asserttrue ( ( nichandle == null ) )
[1]: org. junit. assert. assertnotnull ( com. cloud. api. apiservlet. getclientaddress ( request ) )
[2]: org. junit. assert. assertequals ( com. cloud. api. apiservlet. getclientaddress ( request ), request. getmessage ( ) )
[3]: org. junit. assert. assertequals ( null, com. cloud. api. apiservlet. getclientaddress ( request ) )
[4]: org. junit. assert. assertequals ( request, com. cloud. api. apiservlet. getclientaddress ( request ) )

************

************
tgt: org . junit . assert . assertfalse ( feature . isenabled ( null ) )
[0]: org. junit. assert. assertequals ( com. cloud. api. apiservlet. getclientaddress ( request ), request. getremoteaddr ( ) )
[1]: org. junit. assert. assertarrayequals ( new int [ ] { 1 }, connection. getupdatecounts ( ) )
[2]: org. junit. assert. assertarrayequals ( new int [ ] { 1, 1 }, connection. getupdatecounts ( ) )
[3]: org. junit. assert. assertarrayequals ( new int [ ] { 1 }, execution. getupdatecounts ( ) )
[4]: org. junit. assert. assertarrayequals ( new int [ ] { 1 }, connections. getupdatecounts ( ) )

************

************
tgt: org . junit . assert . assertequals ( delete . value , ( ( java . lang . integer ) ( 15 ) ) )
[0]: org. junit. assert. assertarrayequals ( new int [ ] { 1, 1 }, execution. getupdatecounts ( ) )
[1]: org. junit. assert. assertequals ( 1, dataadapter. getrejectedgenes ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, dataadapter. getrejectedgenes ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), dataadapter. getrejectedgenes ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( rejectedgenes ), dataadapter. getrejectedgenes ( ) )

************

************
tgt: org . junit . assert . assertequals ( result , this . quote [ i ] )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), dataadapter. getrejectedgens ( ) )
[1]: org. junit. assert. assertnotnull ( props. iterator ( ) )
[2]: org. junit. assert. asserttrue ( props. iterator ( ). hasnext ( ) )
[3]: org. junit. assert. assertequals ( filter, session. where ( filter ) )
[4]: org. junit. assert. assertequals ( filter, query. where ( filter ) )

************

************
tgt: org . junit . assert . asserttrue ( localfilesys . mkdirs ( dir ) )
[0]: org. junit. assert. assertequals ( 1, query. where ( filter ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, query. where ( filter ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. tostring ( ), builder. tostring ( ) )
[4]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. join ( ), builder. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertnotnull ( builder. tostring ( ) )
[1]: org. junit. assert. assertequals ( org. ws. lang. string. class. tostring ( ), builder. tostring ( ) )
[2]: org. junit. assert. assertequals ( "http://www.bing.comfriendlyurl. tostring ( ), builder. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, framedata. geturl ( ) )
[4]: org. junit. assert. assertequals ( null, framedata. geturl ( ) )

************

************
tgt: org . junit . assert . assertnull ( com . graphaware . runtime . runtimeregistry . getstartedruntime ( database ) )
[0]: org. junit. assert. assertequals ( java. util. optional. of ( ), framedata. geturl ( ) )
[1]: org. junit. assert. assertequals ( com. mpatric. mp3agic. version. url, framedata )
[2]: ) )
[3]: org. junit. assert. asserttrue ( response. contains ( ) )
[4]: org. junit. assert. asserttrue ( response )

************

************
tgt: org . junit . assert . assertthat ( result , contains ( 0 , 1 , 2 , 3 , 5 ) )
[0]: org. junit. assert. assertnotnull ( response )
[1]: the response )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( dao. getsubscription ( topic, user ) )
[4]: org. junit. assert. assertnotnull ( dao, getsubscription ( topic, user ) )

************

************
tgt: org . junit . assert . asserttrue ( cache . remove ( new java . lang . long ( key ) , value ) )
[0]: org. junit. assert. assertnotnull ( dao. getsubscription ( topic ) )
[1]: org. junit. assert. assertnotnull ( dao )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( exchangedpartition )
[4]: org. junit. assert. assertequals ( null, exchangedpartition )

************

************
tgt: org . junit . assert . assertequals ( 1 , targets . size ( ) )
[0]: org. junit. assert. assertequals ( 0, exchangedpartition. gettablename ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, exchangedpartition. gettablename ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), values )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), values. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( locale . german , converter . getactivelocale ( ) )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), values )
[1]: , values )
[2]: ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), ip. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), ip. tostring ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( contentview )
[0]: org. junit. assert. assertequals ( 0, ip. tostring ( ). length ( ) )
[1]: org. junit. assert. assertequals ( 1, ip. tostring ( ). size ( ) )
[2]: . tostring ( ) )
[3]: org. junit. assert. assertfalse ( a. equals ( null ) )
[4]: org. junit. assert. assertfalse ( a. equals ( a ) )

************

************
tgt: org . junit . assert . assertequals ( srgl13 . getmeantimetorepairinhours ( ) , 100 , 0 )
[0]: org. junit. assert. assertfalse ( a. equals ( java. lang. object. class ) )
[1]: org. junit. assert. assertfalse ( a. equals ( java. lang. string. class ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( expected, testfilteraclentriesbyacls )
[4]: org. junit. assert. assertequals ( expected, testfilteraclentriesbyaclentriesbyacls )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( expected, testfilteraclentriesbyorg. size ( ) )
[1]: org. junit. assert. assertequals ( expected, testfilteraclentriesbyassociatedto ( existing ) )
[2]: org. junit. assert. assertequals ( expected, testfilteraclentriesbyacls. size ( ) )
[3]: org. junit. assert. assertequals ( 5, result. length ( ) )
[4]: org. junit. assert. assertequals ( avromode. specific, returnedmode )

************

************
tgt: org . junit . assert . assertequals ( true , result )
[0]: org. junit. assert. assertsame ( avromode. specific, returnedmode )
[1]: org. junit. assert. assertnotnull ( returnedmode )
[2]: org. junit. assert. assertequals ( avromode, returnedmode )
[3]: org. junit. assert. assertnull ( returnedmode )
[4]: org. junit. assert. assertnotnull ( tmresult )

************

************
tgt: org . junit . assert . assertsame ( components , entity . getcomponents ( ) )
[0]: org. junit. assert. assertequals ( tm, tmresult )
[1]: org. junit. assert. assertnotnull ( tmresult. collection )
[2]: org. junit. assert. assertequals ( null, tmresult )
[3]: ) )
[4]: org. junit. assert. assertequals ( new java. lang. integer ( 0 ), e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( list , list . get ( 0 ) )
[0]: org. junit. assert. assertequals ( new int [ ] { 0, 0 }, e. getmessage ( ). get ( 0 ) )
[1]: org. junit. assert. assertequals ( new java. lang. long ( 0 ), e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( 0 ), e. getmessage ( ). get ( 0 ) )
[3]: org. junit. assert. assertequals ( new int [ ] { 0, 0 }, e. getmessage ( ). tostring ( ) )
[4]: org. junit. assert. asserttrue ( plugin. isfieldbindingvalid ( ) )

************

************
tgt: org . junit . assert . assertfalse ( varchar . equals ( other ) )
[0]: org. junit. assert. assertequals ( unsignedprimitivetypeusage. all. length, exceptions )
[1]: org. junit. assert. assertequals ( unsignedprimitivetypeusage. all, exceptions )
[2]: org. junit. assert. assertequals ( 1, exceptions )
[3]: org. junit. assert. assertequals ( 0, exceptions )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , fakerepository . getvalue ( ) )
[0]: org. junit. assert. assertnull ( substring )
[1]: org. junit. assert. assertnotnull ( substring )
[2]: org. junit. assert. assertequals ( null, substring )
[3]: org. junit. assert. assertequals ( 1, factor, 0 )
[4]: org. junit. assert. assertequals ( 0, factor, 0 )

************

************
tgt: org . junit . assert . assertequals ( expectednogoldtestsperworker , actualnogoldtestsperworker )
[0]: org. junit. assert. assertequals ( 2, factor, 0 )
[1]: org. junit. assert. assertequals ( 10, factor, 0 )
[2]: org. junit. assert. assertequals ( 1, set. size ( ) )
[3]: org. junit. assert. assertequals ( 0, set. size ( ) )
[4]: org. junit. assert. assertequals ( 1, sets. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( tested . taskmanager , tested . gettaskmanager ( ) )
[0]: org. junit. assert. assertequals ( 3, set. size ( ) )
[1]: org. junit. assert. assertequals ( 2, set. size ( ) )
[2]: org. junit. assert. assertnotnull ( u )
[3]: org. junit. assert. assertnull ( u )
[4]: org. junit. assert. assertequals ( null, u )

************

************
tgt: org . junit . assert . assertequals ( false , actual )
[0]: , u )
[1]: ) )
[2]: org. junit. assert. assertequals ( null, hbaseconnectionwrapper. getcurrentresult ( ) )
[3]: org. junit. assert. assertnull ( hbaseconnectionwrapper. getcurrentresult ( ) )
[4]: org. junit. assert. assertequals ( 0, hbaseconnectionwrapper. getcurrentresult ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedbuilder , testsink . builder )
[0]: org. junit. assert. assertequals ( null, hbaseconnectionwrapper. getcurrentresult ( ). get ( ) )
[1]: org. junit. assert. assertequals ( 0, hbaseconnectionwrapper. getcurrentresult ( ). length )
[2]: org. junit. assert. assertnotnull ( mediated )
[3]: org. junit. assert. assertequals ( 1, mediated. size ( ) )
[4]: org. junit. assert. assertequals ( null, mediated )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( 0, mediated. size ( ) )
[1]: org. junit. assert. assertequals ( 1, mediated. length )
[2]: org. junit. assert. assertequals ( 1, points. size ( ) )
[3]: org. junit. assert. assertequals ( 0, points. size ( ) )
[4]: org. junit. assert. assertequals ( l1. size ( ), points. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( 1, ( ( points. size ( ) ) + 1 ) )
[1]: org. junit. assert. assertequals ( 1, ( ( points. size ( ) ) == 1 ) )
[2]: org. junit. assert. assertnotnull ( entities )
[3]: org. junit. assert. asserttrue ( entities. isempty ( ) )
[4]: org. junit. assert. assertnotnull ( entities. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( assignmentfunctiondao . exists ( assignmentfunction . getid ( ) ) )
[0]: org. junit. assert. assertnotnull ( entities. get ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( result, result )
[3]: org. junit. assert. assertequals ( bags. mutable. of ( ), result )
[4]: org. junit. assert. assertequals ( result, map )

************

************
tgt: org . junit . assert . assertequals ( 0 , org . openkilda . persistence . repositories . impl . neo4jswitchrepositorytest . repository . findall ( ) . size ( ) )
[0]: , result )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, berichtentiteits. isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, countworksdoneonpersonid ( 23 ) )
[4]: org. junit. assert. assertequals ( 0, countworksdoneonpersonid ( 23 ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( 2, countworksdoneonpersonid ( 23 ) )
[1]: org. junit. assert. assertequals ( 3, countworksdoneonpersonid ( 23 ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( org. apache. servicecomb. foundation. common. utils. jvmutils. findmainclassbystacktrace ( ) )
[4]: org. junit. assert. asserttrue ( config. hasconfiguration ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , brownresultant ( a , b , 1 ) )
[0]: org. junit. assert. assertfalse ( config. hasconfiguration ( ) )
[1]: org. junit. assert. asserttrue ( configuration. hasconfiguration ( ) )
[2]: org. junit. assert. asserttrue ( config. haveconfiguration ( ) )
[3]: org. junit. assert. asserttrue ( config. hasconfiguration ( ) ) ;
[4]: org. junit. assert. assertequals ( 1, count )

************

************
tgt: org . junit . assert . assertequals ( expected , account . getnameandemail ( ) )
[0]: org. junit. assert. assertequals ( 0, count )
[1]: org. junit. assert. assertequals ( 1l, count )
[2]: org. junit. assert. assertequals ( 0l, count )
[3]: org. junit. assert. assertequals ( 3, count )
[4]: org. junit. assert. assertequals ( expected, root )

************

************
tgt: org . junit . assert . assertnotnull ( screen . getmenu ( ) )
[0]: org. junit. assert. assertequals ( expected, root. getbestmodel ( ) )
[1]: org. junit. assert. assertequals ( expected, root. union ( imgc, root ) )
[2]: org. junit. assert. assertequals ( expected, root. collect ( ) )
[3]: org. junit. assert. assertequals ( expected, root. union ( imgc ) )
[4]: org. junit. assert. assertnotnull ( uri )

************

************
tgt: org . junit . assert . asserttrue ( returnedvisibilities . isempty ( ) )
[0]: org. junit. assert. assertequals ( null, uri )
[1]: org. junit. assert. assertequals ( assertnotnull, uri )
[2]: org. junit. assert. assertequals ( string, uri )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, x. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( 100 , numoutputrecords )
[0]: org. junit. assert. assertequals ( ( ( val - val ) * val ), x. get ( ) )
[1]: org. junit. assert. assertequals ( 0, x. get ( ) )
[2]: get ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( dataset )

************

************
tgt: org . junit . assert . assertnull ( com . rapid7 . client . dcerpc . msrrp . dto . registryhive . getregistryhivebyname ( "" ) )
[0]: org. junit. assert. assertnotnull ( instance )
[1]: org. junit. assert. assertnotnull ( entity )
[2]: org. junit. assert. assertnotnull ( bean )
[3]: org. junit. assert. assertnotnull ( data )
[4]: org. junit. assert. assertequals ( 1, chunkeddata. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( entryrelationship )
[0]: org. junit. assert. assertequals ( 0, chunkeddata. size ( ) )
[1]: org. junit. assert. assertequals ( 1, chunkeddata. size ( ) )
[2]: org. junit. assert. assertnotnull ( product )
[3]: org. junit. assert. assertnotnull ( domobjects )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( oldflags , edge . getflags ( ) )
[0]: org. junit. assert. assertnotnull ( ident_13 )
[1]: org. junit. assert. assertnotnull ( domain )
[2]: org. junit. assert. assertequals ( 1, users. size ( ) )
[3]: org. junit. assert. assertthat ( users. size ( ), org. hamcrest. matchers. is ( 1 ) )
[4]: org. junit. assert. assertthat ( users. size ( ), org. hamcrest. matchers. equalto ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertthat ( users. size ( ), org. hamcrest. matchers. contains ( 1 ) )
[1]: org. junit. assert. assertnotnull ( users )
[2]: org. junit. assert. assertthat ( authenticatedresource, org. hamcrest. corematchers. is ( accessorresource ) )
[3]: org. junit. assert. assertthat ( authenticatedresource, org. hamcrest. corematchers. is ( accessorresource. notifications ) )
[4]: org. junit. assert. assertthat ( authenticatedresource, org. hamcrest. corematchers. is ( accessresource ) )

************

************
tgt: org . junit . assert . assertequals ( list , com . feilong . core . util . collectionsutil . selectrejected ( list , "name" , ( ( java . util . list < java . lang . string > ) ( null ) ) ) )
[0]: org. junit. assert. assertthat ( authenticatedresource )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, ips. isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, ips. isempty ( ) )
[4]: org. junit. assert. assertequals ( false, ips. isempty ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedargs , args )
[0]: org. junit. assert. assertarrayequals ( bytebuffer, serializerbytebuffer. array ( ) )
[1]: org. junit. assert. assertsame ( bytebuffer, serializerbytebuffer )
[2]: org. junit. assert. assertequals ( bytebuffer, serializerbytebuffer )
[3]: org. junit. assert. assertsame ( bytebuffer, serializerbytebuffer. array ( ) )
[4]: org. junit. assert. assertarrayequals ( bytebuffer. array ( ), serializerbytebuffer )

************

************
tgt: org . junit . assert . asserttrue ( matcher . matches ( atom ) )
[0]: org. junit. assert. assertequals ( 1, emptyrows )
[1]: org. junit. assert. assertequals ( 1l, emptyrows )
[2]: org. junit. assert. assertequals ( 0, emptyrows )
[3]: org. junit. assert. assertequals ( 5, emptyrows )
[4]: org. junit. assert. assertequals ( 0l, emptyrows )

************

************
tgt: org . junit . assert . assertequals ( value , converter . convert ( converter . reconvert ( value ) ) )
[0]: org. junit. assert. assertnotnull ( keyfactory. createkeyfactory ( ) )
[1]: org. junit. assert. assertnotnull ( stringvalue )
[2]: org. junit. assert. assertequals ( null, stringvalue )
[3]: org. junit. assert. assertnull ( stringvalue )
[4]: org. junit. assert. assertequals ( null, stringvalue )

************

************
tgt: org . junit . assert . assertequals ( 69 , anint )
[0]: ) )
[1]: org. junit. assert. assertequals ( testresult, resultprovided. get ( ) )
[2]: org. junit. assert. assertsame ( testresult, resultprovided. get ( ) )
[3]: org. junit. assert. assertnotnull ( resultprovided. get ( ) )
[4]: org. junit. assert. assertequals ( testresult, resultprovided. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( isumllinknotdetected ( fromclass , toclass ) )
[0]: org. junit. assert. assertsame ( testresult, resultprovided. get ( ) )
[1]: org. junit. assert. assertnotnull ( m. getbrokerrevenueshare ( ) )
[2]: org. junit. assert.null ( m. getbrokerrevenueshare ( ) )
[3]: org. junit. assert. assertnull ( m )
[4]: org. junit. assert. assertequals ( null, m )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . integer ( 1 ) , quarter )
[0]: ) )
[1]: org. junit. assert. assertequals ( value, wrapper. tostring ( ) )
[2]: org. junit. assert. assertequals ( new java. lang. string ( value ), wrapper. tostring ( ) )
[3]: org. junit. assert. assertequals ( value. tostring ( ), wrapper. tostring ( ) )
[4]: org. junit. assert. assertequals ( values, wrapper. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0l , num )
[0]: org. junit. assert. assertequals ( value. tostring ( ), wrapper. tostring ( ). trim ( ) )
[1]: org. junit. assert. assertnotnull ( ps )
[2]: org. junit. assert. asserttrue ( ps. isempty ( ) )
[3]: org. junit. assert. assertnull ( ps )
[4]: org. junit. assert. assertequals ( 0, ps. length )

************

************
tgt: org . junit . assert . assertequals ( abstracthttpspandecorator . post_method , org . apache . camel . opentracing . decorators . abstracthttpspandecorator . gethttpmethod ( exchange , endpoint ) )
[0]: , ps )
[1]: org. junit. assert. assertequals ( qmap. size ( ), rowcount )
[2]: org. junit. assert. assertequals ( expmap. size ( ), rowcount )
[3]: org. junit. assert. assertequals ( 1, best. size ( ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , instance . getwarnings ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( expected, found )
[1]: org. junit. assert. assertequals ( 0, processor. getbuffer ( ). length )
[2]: org. junit. assert. assertequals ( 0, processor. getbuffer ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, processor. getbuffer ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, mockinput. getbuffer ( ). length )

************

************
tgt: org . junit . assert . assertequals ( name , form . firstname )
[0]: org. junit. assert. assertequals ( 1, processor. getbuffer ( ). length )
[1]: org. junit. assert. assertnotnull ( relationshipquery. getresultlist ( ) )
[2]: org. junit. assert. assertnotnull ( relationshipquery. getresultlist ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( relationshipquery. getresultlist ( ). isempty ( ) )
[4]: org. junit. assert. assertnull ( relationshipquery. getresultlist ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , result )
[0]: org. junit. assert. assertequals ( result, relationshipquery. getresultlist ( ) )
[1]: org. junit. assert. assertequals ( cell, actualcell )
[2]: org. junit. assert. assertnotnull ( actualcell )
[3]: org. junit. assert. assertequals ( 1, doquery ( query, i ) )
[4]: org. junit. assert. assertequals ( 1, doquery ( query, 1 ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . collections . emptylist ( ) , fromintarray ( null ) )
[0]: org. junit. assert. assertequals ( 1, doquery ( query, null ) )
[1]: org. junit. assert. assertequals ( i, doquery ( query, i ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( binarypath. exists ( ) )
[4]: org. junit. assert. assertequals ( 1, testedcontext. putallcontextmap ( contextmap ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( idempotencytoken , software . amazon . awssdk . core . util . idempotentutils . resolvestring ( idempotencytoken ) )
[0]: org. junit. assert. assertequals ( 0, testedcontext. putallcontextmap ( contextmap ). size ( ) )
[1]: org. junit. assert. assertequals ( null, testedcontext. putallcontextmap ( contextmap ) )
[2]: org. junit. assert. assertnull ( testedcontext. putallcontextmap ( contextmap ) )
[3]: org. junit. assert. assertequals ( null, testedcontext. putallcontextmap ( contextmap ). get ( ) )
[4]: org. junit. assert. assertthat ( captor. getvalue ( ). get ( ), org. hamcrest. matchers. equalto ( currentprops ) )

************

************
tgt: org . junit . assert . assertnull ( root . getname ( ) )
[0]: org. junit. assert. assertthat ( captor. getvalue ( ). get ( ), org. hamcrest. matchers. is ( currentprops ) )
[1]: org. junit. assert. assertthat ( captor. getvalue ( ). size ( ), org. hamcrest. matchers. equalto ( 1 ) )
[2]: ) )
[3]: 
[4]: org. junit. assert. assertequals ( 1, branch_conditions. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , errors . hasfielderrors ( "name" ) )
[0]: org. junit. assert. assertequals ( 0, branch_conditions. size ( ) )
[1]: org. junit. assert. assertequals ( 1, branch_conditions. size ( ) )
[2]: org. junit. assert. assertequals ( 3, branch_conditions. size ( ) )
[3]: org. junit. assert. assertequals ( 1, branch.conditions. size ( ) )
[4]: org. junit. assert. assertnotnull ( backend. get ( org. dremio. service. job. proto. jobid ) )

************

************
tgt: org . junit . assert . asserttrue ( isthrown )
[0]: org. junit. assert. assertnull ( backend. get ( ""random<sp>key ) )
[1]: org. junit. assert. assertnull ( backend. get ( 1 ) )
[2]: org. junit. assert. assertnull ( backend. get ( ""random<sp>key"" ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( format, querymodel. getobject ( ) )

************

************
tgt: org . junit . assert . assertequals ( correct , swapped )
[0]: org. junit. assert. assertequals ( format. getobject ( ), querymodel. getobject ( ) )
[1]: org. junit. assert. assertequals ( format. getobject ( ), manager. getobject ( ) )
[2]: org. junit. assert. assertequals ( format, querymodel. getobject ( ). getobject ( ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( expectedevent. equals ( propertymap ) )

************

************
tgt: org . junit . assert . asserttrue ( result . isvalid ( ) )
[0]: org. junit. assert. asserttrue ( (! ( propertymap. equals ( expectedevent ) ) ) )
[1]: org. junit. assert. asserttrue ( java. util. arrays. equals ( expectedevent, propertymap ) )
[2]: org. junit. assert. asserttrue ( ident_4. equals ( propertymap ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( sum, same )

************

************
tgt: org . junit . assert . asserttrue ( principal1 . equals ( principal2 ) )
[0]: org. junit. assert. assertequals ( 1, same. sum ( 1 ) )
[1]: org. junit. assert. assertequals ( 0, same. sum ( 1 ) )
[2]: org. junit. assert. assertequals ( 1, same. sum ( 0 ) )
[3]: org. junit. assert. assertequals ( union, same )
[4]: org. junit. assert. assertequals ( transientusername, token )

************

************
tgt: org . junit . assert . assertthat ( contextid , org . hamcrest . corematchers . is ( "foo" ) )
[0]: org. junit. assert. assertequals ( e, token )
[1]: org. junit. assert. assertequals ( entries, sortedentries )
[2]: org. junit. assert. assertequals ( list, sortedentries )
[3]: org. junit. assert. assertequals ( items, sortedentries )
[4]: org. junit. assert. assertequals ( 1, search. length )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , com . google . common . collect . sets . newhashset ( result ) )
[0]: org. junit. assert. assertequals ( 0, search. length )
[1]: org. junit. assert. assertequals ( 1, searches. length )
[2]: org. junit. assert. asserttrue ( ( ( result. size ( ) ) == 1 ) )
[3]: org. junit. assert. asserttrue ( ( ( result. size ( ) ) == 2 ) )
[4]: org. junit. assert. asserttrue ( ( ( set. size ( ) ) == 1 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. asserttrue ( ( ( set. size ( ) ) == 2 ) )
[1]: org. junit. assert. asserttrue ( ( ( count. size ( ) ) == 1 ) )
[2]: org. junit. assert. assertnotnull ( mappedsrc )
[3]: org. junit. assert. assertequals ( nested2, mappedsrc )
[4]: org. junit. assert. assertequals ( destmap, mappedsrc )

************

************
tgt: org . junit . assert . assertequals ( countzero , 0 )
[0]: org. junit. assert. assertequals ( srcmap, mappedsrc )
[1]: org. junit. assert. assertnull ( mappedsrc )
[2]: org. junit. assert. assertequals ( 1, attributeservice. getalltrackedentityattributes ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, attributeservice. getalltrackedentityattributes ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, attributeervice. getalltrackedentityattributes ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( false , retval )
[0]: org. junit. assert. assertequals ( 1, attribervice. getalltrackedentityattributes ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( attributea, attributeb ), attributeservice )
[2]: org. junit. assert. assertfalse ( last. equals ( last ) )
[3]: org. junit. assert. assertfalse ( last. equals ( first ) )
[4]: org. junit. assert. asserttrue ( last. equals ( last ) )

************

************
tgt: org . junit . assert . assertnotnull ( factory )
[0]: org. junit. assert. assertfalse ( last. equals ( previous ) )
[1]: org. junit. assert. assertfalse ( first. equals ( last ) )
[2]: org. junit. assert. asserttrue ( subjecthelper. isunauthenticated ( null ) )
[3]: org. junit. assert. assertequals ( unitofmeasure, sampledvalue. getunit ( ) )
[4]: org. junit. assert. assertequals ( unitofmeasure, sampledvalues. getunit ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( menus )
[0]: org. junit. assert. assertsame ( unitofmeasure, sampledvalue. getunit ( ) )
[1]: org. junit. assert. assertequals ( unitofmeasure )
[2]: ) )
[3]: org. junit. assert. assertequals ( 2, updatedsitenavigationmenu. gettype ( ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 2 ), updatedsitenavigationmenu. gettype ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ! ( rs . next ( ) ) ) )
[0]: org. junit. assert. assertequals ( java. lang. string. class, updatedsitenavigationmenu. gettype ( ) )
[1]: org. junit. assert. assertequals ( 1, updatedsitenavigationmenu. gettype ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( address. getid ( ) )
[4]: org. junit. assert. assertequals ( id, address. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( de . unisb . cs . st . javalanche . mutation . analyze . html . testcontent . testcontent . class . getname ( ) , classname )
[0]: org. junit. assert. assertnotnull ( address )
[1]: org. junit. assert. assertnull ( address. getid ( ) )
[2]: id ( ) )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertequals ( taskinfo, taskinfo. gettaskid ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( taskinfo. gettaskid ( ), taskinfo )
[1]: org. junit. assert. assertequals ( taskinfo, taskinfo )
[2]: org. junit. assert. assertnotnull ( taskinfo. gettaskid ( ) )
[3]: org. junit. assert. assertnotnull ( taskinfo )
[4]: org. junit. assert. assertequals ( null, password )

************

************
tgt: org . junit . assert . assertequals ( 10 , com . google . common . collect . iterators . size ( it ) )
[0]: org. junit. assert. assertequals ( """", password )
[1]: org. junit. assert. assertequals ( 1, check. getsize ( ) )
[2]: org. junit. assert. assertequals ( 0, check. getsize ( ) )
[3]: org. junit. assert. assertequals ( 1, check. getsize ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, check. getsize ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , flexgrid )
[0]: org. junit. assert. assertequals ( 1l, check. getsize ( ) )
[1]: org. junit. assert. asserttrue ( success )
[2]: org. junit. assert. assertnotnull ( tx. getconnection ( ) )
[3]: org. junit. assert. assertequals ( conn, tf. getconnection ( ) )
[4]: org. junit. assert. assertnotnull ( tf. getconnection ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , removecert4drivername ( n ) )
[0]: org. junit. assert. assertnotnull ( transaction. getconnection ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( connection. hadvalidshutdown ( ) )
[3]: org. junit. assert. assertequals ( 1, connection. hadvalidshutdown ( ) )
[4]: org. junit. assert. assertnull ( connection. hadvalidshutdown ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1l , count )
[0]: org. junit. assert. assertequals ( 0, connection. hadvalidshutdown ( ) )
[1]: org. junit. assert. assertnotnull ( includefile )
[2]: org. junit. assert. assertequals ( 1, localfilesys. length )
[3]: org. junit. assert. assertnotnull ( localfilesys )
[4]: org. junit. assert. assertnotnull ( includesfile )

************

************
tgt: org . junit . assert . assertthat ( net . pms . util . fileutil . getfilecharsetname ( file ) )
[0]: org. junit. assert. assertnotnull ( b )
[1]: org. junit. assert. assertequals ( flowstate. vsdisk_detached )
[2]: org. junit. assert. assertnull ( newstate )
[3]: org. junit. assert. assertequals ( flowstate, newstate )
[4]: org. junit. assert. assertnotnull ( newstate )

************

************
tgt: org . junit . assert . asserttrue ( ( ( re . getcause ( ) ) instanceof java . io . ioexception ) )
[0]: , newstate )
[1]: org. junit. assert. assertnotnull ( usergrouphistory )
[2]: org. junit. assert. assertnotnull ( usergrouphistory. getperiodend ( ) )
[3]: org. junit. assert. asserttrue ( responsebody. getnetworks ( ). isempty ( ) )
[4]: org. junit. assert. assertequals ( 1, responsebody. getnetworks ( ). length )

************

************
tgt: org . junit . assert . assertequals ( "wp001" , empty . getdestionationwaypointid ( ) )
[0]: org. junit. assert. assertnotnull ( responsebody. getnetworks ( ) )
[1]: org. junit. assert. assertequals ( 1, responsebody. getnetworks ( ). size ( )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( mxbeanmapping2 )
[4]: org. junit. assert. assertequals ( null, mxbeanmapping2 )

************

************
tgt: org . junit . assert . assertequals ( existinglayoutpagetemplatecollection , newlayoutpagetemplatecollection )
[0]: org. junit. assert. assertequals ( 1, mxbeanmapping2. type )
[1]: org. junit. assert. assertequals ( 1, mxbeanmapping2. count )
[2]: org. junit. assert. assertequals ( 1, count )
[3]: org. junit. assert. assertequals ( 1, indexsparql )
[4]: org. junit. assert. assertequals ( 1, indexs centroids. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedrequest , request )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertnotnull ( entity )
[2]: org. junit. assert. assertnotnull ( poolstats )
[3]: org. junit. assert. assertequals ( 1, count )
[4]: org. junit. assert. assertequals ( 1, count. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . optional . of ( poolmaxwaiters ) , c . poolmaxwaiters ( java . util . optional . of ( poolmaxwaiters ) ) . poolmaxwaiters ( ) )
[0]: org. junit. assert. assertequals ( 1, counts. size ( ) )
[1]: org. junit. assert. assertequals ( 1, count. get ( ) )
[2]: org. junit. assert. assertequals ( 0, count. size ( ) )
[3]: org. junit. assert. assertnotnull ( s. collection ( ) )
[4]: org. junit. assert. assertnotnull ( context. collection ( ) )

************

************
tgt: org . junit . assert . asserttrue ( name , instance . accept ( new java . io . file ( name ) ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( 1, events. size ( ) )
[2]: org. junit. assert. assertnotnull ( queue )
[3]: org. junit. assert. assertequals ( expectedmodel, actualmodel )
[4]: org. junit. assert. assertequals ( actualmodel, expectedmodel )

************

************
tgt: org . junit . assert . assertequals ( 1 , n )
[0]: org. junit. assert. assertequals ( expectedmodel, actual model )
[1]: org. junit. assert. assertnotnull ( actualmodel )
[2]: ) )
[3]: org. junit. assert. assertequals ( expected, dk. alexandra. fresco. framework. util. modulusfinder. findsuitablemodulus ( 1 ) )
[4]: org. junit. assert. assertequals ( expected, dk. alexandra. fresco. framework. util. modulusfinder. findsuitablemodulus ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( java . net . uri . create ( stringconstantactivity . uri ) , factory . getactivitytype ( ) )
[0]: org. junit. assert. assertequals ( expected, dk. alexandra. fresco. framework. util. modulusfinder. findsuitablemodulus ( 2 ) )
[1]: org. junit. assert. assertequals ( expected, dk. alexandra. fresco. framework. util. modulusfinder. findsuitablemodulus ( 20 ) )
[2]: org. junit. assert. assertequals ( expected, dk. alexandra. fresco )
[3]: org. junit. assert. assertequals ( 1, results. get ( 0 ) )
[4]: org. junit. assert. assertequals ( 1, results. get ( 0 ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( content , retrieved )
[0]: org. junit. assert. assertequals ( 1, results. get ( 1 ) )
[1]: org. junit. assert. assertequals ( 1, results. get ( 0 ). getid ( ) )
[2]: get ( 1 ) )
[3]: org. junit. assert. assertequals ( 1, acceptalert. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. optional. empty ( ), acceptalert )

************

************
tgt: org . junit . assert . assertthat ( actualtrackids , org . hamcrest . corematchers . is ( expectedtrackids ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), acceptalert )
[1]: org. junit. assert. assertequals ( 0, acceptalert. size ( ) )
[2]: org. junit. assert. assertnotnull ( acceptalert )
[3]: org. junit. assert. assertequals ( query, actualquery )
[4]: org. junit. assert. assertnotnull ( actualquery )

************

************
tgt: org . junit . assert . assertequals ( id , topicid )
[0]: org. junit. assert. assertequals (query, actualquery )
[1]: org. junit. assert. assertequals ( queries, actualquery )
[2]: org. junit. assert. assertequals ( query, actualquery )
[3]: org. junit. assert. asserttrue ( ( e instanceof java. lang. object ) )
[4]: org. junit. assert. asserttrue ( ( result == false ) )

************

************
tgt: org . junit . assert . assertnotnull ( certadded )
[0]: org. junit. assert. asserttrue ( ( result == true ) )
[1]: org. junit. assert. asserttrue ( ( result == null ) )
[2]: org. junit. assert. asserttrue ( ( e instanceof java. lang. long ) )
[3]: org. junit. assert. assertequals ( 1, io. github. data4all. model. data. tags. getallnodetags ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, io. github. data4all. model. data. tags. getallnodetags ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( - 1 , result )
[0]: org. junit. assert. assertequals ( 1, test. getallnodetags ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), test. getallnodetags ( ) )
[2]: org. junit. assert. assertequals ( 0, test. getallnodetags ( ). size ( ) )
[3]: org. junit. assert. assertequals ( newdate, instance. getobject ( null, org. dayatang. utils. dateutils. class ) )
[4]: org. junit. assert. assertequals ( newdate, instance. getobject ( null, java. util. date. class ) )

************

************
tgt: org . junit . assert . assertthat ( result1 , org . hamcrest . corematchers . is ( areaid ) )
[0]: org. junit. assert. assertequals ( newdate, instance. getobject ( 1, org. dayatang. utils. dateutils. class ) )
[1]: org. junit. assert. assertequals ( newdate, instance. getobject ( newdate, java. util. date. class ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( result, new java. util. hashset < java. lang. object > ( ) )
[4]: org. junit. assert. assertequals ( result, new java. util. hashset < org. apache. hadoop. fs. path > ( ) )

************

************
tgt: org . junit . assert . asserttrue ( query . fetch ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( result, new java. util. hashset <? > ( ) )
[1]: org. junit. assert. assertequals ( result )
[2]: add ( result ) )
[3]: org. junit. assert. assertequals ( 1, comparison1 )
[4]: org. junit. assert. assertequals ( 0, comparison1 )

************

************
tgt: org . junit . assert . assertequals ( 6 , dao . getvisits ( null , null , null , null , null , null , null , null , null , false , false ) . size ( ) )
[0]: org. junit. assert. assertequals ( 2, comparison1 )
[1]: org. junit. assert. assertequals ( 1, compare1 )
[2]: org. junit. assert. assertequals ( 4, comparison1 )
[3]: org. junit. assert. assertequals ( 0, a. compareto ( b ) )
[4]: org. junit. assert. assertequals ( 1, a. compareto ( b ) )

************

************
tgt: org . junit . assert . assertthat ( numbers . length , org . hamcrest . corematchers . is ( 3 ) )
[0]: org. junit. assert. assertequals ( true, ( ( a. compareto ( b ) ) == 0 ) )
[1]: org. junit. assert. assertequals ( true, ( ( a. compareto ( b ) ) < 0 ) )
[2]: org. junit. assert. assertequals ( upperbound, upperboundforprinicipal )
[3]: org. junit. assert. asserttrue ( ( upperbound <= upperboundforprinicipal ) )
[4]: org. junit. assert. asserttrue ( ( upperbound == upperboundforprinicipal ) )

************

************
tgt: org . junit . assert . assertequals ( "jar:http://example.test/bar/baz.jar!/com/foo/quux.class" , uri . tostring ( ) )
[0]: org. junit. assert. assertnotnull ( upperboundforprinicipal )
[1]: org. junit. assert. asserttrue ( ( upperbound >= upperboundforprinicipal ) )
[2]: org. junit. assert. assertequals ( measures. get ( 2 ). getname ( ), measure. get ( 2 ). getname ( ) )
[3]: org. junit. assert. assertequals ( measures. get ( 0 ). getname ( ), measure. get ( 2 ). getname ( ) )
[4]: org. junit. assert. assertequals ( measure. get ( 2 ). getname ( ), measures. get ( 2 ). getname ( ) )

************

************
tgt: org . junit . assert . assertnull ( object_field_int_field . getfrom ( bean ) )
[0]: org. junit. assert. assertequals ( measure. get ( 0 ). getname ( ), measures. get ( 2 ). getname ( ) )
[1]: org. junit. assert. assertequals ( measures. get ( 2 ). getname ( ), measure. tostring ( ) )
[2]: org. junit. assert. assertequals ( data, baos. tobytearray ( ) )
[3]: org. junit. assert. assertnotnull ( baos. tobytearray ( ) )
[4]: org. junit. assert. assertequals ( bytes, baos. tobytearray ( ) )

************

************
tgt: org . junit . assert . assertfalse ( org . sagebionetworks . repo . model . table . tableconstants . isreservedcolumnname ( null ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnotnull ( s )
[3]: org. junit. assert. assertnotnull ( plus )
[4]: org. junit. assert. assertnotnull ( modelnode )

************

************
tgt: org . junit . assert . assertnotnull ( ref )
[0]: org. junit. assert. assertnotnull ( instead )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, valuesources. size ( ) )
[3]: org. junit. assert. assertequals ( 0, valuesources. size ( ) )
[4]: org. junit. assert. assertequals ( 3, valuesources. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( 2, valuesources. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertnull ( docssparkapp. getdocumentationhtml ( ) )
[3]: org. junit. assert. assertequals ( 0, patterns. size ( ) )
[4]: org. junit. assert. assertequals ( 1, map. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( afterremovalcommand )
[0]: org. junit. assert. assertequals ( 0, map. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. size ( ), map. size ( ) )
[2]: org. junit. assert. asserttrue ( ( ( map. size ( ) ) == 1 ) )
[3]: org. junit. assert. asserttrue ( ( ( map. size ( ) ) == 0 ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), result )

************

************
tgt: org . junit . assert . assertequals ( roles . size ( ) , 0 )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4 ), result )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 1, 1, 1, 1 ), result )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4, 5, 6 ), result )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), result )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . assertequals ( expectedjson , jsonreport )
[0]: org. junit. assert. assertequals ( 0, result )
[1]: org. junit. assert. assertequals ( 3, result )
[2]: org. junit. assert. assertequals ( 2, result )
[3]: ) )
[4]: org. junit. assert. assertequals ( messagecount, 1 )

************

************
tgt: org . junit . assert . assertnull ( existingddmforminstance )
[0]: org. junit. assert. assertequals ( messagecount, 0 )
[1]: . get ( ) )
[2]: get ( ) )
[3]: ) )
[4]: org. junit. assert. assertnull ( filterresult )

************

************
tgt: org . junit . assert . assertequals ( ( local + "/path" ) , converted )
[0]: org. junit. assert. assertnotnull ( filterresult )
[1]: org. junit. assert. null, filterresult )
[2]: null, filterresult )
[3]: null ) )
[4]: org. junit. assert. assertnotnull ( asu )

************

************
tgt: org . junit . assert . assertequals ( expresult , result , 0.0 )
[0]: org. junit. assert. assertnotnull ( subpackage1. getasset ( ) )
[1]: org. junit. assert. assertnotnull ( subpackage1 )
[2]: org. junit. assert. assertequals ( 1, asu )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, subscriptionhistories. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "second" , deque . getfirst ( ) )
[0]: org. junit. assert. assertequals ( ( ( spacequotaaswithsnapshots. test_util. size ( ) ) + tablelimit ), testtablesnapshots. test_util. size ( ) )
[1]: org. junit. assert. assertequals ( ( ( spacequotaaswithsnapshots. test_util. size ( ) ) + tablelimit ), testtablesnapshots. test_util. tostring ( ) )
[2]: org. junit. assert. assertequals ( ( ( spacequotaaswithsnapshots. test_util. size ( ) ) + tablelimit ), result. size ( ) )
[3]: org. junit. assert. assertequals ( ( 2 * ( spacequotaaswithsnapshots. test_util. size ( ) ) ), testtablesnapshots. test_snapshots. test_util. tostring ( ). length )
[4]: org. junit. assert. assertequals ( ( 1l * ( spacequotaaswithsnapshots. test_util. size ( ) ) ), testtablesnapshots. test_snapshots. test_util. tostring ( conn ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , c . size ( ) )
[0]: org. junit. assert. assertnotnull ( printcircular. printcircular ( array ) )
[1]: org. junit. assert. assertequals ( printcircular. printcircular ( array ), array [ 0 ] )
[2]: org. junit. assert. assertequals ( printcircular. printcircular ( array ), array. length )
[3]: org. junit. assert. assertequals ( printcircular. printcircular ( array ), ""test"" )
[4]: org. junit. assert. assertequals ( printcircular. printcircular ( array ), tostringcircular. tostring ( ) )

************

************
tgt: org . junit . assert . assertnull ( association )
[0]: org. junit. assert. assertequals ( value, subject. reverseget ( key ) )
[1]: org. junit. assert. assertequals ( null, subject. reverseget ( key ) )
[2]: org. junit. assert. assertnotnull ( subject. reverseget ( key ) )
[3]: org. junit. assert. assertnull ( subject. reverseget ( key ) )
[4]: org. junit. assert. assertequals ( values, subject. reverseget ( key ) )

************

************
tgt: org . junit . assert . assertnotnull ( entity )
[0]: org. junit. assert. assertequals ( true, presenter. isusingquery ( ) )
[1]: org. junit. assert. assertnotnull ( collection )
[2]: org. junit. assert. assertnotnull ( context )
[3]: org. junit. assert. assertnotnull ( s )
[4]: org. junit. assert. assertnotnull ( parser )

************

************
tgt: org . junit . assert . asserttrue ( ( ! ( records . isempty ( ) ) ) )
[0]: org. junit. assert. assertequals ( 0, 1 )
[1]: org. junit. assert. assertequals ( 1, roles. size ( ) )
[2]: org. junit. assert. assertequals ( 0, roles. size ( ) )
[3]: org. junit. assert. asserttrue ( ( ( roles. size ( ) ) == 1 ) )
[4]: org. junit. assert. assertequals ( 1, role. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( resolver . has ( perms , perm ) )
[0]: org. junit. assert. asserttrue ( ( ( roles. size ( ) ) == 0 ) )
[1]: org. junit. assert. assertequals ( ( ( byte ) ( 1 ) ), msg. getbyte ( this. name ) )
[2]: org. junit. assert. assertequals ( ( ( byte ) ( 2 ) ), msg. getbyte ( this. name ) )
[3]: org. junit. assert. assertequals ( ( ( byte ) ( 0 ) ), msg. getbyte ( this. name ) )
[4]: org. junit. assert. assertequals ( ( ( short ) ( 1 ) ), msg. getbyte ( this. name ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , appsina1 . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( null, com. hextremelabs. ussd. ui. manager. uimanagertest. uimanager. geterrormessage ( ) )
[2]: org. junit. assert. assertnotnull ( com. hextremelabs. ussd. ui. manager. uimanagertest. uimanager. geterrormessage ( ) )
[3]: org. junit. assert. assertequals ( 1, com. hextremelabs. ussd. ui. manager. uimanagertest. uimanager. geterrormessage ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( l . lock ( false ) )
[0]: )
[1]: org. junit. assert. assertequals ( 1, minutes ( ) )
[2]: org. junit. assert. assertequals ( 0, minutes ( ) )
[3]: org. junit. assert. assertequals ( 1, minutes. minutes ( ) )
[4]: org. junit. assert. assertequals ( 0, minutes. minutes ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( double ) ( size ) ) , ( ( double ) ( hll . count ( ) ) ) , delta )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), minutes ( ) )
[1]: org. junit. assert. assertequals ( node, reeves )
[2]: org. junit. assert. assertequals ( null, reeves )
[3]: org. junit. assert. assertequals ( root, reeves )
[4]: org. junit. assert. assertequals ( org. neo4j. graphdb. node. class, reeves )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, actualmeta. getexported ( ). size ( ) )
[2]: org. junit. assert. assertequals ( em, actualmeta. getexported ( ) )
[3]: org. junit. assert. assertequals ( 0, actualmeta. getexported ( ). size ( ) )
[4]: org. junit. assert. assertequals ( em, actualmeta. getexported ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnull ( values . getvalue ( ) )
[0]: org. junit. assert. assertnotnull ( actualmeta. getexported ( ) )
[1]: org. junit. assert. assertequals ( testname, requestcaptor. getvalue ( ). tostring ( ) )
[2]: org. junit. assert. assertequals ( testname, requestcaptor. getvalue ( ). trim ( ) )
[3]: org. junit. assert. assertequals ( testname, requestcaptor. getvalue ( ). name )
[4]: org. junit. assert. assertequals ( testname, requestcaptor. getvalue ( ). get ( ) )

************

************
tgt: org . junit . assert . assertthat ( this . start . plus ( period ) , org . hamcrest . corematchers . is ( this . end ) )
[0]: org. junit. assert. assertequals ( testname, requestcaptor. getvalue ( ). getmessage ( ) )
[1]: org. junit. assert. asserttrue ( resources. contains ( null ) )
[2]: org. junit. assert. asserttrue ( resources. contains ( pomfileregisteristribut ) )
[3]: org. junit. assert. asserttrue ( resources. contains ( pomfileregister ) )
[4]: org. junit. assert. asserttrue ( resources. contains ( pomfileregisterpacename ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( v1 . compareto ( v2 ) ) < 0 ) )
[0]: org. junit. assert. asserttrue ( resources. contains ( pomfileregistersr ) )
[1]: org. junit. assert. assertnotnull ( entry )
[2]: org. junit. assert. assertnull ( entry )
[3]: org. junit. assert. assertnotnull ( entries )
[4]: org. junit. assert. assertequals ( requestadapter )

************

************
tgt: org . junit . assert . assertequals ( factory , factory2 )
[0]: ) )
[1]: org. junit. assert. asserttrue ( result. isfailed ( ) )
[2]: org. junit. assert. assertequals ( true, result. isfailed ( ) )
[3]: org. junit. assert. assertfalse ( result. isfailed ( ) )
[4]: org. junit. assert. assertnotnull ( result. isfailed ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( ex )
[0]: org. junit. assert. assertequals ( true, org. jbasics. arrays. bytearraycomparator. islessthan ( twocomplementproblemlesser, twocomplementproblemgreater ) )
[1]: org. junit. assert. assertequals ( true, path. dfsnextchild ( ) )
[2]: org. junit. assert. assertequals ( s, dataset. getseriescount ( ) )
[3]: org. junit. assert. assertequals ( s. size ( ), dataset. getseriescount ( ) )
[4]: org. junit. assert. assertequals ( s. length, dataset. getseriescount ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( read ( html ) , read ( result ) )
[0]: org. junit. assert. assertequals ( s. isempty ( ), dataset. getseriescount ( ) )
[1]: org. junit. assert. assertequals ( s. count ( ), dataset. getseriescount ( ) )
[2]: org. junit. assert. assertnotnull ( ne )
[3]: org. junit. assert. assertfalse ( opennlp. tools. namefind. namefindersequencevalidatortest. validator. validsequence ( 1, inputsequence, outcomessequence, outcome ) )
[4]: org. junit. assert. assertequals ( 1, c. key ( ) )

************

************
tgt: org . junit . assert . assertthat ( doc . asjson ( ) , org . hamcrest . corematchers . is ( json ) )
[0]: org. junit. assert. assertnotnull ( c. key ( ) )
[1]: org. junit. assert. assertequals ( 0, c. key ( ) )
[2]: org. junit. assert. assertnotnull ( c )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( video )

************

************
tgt: org . junit . assert . assertequals ( 2 , localreporter . spans . size ( ) )
[0]: org. junit. assert. asserttrue ( video. isempty ( ) )
[1]: org. junit. assert. asserttrue ( video. contains ( now ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, recordscount )

************

************
tgt: org . junit . assert . assertequals ( "good<sp>morning!" , hello . sayhello ( ) )
[0]: org. junit. assert. assertequals ( 0, recordscount )
[1]: org. junit. assert. assertequals ( 0, jointwon. size ( ) )
[2]: org. junit. assert. assertequals ( 1, metricscount )
[3]: org. junit. assert. assertequals ( 0, jointwon. calculate ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( first, last ), published ( ) )

************

************
tgt: org . junit . assert . asserttrue ( trie . contains ( "ball" ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( first ), last. published ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( first ), last. published ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( first ), last )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( first, last ), sorted ( ) )
[4]: org. junit. assert. assertequals ( null, m. getobject ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . datadog . jmxfetch . testparsingjcommander . conf_dir , appconfig . getconfddirectory ( ) )
[0]: org. junit. assert. assertnotnull ( m. getobject ( ) )
[1]: org. junit. assert. assertequals ( obj, m. getobject ( ) )
[2]: org. junit. assert. assertequals ( 1, m. getobject ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, remaining )

************

************
tgt: org . junit . assert . assertequals ( ( sendcountbefore + 1 ) , com . kakao . hbase . common . util . alertsender . getsendcount ( ) )
[0]: org. junit. assert. assertequals ( 100, remaining )
[1]: org. junit. assert. assertequals ( 0, remaining )
[2]: org. junit. assert. assertequals ( 20, remaining )
[3]: org. junit. assert. assertequals ( 200, remaining )
[4]: org. junit. assert. assertequals ( 1, strategy. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( o1 , map . get ( oid2 ) )
[0]: org. junit. assert. asserttrue ( stack. issinglewindow ( caps ) )
[1]: org. junit. assert. asserttrue ( parser. issinglewindow ( caps ) )
[2]: org. junit. assert. asserttrue ( api. issinglewindow ( caps ) )
[3]: org. junit. assert. asserttrue ( jmxwindow ( caps ) )
[4]: org. junit. assert. asserttrue ( org. openqa. selenium. server. browserlaunchers. evictionwindow ( caps ) )

************

************
tgt: org . junit . assert . assertequals ( datestr_after , datestr )
[0]: org. junit. assert. assertarrayequals ( new byte [ ] { }, buffer )
[1]: org. junit. assert. assertequals ( 12, buffer. length )
[2]: org. junit. assert. assertequals ( 0, buffer. length )
[3]: , buffer )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( mikera. matrixx. matrix, m )
[1]: org. junit. assert. assertequals ( m, mikera. matrixx. matrix )
[2]: org. junit. assert. assertequals ( m, m )
[3]: org. junit. assert. assertnotnull ( m )
[4]: org. junit. assert. assertequals ( p, m )

************

************
tgt: org . junit . assert . assertequals ( record1 . fieldtype ( "map" ) , otype . linkmap )
[0]: org. junit. assert. asserttrue ( object. isempty ( ) )
[1]: org. junit. assert. assertnotnull ( actual )
[2]: org. junit. assert. assertnull ( actual )
[3]: org. junit. assert. assertequals ( s3keyprefix, actual )
[4]: org. junit. assert. assertnotnull ( actual. getmanifestfiles ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( org . apache . oozie . fluentjob . api . action . testfsactionbuilder . deletes ) , fsaction . getdeletes ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, result. getvalue ( null ), 0 )
[2]: org. junit. assert. assertequals ( 0, result. getvalue ( null ), 0l )
[3]: org. junit. assert. assertequals ( 0, ( ( java. lang. long ) ( result. getvalue ( null ) ) ) )
[4]: org. junit. assert. assertequals ( 0, result. getvalue ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( wrapper . getcount ( ) ) == 1 ) )
[0]: org. junit. assert. assertequals ( 0, result. getvalue ( null ), 0.0 )
[1]: org. junit. assert. assertequals ( n, ringsearch. cyclic ( i ) )
[2]: org. junit. assert. assertnotnull ( ringsearch. cyclic ( i ) )
[3]: org. junit. assert. assertequals ( sizeoffalsestrings [ i ], listoffalsestrings [ i ] )
[4]: org. junit. assert. assertequals ( ( sizeoffalsestrings [ i ] ), listoffalsestrings [ i ] )

************

************
tgt: org . junit . assert . assertequals ( "viewer" , this . mocker . getcomponentundertest ( ) . getlabel ( ) )
[0]: org. junit. assert. assertequals ( listofpermittedstrings [ i ], listoffalsestrings [ i ] )
[1]: org. junit. assert. assertarrayequals ( listofpermittedstrings [ i ], listoffalsestrings [ i ] )
[2]: org. junit. assert. assertequals ( ( sizeonlyalsestrings [ i ] ), listoffalsestrings [ i ] )
[3]: org. junit. assert. assertequals ( 1, mailcount )
[4]: org. junit. assert. assertnotnull ( file )

************

************
tgt: org . junit . assert . assertnull ( found )
[0]: org. junit. assert. assertnotnull ( filename )
[1]: org. junit. assert. assertnotnull ( disk )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnotnull ( descriptor. getdisplayname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( edu . columbia . cs . psl . test . phosphor . droidbenchimplicititcase . gettaint ( imei ) ) != 0 ) )
[0]: org. junit. assert. assertequals ( null, descriptor. getdisplayname ( ) )
[1]: org. junit. assert. assertequals ( 1, descriptor. getdisplayname ( ) )
[2]: org. junit. assert. assertnull ( descriptor. getdisplayname ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), res. getlist ( ) )

************

************
tgt: org . junit . assert . assertthat ( value , org . hamcrest . corematchers . equalto ( "dummy" ) )
[0]: org. junit. assert. assertnotnull ( res. getlist ( ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), res. getlist ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), res. getlist ( ) )
[3]: org. junit. assert. assertnotnull ( res )
[4]: org. junit. assert. assertequals ( 1, aslist ( queryrunnertesthelper. uniques. size ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( pattern , parent . getfieldentityidchangelisteners ( ) . get ( "testfield" ) )
[0]: org. junit. assert. assertequals ( 0, aslist ( queryrunnertesthelper. uniques. size ( ) ) )
[1]: org. junit. assert. assertequals ( 1, aslist ( queryrunnertesthelper. uniques_2 ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, aslist ( queryrunnertesthelper. uniques_2 ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, aslist ( queryrunnertesthelper. uniques_2 ). size ( ) )
[4]: org. junit. assert. assertthat ( result, is ( empty ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( nf , format . getwholeformat ( ) )
[0]: org. junit. assert. assertthat ( result, is ( list ( ) ) )
[1]: org. junit. assert. assertthat ( result, is ( 0 ) )
[2]: org. junit. assert. assertthat ( result, is ( null ) )
[3]: , result )
[4]: org. junit. assert. assertequals ( false, result )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertnotnull ( voidable. getvoidreason ( ) )
[1]: org. junit. assert. assertequals ( voidable, voidable. getvoidreason ( ) )
[2]: org. junit. assert. assertequals ( 1, voidable. getvoidreason ( ) )
[3]: ) )
[4]: 

************

************
tgt: org . junit . assert . assertnull ( operation . reload ( ) )
[0]: org. junit. assert. assertnotnull ( queryresults )
[1]: org. junit. assert. assertnotnull ( queryresultslist. size ( ) )
[2]: org. junit. assert. assertnotnull ( queryresults, queryresults )
[3]: org. junit. assert. assertnotnull ( queryresults. size ( ) )
[4]: org. junit. assert. assertnotnull ( queryresults. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( json , r . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, slabtime )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( pojotime ), slabtime )
[2]: org. junit. assert. assertequals ( com. insightfullogic. slab, pojotime )
[3]: org. junit. assert. assertequals ( ( pojotime + 1 ), slabtime )
[4]: org. junit. assert. assertequals ( pojotime, slabtime )

************

************
tgt: org . junit . assert . assertthat ( methods . size ( ) , org . hamcrest . corematchers . is ( 2 ) )
[0]: org. junit. assert. assertnull ( bs. get ( index ) )
[1]: org. junit. assert. assertequals ( 0, bs. get ( index ) )
[2]: org. junit. assert. assertequals ( plaintext, decryptedtext )
[3]: org. junit. assert. assertequals ( plain, decryptedtext )
[4]: org. junit. assert. assertnotnull ( decryptedtext )

************

************
tgt: org . junit . assert . assertequals ( decode , ( str + random ) )
[0]: , decryptedtext )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, matches ( org. kuali. rice. krad. data. provider. annotation. serializationcontext. all ) )
[3]: org. junit. assert. assertequals ( true, matches ( new org. kuali. rice. krad. data. provider. annotation. serializationcontext ( ) ) )
[4]: org. junit. assert. asserttrue ( matches ( org. kuali. rice. krad. data. provider. annotation. serializationcontext. values ( ) ) )

************

************
tgt: org . junit . assert . assertnotnull ( agent )
[0]: org. junit. assert. asserttrue ( matches ( java. lang. string. class. getname ( ) ) )
[1]: org. junit. assert. assertequals ( true, matches ( java. lang. string. class ) )
[2]: org. junit. assert. assertequals ( p. format ( new java. util. date ( ) ), p. format ( null ) )
[3]: org. junit. assert. assertequals ( p. format ( new java. util. arraylist ( ) ), p. format ( null ) )
[4]: org. junit. assert. assertequals ( p. format ( null ), p. format ( null ) )

************

************
tgt: org . junit . assert . assertequals ( sessionmanager , e . getsource ( ) )
[0]: org. junit. assert. assertequals ( p. format ( new java. util. arraylist < java. lang. string > ( ) ), p. format ( null ) )
[1]: org. junit. assert. assertequals ( p. format ( new java. util. arraylist ( ) ), p. format ( new java. util. arraylist ( ) ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( persoonsleutel, result )
[4]: org. junit. assert. assertequals ( 1, interceptor. materialized ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( indexupgrader . getmigratedindexes ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, interceptor. count )
[1]: org. junit. assert. assertequals ( 1, interceptor. aggregate ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, interceptor. getvertices ( ). size ( ) )
[3]: org. junit. assert. assertequals ( true, httprequestmapper. matches ( request, null ) )
[4]: org. junit. assert. assertequals ( true, httprequestmapper. matches ( null, httprequestmapper ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , cmp . compare ( d1 , d2 ) , 0.0 )
[0]: org. junit. assert. assertequals ( true, httprequestmapper. matches ( request, response ) )
[1]: org. junit. assert. asserttrue ( httprequestmapper. matches ( request, null ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( context )
[4]: org. junit. assert. assertnotnull ( s )

************

************
tgt: org . junit . assert . asserttrue ( ( ( allstates . size ( ) ) == 50 ) )
[0]: org. junit. assert. assertnotnull ( builder. parser )
[1]: org. junit. assert. assertnotnull ( builder. stream )
[2]: org. junit. assert. assertnotnull ( parser. stream )
[3]: org. junit. assert. assertequals ( 1, intcounter. decrementandget ( ) )
[4]: org. junit. assert. assertequals ( 0, description. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , res . size ( ) )
[0]: org. junit. assert. assertequals ( 1, description. isempty ( ) )
[1]: org. junit. assert. assertequals ( true, description. isempty ( ) )
[2]: org. junit. assert. assertequals ( false, description. isempty ( ) )
[3]: org. junit. assert. assertnotnull ( dao. get ( uow ) )
[4]: org. junit. assert. assertnotnull ( dao. get ( uow. getid ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( loop , false )
[0]: org. junit. assert. assertnull ( testsubject. get ( uow ) )
[1]: org. junit. assert. assertnull ( dao. get ( uow ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( deal. isaccepted ( ) )
[4]: org. junit. assert. assertequals ( car, deal. isaccepted ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new char [ ] { 4 , 15 , 12 , 8 , 18 } , array )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertfalse ( msg, false )
[2]: org. junit. assert. asserttrue ( msg, false )
[3]: org. junit. assert. asserttrue ( msg, gradok )
[4]: org. junit. assert. assertfalse ( msg, ( - refint ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertfalse ( result [ 0 ] )
[1]: org. junit. assert. assertnull ( result [ 0 ] )
[2]: org. junit. assert. assertnull ( result )
[3]: , result )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , books . size ( ) )
[0]: org. junit. assert. assertthat ( profile. getmaxprocesses ( ), is ( 1 ) )
[1]: org. junit. assert. assertthat ( profile. getmaxprocesses ( ), is ( 1l ) )
[2]: org. junit. assert. assertthat ( profile. getmaxprocesses ( ), is ( 0 ) )
[3]: org. junit. assert. assertthat ( profile. getmaxprocesses ( ), is ( p ) )
[4]: org. junit. assert. assertthat ( profile. getmaxprocesses ( ), is ( 1l ) )

************

************
tgt: org . junit . assert . assertfalse ( all . isempty ( ) )
[0]: org. junit. assert. asserttrue ( s. issubtree ( a, b ) )
[1]: org. junit. assert. asserttrue ( a. issubtree ( a, b ) )
[2]: org. junit. assert. asserttrue ( tree. issubtree ( a, b ) )
[3]: org. junit. assert. asserttrue ( reversetree ( a, b ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , ksession . fireallrules ( ) )
[0]: org. junit. assert. assertequals ( 1, messagefragments. length )
[1]: org. junit. assert. assertequals ( 0, messagefragments. length )
[2]: org. junit. assert. assertequals ( 2, messagefragments. length )
[3]: org. junit. assert. assertnotnull ( messagefragments )
[4]: org. junit. assert. assertequals ( 1, messagefragments )

************

************
tgt: org . junit . assert . assertequals ( "step1" , failedtask . getname ( ) )
[0]: org. junit. assert. asserttrue ( query. isreturningirt ( ) )
[1]: org. junit. assert. assertequals ( 1, ft. size ( ) )
[2]: org. junit. assert. assertequals ( 1, ft. count ( ) )
[3]: org. junit. assert. assertequals ( 0, ft. size ( ) )
[4]: org. junit. assert. assertequals ( 0, ft. count ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , constraintviolations . size ( ) )
[0]: org. junit. assert. assertequals ( 1, ft. s )
[1]: org. junit. assert. assertequals ( lastone, p )
[2]: org. junit. assert. assertequals ( p, lastone )
[3]: org. junit. assert. assertnotnull ( p )
[4]: org. junit. assert. assertequals ( firstone, p )

************

************
tgt: org . junit . assert . assertequals ( 0 , emptystream . count ( ) )
[0]: org. junit. assert. assertequals ( person, p )
[1]: org. junit. assert. asserttrue ( result )
[2]: org. junit. assert. assertfalse ( result )
[3]: org. junit. assert. assertequals ( true, result )
[4]: org. junit. assert. assertthat ( result )

************

************
tgt: org . junit . assert . asserttrue ( model . getinheritconverter ( ) )
[0]: org. junit. assert. assertthat ( result, org )
[1]: org. junit. assert. asserttrue ( datawave. query. jexl. functions. contentfunctionstest. expect ( o, true ) )
[2]: org. junit. assert. assertequals ( 1, response. getsmil ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, response. getsmil ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( response. getsmil ( ) )

************

************
tgt: org . junit . assert . assertequals ( "v1" , cache . get ( "k1" ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( smil, smil ), response )
[1]: type ) )
[2]: org. junit. assert. assertarrayequals ( expected, da )
[3]: org. junit. assert. assertarrayequals ( expected, da, 0 )
[4]: org. junit. assert. assertarrayequals ( expected, da, 0.0 )

************

************
tgt: org . junit . assert . assertequals ( org . apache . rya . api . function . temporal . beforetemporalfunctionstest . vf . createliteral ( false ) , rez )
[0]: org. junit. assert. assertarrayequals ( expected, da, 1.0 )
[1]: org. junit. assert. assertarrayequals ( expected, da, 1 )
[2]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( equalto ( expected ) ) )
[3]: org. junit. assert. assertthat ( expected, org. hamcrest. corematchers. is ( actual ) )
[4]: org. junit. assert. assertthat ( actual, is ( equalto ( expected ) ) )

************

************
tgt: org . junit . assert . assertthat ( jsonrepresentation . size ( ) , org . hamcrest . corematchers . is ( 2 ) )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: ) )
[2]: org. junit. assert. assertequals ( result, null )
[3]: org. junit. assert. assertequals ( result, consumercurator )
[4]: org. junit. assert. assertequals ( result, this. consumer )

************

************
tgt: org . junit . assert . assertequals ( expectedflow , actualflow )
[0]: org. junit. assert. assertequals ( result, consumer )
[1]: org. junit. assert. assertequals ( result, this. context )
[2]: org. junit. assert. assertequals ( 1, files. length )
[3]: org. junit. assert. assertequals ( 0, files. length )
[4]: org. junit. assert. assertnotnull ( files )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( 3, files. length )
[1]: )
[2]: org. junit. assert. assertequals ( 0, ex. getmax ( 1, 1 ) )
[3]: org. junit. assert. assertequals ( 0, ex. getmax ( 1, ( - 1 ) ) )
[4]: org. junit. assert. assertequals ( 1, ex. getmax ( 1, 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( meta )
[0]: org. junit. assert. assertequals ( 4, ex. getmax ( 1, ( - 1 ) ) )
[1]: org. junit. assert. assertequals ( ( - 1 ), ex. getmax ( 1, 1 ) )
[2]: org. junit. assert. assertequals ( interfacenames. tostring ( ), 1, interfacenames. size ( ) )
[3]: org. junit. assert. assertequals ( interfacenames. tostring ( ), 3, interfacenames. size ( ) )
[4]: org. junit. assert. assertequals ( expectedmesage, exceptioncaptor. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( annotation . getresource ( ) , result . getresource ( ) )
[0]: org. junit. assert. assertequals ( expectedmesage, exceptionscaptor. getvalue ( ) )
[1]: org. junit. assert. assertequals ( expectedmesage, exceptioncaptor. getvalue )
[2]: org. junit. assert. assertequals ( bulk, exceptioncaptor. getvalue ( ) )
[3]: org. junit. assert. assertequals ( expectedmesage, exceptioncaptor. getvalueelement )
[4]: org. junit. assert. assertequals ( 0, bc. ixor ( bc3 ). getcardinality ( ) )

************

************
tgt: org . junit . assert . assertequals ( elements . get ( i ) , expectedchildfirst . get ( i ) )
[0]: org. junit. assert. assertequals ( 0, bc. ixor ( bc2 ). getcardinality ( ) )
[1]: org. junit. assert. assertnotnull ( bc. ixor ( bc3 ). getcardinality ( ) )
[2]: org. junit. assert. assertnotnull ( bc )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( error )

************

************
tgt: org . junit . assert . assertequals ( com . cloud . server . statscollectortest . influxdb_default_port , port )
[0]: org. junit. assert.null ( error )
[1]: , error )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertfalse ( result )

************

************
tgt: org . junit . assert . assertfalse ( buildconfiguration . isskipped ( ) )
[0]: org. junit. assert. assertthat ( cl. isempty ( ), is ( true ) )
[1]: org. junit. assert. assertthat ( cl, org. isempty ( ) )
[2]: org. junit. assert. assertthat ( cl, isempty ( ) )
[3]: org. junit. assert. assertthat ( cl. isempty ( ), is ( false ) )
[4]: org. junit. assert. asserttrue ( cl. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , regions . size ( ) )
[0]: org. junit. assert. assertequals ( 1, signature. getprofile ( ) )
[1]: org. junit. assert. assertequals ( 1, signature. getprofile ( ). length )
[2]: org. junit. assert. assertequals ( 1l, signature. getprofile ( ) )
[3]: org. junit. assert. assertequals ( 0, signature. getprofile ( ) )
[4]: org. junit. assert. assertnotnull ( signature. getprofile ( ) )

************

************
tgt: org . junit . assert . assertsame ( microserviceversionrule , microserviceversions . getorcreatemicroserviceversionrule ( "1.0.0" ) )
[0]: org. junit. assert. assertequals ( 1, rec. size ( ) )
[1]: org. junit. assert. assertequals ( numbuffers, segment )
[2]: org. junit. assert. assertequals ( numbuffers, segment. count )
[3]: org. junit. assert. assertequals ( numbuffers, segment. context )
[4]: org. junit. assert. assertequals ( numbuffers )

************

************
tgt: org . junit . assert . assertequals ( "book" , text )
[0]: org. junit. assert. assertequals ( 1, truecount )
[1]: org. junit. assert. assertequals ( 0, truecount )
[2]: org. junit. assert. assertequals ( 3, truecount )
[3]: org. junit. assert. assertequals ( 2, truecount )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( finished )
[0]: org. junit. assert. assertequals ( javax. servlet. http. httpservletresponse. sc_internal_server_error, exceptionreport. gethttpstatuscode ( ) )
[1]: org. junit. assert. assertthat ( exceptionreport. gethttpstatuscode ( ), org. hamcrest. matchers. is ( httpservletresponse. sc_internal_server_error ) )
[2]: org. junit. assert. assertequals ( getexpectedstatuscode ( ), exceptionreport. gethttpstatuscode ( ) )
[3]: org. junit. assert. asserttrue ( ( ( exceptionreport. gethttpstatuscode ( ) ) == ( javax. servlet. http. httpservletresponse. sc_internal_request ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( matchingartifacts . isempty ( ) , org . hamcrest . matchers . is ( false ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( moves, result. size ( ) )
[2]: org. junit. assert. assertequals ( 0, result. size ( ) )
[3]: org. junit. assert. assertequals ( move, result. size ( ) )
[4]: org. junit. assert. assertequals ( result. size ( ), moves )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( expected, e. evaluate ( ), 0.0 )
[1]: org. junit. assert. assertequals ( expected, e. evaluate ( ) )
[2]: org. junit. assert. assertequals ( expected, e. evaluates ( ), 0.0 )
[3]: org. junit. assert. assertequals ( expected, e. evaluate ( ), 1.0 )
[4]: org. junit. assert. asserttrue ( ( expected == ( e. evaluate ( ) ) )

************

************
tgt: org . junit . assert . assertnull ( container )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertnotnull ( context )
[2]: org. junit. assert. assertnotnull ( collection. union ( ) )
[3]: org. junit. assert. assertnotnull ( s. collection ( ) )
[4]: org. junit. assert. assertnotnull ( this. context )

************

************
tgt: org . junit . assert . assertnotnull ( lock )
[0]: org. junit. assert. assertequals ( null, result. getname ( ) )
[1]: org. junit. assert. assertequals ( """", result. getname ( ) )
[2]: org. junit. assert. assertequals ( ""foo"", result. getname ( ) )
[3]: org. junit. assert. assertequals ( ""test"", result. getname ( ) )
[4]: . getname ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertnotnull ( vxpuseract )
[1]: org. junit. assert. assertequals ( vxpuserexp, vxpuseract )
[2]: org. junit. assert. assertnotnull ( vxpuserexp )
[3]: org. junit. assert. assertnotnull ( stringresponse )
[4]: org. junit. assert. assertequals ( dto, stringresponse )

************

************
tgt: org . junit . assert . asserttrue ( ix . verify ( new org . cojen . tupl . verificationobserver ( ) ) )
[0]: org. junit. assert. assertnull ( stringresponse )
[1]: org. junit. assert. assertequals ( null, stringresponse )
[2]: org. junit. assert. assertequals ( 1, stringresponse )
[3]: org. junit. assert. assertarrayequals ( expectedemptytopics [ topic ], localtopiccontroller. getemptytopics ( ) )
[4]: org. junit. assert. assertarrayequals ( expectedemptytopics [ topic ], localtopics. getemptytopics ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , component . getautocomplete ( ) )
[0]: org. junit. assert. assertarrayequals ( expectedemptytopics, topic. getemptytopics ( ) )
[1]: org. junit. assert. assertarrayequals ( expectedemptytopics [ topic ], localtopiccounts [ topic ] )
[2]: org. junit. assert. assertarrayequals ( expectedemptytopics [ topic ], localtopiccount. getemptytopics ( ) )
[3]: org. junit. assert. assertnotnull ( cid )
[4]: org. junit. assert. assertnotnull ( cid, cid )

************

************
tgt: org . junit . assert . assertequals ( true , out . firstelement ( ) . get ( ) )
[0]: org. junit. assert. assertequals ( cid, cid )
[1]: org. junit. assert. assertequals ( """", cid )
[2]: org. junit. assert. assertequals ( """", cid )
[3]: org. junit. assert. assertequals ( 1, element. getelements ( ). size ( ) )
[4]: org. junit. assert. assertequals ( subelement, element. getelements ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( element. getelements ( ) )
[1]: org. junit. assert. assertequals ( subelement, element. getelements ( ). iterator ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( gallerydtolist. get ( 2 ) )
[4]: org. junit. assert. assertnotnull ( gallerydtolist. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( mod , mod . add ( org . apache . jackrabbit . oak . spi . security . privilege . privilegebitstest . read_nodes_privilege_bits ) )
[0]: org. junit. assert. assertnotnull ( gallerydtolist )
[1]: org. junit. assert. assertnotnull ( gallerydtolist. get ( 0 ) )
[2]: org. junit. assert. assertnotnull ( gallerydtolist. get ( 3 ) )
[3]: org. junit. assert. assertequals ( 1, tools. size ( ) )
[4]: org. junit. assert. assertnotnull ( tools )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 0, tools. size ( ) )
[1]: org. junit. assert. asserttrue ( tools. isempty ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( loops, parent. getallocatedmemory ( ) )
[4]: org. junit. assert. assertequals ( loops, container. getallocatedmemory ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new org . eclipse . swt . widgets . tableitem [ ] { item2 , item1 } , table . getselection ( ) )
[0]: org. junit. assert. assertequals ( loop, parent. getallocatedmemory ( ) )
[1]: org. junit. assert. assertequals ( loops, com. getallocatedmemory ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( null, settings. getbackend ( ) )
[4]: org. junit. assert. assertequals ( org. junit. assert. assertequals ( null, settings. getbackend ( ) )

************

************
tgt: org . junit . assert . asserttrue ( executor . shouldexecute ( action , javax . faces . event . phaseid . restore_view , false ) )
[0]: org. junit. assert. assertnotnull ( settings. getbackend ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 1, configs. length )
[4]: org. junit. assert. assertequals ( 0, configs. length )

************

************
tgt: org . junit . assert . assertequals ( 0 , app . executeapplication ( args ) )
[0]: org. junit. assert. asserttrue ( ( ( configs. length ) == 1 ) )
[1]: org. junit. assert. assertequals ( 1, configs. length, 0 )
[2]: org. junit. assert. assertnotnull ( configs )
[3]: org. junit. assert. assertequals ( bucketinfo. getname ( ), bucketinfo. getname ( ) )
[4]: org. junit. assert. assertnotnull ( bucketinfo. getname ( ) )

************

************
tgt: org . junit . assert . assertthat ( target . parse ( ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( bucketinfo. getname ( ), bucketinfo. tostring ( ) )
[1]: org. junit. assert. assertequals ( null, bucketinfo. getname ( ) )
[2]: org. junit. assert. assertequals ( bucketinfo. getname ( ), bucketinfo. getid ( ) )
[3]: org. junit. assert. assertequals ( errortext, errortext )
[4]: org. junit. assert. assertnull ( errortext )

************

************
tgt: org . junit . assert . assertequals ( 10 , median )
[0]: org. junit. assert. assertnotnull ( errortext )
[1]: org. junit. assert. assertequals ( errortext, errorortext )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, bfdport. findall ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, org. openkilda. persistence. repositories. impl. neo4jbportrepositorytest. repository. findall ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( o , expectedvalues . get ( i ) . get ( j ) )
[0]: org. junit. assert. assertequals ( 0, org. openkilda. persistence. repositories. impl. neo4jbstrepositorytest. repository. findall ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, org. openkilda. persistence. repositories. impl. neo4jbportrepositorytest. repository. findall ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, bfdport. findall ( ). size ( ) )
[3]: org. junit. assert. assertequals ( false, iter. hasnext ( ) )
[4]: org. junit. assert. assertequals ( true, iter. hasnext ( ) )

************

************
tgt: org . junit . assert . assertequals ( view , presenter . getview ( ) )
[0]: org. junit. assert. assertfalse ( valid )
[1]: org. junit. assert. assertnull ( valid )
[2]: org. junit. assert. assertfalse ( validity )
[3]: org. junit. assert. assertfalse ( validate )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( db , config . db ( ) )
[0]: org. junit. assert. assertsame ( custom, container. getgap ( ) )
[1]: org. junit. assert. assertequals ( custom, container. getgap ( ) )
[2]: org. junit. assert. assertnotnull ( custom. getgap ( ) )
[3]: org. junit. assert. assertnull ( custom. getgap ( ) )
[4]: org. junit. assert. assertnull ( container. getgap ( ) )

************

************
tgt: org . junit . assert . assertequals ( cz . seznam . euphoria . spark . kryo . singletonserializertest . testsingleton . getinstance ( ) , deserialized )
[0]: org. junit. assert. assertequals ( 1, ibset. length ( ) )
[1]: org. junit. assert. assertequals ( 0, ibset. length ( ) )
[2]: org. junit. assert. assertequals ( 3, ibset. length ( ) )
[3]: org. junit. assert. assertequals ( 2, ibset. length ( ) )
[4]: org. junit. assert. assertequals ( length, ibset. length ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( response != null ) )
[0]: org. junit. assert. assertequals ( billingendperiod, givenendperiod )
[1]: org. junit. assert. assertequals ( 0, billingendperiod )
[2]: org. junit. assert. assertequals ( billingendperiod, 0 )
[3]: org. junit. assert. assertequals ( 1, billingendperiod )
[4]: org. junit. assert. assertequals ( billingendperiod, expectedendperiod )

************

************
tgt: org . junit . assert . assertequals ( builder1 . hashcode ( ) , builder2 . hashcode ( ) )
[0]: org. junit. assert. assertequals ( s, ctx. getargument ( java. lang. string. class ) )
[1]: org. junit. assert. assertequals ( s, ctx. getargument ( person. class ) )
[2]: org. junit. assert. assertequals ( s, ctx. getargument ( class ) )
[3]: org. junit. assert. assertequals ( s, ctx. getargument ( getclass ( ) ) )
[4]: org. junit. assert. assertequals ( s, ctx. getargument ( java. lang. object. class ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , query . getcriterions ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( value, object. getvalue ( fieldname ) )
[1]: org. junit. assert. assertequals ( value, ( ( java. lang. string ) ( object. getvalue ( fieldname ) ) ) )
[2]: org. junit. assert. assertequals ( value, ( ( java. lang. object ) ( object. getvalue ( fieldname ) ) ) )
[3]: org. junit. assert. assertnotnull ( org. eclipse. kapua. commons. util. kapuadateutils. formatdate ( permitteddate ) )
[4]: org. junit. assert. assertnull ( org. eclipse. kapua. commons. util. kapuadateutils. formatdate ( permitteddate ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( array1 , array2 ) )
[0]: org. junit. assert. assertequals ( null, org. eclipse. kapua. commons. util. kapuadateutils. formatdate ( permitteddate ) )
[1]: org. junit. assert. assertnotnull ( org. eclipse. kapua. commons. util. kapuadateutils. formatdate ( falsedate ) )
[2]: ) )
[3]: org. junit. assert. assertnull ( value )
[4]: org. junit. assert. assertequals ( getdocumentstream ( ). getvalue ( ), value )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( getdocumentstream ( ), value )
[1]: org. junit. assert. assertequals ( getdocumentstream ( ). name ( ), value )
[2]: org. junit. assert. assertequals ( getdocumentstream ( ). getmessage ( ), value )
[3]: org. junit. assert. assertnull ( verifier )
[4]: org. junit. assert. assertnotnull ( cert )

************

************
tgt: org . junit . assert . asserttrue ( m1 . equals ( m2 ) )
[0]: org. junit. assert. assertnull ( cert )
[1]: org. junit. assert. assertnotnull ( verifier )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnotnull ( props. getreplyto ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertnull ( props. getreplyto ( ) )
[1]: org. junit. assert. assertequals ( 1, props. getreplyto ( ) )
[2]: test fixture for
[3]: ) )
[4]: org. junit. assert. assertequals ( expecting, a. render ( 1 ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . core . is . is ( token ) )
[0]: org. junit. assert. assertequals ( expecting, a. render ( 0 ) )
[1]: org. junit. assert. assertequals ( expecting, a. render ( 3 ) )
[2]: org. junit. assert. assertequals ( expecting, a. render ( 2 ) )
[3]: org. junit. assert. assertequals ( complex. nan, complex. sin ( ). isnan ( ) )
[4]: org. junit. assert. assertequals ( complex. nan, complex. sin ( ) )

************

************
tgt: org . junit . assert . asserttrue ( cell . isselectable ( ) )
[0]: org. junit. assert. assertequals ( complex. nan, s. sin ( ) )
[1]: org. junit. assert. assertnotnull ( myteamleader )
[2]: org. junit. assert. assertequals ( null, myteamleader )
[3]: org. junit. assert. assertequals ( new java. lang. string ( myteamleader ), myteamleader )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( historylevel . getname ( ) , determinehistorylevel )
[0]: )
[1]: org. junit. assert. assertequals ( item, manageditem. getdienstbundel ( ) )
[2]: org. junit. assert. assertequals ( item. getdienstbundel ( ), manageditem )
[3]: org. junit. assert. assertequals ( item. getdienstbundel ( ). size ( ), 1 )
[4]: org. junit. assert. assertequals ( item. getdienstbundel ( ). size ( ), 4 )

************

************
tgt: org . junit . assert . assertequals ( d1 , d2 )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( header. getmajorversion ( ) )
[2]: org. junit. assert. assertnotnull ( header )
[3]: org. junit. assert. assertnull ( header. getmajorversion ( ) )
[4]: org. junit. assert. assertnull ( header )

************

************
tgt: org . junit . assert . assertnull ( stream . getwriter ( ) )
[0]: org. junit. assert. assertnotnull ( header. getmajorversion )
[1]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) == 3 ) )
[2]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) == 1 ) )
[3]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) == 5 ) )
[4]: org. junit. assert. assertequals ( 3, list. size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , actual )
[0]: org. junit. assert. assertequals ( p. getplayers ( ). get ( i ), players [ i ] )
[1]: org. junit. assert. assertequals ( p. getplayers ( ) [ i ], players [ i ] )
[2]: org. junit. assert. assertequals ( p. getplayers ( ), players [ i ] )
[3]: org. junit. assert. assertequals ( p, bs. getplayers ( ). get ( i ) )
[4]: org. junit. assert. assertequals ( p. getplayers ( ), players [ i ]. read ( ) )

************

************
tgt: org . junit . assert . assertnull ( err )
[0]: org. junit. assert. assertequals ( expectedv10match, emptyv10match. build ( ) )
[1]: org. junit. assert. assertequals ( expectedv10match, emptyv10match. build ( ). tostring ( ) )
[2]: org. junit. assert. assertequals ( expectedv10match, emptyv10match. build ( ). collect ( ) )
[3]: org. junit. assert. assertequals ( expectedv10match, emptyv10match. build ( ). union ( ) )
[4]: org. junit. assert. assertequals ( expectedv10match, emptyv10match. build ( ). get ( ) )

************

************
tgt: org . junit . assert . assertthat ( playerofgivencountry , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( ii, iimgr. getii ( 0 ) )
[1]: org. junit. assert. assertequals ( ii, iimgr. getii ( 1 ) )
[2]: org. junit. assert. assertequals ( ii, iimgr. getii ( ""a"" ) )
[3]: org. junit. assert. assertequals ( ii, iimgr. getii ( null ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( count , expectedcount )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( taxon ), taxa )
[1]: org. junit. assert. assertequals ( 1, taxoncacheservice. gettaxoncacheservice ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, taxoncacheservice. gettaxoncacheservice ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( taxon, taxon ), taxa )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , configuration . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), contentoffile )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4 ), contentoffile )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 4, 5, 6 ), contentoffile )
[3]: org. junit. assert. assertnotnull ( contentoffile )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( java . lang . integer . valueof ( value ) ) >= 0 ) )
[0]: org. junit. assert. assertequals ( 1, args. length )
[1]: org. junit. assert. assertnotnull ( args )
[2]: org. junit. assert. assertequals ( 1, arguments. length )
[3]: org. junit. assert. assertequals ( 1, targets. length )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( testtitle , song . getname ( ) )
[0]: org. junit. assert. asserttrue ( val. isempty ( ) )
[1]: org. junit. assert. asserttrue ( input. isempty ( ) )
[2]: org. junit. assert. asserttrue ( val. tostring ( ), val. isempty ( ) )
[3]: org. junit. assert. asserttrue ( result. isempty ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( org . phenotips . data . internal . controller . lifestatuscontrollertest . deceased , json . get ( org . phenotips . data . internal . controller . lifestatuscontrollertest . data_name ) )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertnotnull ( context )
[2]: org. junit. assert. assertnotnull ( collection )
[3]: org. junit. assert. assertequals ( 0, 1 )
[4]: org. junit. assert. assertequals ( 0, result. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( missinguser )
[0]: org. junit. assert. assertequals ( str, result )
[1]: org. junit. assert. assertequals ( string, result )
[2]: org. junit. assert. assertequals ( true, repository. exists ( ) )
[3]: org. junit. assert. assertequals ( false, repository. exists ( ) )
[4]: org. junit. assert. assertequals ( 1, repository. exists ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , sources . size ( ) )
[0]: org. junit. assert. assertequals ( true, user. exists ( ) )
[1]: org. junit. assert. asserttrue ( repository. exists ( ) )
[2]: org. junit. assert. assertnotnull ( notrequiredretired. collect ( requiredretired2a ) )
[3]: org. junit. assert. assertnotnull ( notrequiredretired. collect ( list ) )
[4]: org. junit. assert. assertnotnull ( notrequiredretired. collect ( requiredretired1a ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( md . getdocument ( ) ) == null ) )
[0]: org. junit. assert. assertnotnull ( notrequiredretired )
[1]: org. junit. assert. assertnotnull ( notrequiredretired. s )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertnotnull ( t )
[4]: org. junit. assert. assertnull ( t )

************

************
tgt: org . junit . assert . assertequals ( null , registry . getsamplevalue ( "invalid_gauge" ) )
[0]: org. junit. assert. assertsame ( t, this. t )
[1]: org. junit. assert. assertsame ( t )
[2]: , t )
[3]: org. junit. assert. assertequals ( true, complies )
[4]: org. junit. assert. assertequals ( false, complies )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertfalse ( complies )
[1]: org. junit. assert. assertequals ( 1, complies )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( 10 ), value )
[3]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), value )
[4]: org. junit. assert. assertequals ( new java. lang. integer ( 0 ), value )

************

************
tgt: org . junit . assert . asserttrue ( meta . supportserrorhandling ( ) )
[0]: org. junit. assert. assertequals ( new java. lang. integer ( 5 ), value )
[1]: org. junit. assert. assertnotnull ( value )
[2]: org. junit. assert. assertnotnull ( e )
[3]: org. junit. assert. assertnull ( e )
[4]: org. junit. assert. assertnotnull ( exception )

************

************
tgt: org . junit . assert . assertfalse ( sourcegroups . containsgroup ( "video" , ridsimgroup ) )
[0]: org. junit. assert. assertnotnull ( e. getmessage )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( composite )
[3]: org. junit. assert. assertequals ( composite, monitor )
[4]: org. junit. assert. assertequals ( composite, null )

************

************
tgt: org . junit . assert . assertequals ( true , result )
[0]: org. junit. assert. assertnull ( composite )
[1]: type ) )
[2]: org. junit. assert. assertnotnull ( repo. generateid ( ) )
[3]: org. junit. assert. assertnotnull ( repo )
[4]: org. junit. assert. assertnull ( repo. generateid ( ) )

************

************
tgt: org . junit . assert . assertequals ( emptylist ( ) , styles )
[0]: org. junit. assert. assertequals ( repo, repo. generateid ( ) )
[1]: org. junit. assert. assertnotnull ( repo, repo. generateid ( ) )
[2]: org. junit. assert. assertfalse ( datachanged )
[3]: org. junit. assert. assertequals ( true, datachanged )
[4]: org. junit. assert. assertequals ( 1, ( initialorganizationuserscount + initialorganizationuserscount ) )

************

************
tgt: org . junit . assert . assertequals ( collectors , copy . getappcollectors ( ) )
[0]: org. junit. assert. assertequals ( 1, ( initialorganizationuserscount + 1 ) )
[1]: org. junit. assert. assertequals ( 1, ( initialorganizationuserscount + ( requiredorganizationids [ 0 ] ) ) )
[2]: org. junit. assert. assertequals ( 1, ( initialorganizationuserscount + ( requiredorganizationid [ 0 ] ) ) )
[3]: org. junit. assert. assertequals ( 1, ( initialorganizationuserscount + ( requiredorganizationids [ 0 ]. length ) ) )
[4]: org. junit. assert. assertequals ( number, ( ( int ) ( randomutil. nextint ( number ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( targets , servicetrackermap . keyset ( ) )
[0]: org. junit. assert. assertequals ( number, ( ( long ) ( randomutil. nextint ( number ) ) ) )
[1]: org. junit. assert. assertequals ( number, randomutil. nextint ( number ) )
[2]: org. junit. assert. assertequals ( number, 1 )
[3]: ) )
[4]: org. junit. assert. assertthat ( listener. getpartitionspecfilter ( ), org. hamcrest. corematchers. is ( com. hotels. bdp. circustrain. comparator. listener. partitionspeccreatingdifflistenertest. db ) )

************

************
tgt: org . junit . assert . assertequals ( io . motown . ocpp . v15 . soap . chargepoint . schema . io . motown . domain . api . chargingstation . reservationstatus , reservationstatus )
[0]: org. junit. assert. assertthat ( handler. getpartitionspecfilter ( ), org. hamcrest. corematchers. is ( com. hotels. bdp. circustrain. comparator. listener. partitionspeccreatingdifflistenertest. db ) )
[1]: org. junit. assert. assertthat ( logger. getpartitionspecfilter ( ), org. hamcrest. corematchers. is ( com. hotels. bdp. circustrain. comparator. listener. partitionspeccreatingdifflistenertest. db ) )
[2]: org. junit. assert. assertthat ( listener. getpartitionspecfilter ( ). size ( ), org. hamcrest. corematchers. is ( 1 ) )
[3]: org. junit. assert. assertthat ( listener. getpartitionspecfilter ( ), org. hamcrest. corematchers. is ( com. hotels. bdp. circustrain. comparator. listener. partitionspeccreateddifflistenertest. db ) )
[4]: org. junit. assert. assertnotnull ( mark1 )

************

************
tgt: org . junit . assert . assertequals ( com . conveyal . r5 . otp2 . rangeraptor . transit . tripscheduleexactmatchsearchtest . trip_time , subject . getcandidatetriptime ( ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( string, result )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , visitor . getids ( ) )
[0]: org. junit. assert. assertequals ( crs, g. getuserdata ( ) )
[1]: org. junit. assert. assertnull ( g. getuserdata ( ) )
[2]: org. junit. assert. assertequals ( crs. getuserdata ( ), g )
[3]: org. junit. assert. assertnotnull ( g. getuserdata ( ) )
[4]: org. junit. assert. assertequals ( crs, g )

************

************
tgt: org . junit . assert . assertequals ( architecture . x86_64 , org . adoptopenjdk . jitwatch . model . assembly . architecture . parsefromlogline ( testx86_64 ) )
[0]: org. junit. assert. assertequals ( n, buf1 [ n ] )
[1]: org. junit. assert. assertequals ( n, buf1. length )
[2]: org. junit. assert. assertarrayequals ( buf1, buf2 )
[3]: org. junit. assert. assertequals ( buf1 [ n ], buf2 [ n ] )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( viewmap )
[0]: org. junit. assert. assertequals ( org. eclipse. collections. impl. string. immutable. codepointadaptertest. unicode_string, sequence )
[1]: org. junit. assert. assertequals ( org. eclipse. collections. impl. string. immutable. codepointadaptertest )
[2]: org. junit. assert. assertnotnull ( sequence )
[3]: org. junit. assert. assertnull ( sequence )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( java . lang . boolean ) ( transformed ) ) )
[0]: org. junit. assert. assertnotnull ( entry. formatname ( ) )
[1]: org. junit. assert. assertequals ( entry. getvalue ( ), entry. getkey ( ) )
[2]: org. junit. assert. assertnotnull ( entry. getkey ( ) )
[3]: org. junit. assert. assertnotnull ( entry. getvalue ( ). formatname ( ) )
[4]: org. junit. assert. assertequals ( entry. getkey ( ), entry. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( "a" , orgname )
[0]: org. junit. assert. assertequals ( si1, siretrieved. gettkey ( ) )
[1]: org. junit. assert. assertnotnull ( siretrieved )
[2]: org. junit. assert. assertnotnull ( siretrieved. gettkey ( ) )
[3]: org. junit. assert. assertequals ( si1. gettkey ( ), siretrieved )
[4]: org. junit. assert. assertequals ( si1, siretrieved )

************

************
tgt: org . junit . assert . assertthat ( testvalues , org . hamcrest . corematchers . is ( expectedvalues ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( result, validator )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertnull ( result )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( edge . ischildrelation ( ) )
[0]: org. junit. assert. assertnotnull ( resourcestream )
[1]: org. junit. assert. assertequals ( 1, resourcestream. size ( ) )
[2]: org. junit. assert. assertequals ( 1, resourcestream. length )
[3]: org. junit. assert. assertarrayequals ( resourcefilecontent, resourcestream )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( null , result )
[0]: org. junit. assert. assertequals ( 2, truststore. size ( ) )
[1]: org. junit. assert. assertequals ( 1, truststore. size ( ) )
[2]: org. junit. assert. assertequals ( k, renderkeyswapmatrix ( ka ) )
[3]: org. junit. assert. assertequals ( s, renderkeyswapmatrix ( ka ) )
[4]: org. junit. assert. assertequals ( k. renderkeyswapmatrix ( ka ), n )

************

************
tgt: org . junit . assert . asserttrue ( step . init ( metamock , datamock ) )
[0]: org. junit. assert. assertequals ( k. renderkeyswapmatrix ( ka ), ka. tostring ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( ae, exceptionthrown )
[3]: org. junit. assert. assertnotnull ( exceptionthrown )
[4]: org. junit. assert. assertequals ( ae, exceptionsthrown )

************

************
tgt: org . junit . assert . assertnotnull ( e . getmessage ( ) )
[0]: org. junit. assert. assertequals ( ae, e )
[1]: org. junit. assert. assertnotnull ( e )
[2]: org. junit. assert. assertequals ( expectedcounters, actualcounters )
[3]: org. junit. assert. assertequals ( expected rxjava, actualcounters )
[4]: org. junit. assert. assertequals ( expectedstatus, actualcounters )

************

************
tgt: org . junit . assert . assertfalse ( event . iscanceled ( ) )
[0]: org. junit. assert. assertequals ( expected30, actualcounters )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( url1 )
[3]: org. junit. assert. assertnotnull ( url1. parse ( url1. serialize ( ) ) )
[4]: org. junit. assert. assertnotnull ( com. deepsky. database. ora. dburlutil. parse ( url1 ) )

************

************
tgt: org . junit . assert . assertequals ( alluxio . master . block . blockidtest . max_sequence_number , alluxio . master . block . blockid . getmaxsequencenumber ( ) )
[0]: org. junit. assert. assertnotnull ( url1. parse ( string_1 ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( user )
[3]: org. junit. assert. assertequals ( true, result )
[4]: org. junit. assert. assertfalse ( result )

************

************
tgt: org . junit . assert . assertequals ( "job/i/" , result )
[0]: org. junit. assert. asserttrue ( result )
[1]: org. junit. assert. assertequals ( false, result )
[2]: org. junit. assert. assertequals ( str, result )
[3]: org. junit. assert. assertequals ( true, result )
[4]: org. junit. assert. assertequals ( false, result )

************

************
tgt: org . junit . assert . assertnull ( mapsubsetfilter . filter ( null ) )
[0]: org. junit. assert. assertfalse ( result )
[1]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_sunldap_defaultconfigtest. servlet. getrealm ( ) )
[2]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_sunldap_defaultconfigtest. servlet )
[3]: org. junit. assert. assertnull ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_sunldap_defaultconfigtest. servlet. getrealm ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . tostring ( row ) , java . util . arrays . tostring ( result ) )
[0]: )
[1]: org. junit. assert. assertequals ( 1, list. size ( ) )
[2]: org. junit. assert. assertequals ( 0, list. size ( ) )
[3]: org. junit. assert. assertequals ( 1, ( ( list. size ( ) ) == 3 ) )
[4]: org. junit. assert. assertequals ( 1, ( ( list. size ( ) ) + 1 ) )

************

************
tgt: org . junit . assert . assertequals ( foo , entry . getvalue ( ) )
[0]: org. junit. assert. assertequals ( 1, ( ( list. size ( ) ) - 1 ) )
[1]: org. junit. assert. assertsame ( object, object. add ( true ) )
[2]: org. junit. assert. asserttrue ( cclass. existsproperty ( ""test"" ) )
[3]: org. junit. assert. asserttrue ( cclass. existsproperty ( ""a"" ) )
[4]: org. junit. assert. asserttrue ( cclass. existsproperty ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( cube . hasmetadata ( org . arquillian . cube . impl . client . cubemetadatatest . testmetadata . class ) )
[0]: org. junit. assert. asserttrue ( cclass. existsproperty ( s ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, cfis. available ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, cfis. available ( ). length )
[4]: org. junit. assert. assertequals ( 1, cfis. available ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( extractedimages . isempty ( ) )
[0]: org. junit. assert. assertequals ( payload, result. get ( ) )
[1]: org. junit. assert. assertequals ( null, result. get ( ) )
[2]: org. junit. assert. assertequals ( payload, result )
[3]: org. junit. assert. assertequals ( 0, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( connection instanceof com . pawelmaslyk . gerritintegration4sonar . gerrit . emptygerritcommit ) , true )
[0]: org. junit. assert. assertnotnull ( deserializedparams )
[1]: org. junit. assert. assertequals ( null, deserializedparams )
[2]: org. junit. assert. assertequals ( o, deserializedparams )
[3]: org. junit. assert. assertnull ( deserializedparams )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( syncdlfileversiondiffs . isempty ( ) )
[0]: org. junit. assert. assertequals ( t, normalizeurl ( s ) )
[1]: org. junit. assert. assertequals ( t. normalizeurl ( s ), s )
[2]: org. junit. assert. assertequals ( t, normalization. normalizeurl ( s ) )
[3]: org. junit. assert. assertnull ( normalizeurl ( s ) )
[4]: org. junit. assert. assertsame ( t, normalizeurl ( s ) )

************

************
tgt: org . junit . assert . assertthat ( checksumvalue , org . hamcrest . core . is . is ( checksumcomparehash ) )
[0]: org. junit. assert. assertnotnull ( p )
[1]: org. junit. assert. assertequals ( p, request )
[2]: org. junit. assert. assertequals ( p, null )
[3]: org. junit. assert. assertequals ( null, p )
[4]: org. junit. assert. assertarrayequals ( expected, blob. tobytearray ( ) )

************

************
tgt: org . junit . assert . assertfalse ( manifest . checkschema ( ) )
[0]: org. junit. assert. assertarrayequals ( expected, blob. decode ( ) )
[1]: org. junit. assert. assertarrayequals ( expected, blob. getbytes ( ) )
[2]: org. junit. assert. assertarrayequals ( expected, blob. bytes ( ) )
[3]: org. junit. assert. assertarrayequals ( expected, blob. bytes )
[4]: org. junit. assert. assertequals ( users, 1 )

************

************
tgt: org . junit . assert . assertfalse ( selecteditemdefinition . ispresent ( ) )
[0]: org. junit. assert. assertequals ( users, 0 )
[1]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), sizes )
[2]: org. junit. assert. assertequals ( 1, sizes. size ( ) )
[3]: org. junit. assert. assertequals ( list, sizes )
[4]: , sizes )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertequals ( 7, allsubtypes. size ( ) )
[2]: org. junit. assert. asserttrue ( ( allsubtypes. isempty ( ) ) )
[3]: org. junit. assert. asserttrue ( ( allsubtypes. size ( ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( ( old + "x" ) , p7 . getname ( ) )
[0]: )
[1]: org. junit. assert. assertequals ( 1, 1 )
[2]: org. junit. assert. assertnotnull ( context )
[3]: org. junit. assert. assertnotnull ( collection )
[4]: org. junit. assert. assertnotnull ( s )

************

************
tgt: org . junit . assert . assertequals ( new javax . vecmath . vector3d ( 0 , 0 , 0 ) , value )
[0]: org. junit. assert. assertnotnull ( queue )
[1]: org. junit. assert. assertequals ( service, holder. getservice ( ) )
[2]: org. junit. assert. assertfalse ( m. isstopped ( ) )
[3]: org. junit. assert. assertequals ( 1, collection. size ( ) )
[4]: org. junit. assert. assertequals ( 0, collection. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( exitstatus . error , command . run ( "foo" ) )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertequals ( 1, events. size ( ) )
[2]: org. junit. assert. assertequals ( 1, set. size ( ) )
[3]: org. junit. assert. assertequals ( echo, echo. echo ( ""test"" ) )
[4]: org. junit. assert. assertnotnull ( echo. echo ( ""test"" ) )

************

************
tgt: org . junit . assert . assertnotnull ( groep80gevuld . maakkopiemetdefaultgroep80 ( ) )
[0]: org. junit. assert. assertnotnull ( echo )
[1]: org. junit. assert. assertequals ( echo, echo )
[2]: ) )
[3]: org. junit. assert. assertequals ( wallet, configuration. getminecraftwallet ( ), 0 )
[4]: org. junit. assert. assertequals ( wallet, environment. getminecraftwallet ( ), 0 )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( wallet, config. getminecraftwallet ( ), 0 )
[1]: org. junit. assert. assertequals ( wallet, instance. getminecraftwallet ( ), 0 )
[2]: , wallet )
[3]: org. junit. assert. assertnotnull ( pico. getcomponent ( java. lang. string. class ) )
[4]: org. junit. assert. assertnull ( pico. getcomponent ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertnotnull ( structure )
[0]: org. junit. assert. assertequals ( ""foo"", pico. getcomponent ( java. lang. string. class ) )
[1]: org. junit. assert. assertequals ( null, pico. getcomponent ( java. lang. string. class ) )
[2]: type )
[3]: org. junit. assert. assertnull ( ex )
[4]: org. junit. assert. assertnotnull ( ex )

************

************
tgt: org . junit . assert . assertequals ( "content" , out . tostring ( ) )
[0]: org. junit. assert. asserttrue ( false )
[1]: org. junit. assert. assertnull ( ex. getmessage ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, result. build ( ) )
[4]: org. junit. assert. assertnotnull ( result. build ( ) )

************

************
tgt: org . junit . assert . assertequals ( outcome_modification_error , result )
[0]: org. junit. assert. assertequals ( descriptor, result. build ( ) )
[1]: org. junit. assert. assertequals ( 1, result. build ( ). length )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, allergypage. getallergen ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, allergypage. getallergen ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( section )
[0]: org. junit. assert. assertequals ( org. openmrs. reference. addnewgytest. drug_name, allergypage. getallergen ( ). size ( ) )
[1]: org. junit. assert. assertequals ( org. openmrs. reference. addnewgytest. drug_name, allergypage. getallergen ( ). tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), allergypage. getallergen ( ) )
[3]: org. junit. assert. assertequals ( 1, a. getnumberoffields ( ) )
[4]: org. junit. assert. assertequals ( 0, a. getnumberoffields ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( 3, a. getnumberoffields ( ) )
[1]: org. junit. assert. assertequals ( 1, a. getnumberoffields ( ). length )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, resulta. compareto ( resultb ) )
[4]: org. junit. assert. assertequals ( 1, resulta. compareto ( resultb ) )

************

************
tgt: org . junit . assert . asserttrue ( testreport . exists ( ) )
[0]: org. junit. assert. assertequals ( ( - 1 ), resulta. compareto ( resultb ) )
[1]: org. junit. assert. asserttrue ( ( ( resulta. compareto ( resultb ) ) == 0 ) )
[2]: org. junit. assert. asserttrue ( ( ( resulta. compareto ( resultb ) ) < 0 ) )
[3]: org. junit. assert. assertnotnull ( target )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), target )

************

************
tgt: org . junit . assert . assertequals ( allraxaalert . size ( ) , 1 )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), target )
[1]: org. junit. assert. assertequals ( source, target )
[2]: org. junit. assert. assertnull ( target )
[3]: org. junit. assert. assertequals ( 1, tree. calculatedepth ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( urlstring )

************

************
tgt: org . junit . assert . assertequals ( "aaa" , e . getdumpfilepath ( ) )
[0]: org. junit. assert. assertequals ( urlstring, urlstring )
[1]: org. junit. assert. assertnull ( urlstring )
[2]: org. junit. assert. assertequals ( urlstring, urlstring )
[3]: org. junit. assert. assertnotnull ( urlstring, urlstring )
[4]: org. junit. assert. assertequals ( 1, io. atlasmap. v2. lookuptables. supports ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( 1, io. atlasmap. v2. lookuptables. supports ( java. util. list. class ). size ( ) )
[1]: org. junit. assert. assertequals ( true, io. atlasmap. v2. supports ( java. lang. string. class ) )
[2]: org. junit. assert. assertequals ( true, io. atlasmap. v2. lookuptables. supports ( java. lang. string. class ) )
[3]: org. junit. assert. assertequals ( 1, io. atlasmap. v2. lookuptables. supports ( java. util. list. class ) )
[4]: org. junit. assert. assertequals ( expectedjson, generatedjson )

************

************
tgt: org . junit . assert . assertequals ( "world" , prepared . evaluateexpressions ( attrs , null ) )
[0]: org. junit. assert. assertthat ( generatedjson, is ( expectedjson ) )
[1]: org. junit. assert. assertequals ( resultjson, generatedjson )
[2]: org. junit. assert. assertequals ( actualjson, generatedjson )
[3]: ) )
[4]: org. junit. assert. assertequals ( com. liferay. portal. kernel. nio. intraband. nonblocking. selectorintraband. class, intraband )

************

************
tgt: org . junit . assert . asserttrue ( result . iscomplete ( ) )
[0]: org. junit. assert. assertsame ( com. liferay. portal. kernel. nio. intraband. nonblocking. selectorintraband. class, intraband )
[1]: org. junit. assert. assertequals ( com. liferay. portal. kernel. nio. intraband. nonblocking. selectorintraband. class, intraband. class )
[2]: org. junit. assert. assertequals ( com. liferay. portal. kernel. nio. intraband. nonblocking. selectorintraband. class, intraband. getclass )
[3]: org. junit. assert. assertequals ( java. lang. object. class, intraband. getclass ( ) )
[4]: org. junit. assert. assertarrayequals ( f, new int [ ] { 0, 1, 2, 3 } )

************

************
tgt: org . junit . assert . assertnull ( brpinhoud )
[0]: org. junit. assert. assertarrayequals ( f, new int [ ] { 0, 0, 0, 0 } )
[1]: org. junit. assert. assertarrayequals ( f, new int [ ] { 0, 0, 1 } )
[2]: org. junit. assert. assertarrayequals ( f, null )
[3]: org. junit. assert. assertequals ( f. length, 0 )
[4]: org. junit. assert. asserttrue ( this. configuration. gettslcacheexpirationtime ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertthat ( shapes. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertequals ( dim1. hashcode ( ), dim2. hashcode ( ) )
[2]: org. junit. assert. assertequals ( 1, dim1. hashcode ( ) )
[3]: org. junit. assert. assertequals ( dim1. hashcode ( ), ( ( dim2. hashcode ( ) ) + 1 ) )
[4]: org. junit. assert. assertequals ( 0, dim1. hashcode ( ) )

************

************
tgt: org . junit . assert . assertequals ( tracks . get ( 1 ) , shortesttrack )
[0]: org. junit. assert. assertequals ( dim1. hashcode ( ), ( ( dim2. hashcode ( ) ) - 1 ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), iframepage. enteriframe ( ) )
[2]: org. junit. assert. assertequals ( 0, iframepage. enteriframe ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, iframepage. enteriframe ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), out. enteriframe ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( searchflow ( searchkey ) )
[0]: org. junit. assert. assertequals ( 0, this. component. enteriframe ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 100, f2. getfield ( ) )
[2]: org. junit. assert. assertequals ( 100, f1. getfield ( ) )
[3]: org. junit. assert. assertequals ( 1, f2. getfield ( ) )
[4]: org. junit. assert. assertequals ( 100, f2. getfield ( ). length )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( expected ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( handler )
[2]: org. junit. assert. assertequals ( handler, null )
[3]: org. junit. assert. assertequals ( handler, handler )
[4]: org. junit. assert. assertequals ( handler, null ) )

************

************
tgt: org . junit . assert . assertnull ( field )
[0]: org. junit. assert. assertequals ( handler, null ) ;
[1]: org. junit. assert. asserttrue ( lines. isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, lines. size ( ) )
[3]: org. junit. assert. assertnotnull ( account )
[4]: org. junit. assert. assertequals ( 0, account. getentityid ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , taskreportresults . size ( ) )
[0]: org. junit. assert. assertnotnull ( account. getentityid ( ) )
[1]: org. junit. assert. assertnull ( account )
[2]: org. junit. assert. assertnull ( account. getentityid ( ) )
[3]: org. junit. assert. assertequals ( iterated, iterated )
[4]: org. junit. assert. assertequals ( iterated, iteratorated )

************

************
tgt: org . junit . assert . assertfalse ( waitforexceptionstep . waituntil ( ) )
[0]: org. junit. assert. assertequals ( iterated, iterateated )
[1]: org. junit. assert. assertequals ( iterated, iterationsated )
[2]: org. junit. assert. assertequals ( iterated, table )
[3]: org. junit. assert. assertequals ( gpgconfig. gpgformat. openpgp, new java. lang. string ( c. getkeyformat ( ) ) )
[4]: org. junit. assert. assertequals ( gpgconfig. gpgformat. openpgp, new java. util. arraylist ( c. getkeyformat ( ) ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1001 , variables . size ( ) )
[0]: org. junit. assert. assertequals ( gpgconfig. gpgformat. openpgp, new java. util. arraylist ( c. getkeyformat ( ) ) )
[1]: org. junit. assert. assertequals ( gpgconfig. gpgformat. openpgp, new java. util. arraylist ( c. getkeyformat ( ) ). get ( 0 ) )
[2]: org. junit. assert. assertnotnull ( c. getkeyformat ( ) )
[3]: org. junit. assert. assertequals ( colors, gs. next ( ) )
[4]: org. junit. assert. assertequals ( colors, gs. build ( ) )

************

************
tgt: org . junit . assert . assertthat ( stubbedgroup . getcustomeraccount ( ) , org . hamcrest . corematchers . is ( customeraccount ) )
[0]: org. junit. assert. assertequals ( colors, gs. path ( ) )
[1]: org. junit. assert. assertequals ( colors, gs. method_4 ( ) )
[2]: org. junit. assert. assertequals ( colors, gs. get ( new hu ) )
[3]: org. junit. assert. assertequals ( m1, m2 )
[4]: org. junit. assert. assertsame ( m1, m2 )

************

************
tgt: org . junit . assert . assertequals ( 0 , parse ( batch ) . size ( ) )
[0]: org. junit. assert. assertequals ( m2, m1 )
[1]: org. junit. assert. assertnotnull ( m1 )
[2]: org. junit. assert. asserttrue ( ( m1 == m2 )
[3]: org. junit. assert. assertequals ( 1, stores. size ( ) )
[4]: org. junit. assert. assertnotnull ( stores )

************

************
tgt: org . junit . assert . assertequals ( 5 , itemcount )
[0]: org. junit. assert. assertequals ( 0, stores. size ( ) )
[1]: org. junit. assert. assertequals ( store, stores )
[2]: ) )
[3]: org. junit. assert. assertequals ( io. grpc. internal. readablebufferstest. msg_bytes, read ( dest, 0, dest. length ) )
[4]: org. junit. assert. assertequals ( io. grpc. internal. readablebufferstest. msg_bytes, buffer. read ( dest, 0, dest. length ) )

************

************
tgt: org . junit . assert . assertequals ( "unknown" , da . getdoctype ( ) )
[0]: org. junit. assert. assertequals ( io. grpc. internal. readablebufferstest. msg_bytes, io. grpc. internal. readablebuffers. read ( dest, 0, dest. length ) )
[1]: org. junit. assert. assertequals ( io. grpc. internal. readablebufferstest. msg_bytes, stream. read ( dest, 0, dest. length ) )
[2]: org. junit. assert. assertequals ( io. grpc. internal. readablebufferstest. msg_bytes, new java. lang. string ( inputstream. read ( dest, 0, dest. length ) ) )
[3]: org. junit. assert. assertequals ( expected, actual )
[4]: org. junit. assert. asserttrue ( java. util. arrays. equals ( expected, actual ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , aantalhersteldeberichten )
[0]: org. junit. assert. asserttrue ( ( expected == actual ) )
[1]: org. junit. assert. assertthat ( pdxreaderpropertyaccessor. canwrite ( null, null, null ), org. hamcrest. matchers. is ( false ) )
[2]: org. junit. assert. assertthat ( pdxreaderpropertyaccessor. instance. canwrite ( null, null, null ), org. hamcrest. matchers. is ( false ) )
[3]: org. junit. assert. assertthat ( pdxreaderpropertyaccessor. canwrite ( null, null, null ), org. hamcrest. matchers. is ( true ) )
[4]: org. junit. assert. assertthat ( pdxreaderpropertyaccessor. instance. canwrite ( null, null, null ), org. hamcrest. matchers. is ( true ) )

************

************
tgt: org . junit . assert . assertnull ( subject1 )
[0]: org. junit. assert. assertthat ( pdxreaderpropertyaccessor. writable ( null, null, null ), org. hamcrest. matchers. is ( false ) )
[1]: org. junit. assert. assertnotnull ( e )
[2]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[3]: org. junit. assert. assertnotnull ( e. getclass ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( r1 , r2 )
[0]: 
[1]: org. junit. assert. assertequals ( 0.0, e. evaluate ( ), 0.0 )
[2]: org. junit. assert. assertequals ( 1.0, e. evaluate ( ), 0.0 )
[3]: org. junit. assert. assertequals ( java. lang. math. math. log ( 2 ), e. evaluate ( ), 0.0 )
[4]: org. junit. assert. assertequals ( java. lang. math. math. log ( 1.0 ), e. evaluate ( ), 0.0 )

************

************
tgt: org . junit . assert . assertequals ( actual , hash )
[0]: org. junit. assert. assertequals ( java. lang. double. valueof ( 1.0 ), e. evaluate ( ), 0.0 )
[1]: org. junit. assert. assertequals ( 0, request. gettimetolivems ( ) )
[2]: org. junit. assert. assertequals ( 1, request. gettimetolivems ( ) )
[3]: org. junit. assert. assertequals ( 0l, request. gettimetolivems ( ) )
[4]: org. junit. assert. assertequals ( 100, request. gettimetolivems ( ) )

************

************
tgt: org . junit . assert . assertnull ( missingmodule )
[0]: org. junit. assert. assertequals ( 0, request. gettimetolivems ( ) ) )
[1]: org. junit. assert. assertequals ( 1, result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: ( result ) )

************

************
tgt: org . junit . assert . assertfalse ( table . exists ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( expected ), actual )
[3]: org. junit. assert. assertequals ( java. lang. string. format ( expected ), actual )
[4]: org. junit. assert. assertequals ( msg, actual )

************

************
tgt: org . junit . assert . assertarrayequals ( java . util . arrays . aslist ( 4 , 6 ) . toarray ( ) , i . value ( ) . toarray ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( number ), actual )
[1]: org. junit. assert. asserttrue ( iter. hasnext ( ) )
[2]: org. junit. assert. assertequals ( 0, resultaat. size ( ) )
[3]: org. junit. assert. assertequals ( 1, resultaat. size ( ) )
[4]: org. junit. assert. assertequals ( 0, result. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( syncopt . isdeltasyncenabled ( ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( 0, resultaat. length )
[2]: org. junit. assert. assertnotnull ( d )
[3]: org. junit. assert. assertequals ( d, null )
[4]: org. junit. assert. assertequals ( null, d )

************

************
tgt: org . junit . assert . assertthat ( interval , org . hamcrest . corematchers . is ( ser ) )
[0]: org. junit. assert. assertequals ( 1, d )
[1]: org. junit. assert. assertequals ( d, 1 )
[2]: org. junit. assert. assertequals ( 1, ret_val )
[3]: org. junit. assert. assertequals ( 1, docs. size ( ) )
[4]: org. junit. assert. assertequals ( 0, docs. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , bindingsetstring )
[0]: org. junit. assert. assertequals ( 2, docs. size ( ) )
[1]: org. junit. assert. assertequals ( 4, docs. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( org.<sp>this<sp>operation."", ex. getmessage ( ) )
[4]: org. junit. assert. assertequals ( orgretry<sp>this<sp>operation."", ex. getmessage ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( d )
[0]: org. junit. assert. assertequals ( org.<sp>this<sp>operation equi, ex. getmessage ( ) )
[1]: org. junit. assert. assertequals ( org.<sp>this<sp>operationpacename, ex. getmessage ( ) )
[2]: org. junit. assert. assertequals ( org.<sp>this<sp>operation64"", ex. getmessage ( ) )
[3]: org. junit. assert. assertequals ( 1, doc. title ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, doc. title ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , expected . compareto ( actual ) )
[0]: org. junit. assert. assertequals ( 1, doc. title ( ). length )
[1]: org. junit. assert. assertequals ( 1, doc. title ( ). length ( ) )
[2]: org. junit. assert. assertequals ( 0, doc. title ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1l, count )

************

************
tgt: org . junit . assert . assertnotnull ( token )
[0]: org. junit. assert. assertequals ( 1, count )
[1]: org. junit. assert. assertequals ( 3, count )
[2]: org. junit. assert. assertequals ( 0, count )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, fs. getcurrentindex ( ) )

************

************
tgt: org . junit . assert . assertequals ( 100 , value )
[0]: org. junit. assert. assertnotnull ( parameters )
[1]: org. junit. assert. assertequals ( 1, parameters. size ( ) )
[2]: org. junit. assert. assertequals ( plsync, parameters )
[3]: org. junit. assert. assertequals ( plsync. size ( ), 1 )
[4]: org. junit. assert. assertequals ( expected, parameters )

************

************
tgt: org . junit . assert . assertthat ( domain . getminavailable ( "cluster1" ) , org . hamcrest . matchers . equalto ( 3 ) )
[0]: org. junit. assert. assertequals ( firstwrappedentity, firstotherwrappedentity )
[1]: org. junit. assert. assertequals ( firstwrappedentity, firstotherwrappedentity. getid ( ) )
[2]: org. junit. assert. assertequals ( firstwrappedentity, firstotherwrappedentity. getname ( ) )
[3]: org. junit. assert. asserttrue ( firstwrappedentity. equals ( firstotherwrappedentity ) )
[4]: org. junit. assert. assertequals ( firstwrappedentity, firstotherwrappedentity. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( penaltyarray [ i ] . getdelay ( timeunit . milliseconds ) ) <= 20000 ) )
[0]: org. junit. assert. assertequals ( region. lon, region )
[1]: org. junit. assert. assertnotnull ( pubmessageatbroker. getmessageid ( ) )
[2]: org. junit. assert. asserttrue ( pubmessageatbroker. getmessageid ( ) )
[3]: org. junit. assert. assertnotnull ( pubmessageatbroker. get ( ) )
[4]: org. junit. assert. assertnotnull ( pubmessageatbroker )

************

************
tgt: org . junit . assert . assertfalse ( cli . isconnected ( ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( r. ismatch ( request ) )
[2]: org. junit. assert. assertequals ( null, com. github. jgonian. ipmath. prefixutils. sumipv4prefixes ( ipvxprefixes ) )
[3]: org. junit. assert. assertequals ( 0, com. github. jgonian. ipmath. prefixutils. sumipv4prefixes ( ipvxprefixes ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), sumipv4prefixes ( ipvxprefixes ) )

************

************
tgt: org . junit . assert . assertequals ( resource . geterrors ( ) . tostring ( ) , 1 , resource . geterrors ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 0, com. github. jgonian. ipmath. prefixutils. sumipv4prefixes ( ipvxprefixes ). size ( ) )
[1]: org. junit. assert. assertequals ( null, com. github. jgonian. ipmath. prefixutils. sumipv4prefixes )
[2]: org. junit. assert. assertequals ( org. opendaylight. protocol. bgp. rib. spi. ribsupporttest. path_id_qname, this. ribsupporttestimp. pathidid_qname )
[3]: org. junit. assert. assertequals ( org. opendaylight. protocol. bgp. rib. spi. ribsupporttest. path_id_qname, this. ribsupporttestimp. pathidid_qname ( ) )
[4]: org. junit. assert. assertequals ( org. opendaylight. protocol. bgp. rib. spi. ribsupporttest. path_id_qname, this. ribsupporttestimp. pathidid_qname, pathideat ( ) )

************

************
tgt: org . junit . assert . asserttrue ( f . isdone ( ) )
[0]: org. junit. assert. assertequals ( org. opendaylight. protocol. bgp. rib. spi. ribsupporttest. path_id_qname, this. ribsupporttestimp. pathid_qname )
[1]: org. junit. assert. assertequals ( java. util. optional. empty ( ), pathidqname ( ) )
[2]: org. junit. assert. assertequals ( ( before + 1 ), count ( ) )
[3]: org. junit. assert. assertequals ( ( before - 1 ), count ( ) )
[4]: org. junit. assert. assertequals ( count ( ), ( before + 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( com . sun . jna . platform . win32 . com . comutils . succeeded ( hr ) )
[0]: org. junit. assert. assertequals ( 1, count ( ) )
[1]: org. junit. assert. assertequals ( count ( ), ( before - 1 ) )
[2]: org. junit. assert. assertequals ( 1, b )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), b )
[4]: org. junit. assert. assertequals ( 0, b )

************

************
tgt: org . junit . assert . assertfalse ( formnavigatorentrykeys . ispresent ( ) )
[0]: org. junit. assert. assertequals ( 1, b. length ( ) )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), b )
[2]: org. junit. assert. assertnotnull ( r. serviceresolved ( identifier, host ) )
[3]: org. junit. assert. assertnotnull ( r. serviceresolved ( string, host ) )
[4]: org. junit. assert. assertnotnull ( r. serviceresolved ( null, host ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , meldingen . size ( ) )
[0]: org. junit. assert. assertnotnull ( r. serviceresolved ( name, host ) )
[1]: org. junit. assert. assertnotnull ( r )
[2]: org. junit. assert. assertequals ( org. fincatto. documentofiscal. nfe400. classes. cadastroendereco. getdescricaomunicipio ( ), retornoconsultacadastroendereco )
[3]: org. junit. assert. assertequals ( "propertynoconsultacadastroendereco. getdescricaomunicipio ( ), retornoconsultacadastroendereco. getdescricaomunicipio ( ) )
[4]: org. junit. assert. assertequals ( "pala equiuto, retornoconsultacadastroendereco. getdescricaomunicipio ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( result == null ) )
[0]: org. junit. assert. assertequals ( org. fincatto. documentofiscal. nfe400. classes. cadastroendereco. getdescricaomunicipio ( ), org. apache. commons. lang. runtime. entity. class )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( overlay. getinset ( ) )
[3]: org. junit. assert. assertequals ( info, overlay. getinset ( ) )
[4]: org. junit. assert. assertequals ( 1, overlay. getinset ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . inchain . utils . hex . encode ( tree . get ( ( ( tree . size ( ) ) - 1 ) ) ) , mark )
[0]: org. junit. assert. assertequals ( 1, overlay. getinset ( ). length )
[1]: ) )
[2]: org. junit. assert. assertthat ( query. count ( ), org. hamcrest. corematchers. is ( 2l ) )
[3]: org. junit. assert. assertthat ( query. count ( ), org. hamcrest. corematchers. is ( 2 ) )
[4]: org. junit. assert. assertthat ( query. count ( ), org. hamcrest. corematchers. is ( 1l ) )

************

************
tgt: org . junit . assert . assertarrayequals ( source . getlabelsymbols ( ) , new marytts . signalproc . analysis . labels ( target ) . getlabelsymbols ( ) )
[0]: org. junit. assert. assertequals ( expected, result )
[1]: org. junit. assert. assertequals ( expected, results )
[2]: org. junit. assert. assertequals ( result, expected )
[3]: org. junit. assert. assertequals ( actual, result )
[4]: , result )

************

************
tgt: org . junit . assert . assertnull ( nextline )
[0]: org. junit. assert. assertequals ( expected. tostring ( ), writer. tostring ( ) )
[1]: org. junit. assert. assertequals ( expected. tostring ( ), writer. getmessage ( ) )
[2]: org. junit. assert. assertequals ( expected. tostring ( ), result. tostring ( ) )
[3]: org. junit. assert. assertequals ( expected. tostring ( ), output. tostring ( ) )
[4]: org. junit. assert. assertequals ( expected. tostring ( ), writer. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , comparator . compare ( 1 , 1.0 ) )
[0]: org. junit. assert. asserttrue ( ( val == ( data [ i ] ) ) )
[1]: org. junit. assert. asserttrue ( ( ( java. lang. long ) ( data [ i ] ) ) )
[2]: org. junit. assert. asserttrue ( ( ( data [ i ] ) == ( nestedobj. get ( i ) ) ) )
[3]: org. junit. assert. asserttrue ( ( val == ( data. length ) ) )
[4]: org. junit. assert. asserttrue ( ( ( data [ i ] ) == ( nestedobj. getvalue ( ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , queryevents . size ( ) )
[0]: org. junit. assert. assertequals ( 1, allclasses. size ( ) )
[1]: org. junit. assert. assertequals ( trackedones. tostring ( ), 2, trackedones. size ( ) )
[2]: org. junit. assert. assertnotnull ( event. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), events. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), events. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( second , firstnullobject )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( ), events. tostring ( ) )
[1]: output ( ) )
[2]: org. junit. assert. assertfalse ( libraryids. isempty ( ) )
[3]: org. junit. assert. asserttrue ( whenisassetablebasemodel. isassetentryvisible ( parentbasemodel, getassetclasspk ( parentbasemodel ) ) )
[4]: org. junit. assert. assertfalse ( whenisassetablebasemodel. isassetentryvisible ( parentbasemodel, getassetclasspk ( parentbasemodel ) ) )

************

************
tgt: org . junit . assert . assertequals ( "new<sp>access<sp>token" , credprovider . getaccesstoken ( ) )
[0]: org. junit. assert. asserttrue ( whenisassetablebasemodel. isassetentryvisible ( parentbasemodel, getassetclasspk ( basemodel ) ) )
[1]: org. junit. assert. asserttrue ( whenisassetablebasemodel. isassetentryvisible ( parentbasemodel, getassetclasspk ( ancestorbasemodel ) ) )
[2]: org. junit. assert. asserttrue ( whenisassetablebasemodel. isassetentryvisible ( parentbasemodel, getassetclasspk ( childbasemodel ) ) )
[3]: org. junit. assert. assertequals ( 5, optionallong )
[4]: org. junit. assert. assertequals ( 1, optionallong )

************

************
tgt: org . junit . assert . assertfalse ( errors . haserrors ( ) )
[0]: org. junit. assert. assertequals ( 1l, optionallong )
[1]: org. junit. assert. assertequals ( amount, representation. getname ( ) )
[2]: org. junit. assert. assertequals ( amount. getname ( ), representation. getname ( ) )
[3]: org. junit. assert. assertequals ( name, representation. getname ( ) )
[4]: org. junit. assert. assertnotnull ( representation. getname ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( instance . getinitializationerror ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. class, representation. getname ( ) )
[1]: org. junit. assert. assertnotnull ( path )
[2]: org. junit. assert. assertnull ( path )
[3]: org. junit. assert. assertequals ( expected, path )
[4]: org. junit. assert. assertequals ( null, path )

************

************
tgt: org . junit . assert . assertequals ( bs , newbs )
[0]: org. junit. assert. assertequals ( expected, path, 0 )
[1]: org. junit. assert. assertequals ( expected, com. splicemachine. homeless. testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[2]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[3]: org. junit. assert. assertequals ( expected, org. splicemachine. homeless. testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[4]: org. junit. assert. assertequals ( expected, com. splicemachine. homeless. testutils. formattedresult. outputfactory. tostringunsorted ( rs ) )

************

************
tgt: org . junit . assert . asserttrue ( context . capturespans ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( expected, java. util. arrays. tostringunsorted ( rs ) )
[1]: org. junit. assert. assertfalse ( org. openkilda. persistence. repositories. impl. neo4jflowrepositorytest. flowrepository. exists ( flow. tostring ( ) ) )
[2]: org. junit. assert. asserttrue ( org. openkilda. persistence. repositories. impl. neo4jflowrepositorytest. flowrepository. exists ( flow. tostring ( ) ) )
[3]: org. junit. assert. assertfalse ( org. openkilda. persistence. repositories. impl. neo4jflowrepositorytest. flowrepository. exists ( flow. getid ( ) ) )
[4]: org. junit. assert. asserttrue ( org. openkilda. persistence. repositories. impl. neo4jflowrepositorytest. flowrepository. exists ( flow. getid ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 200 , test . getval ( ) )
[0]: org. junit. assert. asserttrue ( org. openkilda. persistence. repositories. impl. neo4jflowrepositorytest. flowrepository. exists ( flow. tostring ( ) ) ) )
[1]: org. junit. assert. assertequals ( expected, new java. net. url ( url ) )
[2]: org. junit. assert. assertequals ( expected, new java. net. uri ( url ) )
[3]: org. junit. assert. assertequals ( expected, new java. net. url ( url ). tostring ( ) )
[4]: org. junit. assert. assertequals ( expected, new java. net. url ( url ). extractpath ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( compare < 0 ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, obj. getid ( ) )
[2]: org. junit. assert. assertnotnull ( obj. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( obj. s )
[4]: org. junit. assert. assertequals ( 1, obj. s. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( oid . startswithprefix ( prefix ) )
[0]: org. junit. assert. assertnotnull ( obj. getmessage ( ) )
[1]: org. junit. assert. assertequals ( result, co. cask. coopr. test. client. rest. reactor_cluster_template )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( result, co. coopr. test. client. rest. reactor_cluster_template )

************

************
tgt: org . junit . assert . assertequals ( "foo" , actual , actuals )
[0]: org. junit. assert. assertequals ( result, co )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class. getname ( ), e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , checkoutputnode )
[0]: org. junit. assert. assertequals ( e. getmessage ( ), java. lang. string. class. getname ( ) )
[1]: org. junit. assert. assertequals ( 1, org. junit. tests. experimental. rules. tempfolderruletest. createdfiles [ 0 ]. length )
[2]: org. junit. assert. assertnotnull ( org. junit. tests. experimental. rules. tempfolderruletest. createdfiles [ 0 ] )
[3]: org. junit. assert. assertequals ( 1, org. junit. tests. experimental. rules. tempfolderruletest. createdfiles. length )
[4]: org. junit. assert. assertequals ( 0, org. junit. tests. experimental. rules. tempfolderruletest. createdfiles [ 0 ]. length )

************

************
tgt: org . junit . assert . assertequals ( expectednewservicerecommendations , newservicerecommendations )
[0]: org. junit. assert. assertequals ( 1, org. junit. tests. experimental. rules. tempfolderruletest. createdfiles [ 0 ] )
[1]: org. junit. assert. assertthat ( exit, is ( 1 ) )
[2]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_sunldap_defaultconfigtest. servlet. getgroupdisplayname ( group ) )
[3]: org. junit. assert. assertequals ( null, com. ibm. ws. security. wim. adapter. ldap. fat. urapis_sunldap_defaultconfigtest. servlet. getgroupdisplayname ( group ) )
[4]: org. junit. assert. assertequals ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_sunldap_defaultconfigtest. servlet. getgroupdisplayname ( group ), group )

************

************
tgt: org . junit . assert . asserttrue ( ( ( variances [ i ] ) < ( variances [ ( i - 1 ) ] ) ) )
[0]: org. junit. assert. assertequals ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_sunldap_defaultconfigtest. servlet. getgroupdisplayname ( group ), ( group + 1 ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( group ), com. ibm. ws. security. wim. adapter. ldap. fat. urapis_sunldap_defaultconfigtest. servlet )
[2]: org. junit. assert. assertnotnull ( buildaddressfromopenstreetmap ( null ) )
[3]: org. junit. assert. assertnotnull ( buildaddressfromopenstreetmap ( null ). size ( ) )
[4]: org. junit. assert. assertnotnull ( builder. buildaddressfromopenstreetmap ( null ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . is ( false ) )
[0]: org. junit. assert. assertequals ( 0, buildaddressfromopenstreetmap ( null ). size ( ) )
[1]: org. junit. assert. assertequals ( null, buildaddressfromopenstreetmap ( null ). size ( ) )
[2]: org. junit. assert. assertnull ( entities2. get ( 0 ) )
[3]: org. junit. assert. assertequals ( entities, entities2. get ( 0 ) )
[4]: org. junit. assert. assertnull ( entities2. get ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( listener . getstate ( ) , new java . lang . integer ( 1 ) )
[0]: org. junit. assert. assertnull ( entities2. get ( 0 ). getid ( ) )
[1]: org. junit. assert. assertnull ( entities2. get ( 0 ). get ( ) )
[2]: org. junit. assert. assertequals ( true, result )
[3]: org. junit. assert. asserttrue ( result )
[4]: org. junit. assert. assertthat ( result )

************

************
tgt: org . junit . assert . asserttrue ( ( syncbericht instanceof nl . moderniseringgba . isc . esb . message . sync . impl . ongeldigbericht ) )
[0]: , result )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, strategy. isactive ( state, user ) )
[3]: org. junit. assert. assertequals ( false, strategy. isactive ( state, user ) )
[4]: org. junit. assert. asserttrue ( cholesky. isspd ( ) )

************

************
tgt: org . junit . assert . assertfalse ( filteraccept ( doc , filter ) )
[0]: org. junit. assert. assertequals ( true, cholesky. isspd ( ) )
[1]: org. junit. assert. assertequals ( false, cholesky. isspd ( ) )
[2]: org. junit. assert. assertequals ( 1, p. g ( 1 ) )
[3]: org. junit. assert. assertequals ( 0, p. g ( 1 ) )
[4]: org. junit. assert. assertnotnull ( p. g ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( valid )
[0]: org. junit. assert. assertequals ( 1, p. g ( 0 ) )
[1]: org. junit. assert. assertequals ( 1, p. g ( 1 ), 0 )
[2]: org. junit. assert. assertequals ( true, usage. issuccessful ( ) )
[3]: org. junit. assert. assertequals ( false, usage. issuccessful ( ) )
[4]: org. junit. assert. assertequals ( solution, solution. getnumberofbits ( i ) )

************

************
tgt: org . junit . assert . assertequals ( exp , arr2 )
[0]: org. junit. assert. assertequals ( solution. getnumberofbits ( i ), solution. get ( i ) )
[1]: org. junit. assert. assertequals ( solution. getnumberofbits ( i ), solution. count ( ) )
[2]: org. junit. assert. assertequals ( i, solution. getnumberofbits ( i ) )
[3]: org. junit. assert. assertequals ( problem. getnumberofbits ( i ), solution. get ( i ) )
[4]: org. junit. assert. assertequals ( i, count [ i ] )

************

************
tgt: org . junit . assert . assertequals ( 25 , list . size ( ) )
[0]: org. junit. assert. assertequals ( 1, i )
[1]: org. junit. assert. assertequals ( i, i )
[2]: , i )
[3]: ) )
[4]: org. junit. assert. assertequals ( admintimeout, getfieldvalue ( admintimeout ) )

************

************
tgt: org . junit . assert . assertsame ( request , ctx . getrequest ( ) )
[0]: org. junit. assert. assertequals ( admintimeoutprop:admintimeout )
[1]: org. junit. assert. assertequals ( admintimeoutprop, getfieldvalue ( admintimeout ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnotnull ( actionuri. geturi ( ) )

************

************
tgt: org . junit . assert . assertfalse ( event . doit )
[0]: org. junit. assert. assertequals ( null, actionuri. geturi ( ) )
[1]: org. junit. assert. assertnull ( actionuri. geturi ( ) )
[2]: org. junit. assert. assertequals ( 1, actionuri. geturi ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( now, chargingschedule. getstartschedule ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( 1, chargingschedule. getstartschedule ( ). size ( ) )
[1]: org. junit. assert. assertequals ( future, chargingschedule. getstartschedule ( ) )
[2]: org. junit. assert. assertequals ( now, chargingschedule. getstartschedule ( ). get ( ) )
[3]: org. junit. assert. assertequals ( 1, chargingschedule. getstartschedule ( ). length )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertthat ( row . getnumberofcolumns ( ) , org . hamcrest . corematchers . is ( 3 ) )
[0]: org. junit. assert. assertnotnull ( resultaat )
[1]: org. junit. assert. assertnotnull ( out )
[2]: org. junit. assert. assertnotnull ( err )
[3]: ) )
[4]: org. junit. assert. asserttrue ( kbs. istrue ( model ) )

************

************
tgt: org . junit . assert . assertequals ( "hi" , objinst . getprop ( ) )
[0]: org. junit. assert. asserttrue ( model. istrue ( kbs ) )
[1]: org. junit. assert. asserttrue ( rdf. istrue ( kbs ) )
[2]: , kbs )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertthat ( found , org . hamcrest . matchers . contains ( label1 , label2 , label3 , label4 ) )
[0]: org. junit. assert. assertnull ( result )
[1]: ) )
[2]: )
[3]: 
[4]: org. junit. assert. asserttrue ( entitydata. isbuilding ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertfalse ( entitydata. isbuilding ( ) )
[1]: org. junit. assert. assertequals ( true, entitydata. isbuilding ( ) )
[2]: org. junit. assert. assertequals ( false, entitydata. isbuilding ( ) )
[3]: org. junit. assert. assertequals ( true, entitydata. isbuilding ( )
[4]: org. junit. assert. assertarrayequals ( expected, com. github. mpjct. jmpjct. mysql. proto. proto. build_filler ( 2 ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( true ) ) )
[0]: org. junit. assert. assertnotnull ( org. camunda. bpm. spring. boot. starter. webapp. filter. lazyinitregistration. getinithook ( ) )
[1]: org. junit. assert. assertequals ( null, back. getkeynew ( ) )
[2]: org. junit. assert. assertnotnull ( back. getkeynew ( ) )
[3]: org. junit. assert. assertequals ( 0, back. getkeynew ( ) )
[4]: org. junit. assert. assertnull ( back. getkeynew ( ) )

************

************
tgt: org . junit . assert . assertnull ( mydtoinstance )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( x. text, result. text )
[3]: org. junit. assert. assertequals ( x. text, result )
[4]: org. junit. assert. assertequals ( result. text, result. text )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( result, bytes )
[1]: org. junit. assert. assertequals ( clazz, mth. getdeclaringclass ( ) )
[2]: org. junit. assert. asserttrue ( clazz. getdeclaringclass ( ) )
[3]: org. junit. assert. asserttrue ( mth. getdeclaringclass ( ) )
[4]: org. junit. assert. assertnotnull ( clazz. getdeclaringclass ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnull ( clazz. getdeclaringclass ( ) )
[1]: org. junit. assert. assertequals ( expectedip, net. roboconf. agent. internal. misc. agentutils. findipaddress ( expectedip ) )
[2]: org. junit. assert. assertequals ( expectedip, net. roboconf. agent. internal. misc. agentutils. findipaddress ( null ) )
[3]: org. junit. assert. assertequals ( expectedip, net. roboconf. agent. internal. misc. agentutils. findipaddress ( string ) )
[4]: org. junit. assert. assertequals ( expectedip, net. roboconf. agent. internal. misc. agentutils. findipaddress ( testip ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( expectedip, net. roboconf. agent. internal. misc. agentutils. findipaddress ( input ) )
[1]: org. junit. assert. assertarrayequals ( expected, received. tobytearray ( ) )
[2]: org. junit. assert. assertarrayequals ( expected. tobytearray ( ), received )
[3]: org. junit. assert. assertequals ( expected, received )
[4]: org. junit. assert. assertarrayequals ( expected, received )

************

************
tgt: org . junit . assert . assertequals ( values , wrapper . getvalues ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( user1, user2 )
[2]: org. junit. assert. assertequals ( user0, user2 )
[3]: org. junit. assert. assertequals ( user1, users2 )
[4]: org. junit. assert. assertnotnull ( user1 )

************

************
tgt: org . junit . assert . assertequals ( decl , f . getdecl ( ) )
[0]: ) )
[1]: org. junit. assert. assertarrayequals ( children, parent. getchild ( 0 ) )
[2]: org. junit. assert. assertarrayequals ( children, parent. getchild ( 1 ) )
[3]: org. junit. assert. assertarrayequals ( child, parent. getchild ( 0 ) )
[4]: org. junit. assert. assertequals ( originalchild, parent. getchild ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( config1 . equals ( config2 ) )
[0]: org. junit. assert. assertarrayequals ( children, parent. getchild ( 0 ). toarray ( ) )
[1]: org. junit. assert. assertequals ( hosts3, hosts2 )
[2]: org. junit. assert. assertequals ( hosts2, hosts3 )
[3]: org. junit. assert. assertequals ( hosts1, hosts2 )
[4]: org. junit. assert. assertnotnull ( hosts2 )

************

************
tgt: org . junit . assert . assertsame ( value , to . field )
[0]: org. junit. assert. assertnotnull ( hosts3 )
[1]: org. junit. assert. assertequals ( 0, theidentifier. hashcode ( ) )
[2]: org. junit. assert. assertequals ( 1, theidentifier. hashcode ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 0 ), theidentifier. hashcode ( ) )
[4]: org. junit. assert. assertequals ( null, theidentifier. hashcode ( ) )

************

************
tgt: org . junit . assert . assertequals ( 32101 , result )
[0]: org. junit. assert. assertequals ( 0, thisidentifier. hashcode ( ) )
[1]: org. junit. assert. assertequals ( value, keyresults. getkeys ( ) )
[2]: org. junit. assert. assertequals ( value, keyresults )
[3]: org. junit. assert. assertequals ( key1, keyresults )
[4]: org. junit. assert. assertequals ( values, keyresults )

************

************
tgt: org . junit . assert . assertthat ( events . isempty ( ) , is ( true ) )
[0]: org. junit. assert. assertnotnull ( keyresults )
[1]: org. junit. assert. assertarrayequals ( quals, cf. getsegmentquals ( ) )
[2]: org. junit. assert. assertequals ( quals, cf. getsegmentquals ( ) )
[3]: org. junit. assert. assertarrayequals ( quals, java. lang. string [ ]. trim ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expectedranges , actualranges )
[0]: )
[1]: org. junit. assert. assertequals ( beforeid, resultid )
[2]: org. junit. assert. assertequals ( afterid, resultid )
[3]: org. junit. assert. assertthat ( resultid, is ( beforeid ) )
[4]: org. junit. assert. assertequals ( resultid, beforeid )

************

************
tgt: org . junit . assert . assertequals ( "name" , task . getname ( ) )
[0]: org. junit. assert. assertthat ( resultid, org. hamcrest. core )
[1]: org. junit. assert. assertequals ( 1, page. compareto ( cmppage ) )
[2]: org. junit. assert. assertequals ( 0, page. compareto ( cmppage ) )
[3]: org. junit. assert. assertnotnull ( string )
[4]: org. junit. assert. assertnull ( string )

************

************
tgt: org . junit . assert . assertequals ( "\nhello\r\n\n!" , mustache . render ( null ) )
[0]: org. junit. assert. assertequals ( """", string )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( date, emptysession. getend ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( date ), emptysession. getend ( ) )

************

************
tgt: org . junit . assert . assertequals ( i , comp . tolong ( comp . tobytearray ( i ) ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( date ), emptysession. getend ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), emptysession. getend ( ) )
[2]: org. junit. assert. assertequals ( 1, date. getend ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( polar )
[4]: org. junit. assert. assertequals ( 1, polar, 0 )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( false ) )
[0]: org. junit. assert. assertequals ( 1, polar, 0.0 )
[1]: org. junit. assert. assertequals ( 1.0, polar, 0.0 )
[2]: org. junit. assert. assertequals ( 0.0, polar, 0.0 )
[3]: org. junit. assert. assertnotnull ( poll ( ) )
[4]: org. junit. assert. assertequals ( 0, poll ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , ri . getsize ( ) )
[0]: org. junit. assert. assertequals ( 1, poll ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, poll ( ). count ( ) )
[2]: org. junit. assert. assertequals ( 1, poll ( ). count ( ) )
[3]: org. junit. assert. assertnotnull ( inputset )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), parsed )

************

************
tgt: org . junit . assert . assertequals ( data , unenc )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), parsed )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), parsed )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 0 ), parsed )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( 0 ), parsed )
[4]: org. junit. assert. assertnull ( stb. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . length )
[0]: org. junit. assert. assertnotnull ( stb. getname ( ) )
[1]: org. junit. assert. assertequals ( ""foo"", stb. getname ( ) )
[2]: org. junit. assert. assertequals ( ""1"", stb. getname ( ) )
[3]: org. junit. assert. assertnull ( stb. getname ( ). trim ( ) )
[4]: org. junit. assert. assertequals ( 1, reqmsg. getproperty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , getdirecciondao ( ) . count ( ) )
[0]: org. junit. assert. assertequals ( 1, reqmsg. getproperty ( 0 ) )
[1]: org. junit. assert. assertequals ( 1, reqmsg. getproperty ( ). length )
[2]: org. junit. assert. assertequals ( 5, hikes. size ( ) )
[3]: org. junit. assert. assertequals ( offer, ret )
[4]: org. junit. assert. assertnull ( ret )

************

************
tgt: org . junit . assert . assertequals ( element , view . getlistcontainer ( ) )
[0]: org. junit. assert. assertnotnull ( ret )
[1]: org. junit. assert. assertequals ( offer, ret )
[2]: ) )
[3]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[4]: org. junit. assert. assertequals ( expected, java. util. arrays. tostringunsorted ( rs ) )

************

************
tgt: org . junit . assert . assertnotnull ( json )
[0]: org. junit. assert. assertequals ( expected, tostringunsorted ( rs ) )
[1]: ( expected ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, request. getcurrentminute ( ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), request. getcurrentminute ( ) )

************

************
tgt: org . junit . assert . assertequals ( "can<sp>view<sp>the<sp>patient<sp>data" , this . mocker . getcomponentundertest ( ) . getdescription ( ) )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 2 ), request. getcurrentminute ( ) )
[1]: org. junit. assert. assertequals ( 0, request. getcurrentminute ( ) )
[2]: org. junit. assert. assertequals ( null, request. getcurrentminute ( ) )
[3]: org. junit. assert. assertnotnull ( headertotest )
[4]: org. junit. assert. assertnotnull ( headtotest )

************

************
tgt: org . junit . assert . assertequals ( "/services" , roothpath )
[0]: org. junit. assert. assertnotnull ( headertottest )
[1]: ) )
[2]: )
[3]: org. junit. assert.null ( _c. convert ( null ) )
[4]: org. junit. assert. assertnotnull ( _c. convert ( null ) )

************

************
tgt: org . junit . assert . assertequals ( connectionlist , mockconnectionlist )
[0]: org. junit. assert. assertnull ( _c )
[1]: null ) )
[2]: null )
[3]: org. junit. assert. assertnotnull ( result. getname ( ) )
[4]: org. junit. assert. assertequals ( department102. getname ( ), result. getname ( ) )

************

************
tgt: org . junit . assert . assertthat ( finder . findparameterat ( parametersstring . indexof ( "=" ) ) , org . hamcrest . core . is . is ( "" ) )
[0]: org. junit. assert. assertthat ( result. getname ( ), is ( department102. getname ( ) ) )
[1]: org. junit. assert. assertthat ( result. getname ( ), is ( department11. getname ( ) ) )
[2]: org. junit. assert. assertthat ( result. getname ( ), is ( department102. tostring ( ) ) )
[3]: org. junit. assert. assertequals ( 1, ix. sleep ( 1 ) )
[4]: org. junit. assert. assertequals ( 1, ix. sleep ( 0 ) )

************

************
tgt: org . junit . assert . assertsame ( reuse , org . apache . avro . io . testencoders . factory . blockingbinaryencoder ( out , reuse ) )
[0]: org. junit. assert. assertequals ( 0, ix. sleep ( 1 ) )
[1]: org. junit. assert. assertequals ( 0, ix. sleep ( 0 ) )
[2]: org. junit. assert. assertequals ( 1, ix. sleep ( 1000 ) )
[3]: org. junit. assert. assertequals ( i, m. getentry ( i, i ), 0.0 )
[4]: org. junit. assert. assertequals ( java. lang. double. valueof ( i ), m. getentry ( i, i ), 0.0 )

************

************
tgt: org . junit . assert . assertthat ( deserializedvalue , org . hamcrest . matchers . equalto ( org . sonatype . nexus . repository . json . untypedobjectdeserializerserializertest . field_value ) )
[0]: org. junit. assert. assertequals ( data [ i ], m. getentry ( i, i ), 0.0 )
[1]: org. junit. assert. assertequals ( ( ( data [ i ] ) + i ), m. getentry ( i, i ), 0.0 )
[2]: org. junit. assert. assertnotnull ( factory. getconnection ( ) )
[3]: org. junit. assert. assertequals ( 1, factory. getconnection ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, factory. getconnection ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( producer . hascontent ( ) )
[0]: org. junit. assert. assertnotnull ( factory. getconnection ( ). get ( 0 ) )
[1]: org. junit. assert. assertequals ( 1, factory. getconnection ( ). count ( ) )
[2]: org. junit. assert. assertnotnull ( aux )
[3]: org. junit. assert. assertequals ( app, aux )
[4]: org. junit. assert. assertequals ( 12, patchableint. union ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , fieldsets )
[0]: org. junit. assert. assertequals ( 12, patchableint. guaranteed ( ) )
[1]: org. junit. assert. assertequals ( 12, patchableint. guaranteed ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 12, patchableint. getvertices ( ). length )
[3]: org. junit. assert. assertequals ( 12, patchableint. calculat ( ) )
[4]: org. junit. assert. assertnotnull ( com. microsoft. azure. management. appservice. samples. managelinuxwebappwithdomainssl. runsample ( azure ) )

************

************
tgt: org . junit . assert . assertthat ( e . getvalidationreport ( ) )
[0]: org. junit. assert. assertequals ( 10, hcw. getcharacterlength ( ) )
[1]: org. junit. assert. assertnotnull ( hcw. getcharacterlength ( ) )
[2]: org. junit. assert. assertequals ( 9, hcw. getcharacterlength ( ) )
[3]: org. junit. assert. assertequals ( 20, hcw. getcharacterlength ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( dt, dt. toepochsecond ( ) )
[1]: org. junit. assert. assertequals ( dt. toepochsecond ( ), dt )
[2]: org. junit. assert. assertnotnull ( dt. toepochsecond ( ) )
[3]: org. junit. assert. assertequals ( msg, dt. toepochsecond ( ) )
[4]: org. junit. assert. assertequals ( dt, dt )

************

************
tgt: org . junit . assert . assertequals ( expectedfile . getpath ( ) , actualfile . getpath ( ) )
[0]: org. junit. assert. assertequals ( new java. lang. long ( 2 ), testval )
[1]: org. junit. assert. assertequals ( new java. lang. long ( 10 ), testval )
[2]: org. junit. assert. assertequals ( new java. lang. long ( 1 ), testval )
[3]: org. junit. assert. assertequals ( new java. lang. long ( 1l ), testval )
[4]: org. junit. assert. assertnotnull ( testval )

************

************
tgt: org . junit . assert . assertnotnull ( nmd . getmessagedeliverystatus ( ) )
[0]: org. junit. assert. assertequals ( null, patternname )
[1]: org. junit. assert. assertnull ( patternname )
[2]: org. junit. assert. assertnotnull ( patternname )
[3]: org. junit. assert. assertequals ( null, patternname )
[4]: type ) { } }

************

************
tgt: org . junit . assert . asserttrue ( provider . exists ( ) )
[0]: org. junit. assert. assertequals ( result, expected )
[1]: org. junit. assert. assertequals ( expected, result )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( expected ), result )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )
[4]: , result )

************

************
tgt: org . junit . assert . assertequals ( expectedvalue , primitive . value ( ) )
[0]: org. junit. assert. assertequals ( 1, fieldvaluegenerator. generatepreviousvalue ( lastdayinmonth ) )
[1]: org. junit. assert. assertequals ( 1, fieldvaluegenerator. generatepreviousvalue ( 1 ) )
[2]: org. junit. assert. assertequals ( 1, fieldvaluegenerator. generatepreviousvalue ( 0 ) )
[3]: org. junit. assert. assertequals ( 1, fieldvaluegenerator. generatepreviousvalue ( ( - 1 ) ) )
[4]: )

************

************
tgt: org . junit . assert . assertthat ( properties , org . hamcrest . corematchers . equalto ( expectedproperties ) )
[0]: org. junit. assert. assertequals ( 1, order. getorderid ( ) )
[1]: org. junit. assert. assertequals ( 0, order. getorderid ( ) )
[2]: org. junit. assert. assertnotnull ( order )
[3]: org. junit. assert. assertequals ( 1, orders. getorderid ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( false ) )
[0]: org. junit. assert. assertequals ( 1, receivenum )
[1]: org. junit. assert. assertequals ( 0, receivenum )
[2]: org. junit. assert. assertequals ( expresult, receivenum )
[3]: org. junit. assert. assertequals ( 3, receivenum )
[4]: org. junit. assert. assertequals ( ( numberofrecords + offset ), result )

************

************
tgt: org . junit . assert . assertfalse ( f . exists ( ) )
[0]: org. junit. assert. assertequals ( false, retval )
[1]: org. junit. assert. assertequals ( expecteditem, actual )
[2]: org. junit. assert. assertthat ( sorted, is ( java. util. collections. singletonlist ( 2 ) ) )
[3]: org. junit. assert. assertthat ( sorted, is ( java. util. collections. singletonlist ( 3 ) ) )
[4]: org. junit. assert. assertthat ( sorted, is ( empty ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , inputfiles . length )
[0]: , sorted )
[1]: ) )
[2]: org. junit. assert. assertnull ( uuidmap. put ( null, null ) )
[3]: org. junit. assert. assertequals ( null, uuidmap. put ( null, null ) )
[4]: org. junit. assert. assertnotnull ( uuidmap. put ( null, null ) )

************

************
tgt: org . junit . assert . assertequals ( rulesafterdelete , origrules )
[0]: org. junit. assert. assertnull ( uuidmap. put ( null, null ). get ( ) )
[1]: org. junit. assert. assertequals ( null, uuidmap. put ( null, null ). null )
[2]: org. junit. assert. assertequals ( nl. jqno. equalsverifier. internal. reflection. fieldaccessortest. field_name, fieldaccessor. fieldisfinal ( ) )
[3]: org. junit. assert. assertnotnull ( fieldaccessor. fieldisfinal ( ) )
[4]: org. junit. assert. assertnotnull ( prefixedreadnode )

************

************
tgt: org . junit . assert . assertequals ( "itemname" , captor . getvalue ( ) )
[0]: org. junit. assert. assertnotnull ( readnode )
[1]: org. junit. assert. assertnotnull ( inputnode )
[2]: org. junit. assert. assertnotnull ( readablenode )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertthat ( diff, org. hamcrest. matchers. equalto ( org. batfish. common. util. batfishobjectmapper. clone ( diff, org. batfish. datamodel. bgproute. class ) ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , col . count ( ) )
[0]: org. junit. assert. assertthat ( diff, org. hamcrest. matchers. equalto ( org. batfish. common. util. batfishobjectmapper. clone ( diff, org. batfish. datamodel. bgproutediff ) ) )
[1]: org. junit. assert. assertthat ( diff. clone ( diff, org. batfish. datamodel. bgproutediff. class ), org. hamcrest. matchers. equalto ( diff ) )
[2]: org. junit. assert. assertthat ( diff, org. hamcrest. matchers. clone ( diff, org. batfish. datamodel. bgproutediff. class ) )
[3]: org. junit. assert. assertthat ( diff, org. hamcrest. matchers. equalto ( diff ) )
[4]: org. junit. assert. assertequals ( result, null )

************

************
tgt: org . junit . assert . assertnull ( protect . findelement ( org . openqa . selenium . by . id ( "foo" ) ) )
[0]: org. junit. assert. assertequals ( result, msg )
[1]: org. junit. assert. assertequals ( result, string )
[2]: result ) )
[3]: result )
[4]: org. junit. assert. assertnull ( mock. getoptionalparameter ( request, io. lumify. web. baserequesthandlertest. test_param ) )

************

************
tgt: org . junit . assert . assertequals ( "b" , html )
[0]: org. junit. assert. assertequals ( true, result. success ( ) )
[1]: org. junit. assert. assertequals ( initial_size, ending_size )
[2]: org. junit. assert. assertequals ( 1, result )
[3]: org. junit. assert. asserttrue ( res )
[4]: org. junit. assert. assertfalse ( res )

************

************
tgt: org . junit . assert . assertequals ( "thecontent\ncontent" , new java . lang . string ( org . bonitasoft . engine . io . ioutil . getallcontentfrom ( file ) ) )
[0]: org. junit. assert. assertequals ( true, res )
[1]: org. junit. assert. assertnotnull ( res )
[2]: org. junit. assert. assertequals ( false, res )
[3]: org. junit. assert. assertnull ( runner )
[4]: org. junit. assert. assertequals ( 20, min )

************

************
tgt: org . junit . assert . assertthat ( classes . size ( ) , org . hamcrest . core . is . is ( 2 ) )
[0]: org. junit. assert. assertequals ( 10, min )
[1]: org. junit. assert. assertequals ( 1, min )
[2]: org. junit. assert. assertequals ( 12, min )
[3]: , min )
[4]: org. junit. assert. assertequals ( computers, c. next ( ) )

************

************
tgt: org . junit . assert . assertthat ( messages , is ( empty ( ) ) )
[0]: org. junit. assert. assertequals ( computers, c. next ( ). get ( ) )
[1]: org. junit. assert. assertequals ( computers. get ( ), c. next ( ) )
[2]: org. junit. assert. assertequals ( computers. next ( ), c. next ( ) )
[3]: org. junit. assert. assertequals ( computers. next ( ), c )
[4]: org. junit. assert. assertnotnull ( value )

************

************
tgt: org . junit . assert . assertequals ( ( ( data [ i ] ) + i ) , m . getentry ( i , i ) , 0.0 )
[0]: org. junit. assert. assertnull ( value )
[1]: ) )
[2]: )
[3]: 
[4]: org. junit. assert. assertequals ( new java. lang. double ( 1 ), result )

************

************
tgt: org . junit . assert . assertarrayequals ( this . ipv6msgwithdistinguishergbytes , org . opendaylight . protocol . util . bytearray . getallbytes ( aggregator ) )
[0]: org. junit. assert. assertequals ( new java. lang. double ( 1.0 ), result )
[1]: org. junit. assert. assertequals ( new java. lang. double ( 0 ), result )
[2]: org. junit. assert. asserttrue ( ( result == set ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertfalse ( callstarted. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( m1 , m2 )
[0]: org. junit. assert. assertequals ( false, callstarted. get ( ) )
[1]: org. junit. assert. assertthat ( callstarted. get ( ), org. hamcrest. matchers. is ( false ) )
[2]: org. junit. assert. assertnull ( callstarted. get ( ) )
[3]: org. junit. assert. assertfalse ( callsstarted. get ( ) )
[4]: org. junit. assert. assertequals ( 1, size )

************

************
tgt: org . junit . assert . assertarrayequals ( o . bytes , class1 . bytes )
[0]: org. junit. assert. assertequals ( 0, size )
[1]: org. junit. assert. assertequals ( 3, size )
[2]: org. junit. assert. assertthat ( rootlevelresources, acollectionwithsize ( 1 ) )
[3]: org. junit. assert. assertthat ( rootlevelresources, acollectionwithsize ( 2 ) )
[4]: org. junit. assert. assertthat ( rootlevelresources, acollectionwithsize ( 3 ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , matches . size ( ) )
[0]: org. junit. assert. assertnotnull ( rootlevelresources )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( e. gettablename ( ) )
[3]: org. junit. assert. assertequals ( e. gettablename ( ), e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( e. gettablename ( ), null )

************

************
tgt: org . junit . assert . assertarrayequals ( expected . toarray ( ) , result . toarray ( ) )
[0]: org. junit. assert. assertequals ( e. gettablename ( ), java. lang. string. class )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( prevdate )
[3]: org. junit. assert. assertequals ( prevdate, revision )
[4]: org. junit. assert. assertnotnull ( revision )

************

************
tgt: org . junit . assert . assertequals ( expectedscript , observedscript )
[0]: ( prevdate ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( entry. hexstringtoargb ( entry. getkey ( ) ) )
[3]: org. junit. assert. assertnotnull ( entry. hexstringtoargb ( entry. getvalue ( ) ) )
[4]: org. junit. assert. assertnotnull ( entry )

************

************
tgt: org . junit . assert . assertequals ( expected , resource . getcontents ( ) )
[0]: org. junit. assert. assertnotnull ( entry. hexstringtoargb ( entry. getid ( ) ) )
[1]: org. junit. assert. assertnotnull ( entry. hexstringtoargb )
[2]: org. junit. assert. assertnotnull ( boot. getprovider ( ) )
[3]: org. junit. assert. assertnotnull ( provider. getprovider ( ) )
[4]: org. junit. assert. assertequals ( provider, boot )

************

************
tgt: org . junit . assert . assertequals ( "daniellitoc" , user . getusername ( ) )
[0]: org. junit. assert. assertnotnull ( boot )
[1]: org. junit. assert. assertequals ( provider, boot. getprovider )
[2]: org. junit. assert. assertequals ( 0, org. eol. globi. server. util. resultobject. forfield ( null ). size ( ) )
[3]: org. junit. assert. assertequals ( null, org. eol. globi. server. util. resultobject. forfield ( null ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. eol. globi. server. util. resultobject. forfield ( null ) )

************

************
tgt: org . junit . assert . assertequals ( tffiledescriptor . getopenfiledescriptorcount ( ) , 30 , 0 )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), forfield ( null ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. eol. globi. server. util. resultobject. forfield ( collection ( ) ) )
[2]: org. junit. assert. assertequals ( 1, counter. get ( ) )
[3]: org. junit. assert. assertequals ( 3, counter. get ( ) )
[4]: org. junit. assert. assertequals ( 7, counter. get ( ) )

************

************
tgt: org . junit . assert . assertnull ( principal )
[0]: get ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( datawave. query. jexl. visitors. hastoplevelnegationvisitor. hastoplevelnegation ( script ) )
[3]: org. junit. assert. assertnotnull ( datawave. query. jexl. visitors. hastoplevelnegationvisitor. hastoplevelnegation ( script ) )
[4]: org. junit. assert. asserttrue ( datawave. query. jexl. visitors. hastoplevelnegationvisitor. hastoplevelneget ( script ) )

************

************
tgt: org . junit . assert . assertnull ( getter . get ( row ) )
[0]: org. junit. assert. assertnotnull ( script. hastoplevelnegation ( script ) )
[1]: org. junit. assert. asserttrue ( datawave. query. jexl. visitors. hastoplevelnegationvisitor ( script ) )
[2]: org. junit. assert. assertequals ( 1, leavesgraph. size ( ) )
[3]: org. junit. assert. assertequals ( 0, leavesgraph. size ( ) )
[4]: org. junit. assert. assertequals ( 3, leavesgraph. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , org . jboss . windup . config . iteration . payload . iterationpayloadpasstest . modelcounter )
[0]: org. junit. assert. assertequals ( 2, leavesgraph. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( tgenerator. fromint ( 30 ), currentval )
[3]: org. junit. assert. assertequals ( tgenerator. fromint ( 5 ), currentval )
[4]: org. junit. assert. assertnotnull ( currentval )

************

************
tgt: org . junit . assert . assertequals ( context , cache . get ( "foo" ) )
[0]: org. junit. assert. assertequals ( expected, currentval )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( ""a"", e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( "11.1.10" , result )
[0]: org. junit. assert. asserttrue ( e. getmessage ( ). contains ( error ) )
[1]: . getmessage ( ) )
[2]: org. junit. assert. assertnotnull ( victim. getvalue ( ro. isdc. wro. maven. plugin. support. testbuildcontextholder. key ) )
[3]: org. junit. assert. assertnull ( victim. getvalue ( ro. isdc. wro. maven. plugin. support. testbuildcontextholder. key ) )
[4]: org. junit. assert. assertequals ( ro. isdc. wro. maven. plugin. support. testbuildcontextholder. value, victim. getvalue ( ro. isdc. wro ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , majorityelement . majorityelement ( nums ) )
[0]: org. junit. assert. assertequals ( ro. isdc. wro. maven. plugin. support. testbuildcontextholder. value, victim. getvalue ( ro. isdc ) )
[1]: org. junit. assert. assertequals ( ro. isdc. wro. maven. plugin. support. testbuildcontextholder. value, victim. getvalue ( ro ) )
[2]: org. junit. assert. assertequals ( null, prozessor. gethostname ( ) )
[3]: org. junit. assert. assertnotnull ( prozessor. gethostname ( ) )
[4]: org. junit. assert. assertequals ( 0, prozessor. gethostname ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( getnoerrormsg ( ) , result )
[0]: org. junit. assert. assertequals ( 1, prozessor. gethostname ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( message )
[2]: org. junit. assert. assertnotnull ( msg )
[3]: the message )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( classchild . getsuperclasses ( ) , java . util . arrays . aslist ( classa ) )
[0]: )
[1]: org. junit. assert. assertequals ( ( previous + 1 ), size )
[2]: org. junit. assert. assertsame ( ( previous + 1 ), size )
[3]: org. junit. assert. assertequals ( ( before + 1 ), size )
[4]: org. junit. assert. assertequals ( ( previous + 2 ), size )

************

************
tgt: org . junit . assert . assertnull ( com . redhat . lightblue . util . modifydoctest . doc . get ( new com . redhat . lightblue . util . path ( "x.arr" ) ) )
[0]: test of size ) )
[1]: org. junit. assert. assertequals ( 0, recent. size ( ) )
[2]: org. junit. assert. assertequals ( 1, recent. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), recent )
[4]: org. junit. assert. assertequals ( 2, recent. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "1" , resource . getid ( user ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, buffer. size ( ) )
[2]: org. junit. assert. assertequals ( javatext, d. asint8 ( ) )
[3]: org. junit. assert. assertthat ( buildphasetotest, org. hamcrest. matchers. equalto ( buildphasetotest ) )
[4]: org. junit. assert. assertthat ( buildphasetotest, org. hamcrest. matchers. equalto ( buildphasetotest. target ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertthat ( buildphasetotest, org. hamcrest. matchers. is ( java. util. optional. of ( copyphase ) ) )
[1]: org. junit. assert. assertthat ( buildphasetotest, org. hamcrest. matchers. is ( buildphasetotest ) )
[2]: ) )
[3]: org. junit. assert. assertthat ( java. util. arrays. equals ( json, expected ), org. hamcrest. matchers. is ( true ) )
[4]: org. junit. assert. assertthat ( java. util. arrays. equals ( json, expected ), org. hamcrest. matchers. is ( expected ) )

************

************
tgt: org . junit . assert . asserttrue ( index . isfounder ( ) )
[0]: org. junit. assert. assertthat ( json, org. hamcrest. matchers. is ( expected ) )
[1]: org. junit. assert. assertthat ( java. util. arrays. equals ( expected, json ), org. hamcrest. matchers. is ( true ) )
[2]: org. junit. assert. assertarrayequals ( expected, json )
[3]: org. junit. assert. assertequals ( 1, routeupdate. getroutes4 ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, routingmanager. getroutes4 ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , result )
[0]: org. junit. assert. assertequals ( 1, victimmanager. getroutes4 ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, ribmanager. getroutes4 ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, queueupdate. getroutes4 ( ). size ( ) )
[3]: org. junit. assert. assertequals ( fullstr, link. tostring ( ) )
[4]: org. junit. assert. assertequals ( variantstr, link. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( validator , convertedvalidator )
[0]: org. junit. assert. assertequals ( idstr, link. tostring ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( idstr ), link. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( idstr ), link. tostring ( ) )
[3]: org. junit. assert. assertarrayequals ( assertion, eval )
[4]: org. junit. assert. assertequals ( 1, samplemodel. getnumbands ( ) )

************

************
tgt: org . junit . assert . asserttrue ( workflowinstance . isended ( ) )
[0]: org. junit. assert. assertequals ( 2, samplemodel. getnumbands ( ) )
[1]: org. junit. assert. assertequals ( 0, samplemodel. getnumbands ( ) )
[2]: org. junit. assert. assertequals ( 3, samplemodel. getnumbands ( ) )
[3]: org. junit. assert. assertequals ( 4, samplemodel. getnumbands ( ) )
[4]: org. junit. assert. assertequals ( 1, categoriesandthreadscount )

************

************
tgt: org . junit . assert . assertequals ( 0 , cfis . available ( ) )
[0]: org. junit. assert. assertequals ( 0, categoriesandthreadscount )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( expected, actual. tobag ( ) )
[3]: org. junit. assert. assertnotnull ( release )
[4]: org. junit. assert. assertequals ( null, release )

************

************
tgt: org . junit . assert . assertnotnull ( dao . findbgs ( ) )
[0]: org. junit. assert. assertnull ( release )
[1]: , release )
[2]: ) )
[3]: org. junit. assert. assertequals ( expectedjson, generatedjson )
[4]: org. junit. assert. assertthat ( generatedjson, is ( expectedjson ) )

************

************
tgt: org . junit . assert . assertequals ( 200 , status )
[0]: org. junit. assert. assertequals ( resultjson, generatedjson )
[1]: org. junit. assert. assertequals ( actualjson, generatedjson )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( stub. method_1 ( ) )
[4]: org. junit. assert. assertnotnull ( stub. method_0 ( ) )

************

************
tgt: org . junit . assert . assertsame ( point , front . getpoint ( 0 ) )
[0]: org. junit. assert. assertnotnull ( stub. methods ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertnotnull ( setupok )
[4]: org. junit. assert. assertequals ( 1, setupok )

************

************
tgt: org . junit . assert . assertsame ( dt . tolocaltime ( ) , t )
[0]: org. junit. assert. assertequals ( true, setupok )
[1]: org. junit. assert. asserttrue ( setupok )
[2]: ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class. getname ( ), item. getname ( ) )
[4]: org. junit. assert. assertequals ( org. apache. commons. lang. string. class, item. getname ( ) )

************

************
tgt: org . junit . assert . assertnull ( getsubclass ( ( ( java . lang . class < ? > ) ( null ) ) ) )
[0]: org. junit. assert. assertequals ( null, item. getname ( ) )
[1]: org. junit. assert. assertequals ( ""test"", item. getname ( ) )
[2]: org. junit. assert. assertequals ( string, item. getname ( ) )
[3]: org. junit. assert. assertnotnull ( metric. getentityclass ( ) )
[4]: org. junit. assert. assertequals ( template. getentityclass ( ), entityclass )

************

************
tgt: org . junit . assert . assertfalse ( p . equals ( t ) )
[0]: org. junit. assert. assertnotnull ( converter. getentityclass ( ) )
[1]: org. junit. assert. assertequals ( expected, actual. getentityclass ( ) )
[2]: org. junit. assert. assertequals ( template. getentityclass ( ), entityclass
[3]: org. junit. assert. assertequals ( 1, result. getproperties ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, result. getproperties ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( ref . get ( ) . getdestination ( ) )
[0]: org. junit. assert. assertequals ( contentbody, result. getproperties ( ) )
[1]: org. junit. assert. assertequals ( contentbody, result. getproperties ( ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, p. gettargetoffset ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( s ), p. gettargetoffset ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , events . length )
[0]: org. junit. assert. assertequals ( 0, p. gettargetoffset ( ) )
[1]: org. junit. assert. assertequals ( p. gettargetoffset ( ), 2 )
[2]: org. junit. assert. assertequals ( 3, p. gettargetoffset ( ) )
[3]: org. junit. assert. assertequals ( s, itemsets )
[4]: org. junit. assert. assertequals ( s, result )

************

************
tgt: org . junit . assert . assertthat ( ret . issuccess ( ) , org . hamcrest . core . is . is ( true ) )
[0]: org. junit. assert. assertequals ( s, list )
[1]: org. junit. assert. assertequals ( s, items )
[2]: org. junit. assert. assertequals ( results. size ( ), 0 )
[3]: org. junit. assert. assertequals ( parentartifactid, instance. getparentartifactid ( ) )
[4]: org. junit. assert. asserttrue ( instance. getparentartifactid ( ). contains ( parentartifactid ) )

************

************
tgt: org . junit . assert . assertfalse ( logicallyinsert )
[0]: org. junit. assert. asserttrue ( instance. getparentartifactid ( ). isempty ( ) )
[1]: org. junit. assert. asserttrue ( instance. getparentartifactid ( ). equals ( parentartifactid ) )
[2]: org. junit. assert. assertsame ( parentartifactid, instance. getparentartifactid ( ) )
[3]: org. junit. assert. assertfalse ( flownodetransitionswrapper. hasmultipleincomingtransitions ( ) )
[4]: org. junit. assert. assertnull ( context. getwarnings ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedtokeninfo , tokens )
[0]: org. junit. assert. assertnull ( builder. getwarnings ( ) )
[1]: org. junit. assert. assertnull ( queue. getwarnings ( ) )
[2]: org. junit. assert. assertnull ( root. getwarnings ( ) )
[3]: org. junit. assert. assertnotnull ( context. getwarnings ( ) )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertnotnull ( injector )
[0]: org. junit. assert. assertequals ( 1, color. getlowgreen ( ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 255 ), color. getlowgreen ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 255 ), color. getlowgreen ( ) )
[3]: org. junit. assert. assertequals ( 1, color. getlowgreen ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, color. getlowgreen ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 1, operation. operations. size )
[1]: org. junit. assert. assertnotnull ( operation )
[2]: org. junit. assert. assertequals ( 0, operation. operations. size )
[3]: org. junit. assert. assertequals ( 1, operation. count )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( treemodel )
[0]: org. junit. assert. assertequals ( idx, idalternatives. get ( 0 ). size ( ) )
[1]: org. junit. assert. assertequals ( idx, idalternatives. get ( 1 ). size ( ) )
[2]: org. junit. assert. assertequals ( idx, idalternatives. get ( 0 ) )
[3]: org. junit. assert. assertequals ( idx, idalternatives. get ( 1 ) )
[4]: org. junit. assert. assertequals ( idx, idalternatives. get ( 0 ). getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( result , expected )
[0]: org. junit. assert. assertequals ( filethatdoesntexist, originalfile )
[1]: org. junit. assert. assertnotnull ( filethatdoesntexist )
[2]: org. junit. assert. assertequals ( filethatdoesntexist, origfile )
[3]: org. junit. assert. assertnotnull ( originalfile )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( exp , out )
[0]: org. junit. assert. assertnotnull ( dbdialectclass )
[1]: org. junit. assert. assertequals ( org. apache. hadoop. conf. db. operation. hsql. hsqldeleteoperation. class, dbdialectclass )
[2]: org. junit. assert. assertequals ( java. util. list. class, dbdialectclass )
[3]: org. junit. assert. assertequals ( java. util. properties. class, dbdialectclass )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( previous )
[0]: org. junit. assert. assertarrayequals ( new long [ ] { 1l, 2l }, arr )
[1]: org. junit. assert. assertarrayequals ( new long [ ] { 1l, 1l }, arr )
[2]: org. junit. assert. assertarrayequals ( new long [ ] { 1l }, arr )
[3]: org. junit. assert. assertarrayequals ( new long [ ] { 0l, 1l }, arr )
[4]: org. junit. assert. assertequals ( 0, arr. length )

************

************
tgt: org . junit . assert . assertfalse ( doc . updatemetacharsetelement ( ) )
[0]: org. junit. assert. assertnull ( resultsq )
[1]: org. junit. assert. assertequals ( null, resultsq )
[2]: org. junit. assert. assertnotnull ( resultsq )
[3]: org. junit. assert. assertequals ( 0, resultsq )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( resultaatstap )
[0]: org. junit. assert. assertequals ( ( before - 1 ), nodecount )
[1]: org. junit. assert. assertequals ( null, gf. getbuildscript ( ) )
[2]: org. junit. assert. assertequals ( 1, gf. getbuildscript ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( gf. getbuildscript ( ) )
[4]: org. junit. assert. assertequals ( 0, gf. getbuildscript ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( p1 . equals ( p2 ) )
[0]: org. junit. assert. assertequals ( null, gf. getbuildscript ( ). get ( ) )
[1]: org. junit. assert. asserttrue ( classundertest. removedocuments ( new java. lang. string [ ] { } ) )
[2]: org. junit. assert. asserttrue ( classundertest. removedocuments ( new java. lang. string [ 1 ] ) )
[3]: org. junit. assert. asserttrue ( classundertest. removedocuments ( new java. lang. string [ ] { 20 } ) )
[4]: org. junit. assert. asserttrue ( classundertest. removedocuments ( new java. lang. string [ ] { 1 } ) )

************

************
tgt: org . junit . assert . assertequals ( "" , r )
[0]: org. junit. assert. asserttrue ( classundertest. removedocuments ( new java. lang. string [ 0 ] ) )
[1]: org. junit. assert. assertequals ( expectedelementlist, sel )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( expectedelementlist ), sel )
[3]: org. junit. assert. assertequals ( new java. util. arraylist ( expectedelementlist ), sel )
[4]: org. junit. assert. assertequals ( 1, sel. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , terms )
[0]: org. junit. assert. assertequals ( list, expectedelementlist )
[1]: org. junit. assert. assertequals ( resolver, factory. createvariable ( name, resolver ) )
[2]: org. junit. assert. assertequals ( resolver, factory. createvariable ( ""name"", null ) )
[3]: org. junit. assert. assertequals ( resolver, factory. createvariable ( null, resolver ) )
[4]: org. junit. assert. assertequals ( resolver, factory. createvariable ( ""name"", resolver ) )

************

************
tgt: org . junit . assert . assertequals ( text , expected )
[0]: org. junit. assert. assertequals ( resolver )
[1]: org. junit. assert. assertnull ( service. cleanuptext ( null ) )
[2]: org. junit. assert. assertnull ( service. cleanuptext ( """" ) )
[3]: org. junit. assert. assertnull ( service. cleanuptext ( ""0"" ) )
[4]: org. junit. assert. assertnotnull ( service. cleanuptext ( null ) )

************

************
tgt: org . junit . assert . assertthat ( target . matchexactly ( flow ) , org . hamcrest . corematchers . is ( false ) )
[0]: ) )
[1]: org. junit. assert. assertthat ( text ( contents ), is ( null ) )
[2]: org. junit. assert. assertthat ( text ( contents ), is ( 0 ) )
[3]: org. junit. assert. assertthat ( text ( contents ), is ( true ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( animationmonitor . istriggered ( ) )
[0]: output )
[1]: org. junit. assert. asserttrue ( deleted )
[2]: org. junit. assert. asserttrue ( delete )
[3]: org. junit. assert. asserttrue ( removed )
[4]: , deleted )

************

************
tgt: org . junit . assert . assertsame ( locale . uk , locale )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, pathes. size ( ) )
[2]: org. junit. assert. assertequals ( 0, pathes. size ( ) )
[3]: org. junit. assert. assertequals ( 1, pathses. size ( ) )
[4]: org. junit. assert. asserttrue ( event. iscancelled ( ) )

************

************
tgt: org . junit . assert . assertthat ( toolchains . entryset ( ) , org . hamcrest . matchers . empty ( ) )
[0]: org. junit. assert. assertequals ( 1, c. number ( ) )
[1]: org. junit. assert. assertequals ( 0, c. number ( ) )
[2]: org. junit. assert. assertequals ( 3, c. number ( ) )
[3]: org. junit. assert. assertequals ( 1l, c. number ( ) )
[4]: org. junit. assert. assertequals ( 1, overtreders. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( false , result )
[0]: org. junit. assert. assertequals ( 0, org. apache. zeppelin. server. corsfiltertest. count )
[1]: org. junit. assert. assertequals ( 0l, org. apache. zeppelin. server. corsfiltertest. count )
[2]: org. junit. assert. assertequals ( 0, log. count )
[3]: org. junit. assert. assertequals ( 0 )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , dao . count ( org . nutz . dao . test . meta . pet . class ) )
[0]: org. junit. assert. assertequals ( orgfoofriendlyurl, meta. getvalue ( org. apache. ibatis. reflection. systemmetaobject. class ) )
[1]: org. junit. assert. assertequals ( null, meta. getvalue ( org. apache. ibatis. reflection. systemmetaobject. class ) )
[2]: org. junit. assert. assertequals ( orgfoobot, meta. getvalue ( org. apache. ibatis. reflection. systemmetaobject. class ) )
[3]: org. junit. assert. assertequals ( ""foo_2, meta. getvalue ( ""bar"" ) )
[4]: org. junit. assert. assertequals ( null, meta. getvalue ( org. apache. ibatis. reflection. metaobject. class ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( false ) )
[0]: org. junit. assert. assertfalse ( iterator. hasnext ( ) )
[1]: org. junit. assert. assertequals ( false, iterator. hasnext ( ) )
[2]: org. junit. assert. asserttrue ( iterator. hasnext ( ) )
[3]: org. junit. assert. assertnull ( iterator. hasnext ( ) )
[4]: org. junit. assert. assertfalse ( iterator. hasnext ( ) ) ;

************

************
tgt: org . junit . assert . asserttrue ( instanceconstraintviolationslist . tostring ( ) , ( ( instanceconstraintviolationslist . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertequals ( 1, d )
[1]: org. junit. assert. assertequals ( 0, d )
[2]: org. junit. assert. assertequals ( 3, d )
[3]: org. junit. assert. assertequals ( 9, d )
[4]: org. junit. assert. assertequals ( 1, d ) ;

************

************
tgt: org . junit . assert . assertsame ( expected , actual )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( com. vaadin. ui. component. get ( ). getvalue ( ) ), contentonlyonserver. get ( ) )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( com. vaadin. ui. component. get ( ) ), contentonlyonserver. get ( ) )
[2]: org. junit. assert. assertnull ( contentonlyonserver. get ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( com. vaadin. ui. component. get ( ) ), contentonlyonserver. get ( ). getstring ( ) )
[4]: org. junit. assert. assertequals ( null, contentonlyonserver. get ( ) )

************

************
tgt: org . junit . assert . assertthat ( conventionaware . getconventionvalue ( null , "list1" , false ) , org . hamcrest . matchers . equalto ( ( ( java . lang . object ) ( tolist ( "a" ) ) ) ) )
[0]: org. junit. assert. assertequals ( 1, numberoffriends )
[1]: org. junit. assert. assertequals ( 0, numberoffriends )
[2]: org. junit. assert. assertequals ( 3, numberoffriends )
[3]: org. junit. assert. asserttrue ( r. equals ( r ) )
[4]: org. junit. assert. assertfalse ( r. equals ( r ) )

************

************
tgt: org . junit . assert . assertnotnull ( wrap )
[0]: org. junit. assert. assertfalse ( r. equals ( null ) )
[1]: org. junit. assert. assertequals ( true, r. equals ( r ) )
[2]: org. junit. assert. assertequals ( true, r. equals ( r. geometry ( ) ) )
[3]: org. junit. assert. assertequals ( 1, testrepprop. size ( ) )
[4]: org. junit. assert. assertequals ( 0, testrepprop. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . core . is . is ( "failure" ) )
[0]: org. junit. assert. assertequals ( testrepprop, testrepprop )
[1]: org. junit. assert. assertequals ( 2, testrepprop. size ( ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( validator. ismatching ( null ) )
[4]: org. junit. assert. asserttrue ( org. apache. flink. runtime. clusterframework. types. resourceprofile. ismatching ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( match )
[0]: org. junit. assert. asserttrue ( validator. ismatching ( testidentification ) )
[1]: org. junit. assert. asserttrue ( rule. ismatching ( null ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( l1, reference. ascnf ( ) )
[4]: org. junit. assert. assertequals ( 1, reference. ascnf ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult . get ( i ) . tostring ( ) , result . tostring ( ) )
[0]: org. junit. assert. assertequals ( 0, reference. ascnf ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, reference. ascnf ( ). count ( ) )
[2]: org. junit. assert. assertequals ( reference, reference. ascnf ( ) )
[3]: org. junit. assert. assertequals ( expected, tr )
[4]: org. junit. assert. assertequals ( 1, tr. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( vxkeyact )
[0]: org. junit. assert. assertequals ( expected, tr. size ( ) )
[1]: org. junit. assert. assertequals ( expected )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, decoded. content ( ). length )
[4]: org. junit. assert. assertequals ( """", decoded. content ( ) )

************

************
tgt: org . junit . assert . assertequals ( "abc" , out )
[0]: org. junit. assert. assertequals ( 0, decoded. content ( ) )
[1]: org. junit. assert. assertnull ( decoded. content ( ) )
[2]: org. junit. assert. assertequals ( null, decoded. content ( ) )
[3]: org. junit. assert. assertequals ( ( ( byte ) ( 0 ) ), buffer. newbuffer ( 0 ) )
[4]: org. junit. assert. assertequals ( ( ( byte ) ( 0 ) ), buffer )

************

************
tgt: org . junit . assert . assertnotnull ( code )
[0]: org. junit. assert. assertequals ( ( ( byte ) ( 0 ) ), buffer.odata ( 0 ) )
[1]: org. junit. assert. assertequals ( ( ( byte ) ( 0 ) ), buffer.odata )
[2]: org. junit. assert. assertequals ( ( ( byte ) ( 0 ) ), buffer. relation ( 0 ) )
[3]: org. junit. assert. assertequals ( 1, jsonlist. size ( ) )
[4]: org. junit. assert. assertequals ( 0, jsonlist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 7 , received . get ( ) )
[0]: org. junit. assert. assertequals ( 3, jsonlist. size ( ) )
[1]: org. junit. assert. assertequals ( 1, jsonobjectlist. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, response. getstatus ( ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), response. getstatus ( ) )

************

************
tgt: org . junit . assert . assertthat ( innerchunks , org . hamcrest . corematchers . is ( expectedinner ) )
[0]: org. junit. assert. assertequals ( 0, response. getstatus ( ) )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), response. getstatus ( ) )
[2]: org. junit. assert. assertequals ( null, response. getstatus ( ) )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . asserttrue ( activerecord . isvalid ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert.null ( result )
[2]: ) )
[3]: org. junit. assert. assertequals ( bounds, bounds. getheaderheight ( ) )
[4]: org. junit. assert. assertnotnull ( bounds. getheaderheight ( ) )

************

************
tgt: org . junit . assert . assertnull ( repository . createrepositorydirectory ( treemocked , newdirectory ) . getpath ( ) )
[0]: org. junit. assert. assertequals ( bounds, tree. getheaderheight ( ) )
[1]: org. junit. assert. assertequals ( bounds. getheaderheight ( ), bounds )
[2]: org. junit. assert. assertnotnull ( bounds )
[3]: org. junit. assert. assertequals ( 1, countnodes ( database ) )
[4]: org. junit. assert. assertequals ( 0, countnodes ( database ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , overtreders . size ( ) )
[0]: org. junit. assert. assertequals ( 3, countnodes ( database ) )
[1]: the countnodes ( database ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertthat ( rendered , org . hamcrest . corematchers . is ( test [ 1 ] ) )
[0]: org. junit. assert. assertnotnull ( id )
[1]: org. junit. assert. assertnotnull ( list )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( node. getieeeaddress ( ) )
[4]: org. junit. assert. assertequals ( 1, node. getieeeaddress ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( pb . getconfiguration ( ) )
[0]: org. junit. assert. assertequals ( 5, node. getieeeaddress ( ) )
[1]: org. junit. assert. assertequals ( 0, node. getieeeaddress ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( fullsize, haseffect ( fullsize, oplist ) )
[4]: org. junit. assert. assertequals ( fullsize, instance. haseffect ( fullsize, oplist ) )

************

************
tgt: org . junit . assert . assertequals ( this . expectedinputsplit , kafkainputsplit )
[0]: org. junit. assert. assertnull ( instance. haseffect ( fullsize, oplist ) )
[1]: org. junit. assert. assertnull ( fullsize. haseffect ( fullsize, oplist ) )
[2]: org. junit. assert. assertequals ( fullsize, foundffect ( fullsize, oplist ) )
[3]: org. junit. assert. assertequals ( 0, result. isempty ( ) )
[4]: org. junit. assert. assertequals ( true, result. isempty ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( hz )
[0]: org. junit. assert. assertequals ( 1, result. isempty ( ) )
[1]: org. junit. assert. assertequals ( false, result. isempty ( ) )
[2]: org. junit. assert. assertthat ( composed, com. spotify. futures. completablefuturestest. completesto ( null ) )
[3]: org. junit. assert. assertthat ( composed, com. spotify. futures. completablefuturestest. completesto ( system ) )
[4]: org. junit. assert. assertthat ( composed, com. spotify. futures. completablefuturestest. completesto ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertthat ( composed, org. hamcrest. matchers. is ( fallback ) )
[1]: org. junit. assert. assertnotnull ( composed )
[2]: org. junit. assert. assertequals ( org. jacoco. core. internal. analysis. counterimpl. getinstance ( 1, 1 ), complexity )
[3]: org. junit. assert. assertequals ( org. jacoco. core. internal. analysis. counterimpl. getinstance ( 1, 2 ), complexity )
[4]: org. junit. assert. assertequals ( org. jacoco. core. internal. analysis. counterimpl. getinstance ( 0, 1 ), complexity )

************

************
tgt: org . junit . assert . assertequals ( new org . finra . herd . model . api . xml . relationaltableregistrationcreaterequest ( bdef_namespace , bdef_name , no_bdef_display_name , format_usage_code , data_provider_name , relational_schema_name , relational_table_name , storage_name ) , relationaltableregistrationcreaterequest )
[0]: org. junit. assert. assertequals ( org. jacoco. core. internal. analysis. counterimpl. getinstance ( 1, 0 ), complexity )
[1]: org. junit. assert. assertequals ( org. jacoco. core. internal. analysis. counterimpl. getinstance ( 2, 1 ), complexity )
[2]: org. junit. assert. asserttrue ( dependent. isalive ( ) )
[3]: org. junit. assert. assertfalse ( dependent. isalive ( ) )
[4]: org. junit. assert. asserttrue ( dependency. isalive ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , ( thevalue | 2 ) , 0 )
[0]: org. junit. assert. assertfalse ( service. isalive ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( bytes [ i ], i )
[3]: org. junit. assert. assertequals ( true, failed. isempty ( ) )
[4]: org. junit. assert. assertnotnull ( resmap. getresreader ( ) )

************

************
tgt: org . junit . assert . assertthat ( evaluator . evaluate ( corc ) , org . hamcrest . corematchers . is ( truthvalue . null ) )
[0]: org. junit. assert. assertnull ( resmap. getresreader ( ) )
[1]: org. junit. assert. assertequals ( 0, resmap. getresreader ( ). length )
[2]: org. junit. assert. assertequals ( 1, resmap. getresreader ( ). length )
[3]: org. junit. assert. assertequals ( 0, resmap. getresreader ( ). size ( )
[4]: org. junit. assert. assertnotnull ( form. get ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . asserttrue ( received )
[0]: org. junit. assert. assertnotnull ( form. get ( 0 ) )
[1]: org. junit. assert. assertnull ( form. get ( java. lang. string. class ) )
[2]: org. junit. assert. assertequals ( 1, form. get ( 0 ). size ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( another. getjgiteventsbroadcast ( ) )

************

************
tgt: org . junit . assert . assertnull ( existingsocialactivityset )
[0]: org. junit. assert. assertequals ( ( - 1 ), another. getjgiteventsbroadcast ( ) )
[1]: org. junit. assert. assertequals ( 1, another. getjgiteventsbroadcast ( ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. asserttrue ( result )

************

************
tgt: org . junit . assert . assertequals ( false , prehandle )
[0]: org. junit. assert. assertthat ( docs. size ( ), org. hamcrest. matchers. is ( 1 ) )
[1]: org. junit. assert. assertthat ( docs. size ( ), org. hamcrest. core. is. is ( 1 ) )
[2]: org. junit. assert. assertnotnull ( lemmatiserdatadirectory )
[3]: org. junit. assert. assertequals ( 1, lemmatiserdatadirectory. exists ( ) )
[4]: org. junit. assert. assertequals ( 1, lemmatiserdatadirectory. length ( ) )

************

************
tgt: org . junit . assert . asserttrue ( cn . hutool . core . collection . collutil . isnotempty ( all ) )
[0]: org. junit. assert. assertnotnull ( lemmatiserdatadirectory. exists ( ) )
[1]: org. junit. assert. assertequals ( 1, lemmatiserdatadirectory. delete ( ) )
[2]: org. junit. assert. assertequals ( """", path. tostring ( ) )
[3]: org. junit. assert. assertnull ( path. tostring ( ) )
[4]: org. junit. assert. asserttrue ( path. tostring ( ). isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , parseresult . size ( ) )
[0]: org. junit. assert. assertnotnull ( path. tostring ( ) )
[1]: org. junit. assert. assertequals ( 0, path. tostring ( ). length )
[2]: org. junit. assert. assertnotnull ( highwayverticle )
[3]: org. junit. assert. assertnotnull ( highwayverticle. output )
[4]: org. junit. assert. assertequals ( endpoint, highwayverticle. output )

************

************
tgt: org . junit . assert . asserttrue ( dlnbase . equals ( reconstructeddln ) )
[0]: org. junit. assert. assertequals ( endpoint, highwayverticle. stream )
[1]: org. junit. assert. assertequals ( endpoint, highwayverticle. context )
[2]: org. junit. assert. assertnotnull ( content. trim ( ) )
[3]: org. junit. assert. assertnotnull ( content. tostring ( ). trim ( ) )
[4]: org. junit. assert. assertnotnull ( content. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( columninfolistwithnull , fromconfig )
[0]: org. junit. assert. assertnotnull ( content )
[1]: org. junit. assert. assertequals ( 10, content. trim ( ). length )
[2]: org. junit. assert. assertequals ( 0, new java. lang. long ( ( ( byte ) ( 10 ) ) ). hashcode ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, new java. lang. string ( ( ( byte ) ( 10 ) ) ). hashcode ( ) )
[4]: org. junit. assert. assertnotnull ( new java. lang. long ( ( ( byte ) ( 10 ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( actual , expected )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnull ( t1. tostring ( ) )
[3]: org. junit. assert. assertequals ( null, t1. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( t1. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( this . repository , this . wagon . getrepository ( ) )
[0]: org. junit. assert. assertequals ( 0, t1. tostring ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( i, org. apache. openjpa. lib. util. svn. svnutils. svninfotointeger ( i ) )
[3]: org. junit. assert. assertequals ( i, org. apache. openjpa. lib. util. svn. svnutils. svninfotointeger ( ( i + 1 ) ) )
[4]: org. junit. assert. assertequals ( i, org. apache. openjpa. lib. util. svn. svnutils. svninfotointeger ( j ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( i, org. apache. openjpa. lib. util. svn. svnutils. svninfotointeger ( java. lang. string. class ) )
[1]: ) )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertnull ( err )
[4]: org. junit. assert. assertequals ( 0, result. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( uisession , event . getuisession ( ) )
[0]: org. junit. assert. assertequals ( 0, result )
[1]: ) )
[2]: org. junit. assert. assertequals ( uri, u )
[3]: org. junit. assert. assertequals ( uris, u )
[4]: org. junit. assert. assertnotnull ( u )

************

************
tgt: org . junit . assert . assertequals ( expecting , result )
[0]: org. junit. assert. assertequals ( ur, u )
[1]: org. junit. assert. assertequals ( url, u )
[2]: org. junit. assert. assertthat ( response, org. hamcrest. matchers. is ( status. im_a_teapot ) )
[3]: org. junit. assert. assertthat ( response. status ( ), org. hamcrest. matchers. is ( 200 ) )
[4]: org. junit. assert. assertthat ( response. size ( ), org. hamcrest. matchers. is ( 5 ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( message . getoperationcount ( ) ) > 0 ) )
[0]: org. junit. assert. assertnotnull ( response )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, column. getmoveable ( ) )
[3]: org. junit. assert. assertequals ( null, view. gettheme ( ) )
[4]: org. junit. assert. assertnotnull ( view. gettheme ( ) )

************

************
tgt: org . junit . assert . asserttrue ( session . isconnected ( ) )
[0]: org. junit. assert. assertnull ( view. gettheme ( ) )
[1]: org. junit. assert. assertequals ( 1, view. gettheme ( ) )
[2]: _1 ) )
[3]: org. junit. assert. assertequals ( 0, status )
[4]: org. junit. assert. assertequals ( 1, status )

************

************
tgt: org . junit . assert . asserttrue ( ( ( exceptionhandler . getlastthrowable ( ) ) == failure ) )
[0]: org. junit. assert. assertequals ( 4, status )
[1]: org. junit. assert. assertequals ( 200, status )
[2]: org. junit. assert. asserttrue ( ( status == 0 )
[3]: org. junit. assert. assertequals ( f4, mod )
[4]: org. junit. assert. assertequals ( buch, mod )

************

************
tgt: org . junit . assert . assertequals ( 2 , result . getruncount ( ) )
[0]: org. junit. assert. assertequals ( f4, test4 )
[1]: org. junit. assert. assertequals ( buch, test4 )
[2]: org. junit. assert. assertequals ( f4, actual )
[3]: org. junit. assert. assertequals ( true, actual )
[4]: org. junit. assert. assertequals ( false, actual )

************

************
tgt: org . junit . assert . assertequals ( 0 , msg . getjmsexpiration ( ) )
[0]: org. junit. assert. assertequals ( 1, actual )
[1]: org. junit. assert. assertnotnull ( contents )
[2]: org. junit. assert. assertequals ( null, contents )
[3]: org. junit. assert. assertnull ( contents )
[4]: org. junit. assert. assertequals ( string, contents )

************

************
tgt: org . junit . assert . assertfalse ( action )
[0]: org. junit. assert. assertequals ( null, content )
[1]: org. junit. assert. assertequals ( json, notification. tojson ( ) )
[2]: org. junit. assert. assertequals ( json, notification. tojson ( ) )
[3]: public void tojson ( ) { }
[4]: public void open ( ) { }

************

************
tgt: org . junit . assert . assertequals ( 0 , folist . length )
[0]: ) )
[1]: org. junit. assert. assertequals ( null, score. get ( ) )
[2]: org. junit. assert. assertequals ( new java. lang. double ( 1 ), score. get ( ) )
[3]: org. junit. assert. assertequals ( new java. lang. double ( 1.0 ), score. get ( ) )
[4]: org. junit. assert. assertequals ( 1.0, score. get ( ), 0.0 )

************

************
tgt: org . junit . assert . assertequals ( expected . tostring ( ) , value )
[0]: . get ( ) )
[1]: org. junit. assert. assertequals ( 0, resolver. resolve ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), resolver. resolve ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), resolver. resolve ( ) )
[4]: org. junit. assert. assertequals ( null, resolver. resolve ( ) )

************

************
tgt: org . junit . assert . assertequals ( xmlesperado , icms900 . tostring ( ) )
[0]: type ) )
[1]: org. junit. assert. asserttrue ( e. getmessage ( ), true )
[2]: org. junit. assert. assertnotnull ( e )
[3]: org. junit. assert. asserttrue ( true )
[4]: org. junit. assert. asserttrue ( e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertnull ( shardserialization . loadshard ( shard1 ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( null, result. array ( ) )
[2]: org. junit. assert. assertequals ( new java. lang. string ( persistentstorage ), result )
[3]: org. junit. assert. assertequals ( null, result. get ( 0 ) )
[4]: org. junit. assert. assertequals ( null, result. stream ( ) )

************

************
tgt: org . junit . assert . assertequals ( c1 , c2 )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertfalse ( connection. isclosed ( ) )
[2]: org. junit. assert. assertfalse ( connections. isclosed ( ) )
[3]: org. junit. assert. assertfalse ( conn. isclosed ( ) )
[4]: org. junit. assert. asserttrue ( connection. isclosed ( ) )

************

************
tgt: org . junit . assert . assertequals ( len1 , len2 )
[0]: org. junit. assert. assertnull ( connection. isclosed ( ) )
[1]: org. junit. assert. assertequals ( suffix1, suffix2 )
[2]: org. junit. assert. assertequals ( prefix1, suffix2 )
[3]: org. junit. assert. assertequals ( suffix2, suffix1 )
[4]: org. junit. assert. assertequals ( suffix0, suffix2 )

************

************
tgt: org . junit . assert . assertnotnull ( ksession )
[0]: org. junit. assert. assertequals ( suffix 1, suffix2 )
[1]: org. junit. assert. assertequals ( symbol, edge. getstate ( ) )
[2]: org. junit. assert. assertequals ( state, edge. getstate ( ). get ( ) )
[3]: org. junit. assert. assertnotnull ( content )
[4]: org. junit. assert. assertequals ( ""a"", content )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( ""foo"", content )
[1]: org. junit. assert. assertequals ( ""test"", content )
[2]: org. junit. assert. assertequals ( """", content )
[3]: org. junit. assert. assertequals ( 1, count. get ( ) )
[4]: org. junit. assert. assertequals ( 2, count. get ( ) )

************

************
tgt: org . junit . assert . assertthat ( org . slim3 . tester . headerutil . convertstringtodate ( null ) , org . hamcrest . corematchers . is ( ( - 1l ) ) )
[0]: org. junit. assert. assertequals ( 1, count. size ( ) )
[1]: org. junit. assert. assertequals ( 1, count. intvalue ( ) )
[2]: org. junit. assert. assertequals ( 1, count. gets ( ) )
[3]: org. junit. assert. asserttrue ( p. contains ( 1, 1 ) )
[4]: org. junit. assert. asserttrue ( p. contains ( p, 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( org . mapdb . elsa . arrays . equals ( l , ( ( double [ ] ) ( deserialize ) ) ) )
[0]: org. junit. assert. assertfalse ( p. contains ( 1, 1 ) )
[1]: org. junit. assert. assertequals ( true, p. contains ( 1, 1 ) )
[2]: org. junit. assert. assertnotnull ( exp )
[3]: org. junit. assert. assertnotnull ( exp. currenttimestamp ( ) )
[4]: org. junit. assert. assertequals ( exp, exp )

************

************
tgt: org . junit . assert . assertthat ( utc . getnanosecond ( timescale . gps ) , org . hamcrest . corematchers . is ( 123456789 ) )
[0]: org. junit. assert. assertequals ( null, exp )
[1]: org. junit. assert. assertnull ( exp )
[2]: org. junit. assert. assertequals ( 1, victim. get ( 1 ). get ( ) )
[3]: org. junit. assert. assertequals ( 1, victim. get ( 1 ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, victim. get ( 1 ). length )

************

************
tgt: org . junit . assert . assertequals ( pair , exchaccount . getcurrencypair ( ) )
[0]: org. junit. assert. assertequals ( 1, victim. get ( 1 ). tostring ( ) )
[1]: org. junit. assert. assertequals ( null, victim. get ( 1 ) )
[2]: org. junit. assert. assertfalse ( jsonparam. equals ( jsonobject ) )
[3]: org. junit. assert. assertequals ( true, building )
[4]: org. junit. assert. assertequals ( false, building )

************

************
tgt: org . junit . assert . asserttrue ( readded )
[0]: org. junit. assert. assertnotnull ( password )
[1]: org. junit. assert. assertnull ( password )
[2]: org. junit. assert. assertequals ( string, password )
[3]: , password )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( result , buf . tostring ( ) )
[0]: org. junit. assert. assertequals ( true, cli. isconnected ( ) )
[1]: org. junit. assert. assertequals ( false, cli. isconnected ( ) )
[2]: org. junit. assert. assertequals ( 1, rootel. getnodename ( ). size ( ) )
[3]: org. junit. assert. assertequals ( null, rootel. getnodename ( ) )
[4]: org. junit. assert. assertequals ( 0, rootel. getnodename ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( violated )
[0]: org. junit. assert. assertequals ( 1, rootel. getnodename ( ) )
[1]: org. junit. assert. assertequals ( 1, rootel. getnodename ( ). get ( ) )
[2]: org. junit. assert. assertequals ( expected, actual. issame ( expected ) )
[3]: org. junit. assert. assertequals ( expected, actual. issame ( actual ) )
[4]: org. junit. assert. assertequals ( expected. issame ( actual ), actual. issame ( expected ) )

************

************
tgt: org . junit . assert . assertequals ( "entering<sp>test<sp>ldapconfigupdateloginpropertytest" 4 , com . ibm . ws . security . wim . adapter . ldap . fat . ldapregistrydynamicupdatetest . servlet . getuserdisplayname ( "entering<sp>test<sp>ldapconfigupdateloginpropertytest" 9 ) )
[0]: org. junit. assert. assertequals ( expected. issame ( actual ), expected. issame ( actual ) )
[1]: org. junit. assert. assertequals ( expected. issame ( actual ), actual. issame ( null ) )
[2]: org. junit. assert. assertequals ( true, exists ( ) )
[3]: org. junit. assert. asserttrue ( exists ( ) )
[4]: org. junit. assert. assertequals ( true, exist ( ) )

************

************
tgt: org . junit . assert . assertthat ( provider . inheritable ( ) , org . hamcrest . core . is . is ( false ) )
[0]: org. junit. assert. assertnotnull ( exists ( ) )
[1]: ) )
[2]: org. junit. assert. assertthat ( coresimulatorservicecontroller. killsimulatorprocesses ( ), org. hamcrest. matchers. is ( expected ) )
[3]: org. junit. assert. assertthat ( coresimulatorservicecontroller. killsimulatorprocesses ( ), org. hamcrest. matchers. is ( true ) )
[4]: org. junit. assert. assertthat ( coresimulatorservicecontroller, org. hamcrest. matchers. is ( org. hamcrest. matchers. equalto ( expected ) ) )

************

************
tgt: org . junit . assert . assertequals ( this . newmultimapwithkeysvalues ( "two" , 2 , "two" , 3 ) , selectedmultimap )
[0]: org. junit. assert. assertthat ( coresimulatorservicecontroller )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected, totest. getentity ( ) )
[3]: org. junit. assert. assertequals ( expected, totest )
[4]: org. junit. assert. assertequals ( expect, totest. getentity ( ) )

************

************
tgt: org . junit . assert . assertthat ( org . batfish . datamodel . ipprotocol . fromstring ( ipprotocol . name ( ) ) , org . hamcrest . matchers . equalto ( ipprotocol ) )
[0]: org. junit. assert. assertequals ( expected, totest. getentity )
[1]: org. junit. assert. assertequals ( expected, totest. getentity ( ) )
[2]: org. junit. assert. assertequals ( id, id )
[3]: org. junit. assert. assertequals ( id, templates. getid ( ) )
[4]: org. junit. assert. assertequals ( id, result. getid ( ) )

************

************
tgt: org . junit . assert . asserttrue ( lockclient . locktableexists ( ) )
[0]: org. junit. assert. assertnotnull ( id )
[1]: ) )
[2]: org. junit. assert. asserttrue ( makeinjectedduckswim ( ) )
[3]: org. junit. assert. asserttrue ( makeinjectedinjectedduckswim ( ) )
[4]: org. junit. assert. asserttrue ( makeinjectedinjectedinjectedduckswim ( ) )

************

************
tgt: org . junit . assert . asserttrue ( e . getmessage ( ) . contains ( ( "" + ( org . sagebionetworks . repo . manager . table . tableviewmanagerimpl . max_columns_per_view ) ) ) )
[0]: org. junit. assert. asserttrue ( makeinjectedinjectedinjectedinjectedduckswim ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected, scopeprovider )
[3]: org. junit. assert. assertequals ( expected, scopeprovider. get ( ) )
[4]: org. junit. assert. assertequals ( expected, scopeprovider. get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( expectedinstance, scopeprovider. get ( ) )
[1]: org. junit. assert. assertequals ( expectedinstance, scopeprovider )
[2]: org. junit. assert. assertthat ( esssr. size ( ), org. hamcrest. corematchers. is ( 0 ) )
[3]: org. junit. assert. assertthat ( esssr. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[4]: org. junit. assert. assertnotnull ( messagingqos. getencrypt ( ) )

************

************
tgt: org . junit . assert . assertequals ( e . getkey ( ) . tostring ( ) , ( "/" + ( e . getvalue ( ) ) ) )
[0]: org. junit. assert. assertequals ( null, messagingqos. getencrypt ( ) )
[1]: org. junit. assert. assertequals ( 0l, messagingqos. getencrypt ( ) )
[2]: org. junit. assert. assertequals ( 1l, messagingqos. getencrypt ( ) )
[3]: org. junit. assert. assertequals ( messagingqos. getencrypt ( ), null )
[4]: null ), resolver )

************

************
tgt: org . junit . assert . asserttrue ( ( ( ( ( tasks . size ( ) ) == 10 ) && ( ( tasks . get ( 0 ) . getid ( ) ) == 5 ) ) && ( ( tasks . get ( ( ( tasks . size ( ) ) - 1 ) ) . getid ( ) ) == 50 ) ) )
[0]: null, resolver )
[1]: null ) )
[2]: null )
[3]: ) )
[4]: org. junit. assert. assertequals ( errors, actual )

************

************
tgt: org . junit . assert . assertequals ( 200 , response . getstatuscode ( ) )
[0]: org. junit. assert. assertnotnull ( actual )
[1]: org. junit. assert. assertnull ( actual )
[2]: org. junit. assert. assertequals ( errors, expected )
[3]: ) )
[4]: org. junit. assert. assertequals ( vol, result )

************

************
tgt: org . junit . assert . asserttrue ( localizedentries . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( vol, results )
[4]: org. junit. assert. assertequals ( 1, row. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( false , result )
[0]: org. junit. assert. assertnotnull ( row )
[1]: org. junit. assert. assertequals ( objects, row. size ( ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 0, errors. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertthat ( errors, org. hamcrest. corematchers. empty ( ) )
[1]: org. junit. assert. assertequals ( 1, errors. size ( ) )
[2]: org. junit. assert. assertnotnull ( errors )
[3]: ) )
[4]: org. junit. assert. assertnull ( com. puresoltechnologies. ductiledb. core. graph. schema. ductiledbschemamanagerit. schemamanager. getpropertydefinition ( elementtype. vertex, types1 ) )

************

************
tgt: org . junit . assert . assertequals ( expected . build ( ) , doc )
[0]: org. junit. assert. assertnull ( com. puresoltechnologies. ductiledb. core. graph. schema. ductiledbschemamanagerit. schemamanager. getpropertydefinition ( elementtype. vertex, types2 ) )
[1]: org. junit. assert. assertnull ( com. puresoltechnologies. ductiledb. core. graph. schema. ductiledbschemamanagerit. schemamanager. getpropertydefinition ( elementtype. vertex, types1. tostring ( ) ) )
[2]: org. junit. assert. assertnull ( com. puresoltechnologies. ductiledb. core. graph. schema. ductiledbschemamanagerit. schemamanager. getpropertydefinition ( elementtype. vertex, types2. tostring ( ) ) )
[3]: org. junit. assert. assertnotnull ( com. puresoltechnologies. ductiledb. core. graph. schema. ductiledbschemamanagerit. schemamanager. getpropertydefinition ( elementtype. vertex, types1 ) )
[4]: org. junit. assert. assertnotnull ( com. vmware. xenon. common. queryresultsprocessor. create ( new java. util. arraylist ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . short ( ( ( short ) ( 1 ) ) ) , t )
[0]: org. junit. assert. assertnotnull ( com. vmware. xenon. common. queryresultsprocessor. create ( collection ( ) ) )
[1]: org. junit. assert. assertnotnull ( com. vmware. xenon. common. queryresultsprocessor. create ( null ) )
[2]: org. junit. assert. assertnotnull ( com. vmware. xenon. common. queryresultsprocessor. create ( now ( ) ) )
[3]: org. junit. assert. assertnotnull ( com. vmware. xenon. common. queryresultsprocessor. create ( new java. net. file ( ) ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( functionname )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. assertequals ( 1, results. size ( ) )
[2]: org. junit. assert. assertequals ( 3, result. size ( ) )
[3]: org. junit. assert. assertequals ( 2, result. size ( ) )
[4]: org. junit. assert. assertnull ( bundlesymbolicname )

************

************
tgt: org . junit . assert . assertequals ( r , r2 )
[0]: org. junit. assert. assertnotnull ( bundlesymbolicname )
[1]: org. junit. assert. assertequals ( null, bundlesymbolicname )
[2]: org. junit. assert. assertequals ( attributes, bundlesymbolicname )
[3]: org. junit. assert. assertequals ( null, bundlesymbolicname )
[4]: org. junit. assert. assertequals ( 255, fixture. readvarint ( ) )

************

************
tgt: org . junit . assert . assertequals ( existinglayoutset , newlayoutset )
[0]: org. junit. assert. assertequals ( 0, fixture. readvarint ( ) )
[1]: org. junit. assert. assertequals ( 1, fixture. readvarint ( ) )
[2]: org. junit. assert. assertequals ( 8, fixture. readvarint ( ) )
[3]: org. junit. assert. assertequals ( 6, fixture. readvarint ( ) )
[4]: org. junit. assert. assertequals ( value, map )

************

************
tgt: org . junit . assert . assertequals ( "www.bing.com" , builder . host ( ) )
[0]: org. junit. assert. assertnotnull ( map )
[1]: org. junit. assert. assertsame ( value, map )
[2]: , map )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( actual. getuserdn ( ) )

************

************
tgt: org . junit . assert . assertthat ( array , org . hamcrest . corematchers . is ( new short [ ] { 2 , 3 , 5 , 7 } ) )
[0]: org. junit. assert. assertequals ( testdn, actual )
[1]: org. junit. assert. assertnotnull ( actual )
[2]: org. junit. assert. assertequals ( testdn, actual. getuserdn )
[3]: ) )
[4]: org. junit. assert. assertequals ( org. finra. herd. service. impl. business_object_data_value, e. getmessage ( ) )

************

************
tgt: org . junit . assert . asserttrue ( diditmatch . matches ( ) )
[0]: org. junit. assert. assertequals ( org. finra. herd. service. impl. business_object_data_string, e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( org. finra. herd. service. impl. business_object_data_name, e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( java. lang. object. class, e. getclass ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( path. makequalified ( path ), status. getpath ( ) )

************

************
tgt: org . junit . assert . assertnull ( resolver . resolve ( mockelement ) )
[0]: org. junit. assert. assertequals ( path. makequalified ( status ), status. getpath ( ) )
[1]: org. junit. assert. assertequals ( path. makequalified ( root ), status. getpath ( ) )
[2]: org. junit. assert. assertequals ( path. makequalified ( status. getpath ( ) ), status. getpath ( ) )
[3]: org. junit. assert. assertequals ( path. makequalified ( file ), status. getpath ( ) )
[4]: org. junit. assert. assertequals ( 1, sw. tostring ( ). length ( ) )

************

************
tgt: org . junit . assert . assertsame ( result , this . logger )
[0]: org. junit. assert. assertnotnull ( sw. tostring ( ) )
[1]: org. junit. assert. assertequals ( 1, sw. tostring ( ). length )
[2]: org. junit. assert. assertequals ( 1, sw. tostring ( ) )
[3]: org. junit. assert. assertequals ( 1, sw. tostring ( ). size ( ) )
[4]: org. junit. assert. assertequals ( l, s )

************

************
tgt: org . junit . assert . assertequals ( headers1 , headers2 )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertnull ( s )
[2]: org. junit. assert. assertequals ( s, l )
[3]: )
[4]: org. junit. assert. assertequals ( names, result )

************

************
tgt: org . junit . assert . assertequals ( 0 , branch_conditions . size ( ) )
[0]: org. junit. assert. assertequals ( results, names )
[1]: org. junit. assert. assertequals ( result, names )
[2]: org. junit. assert. assertequals ( list, result )
[3]: ) )
[4]: org. junit. assert. assertequals ( true, value. equals ( idx ) )

************

************
tgt: org . junit . assert . assertnull ( testmonitor . nocomponentfound ( tpc , key ) )
[0]: org. junit. assert. asserttrue ( value. equals ( idx ) )
[1]: org. junit. assert. asserttrue ( value. equals ( ( idx ++ ) ) )
[2]: org. junit. assert. assertequals ( t. equals ( ( idx ++ ) ), value )
[3]: org. junit. assert. assertequals ( ( idx == ( value. length ) ), true )
[4]: org. junit. assert. assertequals ( true, succeeded )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( key . getpubkey ( ) , keyonion ) )
[0]: org. junit. assert. assertequals ( 1, succeeded )
[1]: org. junit. assert. assertnotnull ( s )
[2]: org. junit. assert. asserttrue ( s. execute ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( s. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( resutl )
[0]: org. junit. assert. assertequals ( s. tostring ( ), ""a"" )
[1]: org. junit. assert. assertequals ( s. tostring ( ), ""test"" )
[2]: org. junit. assert. assertequals ( s. tostring ( ), ""foo"" )
[3]: org. junit. assert. assertequals ( s, x12. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( relations )

************

************
tgt: org . junit . assert . assertequals ( capturedstatus . getvalue ( ) , expectedstatus )
[0]: org. junit. assert. assertequals ( 1, results. size ( ) )
[1]: org. junit. assert. assertequals ( 1, responses. size ( ) )
[2]: org. junit. assert. assertequals ( 1, relations. size ( ) )
[3]: org. junit. assert. assertequals ( 1, exchanges. size ( ) )
[4]: org. junit. assert. assertnotnull ( org. apache. karaf. bundle. core. internal. mavenconfigservice. getlocalrepofromconfig ( config ) )

************

************
tgt: org . junit . assert . assertnotnull ( custodian )
[0]: org. junit. assert. assertnull ( org. apache. karaf. bundle. core. internal. mavenconfigservice. getlocalrepofromconfig ( config ) )
[1]: org. junit. assert. assertnotnull ( org. apache. karaf. bundle. core. internal. mavenconfigservice. getlocalrepofromconfig ( config ) )
[2]: org. junit. assert. assertnotnull ( org. apache. karaf. bundle. core. internal. mavenconfigservice. getlocalrepofromconfig ( configuration ) )
[3]: org. junit. assert. assertnull ( config. getlocalrepofromconfig ( config ) )
[4]: org. junit. assert. asserttrue ( isproprietary ( ) )

************

************
tgt: org . junit . assert . assertequals ( 134217728 , result )
[0]: org. junit. assert. assertequals ( true, isproprietary ( ) )
[1]: org. junit. assert. assertfalse ( isproprietary ( ) )
[2]: org. junit. assert. assertequals ( false, isproprietary ( ) )
[3]: org. junit. assert. assertnotnull ( isproprietary ( ) )
[4]: org. junit. assert. assertnotnull ( dropdown. isdndenabled ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , found . size ( ) )
[0]: org. junit. assert. assertequals ( 1, dropdown. isdndenabled ( ) )
[1]: org. junit. assert. assertnull ( dropdown. isdndenabled ( ) )
[2]: org. junit. assert. assertequals ( null, dropdown. isdndenabled ( ) )
[3]: )
[4]: org. junit. assert. assertequals ( true, result. haserrors ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( false, result. haserrors ( ) )
[1]: org. junit. assert. assertequals ( result. haserrors ( ), true )
[2]: org. junit. assert. assertfalse ( lock. trylock ( ) )
[3]: org. junit. assert. assertnull ( lock. trylock ( ) )
[4]: org. junit. assert. assertfalse ( transaction. trylock ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( bigdecimal . one . compareto ( presenceratio ) ) == 0 ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), lock. trylock ( ) )
[1]: org. junit. assert. assertnull ( transaction. trylock ( ) )
[2]: org. junit. assert. assertsame ( 1, responseitem. gettotalresults ( ) )
[3]: org. junit. assert. assertsame ( 3, responseitem. gettotalresults ( ) )
[4]: org. junit. assert. assertequals ( 1, responseitem. gettotalresults ( ) )

************

************
tgt: org . junit . assert . assertfalse ( org . apache . tajo . catalog . testcatalog . catalog . containfunction ( "test123" , org . apache . tajo . catalog . catalogutil . newsimpledatatypearray ( type . int4 ) ) )
[0]: org. junit. assert. assertequals ( 3, responseitem. gettotalresults ( ) )
[1]: org. junit. assert. assertnull ( responseitem. gettotalresults ( ) )
[2]: org. junit. assert. assertthat ( ri. getname ( ), org. hamcrest. matchers. is ( null ) )
[3]: org. junit. assert. assertnotnull ( ri. getname ( ) )
[4]: org. junit. assert. assertthat ( ri. getname ( ), org. hamcrest. matchers. is ( name ) )

************

************
tgt: org . junit . assert . assertequals ( reportprocessor . isquerylimitreached ( ) , false )
[0]: org. junit. assert. assertnotnull ( classloader )
[1]: org. junit. assert. assertthat ( classloader, is ( loader ) )
[2]: org. junit. assert. assertnull ( classloader )
[3]: org. junit. assert. assertequals ( null, classloader )
[4]: )

************

************
tgt: org . junit . assert . assertnull ( finddeclaredconstructor ( com . pholser . junit . quickcheck . internal . integer . class , java . lang . object . class ) )
[0]: org. junit. assert. assertequals ( true, requestok )
[1]: org. junit. assert. assertequals ( p1, result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( p2, result )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertnotnull ( jobbuilder )
[0]: org. junit. assert. assertequals ( p1, result. x )
[1]: org. junit. assert. assertequals ( java. lang. string. class. equals ( obj. getclass ( ) ), true )
[2]: org. junit. assert. assertequals ( java. util. optional. empty ( ), obj. equals ( obj ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ). equals ( obj ), true )
[4]: org. junit. assert. assertequals ( java. lang. string. class. equals ( obj. getclass ( ) ), false )

************

************
tgt: org . junit . assert . assertequals ( expected , handler . getservleturi ( req ) )
[0]: org. junit. assert. assertequals ( java. lang. boolean. valueof ( true ). equals ( obj. tostring ( ) ) )
[1]: org. junit. assert. assertequals ( httpresponse, response. getvalue ( ) )
[2]: org. junit. assert. assertequals ( httpresponse. getvalue ( ), response )
[3]: org. junit. assert. assertequals ( httpresponse, response )
[4]: org. junit. assert. assertequals ( httpresponse )

************

************
tgt: org . junit . assert . assertequals ( ( ( ( ( ( ( 140 + 1 ) + 2 ) + 3 ) + 4 ) - forgot ) - ( 2 * gameover ) ) , scores . getscore ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, voornamen. hashcode ( ) )
[2]: org. junit. assert. assertequals ( 0, voornamen. hashcode ( ) )
[3]: org. junit. assert. assertnotnull ( voornamen. hashcode ( ) )
[4]: org. junit. assert. assertnotnull ( voornamen2. hashcode ( ) )

************

************
tgt: org . junit . assert . assertthat ( result . length , org . hamcrest . corematchers . is ( 0 ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( response )
[2]: org. junit. assert. assertequals ( null, response )
[3]: org. junit. assert. assertequals ( 200, response )
[4]: org. junit. assert. assertequals ( msg, response )

************

************
tgt: org . junit . assert . assertfalse ( rawclient . isconnected ( ) )
[0]: org. junit. assert. assertequals ( response, null )
[1]: org. junit. assert. assertequals ( 1, proxy. bar ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, proxy. bar ( ). size ( ) )
[3]: org. junit. assert. assertequals ( ""a"", proxy. bar ( ). get ( ""a"" ) )
[4]: org. junit. assert. assertequals ( ""a"", proxy. bar ( ). get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , owner . getowner ( ) . getid ( ) )
[0]: org. junit. assert. assertequals ( ""a"", proxy. bar ( ). get ( ) )
[1]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 1 }, out. shape ( ) )
[2]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 0 }, out. shape ( ) )
[3]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 2 }, out. shape ( ) )
[4]: org. junit. assert. assertarrayequals ( new long [ ] { 10 }, out. shape ( ) )

************

************
tgt: org . junit . assert . asserttrue ( policy . isanonymousaccount ( subject ) )
[0]: org. junit. assert. assertarrayequals ( new long [ ] { 1 }, out. shape ( ) )
[1]: org. junit. assert. assertequals ( edgedirection. directed, direction )
[2]: org. junit. assert. assertequals ( edgedirection. simple, direction )
[3]: org. junit. assert. assertequals ( edgedirection. compound, direction )
[4]: org. junit. assert. assertnotnull ( direction )

************

************
tgt: org . junit . assert . asserttrue ( matches )
[0]: edgedirection. undirected, direction )
[1]: org. junit. assert. assertequals ( 1, tr. getsubscribedlisteners ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, tr. getsubscribedlisteners ( ). size ( ) )
[3]: org. junit. assert. asserttrue ( tr. getsubscribedlisteners ( ). isempty ( ) )
[4]: org. junit. assert. assertnotnull ( tr. getsubscribedlisteners ( ) )

************

************
tgt: org . junit . assert . assertequals ( stanzaerrorcondition . remote_server_timeout , new org . apache . vysper . xmpp . delivery . failure . remoteservertimeoutexception ( ) . getstanzaerrorcondition ( ) )
[0]: org. junit. assert. asserttrue ( tr. getsubscribedlisteners ( ). contains ( tr ) )
[1]: org. junit. assert. asserttrue ( ch. execute ( user, """", java. util. collections. emptylist ( ) ) )
[2]: org. junit. assert. asserttrue ( ch. execute ( user, """", java. util. collections. emptylist ( ) ) )
[3]: org. junit. assert. assertfalse ( ch. execute ( user, """", java. util. collections. emptylist ( ) ) )
[4]: org. junit. assert. asserttrue ( ch. execute ( user, null, java. util. collections. emptylist ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( suggestionsportletdisplaycontext . hasspellchecksuggestion ( ) )
[0]: org. junit. assert. asserttrue ( ch. execute ( user, """", java. util. collections. emptylist ( ) ) )
[1]: org. junit. assert. assertequals ( 1, thelong. get ( ) )
[2]: org. junit. assert. assertequals ( 0, thelong. get ( ) )
[3]: org. junit. assert. assertequals ( 2, thelong. get ( ) )
[4]: org. junit. assert. assertequals ( 3, thelong. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedarg , parsedarg )
[0]: org. junit. assert. assertequals ( 4, thelong. get ( ) )
[1]: org. junit. assert. assertfalse ( lru. exists ( i ) )
[2]: org. junit. assert. assertfalse ( lru. exists ( 0 ) )
[3]: org. junit. assert. asserttrue ( lru. exists ( i ) )
[4]: org. junit. assert. asserttrue ( lru. exists ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , resultland )
[0]: ) )
[1]: org. junit. assert. assertequals ( codigostatusreposta, eventoretorno. getcodigostatusreposta ( ) )
[2]: org. junit. assert. assertequals ( codigostatusreposta, eventoretorno. getcodigostatusreposta ( ). size ( ) )
[3]: org. junit. assert. assertequals ( codigostatusreposta, eventoretorno. getcodigostatusreposta ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( codigostatusreposta, eventoretorno. getcodigostatusreposta ( ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( codigostatusreposta, eventoretorno. getcodigostatusreposta ( ). getclass ( ) )
[1]: org. junit. assert. assertequals ( 1, position )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), position )
[3]: org. junit. assert. assertnotnull ( testcollector. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), testcollector. tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( command . accept ( state ) , org . hamcrest . core . is . is ( false ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), testcollector. getmessage ( ) )
[1]: org. junit. assert. assertequals ( string_1, testcollector. tostring ( ) )
[2]: org. junit. assert. assertequals ( assertnotnull, testcollector. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( supplier. getkey ( ) )
[4]: org. junit. assert. assertnull ( supplier )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertnotnull ( supplier )
[1]: org. junit. assert. assertequals ( null, supplier )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( creater )
[4]: org. junit. assert. assertnotnull ( creater. repository )

************

************
tgt: org . junit . assert . assertequals ( org . camunda . bpm . container . impl . jmx . deployment . bpmplatformxmllocationtest . bpm_platform_xml_location_url_http_protocol , url . tostring ( ) )
[0]: org. junit. assert. assertnotnull ( creater. events )
[1]: org. junit. assert. assertnotnull ( creater. event )
[2]: org. junit. assert. assertnotnull ( creater. execution )
[3]: org. junit. assert. assertequals ( 0, n )
[4]: org. junit. assert. assertequals ( 5, n )

************

************
tgt: org . junit . assert . asserttrue ( resolver . resolve ( p ) )
[0]: org. junit. assert. assertequals ( 3, n )
[1]: org. junit. assert. assertnotnull ( spyresolver. resolve ( staff, entitytoextract ) )
[2]: org. junit. assert. assertequals ( new java. util. arraylist ( ), spyresolver. resolve ( staff, entitytoextract ) )
[3]: org. junit. assert. assertequals ( 1, spyresolver. resolve ( staff, entitytoextract ). size ( ) )
[4]: org. junit. assert. assertequals ( null, spyresolver. resolve ( staff, entitytoextract ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, repeatability, 0 )
[2]: org. junit. assert. assertequals ( 1, repeatability, 1 )
[3]: org. junit. assert. assertequals ( 1.0, repeatability, 0 )
[4]: org. junit. assert. assertequals ( 0, r1. getcardinality ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0.0 , zero . getpartialderivative ( n ) , epsilon [ n ] )
[0]: org. junit. assert. assertequals ( r1. getcardinality ( ), 0 )
[1]: org. junit. assert. assertequals ( r1. getcardinality ( ), 10l )
[2]: org. junit. assert. assertequals ( 0l, r1. getcardinality ( ) )
[3]: org. junit. assert. assertequals ( 1, r1. getcardinality ( ) )
[4]: org. junit. assert. assertfalse ( failed )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( expected, edgesof ( new java. util. arraylist ( ) ) )
[1]: org. junit. assert. assertequals ( expected, edgesof ( null ) )
[2]: org. junit. assert. assertequals ( expected, edgesof ( v ) )
[3]: org. junit. assert. assertequals ( expected, edgesof ( transformed ) )
[4]: org. junit. assert. assertequals ( expected, edgesof ( new java. util. hashset ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( createunreach ( ) , mpreach . build ( ) )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. assertequals ( 1, resultfromjpql. size ( ) )
[2]: org. junit. assert. assertequals ( 0, resultfromjpql. size ( ) )
[3]: org. junit. assert. assertequals ( 4, resultfromjpql. size ( ) )
[4]: org. junit. assert. assertequals ( 2, resultfromjpql. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( value . equals ( "description" ) )
[0]: org. junit. assert. asserttrue ( resultfromjpql. isempty ( ) )
[1]: org. junit. assert. asserttrue ( ( ( contours. size ( ) ) == ( value ) ) )
[2]: org. junit. assert. asserttrue ( ( ( contours. size ( ) ) == ( value + 1 ) ) )
[3]: org. junit. assert. asserttrue ( ( ( contours. size ( ) ) == value ) )
[4]: org. junit. assert. asserttrue ( ( ( contours. size ( ) ) == ( value + value ) ) )

************

************
tgt: org . junit . assert . assertequals ( expectedjobgrouppath , job . getgrouppath ( ) )
[0]: org. junit. assert. asserttrue ( ( ( contours. size ( ) ) == ( value - 1 ) ) )
[1]: org. junit. assert. assertequals ( 200, response. getstatuscode ( ) )
[2]: org. junit. assert. assertequals ( 1, response. getstatuscode ( ) )
[3]: org. junit. assert. assertequals ( 0, response. getstatuscode ( ) )
[4]: org. junit. assert. assertequals ( response. getstatuscode ( ), 200 )

************

************
tgt: org . junit . assert . asserttrue ( future . get ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( dim, converter )
[2]: org. junit. assert. assertequals ( valuesbuilder, container. createreaderforviews ( valuesbuilder ) )
[3]: org. junit. assert. assertnotnull ( container. createreaderforviews ( valuesbuilder ) )
[4]: org. junit. assert. assertequals ( valuesbuilder, container. createreaderforviews ( valuesbuilder. build ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , descriptor . getfeatures ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( valuesbuilder ), container )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( expected, event )
[4]: org. junit. assert. assertequals ( expected, list )

************

************
tgt: org . junit . assert . assertnotnull ( instance )
[0]: org. junit. assert. assertequals ( expected, parser )
[1]: ) )
[2]: org. junit. assert. assertequals ( xmlesperado, devegerarxmldeacordoesadicionais. tostring ( ) )
[3]: org. junit. assert. assertequals ( xmlesperado, devegerarxmldeacoesadicionais. tostring ( ) )
[4]: org. junit. assert. assertequals ( xmlesperado, devegerarxmlen. tostring ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( lessstrategy )
[0]: org. junit. assert. assertequals ( xmlesperado, devegerarxml ( ). tostring ( ) )
[1]: org. junit. assert. assertequals ( xmlesperado, devegerarxmldeacordoesadicionais )
[2]: org. junit. assert. assertnotnull ( dic )
[3]: org. junit. assert. assertnotnull ( dic. union ( ) )
[4]: org. junit. assert. assertnotnull ( dic. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , visitor . tostring ( ) )
[0]: org. junit. assert. assertnotnull ( dic. s )
[1]: org. junit. assert. assertnotnull ( dic. collection )
[2]: org. junit. assert. assertequals ( ( originalsize + 1 ), currentelements. size ( ) )
[3]: org. junit. assert. assertequals ( result. size ( ), 1 )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( response )
[0]: org. junit. assert. assertequals ( result. size ( ), 2 )
[1]: org. junit. assert. assertequals ( result. size ( ), 0 )
[2]: org. junit. assert. assertequals ( 0, result. size ( ) )
[3]: org. junit. assert. assertequals ( 1, counter )
[4]: org. junit. assert. assertequals ( 0, counter )

************

************
tgt: org . junit . assert . asserttrue ( specificresourceallocation . getassignments ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 3, counter )
[1]: org. junit. assert. assertequals ( 6, counter )
[2]: org. junit. assert. assertequals ( 4, counter )
[3]: org. junit. assert. assertnotnull ( query. isbriefabusecontact ( ) )
[4]: org. junit. assert. assertnull ( query. isbriefabusecontact ( ) )

************

************
tgt: org . junit . assert . assertequals ( 425 , response . getstatuscode ( ) )
[0]: org. junit. assert. asserttrue ( query. isbriefabusecontact ( ) )
[1]: org. junit. assert. assertequals ( query. isbriefabusecontact ( ), query )
[2]: org. junit. assert. assertequals ( query. isbriefabusecontact ( ), null )
[3]: org. junit. assert. assertequals ( 1, list. size ( ) )
[4]: org. junit. assert. assertnotnull ( list )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( distributed, g. distributed ( ) )
[1]: org. junit. assert. assertequals ( distributed, main. distributed ( ) )
[2]: org. junit. assert. assertequals ( distributed, graph. distributed ( ) )
[3]: org. junit. assert. assertequals ( distributed, testdistributedaggregation )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( exp , arrayx )
[0]: org. junit. assert. assertequals ( 1, accountfromdatastorelist. size ( ) )
[1]: org. junit. assert. assertequals ( acountlisttopersist, accountfromdatastorelist )
[2]: org. junit. assert. assertequals ( 12, accountfromdatastorelist. size ( ) )
[3]: org. junit. assert. assertequals ( acountlisttopersist. size ( ), accountfromdatastorelist )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , flush . size ( ) )
[0]: org. junit. assert. assertequals ( date, localdate1 )
[1]: org. junit. assert. assertequals ( date. value, localdate1 )
[2]: org. junit. assert. assertequals ( dates, localdate1 )
[3]: org. junit. assert. assertequals ( datetime, localdate1 )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( actual . isempty ( ) )
[0]: org. junit. assert. assertarrayequals ( value, value )
[1]: org. junit. assert. assertarrayequals ( value, result )
[2]: org. junit. assert. assertarrayequals ( value, values )
[3]: org. junit. assert. assertnotnull ( value )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( expecting , com . facebook . buck . io . file . morepaths . fixpath ( inputpath ) )
[0]: org. junit. assert. assertequals ( 1, productdtos. size ( ) )
[1]: org. junit. assert. assertequals ( 0, productdtos. size ( ) )
[2]: org. junit. assert. assertequals ( 1, productsdtos. size ( ) )
[3]: org. junit. assert. assertequals ( 1, productdtoes. size ( ) )
[4]: org. junit. assert. assertnotnull ( productdtos )

************

************
tgt: org . junit . assert . assertequals ( com . mokiat . data . front . error . message , ex . getmessage ( ) )
[0]: org. junit. assert. assertnotnull ( seccion1 )
[1]: org. junit. assert. assertequals ( seccion, seccion1 )
[2]: org. junit. assert. assertnull ( seccion1 )
[3]: org. junit. assert. assertnotnull ( seccions1 )
[4]: org. junit. assert. assertequals ( seccion, seccions1 )

************

************
tgt: org . junit . assert . assertfalse ( response . out ( ) , response . err ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, actualschema. blankuser ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, actualschema. blankuser ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, actualschema. blankuser ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), actualschema )
[4]: org. junit. assert. assertnotnull ( actualschema )

************

************
tgt: org . junit . assert . assertthat ( interceptorcontext . getcomponentname ( ) , org . hamcrest . core . is . is ( "testcomponent" ) )
[0]: org. junit. assert. assertequals ( true, b )
[1]: org. junit. assert. assertequals ( false, b )
[2]: org. junit. assert. assertequals ( 1, b )
[3]: org. junit. assert. assertequals ( p0, this. world. distance ( p1 ) )
[4]: org. junit. assert. assertequals ( p0. distance ( p1 ), this. world. distance ( p0 ) )

************

************
tgt: org . junit . assert . assertequals ( expectedarg , parsedarg )
[0]: org. junit. assert. assertequals ( p0. distance ( p1 ), this. world. distance ( p1 ) )
[1]: org. junit. assert. assertequals ( p0. distance ( p0 ), this. world. distance ( p1 ) )
[2]: org. junit. assert. assertequals ( p0, p1. distance ( p0 ) )
[3]: org. junit. assert. assertequals ( 1, instance. getreferencepoint ( ). length )
[4]: org. junit. assert. assertequals ( 0, instance. getreferencepoint ( ). length )

************

************
tgt: org . junit . assert . assertfalse ( k1 . equals ( new java . lang . object ( ) ) )
[0]: org. junit. assert. assertnotnull ( instance. getreferencepoint ( ) )
[1]: org. junit. assert. assertequals ( 1, instance. getreferencepoint ( ). size ( )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, symbols. size ( ) )
[4]: org. junit. assert. assertequals ( 0, symbols. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( assertion , recordtest )
[0]: org. junit. assert. asserttrue ( ( ( symbols. size ( ) ) == 1 ) )
[1]: org. junit. assert. assertequals ( 1, symbols. size ( ) )
[2]: org. junit. assert. asserttrue ( ( ( symbols. size ( ) ) == 0 ) )
[3]: org. junit. assert. assertnull ( title )
[4]: org. junit. assert. assertnotnull ( factory. getopenejbconfiguration ( ) )

************

************
tgt: org . junit . assert . assertthat ( changes . size ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertnull ( factory. getopenejbconfiguration ( ) )
[1]: org. junit. assert. assertequals ( dynamicdeployer, factory. getopenejbconfiguration ( ) )
[2]: org. junit. assert. assertequals ( null, factory. getopenejbconfiguration ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, index )

************

************
tgt: org . junit . assert . assertequals ( text , adapter . getfilteredstringat ( 2 , 2 ) )
[0]: org. junit. assert. assertequals ( 0, index )
[1]: org. junit. assert. assertequals ( 2, index )
[2]: org. junit. assert. assertequals ( 3, index )
[3]: org. junit. assert. assertequals ( 4, index )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), popcanvas ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . google . common . collect . lists . newarraylist ( 1 , 2 , 2 , 5 ) , result )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( page1 ), popcanvas ( ) )
[1]: org. junit. assert. assertequals ( java. util. optional. of ( page1 ), popcanvas ( ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( exp , z )
[0]: , result )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, getnumberofrecords ( sample ) )
[3]: org. junit. assert. assertequals ( 0, getnumberofrecords ( sample ) )
[4]: org. junit. assert. assertequals ( 1, count. getnumberofrecords ( sample ) )

************

************
tgt: org . junit . assert . assertequals ( true , clientfilter . isallowed ( address ) )
[0]: org. junit. assert. assertequals ( 1, count ( sample ) )
[1]: org. junit. assert. assertequals ( 1, sample. getnumberofrecords ( sample ) )
[2]: org. junit. assert. asserttrue ( finder. find ( clients, context, org. pac4j. core. client. finder. name ). isempty ( ) )
[3]: org. junit. assert. assertnull ( finder. find ( clients, context, org. pac4j. core. client. finder. name ) )
[4]: org. junit. assert. assertequals ( 0, finder. find ( clients, context, org. pac4j. core. client. finder. name ). length )

************

************
tgt: org . junit . assert . assertthat ( updatedobject , org . hamcrest . matchers . is ( mntner ) )
[0]: org. junit. assert. assertequals ( 0, finder. find ( clients, context, org. pac4j. core. client. finder. name ). size ( )
[1]: ) )
[2]: org. junit. assert. asserttrue ( top. isspinning ( ) )
[3]: org. junit. assert. assertfalse ( top. isspinning ( ) )
[4]: org. junit. assert. assertthat ( top. isspinning ( ), is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( dt , genson . deserialize ( millis . tostring ( ) , java . time . localdatetime . class ) )
[0]: org. junit. assert. assertequals ( true, top. isspinning ( ) )
[1]: org. junit. assert. assertthat ( top. isspinning ( ), is ( false ) )
[2]: org. junit. assert. assertnull ( datamanager. getqueries ( ) )
[3]: org. junit. assert. assertnotnull ( datamanager. getqueries ( ) )
[4]: org. junit. assert. assertnull ( datamanager. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , cs . size ( ) )
[0]: org. junit. assert. assertequals ( 3, datamanager. size ( ) )
[1]: org. junit. assert. assertnull ( datamanager. getmessages ( ) )
[2]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml. businessobjectdefinitionsubjectmatterexpert. getid ( ), resultbusinessobjectdefinitionsubjectmatterexpert. getid ( ) )
[3]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml. businessobjectdefinitionsubjectmatterexpert ( resultbusinessobjectdefinitionsubjectmatterexpert. getid ( ) ), resultbusinessobjectdefinitionsubjectmatterexpert )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), resultbusinessobjectdefinitionsubjectmatterexpert. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( proto , marshaller . parse ( is ) )
[0]: org. junit. assert. assertnotnull ( resultbusinessobjectdefinitionsubjectmatterexpert. getid ( ) )
[1]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml )
[2]: org. junit. assert. assertequals ( 1, e. getlastusedmatchvalue ( ) )
[3]: org. junit. assert. assertnotnull ( e. getlastusedmatchvalue ( ) )
[4]: org. junit. assert. assertequals ( 0, e. getlastusedmatchvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , str )
[0]: org. junit. assert. assertequals ( e. getlastusedmatchvalue ( ), deferred )
[1]: ) )
[2]: org. junit. assert. assertequals ( duetime, retbug. getid ( ) )
[3]: org. junit. assert. assertequals ( retbug. getid ( ), ident_2. getid ( ) )
[4]: org. junit. assert. assertequals ( retbug. getid ( ), ident_1. getid ( ) )

************

************
tgt: org . junit . assert . assertfalse ( b )
[0]: org. junit. assert. assertequals ( retbug. getid ( ), duetime )
[1]: ) )
[2]: org. junit. assert. assertnull ( node. getnodebyid ( null ) )
[3]: org. junit. assert. assertnull ( node. getnodebyid ( this. id ) )
[4]: org. junit. assert. assertnull ( node. getnodebyid ( name ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( filteredsensorslist . size ( ) ) * ( filteredcomponentslist . size ( ) ) ) , sensorslist . size ( ) )
[0]: org. junit. assert. assertnotnull ( node )
[1]: ) )
[2]: org. junit. assert. assertequals ( string, hostaddobj. gethostname ( ) )
[3]: org. junit. assert. assertequals ( null, hostaddobj. gethostname ( ) )
[4]: org. junit. assert. assertnotnull ( hostaddobj. gethostname ( ) )

************

************
tgt: org . junit . assert . assertequals ( instance2 , getfieldvalue ( field_master_broker ) )
[0]: org. junit. assert. assertequals ( 1, hostaddobj. gethostname ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, hostaddobj. gethostname ( ) )
[2]: org. junit. assert. assertequals ( ( numberofprojects + 1 ), projectdao. getall ( ). size ( ) )
[3]: org. junit. assert. assertequals ( numberofprojects, projectdao. getall ( ). size ( ) )
[4]: org. junit. assert. assertnull ( upload. getimage ( ) )

************

************
tgt: org . junit . assert . assertthat ( mapper . getstyleformetacard ( metacard ) , org . hamcrest . matchers . is ( "" ) )
[0]: org. junit. assert. assertnotnull ( value )
[1]: org. junit. assert. assertequals ( null, value )
[2]: , value )
[3]: ) )
[4]: 

************

************
tgt: org . junit . assert . asserttrue ( ( syncbericht instanceof nl . bzk . migratiebrp . bericht . model . sync . impl . ongeldigbericht ) )
[0]: org. junit. assert. assertequals ( 1, map. size ( ) )
[1]: org. junit. assert. assertequals ( 0, map. size ( ) )
[2]: org. junit. assert. assertequals ( map, map )
[3]: org. junit. assert. assertequals ( 3, map. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , oauthtokencacheservice . tokencache . size ( ) )
[0]: org. junit. assert. assertnull ( selectivity ( null ) )
[1]: org. junit. assert. assertequals ( 0, selectivity ( null ) )
[2]: org. junit. assert. assertequals ( 0, selectivity ( null ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, selectivity ( null ). length )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( 1, node. getnbchildren ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, node. getnbchildren ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, node. getnbchildren ( ). length )
[3]: org. junit. assert. assertequals ( 1, node. getnbchildren ( ) )
[4]: org. junit. assert. assertequals ( 1, node. getnbchildren ( ). size ( )

************

************
tgt: org . junit . assert . assertequals ( org . opendaylight . controller . cluster . access . commands . localhistoryfailuretest . object , clone )
[0]: org. junit. assert. assertequals ( part, result )
[1]: org. junit. assert. assertequals ( ""test"", result )
[2]: org. junit. assert. assertequals ( ""a"", result )
[3]: org. junit. assert. assertequals ( ""foo"", result )
[4]: org. junit. assert. assertequals ( ""test"", result )

************

************
tgt: org . junit . assert . assertnull ( subject . createcompressor ( ) )
[0]: org. junit. assert. assertthat ( factorybean. getimports ( ) [ 0 ], org. hamcrest. corematchers. is ( expectedsnapshotmetadata ) )
[1]: org. junit. assert. assertthat ( factorybean. getimports ( ), org. hamcrest. corematchers. is ( toarray ( expectedsnapshotmetadata ) ) )
[2]: org. junit. assert. assertthat ( factorybean. getimports ( ), org. hamcrest. core. is. is ( toarray ( expectedsnapshotmetadata ) ) )
[3]: org. junit. assert. assertthat ( factorybean. getimports ( ) [ 0 ], org. hamcrest. matchers. is ( expectedsnapshotmetadata ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "test<sp>text" , text )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), deadlockdetector. victims ( ) )
[1]: org. junit. assert. assertequals ( testonewaiter, deadlockdetector. victims ( ) )
[2]: org. junit. assert. assertequals ( 1, deadlockdetector. victims ( ). size ( ) )
[3]: org. junit. assert. assertequals ( com. geophile. erdo. transaction. deadlockdetector. victims ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( context . size ( ) , org . hamcrest . core . is . is ( 1 ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( connection, result )
[2]: org. junit. assert. assertnull ( result )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( i , inputview . readint ( ) )
[0]: org. junit. assert. asserttrue ( java. util. arrays. equals ( content, corruptcontent ) )
[1]: org. junit. assert. asserttrue ( java. util. arrays. equals ( contents, corruptcontent ) )
[2]: org. junit. assert. assertarrayequals ( new java. io. file [ ] { }, listfiles. toarray ( ) )
[3]: org. junit. assert. assertarrayequals ( content, corruptcontent )
[4]: org. junit. assert. assertarrayequals ( expected, actual )

************

************
tgt: org . junit . assert . assertequals ( "new<sp>address" , id3v2popmframedata . getaddress ( ) )
[0]: org. junit. assert. assertequals ( 0, added )
[1]: org. junit. assert. assertequals ( 1, added )
[2]: org. junit. assert. assertthat ( added )
[3]: org. junit. assert. assertequals ( 0, found )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( answers , org . hamcrest . matchers . empty ( ) )
[0]: org. junit. assert. assertarrayequals ( expected, result, 0.0 )
[1]: org. junit. assert. assertarrayequals ( expected, result, 0 )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. assertequals ( expected, result, 0.0 )
[4]: org. junit. assert. assertarrayequals ( expected, result )

************

************
tgt: org . junit . assert . assertequals ( bigdecimal . zero , returnvalue . setscale ( 0 ) )
[0]: org. junit. assert. assertequals ( symmetrickeyparser, symmetrickeyparser. getsymmetrickey ( ) )
[1]: org. junit. assert. assertequals ( 1, unwrapped. child. s )
[2]: org. junit. assert. assertequals ( 1, unwrapped. type )
[3]: org. junit. assert. assertequals ( 1, unwrapped. n )
[4]: org. junit. assert. assertequals ( 1, unwrapped. child. i )

************

************
tgt: org . junit . assert . assertsame ( operation , instance . delete ( ) )
[0]: org. junit. assert. assertnotnull ( unwrapped )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( 0, result. size ( ) )
[4]: org. junit. assert. asserttrue ( result. isempty ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( section )
[0]: ) )
[1]: org. junit. assert. assertequals ( service, gremlinexecutor. getexecutorservice ( ) )
[2]: org. junit. assert. assertnotnull ( gremlinexecutor. getexecutorservice ( ) )
[3]: org. junit. assert. assertnull ( gremlinexecutor. getexecutorservice ( ) )
[4]: org. junit. assert. assertequals ( service. getexecutorservice ( ), gremlinexecutor )

************

************
tgt: org . junit . assert . assertnotnull ( writer )
[0]: ) )
[1]: org. junit. assert. assertequals ( expectedstep, steps )
[2]: org. junit. assert. assertequals ( 1, args [ 6 ]. getstdoutcontents ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, args [ 6 ] )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( args ), getstdoutcontents ( ) )

************

************
tgt: org . junit . assert . asserttrue ( attributedesc . isversion ( ) )
[0]: org. junit. assert. assertnotnull ( getstdoutcontents ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( args ), s )
[2]: org. junit. assert. assertequals ( newacl, fetchedacl )
[3]: org. junit. assert. assertequals ( newacl, fetchedacl. getowner ( ) )
[4]: org. junit. assert. assertequals ( newacl. getowner ( ), fetchedacl )

************

************
tgt: org . junit . assert . assertequals ( 0 , variables . size ( ) )
[0]: org. junit. assert. assertequals ( recreatedcreated, fetchedacl )
[1]: org. junit. assert. assertequals ( 2, fetchedacl. getowner ( ) )
[2]: org. junit. assert. assertnotnull ( webxml )
[3]: org. junit. assert. assertnull ( webxml )
[4]: org. junit. assert. assertsame ( document, webxml )

************

************
tgt: org . junit . assert . assertnotnull ( multi . selectitem ( index ) )
[0]: org. junit. assert. assertequals ( document, webxml )
[1]: ) )
[2]: org. junit. assert. assertthat ( text, org. hamcrest. matchers. is ( null ) )
[3]: org. junit. assert. assertthat ( text, org. hamcrest. corematchers. is ( null ) )
[4]: org. junit. assert. assertthat ( text, is ( null ) )

************

************
tgt: org . junit . assert . assertsame ( tt2 , tt )
[0]: , text )
[1]: ) )
[2]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( exceptioncode ) )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( exceptionscode ) )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. is ( exceptioncode ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , tmgr . getqueuelength ( ) )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( exceptioncodes ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( shown. isdisplayed ( ) )
[3]: org. junit. assert. assertequals ( true, input. isempty ( ) )
[4]: org. junit. assert. assertequals ( false, input. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , res . size ( ) )
[0]: org. junit. assert. assertfalse ( input. isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, items. size ( ) )
[2]: org. junit. assert. assertequals ( 0, items. size ( ) )
[3]: org. junit. assert. assertequals ( 1, item. size ( ) )
[4]: org. junit. assert. assertequals ( zero, items. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( size , store . size ( ) )
[0]: org. junit. assert. assertequals ( 1, size ( items ) )
[1]: org. junit. assert. assertequals ( validationresult. ok, source. validate ( container ). getstatus ( ) )
[2]: org. junit. assert. assertequals ( validationresult. result. ok, source. validate ( container ). getstatus ( ) )
[3]: org. junit. assert. assertequals ( validationresult. result. error, source. validate ( container ). getstatus ( ) )
[4]: org. junit. assert. assertequals ( validationresult. error, source. validate ( container ). getstatus ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( trainedmodel )
[0]: org. junit. assert. assertequals ( validationresult. fail, source. validate ( container ). getstatus ( ) )
[1]: org. junit. assert. asserttrue ( java. util. arrays. equals ( beforeconvstr, afterconvbytearr ) )
[2]: org. junit. assert. assertfalse ( java. util. arrays. equals ( beforeconvstr, afterconvbytearr ) )
[3]: org. junit. assert. asserttrue ( java. util. arrays. equals ( afterconvstr, afterconvbytearr ) )
[4]: org. junit. assert. assertequals ( true, java. util. arrays. equals ( beforeconvstr, afterconvbytearr ) )

************

************
tgt: org . junit . assert . asserttrue ( gradok )
[0]: ) )
[1]: org. junit. assert. assertequals ( values, victim. getinformation ( name ) )
[2]: org. junit. assert. assertequals ( values, victim. getinformation ( key ) )
[3]: org. junit. assert. assertequals ( values, victim. getinformation ( string ) )
[4]: org. junit. assert. assertequals ( values, victim. getinformation ( ""key ) )

************

************
tgt: org . junit . assert . assertthat ( profile , matchesprofile ( data ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( msgdef. tostring ( ), person. tostring ( ) )
[2]: org. junit. assert. assertequals ( msgdesc. tostring ( ), person. tostring ( ) )
[3]: org. junit. assert. assertequals ( msg. tostring ( ), person. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( person. tostring ( ) )

************

************
tgt: org . junit . assert . assertfalse ( or . isdefined ( ) )
[0]: org. junit. assert. assertequals ( person. tostring ( ), msgdef. tostring ( ) )
[1]: org. junit. assert. assertequals ( false, result )
[2]: org. junit. assert. assertequals ( true, result )
[3]: org. junit. assert. assertequals ( """", actuallink )
[4]: org. junit. assert. assertequals ( null, actuallink )

************

************
tgt: org . junit . assert . asserttrue ( ( ( binlogevent . equals ( com . dianping . puma . utils . eventfactory . dml ( 2 , 1 , "f.1" , 2 , "a" , "b" , false , false , dmltype . insert ) ) ) || ( binlogevent . equals ( com . dianping . puma . utils . eventfactory . dml ( 1 , 2 , "f.2" , 3 , "a" , "b" , false , false , dmltype . insert ) ) ) ) )
[0]: org. junit. assert. assertequals ( ""1"", actuallink )
[1]: public void process ( ) { }
[2]: public void start ( ) { }
[3]: org. junit. assert. assertequals ( 1, entry. getentrycollection ( ). size ( ) )
[4]: org. junit. assert. asserttrue ( modelinstanceenumerationliteral01. isundefined ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . long . valueof ( 1 ) , product . getmultiplier ( ) )
[0]: org. junit. assert. assertequals ( thrown, e )
[1]: org. junit. assert. assertsame ( thrown, e )
[2]: org. junit. assert. assertequals ( exception, e )
[3]: org. junit. assert. assertequals ( throwable, e )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( updateenginewithchanges )
[0]: org. junit. assert. assertequals ( expected, path )
[1]: org. junit. assert. assertequals ( expected, path. tostring ( ) )
[2]: org. junit. assert. assertequals ( expected, paths )
[3]: org. junit. assert. assertequals ( expected, path. list ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( branchheadcommit , getheadcommit ( com . beijunyi . parallelgit . utils . branchutilssetbranchheadtest . test_branch , repo ) )
[0]: org. junit. assert. assertequals ( basebean, selectedservice. addsuppliersfortechnicalservice ( ) )
[1]: org. junit. assert. assertequals ( root, selectedservice. addsuppliersfortechnicalservice ( ) )
[2]: org. junit. assert. assertequals ( basebean. outcome_success, selectedservice. register ( ) )
[3]: org. junit. assert. assertequals ( basebean. outcome_success, selectedservice )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expectedfields , actualfields )
[0]: org. junit. assert. assertnull ( descresult )
[1]: org. junit. assert. assertequals ( 0, evt. gettags ( ). size ( ) )
[2]: org. junit. assert. assertequals ( p, evt. gettags ( ) )
[3]: org. junit. assert. assertequals ( 1, evt. gettags ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, evt. gettags ( ) )

************

************
tgt: org . junit . assert . assertequals ( deleteoptions . customerid ( ) , customerid )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( message. getcontent ( ) )
[2]: org. junit. assert. assertequals ( 1, issues. size ( ) )
[3]: org. junit. assert. assertequals ( 0, issues. size ( ) )
[4]: org. junit. assert. assertequals ( 1, errors. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , errors . size ( ) )
[0]: org. junit. assert. assertequals ( 1, examples. size ( ) )
[1]: org. junit. assert. assertequals ( 1 ), issues. size ( ) )
[2]: org. junit. assert. assertequals ( 1, routesid. size ( ) )
[3]: org. junit. assert. assertequals ( 0, routesid. size ( ) )
[4]: org. junit. assert. asserttrue ( routesid. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( performancestats . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, getdecisionresult ( processinstance ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, getdecisionresult ( processinstance ). size ( ) )
[2]: org. junit. assert. assertequals ( org. camunda. bpm. engine. runtime. graceful. class, getdecisionresult ( processinstance ). getclass ( ) )
[3]: org. junit. assert. assertequals ( org. camunda. bpm. engine. runtime. bpmn. many. class, getdecisionresult ( processinstance ). getclass ( ) )
[4]: org. junit. assert. assertequals ( org. camunda. bpm. engine. runtime. processinstance. storage. class, getdecisionresult ( processinstance ). getclass ( ) )

************

************
tgt: org . junit . assert . assertequals ( foo , wrapper . getmethod ( ) )
[0]: org. junit. assert. assertnotnull ( path )
[1]: org. junit. assert. assertnull ( path )
[2]: org. junit. assert. assertequals ( null, path )
[3]: org. junit. assert. assertequals ( expected, path )
[4]: org. junit. assert. assertequals ( expected, path, 0 )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertnotnull ( org. codegist. crest. crestexception. handle ( e ) )
[1]: org. junit. assert. assertequals ( e, org. codegist. crest. crestexception. handle ( e ) )
[2]: org. junit. assert. assertequals ( null, org. codegist. crest. crestexception. handle ( e ) )
[3]: org. junit. assert. assertnull ( org. codegist. crest. crestexception. handle ( e ) )
[4]: type ) )

************

************
tgt: org . junit . assert . assertfalse ( undertest . isempty ( ) )
[0]: org. junit. assert. assertthat ( count, org. hamcrest. corematchers. is ( 0 ) )
[1]: org. junit. assert. assertthat ( count, org. hamcrest. corematchers. is ( 1 ) )
[2]: org. junit. assert. assertthat ( count, org. hamcrest. matchers. is ( 0 ) )
[3]: org. junit. assert. assertthat ( count. name, org. hamcrest. corematchers. is ( 0 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , resultmap )
[0]: org. junit. assert. assertnotnull ( ref. get ( ) )
[1]: org. junit. assert. assertnotnull ( ref. set ( ) )
[2]: org. junit. assert. assertnotnull ( ref. and getdestination ( ) )
[3]: org. junit. assert. assertnotnull ( ref. next ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , counter . get ( ) )
[0]: org. junit. assert. assertfalse ( month. equals ( month ) )
[1]: org. junit. assert. assertequals ( true, month. equals ( month ) )
[2]: assertequals ( 1, source )
[3]: 1 1 ) )
[4]: 1 1 )

************

************
tgt: org . junit . assert . asserttrue ( matcher . match ( msg , rule ) )
[0]: 1 ) )
[1]: 1 )
[2]: org. junit. assert. assertequals ( 1, result )
[3]: org. junit. assert. assertequals ( 0, result )
[4]: org. junit. assert. assertequals ( 1l, result )

************

************
tgt: org . junit . assert . assertequals ( "" , found )
[0]: org. junit. assert. assertequals ( 3, result )
[1]: org. junit. assert. assertequals ( 1, result ) ;
[2]: org. junit. assert. asserttrue ( driverimpl. isstarted ( ) )
[3]: org. junit. assert. assertfalse ( driverimpl. isstarted ( ) )
[4]: org. junit. assert. assertnotnull ( driverimpl. isstarted ( ) )

************

************
tgt: org . junit . assert . assertfalse ( config . ispluginenable ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnotnull ( _divide_1 )
[3]: org. junit. assert. assertequals ( _km, _divide_1 )
[4]: org. junit. assert. assertequals ( null, _divide_1 )

************

************
tgt: org . junit . assert . assertequals ( ints [ i ] , deserializer . readint ( ) )
[0]: org. junit. assert. assertequals ( _ sk, _divide_1 )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( actual )
[3]: org. junit. assert. assertequals ( null, actual )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertnotnull ( growler )
[0]: org. junit. assert. assertequals ( string, actual )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( configuration. getbucket ( ) )
[3]: org. junit. assert. assertnull ( configuration. getbucket ( ) )
[4]: org. junit. assert. assertequals ( 1, configuration. getbucket ( ) )

************

************
tgt: org . junit . assert . assertequals ( _builder_1 . tostring ( ) , x )
[0]: org. junit. assert. assertequals ( 0, configuration. getbucket ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( lookup )
[3]: org. junit. assert. assertequals ( true, exists )
[4]: org. junit. assert. assertequals ( false, exists )

************

************
tgt: org . junit . assert . assertequals ( expectedalloweddoctypes , actualalloweddoctypes )
[0]: org. junit. assert. assertequals ( 0, valid. isvalid ( ) )
[1]: org. junit. assert. assertequals ( 1, valid. isvalid ( ) )
[2]: org. junit. assert. assertequals ( valid. isvalid ( ), 0 )
[3]: org. junit. assert. assertequals ( valid. isvalid ( ), null )
[4]: org. junit. assert. assertnull ( valid. isvalid ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( io . grpc . internal . dnsnameresolver . maybechooseserviceconfig ( choice , new java . util . random ( ) , "localhost" ) )
[0]: org. junit. assert. assertequals ( ex, ex. testinstance )
[1]: org. junit. assert. assertequals ( exp, ex. testinstance )
[2]: org. junit. assert. assertequals ( ex, ex )
[3]: org. junit. assert. assertequals ( 0, ex. testinstance )
[4]: org. junit. assert. assertequals ( ex, ex. fail )

************

************
tgt: org . junit . assert . asserttrue ( ( hash < ( greycat . internal . coreconstants . end_of_time ) ) )
[0]: org. junit. assert. assertfalse ( result. isempty ( ) )
[1]: org. junit. assert. assertfalse ( result. exists ( ) )
[2]: org. junit. assert. assertfalse ( result. equals ( 0 ) )
[3]: org. junit. assert. assertfalse ( result. hasnext ( ) )
[4]: org. junit. assert. assertfalse ( result. equals ( expected ) )

************

************
tgt: org . junit . assert . assertnull ( "" , user )
[0]: org. junit. assert. assertnotnull ( actual )
[1]: org. junit. assert. assertnull ( actual )
[2]: org. junit. assert. assertequals ( mockdavresponse )
[3]: org. junit. assert. assertequals ( bre )
[4]: )

************

************
tgt: org . junit . assert . assertfalse ( monitor . iscanceled ( ) )
[0]: org. junit. assert. asserttrue ( valide )
[1]: org. junit. assert. assertequals ( 1, principals. size ( ) )
[2]: org. junit. assert. assertequals ( 0, principals. size ( ) )
[3]: org. junit. assert. assertequals ( 5, principals. size ( ) )
[4]: org. junit. assert. assertequals ( 2, principals. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( c1 , c2 )
[0]: org. junit. assert. assertequals ( 3, principals. size ( ) )
[1]: org. junit. assert. assertequals ( 1, lg. getshortcuts ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, lg. getshortcuts ( ). get ( ) )
[3]: org. junit. assert. assertequals ( 0, lg. getshortcuts ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, lg. getshortcuts ( ). count ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( cat )
[0]: org. junit. assert. assertequals ( 1, lg. getshortcuts ( ). next ( ) )
[1]: org. junit. assert. asserttrue ( map. containskey ( 123 ) )
[2]: org. junit. assert. assertnull ( map. containskey ( 123 ) )
[3]: org. junit. assert. assertfalse ( future. issuccess ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( book. twju. chapter_3. timelinetest. fourth_item ), actual )

************

************
tgt: org . junit . assert . asserttrue ( ( ( result . length ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( 1, actual. size ( ) )
[1]: org. junit. assert. assertequals ( new book. twju. chapter_3. item [ ] { book. twju. chapter_3. timelinetest. fourth_item }, actual )
[2]: org. junit. assert. assertequals ( new book. twju. chapter_3. item ( book. twju. chapter_3. timelinetest. fourth_item, actual. size ( ) )
[3]: org. junit. assert. assertequals ( 0, actual. size ( ) )
[4]: org. junit. assert. assertequals ( serverid, this. manager. getserver ( server1 ) )

************

************
tgt: org . junit . assert . assertequals ( records , actualdataiterable )
[0]: org. junit. assert. assertequals ( serverid, this. getserver ( server1 ) )
[1]: org. junit. assert. assertequals ( serverid, this. resolver. getserver ( server1 ) )
[2]: org. junit. assert. assertequals ( serverid, this. component. getserver ( server1 ) )
[3]: org. junit. assert. assertequals ( serverid, this. manager. getserver ( server 1 ) )
[4]: org. junit. assert. assertnotnull ( this. getvirtuoso ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , metrics . getlatestreadcount ( ) )
[0]: org. junit. assert. assertnotnull ( this. config. getvirtuoso ( ) )
[1]: org. junit. assert. assertequals ( 1, this. manager. getvirtuoso ( ) )
[2]: org. junit. assert. assertequals ( 1, this. config. getvirtuoso ( ) )
[3]: org. junit. assert. assertequals ( 1, this. manager. getvirtuoso ( ). length )
[4]: org. junit. assert. asserttrue ( java. util. arrays. equals ( dada, dada ) )

************

************
tgt: org . junit . assert . assertequals ( message , ( expectedcontains ? value : - 1l ) , actual )
[0]: org. junit. assert. assertfalse ( writer. isstopped ( ) )
[1]: org. junit. assert. assertnotnull ( com. microsoft. azure. management. appservice. samples. managelinuxwebappwithtrafficmanager. runsample ( tmname ) )
[2]: org. junit. assert. asserttrue ( com. microsoft. azure. management. appservice. samples. managelinuxwebappwithtrafficmanager. runsample ( tmname ) )
[3]: org. junit. assert. assertequals ( 1, com. microsoft. azure. management. appservice. samples. managelinuxwebappwithtrafficmanager. runsample ( tmname ) )
[4]: org. junit. assert. assertequals ( expected, com. microsoft. azure. management. appservice. samples. managelinuxwebappwithtrafficmanager. runsample ( tmname ) )

************

************
tgt: org . junit . assert . asserttrue ( result . hasfailures ( ) )
[0]: org. junit. assert. assertequals ( managedelinuxwebappwithtrafficmanager. runsample ( tmname ), true )
[1]: org. junit. assert. assertequals ( capability, capabilitytype )
[2]: org. junit. assert. assertequals ( 1, capability. getcapabilitybytypeorfail ( null, nodetemplate ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, capability. getcapabilitybytypeorfail ( nodetemplate, null ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, capability. getcapabilitybytypeorfail ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , tasks )
[0]: org. junit. assert. assertequals ( capability, capability )
[1]: org. junit. assert. assertsame ( version, context. generatekeyset ( context ) )
[2]: org. junit. assert. assertarrayequals ( version. getbytes ( ), context. generatekeyset ( context ) )
[3]: org. junit. assert. assertarrayequals ( version, context. generatekeyset ( context ) )
[4]: org. junit. assert. assertarrayequals ( version. getbytes ( ), context. generatekeyset ( version ) )

************

************
tgt: org . junit . assert . assertequals ( outboundpayloadcontent , result )
[0]: ) )
[1]: org. junit. assert. assertequals ( expectedfolderpath, buildfolderpath )
[2]: org. junit. assert. assertequals ( expectedfolderpath, result )
[3]: org. junit. assert. assertequals ( expectedfolderpath, builttablename )
[4]: org. junit. assert. assertequals ( expectedfolderpath, actualquery )

************

************
tgt: org . junit . assert . assertequals ( 1 , context . getcounter ( deduprecordcounter . output ) . getvalue ( ) )
[0]: org. junit. assert. assertequals ( expectedfolderpath, testbuildfolderpath )
[1]: org. junit. assert. assertequals ( ( before + 28 ), count ( ) )
[2]: org. junit. assert. assertequals ( ( before + 1 ), count ( ) )
[3]: org. junit. assert. assertequals ( before, count ( ) )
[4]: org. junit. assert. assertequals ( ( before - 1 ), count ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , queryenvelopes . size ( ) )
[0]: org. junit. assert. assertequals ( ( before - 28 ), count ( ) )
[1]: org. junit. assert. assertequals ( 1, numchunk. length )
[2]: org. junit. assert. assertequals ( 0, numchunk. length )
[3]: org. junit. assert. assertequals ( 1, numchunk [ 0 ] )
[4]: org. junit. assert. assertnotnull ( numchunk )

************

************
tgt: org . junit . assert . assertequals ( versao , eventoretorno . getversao ( ) )
[0]: org. junit. assert. assertequals ( 1, numchunk [ 1 ] )
[1]: org. junit. assert. assertnotnull ( huidigegemeente )
[2]: org. junit. assert. assertequals ( 1, features. size ( ) )
[3]: org. junit. assert. assertequals ( 0, features. size ( ) )
[4]: org. junit. assert. assertequals ( 3, features. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( returnedreader , cachedcontent )
[0]: org. junit. assert. assertequals ( 2, features. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( message, parsedresponse )
[3]: org. junit. assert. assertequals ( expected, parsedresponse )
[4]: org. junit. assert. assertequals ( result, parsedresponse )

************

************
tgt: org . junit . assert . assertequals ( expected , actual , delta )
[0]: org. junit. assert. assertequals ( msg, parsedresponse )
[1]: org. junit. assert. assertequals ( request, parsedresponse )
[2]: org. junit. assert. assertequals ( java. lang. string. format ( org. finra. herd. dao. message_type ), e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. format ( org. finra. herd. dao. message_type. tolowercase ( ) ), e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. format ( "found<sp>more<sp>than<sp>one<sp>message<sp>type. tolowercase ( ) ), e. getmessage ( ) )

************

************
tgt: org . junit . assert . asserttrue ( target . isstarted ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. format ( ), e. getmessage ( ) )
[1]: ) )
[2]: org. junit. assert. assertfalse ( com. dremio. exec. planner. sql. handlers. commands. metadataproviderpredicate ( java. util. collections. < java. lang. string > emptylist ( ) ) )
[3]: org. junit. assert. assertfalse ( com. dremio. exec. planner. sql. handlers. commands. metadataproviderconditions ( java. util. collections. < java. lang. string > emptylist ( ) ) )
[4]: org. junit. assert. assertfalse ( com. dremio. exec. planner. sql. handlers. commands. metadataproviderconditions. gettabletypepredicate ( java. util. collections. emptylist ( ) ) )

************

************
tgt: org . junit . assert . assertfalse ( wasupdated )
[0]: test test case
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, this. address. getstddev ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, this. address. getstddev ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, this. msg. getstddev ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnull ( org . springframework . roo . metadata . metadataidentificationutils . getmetadatainstance ( "" ) )
[0]: org. junit. assert. assertequals ( 1, this. buffer. getstddev ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( this. address. getstddev ( ) )
[2]: org. junit. assert. assertequals ( orders, hasorderforipad )
[3]: org. junit. assert. assertthat ( tz. isdaylightsaving ( utc ), org. hamcrest. corematchers. is ( true ) )
[4]: org. junit. assert. assertnotnull ( person. getbirthdatetime ( ) )

************

************
tgt: org . junit . assert . assertfalse ( json . isempty ( ) )
[0]: org. junit. assert. null, person. getbirthdatetime ( ) )
[1]: org. junit. assert.null ( person. getbirthdatetime ( ) )
[2]: org. junit. assert. assertnull ( person )
[3]: ) )
[4]: org. junit. assert. assertsame ( exceptionhandler, exceptionhandler. getexceptionhandler ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertarrayequals ( new java. lang. object [ ] { }, exceptionhandler. getexceptionhandler ( ) )
[1]: org. junit. assert. assertequals ( 1, exceptionhandler. getexceptionhandler ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, exceptionhandler. getexceptionhandler ( ). length )
[3]: org. junit. assert. assertnull ( exceptionhandler. getexceptionhandler ( ) )
[4]: org. junit. assert. assertfalse ( value. keyset ( ). isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( strategy . checkuploadneeded ( logstoragestatus ) , loguploadstrategydecision . upload )
[0]: org. junit. assert. assertnull ( value. keyset ( ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( input, result )
[3]: org. junit. assert. assertequals ( result, header )
[4]: org. junit. assert. assertequals ( result, input )

************

************
tgt: org . junit . assert . assertnotnull ( arf )
[0]: , result )
[1]: org. junit. assert. assertequals ( 1, ret_val )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertequals ( node , fr . gouv . vitam . storage . engine . common . model . response . requestresponsetest . requestresponse . getquery ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( ""a"", result )
[3]: org. junit. assert. assertequals ( ""value"", result )
[4]: org. junit. assert. assertequals ( 0, repository. getaggregatereportstoken ( ) )

************

************
tgt: org . junit . assert . assertequals ( f1 , f2 )
[0]: org. junit. assert. assertequals ( 0, repository. getaggregatereportstoken ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, this. repository. getaggregatereportstoken ( ) )
[2]: org. junit. assert. assertequals ( 1, repository. getaggregatereportstoken ( ) )
[3]: org. junit. assert. assertequals ( 0, repository. getaggregatereportstoken ( ). count ( ) )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertequals ( mocklist , queryplan . getchildqueryplans ( ) )
[0]: org. junit. assert. assertequals ( com. google. common. collect. maps. entry. class, envvars. get ( rubyruntime. getrubyruntimename ( ) ) )
[1]: org. junit. assert. assertequals ( com. google. common. collect. maps. list ( rubyruntime. getrubyruntimename ( ) ), envvars. size ( ) )
[2]: org. junit. assert. assertequals ( com. google. common. collect. maps. string, envvars. get ( rubyruntime. getrubyruntimename ( ) ) )
[3]: org. junit. assert. assertequals ( 1, envvars. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( ( i * 10 ) + 20 ) == next ) )
[0]: org. junit. assert. assertequals ( s, this. normalize ( s ) )
[1]: org. junit. assert. assertequals ( s, reader. normalize ( s ) )
[2]: org. junit. assert. assertequals ( s, normalize ( s ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( 1 , callbacks . size ( ) )
[0]: org. junit. assert. asserttrue ( org. digidoc4j. impl. bdoc. validationtests. prod_configuration. isasn1unsafeintegerallowed ( ) )
[1]: org. junit. assert. assertequals ( true, org. digidoc4j. impl. bdoc. validationtests. prod_configuration. isasn1unsafeintegerallowed ( ) )
[2]: org. junit. assert. assertequals ( org. digidoc4j. impl. bdoc. validationtests. prod_configuration. isasn1unsafeintegerallowed ( ), true )
[3]: org. junit. assert. assertnotnull ( servicename )
[4]: org. junit. assert. assertequals ( 1, urlconnection. contents ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( p1 . implies ( p2 ) )
[0]: org. junit. assert. assertequals ( 1, urlconnection. contents ( 0 ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, urlconnection. contents ( null ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, urlconnection. contents ( 1 ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, urlconnection. contents ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, dbfields. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( ismatch , org . hamcrest . matchers . equalto ( true ) )
[0]: org. junit. assert. assertarrayequals ( data, out. tobytearray ( ) )
[1]: org. junit. assert. assertequals ( data, out. tobytearray ( ) )
[2]: org. junit. assert. assertarrayequals ( data, out. tobytearray ( ) )
[3]: data ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "y" , v . get ( jetbrains . jetpad . projectional . view . viewtest . name ) )
[0]: org. junit. assert. assertequals ( 1, shpfiles. numberoflocks ( ) )
[1]: org. junit. assert. assertequals ( returned, assertions )
[2]: org. junit. assert. assertequals ( new org. fest. assertions. api. bigdecimal ( 1 ), returned )
[3]: org. junit. assert. assertequals ( new java. lang. long ( 1 ), returned )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), returned )

************

************
tgt: org . junit . assert . assertnull ( outputdatestr )
[0]: org. junit. assert. assertequals ( new org. fest. assertions. api. bigdecimal ( assertions ), returned )
[1]: org. junit. assert. assertequals ( os, readjsonable )
[2]: org. junit. assert. assertsame ( os, readjsonable )
[3]: org. junit. assert. assertequals ( o, readjsonable )
[4]: org. junit. assert. assertnotnull ( readjsonable )

************

************
tgt: org . junit . assert . assertnull ( err )
[0]: org. junit. assert. assertequals ( os, readjsonizable )
[1]: org. junit. assert. assertequals ( 200, response. getstatuscode ( ) )
[2]: org. junit. assert. assertequals ( 200, status. getstatuscode ( ) )
[3]: org. junit. assert. assertequals ( 0, mstatuscode. getstatuscode ( ) )
[4]: org. junit. assert. assertequals ( 200, mstatuscode. getstatuscode ( ) )

************

************
tgt: org . junit . assert . asserttrue ( test . contains ( 1 ) )
[0]: org. junit. assert. assertequals ( 1, mstatuscode. getstatuscode ( ) )
[1]: org. junit. assert. assertequals ( dss, dss. parsecookieid ( ) )
[2]: org. junit. assert. assertequals ( dss. parsecookieid ( ), null )
[3]: org. junit. assert. assertequals ( dss. parsecookieid ( ), search )
[4]: org. junit. assert. assertequals ( 1, cfis. available ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult . length , result . length )
[0]: org. junit. assert. assertequals ( 0, cfis. available ( ) )
[1]: org. junit. assert. assertequals ( testdata, cfis. available ( ) )
[2]: org. junit. assert. assertequals ( 1, cfis. available ( ). length )
[3]: ) )
[4]: org. junit. assert. assertarrayequals ( frame1, frame2 )

************

************
tgt: org . junit . assert . assertequals ( expectedghosttable , ghosttable )
[0]: org. junit. assert. asserttrue ( java. util. arrays. equals ( frame1, frame2 ) )
[1]: org. junit. assert. asserttrue ( java. util. arrays. equals ( frames1, frame2 ) )
[2]: org. junit. assert. assertarrayequals ( fram1, frame2 )
[3]: , frame1 )
[4]: org. junit. assert. assertnotnull ( response )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertnull ( response )
[1]: org. junit. assert. assertequals ( response. getstatus ( ), 200 )
[2]: org. junit. assert. assertequals ( 200, response. getstatus ( ) )
[3]: org. junit. assert. assertequals ( 200, response )
[4]: org. junit. assert. assertequals ( puser, urlcaptor. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( email . to ( ) . length , 6 )
[0]: org. junit. assert. assertequals ( puser. locked, urlcaptor. getvalue ( ) )
[1]: org. junit. assert. assertnotnull ( urlcaptor. getvalue ( ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, p. gettargetpos ( ) )

************

************
tgt: org . junit . assert . assertthat ( divforclass . isempty ( ) , org . hamcrest . core . is . is ( false ) )
[0]: org. junit. assert. assertequals ( s, p. gettargetpos ( ) )
[1]: org. junit. assert. assertequals ( 0, p. gettargetpos ( ) )
[2]: org. junit. assert. assertequals ( s. gettargetpos ( ), p. gettargetpos ( ) )
[3]: org. junit. assert. assertequals ( p. gettargetpos ( ), 2 )
[4]: org. junit. assert. assertthat ( whitelist. size ( ), org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , cf1 . childlist ( ) . size ( ) )
[0]: org. junit. assert. assertthat ( whitelist. size ( ), org. hamcrest. corematchers. is ( 0 ) )
[1]: org. junit. assert. assertthat ( whitelist. size ( ), org. hamcrest. corematchers. is ( 2 ) )
[2]: org. junit. assert. assertthat ( whitelist. size ( ), org. hamcrest. corematchers. is ( 3 ) )
[3]: ) )
[4]: org. junit. assert. assertthat ( facebook. pokes ( ), org. hamcrest. corematchers. instanceof ( facebook4j. pokemethods ) )

************

************
tgt: org . junit . assert . assertequals ( "id" , niftymouse . getcurrentid ( ) )
[0]: org. junit. assert. assertthat ( facebook. pokes ( ). instanceof ( facebook4j. pokemethods. class ) )
[1]: org. junit. assert. assertnotnull ( facebook. pokes ( ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( ifexpr, org. batfish. datamodel. packet_policy. class ), org. hamcrest. matchers. equalto ( ifexpr ) )

************

************
tgt: org . junit . assert . asserttrue ( gd . dontsweepinto ( ) )
[0]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( ifexpr, org. batfish. datamodel. packet_policy. ifexpr ), org. hamcrest. matchers. equalto ( ifexpr ) )
[1]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( ifexpr, org. batfish. datamodel. packet_policy. ifexpr. class ), org. hamcrest. matchers. equalto ( ifexpr ) )
[2]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( ifexpr, org. batfish. datamodel. packet_policy. interface. class ), org. hamcrest. matchers. equalto ( ifexpr ) )
[3]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( ifexpr, org. batfish. datamodel. packet_policy. packetmatchexpr. class ), org. hamcrest. matchers. equalto ( ifexpr ) )
[4]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )

************

************
tgt: org . junit . assert . asserttrue ( getnoerrormsg ( ) , result )
[0]: org. junit. assert. assertequals ( expected, tostringunsorted ( rs ) )
[1]: org. junit. assert. assertequals ( expected, java. util. arrays. tostringunsorted ( rs ) )
[2]: ( expected ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, args [ 6 ]. getstdoutcontents ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "json" , request . getcontenttype ( ) )
[0]: org. junit. assert. assertequals ( 1, args [ 6 ] )
[1]: org. junit. assert. assertnotnull ( getstdoutcontents ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( args ), s )
[3]: ) )
[4]: org. junit. assert. asserttrue ( block. isreserved ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , actualcontents )
[0]: org. junit. assert. assertfalse ( block. isreserved ( ) )
[1]: org. junit. assert. asserttrue ( (! ( block. isreserved ( ) ) ) )
[2]: org. junit. assert. asserttrue ( blocks. isreserved ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( uaa. runtests ( false, true ) )

************

************
tgt: org . junit . assert . assertfalse ( getbody ( response ) . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( uaa. runtests ( false, false ) )
[1]: org. junit. assert. assertnotnull ( uaa. runtests ( true, true ) )
[2]: org. junit. assert. assertnotnull ( uaa. runtests ( true, false ) )
[3]: org. junit. assert. assertnotnull ( uaa )
[4]: org. junit. assert. assertequals ( 1, loader. bootstrapcarrierdirectport ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( c1 . getclassreference ( ) , c2 . getclassreference ( ) )
[0]: org. junit. assert. assertnotnull ( loader. bootstrapcarrierdirectport ( ) )
[1]: org. junit. assert. assertequals ( 0, loader. bootstrapcarrierdirectport ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, loader. bootstrapcarrierdirectport ( ). length )
[3]: type ) )
[4]: org. junit. assert. assertfalse ( user. equals ( userx ) )

************

************
tgt: org . junit . assert . assertfalse ( a1 . matches ( w ) )
[0]: org. junit. assert. assertfalse ( user == ( userx. equals ( userx ) ) )
[1]: org. junit. assert. assertfalse ( user. equals ( java. lang. object. class ) )
[2]: org. junit. assert. assertfalse ( user. equals ( usersx ) )
[3]: org. junit. assert. assertequals ( 1, popupcontentc. isvisible ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, popupcontentc. isvisible ( ) )

************

************
tgt: org . junit . assert . assertequals ( "hello" , bean . hello ( ) )
[0]: org. junit. assert. assertequals ( 0, popupcontentc. isvisible ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, popupcontentc. isvisible ( ). length )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), popupcontentc )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), c. next ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4 ), c. next ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , projects . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), c. next ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), c. next ( ) )
[2]: org. junit. assert. assertequals ( 1, c. next ( ). get ( ) )
[3]: org. junit. assert. assertequals ( result, null )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( ( expected == ( org . threadly . util . exceptionutils . getcauseoftypes ( e , java . util . collections . singletonlist ( org . threadly . util . illegalargumentexception . class ) ) ) ) )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( result, "org. s )
[2]: org. junit. assert. assertequals ( result, " )
[3]: org. junit. assert. assertequals ( projectprivilegessingle, projectprivileges )
[4]: org. junit. assert. assertequals ( projectprivilegessingle, projectprivileges )

************

************
tgt: org . junit . assert . assertnotnull ( properties )
[0]: org. junit. assert. assertequals ( projectsprivilegessingle, projectprivileges )
[1]: , projectprivileges )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( org. netbeans. modules. web. clientproject. api. network. ui. networkerrorpanel. decoraterequest ( request ) )
[4]: org. junit. assert. assertnotnull ( org. netbeans. modules. web. clientproject. api. network. u. networkerrorpanel. decoraterequest ( request ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , list . getdata ( ) . size ( ) )
[0]: org. junit. assert. assertnotnull ( org. netbeans. modules. web. clientproject. api. network. ui. networkerrorpanel. decoraterequest )
[1]: org. junit. assert. assertnotnull ( handler. decoraterequest ( request ) )
[2]: org. junit. assert. assertnotnull ( request )
[3]: org. junit. assert. assertequals ( 1, change. changesize ( ) )
[4]: org. junit. assert. assertequals ( 0, change. changesize ( ) )

************

************
tgt: org . junit . assert . assertnull ( title . getlinkurl ( ) )
[0]: org. junit. assert. assertequals ( 3, change. changesize ( ) )
[1]: org. junit. assert. assertequals ( 1, change. changesizes ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( t [ i ], a [ i ], 0 )
[4]: org. junit. assert. assertequals ( t [ i ], a [ ( i + 1 ) ], 0 )

************

************
tgt: org . junit . assert . assertnull ( stream )
[0]: org. junit. assert. assertequals ( t [ i ], a [ i ], 0.0 )
[1]: org. junit. assert. assertequals ( t [ ( i + 1 ) ], a [ i ], 0 )
[2]: org. junit. assert. assertequals ( t [ i ], a [ ( i + 1 ) ], 0.0 )
[3]: org. junit. assert. assertequals ( 1, numresults )
[4]: org. junit. assert. assertequals ( 1l, numresults )

************

************
tgt: org . junit . assert . assertnull ( reader . read ( ) )
[0]: org. junit. assert. assertequals ( 2, numresults )
[1]: org. junit. assert. assertequals ( 1, req. getop ( ) )
[2]: org. junit. assert. asserttrue ( session3. propertyexists ( null ) )
[3]: org. junit. assert. asserttrue ( session3. propertyexists ( session2. getid ( ) ) )
[4]: org. junit. assert. asserttrue ( session3. propertyexists ( string ) )

************

************
tgt: org . junit . assert . assertequals ( ( size - 1 ) , service . getallproviderattributetypes ( ) . size ( ) )
[0]: org. junit. assert. asserttrue ( session3. propertyexists ( session2. tostring ( ) ) )
[1]: org. junit. assert. asserttrue ( session3. propertyexists ( session2. getname ( ) ) )
[2]: org. junit. assert. assertnull ( org. eclipse. rap. rwt. internal. service. contextprovider. getlocale ( ) )
[3]: org. junit. assert. assertequals ( fontdata. getlocale ( ), fontdata. getlocale ( ) )
[4]: org. junit. assert. assertnull ( fontdata. getlocale ( ) )

************

************
tgt: org . junit . assert . assertequals ( "bar" , sb . tostring ( ) )
[0]: org. junit. assert. assertequals ( fontdata. getlocale ( ), fontdata )
[1]: ) )
[2]: org. junit. assert. assertnull ( concept. getname ( localetosearch, false ) )
[3]: org. junit. assert. assertequals ( true, enabled )
[4]: org. junit. assert. asserttrue ( enabled )

************

************
tgt: org . junit . assert . assertthat ( request . messages . size ( ) , org . hamcrest . matchers . is ( 2 ) )
[0]: org. junit. assert. asserttrue ( enables )
[1]: org. junit. assert. assertfalse ( enabled )
[2]: org. junit. assert. assertequals ( true, enables )
[3]: org. junit. assert. assertnotnull ( e )
[4]: org. junit. assert. assertequals ( 1, e. status )

************

************
tgt: org . junit . assert . assertnotnull ( finding )
[0]: org. junit. assert. assertequals ( condition, e )
[1]: ) )
[2]: 
[3]: org. junit. assert. assertfalse ( success )
[4]: org. junit. assert. assertnotnull ( content )

************

************
tgt: org . junit . assert . assertequals ( v8object . hashcode ( ) , twin . hashcode ( ) )
[0]: org. junit. assert. assertnull ( content )
[1]: , content )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnotnull ( adminpage. getscreentitle ( null ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertnotnull ( adminpage. getscreentitle ( org. apache. hadoop. conf. configuration. class. getname ( ) ) )
[1]: org. junit. assert. assertnotnull ( adminpage. getscreentitle ( org. apache. hadoop. util. arraylist. class. getname ( ) ) )
[2]: org. junit. assert. assertnotnull ( adminpage. getscreentitle ( java. lang. string. class. getname ( ) ) )
[3]: org. junit. assert. assertnotnull ( adminpage. getscreentitle ( org. apache. hadoop. util. arraylist. class ) )
[4]: org. junit. assert. assertequals ( grammarasstring, issues. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( def . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( grammarasstring, issues. size ( ) )
[1]: org. junit. assert. assertequals ( grammarasstring, issues )
[2]: org. junit. assert. assertequals ( 1, issues. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( bundle. getpdfurl ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( currentbestchromosomefitness . compareto ( this . previousbestchromosomefitness ) ) <= 0 ) )
[0]: org. junit. assert. assertnotnull ( gm. getpdfurl ( ) )
[1]: org. junit. assert. assertnotnull ( queu. getpdfurl ( ) )
[2]: org. junit. assert. assertnotnull ( cpu. getpdfurl ( ) )
[3]: ) )
[4]: org. junit. assert. assertfalse ( parser. accept ( state ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , errordata . size ( ) )
[0]: org. junit. assert. assertfalse ( org. openspotlight. common. util. assertions. accept ( state ) )
[1]: org. junit. assert. assertfalse ( handler. accept ( state ) )
[2]: org. junit. assert. assertfalse ( state. accept ( state ) )
[3]: org. junit. assert. assertfalse ( org. openspotlight. common. util. assertions. accepting ( state ) )
[4]: org. junit. assert. assertnotnull ( combo. getlistvisible ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . long . valueof ( 1 ) , count )
[0]: org. junit. assert. asserttrue ( combo. getlistvisible ( ). isempty ( ) )
[1]: org. junit. assert. assertnull ( combo. getlistvisible ( ) )
[2]: org. junit. assert. assertequals ( 1, combo. getlistvisible ( ). length )
[3]: org. junit. assert. assertequals ( 1, combo. getlistvisible ( ) )
[4]: org. junit. assert. asserttrue ( mimageref2. isvalid ( ) )

************

************
tgt: org . junit . assert . assertequals ( msg , listener . getmsg ( ) )
[0]: org. junit. assert. asserttrue ( predicate. apply ( record ) )
[1]: org. junit. assert. assertequals ( true, predicate. apply ( record ) )
[2]: org. junit. assert. assertequals ( 1, predicate. apply ( record ) )
[3]: org. junit. assert. assertequals ( istrue, predicate. apply ( record ) )
[4]: org. junit. assert. assertnotnull ( predicate. apply ( record ) )

************

************
tgt: org . junit . assert . asserttrue ( r )
[0]: org. junit. assert. assertequals ( 0, result. getresult ( ) )
[1]: org. junit. assert. assertequals ( 0, result. getresult ( ). length )
[2]: org. junit. assert. assertequals ( 1, result. getresult ( ) )
[3]: org. junit. assert. assertequals ( 1, result. getresult ( ). length )
[4]: org. junit. assert. assertequals ( 0, result. getresult ( ). 0 )

************

************
tgt: org . junit . assert . assertequals ( expectedelement , actualelement )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), block. value ( 1, 1 ) )
[1]: org. junit. assert. assertequals ( null, block. value ( 1, null ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), block. values ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), block. value ( 1, 1 ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), block. values ( ) [ 0 ] )

************

************
tgt: org . junit . assert . assertnull ( converter )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertequals ( intersect, range1 )
[2]: org. junit. assert. assertequals ( intersect, range2 )
[3]: org. junit. assert. assertequals ( intersect, ranges1 )
[4]: org. junit. assert. assertequals ( intersect, ranges2 )

************

************
tgt: org . junit . assert . assertequals ( keyexpected , keybuilt )
[0]: org. junit. assert. assertnotnull ( intersect )
[1]: org. junit. assert. assertequals ( ( - 5 ), testclient. getofflinepublishqueuebound ( ) )
[2]: org. junit. assert. assertequals ( ( - 1 ), testclient. getofflinepublishqueuebound ( ) )
[3]: org. junit. assert. assertequals ( ( - 5 ), testclient. getofflinepublishqueuebound ( ). length )
[4]: org. junit. assert. assertequals ( ( - 5 ), testclient. getofflinepublishqueuebound ( ). size ( )

************

************
tgt: org . junit . assert . assertequals ( expected , query . export ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( expected )
[2]: org. junit. assert. assertnotnull ( spec )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnotnull ( testrcfileprotobuf )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( expected, testrcfilestorage )
[1]: org. junit. assert. assertnotnull ( target )
[2]: org. junit. assert. assertnotnull ( target. name )
[3]: org. junit. assert. assertnotnull ( target. data )
[4]: org. junit. assert. assertnotnull ( target. s )

************

************
tgt: org . junit . assert . assertfalse ( processdefinition . issuspended ( ) )
[0]: org. junit. assert. assertnotnull ( target. field )
[1]: org. junit. assert. assertequals ( result. ok, datasource. validate ( container ). getstatus ( ) )
[2]: org. junit. assert. assertequals ( sqlexpression, newtinit )
[3]: org. junit. assert. assertequals ( sqlexpression, newtoop )
[4]: org. junit. assert. assertequals ( sqlexpression, newtk )

************

************
tgt: org . junit . assert . asserttrue ( socket . isconnected ( ) )
[0]: org. junit. assert. assertequals ( sqlexpression, newtenum )
[1]: org. junit. assert. assertnotnull ( sqlexpression )
[2]: org. junit. assert. assertequals ( true, hive )
[3]: org. junit. assert. assertequals ( false, hive )
[4]: org. junit. assert. assertequals ( 1, hive )

************

************
tgt: org . junit . assert . assertequals ( 2 , a . getlength ( ) )
[0]: org. junit. assert. assertnotnull ( builder. build ( ) )
[1]: org. junit. assert. asserttrue ( builder. build ( ) )
[2]: org. junit. assert. assertnotnull ( builder )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertnotnull ( row )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertequals ( 0, list. size ( ) )
[2]: org. junit. assert. assertequals ( 3, list. size ( ) )
[3]: org. junit. assert. assertequals ( 2, list. size ( ) )
[4]: org. junit. assert. assertequals ( 1, list. size ( ) ) ;

************

************
tgt: org . junit . assert . assertequals ( rulesblob , rulesbuffer )
[0]: org. junit. assert. asserttrue ( manager. mustblockcallbackrequest ( ) )
[1]: org. junit. assert. assertnotnull ( container. child. get ( ) )
[2]: org. junit. assert. assertequals ( 1, container. child. get ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, container. child. get ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, container. child. get ( ) )

************

************
tgt: org . junit . assert . assertthat ( chksumchannel . getchecksums ( ) , is ( empty ( ) ) )
[0]: org. junit. assert. assertnotnull ( handler )
[1]: org. junit. assert. assertequals ( null, handler )
[2]: org. junit. assert. assertequals ( handler, null )
[3]: org. junit. assert. assertequals ( agteam, handler )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( keyword . getaction ( ) )
[0]: org. junit. assert. assertequals ( 1, suggestionsportletdisplaycontext. hasspellchecksuggestion ( ) )
[1]: org. junit. assert. assertequals ( 0, suggestionsportletdisplaycontext. hasspellchecksuggestion ( ) )
[2]: org. junit. assert. assertequals ( true, suggestionsportletdisplaycontext. hasspellchecksuggestion ( ) )
[3]: org. junit. assert. assertequals ( guaranteed, suggestionsportletdisplaycontext. hasspellchecksuggestion ( ) )
[4]: org. junit. assert. assertequals ( null, suggestionsportletdisplaycontext. hasspellchecksuggestion ( ) )

************

************
tgt: org . junit . assert . assertfalse ( metadata . isempty ( ) )
[0]: org. junit. assert. assertequals ( expected, suffix. get ( index ) )
[1]: org. junit. assert. assertequals ( expected. get ( index ), suffix )
[2]: org. junit. assert. assertequals ( expected, suffix )
[3]: get ( index ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( spi . getinputtypes ( ) )
[0]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( m, java. lang. object. class ), org. hamcrest. matchers. equalto ( m ) )
[1]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( m, "<. datamodel. mlag. class ), org. hamcrest. matchers. equalto ( m ) )
[2]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( m, org. batfish. datamodel. ip. class ), org. hamcrest. matchers. equalto ( m ) )
[3]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( m, java. lang. class ), org. hamcrest. matchers. equalto ( m ) )
[4]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( m, org. batfish. datamodel. mlag. class ), org. hamcrest. matchers. empty ( ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . float ( value ) , wrapper . getfloat ( ) )
[0]: org. junit. assert. assertequals ( 0, retval )
[1]: org. junit. assert. assertequals ( 1, retval )
[2]: org. junit. assert. assertequals ( 1, testfile. length ( ) )
[3]: org. junit. assert. assertequals ( basename, imported )
[4]: org. junit. assert. assertnotnull ( imported )

************

************
tgt: org . junit . assert . assertnull ( credentials . getidentity ( ) )
[0]: org. junit. assert. assertequals ( basename, imported )
[1]: org. junit. assert. assertnull ( imported )
[2]: , imported )
[3]: org. junit. assert. assertequals ( p. getstoragemanager ( ). size ( ), 1 )
[4]: org. junit. assert. assertequals ( p. getstoragemanager ( ). size ( ), 0 )

************

************
tgt: org . junit . assert . assertequals ( de , results . next ( ) )
[0]: org. junit. assert. assertequals ( s. getstoragemanager ( ). size ( ), 1 )
[1]: org. junit. assert. assertequals ( 1000, server. getstoragemanager ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, server. getstoragemanager ( ). size ( ) )
[3]: org. junit. assert. assertequals ( list. tostring ( ), copy. tostring ( ) )
[4]: org. junit. assert. assertthat ( copy. tostring ( ), org. hamcrest. corematchers. is ( list. tostring ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( retriable )
[0]: org. junit. assert. assertequals ( list. tostring ( ), copy. size ( ) )
[1]: org. junit. assert. assertthat ( list. tostring ( ), org. hamcrest. corematchers. is ( copy. tostring ( ) ) )
[2]: org. junit. assert. assertthat ( copy. tostring ( ), org. hamcrest. core. is. is ( list ) )
[3]: org. junit. assert. assertequals ( result, input )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertthat ( oid1 , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( oid2 ) ) )
[0]: org. junit. assert. assertequals ( result, inputs )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 0, config. state. size ( ) )
[4]: org. junit. assert. assertequals ( 0, config. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( valid )
[0]: org. junit. assert. assertequals ( 0, config. name )
[1]: org. junit. assert. assertequals ( 0, config. name. size ( ) )
[2]: org. junit. assert. assertequals ( 0, config. core. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), serialize ( writable ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( writable ), serialize ( writable ) )

************

************
tgt: org . junit . assert . asserttrue ( instanceconstraintviolationslist . tostring ( ) , ( ( instanceconstraintviolationslist . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertnotnull ( serialize ( writable ) )
[1]: org. junit. assert. assertequals ( 0, serialize ( writable ). length )
[2]: org. junit. assert. assertnull ( serialize ( writable ) )
[3]: org. junit. assert. assertnotnull ( version )
[4]: org. junit. assert. assertequals ( version, this. version )

************

************
tgt: org . junit . assert . assertthat ( flavorparser . parseflavorstring ( "foo" ) , org . hamcrest . matchers . contains ( "foo" ) )
[0]: org. junit. assert. assertequals ( version, version )
[1]: org. junit. assert. assertequals ( version, null )
[2]: org. junit. assert. assertequals ( version, this. workspace )
[3]: org. junit. assert. assertnotnull ( l. getcontent ( nosuchuri, null ) )
[4]: org. junit. assert. assertnotnull ( util. getcontent ( nosuchuri, null ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , returnedoptions . size ( ) )
[0]: org. junit. assert. assertnotnull ( lhauri. getcontent ( nosuchuri, null ) )
[1]: org. junit. assert. assertnotnull ( getcontent ( nosuchuri, null ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( java. util. collections. empty ( ), errors )
[4]: org. junit. assert. assertthat ( errors, empty ( ) )

************

************
tgt: org . junit . assert . assertfalse ( validator . isvalid ( beans2 , context ) )
[0]: org. junit. assert. assertequals ( java. util. optional. empty ( ), errors )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), errors )
[2]: org. junit. assert. assertequals ( java. util. empty ( ), errors )
[3]: org. junit. assert. assertequals ( largemeta, unbound )
[4]: org. junit. assert. assertequals ( largemeta, actual )

************

************
tgt: org . junit . assert . assertequals ( expected , objectvalue )
[0]: org. junit. assert. assertequals ( largemeta, subscription )
[1]: org. junit. assert. assertequals ( largemeta, transaction. tostring ( ) )
[2]: test truthfully )
[3]: org. junit. assert. assertnull ( software. amazon. awssdk. core. util. json. jacksonutils. fromjson ( null ) )
[4]: org. junit. assert. assertnull ( software. amazon. awssdk. services. dynamodb. document. item. jacksonutils. fromjson ( null ) )

************

************
tgt: org . junit . assert . assertequals ( jaxbcontext1 , jaxbcontext2 )
[0]: org. junit. assert. assertnotnull ( software. amazon. awssdk. core. util. json. jacksonutils. fromjson ( null ) )
[1]: org. junit. assert. assertnull ( software. amazon. awssdk. core. util. json. jacksonutils. fromjson ( ""foo"" ) )
[2]: org. junit. assert. assertnull ( software. amazon. awssdk. core. util. json. jacksonutils. fromjson ( ""a"" ) )
[3]: org. junit. assert. assertequals ( null, field )
[4]: org. junit. assert. assertequals ( java. util. optional. empty ( ), field )

************

************
tgt: org . junit . assert . asserttrue ( element . valideerinhoud ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( expected, list )
[1]: org. junit. assert. assertthat ( list, org. hamcrest. corematchers. is ( expected ) )
[2]: org. junit. assert. assertthat ( list, org. hamcrest. matchers. is ( expected ) )
[3]: org. junit. assert. assertequals ( expected. size ( ), list. size ( ) )
[4]: org. junit. assert. assertequals ( expected. toarray ( ), list. toarray ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( dbmd )
[0]: org. junit. assert. assertequals ( capacity. max_power2, com. conversantmedia. util. concurrent. capacity. getcapacity ( 1 ) )
[1]: org. junit. assert. assertequals ( 3, com. conversantmedia. util. concurrent. capacity. getcapacity ( 1 ) )
[2]: org. junit. assert. assertequals ( 1, com. conversantmedia. util. concurrent. capacity. getcapacity ( 1 ) )
[3]: org. junit. assert. assertequals ( 3, com. conversantmedia. util. concurrent. capacity. getcapacity ( 3 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . long . valueof ( ( - 1 ) ) , callback . convert ( reply ) )
[0]: org. junit. assert. assertthat ( runner1. equals ( runner1 ), org. hamcrest. corematchers. is ( false ) )
[1]: org. junit. assert. assertthat ( runner1. equals ( runner1 ), org. hamcrest. corematchers. is ( true ) )
[2]: org. junit. assert. assertthat ( runner1. equals ( null ), org. hamcrest. corematchers. is ( false ) )
[3]: org. junit. assert. assertfalse ( runner1. equals ( null ) )
[4]: org. junit. assert. assertequals ( false, runner1. equals ( null ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , classundertest . getmaintabplacement ( ) )
[0]: org. junit. assert. assertnotnull ( this. target. retrievepublicipaddress ( null, null ) )
[1]: org. junit. assert. assertnotnull ( this. retry. retrievepublicipaddress ( null, null ) )
[2]: org. junit. assert. assertnotnull ( this. configuration. retrievepublicipaddress ( null, null ) )
[3]: org. junit. assert. assertnotnull ( mybean. lookup ( ) )
[4]: org. junit. assert. assertnotnull ( mybean )

************

************
tgt: org . junit . assert . asserttrue ( ( ( org . appenders . log4j2 . elasticsearch . bulkemittertest . test_batch_size ) > 1 ) )
[0]: org. junit. assert. assertequals ( 1, mybean. lookup ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), mybean )
[2]: ) )
[3]: org. junit. assert. assertthat ( org. slim3. util. doubleutil. toprimitivedouble ( 1 ), org. hamcrest. corematchers. is ( 1 ) )
[4]: org. junit. assert. assertthat ( org. slim3. util. doubleutil. toprimitivedouble ( null ), org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , unfolded . size ( ) )
[0]: org. junit. assert. assertthat ( org. slim3. util. doubleutil. toprimitivedouble ( null ), org. hamcrest. corematchers. is ( 1.0 ) )
[1]: org. junit. assert. asserttrue ( hasindexrangekeycondition )
[2]: org. junit. assert. assertequals ( true, hasindexrangekeycondition )
[3]: org. junit. assert. assertnotnull ( handler. getinstance ( ) )
[4]: org. junit. assert. assertnotnull ( factory. getinstance ( ) )

************

************
tgt: org . junit . assert . assertthat ( postbuilditem . hasresult ( ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertnotnull ( context. getinstance ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( iah1, iah2 )
[4]: org. junit. assert. assertnotnull ( iah2 )

************

************
tgt: org . junit . assert . assertequals ( verwachtpersoonid , persoonid )
[0]: org. junit. assert. assertnotnull ( iah2. id ( ) )
[1]: org. junit. assert. assertnotnull ( iah1 )
[2]: org. junit. assert. assertequals ( iah1, iah2 )
[3]: org. junit. assert. assertequals ( true, presenter. isusingfilepath ( ) )
[4]: org. junit. assert. asserttrue ( rooted )

************

************
tgt: org . junit . assert . assertequals ( result , "" )
[0]: org. junit. assert. assertfalse ( rooted )
[1]: org. junit. assert. assertequals ( true, rooted )
[2]: org. junit. assert. assertequals ( false, rooted )
[3]: org. junit. assert. assertnotnull ( rooted )
[4]: org. junit. assert. assertequals ( 1, updatedoccurrenceslist. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( debugger . isconnected ( ) )
[0]: org. junit. assert. assertequals ( 0, updatedoccurrenceslist. size ( ) )
[1]: org. junit. assert. assertequals ( 3, updatedoccurrenceslist. size ( ) )
[2]: org. junit. assert. assertequals ( 2, updatedoccurrenceslist. size ( ) )
[3]: org. junit. assert. assertequals ( 10, updatedoccurrenceslist. size ( ) )
[4]: org. junit. assert. assertequals ( 1, names. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 15 , atact1 . get ( 0 ) )
[0]: org. junit. assert. assertequals ( 0, names. size ( ) )
[1]: org. junit. assert. assertnotnull ( names )
[2]: org. junit. assert. assertequals ( list, names )
[3]: ) )
[4]: org. junit. assert. assertequals ( value, actualvalue )

************

************
tgt: org . junit . assert . assertequals ( timestr , null )
[0]: org. junit. assert. assertequals ( string, actualvalue )
[1]: org. junit. assert. assertequals ( field, actualvalue )
[2]: org. junit. assert. assertequals ( name, actualvalue )
[3]: org. junit. assert. assertequals ( fieldname, actualvalue )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertequals ( imagemode . getimagenativesize ( image ) , areaprovider . getnativesize ( image ) )
[0]: org. junit. assert. assertequals ( 1, e. getclass ( ) )
[1]: org. junit. assert. assertequals ( 1, e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( 0, e. getclass ( ) )
[3]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[4]: org. junit. assert. asserttrue ( file. containsgroup ( null ) )

************

************
tgt: org . junit . assert . assertequals ( integers , results )
[0]: org. junit. assert. assertnotnull ( msg )
[1]: org. junit. assert. assertnotnull ( err )
[2]: _2 ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertfalse ( match . docredentialsmatch ( token , info ) )
[0]: org. junit. assert. asserttrue ( theproperty. isnull ( ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( ""a"", result )
[3]: org. junit. assert. assertequals ( ""foo"", result )
[4]: org. junit. assert. assertequals ( """", result )

************

************
tgt: org . junit . assert . assertfalse ( injected )
[0]: org. junit. assert. assertequals ( ""test"", result )
[1]: org. junit. assert. assertequals ( ""a"", buf. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( depth ), buf. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( depth ), buf. tostring ( ) )
[4]: org. junit. assert. assertequals ( ""foo"", buf. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , c2 . getvotes ( ) )
[0]: org. junit. assert. assertequals ( ""1"", buf. tostring ( ) )
[1]: org. junit. assert. assertequals ( 1, path. getshapes ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, path. getshapes ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), path. getshapes ( ) )
[4]: org. junit. assert. assertequals ( 3, path. getshapes ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( state . isaggregatable ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( string, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( condition . match ( event1 ) )
[0]: , result )
[1]: org. junit. assert. assertarrayequals ( data, calculated )
[2]: org. junit. assert. assertarrayequals ( data, calculated. tobytearray ( ) )
[3]: org. junit. assert. assertarrayequals ( data, new byte [ ] { 1, 2 } )
[4]: org. junit. assert. assertarrayequals ( data, data )

************

************
tgt: org . junit . assert . assertequals ( com . google . common . collect . lists . newarraylist ( new org . apache . kylin . storage . gtrecord . sortediteratormergerwithlimittest . cloneableinteger ( 1 ) , new org . apache . kylin . storage . gtrecord . sortediteratormergerwithlimittest . cloneableinteger ( 2 ) , new org . apache . kylin . storage . gtrecord . sortediteratormergerwithlimittest . cloneableinteger ( 2 ) , new org . apache . kylin . storage . gtrecord . sortediteratormergerwithlimittest . cloneableinteger ( 5 ) ) , result )
[0]: org. junit. assert. assertarrayequals ( expected, data )
[1]: org. junit. assert. assertequals ( itemlist, checker. item )
[2]: org. junit. assert. assertequals ( itemlist, plugin. item )
[3]: org. junit. assert. assertequals ( itemlist, 1 )
[4]: org. junit. assert. assertequals ( itemlist, checker. items )

************

************
tgt: org . junit . assert . assertequals ( sequencial , importacaoadicao . getsequencial ( ) )
[0]: org. junit. assert. assertequals ( itemlist, 0 )
[1]: org. junit. assert. assertnotnull ( userservice. finduserindb ( loadingservicetestdatas. sqlsubdomain, null ) )
[2]: org. junit. assert. assertnotnull ( userservice. finduserindb ( loadingservicetestdatas. sqlsubdomain, loadingservicetestdatas. executed ) )
[3]: org. junit. assert. assertnotnull ( userservice. finduserindb ( loadingservicetestdatas. sqlsubdomain ) )
[4]: org. junit. assert. assertnotnull ( userservice )

************

************
tgt: org . junit . assert . assertequals ( 0 , points . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, actuals. size ( ) )
[2]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. join ( ), e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. tostring ( ), e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( e )
[0]: org. junit. assert. asserttrue ( e. getmessage ( ). contains ( content ) )
[1]: . getmessage ( ) )
[2]: org. junit. assert. assertnotnull ( suggestion. getscore ( ) )
[3]: org. junit. assert. assertequals ( suggestion, suggestion. getscore ( ) )
[4]: org. junit. assert. assertequals ( suggestion, currentscore )

************

************
tgt: org . junit . assert . assertequals ( 1 , size )
[0]: org. junit. assert. assertnotnull ( suggestion )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, calc. getresult ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, calc. getresult ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, featurecollection. getresult ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( handler . getdnodelist ( ) . size ( ) , 1 )
[0]: org. junit. assert. assertnull ( calc. getresult ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), featurecollection )
[2]: org. junit. assert. assertequals ( s, s )
[3]: org. junit. assert. assertnotnull ( s )
[4]: org. junit. assert. assertnull ( s )

************

************
tgt: org . junit . assert . assertequals ( new com . github . rinde . rinsim . geom . point ( 3 , 1 ) , result )
[0]: org. junit. assert. assertequals ( s, null )
[1]: org. junit. assert. assertequals ( s, msg )
[2]: org. junit. assert. assertequals ( 0, index. estimatetotalcount ( ) )
[3]: org. junit. assert. assertequals ( 0, types. estimatetotalcount ( ) )
[4]: org. junit. assert. assertequals ( 1, index. estimatetotalcount ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( tx )
[0]: org. junit. assert. assertequals ( 2, index. estimatetotalcount ( ) )
[1]: org. junit. assert. assertequals ( 4, index. estimatetotalcount ( ) )
[2]: org. junit. assert. assertnotnull ( log )
[3]: org. junit. assert. assertequals ( 0, log )
[4]: org. junit. assert. assertequals ( 1, log )

************

************
tgt: org . junit . assert . assertequals ( 0 , ( ( org . eclipse . kapua . message . internal . kapuamessageimpl < org . eclipse . kapua . message . kapuachannel , org . eclipse . kapua . message . kapuapayload > ) ( kapuamessagefirst ) ) . compareto ( ( ( org . eclipse . kapua . message . internal . kapuamessageimpl < org . eclipse . kapua . message . kapuachannel , org . eclipse . kapua . message . kapuapayload > ) ( kapuamessagesecond ) ) ) )
[0]: org. junit. assert. assertnotnull ( logfile )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( socket )
[3]: org. junit. assert. assertnotnull ( socket. getinputstream ( ) )
[4]: org. junit. assert. assertequals ( 1, socket. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, socket. size ( ) )
[1]: org. junit. assert. assertequals ( 1, socket. count ( ) )
[2]: org. junit. assert. assertequals ( 1, model. size ( ) )
[3]: org. junit. assert. assertequals ( 0, model. size ( ) )
[4]: org. junit. assert. assertequals ( 3, model. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( s . equals ( o ) )
[0]: org. junit. assert. assertnotnull ( model. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, studies. size ( ) )
[3]: org. junit. assert. assertequals ( 0, studies. size ( ) )
[4]: org. junit. assert. asserttrue ( ( ( studies. size ( ) ) == 1 ) )

************

************
tgt: org . junit . assert . assertequals ( "testurl" , result )
[0]: org. junit. assert. assertequals ( 1l, studies. size ( ) )
[1]: org. junit. assert. assertequals ( 2, studies. size ( ) )
[2]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. models. runnerimpltest. text, runner. getenvironmentid ( ) )
[3]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. models. runnerimpltest. message, runner. getenvironmentid ( ) )
[4]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. models. runnerimpltest. body, runner. getenvironmentid ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. models. runnerimpltest. document, runner. getenvironmentid ( ) )
[1]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. models. runnerimpltest. data, runner. getenvironmentid ( ) )
[2]: org. junit. assert. assertequals ( 0, expressiestrings. size ( ) )
[3]: org. junit. assert. assertequals ( 1, expressiestrings. size ( ) )
[4]: org. junit. assert. assertequals ( 1, expressiestrings. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , books . size ( ) )
[0]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 2, 3 }, id )
[1]: org. junit. assert. assertarrayequals ( java. lang. string. class, id )
[2]: org. junit. assert. assertarrayequals ( id, blocks )
[3]: org. junit. assert. assertnotnull ( id )
[4]: )

************

************
tgt: org . junit . assert . assertnotnull ( graph )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( "john" , org . openl . rules . binding . fieldaccesstest . instance . test1 ( ) )
[0]: org. junit. assert. assertnotnull ( lookup )
[1]: org. junit. assert. assertnull ( lookup )
[2]: org. junit. assert. assertequals ( null, lookup )
[3]: org. junit. assert. assertequals ( c2, lookup )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( id , container . getidbyindex ( ( ( container . size ( ) ) - 1 ) ) )
[0]: org. junit. assert. assertnull ( manager. heartbeat ( 1l ) )
[1]: org. junit. assert. assertnull ( manager. heartbeat ( ""foo"" ) )
[2]: org. junit. assert. assertnull ( manager. heartbeat ( null ) )
[3]: org. junit. assert. assertnull ( manager. heartbeat ( org. mockito. mockito. mock ( java. lang. string. class ) ) )
[4]: org. junit. assert. assertnull ( manager. heartbeat ( org. apache. tc. l2. state. servervoter_response ) )

************

************
tgt: org . junit . assert . assertnull ( missingsyncdevice )
[0]: org. junit. assert. assertnotnull ( issues )
[1]: org. junit. assert. asserttrue ( issues. isempty ( ) )
[2]: org. junit. assert. assertequals ( 1, issues. length )
[3]: , issues )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( expct ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( 0, result. size ( ) )
[2]: org. junit. assert. assertnotnull ( p. tostring ( ) )
[3]: org. junit. assert. assertequals ( p. tostring ( ), p. tostring ( ) )
[4]: org. junit. assert. assertequals ( p. tostring ( ), null )

************

************
tgt: org . junit . assert . assertthat ( org . openmrs . module . htmlformentry . test . testcustomsubmissionaction . getnumberofcalls ( ) , org . hamcrest . core . is . is ( 1 ) )
[0]: org. junit. assert. assertequals ( p. tostring ( ), java. lang. string. class )
[1]: org. junit. assert. assertequals ( p. tostring ( ), expected )
[2]: org. junit. assert. assertnotnull ( geoddiams )
[3]: org. junit. assert. assertequals ( 1, geoddiams )
[4]: org. junit. assert. assertequals ( 1, geoddiams. length )

************

************
tgt: org . junit . assert . assertequals ( expectedspec , actualspec )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( s, m. int2intentryset ( ) )
[3]: org. junit. assert. assertarrayequals ( s. toarray ( ), m. toarray ( ) )
[4]: org. junit. assert. assertnull ( m. int2intentryset ( ) )

************

************
tgt: org . junit . assert . assertfalse ( ept . evaluatetree ( ) )
[0]: org. junit. assert. assertarrayequals ( s. toarray ( ), m. size ( ) )
[1]: org. junit. assert. assertequals ( s, m )
[2]: org. junit. assert. assertequals ( 0, cacheloader. getloadcount ( ) )
[3]: org. junit. assert. assertequals ( 1, cacheloader. getloadcount ( ) )
[4]: org. junit. assert. assertequals ( 3, cacheloader. getloadcount ( ) )

************

************
tgt: org . junit . assert . assertequals ( false , callback . getresult ( ) )
[0]: org. junit. assert. assertequals ( zero, cacheloader. getloadcount ( ) )
[1]: ) )
[2]: org. junit. assert. assertarrayequals ( result, result )
[3]: org. junit. assert. assertarrayequals ( result, result [ 0 ] )
[4]: org. junit. assert. assertnotnull ( result [ 0 ] )

************

************
tgt: org . junit . assert . assertsame ( assertions , returned )
[0]: org. junit. assert. assertequals ( result [ 0 ], value )
[1]: ) )
[2]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( java. util. collections. singletonlist ( context ) ) )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( java. util. arrays. aslist ( context ) ) )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( java. util. optional. of ( context ) ) )

************

************
tgt: org . junit . assert . assertnull ( providerrole )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( java. lang. object. class ) )
[1]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( 1 ) )
[2]: org. junit. assert. assertequals ( 1, groups. size ( ) )
[3]: org. junit. assert. assertequals ( 0, groups. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), groups )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( 1 , 2 , 3 ) , list )
[0]: org. junit. assert. assertequals ( 1, group. size ( ) )
[1]: org. junit. assert. assertequals ( 3, groups. size ( ) )
[2]: org. junit. assert. assertequals ( expected, iterator. next ( ) )
[3]: org. junit. assert. assertnull ( iterator. next ( ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 200 , response . getstatus ( ) )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. assertequals ( 3, result. size ( ) )
[2]: org. junit. assert. assertnull ( getcontentsoftextonlynode ( e ) )
[3]: org. junit. assert. assertequals ( null, getcontentsoftextonlynode ( e ) )
[4]: org. junit. assert. assertnotnull ( getcontentsoftextonlynode ( e ) )

************

************
tgt: org . junit . assert . assertequals ( rebuilt , person )
[0]: org. junit. assert. assertnull ( getcontentsoftextonlynode ( doc ) )
[1]: org. junit. assert. assertequals ( null, getcontentsoftextonlynode ( doc ) )
[2]: org. junit. assert. assertnull ( isvalid ( actie, null ) )
[3]: org. junit. assert. assertequals ( 0, isvalid ( actie, null ) )
[4]: org. junit. assert. assertequals ( 1, isvalid ( actie, null ) )

************

************
tgt: org . junit . assert . assertfalse ( connection . isclosed ( ) )
[0]: org. junit. assert. assertequals ( 0, validator. isvalid ( actie, null ) )
[1]: org. junit. assert. assertnull ( validator. isvalid ( actie, null ) )
[2]: org. junit. assert. assertequals ( fields, result )
[3]: org. junit. assert. assertequals ( s, result )
[4]: org. junit. assert. assertequals ( 1, result. length )

************

************
tgt: org . junit . assert . assertnull ( resolver . resolveentity ( null , null ) )
[0]: org. junit. assert. assertequals ( 1, errors. length )
[1]: org. junit. assert. assertequals ( 1, result. size ( )
[2]: org. junit. assert. assertnotnull ( fixture. getcreated ( ) )
[3]: org. junit. assert. assertnotnull ( instance. getcreated ( ) )
[4]: org. junit. assert. assertnotnull ( bean. getcreated ( ) )

************

************
tgt: org . junit . assert . assertthat ( distributiondetector . getdistversionstring ( version ) , org . hamcrest . core . is . is ( distversion ) )
[0]: org. junit. assert. assertnotnull ( entity. getcreated ( ) )
[1]: org. junit. assert. assertnotnull ( converter. getcreated ( ) )
[2]: org. junit. assert. assertequals ( new java. lang. float ( 1 ), minpreference )
[3]: org. junit. assert. assertequals ( 1, resultlist. size ( ) )
[4]: org. junit. assert. assertequals ( 0, resultlist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( existingassetlistentry , newassetlistentry )
[0]: org. junit. assert. assertequals ( 3, resultlist. size ( ) )
[1]: org. junit. assert. assertequals ( 2, resultlist. size ( ) )
[2]: org. junit. assert. assertequals ( 1, resultlist. size ( ) ) ;
[3]: org. junit. assert. assertequals ( method, result. getmethod ( ) )
[4]: org. junit. assert. assertequals ( 0, result. getmethod ( ) )

************

************
tgt: org . junit . assert . assertequals ( "clientid-1" , kapuaappschannel . getclientid ( ) )
[0]: org. junit. assert. assertequals ( method, request. getmethod ( ) )
[1]: org. junit. assert. assertequals ( 1, result. getmethod ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, value. asobject ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( value. asobject ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , list . size ( ) )
[0]: org. junit. assert. assertequals ( 1, value. asobject ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( facetutil )
[2]: org. junit. assert. assertnull ( facetutil )
[3]: org. junit. assert. assertequals ( null, facetutil )
[4]: , facetutil )

************

************
tgt: org . junit . assert . assertequals ( expected , json )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, cachemanager. getcachenames ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, cachemanager. getcachenames ( ). size ( ) )
[3]: org. junit. assert. assertnull ( cachemanager. getcachenames ( ) )
[4]: org. junit. assert. assertequals ( names1, cachemanager. getcachenames ( ) )

************

************
tgt: org . junit . assert . assertequals ( r1 , r2 )
[0]: org. junit. assert. assertequals ( name1, cachemanager. getcachenames ( ) )
[1]: org. junit. assert. assertequals ( 1, resultaat. getmeldingen ( ). size ( ) )
[2]: org. junit. assert. assertequals ( applicationdtos, result )
[3]: org. junit. assert. assertequals ( 0, result. size ( ) )
[4]: org. junit. assert. assertequals ( result, applicationdtos )

************

************
tgt: org . junit . assert . assertequals ( classname , config . getnamingstrategyclassname ( ) )
[0]: , result )
[1]: ) )
[2]: org. junit. assert. assertequals ( null, request. getinputstream ( ) )
[3]: org. junit. assert. assertnotnull ( request. getinputstream ( ) )
[4]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( new com. google. common. collect. lists. newarraylist ( new com. ctrip. xpipe. redis. core. proxy. endpoint. defaultproxyendpoint ( ) ), protocol. nextendpoints ( ) )

************

************
tgt: org . junit . assert . assertequals ( edu . washington . cs . knowitall . extractor . reverbextractortest . expected , edu . washington . cs . knowitall . extractor . reverbextractortest . got )
[0]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( new com. google. common. collect. lists. newarraylist ( new com. ctrip. xpipe. redis. core. proxy. endpoint. defaultproxyendpoint ( "test"" ) ), protocol. nextendpoints ( ) )
[1]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( new com. google. common. collect. lists. newarraylist ( new com. ctrip. xpipe. redis. core. proxy. endpoint. defaultproxyendpoint ( ) ), protocol. nextendpoints ( ) ), protocol. nextendpoints ( ) )
[2]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( new com. ctrip. xpipe. redis. core. proxy. endpoint. defaultproxyendpoint ( ) ), protocol. nextendpoints ( ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( org. apache. tinkerpop. gremlin. structure. util. elementhelper. areequal ( p1, p2 ) )

************

************
tgt: org . junit . assert . assertnull ( zipreader . getentryasstring ( "null.txt" ) )
[0]: org. junit. assert. asserttrue ( options. isrecursive ( ) )
[1]: org. junit. assert. assertfalse ( options. isrecursive ( ) )
[2]: org. junit. assert. assertequals ( true, options. isrecursive ( ) )
[3]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( 1, 2, 3, 4 ), listbad )
[4]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( 1, 3, 4, 5 ), listbad )

************

************
tgt: org . junit . assert . assertequals ( table . getnumcells ( ) , ( ( ( 2 * 3 ) * 4 ) * 5 ) )
[0]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( 1 ), listbad )
[1]: , listbad )
[2]: ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), a. getchild ( 1 ) )
[4]: org. junit. assert. assertnotnull ( a. getchild ( 3 ) )

************

************
tgt: org . junit . assert . assertequals ( "/foo/var}/bar" , ut . getvalue ( ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), a. getchild ( 3 ) )
[1]: org. junit. assert. assertnull ( a. getchild ( 3 ) )
[2]: org. junit. assert. assertnotnull ( root. getchild ( 3 ) )
[3]: org. junit. assert. assertequals ( 1, panel. getwidgetcount ( ) )
[4]: org. junit. assert. assertequals ( 0, panel. getwidgetcount ( ) )

************

************
tgt: org . junit . assert . assertnull ( s )
[0]: org. junit. assert. assertequals ( 1, repository. getwidgetcount ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertnotnull ( entity )
[4]: org. junit. assert. assertequals ( f, sink )

************

************
tgt: org . junit . assert . assertthat ( scenariomodel . getscenarios ( ) . size ( ) , org . hamcrest . corematchers . equalto ( ( previous - 1 ) ) )
[0]: org. junit. assert. assertequals ( p, buf1 )
[1]: org. junit. assert. assertequals ( p, buf1. remaining ( ) )
[2]: org. junit. assert. assertequals ( 1, buf1. remaining ( ) )
[3]: org. junit. assert. assertequals ( test1, buf1 )
[4]: org. junit. assert. assertnotnull ( buf1 )

************

************
tgt: org . junit . assert . assertequals ( content , instance . getcontent ( ) )
[0]: org. junit. assert. assertnotnull ( namespace )
[1]: org. junit. assert. assertequals ( 1, projectchanges. getpageelements ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, projectchanges. getpageelements ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), projectchanges. getpageelements ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), projectchanges. getpageelements ( ) )

************

************
tgt: org . junit . assert . assertfalse ( e . iscancelled ( ) )
[0]: org. junit. assert. assertnotnull ( projectchanges. getpageelements ( ) )
[1]: org. junit. assert. assertequals ( tt2, tt )
[2]: org. junit. assert. assertnotnull ( tt2 )
[3]: org. junit. assert. assertsame ( tt2, tt )
[4]: org. junit. assert. assertequals ( tt1, tt )

************

************
tgt: org . junit . assert . assertequals ( businessobjectformat , updatedbusinessobjectformat )
[0]: org. junit. assert. assertequals ( tt1, tt2 )
[1]: org. junit. assert. assertfalse ( page. hasglobalerror ( ) )
[2]: org. junit. assert. assertequals ( true, r1. contains ( d ) )
[3]: org. junit. assert. assertequals ( true, parentgrid. containschild ( grida ) )
[4]: org. junit. assert. assertequals ( false, parentgrid. containschild ( grida ) )

************

************
tgt: org . junit . assert . assertequals ( biography , dbabba . getbiosummary ( ) )
[0]: org. junit. assert. asserttrue ( ( ( ( testharness. getsentences ( ). size ( ) ) == 1 ) && ( testharness. requirescoordinator ( ). isempty ( ) ) ) )
[1]: org. junit. assert. asserttrue ( ( ( ( testharness. get ( ) ) == null ) && ( testharness. get ( ). contains ( 123l ) ) ) )
[2]: org. junit. assert. asserttrue ( ( ( ( testharness. getsentences ( ). size ( ) ) == 1 ) && ( testharness. requirescoordinator ( ). size ( ) ) ) )
[3]: org. junit. assert. asserttrue ( ( ( ( testharness. get ( ) ) == null ) || ( testharness. get ( ). isempty ( ) ) ) )
[4]: org. junit. assert. asserttrue ( ( ( ( testharness. getsentences ( ). isempty ( ) ) && ( testharness. getsentences ( ). isempty ( ) ) ) )

************

************
tgt: org . junit . assert . assertthat ( ex . getmessage ( ) , org . hamcrest . corematchers . is ( "my<sp>message" ) )
[0]: org. junit. assert. assertequals ( false, msg. isdisambiguation ( ) )
[1]: org. junit. assert. assertequals ( true, msg. isdisambiguation ( ) )
[2]: org. junit. assert. assertequals ( false, context. isdisambiguation ( ) )
[3]: org. junit. assert. assertequals ( false, subject. isdisambiguation ( ) )
[4]: org. junit. assert. assertequals ( true, context. isdisambiguation ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actualtext )
[0]: org. junit. assert. assertthat ( crossingcount, org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertthat ( crossingcount, org. hamcrest. corematchers. is ( 0 ) )
[2]: org. junit. assert. assertthat ( crossingcount, org. hamcrest. corematchers. is ( 1l ) )
[3]: org. junit. assert. assertthat ( crossingcount, org. hamcrest. corematchers. is ( 3 ) )
[4]: org. junit. assert. assertthat ( crossingcount, org. hamcrest. corematchers. is ( 1 ) ) ;

************

************
tgt: org . junit . assert . asserttrue ( ( ( atomicinteger . get ( ) ) >= 1 ) )
[0]: org. junit. assert. assertequals ( 0, size )
[1]: org. junit. assert. assertequals ( ( initialtime + triggersize ), size )
[2]: org. junit. assert. assertequals ( 10, size )
[3]: org. junit. assert. assertequals ( ( initialtime + 1 ), size )
[4]: org. junit. assert. assertequals ( 1, size )

************

************
tgt: org . junit . assert . assertequals ( 0 , testsources . size ( ) )
[0]: org. junit. assert. assertequals ( 1, obj1. get ( ) )
[1]: org. junit. assert. assertequals ( obj1. get ( ), obj2. get ( ) )
[2]: org. junit. assert. assertequals ( 1, obj2. get ( ) )
[3]: org. junit. assert. assertequals ( 0, obj1. get ( ) )
[4]: org. junit. assert. assertequals ( obj1. get ( ), obj2 )

************

************
tgt: org . junit . assert . assertequals ( "type" , listenerlistitempresenter . model . gettype ( ) )
[0]: org. junit. assert. assertnotnull ( str )
[1]: org. junit. assert. assertnull ( str )
[2]: org. junit. assert. assertequals ( str, null )
[3]: , str )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( glue . stepdefinitionmatch ( featurepath , picklestep ) )
[0]: org. junit. assert. assertnotnull ( mockis )
[1]: org. junit. assert. assertequals ( java. util. optional. of ( ), mockis )
[2]: org. junit. assert. assertnotnull ( mockis. of ( ) )
[3]: org. junit. assert. assertequals ( java. util. optional. empty ( ), mockis )
[4]: org. junit. assert. assertequals ( java. util. optional. empty ( ), mockis. of ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( instance )
[0]: org. junit. assert. assertequals ( 1, tokens. size ( ) )
[1]: org. junit. assert. assertequals ( 0, tokens. size ( ) )
[2]: org. junit. assert. assertequals ( 3, tokens. size ( ) )
[3]: org. junit. assert. assertnotnull ( cloud )
[4]: org. junit. assert. assertequals ( expected, cloud )

************

************
tgt: org . junit . assert . assertequals ( 1 , aslist . size ( ) )
[0]: org. junit. assert. assertequals ( 0, cloud. count )
[1]: org. junit. assert. assertequals ( cloud, store )
[2]: org. junit. assert. asserttrue ( cloud. exists ( ) )
[3]: org. junit. assert. assertnotnull ( metadata. getbaseagenturi ( ) )
[4]: org. junit. assert. asserttrue ( ( ( ( metadata. getbaseagenturi ( ) )!= null ) && ( ( metadata. getbaseagenturi ( ) )!= null ) ) )

************

************
tgt: org . junit . assert . assertthat ( expected , org . hamcrest . corematchers . equalto ( actual ) )
[0]: org. junit. assert. asserttrue ( ( ( ( metadata. getbaseagenturi ( ) ) == null ) || ( metadata. getbaseagenturi ( ). isempty ( ) ) ) )
[1]: org. junit. assert. assertequals ( 1, metadata. getbaseagenturi ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), metadata. getbaseagenturi ( ) )
[3]: org. junit. assert. assertequals ( null, statements )
[4]: org. junit. assert. assertequals ( false, statements. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( false, statements. isempty ( ) )
[1]: org. junit. assert. assertequals ( expected, statements )
[2]: org. junit. assert. assertequals ( false, exists )
[3]: org. junit. assert. assertequals ( in, out )
[4]: org. junit. assert. assertequals ( null, out )

************

************
tgt: org . junit . assert . assertequals ( 2 , real )
[0]: org. junit. assert. assertequals ( out, in )
[1]: org. junit. assert. assertequals ( err, in )
[2]: org. junit. assert. assertequals ( expected, out )
[3]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. file. fat. basictests. servlet. getrealm ( ) )
[4]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. file. fat. basictests. servlet )

************

************
tgt: org . junit . assert . asserttrue ( ( i == j ) )
[0]: org. junit. assert. assertequals ( null, com. ibm. ws. security. wim. adapter. file. fat. basictests. servlet. getrealm ( ) )
[1]: org. junit. assert. assertequals ( com. ibm. ws. security. wim. adapter. file. fat. basictests. servlet. getrealm ( ), null )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( fr. gouv. vitam. storage. engine. common. model. response. storedinforesulttest. storedinforesult. getobjectgroupid ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), fr. gouv. vitam. storage. engine. common. model. response. storedinforesulttest. storedinforesult. getobjectgroupid ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1l ), fr. gouv. vitam. storage. engine. common. model. response. storedinforesulttest. storedinforesult. getobjectgroupid ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1l ), fr. gouv. vitam. storage. engine. common. model. response. storedinforesulttest. storedinforesult. getobjectgroupid ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1l ), fr. gouv. vitam. storage. engine. common. model. response. storedinforesulttest. storedinforesult. getobjectgroupid ( ). get ( ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnotnull ( exec )

************

************
tgt: org . junit . assert . assertequals ( value , group . getvalue ( ) )
[0]: org. junit. assert. assertnotnull ( exec. size ( ) )
[1]: org. junit. assert. assertequals ( 1, size )
[2]: org. junit. assert. assertequals ( 1, result. size ( )
[3]: org. junit. assert. assertnotnull ( builder. tostring ( ) )
[4]: org. junit. assert. assertequals ( 0, builder. tostring ( ). length ( ) )

************

************
tgt: org . junit . assert . asserttrue ( map . containskey ( six ) )
[0]: org. junit. assert. assertequals ( 1, builder. tostring ( ). length ( ) )
[1]: org. junit. assert. assertequals ( 0, builder. tostring ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, builder. tostring ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( status ), products )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( status ), products )

************

************
tgt: org . junit . assert . assertfalse ( pattern . isdefaultvisible ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), products )
[1]: org. junit. assert. assertequals ( 0, products. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( expected, e. evaluate ( ), 0.0 )
[4]: org. junit. assert. assertequals ( expected, e. evaluate ( ) )

************

************
tgt: org . junit . assert . assertthat ( term , org . hamcrest . corematchers . is ( "" ) )
[0]: org. junit. assert. assertequals ( expected, e. evaluate ( ), 0.0 )
[1]: org. junit. assert. assertequals ( expected, e. evaluate ( ), 0.0 )
[2]: ( expected ) )
[3]: org. junit. assert. assertnotnull ( org. apache. shardingsphere. orchestration. internal. eventbus. shardingorchestrationeventbus. getinstance ( ) )
[4]: org. junit. assert. assertnotnull ( org. apache. shardingsphere. orchestration. internal. eventbus. shardingorchestrationeventbus. instance )

************

************
tgt: org . junit . assert . asserttrue ( org . hipparchus . util . precision . equals ( out [ i ] , expectedsample [ i ] , 1 ) )
[0]: org. junit. assert. assertnotnull ( org. apache. shardingsphere. orchestration. internal. eventbus. shardingorchestrationeventbus. instance ( ) )
[1]: org. junit. assert. assertnotnull ( factory. getinstance ( ) )
[2]: _2. class )
[3]: org. junit. assert. assertequals ( 0, request. getquerystring ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, request. getquerystring ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( indexedentity . getmessage ( ) , is ( message ) )
[0]: org. junit. assert. assertequals ( null, request. getquerystring ( ) )
[1]: org. junit. assert. assertequals ( "abc&#;friendlyurl, writer. tostring ( ) )
[2]: org. junit. assert. assertequals ( "abc&#;urlstring, writer. tostring ( ) )
[3]: org. junit. assert. assertequals ( ""foo"", writer. tostring ( ) )
[4]: org. junit. assert. assertequals ( org. milyn. xml. persistence. illegalargumentexception. class )

************

************
tgt: org . junit . assert . assertequals ( var1 , var2 )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, mpd. getport ( ) )
[2]: org. junit. assert. assertequals ( 0, mpd. getport ( ) )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 8080 ), mpd. getport ( ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 8080 ), mpd. getport ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , bitmap . size ( ) )
[0]: org. junit. assert. assertequals ( 3, mpd. getport ( ) )
[1]: org. junit. assert. assertarrayequals ( expect )
[2]: org. junit. assert. assertequals ( expect, actual )
[3]: java. util. arrays. equals ( expect, actual ) )
[4]: , actual )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: )
[1]: org. junit. assert. assertequals ( permissionevaluator, root )
[2]: org. junit. assert. assertequals ( permissionsevaluator, root )
[3]: org. junit. assert. assertequals ( permissionevaluator, root.
[4]: org. junit. assert. assertnotnull ( root )

************

************
tgt: org . junit . assert . assertequals ( attributevaluelistkeys , result )
[0]: org. junit. assert. assertequals ( permissionevaluator )
[1]: org. junit. assert. assertnotnull ( day )
[2]: org. junit. assert. assertequals ( day, new java. lang. integer ( 1 ) )
[3]: org. junit. assert. assertequals ( date, day )
[4]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), day )

************

************
tgt: org . junit . assert . assertfalse ( failed )
[0]: org. junit. assert. assertequals ( day, new java. lang. integer ( 4 ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertsame ( result, container )
[3]: org. junit. assert. assertnull ( result )
[4]: , result )

************

************
tgt: org . junit . assert . asserttrue ( isfocusinsideelement ( radiobuttongroup2 ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0l, actual )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( 0, actual )
[4]: org. junit. assert. assertequals ( 1l, actual )

************

************
tgt: org . junit . assert . assertnull ( outputdatestr )
[0]: ) )
[1]: org. junit. assert. assertequals ( pet, xb. getnickname ( ) )
[2]: org. junit. assert. assertnotnull ( xb. getnickname ( ) )
[3]: org. junit. assert. assertequals ( 1, xb. getnickname ( ). size ( ) )
[4]: org. junit. assert. assertequals ( p t, xb. getnickname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, textregions. size ( ) )
[2]: org. junit. assert. assertequals ( 0, textregions. size ( ) )
[3]: org. junit. assert. assertequals ( 2, textregions. size ( ) )
[4]: org. junit. assert. assertequals ( 3, textregions. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , ( threadpriority != null ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, batchplansteps. size ( ) )
[2]: org. junit. assert. assertequals ( 3, batchplansteps. size ( ) )
[3]: org. junit. assert. assertequals ( 0, batchplansteps. size ( ) )
[4]: org. junit. assert. assertequals ( 2, batchplansteps. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( container )
[0]: org. junit. assert. assertnotnull ( id )
[1]: org. junit. assert. assertequals ( new java. lang. long ( 1 ), id )
[2]: org. junit. assert. assertnull ( id )
[3]: org. junit. assert. assertequals ( new java. lang. long ( 0 ), id )
[4]: org. junit. assert. assertequals ( 0, id )

************

************
tgt: org . junit . assert . assertnull ( processinstance )
[0]: org. junit. assert. assertequals ( 0, list. size ( ) )
[1]: org. junit. assert. assertequals ( null, list. isempty ( ) )
[2]: org. junit. assert. assertequals ( null, list. size ( ) )
[3]: org. junit. assert. assertequals ( 1, list. size ( ) )
[4]: org. junit. assert. assertequals ( null, list )

************

************
tgt: org . junit . assert . assertequals ( name , "testlist3" )
[0]: org. junit. assert. assertequals ( tmpfile, builder. getfitnessejavaworkingdirectory ( ) )
[1]: org. junit. assert. assertequals ( tmpfile. getabsolutepath ( ), builder. getfitnessejavaworkingdirectory ( ) )
[2]: org. junit. assert. assertequals ( tmpfile. tostring ( ), builder. getfitnessejavaworkingdirectory ( ) )
[3]: org. junit. assert. assertequals ( tmpfile. length, builder. getfitnessejavaworkingdirectory ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( classundertest . get ( 0 ) )
[0]: org. junit. assert. assertnotnull ( outvalue )
[1]: org. junit. assert. assertequals ( true, workitemset )
[2]: org. junit. assert. assertequals ( false, workitemset )
[3]: org. junit. assert. assertequals ( null, workitemset )
[4]: org. junit. assert. asserttrue ( workitemset )

************

************
tgt: org . junit . assert . assertequals ( taglist1 , taglist2 )
[0]: org. junit. assert. assertequals ( 1, workitemset )
[1]: org. junit. assert. assertnotnull ( header. getsensortype ( ) )
[2]: org. junit. assert. assertnull ( header. getsensortype ( ) )
[3]: org. junit. assert. assertequals ( 1, header. getsensortype ( ) )
[4]: type ) )

************

************
tgt: org . junit . assert . asserttrue ( ( consumedmemory1 < consumedmemory2 ) )
[0]: ) )
[1]: org. junit. assert. null, result )
[2]: org. junit. assert.null ( result )
[3]: null, result )
[4]: null ) )

************

************
tgt: org . junit . assert . assertequals ( initial , sm . getstate ( ) )
[0]: null )
[1]: org. junit. assert. assertarrayequals ( new int [ ] { - 1 }, target )
[2]: org. junit. assert. assertarrayequals ( new int [ ] { - 1, 0 }, target )
[3]: org. junit. assert. assertarrayequals ( new int [ ] { - 1, - 1 }, target )
[4]: org. junit. assert. assertequals ( 0, target. length )

************

************
tgt: org . junit . assert . assertequals ( 1 , meldingen . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertthat ( merge, org. hamcrest. matchers. contains ( broadcast ) )
[2]: org. junit. assert. assertthat ( merge, org. hamcrest. core. is. is ( true ) )
[3]: org. junit. assert. asserttrue ( merge. contains ( broadcast ) )
[4]: org. junit. assert. assertthat ( merge, contains ( broadcast ) )

************

************
tgt: org . junit . assert . assertequals ( "test<sp>email" , reply )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, result )
[2]: org. junit. assert. assertequals ( null, value. getvalue ( ) )
[3]: org. junit. assert. assertnull ( value. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 0, value. getvalue ( ) )

************

************
tgt: org . junit . assert . assertthat ( space . tobuilder ( ) . build ( ) , org . hamcrest . matchers . equalto ( space ) )
[0]: org. junit. assert. assertnotnull ( value. getvalue ( ) )
[1]: org. junit. assert. assertequals ( 0, value. getvalue ( ). size ( ) )
[2]: org. junit. assert. assertthat ( net. time4j. range. momentinterval. between ( start, end ). isempty ( ), org. hamcrest. corematchers. is ( true ) )
[3]: org. junit. assert. assertthat ( net. time4j. range. momentinterval. between ( start, end ). tolist ( ), org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( new net. time4j. range. momentinterval ( start, end ) ) ) )
[4]: org. junit. assert. assertthat ( net. time4j. range. momentinterval. between ( start, end ). collect ( ), org. hamcrest. corematchers. is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( result , expected )
[0]: org. junit. assert. assertthat ( net. time4j. range. momentinterval. between ( start, end ). tolist ( ), org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( expected ) ) )
[1]: org. junit. assert. assertthat ( net. time4j. range. momentinterval. between ( start, end ). tolist ( ), org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( java. util. collections. singletonlist ( start ) ) ) )
[2]: org. junit. assert. assertequals ( orga1, instance. getvalue ( ) )
[3]: org. junit. assert. assertnotnull ( instance. getvalue ( ) )
[4]: org. junit. assert. assertequals ( "a1, instance. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , generatedfiles . size ( ) )
[0]: org. junit. assert. assertequals ( 1, instance. getvalue ( ) )
[1]: org. junit. assert. assertequals ( 1, instance. getvalue ( ). length )
[2]: org. junit. assert. assertequals ( script1, script2 )
[3]: org. junit. assert. assertequals ( scripts1, script2 )
[4]: org. junit. assert. assertnotnull ( script1 )

************

************
tgt: org . junit . assert . assertthat ( rc , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( script2, script1 )
[1]: org. junit. assert. assertequals ( script1, scripts2 )
[2]: org. junit. assert. asserttrue ( fr. issuccess ( ) )
[3]: org. junit. assert. assertfalse ( fr. issuccess ( ) )
[4]: org. junit. assert. assertnotnull ( fr. issuccess ( ) )

************

************
tgt: org . junit . assert . assertequals ( instrument . czcs , org . esa . s3tbx . fu . detectinstrument . getinstrument ( product ) )
[0]: org. junit. assert. assertequals ( true, fr. issuccess ( )
[1]: ) )
[2]: org. junit. assert. assertequals ( result, headervalue )
[3]: org. junit. assert. assertequals ( aresponse ( headervalue ), result )
[4]: org. junit. assert. assertequals ( results, headervalue )

************

************
tgt: org . junit . assert . asserttrue ( msg . isaccurate ( ) )
[0]: org. junit. assert. assertequals ( answer, headervalue )
[1]: get ( result ) )
[2]: org. junit. assert. assertnotnull ( event )
[3]: org. junit. assert. assertequals ( expected, com. splicemachine. homeless. testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[4]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )

************

************
tgt: org . junit . assert . assertequals ( item1 , item2 )
[0]: org. junit. assert. assertequals ( sqltext, expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[1]: ( sqltext ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( sha1 )
[4]: org. junit. assert. assertequals ( 1, sha1. length ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , verwerksnelheid )
[0]: org. junit. assert. assertequals ( null, sha1 )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), sha1 )
[2]: org. junit. assert. assertequals ( java. lang. string. class, sha1 )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( false ) )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( true ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertthat ( result. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertthat ( result. size ( ), org. hamcrest. corematchers. is ( 0 ) )
[3]: org. junit. assert. assertnotnull ( date )
[4]: org. junit. assert. assertnull ( date )

************

************
tgt: org . junit . assert . assertthat ( iscorrect , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. asserttrue ( ( date!= null ) )
[1]: org. junit. assert. asserttrue ( ( date == null ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( deserialized, adapter. getapproximatearrivaltimestamp ( ) )
[4]: org. junit. assert. assertequals ( deserialized, adapter )

************

************
tgt: org . junit . assert . assertequals ( 1 , errors . size ( ) )
[0]: org. junit. assert. assertnotnull ( adapter )
[1]: org. junit. assert. assertnotnull ( adapter. getapproximatearrivaltimestamp ( ) )
[2]: org. junit. assert. assertequals ( deserialized. getapproximatearrivaltimestamp ( ), adapter )
[3]: org. junit. assert. assertequals ( null, org. swiftexplorer. swift. operations. differencesfinder. isdirectory ( li ) )
[4]: org. junit. assert. assertequals ( false, org. swiftexplorer. swift. operations. differencesfinder. isdirectory ( li ) )

************

************
tgt: org . junit . assert . assertequals ( new java . math . bigdecimal ( 19 ) , result )
[0]: org. junit. assert. assertequals ( true, org. swiftexplorer. swift. operations. differencesfinder. isdirectory ( li ) )
[1]: org. junit. assert. assertequals ( 0, org. swiftexplorer. swift. operations. differencesfinder. isdirectory ( li ) )
[2]: org. junit. assert. assertnull ( org. swiftexplorer. swift. operations. differencesfinder. isdirectory ( li ) )
[3]: org. junit. assert. asserttrue ( ids. contains ( allpoints ) )
[4]: org. junit. assert. asserttrue ( ids. contains ( allpoints. size ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( matrix1 . equals ( matrix2 ) )
[0]: org. junit. assert. asserttrue ( ids. contains ( allpoints. tostring ( ) ) )
[1]: , ids )
[2]: ) )
[3]: org. junit. assert. assertequals ( """", sw. tostring ( ) )
[4]: org. junit. assert. assertequals ( null, sw. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( multimap . values ( ) . size ( ) ) == 3 ) )
[0]: org. junit. assert. assertequals ( 0, sw. tostring ( ). length )
[1]: org. junit. assert. assertequals ( """", sw. tostring ( ) )
[2]: public void init ( ) { }
[3]: org. junit. assert. assertnotnull ( holder. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, holder. getvalue ( ) )

************

************
tgt: org . junit . assert . assertthat ( b1 . hashcode ( ) , org . hamcrest . corematchers . is ( b2 . hashcode ( ) ) )
[0]: org. junit. assert. assertequals ( 1, holder. getvalue ( ). length )
[1]: org. junit. assert. asserttrue ( holder. getvalue ( ). isempty ( ) )
[2]: org. junit. assert. assertnull ( holder. getvalue ( ) )
[3]: org. junit. assert. assertnotnull ( planner. getplan ( ) )
[4]: org. junit. assert. assertnotnull ( planner )

************

************
tgt: org . junit . assert . assertfalse ( instance . equals ( info2 ) )
[0]: org. junit. assert. asserttrue ( clspa. getresult ( ) )
[1]: org. junit. assert. assertequals ( r, p. kafkapartition ( d, 15 ) )
[2]: org. junit. assert. assertequals ( r, p. kafkapartition ( d, 0 ) )
[3]: org. junit. assert. assertequals ( r. kafkapartition ( d, 15 ), p. kafkapartition )
[4]: org. junit. assert. assertequals ( p. kafkapartition ( r, 15 ), p. kafkapartition )

************

************
tgt: org . junit . assert . assertequals ( ddmstructure . getstoragetype ( ) , failstorageadapter . storage_type )
[0]: ) )
[1]: org. junit. assert. assertnull ( c. isinitialized ( ) )
[2]: org. junit. assert. assertequals ( null, c. isinitialized ( ) )
[3]: org. junit. assert. assertnotnull ( c. isinitialized ( ) )
[4]: org. junit. assert. assertnull ( c. istransient ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , s . size ( ) )
[0]: org. junit. assert. assertequals ( 0, c. isinitialized ( ) )
[1]: org. junit. assert. assertequals ( 1, datamanager. getcommandhistory ( ). size ( ) )
[2]: org. junit. assert. assertarrayequals ( expected, datamanager. getcommandhistory ( ) )
[3]: org. junit. assert. assertequals ( expecting, result )
[4]: org. junit. assert. assertequals ( expecting, a1. tostring ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( decanonisedyawl )
[0]: org. junit. assert. assertequals ( expecting, a1. getmessage ( ) )
[1]: org. junit. assert. assertequals ( expecting, a2. getmessage ( ) )
[2]: org. junit. assert. assertequals ( expecting, a2. tostring ( ) )
[3]: org. junit. assert. assertequals ( 1, bestaandebetrokkenen. size ( ) )
[4]: org. junit. assert. assertequals ( 0, bestaandebetrokkenen. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedfailmsg , ex . getmessage ( ) )
[0]: org. junit. assert. assertnotnull ( bestaandebetrokkenen )
[1]: org. junit. assert. assertequals ( 2, bestaandebetrokkenen. size ( ) )
[2]: org. junit. assert. assertequals ( 1, bestaandesbetrokkenen. size ( ) )
[3]: org. junit. assert. asserttrue ( org. apache. jackrabbit. oak. spi. security. user. util. passwordutil. issame ( hash, params ) )
[4]: org. junit. assert. assertfalse ( org. apache. jackrabbit. oak. spi. security. user. util. passwordutil. issame ( hash, params ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. asserttrue ( org. apache. jackrabbit. oak. spi. security. user. util. passwordutil. issame ( hash, params. trim ( ) ) )
[1]: org. junit. assert. assertnotnull ( org. apache. jackrabbit. oak. spi. security. user. util. passwordutil. issame ( hash, params ) )
[2]: org. junit. assert. assertequals ( true, org. apache. jackrabbit. oak. spi. security. user. util. passwordutil. issame ( hash, params ) )
[3]: org. junit. assert. assertfalse ( config. isstrategyconfigured ( null ) )
[4]: org. junit. assert. assertfalse ( config. isstrategyconfigured ( ""test"" ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , numberoffiles )
[0]: org. junit. assert. assertfalse ( config. isstrategyconfigured ( ""foo"" ) )
[1]: org. junit. assert. asserttrue ( config. isstrategyconfigured ( null ) )
[2]: org. junit. assert. assertfalse ( config. isstrategyconfigured ( string ) )
[3]: org. junit. assert. asserttrue ( update. isattached ( ) )
[4]: org. junit. assert. asserttrue ( updated. isattached ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( users . getusers ( ) . size ( ) ) == 1 ) )
[0]: org. junit. assert. assertfalse ( update. isattached ( ) )
[1]: org. junit. assert. asserttrue ( updates. isattached ( ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( opennlp. tools. namefind. bilounamefindersequencevalidatortest. validator. validsequence ( 0, inputsequence, outcomessequence, outcome ) )
[4]: org. junit. assert. asserttrue ( opennlp. tools. namefind. bilounamefindersequencevalidatortest. validator. validsequence ( 1, inputsequence, outcomessequence, outcome ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expresults , text . toarray ( ) )
[0]: org. junit. assert. asserttrue ( opennlp. tools. namefind. bilounamefindersequencevalidatortest. validator. validsequence ( 2, inputsequence, outcomessequence, outcome ) )
[1]: org. junit. assert. asserttrue ( opennlp. tools. namefind. bilounamefindersequencevalidatortest. validator. validsequence ( 3, inputsequence, outcomessequence, outcome ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, test2. clientcount ( ) )
[4]: org. junit. assert. assertequals ( 0, test2. clientcount ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result )
[0]: org. junit. assert. assertequals ( 1, test1. clientcount ( ) )
[1]: org. junit. assert. assertequals ( 1, test. clientcount ( ) )
[2]: org. junit. assert. assertequals ( 0, test1. clientcount ( ) )
[3]: org. junit. assert. assertthat ( target. getconvnodeid ( nwid, nodeid ), org. hamcrest. corematchers. is ( nodelist ) )
[4]: org. junit. assert. assertthat ( target. getconvnodeid ( nwid, nodeid ), org. hamcrest. corematchers. is ( node ) )

************

************
tgt: org . junit . assert . assertnull ( outputdatestr )
[0]: org. junit. assert. assertthat ( target. getconvnodeid ( nwid, nodeid ), org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertnotnull ( target. getconvnodeid ( nwid, nodeid ) )
[2]: org. junit. assert. assertthat ( target, org. hamcrest. corematchers. is ( nodelist ) )
[3]: org. junit. assert. assertequals ( 1, presenter. getcaserolesassignments ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, channel. refcnt ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , found . size ( ) )
[0]: org. junit. assert. assertequals ( 1, buffer. refcnt ( ) )
[1]: org. junit. assert. asserttrue ( buffer. refcnt ( ) )
[2]: org. junit. assert. asserttrue ( channel. refcnt ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( dec3 )

************

************
tgt: org . junit . assert . assertequals ( structures . tostring ( ) , 0 , structures . size ( ) )
[0]: org. junit. assert. assertequals ( null, dec3 )
[1]: org. junit. assert. assertequals ( c1. next ( ), c2. next ( ) )
[2]: org. junit. assert. assertequals ( c1, c2. next ( ) )
[3]: org. junit. assert. assertequals ( c1, c2. next ( ). get ( ) )
[4]: org. junit. assert. assertnotnull ( c1. next ( ) )

************

************
tgt: org . junit . assert . assertequals ( attributevalue , value )
[0]: org. junit. assert. assertnotnull ( c1. next ( ). get ( ) )
[1]: org. junit. assert. assertthat ( value, org. hamcrest. matchers. equalto ( org. sonatype. nexus. repository. npm ) )
[2]: org. junit. assert. assertthat ( value, org. hamcrest. matchers. equalto ( java. lang. object. class ) )
[3]: org. junit. assert. assertequals ( 0, template. getelements ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, template. getelements ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( message , exc . getmessage ( ) )
[0]: org. junit. assert. assertequals ( duration, notcompiledduration )
[1]: org. junit. assert. asserttrue ( ( duration > notcompiledduration ) )
[2]: org. junit. assert. asserttrue ( ( duration == notcompiledduration ) )
[3]: org. junit. assert. assertnotnull ( outputdatestr )
[4]: org. junit. assert. assertthat ( result, is ( org. hamcrest. corematchers. equalto ( definition ) ) )

************

************
tgt: org . junit . assert . assertequals ( expectedparent , actualparent )
[0]: org. junit. assert. assertequals ( definition, result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: ) )
[4]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 1 }, result )

************

************
tgt: org . junit . assert . assertequals ( expresult , result , 0.0 )
[0]: org. junit. assert. assertarrayequals ( new long [ ] { 1 }, result )
[1]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 2 }, result )
[2]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 5 }, result )
[3]: org. junit. assert. assertequals ( 1, result. length )
[4]: org. junit. assert. assertequals ( null, value )

************

************
tgt: org . junit . assert . asserttrue ( genrule . gettype ( ) . contains ( "xxxxx" ) )
[0]: org. junit. assert. assertnotnull ( value )
[1]: org. junit. assert. asserttrue ( stream. isshortcircuit ( ) )
[2]: org. junit. assert. asserttrue ( fwa. checktcrelation ( alg ) )
[3]: org. junit. assert. assertfalse ( fwa. checktcrelation ( alg ) )
[4]: org. junit. assert. asserttrue ( fwa. checktcrelation ( testgraph ) )

************

************
tgt: org . junit . assert . assertequals ( "book" , book . getname ( ) )
[0]: org. junit. assert. assertthat ( fwa. checktcrelation ( testgraph ), testresult )
[1]: ) )
[2]: org. junit. assert. assertequals ( e. getvalue ( ), checked )
[3]: org. junit. assert. assertnotnull ( e. getvalue ( ) )
[4]: org. junit. assert. assertequals ( e. get ( ), checked )

************

************
tgt: org . junit . assert . asserttrue ( ( ( cache . size ( ) ) == 3 ) )
[0]: org. junit. assert. assertnotnull ( e. get ( ) )
[1]: org. junit. assert. assertequals ( e. getclass ( ), checked )
[2]: org. junit. assert. assertequals ( label, uri. getlabel ( ) )
[3]: org. junit. assert. assertequals ( label, uri. getlabel ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( labeled, uri. getlabel ( ) )

************

************
tgt: org . junit . assert . asserttrue ( proxy . isenabled ( ) )
[0]: org. junit. assert. assertnull ( uri. getlabel ( ) )
[1]: org. junit. assert. assertequals ( label, uri. getlabel ( ). getmessage ( ) )
[2]: org. junit. assert. assertnotnull ( factory. getvar ( conf, null ) )
[3]: org. junit. assert. assertnotnull ( conf. getvar ( conf, null ) )
[4]: org. junit. assert. assertnotnull ( config. getvar ( conf, null ) )

************

************
tgt: org . junit . assert . assertequals ( role . getname ( ) , existingrole . getname ( ) )
[0]: org. junit. assert. assertnotnull ( codec. getvar ( conf, null ) )
[1]: type ) )
[2]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( savedrecord ), ageonly. materialize ( ) )
[3]: org. junit. assert. assertnotnull ( ageonly. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( ageonly. materialize ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( savedrecord ), ageonly. get ( ) )
[1]: org. junit. assert. assertnotnull ( ageonly. get ( ) )
[2]: org. junit. assert. assertequals ( 1, obs. size ( ) )
[3]: org. junit. assert. assertequals ( 0, obs. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( obs ), obs )

************

************
tgt: org . junit . assert . assertfalse ( isvalid )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( obs ), obs )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( obs ), observation )
[2]: org. junit. assert. asserttrue ( org. apache. commons. collections4. collectionutils. isnotempty ( coll ) )
[3]: org. junit. assert. assertfalse ( org. apache. commons. collections4. collectionutils. isnotempty ( coll ) )
[4]: org. junit. assert. assertequals ( originalttl, username )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( origttl, username )
[1]: org. junit. assert. assertequals ( oldttl, username )
[2]: org. junit. assert. assertequals ( username, originalttl )
[3]: org. junit. assert. assertnotnull ( username )
[4]: org. junit. assert. asserttrue ( result )

************

************
tgt: org . junit . assert . assertequals ( 0 , zero . getpartialderivative ( n ) , epsilon [ n ] )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 10.0 ), l. inverse ( ) )
[1]: org. junit. assert. assertequals ( java. lang. double. valueof ( 10.0 ), l. inverse ( ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 10.0 ), l. inverse ( ). get ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 10.0 ), l. inverse ( ). getvalue ( ) )
[4]: org. junit. assert. assertequals ( java. lang. double. valueof ( 10.0 ), l. inverse ( ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( mesh1 , mesh2 )
[0]: org. junit. assert. assertequals ( 3306, props. getservername ( ) )
[1]: org. junit. assert. assertequals ( 1, props. getservername ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 3306, props )
[3]: org. junit. assert. assertequals ( 1, props. getservername ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expecteddata , escapeddata )
[0]: org. junit. assert. asserttrue ( p. equals ( 4711, 3 ) )
[1]: org. junit. assert. assertfalse ( p. equals ( 4711, 3 ) )
[2]: org. junit. assert. assertequals ( true, p. equals ( 4711, 3 ) )
[3]: org. junit. assert. assertequals ( p. equals ( 4711, 3 ), true )
[4]: org. junit. assert. assertequals ( p. equals ( 4711, 3 ), false )

************

************
tgt: org . junit . assert . assertequals ( "my<sp>path" , config . getconfigfile ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnotnull ( actual )
[2]: org. junit. assert. assertnotnull ( res )
[3]: , result )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( stream . isclosed ( ) )
[0]: org. junit. assert. asserttrue ( ( ( queryresult. getsize ( ) ) >= 1000 ) )
[1]: org. junit. assert. assertequals ( 1, queryresult. getsize ( ) )
[2]: org. junit. assert. assertequals ( 1, patches. size ( ) )
[3]: org. junit. assert. assertequals ( 0, patches. size ( ) )
[4]: org. junit. assert. assertequals ( 3, patches. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( cert )
[0]: org. junit. assert. assertequals ( 4, patches. size ( ) )
[1]: org. junit. assert. assertequals ( 2, patches. size ( ) )
[2]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 3 ), list. get ( 0 ) )
[3]: org. junit. assert. assertequals ( noofenums, 0 )
[4]: org. junit. assert. assertequals ( noofenums, 16 )

************

************
tgt: org . junit . assert . assertequals ( "hello<sp>world<sp>!" , result )
[0]: org. junit. assert. assertequals ( noofenums, 50 )
[1]: org. junit. assert. assertequals ( noofenums, ( noofenums + 1 ) )
[2]: org. junit. assert. assertequals ( noofenums, 100 )
[3]: org. junit. assert. assertequals ( protocols, options. protocols )
[4]: org. junit. assert. assertequals ( protocols, protocol )

************

************
tgt: org . junit . assert . assertnull ( sub )
[0]: org. junit. assert. assertequals ( protocols, protocols )
[1]: org. junit. assert. assertequals ( protocols, dest. protocols )
[2]: org. junit. assert. assertequals ( protocols, finalconfig )
[3]: org. junit. assert. asserttrue ( isentitlementcompliant ( c, ents, ents ) )
[4]: org. junit. assert. asserttrue ( isentitlementcompliant ( c, mockserverentitlement, ents ) )

************

************
tgt: org . junit . assert . assertequals ( "pause-exception" , e . getmessage ( ) )
[0]: org. junit. assert. asserttrue ( isentitlementcompliant ( c, ents, null ) )
[1]: org. junit. assert. asserttrue ( isentitlementcompliant ( c, ents, mockserverentitlement ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( message, mocks. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), "exterminateadvice. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , res . size ( ) )
[0]: org. junit. assert. assertequals ( name, mocks. tostring ( ) )
[1]: org. junit. assert. assertequals ( tostring ( ), "exterminateadvice. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), "exterminate_2. tostring ( ) )
[3]: org. junit. assert. assertnull ( item )
[4]: org. junit. assert. assertnotnull ( item )

************

************
tgt: org . junit . assert . assertequals ( expecteds , actuals )
[0]: org. junit. assert. assertequals ( null, item )
[1]: org. junit. assert. assertequals ( dummystate, item )
[2]: org. junit. assert. assertequals ( item, dummystate )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. asserttrue ( ports. hasport ( port. getname ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( getnoerrormsg ( ) , result )
[0]: org. junit. assert. asserttrue ( ports. hasport ( port. getid ( ) ) )
[1]: org. junit. assert. assertthat ( ports. hasport ( 1 ), org. hamcrest. corematchers. is ( true ) )
[2]: org. junit. assert. assertthat ( ports. hasport ( 1 ), org. hamcrest. corematchers. is ( false ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( cip_chirality . s , org . openscience . cdk . geometry . cip . ciptool . getcipchirality ( chirality ) )
[0]: org. junit. assert. assertequals ( 1, results. size ( ) )
[1]: org. junit. assert. assertequals ( 0, result. size ( ) )
[2]: org. junit. assert. assertequals ( 1, events. size ( ) )
[3]: org. junit. assert. assertequals ( 0, results. size ( ) )
[4]: org. junit. assert. assertnull ( info. getpassword ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( schema )
[0]: org. junit. assert. assertequals ( ""test"", info. getpassword ( ) )
[1]: org. junit. assert. assertequals ( ""a"", info. getpassword ( ) )
[2]: org. junit. assert. assertequals ( ""null, info. getpassword ( ) )
[3]: org. junit. assert. assertnotnull ( info. getpassword ( ) )
[4]: org. junit. assert. asserttrue ( receiver. validate ( null, context ) )

************

************
tgt: org . junit . assert . assertequals ( com . maxdemarzi . posts . updateposttest . expected , actual )
[0]: org. junit. assert. asserttrue ( receiver. validate ( new java. util. arraylist ( ), context ) )
[1]: org. junit. assert. asserttrue ( receiver. validate ( java. util. collections. emptylist ( ), context ) )
[2]: org. junit. assert. asserttrue ( receiver. validate ( java. util. arrays. aslist ( ), context ) )
[3]: org. junit. assert. asserttrue ( receiver. validate ( new com. streamsets. pipeline. kafka. impl.kafkaconsumer09. kafka_config_bean ) )
[4]: org. junit. assert. assertequals ( 1, identifiers. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( display . isdisposed ( ) )
[0]: org. junit. assert. assertequals ( 1, getsingleelement ( inner ). size ( ) )
[1]: org. junit. assert. assertequals ( 2, getsingleelement ( inner ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, getsingleelement ( inner ) )
[3]: org. junit. assert. assertequals ( b, getsingleelement ( inner ). size ( ) )
[4]: org. junit. assert. assertequals ( b, getsingleelement ( inner ) )

************

************
tgt: org . junit . assert . assertthat ( coll , equalto ( reference ) )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertnotnull ( s )
[2]: org. junit. assert. assertnotnull ( s. collection )
[3]: org. junit. assert. assertnotnull ( collection )
[4]: org. junit. assert. assertnotnull ( context )

************

************
tgt: org . junit . assert . assertfalse ( exclusion1 . equals ( exclusion2 ) )
[0]: org. junit. assert. assertequals ( msg, e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( 1, documents. size ( ) )
[2]: org. junit. assert. assertequals ( 0, documents. size ( ) )
[3]: org. junit. assert. assertequals ( 1, docs. size ( ) )
[4]: org. junit. assert. assertnotnull ( property. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , c . getstylename ( ) )
[0]: org. junit. assert. assertequals ( null, property. getvalue ( ) )
[1]: org. junit. assert. assertnull ( property. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 0, property. getvalue ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( null, clogwriter. getformatter ( ) )

************

************
tgt: org . junit . assert . asserttrue ( layoutpagetemplatestructures . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( 0 , getmessagecount ( binding ) )
[0]: org. junit. assert. assertequals ( 1, longset. size ( ) )
[1]: org. junit. assert. assertequals ( 0, longset. size ( ) )
[2]: org. junit. assert. assertequals ( longset. size ( ), capacity )
[3]: org. junit. assert. assertequals ( size, longset. size ( ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( capacity ), longset )

************

************
tgt: org . junit . assert . asserttrue ( didrulesucceed )
[0]: org. junit. assert. assertequals ( 1, dir. listall ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, dir. listall ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, directory. listall ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, dir. listall ( ). count ( ) )
[4]: org. junit. assert. assertequals ( 1, dir. listall ( ). length )

************

************
tgt: org . junit . assert . assertequals ( java . lang . character . valueof ( ( ( char ) ( 65 + ( i ++ ) ) ) ) , cdrs . getchar ( "letter" ) )
[0]: org. junit. assert. assertequals ( expected, composite. distinct ( ). tolist ( ) )
[1]: org. junit. assert. assertequals ( expected, composite. distinct ( ) )
[2]: org. junit. assert. assertequals ( expected. distinct ( ), composite. distinct ( ) )
[3]: org. junit. assert. assertequals ( expected, composite. distinct ( ). get ( 0 ) )
[4]: org. junit. assert. assertequals ( expected, composite )

************

************
tgt: org . junit . assert . assertequals ( statement , expected )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. asserttrue ( result )
[3]: org. junit. assert. asserttrue ( result. isempty ( ) )
[4]: org. junit. assert. assertequals ( 3, result )

************

************
tgt: org . junit . assert . assertequals ( this . getnstrings ( ) , this . list . sortthisbychar ( ( string ) -> string . charat ( 0 ) ) )
[0]: org. junit. assert. assertequals ( 1, pemedprivkey )
[1]: org. junit. assert. assertnotnull ( pemedprivkey )
[2]: org. junit. assert. assertequals ( expected, pemedprivkey )
[3]: org. junit. assert. assertequals ( true, pemedprivkey )
[4]: org. junit. assert. assertequals ( 1, pemedprivkey. length )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( defensiveplayer, createdplayer )
[1]: org. junit. assert. assertnotnull ( createdplayer )
[2]: org. junit. assert. assertequals ( definitionensiveplayer, createdplayer )
[3]: org. junit. assert. assertequals ( defensiveplayer )
[4]: org. junit. assert. assertequals ( defensiveplayer, openedplayer )

************

************
tgt: org . junit . assert . assertequals ( rc4element1 , rc4element2 )
[0]: org. junit. assert. assertnotnull ( result. getvalueforattribute ( attributetype. ds_rdata ). tostring ( ) )
[1]: org. junit. assert. assertnull ( result. getvalueforattribute ( attributetype. ds_rdata ). tostring ( ) )
[2]: org. junit. assert. assertthat ( result. getvalueforattribute ( attributetype. ds_rdata ). tostring ( ), is ( 1 ) )
[3]: org. junit. assert. assertthat ( result. getvalueforattribute ( attributetype. ds_rdata ). tostring ( ), is ( string_0 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( existingpollsquestion )
[0]: org. junit. assert. assertequals ( expected, instance. getresulttype ( ) )
[1]: org. junit. assert. assertequals ( expected, map. getresulttype ( ) )
[2]: org. junit. assert. assertequals ( expected, address. getresulttype ( ) )
[3]: org. junit. assert. assertequals ( expected, connection. getresulttype ( ) )
[4]: org. junit. assert. assertequals ( expected, route. getresulttype ( ) )

************

************
tgt: org . junit . assert . assertequals ( useragent , retrieveduseragent )
[0]: org. junit. assert. assertequals ( ni. gethardwareaddress ( ), niv. gethardwareaddress ( ) )
[1]: org. junit. assert. assertequals ( ni, niv. gethardwareaddress ( ) )
[2]: org. junit. assert. assertequals ( ni. gethardwareaddress ( ), niv. gethardwareaddress ( ) )
[3]: org. junit. assert. assertequals ( ni. gethardwareaddress ( ), niv )
[4]: org. junit. assert. assertequals ( ni. gethardwareaddress ( ), niv. gethardwareaddress )

************

************
tgt: org . junit . assert . assertequals ( expectedtype , actualtype )
[0]: org. junit. assert. assertequals ( expected, merged )
[1]: org. junit. assert. assertequals ( result, merged )
[2]: org. junit. assert. assertequals ( exp, merged )
[3]: org. junit. assert. assertequals ( expected, merged, null )
[4]: org. junit. assert. assertequals ( expected, merged, content )

************

************
tgt: org . junit . assert . assertnotnull ( section )
[0]: org. junit. assert. assertequals ( 0.1, instance. getm ( ) )
[1]: org. junit. assert. assertnotnull ( instance. getm ( ) )
[2]: org. junit. assert. assertequals ( 0.1, instance. getm ( ) )
[3]: org. junit. assert. assertnull ( instance. getm ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( cp )
[1]: org. junit. assert. assertequals ( 0, cp. size ( ) )
[2]: org. junit. assert. assertequals ( null, cp )
[3]: org. junit. assert. assertnull ( cp )
[4]: org. junit. assert. assertequals ( 1, cp. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( s1 , s2 )
[0]: org. junit. assert. assertnotnull ( list )
[1]: org. junit. assert. assertequals ( 0, list. size ( ) )
[2]: org. junit. assert. assertnull ( list )
[3]: org. junit. assert. assertequals ( 1, list. size ( ) )
[4]: org. junit. assert. assertnull ( list. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( testresource1 , testresource2 )
[0]: org. junit. assert. assertnotnull ( brpbericht )
[1]: org. junit. assert. assertequals ( null, brpbericht )
[2]: org. junit. assert. assertnull ( brpbericht )
[3]: org. junit. assert. asserttrue ( ( brpbericht == null ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( id , org . hamcrest . core . is . is ( "http://bla" ) )
[0]: org. junit. assert. assertequals ( 1, one. getfreememory ( ) )
[1]: org. junit. assert. assertequals ( 1, addresses [ 4 ] )
[2]: org. junit. assert. assertequals ( 1, 1 )
[3]: org. junit. assert. assertequals ( 1, addresses [ 0 ] )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( output1 . hashcode ( ) , output2 . hashcode ( ) )
[0]: org. junit. assert. assertequals ( 0, actual. size ( ) )
[1]: org. junit. assert. assertequals ( 1, actual. size ( ) )
[2]: org. junit. assert. assertequals ( null, actual )
[3]: org. junit. assert. assertnotnull ( actual )
[4]: test null, actual )

************

************
tgt: org . junit . assert . asserttrue ( ( ( org . apache . drill . exec . expr . fn . impl . bytefunctionhelpers . equal ( left . buffer , left . start , left . end , right . buffer , right . start , right . end ) ) == 0 ) )
[0]: org. junit. assert. asserttrue ( treetable. islastid ( null ) )
[1]: org. junit. assert. asserttrue ( treetable. islastid ( java. lang. object. class ) )
[2]: org. junit. assert. assertfalse ( treetable. islastid ( null ) )
[3]: org. junit. assert. asserttrue ( treetable. islastid ( 1 ) )
[4]: org. junit. assert. asserttrue ( treetable. islastid ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertnotnull ( goblin )
[0]: org. junit. assert. assertnull ( com. puresoltechnologies. ductiledb. core. graph. schema. ductiledbschemamanagerit. schemamanager. getpropertydefinition ( elementtype. vertex, null ) )
[1]: org. junit. assert. assertnull ( com. puresoltechnologies. ductiledb. core. graph. schema. ductiledbschemamanagerit. schemamanager. getpropertydefinition ( elementtype. vertex, definition ) )
[2]: org. junit. assert. assertnull ( com. puresoltechnologies. ductiledb. core. graph. schema. ductiledbschemamanagerit. schemamanager. getpropertydefinition ( elementtype. vertex, name ) )
[3]: org. junit. assert. assertnull ( com. puresoltechnologies. ductiledb. core. graph. schema. ductiledbschemamanagerit. schemamanager. getpropertydefinition ( elementtype. vertex, java. lang. string. class ) )
[4]: org. junit. assert. assertnull ( com. puresoltechnologies. ductiledb. core. graph. schema. ductiledbschemamanagerit. schemamanager. getpropertydefinition ( elementtype. vertex, definitions ) )

************

************
tgt: org . junit . assert . assertequals ( expectatedmessage . trim ( ) , e . getmessage ( ) . trim ( ) )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertequals ( actual, expected )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( expected ), actual )
[3]: org. junit. assert. assertequals ( 1, classes. length )
[4]: org. junit. assert. assertequals ( 0, classes. length )

************

************
tgt: org . junit . assert . assertequals ( "hello" , firstnonnull )
[0]: org. junit. assert. assertequals ( 3, classes. length )
[1]: org. junit. assert. assertequals ( 1l, classes. length )
[2]: org. junit. assert. assertnotnull ( classes )
[3]: org. junit. assert. assertnotnull ( testwrapper )
[4]: org. junit. assert. assertequals ( null, testwrapper )

************

************
tgt: org . junit . assert . asserttrue ( pwdservice . check ( password . tostring ( ) , encrypted ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), testwrapper )
[1]: org. junit. assert. assertequals ( java. util. optional. empty ( ), testwrapper )
[2]: org. junit. assert. assertequals ( 1, testwrapper. getextraroles ( ). length )
[3]: org. junit. assert. assertnotnull ( payload. getaction ( ) )
[4]: org. junit. assert. assertequals ( pll, line )

************

************
tgt: org . junit . assert . assertthat ( status , org . hamcrest . matchers . is ( net . jadler . facadeintegrationtest . expected_status ) )
[0]: org. junit. assert. assertequals ( line, photo. tostring ( ) )
[1]: org. junit. assert. assertequals ( pll, line. tostring ( ) )
[2]: org. junit. assert. assertequals ( pll. tostring ( ), line )
[3]: org. junit. assert. assertequals ( pll, line. trim ( ) )
[4]: org. junit. assert. assertequals ( name, person. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( getbase64imagevalue ( imagetocopyurl ) , getbase64imagevalue ( reuploadedimageurl ) )
[0]: org. junit. assert. assertnotnull ( namefield. getvalue ( ) )
[1]: org. junit. assert. assertequals ( name, names. getvalue ( ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnotnull ( msg. gettext ( ) )

************

************
tgt: org . junit . assert . assertthat ( com . firefly . utils . io . bufferutils . toutf8string ( buffer ) , org . hamcrest . matchers . is ( "foograde" ) )
[0]: org. junit. assert. assertequals ( message. gettext ( ), msg. gettext ( ) )
[1]: org. junit. assert. assertequals ( msg. gettext ( ), null )
[2]: org. junit. assert. assertequals ( msg. gettext ( ), message. gettext ( ) )
[3]: org. junit. assert. assertequals ( msg. gettext ( ), 0 )
[4]: org. junit. assert. assertequals ( expectedresult, testutils. formattedresult. tostring ( rs ) )

************

************
tgt: org . junit . assert . assertfalse ( samples . isempty ( ) )
[0]: org. junit. assert. assertequals ( expectedresult, testutils. formattedresult. output ( rs ) )
[1]: org. junit. assert. assertequals ( expectedresult, java. util. arrays. tostring ( rs ) )
[2]: org. junit. assert. assertequals ( expectedresult, tostring ( rs ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( manipulation. getvalueprovider ( ) )

************

************
tgt: org . junit . assert . asserttrue ( berichtentiteits . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, manipulation. getvalueprovider ( ) )
[1]: org. junit. assert. asserttrue ( manipulator. getvalueprovider ( ) )
[2]: org. junit. assert. assertfalse ( manipulation. getvalueprovider ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, list. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( com . alibaba . dubbo . common . utils . urlutils . ismatch ( consumerurl , providerurl ) )
[0]: org. junit. assert. assertequals ( 2, list. size ( ) )
[1]: org. junit. assert. assertequals ( expected, list )
[2]: org. junit. assert. assertnotnull ( list )
[3]: org. junit. assert. assertequals ( 1, size. size ( ) )
[4]: org. junit. assert. assertequals ( constraints, manager. getreadytimestamp ( signalfilepath ) )

************

************
tgt: org . junit . assert . asserttrue ( nonoptions . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, manager. getreadytimestamp ( signalfilepath ) )
[1]: org. junit. assert. assertequals ( 1, manager. getreadytimestamp ( constraints ) )
[2]: org. junit. assert. assertequals ( 0, manager. getreadytimestamp ( signalfilepath ) )
[3]: org. junit. assert. assertequals ( constraint, manager. getreadytimestamp ( signalfilepath ) )
[4]: org. junit. assert. assertequals ( null, path. tostring ( ) )

************

************
tgt: org . junit . assert . assertfalse ( mapconnection . containskey ( com . stratio . connector . deep . connection . connectionhandlertest . cluster_name ) )
[0]: org. junit. assert. assertequals ( 0, path. tostring ( ). length ( ) )
[1]: org. junit. assert. assertequals ( """", path. tostring ( ) )
[2]: org. junit. assert. assertequals ( 0, path. tostring ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, path. tostring ( ). length )
[4]: org. junit. assert. assertequals ( 1, 1 )

************

************
tgt: org . junit . assert . assertequals ( true , issuperadminonly )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertnotnull ( context )
[2]: org. junit. assert. assertnotnull ( collection )
[3]: org. junit. assert. assertnotnull ( this. list )
[4]: org. junit. assert. assertequals ( includedmethods, actual )

************

************
tgt: org . junit . assert . assertnotnull ( featurecollection . getfeatures ( ) )
[0]: org. junit. assert. assertequals ( includesmethods, actual )
[1]: org. junit. assert. assertequals ( addedmethods, actual )
[2]: , actual )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( g7w14. test. usermanagertest. manager. insertuser ( ) )

************

************
tgt: org . junit . assert . assertfalse ( isactivationallowed )
[0]: org. junit. assert. assertnotnull ( g7w14. test. usermanagertest. user. insertuser ( ) )
[1]: org. junit. assert. assertequals ( g7w14. test. usermanagertest. user. insertuser ( ), null )
[2]: org. junit. assert. assertequals ( g7w14. test. usermanagertest. user. insertuser ( ), 1 )
[3]: org. junit. assert. assertequals ( g7w14. test. usermanagertest. user. insertuser ( ), true )
[4]: org. junit. assert. assertarrayequals ( obj1, r2 )

************

************
tgt: org . junit . assert . assertequals ( this . newwith ( com . gs . collections . impl . tuple . tuples . twin ( "1" , "a" ) , com . gs . collections . impl . tuple . tuples . twin ( "2" , "b" ) ) , list )
[0]: org. junit. assert. assertequals ( obj1, r2 )
[1]: org. junit. assert. assertsame ( obj1, r2 )
[2]: org. junit. assert. assertequals ( obj1 [ 0 ], r2 )
[3]: org. junit. assert. assertarrayequals ( obj1, r2. array )
[4]: org. junit. assert. assertnotnull ( e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertthat ( actualhashbase . tostring ( ) , org . hamcrest . corematchers . equalto ( expectedhashbase . tostring ( ) ) )
[0]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[1]: org. junit. assert. assertnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( org. cyberduck. core. localefactory. message, e. getmessage ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . asserttrue ( ( ( item . getcreateditems ( ) . length ) < 10 ) )
[0]: org. junit. assert. assertequals ( exp, result )
[1]: org. junit. assert. assertequals ( result, expected )
[2]: org. junit. assert. assertequals ( expected, results )
[3]: org. junit. assert. assertequals ( expected, result ) ;
[4]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), sum )

************

************
tgt: org . junit . assert . assertnotnull ( textfilesaver )
[0]: org. junit. assert. assertequals ( 1, sum. collect ( 1 ) )
[1]: org. junit. assert. assertequals ( 1, sum. collect ( ) )
[2]: org. junit. assert. assertnotnull ( sum )
[3]: , sum )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertnotnull ( scriptstatement )
[0]: org. junit. assert. asserttrue ( ( e instanceof java. lang. illegalargumentexception ) )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. asserttrue ( ( e instanceof java. lang. illegalstateexception ) )
[3]: org. junit. assert. asserttrue ( ( e instanceof java. lang. runtimeexception ) )
[4]: org. junit. assert. assertnull ( ref. atomicget ( ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( expectedindexes , result ) )
[0]: org. junit. assert. asserttrue ( collection. isempty ( ) )
[1]: org. junit. assert. asserttrue ( list. isempty ( ) )
[2]: org. junit. assert. assertequals ( true, collection. isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, collection. isempty ( ) )
[4]: org. junit. assert. assertequals ( true, list. isempty ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( interceptor . getcachecontrol ( null , null , handler ) )
[0]: org. junit. assert. assertnotnull ( source )
[1]: org. junit. assert. assertnull ( source )
[2]: org. junit. assert. assertequals ( instance, source )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertfalse ( nativelabelscanstore. isdirty ( ) )
[1]: org. junit. assert. assertequals ( 1, list. size ( ) )
[2]: org. junit. assert. assertnull ( target. parse ( ) )
[3]: org. junit. assert. assertfalse ( target. parse ( ) )
[4]: org. junit. assert. assertequals ( 0, target. parse ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , instance . getoutputdimensionality ( ) )
[0]: org. junit. assert. assertequals ( 0, target. parse ( ). length )
[1]: org. junit. assert. assertequals ( 0, target. parse ( ), 0 )
[2]: org. junit. assert. assertarrayequals ( tmp, bos. tobytearray ( ) )
[3]: org. junit. assert. assertequals ( 0, tmp. length )
[4]: , tmp )

************

************
tgt: org . junit . assert . assertthat ( generatedjson , org . hamcrest . corematchers . is ( expectedjson ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertsame ( ex, e. getcause ( ) )
[3]: org. junit. assert. assertequals ( stringlistener, event. getvalue ( ). getpayload ( ) )
[4]: org. junit. assert. assertequals ( stringlistener, event. getvalue ( ). getpayload ( ). get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( best . getcoverage ( ) ) < 1.0 ) )
[0]: org. junit. assert. assertequals ( 1, event. getvalue ( ). getpayload ( ). size ( ) )
[1]: org. junit. assert. assertequals ( stringlistener, event. getvalue ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), viewaction. project. visiblefiletry ( project. getname ( ) ) )
[4]: org. junit. assert. assertequals ( true, viewaction. project. visiblefiletry ( project. getname ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( expected , events )
[0]: org. junit. assert. assertequals ( 1, viewaction. project. visiblefiletry ( project. getname ( ) ) )
[1]: org. junit. assert. assertequals ( 1, actual )
[2]: org. junit. assert. assertequals ( 1, count )
[3]: org. junit. assert. assertequals ( 1, msg. size ( ) )
[4]: org. junit. assert. assertequals ( 1, registeredresult )

************

************
tgt: org . junit . assert . asserttrue ( cc . activecells ( ) . equals ( burstingcells ) )
[0]: org. junit. assert. assertequals ( 1, msg. getid ( ) )
[1]: org. junit. assert. assertfalse ( isjohnpresent )
[2]: org. junit. assert. asserttrue ( e. getmessage ( ). contains ( null ) )
[3]: org. junit. assert. assertfalse ( e. getmessage ( ). contains ( null ) )
[4]: org. junit. assert. assertequals ( true, e. getmessage ( ). contains ( null ) )

************

************
tgt: org . junit . assert . assertnotnull ( dbrangerservicelist )
[0]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( asobject, realpath )
[3]: org. junit. assert. assertequals ( oauth, realpath )
[4]: org. junit. assert. assertequals ( statrequest. get ( ), numsplits )

************

************
tgt: org . junit . assert . assertequals ( org . hyperledger . fabric . sdk . channelconfigurationtest . test_bytes_2 , new java . lang . string ( testchannelconfig . getchannelconfigurationasbytes ( ) ) )
[0]: org. junit. assert. assertequals ( statrequest. get ( 0 ), numsplits )
[1]: org. junit. assert. assertequals ( statrequest. get ( j ), numsplits )
[2]: org. junit. assert. assertequals ( statrequest. get ( i ), numsplits )
[3]: org. junit. assert. assertequals ( statrequest, result )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), com. liferay. portal. kernel. util. arrayutil. isempty ( array ) )

************

************
tgt: org . junit . assert . assertequals ( output [ 1 ] , output [ 0 ] )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), com. liferay. portal. kernel. util. arrayutil. isempty ( array ) )
[1]: org. junit. assert. assertarrayequals ( new boolean [ ] { }, com. liferay. portal. kernel. util. arrayutil. isempty ( array ) )
[2]: org. junit. assert. assertequals ( 1, com. liferay. portal. kernel. util. arrayutil. isempty ( array ) )
[3]: org. junit. assert. assertequals ( com. liferay. portal. kernel. util. arrayutil. isempty ( array ), false )
[4]: org. junit. assert. assertequals ( errors. tostring ( ), 0, errors. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( header . getsubreportcount ( ) , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( 0 ) ) )
[0]: org. junit. assert. assertequals ( errors. tostring ( ), 1, errors. size ( ) )
[1]: org. junit. assert. assertequals ( errors. tostring ( ), 3, errors. size ( ) )
[2]: org. junit. assert. assertequals ( errors. tostring ( ), 2, errors. size ( ) )
[3]: org. junit. assert. asserttrue ( output )
[4]: org. junit. assert. assertequals ( true, output )

************

************
tgt: org . junit . assert . assertequals ( 2 , found . size ( ) )
[0]: org. junit. assert. assertfalse ( output )
[1]: org. junit. assert. assertequals ( false, output )
[2]: org. junit. assert. assertthat ( output, org )
[3]: org. junit. assert. assertnotnull ( null )
[4]: org. junit. assert. assertnull ( null )

************

************
tgt: org . junit . assert . assertequals ( 0 , actie . valideercorrectieinhoud ( ) . size ( ) )
[0]: org. junit. assert. assertnotnull ( """" )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertnotnull ( spec. isautoheight ( ) )
[4]: org. junit. assert. assertnotnull ( fixture. isautoheight ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedelementid , elementid )
[0]: org. junit. assert. assertfalse ( spec. isautoheight ( ) )
[1]: org. junit. assert. asserttrue ( testis. isautoheight ( ) )
[2]: autoheight ( ) )
[3]: org. junit. assert. assertnotnull ( no_standalone_partition_value_filter, data_version, storage_names, no_storage_name, org. finra. herd. model. api. xml. businessobjectdataddloutputformatenum. hive_13_ddl )
[4]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), resultbusinessobjectdataddl )

************

************
tgt: org . junit . assert . asserttrue ( org . jboss . as . test . integration . ejb . timerservice . persistence . simpletimerservicebean . awaittimercall ( ) )
[0]: org. junit. assert. assertnotnull ( no_standalone_partition_value_filter, data_version, storage_names )
[1]: org. junit. assert. assertnull ( resultbusinessobjectdataddl )
[2]: org. junit. assert. assertnotnull ( no_standalone_partition_value_filter )
[3]: org. junit. assert. assertnull ( map. acquireusing ( null, null ) )
[4]: org. junit. assert. assertequals ( null, map. acquireusing ( null, null ) )

************

************
tgt: org . junit . assert . asserttrue ( ( l == ( longvalue . intvalue ( ) ) ) )
[0]: org. junit. assert. assertnotnull ( map )
[1]: org. junit. assert. assertequals ( 0, map. acquireusing ( null, null ) )
[2]: org. junit. assert. assertnull ( map )
[3]: org. junit. assert. assertequals ( 1, errors. hasfielderrors ( type ). size ( ) )
[4]: org. junit. assert. asserttrue ( errors. hasfielderrors ( type ) )

************

************
tgt: org . junit . assert . assertequals ( expected , read )
[0]: org. junit. assert. assertequals ( 1, errors. hasfielderrors ( type ) )
[1]: org. junit. assert. asserttrue ( errors. hasfielderrors ( type. getid ( ) ) )
[2]: org. junit. assert. assertequals ( 1, errors. hasfielderrors ( type. getid ( ) ) )
[3]: org. junit. assert. assertequals ( test, java. lang. string. valueof ( test ) )
[4]: org. junit. assert. assertequals ( test, java. util. arrays. tostring ( rs ) )

************

************
tgt: org . junit . assert . asserttrue ( service . assignnodetypes ( profile , root ) )
[0]: org. junit. assert. assertequals ( test, tostring ( rs ) )
[1]: org. junit. assert. assertequals ( test, java. lang. string. tostring ( rs ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, info. getconfigstatusmessages ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, info. getconfigstatusmessages ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( proxy . getextensions ( ) . isempty ( ) )
[0]: org. junit. assert. asserttrue ( info. getconfigstatusmessages ( ). isempty ( ) )
[1]: org. junit. assert. assertnotnull ( info. getconfigstatusmessages ( ) )
[2]: org. junit. assert. assertequals ( 0, info. getconfigstatusmessages ( ). length )
[3]: org. junit. assert. asserttrue ( kbuilder. haserrors ( ) )
[4]: org. junit. assert. asserttrue ( ibset. equals ( bset ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , violations . size ( ) )
[0]: org. junit. assert. assertfalse ( ibset. equals ( bset ) )
[1]: org. junit. assert. asserttrue ( traversal. hasnext ( ) )
[2]: org. junit. assert. assertequals ( 0, elements. getpackageelement ( ""foo"" ). size ( ) )
[3]: org. junit. assert. assertequals ( """", elements. getpackageelement ( ""foo"" ). tostring ( ) )
[4]: org. junit. assert. assertnull ( elements. getpackageelement ( ""foo"" ). tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( sampledata . johncoltrane , artist )
[0]: org. junit. assert. assertequals ( 0, elements. getpackageelement ( ""foo"" ). size ( ) )
[1]: public void element ( ) { }
[2]: org. junit. assert. assertequals ( 1, test. minmoves ( input ) )
[3]: org. junit. assert. assertequals ( test. minmoves ( input ), 1 )
[4]: org. junit. assert. assertequals ( 0, test. minmoves ( input ) )

************

************
tgt: org . junit . assert . assertarrayequals ( read ( html ) , read ( result ) )
[0]: org. junit. assert. assertequals ( tests. minmoves ( input ), 1 )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( input ), minmoves ( input ) )
[2]: org. junit. assert. assertequals ( 0, event. getnewstate ( ) )
[3]: org. junit. assert. assertequals ( 1, event. getnewstate ( ) )
[4]: org. junit. assert. assertequals ( 0, events. getnewstate ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertnotnull ( getnewstate ( ) )
[1]: org. junit. assert. assertequals ( 0, event. getnewstate ( ). size ( ) )
[2]: org. junit. assert. assertsame ( answer, memoizer. compute ( input ) )
[3]: org. junit. assert. assertequals ( expected, e )
[4]: org. junit. assert. assertequals ( 1, best. gettests ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( false , espereventprocessor . restoreconfiguration ( badconfiguration ) )
[0]: org. junit. assert. assertequals ( 0, best. gettests ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( jaxbcontextresolver. getjaxbcontext ( org. everrest. core. generated. book. class ) )
[2]: org. junit. assert. assertequals ( jaxbcontext, this. getjaxbcontext ( org. everrest. core. generated. book. class ) )
[3]: org. junit. assert. assertequals ( jaxbcontext, jaxbcontextresolver. getjaxbcontext ( org. everrest. core. generated. book. class ) )
[4]: org. junit. assert. assertequals ( jaxbcontext, m. getjaxbcontext ( org. everrest. core. generated. book. class ) )

************

************
tgt: org . junit . assert . assertnotnull ( tool . getcfpagecoverage ( templatepath1 ) )
[0]: org. junit. assert. assertnotnull ( jaxbcontextresolver. getjaxbcontext ( java. lang. string. class ) )
[1]: org. junit. assert. assertnotnull ( result. gettext ( ) )
[2]: org. junit. assert. assertequals ( 1, result. gettext ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. gettext ( ). length ( ) )
[4]: org. junit. assert. assertequals ( null, result. gettext ( ) )

************

************
tgt: org . junit . assert . assertequals ( state , item . getstate ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( true, serverstatus. isrepeat ( ) )
[2]: org. junit. assert. assertequals ( false, serverstatus. isrepeat ( ) )
[3]: org. junit. assert. assertequals ( 0, serverstatus. isrepeat ( ) )
[4]: org. junit. assert. assertequals ( null, serverstatus. isrepeat ( ) )

************

************
tgt: org . junit . assert . asserttrue ( tbce . comparescreen ( "foo" ) )
[0]: org. junit. assert. assertequals ( 1, serverstatus. isrepeat ( ) )
[1]: org. junit. assert. assertnull ( object. getboolean ( ""foo"", false ) )
[2]: org. junit. assert. assertnull ( object. getboolean ( ""foo"", false ) )
[3]: org. junit. assert. assertfalse ( object. getboolean ( ""foo"", false ) )
[4]: org. junit. assert. assertequals ( ""foo"", ctx. getboolean ( ""foo"", false ) )

************

************
tgt: org . junit . assert . assertfalse ( this . pool . addworkitem ( "test" , new java . lang . object ( ) ) )
[0]: org. junit. assert. assertequals ( ""foo"", object. getboolean ( ""foo"", false ) )
[1]: org. junit. assert. assertequals ( 1, com. sun. mail. util. proputil. getintproperty ( props, null, 1 ) )
[2]: org. junit. assert. assertequals ( 1, com. sun. mail. util. proputil. getintproperty ( props, ""test"", 1 ) )
[3]: org. junit. assert. assertequals ( 1, com. sun. mail. util. proputil. getintproperty ( props, null, 0 ) )
[4]: org. junit. assert. assertequals ( 0, com. sun. mail. util. proputil. getintproperty ( props, null, 1 ) )

************

************
tgt: org . junit . assert . assertequals ( new org . finra . herd . model . api . xml . businessobjectdatakeys ( businessobjectdatakeys ) , response )
[0]: org. junit. assert. assertequals ( com. sun. mail. util. proputil. getintproperty ( props, null, 1 ), 1 )
[1]: org. junit. assert. assertnotnull ( locationurl )
[2]: org. junit. assert. assertequals ( locationurl, null )
[3]: org. junit. assert. assertequals ( null, locationurl )
[4]: org. junit. assert. assertequals ( locationurl, result )

************

************
tgt: org . junit . assert . asserttrue ( accessible )
[0]: ) )
[1]: org. junit. assert. assertequals ( com. gs. collections. impl. map. mutable. unifiedmap. newwithkeysvalues ( 1, 1, 1, 1, 1 ), actual )
[2]: org. junit. assert. assertequals ( newwithkeysvalues ( 1, 1, 1, 1, 1 ), actual )
[3]: org. junit. assert. assertequals ( newwithkeysvalues ( 1, 1, 1, 1 ), actual )
[4]: , actual )

************

************
tgt: org . junit . assert . assertnotnull ( builder )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( results )
[2]: org. junit. assert. assertequals ( null, results )
[3]: org. junit. assert. assertequals ( expected, results )
[4]: org. junit. assert. assertequals ( 1, results )

************

************
tgt: org . junit . assert . assertequals ( 0 , meldingen . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( gettransactiontokeninfo ( tokeninfo ) )
[2]: org. junit. assert. assertnotnull ( event. gettransactiontokeninfo ( null ) )
[3]: org. junit. assert. assertnotnull ( handler. gettransactiontokeninfo ( tokeninfo ) )
[4]: org. junit. assert. assertnull ( event. gettransactiontokeninfo ( null ) )

************

************
tgt: org . junit . assert . assertequals ( 101 , author . getid ( ) )
[0]: org. junit. assert. assertnull ( handler. gettransactiontokeninfo ( tokeninfo ) )
[1]: org. junit. assert. assertequals ( 1, to )
[2]: org. junit. assert. assertequals ( 0, to )
[3]: org. junit. assert. assertequals ( ( ( - 1 ) * to ), to )
[4]: org. junit. assert. assertequals ( 4, to )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( ( ( - 1 ) * 2 ), to )
[1]: org. junit. assert. assertequals ( 0, this. apply ( this. currentdocument, this. document ). size ( ) )
[2]: org. junit. assert. assertequals ( null, this. apply ( this. currentdocument, this. document ) )
[3]: org. junit. assert. assertequals ( 0, this. apply ( this. currentdocument, this. xobject ) )
[4]: org. junit. assert. assertequals ( 0, this. apply ( this. currentdocument, this. document ) )

************

************
tgt: org . junit . assert . assertequals ( true , false )
[0]: ) )
[1]: org. junit. assert. assertequals ( parent, child )
[2]: org. junit. assert. assertequals ( child, parent )
[3]: org. junit. assert. assertequals ( child, child )
[4]: org. junit. assert. assertnotnull ( child )

************

************
tgt: org . junit . assert . assertequals ( true , strategy . getusesystemproxy ( ) )
[0]: )
[1]: org. junit. assert. assertequals ( 1, runs. size ( ) )
[2]: org. junit. assert. assertequals ( 0, runs. size ( ) )
[3]: org. junit. assert. assertequals ( 3, runs. size ( ) )
[4]: org. junit. assert. assertnotnull ( runs. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "other" , this . mocker . getcomponentundertest ( ) . getlabel ( ) )
[0]: . size ( ) )
[1]: org. junit. assert. assertequals ( 1, validate ( ). size ( ) )
[2]: org. junit. assert. asserttrue ( validate ( ). isempty ( ) )
[3]: org. junit. assert. assertnotnull ( servlet. getrealm ( ) )
[4]: org. junit. assert. assertequals ( null, servlet. getrealm ( ) )

************

************
tgt: org . junit . assert . assertequals ( edu . harvard . iq . dataverse . authorization . users . authenticatedusertest . testuser . getidentifier ( ) , result )
[0]: org. junit. assert. assertequals ( 1, servlet. getrealm ( ) )
[1]: type ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, buffer. getoffset ( ) )
[4]: org. junit. assert. assertnotnull ( t )

************

************
tgt: org . junit . assert . asserttrue ( ( ! ( nnlist . isempty ( ) ) ) )
[0]: org. junit. assert. assertequals ( java. lang. object. class, t )
[1]: org. junit. assert. assertequals ( java. lang. string. class, t )
[2]: org. junit. assert. assertnull ( t )
[3]: org. junit. assert. assertequals ( null, t )
[4]: org. junit. assert. assertthat ( null, hasonlyprivateconstructors ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , ksession . fireallrules ( ) )
[0]: org. junit. assert. assertthat ( java. util. arrays. aslist ( ), hasonlyprivateconstructors ( ) )
[1]: org. junit. assert. assertthat ( java. util. collections. emptylist ( ), hasonlyprivateconstructors ( ) )
[2]: org. junit. assert. assertthat ( null, hasonlyprotectedconstructors ( ) )
[3]: org. junit. assert. assertthat ( java. util. arrays. aslist ( ), hasonlyprotectedconstructors ( ) )
[4]: org. junit. assert. assertnull ( service. verifytoken ( token ) )

************

************
tgt: org . junit . assert . asserttrue ( instance . isvalidconfigfile ( ) )
[0]: org. junit. assert. assertnull ( store. verifytoken ( token ) )
[1]: org. junit. assert. assertnull ( parser. verifytoken ( token ) )
[2]: org. junit. assert. assertnull ( processor. verifytoken ( token ) )
[3]: org. junit. assert. assertnull ( monitor. verifytoken ( token ) )
[4]: org. junit. assert. assertequals ( false, companyadmin )

************

************
tgt: org . junit . assert . assertequals ( tag , response . getcontent ( ) . trim ( ) )
[0]: org. junit. assert. assertfalse ( companyadmin )
[1]: org. junit. assert. assertnotnull ( response. getcontentasstring ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( org. apache. hadoop. conf. configuration. getcontentasstring ( ) ), response. getcontentasstring ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( org. apache. hadoop. conf. configuration. getcontentasstring ( ) ), response. getcontentasstring ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), response. getcontentasstring ( ) )

************

************
tgt: org . junit . assert . assertsame ( instance1 , instance2 )
[0]: org. junit. assert. assertequals ( java. lang. string. class, response. getcontentasstring ( ) )
[1]: org. junit. assert. assertequals ( 1, actual. getsequenceid ( ) )
[2]: org. junit. assert. assertequals ( 0, actual. getsequenceid ( ) )
[3]: org. junit. assert. assertequals ( 2, actual. getsequenceid ( ) )
[4]: org. junit. assert. assertequals ( 1l, actual. getsequenceid ( ) )

************

************
tgt: org . junit . assert . assertequals ( "foo" , service . get ( 0 ) )
[0]: org. junit. assert. assertthat ( actual. getsequenceid ( ), org. hamcrest )
[1]: org. junit. assert. assertnotnull ( result. tostring ( ) )
[2]: org. junit. assert. assertnull ( result. tostring ( ) )
[3]: org. junit. assert. assertequals ( null, result. tostring ( ) )
[4]: org. junit. assert. assertequals ( empty, result. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, count. get ( ) )
[2]: org. junit. assert. assertequals ( 0, count. get ( ) )
[3]: org. junit. assert. assertequals ( 2, count. get ( ) )
[4]: org. junit. assert. assertequals ( 4, count. get ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( response )
[0]: org. junit. assert. assertequals ( 3, count. get ( ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( result, null )
[3]: org. junit. assert. assertequals ( result, expected )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( 1 , returnedoptions . size ( ) )
[0]: org. junit. assert. assertequals ( result, 12 )
[1]: org. junit. assert. assertequals ( null, val. get ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class, val. get ( ) )
[3]: org. junit. assert. assertequals ( msg, val. get ( ) )
[4]: org. junit. assert. assertnotnull ( val. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( referrerstest . length , referrers . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, values. size ( ) )
[2]: org. junit. assert. assertequals ( values, values )
[3]: org. junit. assert. assertnotnull ( values )
[4]: org. junit. assert. assertequals ( 0, values. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , d . asbyte ( ) )
[0]: org. junit. assert. assertequals ( 1, values. count ( ) )
[1]: org. junit. assert. assertnotnull ( subject. getreferencevalue ( ) )
[2]: org. junit. assert. assertequals ( 1, subject. getreferencevalue ( ). length )
[3]: org. junit. assert. assertnotnull ( subject )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , factory . getnumcarvedtestcases ( ) )
[0]: )
[1]: org. junit. assert. assertequals ( 0, a. compareto ( b ) )
[2]: org. junit. assert. assertequals ( 1, a. compareto ( b ) )
[3]: org. junit. assert. asserttrue ( ( ( a. compareto ( b ) ) == 0 ) )
[4]: org. junit. assert. asserttrue ( ( ( a. compareto ( b ) ) > 0 ) )

************

************
tgt: org . junit . assert . assertequals ( emptylist ( ) , com . feilong . core . util . collectionsutil . select ( list , "name" , tolist ( ( ( java . lang . string ) ( null ) ) ) ) )
[0]: org. junit. assert. asserttrue ( ( ( a. compareto ( b ) ) < 0 ) )
[1]: org. junit. assert. assertequals ( null, recipient. getemail ( ) )
[2]: org. junit. assert. assertnotnull ( reader )
[3]: org. junit. assert. assertnull ( reader )
[4]: org. junit. assert. assertnotnull ( writer )

************

************
tgt: org . junit . assert . assertfalse ( futures [ i ] . isdone ( ) )
[0]: org. junit. assert. assertnotnull ( stream )
[1]: org. junit. assert. assertnotnull ( read )
[2]: org. junit. assert. assertequals ( s, copy. trim ( ) )
[3]: org. junit. assert. assertequals ( s, copy )
[4]: org. junit. assert. assertequals ( s, copied )

************

************
tgt: org . junit . assert . assertnull ( org . nohope . reflection . introspectionutils . introspectionutils . tryfromprimitive ( null ) )
[0]: org. junit. assert. assertequals ( s, s )
[1]: org. junit. assert. assertequals ( s, copy. tolowercase ( ) )
[2]: org. junit. assert. assertequals ( 1, test. undirectedgraph ( pcgraph ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, org. undirectedgraph ( pcgraph ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, instance. undirectedgraph ( pcgraph ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( dummyuri , org . hamcrest . corematchers . is ( "testing/avro/" ) )
[0]: org. junit. assert. assertequals ( 1, pcgraph. undirectedgraph ( graph ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, org. junit. assert. assertequals ( graph. undirectedgraph ( pcgraph ) )
[2]: org. junit. assert. assertnotnull ( loadedfactory )
[3]: org. junit. assert. assertnull ( loadedfactory )
[4]: org. junit. assert. assertnotnull ( loadfactory )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertnotnull ( savedfactory )
[1]: org. junit. assert. assertnotnull ( loadedfactory ) )
[2]: org. junit. assert. assertequals ( strategy, checkuploadneeded ( logstoragestatus ) )
[3]: org. junit. assert. assertequals ( strategy, strategy. checkuploadneeded ( logstoragestatus ) )
[4]: org. junit. assert. assertequals ( strategy, testuploadneeded ( logstoragestatus ) )

************

************
tgt: org . junit . assert . asserttrue ( group . getresources ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( strategy. checkuploadneeded ( logstoragestatus ), loguploadstrategydecision )
[1]: ) )
[2]: org. junit. assert. assertnull ( footer [ 0 ] )
[3]: org. junit. assert. assertnull ( footer )
[4]: org. junit. assert. assertfalse ( b. contains ( footer ) )

************

************
tgt: org . junit . assert . assertsame ( adapter , builder . adapter )
[0]: org. junit. assert. assertfalse ( b. read ( ) )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( new java. lang. string ( b ), null )
[3]: org. junit. assert. assertequals ( 0, b )
[4]: org. junit. assert. assertequals ( new java. lang. long ( 1 ), b )

************

************
tgt: org . junit . assert . assertequals ( 1 , mana . getred ( ) )
[0]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), b )
[1]: org. junit. assert. assertequals ( new java. lang. integer ( 0 ), b )
[2]: org. junit. assert. assertnotnull ( roboservice. context )
[3]: org. junit. assert. assertnotnull ( roboservice. aggregator ( ) )
[4]: org. junit. assert. assertnotnull ( roboservice. example ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, roboservice. context )
[1]: )
[2]: org. junit. assert. assertnotnull ( filetree )
[3]: org. junit. assert. assertequals ( 1, filetree. gettree ( queryoptions. opencb. opencga. catalog. managers. paramutils. class, null, null, sessioniduser ). size ( ) )
[4]: org. junit. assert. assertnotnull ( filetree. collection ( ) )

************

************
tgt: org . junit . assert . assertnull ( pullouts )
[0]: org. junit. assert. assertnull ( filetree )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, this. testmanifest. createjobschedulerequest ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, testmanifest. createjobschedulerequest ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( this. testmanifest. createjobschedulerequest ( ). get ( ). getclass ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . mobicents . slee . container . component . deployment . classloading . urlclassloaderdomainimpl . class , loadclass . getclassloader ( ) . getclass ( ) )
[0]: org. junit. assert. assertnotnull ( fixture. createjobschedulerequest ( ). get ( ). getclass ( ) )
[1]: org. junit. assert. assertnotnull ( converter. createjobschedulerequest ( ). get ( ). getclass ( ) )
[2]: org. junit. assert. assertthat ( now, org. hamcrest. corematchers. is ( datetimezone. utc ) )
[3]: org. junit. assert. assertthat ( now. getzone ( ), org. hamcrest. corematchers. is ( datetimezone ) )
[4]: org. junit. assert. assertthat ( now )

************

************
tgt: org . junit . assert . assertequals ( "foo" , ecaught . getmessage ( ) )
[0]: , now )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( e. getcausingexceptions ( ) )
[3]: org. junit. assert. assertequals ( 1, e. getcausingexceptions ( ) )
[4]: org. junit. assert. assertequals ( 1, e. getcausingexceptions ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( features . iskeyordered ( ) )
[0]: org. junit. assert. assertnotnull ( e. getcausingexceptions ( ). tostring ( ) )
[1]: org. junit. assert. asserttrue ( e. getcausingexceptions ( ). isempty ( ) )
[2]: org. junit. assert. assertnotnull ( socket )
[3]: org. junit. assert. assertequals ( 1, socket. child ( ) )
[4]: org. junit. assert. assertequals ( 1, socket. getcount ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, socket. length )
[1]: ) )
[2]: org. junit. assert. assertfalse ( mandatorysubject. validate ( ) )
[3]: org. junit. assert. asserttrue ( mandatorysubject. validate ( ) )
[4]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( ), manager. getproxymonitorresults ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , progresscollector . getcompletedfilenames ( ) . length )
[0]: org. junit. assert. assertequals ( 1, actual )
[1]: org. junit. assert. assertequals ( 0, actual )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), actual )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), actual )
[4]: org. junit. assert. assertequals ( java. lang. system. currenttimemillis ( ), actual )

************

************
tgt: org . junit . assert . assertequals ( "goodbye" , response )
[0]: org. junit. assert. assertequals ( 0, output. length )
[1]: org. junit. assert. assertarrayequals ( input, output )
[2]: org. junit. assert. assertnotnull ( output )
[3]: org. junit. assert. assertequals ( 1, output. length )
[4]: ( output ) )

************

************
tgt: org . junit . assert . assertnull ( failureprovided . get ( ) )
[0]: org. junit. assert. assertequals ( true, actual )
[1]: org. junit. assert. assertfalse ( actual )
[2]: org. junit. assert. asserttrue ( actual )
[3]: org. junit. assert. assertnotnull ( actual )
[4]: org. junit. assert. assertthat ( actual, org )

************

************
tgt: org . junit . assert . assertequals ( 50.0 , result , 1 )
[0]: org. junit. assert. assertequals ( errmsg, ex. getmessage ( ) )
[1]: org. junit. assert. assertequals ( errmsg, ex. getmessage ( ). trim ( ) )
[2]: org. junit. assert. assertnotnull ( ex. getmessage ( ) )
[3]: org. junit. assert. assertequals ( errmsg, ex. getmessage ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( errmsg. getmessage ( ), ex. getmessage ( ) )

************

************
tgt: org . junit . assert . asserttrue ( me . getmessage ( ) . contains ( error ) )
[0]: org. junit. assert. assertthat ( temporary. getroot ( ). exists ( ), is ( true ) )
[1]: org. junit. assert. assertthat ( temporary. getroot ( ), is ( 1 ) )
[2]: org. junit. assert. assertthat ( temporary. getroot ( ), is ( empty ( ) ) )
[3]: org. junit. assert. assertthat ( temporary. getroot ( ), is ( 1l ) )
[4]: org. junit. assert. assertnotnull ( factory. getsslcontext ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( intentededamount . compareto ( realamount ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( cf, factory. getsslcontext ( ) )
[1]: org. junit. assert. assertequals ( 1, factory. getsslcontext ( ) )
[2]: org. junit. assert. assertequals ( 1, factory. getsslcontext ( ). length )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( line. line ( ) )

************

************
tgt: org . junit . assert . assertfalse ( client . getuserprofile ( null , context ) . ispresent ( ) )
[0]: org. junit. assert. assertnull ( line. line ( ) )
[1]: org. junit. assert. assertnotnull ( line )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnull ( exception. getresourceid ( ) )

************

************
tgt: org . junit . assert . assertthat ( net . time4j . calendar . bahai . badiera . values ( ) . length , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertnotnull ( exception. getresourceid ( ) )
[1]: org. junit. assert. assertnull ( exceptions. getresourceid ( ) )
[2]: org. junit. assert. null, exception. getresourceid ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, paths. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( value , converter . tobyte ( 100 ) )
[0]: org. junit. assert. assertequals ( 0, persons. size ( ) )
[1]: org. junit. assert. assertequals ( 1, persons. size ( ) )
[2]: org. junit. assert. assertequals ( 1, 1 )
[3]: org. junit. assert. assertnotnull ( queue )
[4]: org. junit. assert. assertnotnull ( collection )

************

************
tgt: org . junit . assert . asserttrue ( customerkey . prefixof ( key ) )
[0]: org. junit. assert. assertnotnull ( context )
[1]: type ) { }
[2]: org. junit. assert. assertequals ( 1, 1 )
[3]: org. junit. assert. assertnotnull ( collection )
[4]: org. junit. assert. assertnotnull ( s )

************

************
tgt: org . junit . assert . assertarrayequals ( new java . lang . object [ 0 ] , e . tolist ( ) . toarray ( ) )
[0]: org. junit. assert. assertnotnull ( context )
[1]: org. junit. assert. assertnotnull ( queue )
[2]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )
[3]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. getmessage ( ) )
[4]: org. junit. assert. assertnotnull ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , org . apache . hadoop . hbase . util . bytes . tostring ( res ) )
[0]: org. junit. assert. assertequals ( 0, tested. gettimetosleep ( 0 ) )
[1]: org. junit. assert. assertequals ( 1, tested. gettimetosleep ( 0 ) )
[2]: org. junit. assert. assertequals ( 0, tested. gettimetosleep ( 2 ) )
[3]: org. junit. assert. assertequals ( 0, tested. gettimetosleep ( 1 ) )
[4]: org. junit. assert. assertequals ( 1, tested. gettimetosleep ( 2 ) )

************

************
tgt: org . junit . assert . assertequals ( path , "dir" )
[0]: org. junit. assert. assertequals ( 1, operatedlist. size ( ) )
[1]: org. junit. assert. assertequals ( 0, operatedlist. size ( ) )
[2]: org. junit. assert. assertequals ( 5, operatedlist. size ( ) )
[3]: org. junit. assert. assertequals ( 3, operatedlist. size ( ) )
[4]: org. junit. assert. assertequals ( 1, operatedlist. size ( ) ) ;

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( portlet. tostring ( ), visitedurls. size ( ) )
[1]: org. junit. assert. assertequals ( portlet. tostring ( ), 1, visitedurls. size ( ) )
[2]: org. junit. assert. assertequals ( visitedurls. tostring ( ), 1, portlet. size ( ) )
[3]: org. junit. assert. assertequals ( portlet. tostring ( ), visitedurls. size ( ), 1 )
[4]: org. junit. assert. assertequals ( portlet. tostring ( ), visitedurls. tostring ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( pathrep ( ) . length ( ) )
[0]: org. junit. assert. assertnotnull ( config. gettime_zone ( ) )
[1]: org. junit. assert. assertequals ( 1, config. gettime_zone ( ) )
[2]: org. junit. assert. assertequals ( 0, config. gettime_zone ( ) )
[3]: org. junit. assert. assertequals ( null, config. gettime_zone ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 6 , result )
[0]: org. junit. assert. assertnull ( cl. findclass ( null ) )
[1]: org. junit. assert. assertequals ( """", cl. findclass ( """" ) )
[2]: org. junit. assert. assertnull ( cl. findclass ( """" ) )
[3]: org. junit. assert. assertnull ( cl. findclass ( """" ) )
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , resultstring )
[0]: org. junit. assert. assertequals ( 1, ret )
[1]: org. junit. assert. asserttrue ( datawave. query. jexl. functions. contentfunctionstest. expect ( o, false ) )
[2]: org. junit. assert. assertnull ( validateconstraints ( fido ) )
[3]: org. junit. assert. assertequals ( 0, validateconstraints ( fido ) )
[4]: org. junit. assert. assertnotnull ( validateconstraints ( fido ) )

************

************
tgt: org . junit . assert . assertequals ( org . jacoco . core . internal . analysis . counterimpl . getinstance ( 3 , 0 ) , complexity )
[0]: org. junit. assert. assertequals ( 1, validateconstraints ( fido ) )
[1]: org. junit. assert. asserttrue ( validateconstraints ( fido ) )
[2]: org. junit. assert. assertequals ( newconsole, created )
[3]: org. junit. assert. assertequals ( newconsole. getclass ( ), created. getclass ( ) )
[4]: org. junit. assert. assertequals ( newconsole. tostring ( ), created. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( referenceserials , streamedserials )
[0]: org. junit. assert. assertequals ( newconsole. getid ( ), created. getid ( ) )
[1]: org. junit. assert. assertequals ( newconsole. tostring ( ), created. getmessage ( ) )
[2]: org. junit. assert. assertequals ( newparamvalue, label. gettext ( ) )
[3]: org. junit. assert. assertequals ( label. gettext ( ), oldparamvalue )
[4]: org. junit. assert. assertequals ( label. gettext ( ), newparamvalue )

************

************
tgt: org . junit . assert . assertequals ( dedatadefinitions . tostring ( ) , 1 , dedatadefinitions . size ( ) )
[0]: org. junit. assert. assertequals ( newparamvalue ), label. gettext ( ) )
[1]: org. junit. assert. assertequals ( newparamvalue ), label. gettext ( ) )
[2]: org. junit. assert. assertequals ( result, anumber )
[3]: org. junit. assert. assertequals ( 0, anumber )
[4]: org. junit. assert. assertequals ( 1, anumber )

************

************
tgt: org . junit . assert . assertequals ( java . lang . integer . valueof ( 7 ) , result )
[0]: org. junit. assert. assertequals ( result, aumber )
[1]: org. junit. assert. assertequals ( result, oneumber )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( value, result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( 3 , p . getmaxbackreferencelength ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: , result )
[2]: org. junit. assert. assertnotnull ( row. getvalue ( 0 ) )
[3]: org. junit. assert. assertnotnull ( row. getvalue ( 1 ) )
[4]: org. junit. assert. assertnotnull ( row. getvalue ( int rownumber ) )

************

************
tgt: org . junit . assert . asserttrue ( trace . initialfragment ( ) )
[0]: org. junit. assert. assertnull ( row. getvalue ( 0 ) )
[1]: org. junit. assert. assertnotnull ( row. getvalue ( ) )
[2]: org. junit. assert. assertnotnull ( baseenumerationtype1. require ( ) )
[3]: org. junit. assert. assertnotnull ( baseenumerationtype1. requireinstance ( ) )
[4]: org. junit. assert. assertnotnull ( baseenumerationtype1. get ( ) )

************

************
tgt: org . junit . assert . assertnull ( classundertest . getdifferenceval2 ( ) )
[0]: org. junit. assert. assertnotnull ( baseenumerationtype1. requiredirectorydirectorydirectory ( ) )
[1]: org. junit. assert. assertnotnull ( baseenumerationtype1. requiredirectorydirectorydirectorydirectorydirectorydirectory2 )
[2]: org. junit. assert. asserttrue ( ( ( databasetype. x ) >= 0 ) )
[3]: org. junit. assert. asserttrue ( ( ( databasetype. count ) >= 0 ) )
[4]: org. junit. assert. asserttrue ( ( ( databasetype. x ) == 1 ) )

************

************
tgt: org . junit . assert . assertequals ( integer . max_value , s . intvalue ( ) )
[0]: org. junit. assert. asserttrue ( ( ( databasetype. x ) == 0 ) )
[1]: test 1 ) )
[2]: org. junit. assert. assertequals ( true, polygon. hasenoughnodes ( ) )
[3]: org. junit. assert. asserttrue ( polygon. hasenoughnodes ( ) )
[4]: org. junit. assert. assertequals ( false, polygon. hasenoughnodes ( ) )

************

************
tgt: org . junit . assert . assertequals ( msg , msg1 )
[0]: org. junit. assert. assertequals ( true, poly. hasenoughnodes ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 20l, response. repartitionrequired )
[3]: org. junit. assert. assertequals ( 200, response. code ( ) )
[4]: org. junit. assert. assertequals ( 20l, response. code ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , pojo . count )
[0]: org. junit. assert. assertequals ( 200l, response. code ( ) )
[1]: org. junit. assert. assertequals ( null, response )
[2]: org. junit. assert. assertequals ( true, cb. islightweight ( ) )
[3]: org. junit. assert. assertequals ( false, cb. islightweight ( ) )
[4]: org. junit. assert. assertfalse ( cb. islightweight ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , this . classundertest ( ) . topoccurrences ( 5 ) . size ( ) )
[0]: org. junit. assert. asserttrue ( cb. islightweight ( ) )
[1]: org. junit. assert. assertequals ( true, cb. islightweight ( ). isempty ( ) )
[2]: org. junit. assert. assertequals ( 1, exitvalue )
[3]: org. junit. assert. assertnotnull ( exitvalue )
[4]: org. junit. assert. assertnull ( exitvalue )

************

************
tgt: org . junit . assert . assertequals ( exp , arr2 )
[0]: org. junit. assert. assertequals ( 1, exitvalue )
[1]: ) )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), field. getbit ( i ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( i ), field. getbit ( i ) )
[4]: org. junit. assert. assertequals ( i, field. getbit ( i ) )

************

************
tgt: org . junit . assert . assertnotnull ( m )
[0]: org. junit. assert. assertequals ( 1, field. getbit ( i ) )
[1]: org. junit. assert. assertequals ( 0, field. getbit ( i ) )
[2]: org. junit. assert. assertequals ( 3, mv. getvalue ( ) )
[3]: org. junit. assert. assertequals ( mv, mv. getvalue ( ) )
[4]: org. junit. assert. assertequals ( mv. getvalue ( ), 3 )

************

************
tgt: org . junit . assert . assertequals ( result , randomvalue )
[0]: org. junit. assert. assertequals ( 5, mv. getvalue ( ) )
[1]: ) )
[2]: org. junit. assert. assertnull ( references )
[3]: org. junit. assert. assertnotnull ( references )
[4]: org. junit. assert. assertfalse ( references )

************

************
tgt: org . junit . assert . assertequals ( 4 , allpatients . size ( ) )
[0]: org. junit. assert. assertequals ( 0, references )
[1]: ) )
[2]: org. junit. assert. assertthat ( result1, org. hamcrest. corematchers. is ( defaultisislsdbage ) )
[3]: org. junit. assert. assertequals ( 1, tagdo. getindex ( ) )
[4]: org. junit. assert. assertequals ( 1, datavalidenum. valid. getindex ( ) )

************

************
tgt: org . junit . assert . assertequals ( httpstatuscodes . found , response . getstatus ( ) )
[0]: org. junit. assert. assertnotnull ( tagdo )
[1]: org. junit. assert. assertnotnull ( datavalidenum. valid. getindex ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( reporterfactory )
[4]: org. junit. assert. assertequals ( 1, reporterfactory. messages. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( statemachine . isdaemonstopped ( ) )
[0]: org. junit. assert. assertequals ( 1, reporterfactory. count )
[1]: org. junit. assert. assertequals ( 1, reporterfactory. messages. length )
[2]: ) )
[3]: org. junit. assert. assertequals ( path, relativepath )
[4]: org. junit. assert. assertnotnull ( path )

************

************
tgt: org . junit . assert . assertequals ( 1 , dataparsergrayscale . getbasicchannelscount ( ) )
[0]: path ) )
[1]: path )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, s. size ( ) )
[4]: org. junit. assert. assertnotnull ( s. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, s. size ( ) )
[1]: org. junit. assert. assertequals ( 1, list. size ( ) )
[2]: org. junit. assert. assertequals ( 1, events. size ( ) )
[3]: org. junit. assert. assertnull ( o )
[4]: org. junit. assert. assertnotnull ( o )

************

************
tgt: org . junit . assert . assertthat ( request . getstacklevel ( ) , org . hamcrest . corematchers . is ( validvalue ) )
[0]: org. junit. assert. assertequals ( null, o )
[1]: org. junit. assert. assertsame ( o, null )
[2]: org. junit. assert. assertsame ( o, type )
[3]: org. junit. assert. assertequals ( 1, job. waitforcompletion ( true ) )
[4]: org. junit. assert. assertequals ( true, job. waitforcompletion ( true ) )

************

************
tgt: org . junit . assert . assertequals ( "test" , event . getname ( ) )
[0]: org. junit. assert. assertequals ( null, job. waitforcompletion ( true ) )
[1]: org. junit. assert. assertequals ( 0, job. waitforcompletion ( true ) )
[2]: org. junit. assert. assertthat ( handler. transformoutboundfavorite ( querymapping, metastoremapping ), org. hamcrest. corematchers. is ( expected ) )
[3]: org. junit. assert. assertthat ( handler. transformoutboundfavorite ( querymapping, query ), org. hamcrest. corematchers. is ( expected ) )
[4]: org. junit. assert. assertthat ( querymapping. transformoutboundfavorite ( metastoremapping, query ), org. hamcrest. corematchers. is ( expected ) )

************

************
tgt: org . junit . assert . assertnotnull ( results )
[0]: org. junit. assert. assertthat ( transformoutboundfavorite ( querymapping, query ), org. hamcrest. corematchers. is ( expected ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, logicallyinsert )
[3]: org. junit. assert. assertequals ( false, logicallyinsert )
[4]: org. junit. assert. assertfalse ( logicallyinsert )

************

************
tgt: org . junit . assert . assertequals ( 3 , list . size ( ) )
[0]: org. junit. assert. asserttrue ( haserror. get ( ) )
[1]: org. junit. assert. assertequals ( constraint, store2 )
[2]: org. junit. assert. assertnotnull ( store2 )
[3]: org. junit. assert. assertequals ( constraints, store2 )
[4]: org. junit. assert. assertequals ( constraint, store1 )

************

************
tgt: org . junit . assert . assertequals ( existinglventryversion , newlventryversion )
[0]: org. junit. assert. assertequals ( constraint, stores2 )
[1]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( messagecontext ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnull ( result )
[4]: , result )

************

************
tgt: org . junit . assert . assertequals ( "111" , s . get ( "1" ) )
[0]: ) )
[1]: org. junit. assert. assertnull ( target. parse ( ) )
[2]: org. junit. assert. assertfalse ( target. parse ( ) )
[3]: org. junit. assert. assertequals ( 0, target. parse ( ) )
[4]: org. junit. assert. assertequals ( false, target. parse ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( context )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, studies. size ( ) )
[2]: org. junit. assert. assertequals ( 0, studies. size ( ) )
[3]: org. junit. assert. asserttrue ( ( ( studies. size ( ) ) == 1 ) )
[4]: org. junit. assert. asserttrue ( ( ( studies. size ( ) ) > 1 ) )

************

************
tgt: org . junit . assert . assertfalse ( info . renewlease ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( e )
[2]: org. junit. assert. assertequals ( e, generalsettingspresenter )
[3]: org. junit. assert. assertequals ( e, generalsettingspresenter. getid ( ) )
[4]: org. junit. assert. assertequals ( e, generalsettingspresenter. state ( ) )

************

************
tgt: org . junit . assert . assertequals ( xmlesperado , com . fincatto . documentofiscal . nfe400 . fabricadeobjetosfake . getnfnotainfotransporte ( ) . tostring ( ) )
[0]: org. junit. assert. assertequals ( e, generalsettingspresenter. next ( ) )
[1]: org. junit. assert. assertequals ( 1, splits. size ( ) )
[2]: org. junit. assert. assertequals ( table. size ( ), 1 )
[3]: org. junit. assert. assertequals ( table. size ( ), 2 )
[4]: org. junit. assert. assertequals ( split, res )

************

************
tgt: org . junit . assert . assertthat ( filtered . size ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, status. get ( ) )
[2]: org. junit. assert. assertequals ( new javax. ejb. asyncresult ( 2 ), status. get ( ) )
[3]: org. junit. assert. assertequals ( new javax. ejb. asyncresult ( 2 ), status )
[4]: org. junit. assert. asserttrue ( ( status instanceof javax. ejb. asyncresult ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , impl . getresponsedelaysecs ( entry ) )
[0]: org. junit. assert. assertequals ( 1, status. size ( ) )
[1]: org. junit. assert. assertequals ( mocklocator, targetlocator. activeelement ( ) )
[2]: org. junit. assert. assertequals ( activeelement, targetlocator. activeelement ( ) )
[3]: org. junit. assert. assertequals ( nowelement, targetlocator. activeelement ( ) )
[4]: org. junit. assert. assertequals ( 1, targetlocator. activeelement ( ). size (

************

************
tgt: org . junit . assert . assertequals ( expected , com . github . bordertech . wcomponents . util . htmlsanitizerutil . sanitize ( input ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, client. getdbid ( ) )
[2]: org. junit. assert. assertequals ( 0, client. getdbid ( ) )
[3]: org. junit. assert. assertequals ( id, client. getdbid ( ) )
[4]: org. junit. assert. assertnotnull ( clientwithlink )

************

************
tgt: org . junit . assert . assertsame ( expected , result )
[0]: org. junit. assert. assertnotnull ( client. getdbid ( ) )
[1]: org. junit. assert. asserttrue ( errors. haserrors ( ) )
[2]: org. junit. assert. assertnotnull ( getinstallationid ( installationid ) )
[3]: org. junit. assert. assertnotnull ( java. lang. string. valueof ( installationid ) )
[4]: org. junit. assert. assertnotnull ( new java. lang. string ( installationid ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , result )
[0]: , installationid )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( echovalue )
[3]: org. junit. assert. assertequals ( null, echovalue )
[4]: org. junit. assert. assertnull ( echovalue )

************

************
tgt: org . junit . assert . assertthat ( aggregatedinvocations . values ( ) . size ( ) , org . hamcrest . corematchers . is ( 3 ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 0, a. addsynchronization ( a ) )
[3]: org. junit. assert. assertnull ( a. addsynchronization ( a ) )
[4]: org. junit. assert. assertequals ( null, a. addsynchronization ( a ) )

************

************
tgt: org . junit . assert . assertequals ( actualpayload , expectedpayload )
[0]: org. junit. assert. assertfalse ( a. addsynchronization ( a ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, countresolvedgriditems ( ) )
[3]: org. junit. assert. assertequals ( 1, countresolvedgriditems ( ) )
[4]: org. junit. assert. assertequals ( 2, countresolvedgriditems ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 3, countresolvedgriditems ( ) )
[1]: org. junit. assert. assertequals ( 0, countsresolvedgriditems ( ) )
[2]: org. junit. assert. assertequals ( 1, people. size ( ) )
[3]: org. junit. assert. assertequals ( 0, people. size ( ) )
[4]: org. junit. assert. assertequals ( 1, people. length )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: type ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( false, result )
[3]: org. junit. assert. assertequals ( true, result )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertthat ( responses . size ( ) , org . hamcrest . corematchers . is ( 2 ) )
[0]: org. junit. assert. assertequals ( 0, result )
[1]: org. junit. assert. assertequals ( amssite, configprocessor. getpropertyvalue ( ) )
[2]: org. junit. assert. assertequals ( amssite, configprocessor. getproperty getpropertyvalue ( ) )
[3]: org. junit. assert. assertequals ( amssite, configprocessor. getpropertyvalue ( ""a"" ) )
[4]: org. junit. assert. assertequals ( amssite, configprocessor. getpropertyvalue ( ""foo"" ) )

************

************
tgt: org . junit . assert . assertnotnull ( rangetermquery )
[0]: ) )
[1]: org. junit. assert. asserttrue ( client. hasmoreavailablecapacitythan ( c2 ) )
[2]: org. junit. assert. assertfalse ( client. hasmoreavailablecapacitythan ( c2 ) )
[3]: org. junit. assert. assertequals ( true, client. hasmoreavailablecapacitythan ( c2 ) )
[4]: org. junit. assert. asserttrue ( range. hasmoreavailablecapacitythan ( c2 ) )

************

************
tgt: org . junit . assert . assertequals ( qname . getprefix ( ) , "" )
[0]: ) )
[1]: org. junit. assert. assertnull ( criteria. getfailuremessage ( ) )
[2]: org. junit. assert. assertsame ( failuremessage, criteria. getfailuremessage ( ) )
[3]: org. junit. assert. assertnull ( criteria. getfailuremessage ( ) )
[4]: org. junit. assert. assertfalse ( criteria. getfailuremessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( "info" , testedstore . readproperty ( org . ff4j . commonsconf . update_ok ) . getvalue ( ) )
[0]: org. junit. assert. assertnull ( criteria )
[1]: org. junit. assert. assertequals ( list. next ( ), j )
[2]: org. junit. assert. assertequals ( list. listiterator ( ), j )
[3]: org. junit. assert. assertequals ( list. iterator ( ). next ( ), j )
[4]: org. junit. assert. assertequals ( lists. next ( ), j )

************

************
tgt: org . junit . assert . assertthat ( actual . isinsamedatabaseinstance ( target ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( 0, list. next ( ) )
[1]: org. junit. assert. assertequals ( config. blurconfig, blurconfig )
[2]: org. junit. assert. assertequals ( 1, value )
[3]: org. junit. assert. assertnotnull ( union. orderby ( childselect ) )
[4]: org. junit. assert. assertnotnull ( union. orderby ( null ) )

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: org. junit. assert. assertnotnull ( union. orderby ( parentselect ) )
[1]: org. junit. assert. assertnotnull ( union. orderby ( 1 ) )
[2]: org. junit. assert. assertequals ( true, result )
[3]: org. junit. assert. assertequals ( false, result )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . assertsame ( evaluator , evaluatorfromset )
[0]: org. junit. assert. assertfalse ( result )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. assertequals ( 1, metrics. size ( ) )
[3]: org. junit. assert. assertequals ( 0, metrics. size ( ) )
[4]: org. junit. assert. assertequals ( 2, metrics. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( multimap . containskey ( key ) )
[0]: org. junit. assert. assertequals ( 4, metrics. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( com. google. auth. appengine. appenginecredentials. getaccount ( ), credentials. getaccount ( ) )
[3]: org. junit. assert. assertequals ( com. google. auth. appengine. appenginecredentials. getaccount ( ), credentials. tostring ( ) )
[4]: org. junit. assert. assertequals ( com. google. auth. appengine. appenginecredentials. getaccount ( ), credentials. getmessage ( ) )

************

************
tgt: org . junit . assert . assertthat ( user . getid ( ) , org . hamcrest . matchers . is ( gettestuser ( ) . getid ( ) ) )
[0]: org. junit. assert. assertequals ( com. google. auth. appengine. appenginecredentials. getaccount ( ), credentials )
[1]: org. junit. assert. assertequals ( expected_account, credentials. getaccount ( ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertthat ( diff , org . hamcrest . matchers . equalto ( org . javersion . core . difftest . map ( 1 , null , 2 , null ) ) )
[0]: org. junit. assert. assertequals ( ""foo"", result )
[1]: org. junit. assert. assertequals ( ""a"", result )
[2]: org. junit. assert. assertequals ( expectednamespaceauthorizations, request )
[3]: org. junit. assert. assertequals ( expectednamespaceauthorizations, result )
[4]: org. junit. assert. assertequals ( expectednamespaceauthorizations, document )

************

************
tgt: org . junit . assert . assertsame ( node . any , n )
[0]: org. junit. assert. assertequals ( expectednamespaceauthorizations, source )
[1]: org. junit. assert. assertequals ( expectednamespaceauthorizations, request. fields )
[2]: org. junit. assert. assertequals ( 1, locations. size ( ) )
[3]: org. junit. assert. assertequals ( 0, locations. size ( ) )
[4]: org. junit. assert. assertequals ( 1, positions. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( ( double ) ( num1 + num2 ) ) / ( ( double ) ( 2 ) ) ) , ( ( java . lang . double ) ( metric . getvalue ( ) ) ) , 0 )
[0]: org. junit. assert. assertequals ( 1, location. size ( ) )
[1]: org. junit. assert. assertequals ( 3, locations. size ( ) )
[2]: org. junit. assert. assertnull ( actual. execute ( ) )
[3]: org. junit. assert. assertequals ( 1, actual. execute ( ) )
[4]: org. junit. assert. asserttrue ( actual. execute ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . apache . commons . lang3 . pair . of ( null , "foo" ) . hashcode ( ) , org . apache . commons . lang3 . pair . of ( null , "foo" ) . hashcode ( ) )
[0]: org. junit. assert. assertnotnull ( actual. execute ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected. tostring ( ), result. tostring ( ) )
[3]: org. junit. assert. assertequals ( 1, com. intellij. util. environmentutil. getenvironmentmap ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, com. intellij. util. environmentutil. getenvironmentmap ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( io . motown . ocpp . v12 . soap . chargepoint . diagnostics_filename , returnfilename )
[0]: org. junit. assert. assertequals ( valuetype, com. rapleaf. jack. store. valuetype. findbyvalue ( valuetype. name ( ) ) )
[1]: org. junit. assert. assertequals ( valuetype, com. rapleaf. jack. store. valuetype. findbyvalue ( valuetype. getid ( ) ) )
[2]: org. junit. assert. assertequals ( valuetype, com. rapleaf. jack. store. valuetype. findbyvalue ( valuetype. tostring ( ) ) )
[3]: org. junit. assert. assertsame ( valuetype, com. rapleaf. jack. store. valuetype. findbyvalue ( valuetype. name ( ) ) )
[4]: org. junit. assert. assertequals ( valuetype, com. rapleaf. jack. store. valuetype. findbyvalue ( valuetype. id ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( repository . isurlvalid ( ) )
[0]: org. junit. assert. assertnotnull ( proc. process ( record ) )
[1]: org. junit. assert. assertnotnull ( proc. process ( records ) )
[2]: org. junit. assert. assertnotnull ( proc. processes ( record ) )
[3]: org. junit. assert. assertnotnull ( process ( record ) )
[4]: org. junit. assert. assertnotnull ( proc )

************

************
tgt: org . junit . assert . assertsame ( expr . accept ( visitor ) , visitresult )
[0]: org. junit. assert. assertnotnull ( this. getsessionmanager ( ) )
[1]: org. junit. assert. assertequals ( dao, this. getsessionmanager ( ) )
[2]: org. junit. assert. assertequals ( this. manager, this. getsessionmanager ( ) )
[3]: org. junit. assert. assertequals ( dao, ctx. getsessionmanager ( ) )
[4]: org. junit. assert. assertnotnull ( instance. getsessionmanager ( ) )

************

************
tgt: org . junit . assert . assertequals ( msg , n )
[0]: org. junit. assert. assertequals ( mockexhome, config. getregion ( ) )
[1]: org. junit. assert. assertequals ( mockexhome. getregion ( ), config. getregion ( ) )
[2]: org. junit. assert. assertnotnull ( config. getregion ( ) )
[3]: org. junit. assert. assertequals ( mockexhome. getregion ( ), wrapper. getregion ( ) )
[4]: org. junit. assert. assertequals ( mockexhome. getregion ( ), wrapper. build ( ) )

************

************
tgt: org . junit . assert . assertequals ( test_string , actual )
[0]: org. junit. assert. assertequals ( expected, output )
[1]: org. junit. assert. assertequals ( expected, output. get ( ) )
[2]: org. junit. assert. assertequals ( expected, output. get ( 0 ) )
[3]: org. junit. assert. assertequals ( expected, output. tolist ( ) )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertequals ( password , pwd2 )
[0]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ 0 ] [ ] ) )
[1]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ ] [ 0 ] ) )
[2]: org. junit. assert. assertthat ( results, is ( empty ( ) ) )
[3]: , results [ 0 ] )
[4]: , results )

************

************
tgt: org . junit . assert . asserttrue ( additionalfield . showdependingondoctype ( ) )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( 0, result )
[3]: , result )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , result )
[0]: org. junit. assert. assertnotnull ( defn )
[1]: org. junit. assert. assertequals ( sometable, defn )
[2]: org. junit. assert. assertnotnull ( defn. getid ( ) )
[3]: org. junit. assert. assertnotnull ( defn. getclass ( ) )
[4]: org. junit. assert. assertnotnull ( defn. collection ( ) )

************

************
tgt: org . junit . assert . assertnull ( converter . todomain ( null ) )
[0]: org. junit. assert. assertequals ( 0, normalize. size ( ) )
[1]: org. junit. assert. assertequals ( 0, item1. compareto ( item2 ) )
[2]: org. junit. assert. assertequals ( sql2, sql2 )
[3]: org. junit. assert. assertnotnull ( sql2 )
[4]: org. junit. assert. assertequals ( codepoints [ 0 ], value )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( new java . lang . string [ ] [ ] { new java . lang . string [ ] { "c" } } ) )
[0]: org. junit. assert. assertarrayequals ( codepoints, value )
[1]: org. junit. assert. assertequals ( msg, value )
[2]: org. junit. assert. assertequals ( codepoints [ 1 ], value )
[3]: org. junit. assert. assertnotnull ( value )
[4]: org. junit. assert. assertequals ( 1, dao. simpletestmethod ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( data . equals ( data ) )
[0]: org. junit. assert. assertequals ( 1, repository. simpletestmethod ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), s. simpletestmethod ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), mytestmethod ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), mytestconfig ( ) )
[4]: org. junit. assert. assertequals ( msg2. tostring ( ), buf. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( org . jbasics . arrays . intarraycomparator . islessthan ( twocomplementproblemlesser , twocomplementproblemgreater ) )
[0]: org. junit. assert. assertequals ( msg1. tostring ( ), buf. tostring ( ) )
[1]: org. junit. assert. assertnotnull ( buf. tostring ( ) )
[2]: org. junit. assert. assertequals ( msg2. tostring ( ), buf. getmessage ( ) )
[3]: org. junit. assert. assertequals ( msg3. tostring ( ), buf. tostring ( ) )
[4]: org. junit. assert. assertnull ( decryption )

************

************
tgt: org . junit . assert . assertequals ( null , ocsvtransformer . getcellcontent ( null ) )
[0]: org. junit. assert. assertequals ( """", decryption )
[1]: org. junit. assert. assertequals ( null, decryption )
[2]: org. junit. assert. assertequals ( 0, decryption )
[3]: ) )
[4]: org. junit. assert. assertequals ( completable, undertest. doeventuallycollect ( callables, consumer, consumer, 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( org . opendaylight . protocol . bgp . parser . bgpextendedmessageutil . advertizedbgpextendedmessagecapability ( open1 ) )
[0]: org. junit. assert. assertequals ( completable, undertest. doeventuallycollect ( callables, consumer, consumer, ( - 1 ) ) )
[1]: org. junit. assert. assertequals ( completable, undertest. doeventuallycollect ( callables, consumer, consumer, int. class ) )
[2]: org. junit. assert. assertequals ( completable, undertest. doeventuallycollect ( callables, consumer, c2, supplier, 1 ) )
[3]: org. junit. assert. assertequals ( completable, undertest. doeventuallycollect ( callables, consumer, consumer, 0 ) )
[4]: org. junit. assert. assertthat ( taken. size ( ), org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( fakeresultpath , path )
[0]: org. junit. assert. assertnotnull (arytopicopic )
[1]: org. junit. assert. assertnotnull (arytopicopic ( ) )
[2]: org. junit. assert. assertnotnull (arytopic )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertfalse ( tester . isrulerunning ( 1 ) )
[0]: org. junit. assert. assertequals ( 1, taken. size ( ) )
[1]: org. junit. assert. assertequals ( 0, taken. size ( ) )
[2]: org. junit. assert. assertthat ( taken. size ( ), is ( 0 ) )
[3]: org. junit. assert. assertthat ( taken. size ( ), is ( 1 ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( path . isroot ( ) ) || ( ! issystem ) ) )
[0]: org. junit. assert. assertnotnull ( dim. getnumbatchelements ( ) )
[1]: org. junit. assert. assertequals ( 100, dim. getnumbatchelements ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, dim. getnumbatchelements ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 100, dim. getnumbatchelements ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 100, 200 ), dim )

************

************
tgt: org . junit . assert . asserttrue ( subscription . pubacked ( 0 ) )
[0]: org. junit. assert. assertthat ( exitcode, org. hamcrest. matchers. equalto ( 1 ) )
[1]: org. junit. assert. assertequals ( 1, org. nmdp. ngs. align. gappenalties. builder ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( org. nmdp. ngs. align. gappenalties. builder ( ). build ( ) )
[3]: org. junit. assert. assertequals ( 5, com. ibm. wala. core. tests. slicer. slicertest. size ( ) )
[4]: org. junit. assert. assertequals ( 5, computebackwarddomnormals. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( list1 . compareto ( list2 ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( 5, computebackwardservicnormals. size ( ) )
[1]: org. junit. assert. assertequals ( 5, computebackwarddomnormnormals. size ( ) )
[2]: org. junit. assert. assertequals ( 1, com. ibm. wala. core. tests. slicer. slicertest. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( testutil. https_test_proxy ), result )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result. get ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( item . isresolved ( ) )
[0]: org. junit. assert. assertnotnull ( result. get ( 0 ) )
[1]: org. junit. assert. assertequals ( 1, result. get ( 0 ). getid ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), result. get ( 0 ) )
[3]: org. junit. assert. assertequals ( 0, expand. length )
[4]: org. junit. assert. assertequals ( 0, ( ( byte ) ( expand ) ) )

************

************
tgt: org . junit . assert . assertequals ( expectedcommandsrting , commandstringreturned )
[0]: org. junit. assert. assertequals ( 0, current. length )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( result, document )

************

************
tgt: org . junit . assert . assertequals ( 1 , articles . size ( ) )
[0]: org. junit. assert. assertequals ( document, result )
[1]: org. junit. assert. assertequals ( result, null )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( ( ( java. lang. boolean ) ( local1 ) ), result )
[4]: org. junit. assert. assertequals ( ( ( local1 + 1 ) + local2 ), result )

************

************
tgt: org . junit . assert . assertequals ( errorexpecting , errors . tostring ( ) )
[0]: org. junit. assert. assertequals ( ( ( java. lang. boolean ) ( local3 ) ), result )
[1]: org. junit. assert. assertequals ( 3, result. getlocalname ( ) )
[2]: org. junit. assert. assertequals ( 3, result )
[3]: org. junit. assert. assertequals ( true, result )
[4]: org. junit. assert. asserttrue ( result )

************

************
tgt: org . junit . assert . assertequals ( 2 , count )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertthat ( result )
[2]: org. junit. assert. assertthat ( result, org )
[3]: org. junit. assert. assertnotnull ( c )
[4]: org. junit. assert. assertthat ( c. count, org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( new java . util . date ( ( ( date . gettime ( ) ) + ( seconds * 1000 ) ) ) ) )
[0]: org. junit. assert. assertthat ( c. count, org. hamcrest. corematchers. is ( 1l ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( expectedinstallation, cache. locatebrowserinstallation ( null, null, locator ) )
[4]: org. junit. assert. assertequals ( expectedinstallation, found. locatebrowserinstallation ( null, null, locator ) )

************

************
tgt: org . junit . assert . asserttrue ( list . tostring ( ) , list . isempty ( ) )
[0]: org. junit. assert. assertequals ( expectedinstallation, repository. locatebrowserinstallation ( null, null, locator ) )
[1]: org. junit. assert. assertequals ( expectedinstallation, cache. locatebrowserinstallation ( null, null ) )
[2]: org. junit. assert. assertequals ( expectedinstallation, found )
[3]: org. junit. assert. assertnotnull ( stmt )
[4]: org. junit. assert. assertequals ( 1, stmt. count )

************

************
tgt: org . junit . assert . assertnotnull ( processor )
[0]: org. junit. assert. assertnotnull ( stmt. collection ( ) )
[1]: org. junit. assert. assertnotnull ( stmt. s )
[2]: org. junit. assert. assertnotnull ( stmt. getid ( ) )
[3]: org. junit. assert. assertfalse ( registered )
[4]: org. junit. assert. asserttrue ( registered )

************

************
tgt: org . junit . assert . assertthat ( model . get ( "k" ) , org . hamcrest . matchers . is ( org . hamcrest . matchers . equalto ( ( ( java . lang . object ) ( "v" ) ) ) ) )
[0]: org. junit. assert. assertequals ( true, registered )
[1]: org. junit. assert. assertfalse ( register )
[2]: org. junit. assert. assertequals ( false, registered )
[3]: org. junit. assert. assertequals ( 1, onflow. size ( ) )
[4]: org. junit. assert. assertnotnull ( onflow )

************

************
tgt: org . junit . assert . assertnull ( builder . path ( ) )
[0]: org. junit. assert. assertequals ( 0, onflow. size ( ) )
[1]: org. junit. assert. assertequals ( 1, events. size ( ) )
[2]: org. junit. assert. assertequals ( 1, onflow. getid ( ) )
[3]: org. junit. assert. assertnotnull ( words )
[4]: org. junit. assert. assertequals ( words, null )

************

************
tgt: org . junit . assert . asserttrue ( resultaat )
[0]: org. junit. assert. assertequals ( null, words )
[1]: org. junit. assert. assertequals ( words, s )
[2]: org. junit. assert. assertequals ( words, 1 )
[3]: org. junit. assert. assertequals ( 1, res. value ( ) )
[4]: org. junit. assert. assertequals ( row, res. value ( ) )

************

************
tgt: org . junit . assert . assertfalse ( e1 . compare ( e2 ) )
[0]: org. junit. assert. assertequals ( 0, res. value ( ) )
[1]: org. junit. assert. assertequals ( res. value ( ), 1 )
[2]: ) )
[3]: org. junit. assert. assertfalse ( within. tryadd ( toobig ) )
[4]: org. junit. assert. asserttrue ( within. tryadd ( toobig ) )

************

************
tgt: org . junit . assert . assertequals ( assets , loadedassets )
[0]: org. junit. assert. asserttrue ( within. tryadd ( batch ) )
[1]: org. junit. assert. assertfalse ( within. tryadd ( batch ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( port, port2 )
[4]: org. junit. assert. assertequals ( 0, port2 )

************

************
tgt: org . junit . assert . assertequals ( 1 , branch_conditions . size ( ) )
[0]: org. junit. assert. assertnotnull ( ss )
[1]: org. junit. assert. assertequals ( 1, port2 )
[2]: org. junit. assert. assertequals ( 0, port )
[3]: org. junit. assert. assertthat ( phantomjsdriverbuilderaftersecondcall, org. hamcrest. corematchers. is ( 1 ) )
[4]: org. junit. assert. assertthat ( phantomjsdriverbuilderaftersecondcall, org. hamcrest. corematchers. is ( null ) )

************

************
tgt: org . junit . assert . assertequals ( conceptsets , java . util . collections . emptylist ( ) )
[0]: org. junit. assert. assertthat ( phantomjsdriverbuilderafterfirstcall, org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertthat ( phantomjsdriverbuilderaftersecondcall, org. hamcrest. corematchers. is ( java. util. arrays. aslist ( ) ) )
[2]: type ) )
[3]: org. junit. assert. assertequals ( expected, actual )
[4]: org. junit. assert. assertequals ( 1, executed. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( tasks . isempty ( ) , org . hamcrest . matchers . equalto ( false ) )
[0]: org. junit. assert. assertequals ( expected, executed )
[1]: org. junit. assert. assertequals ( expected, processed )
[2]: org. junit. assert. assertnotnull ( executed )
[3]: org. junit. assert. assertequals ( 1, results. size ( ) )
[4]: org. junit. assert. assertequals ( 0, results. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( ( - 1 ) ) ) )
[0]: org. junit. assert. assertequals ( 4, results. size ( ) )
[1]: org. junit. assert. assertequals ( 2, results. size ( ) )
[2]: org. junit. assert. assertequals ( 9, results. size ( ) )
[3]: org. junit. assert. assertnotnull ( m. assignedorgchanged ( ) )
[4]: org. junit. assert. assertequals ( 1, m. assignedorgchanged ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( didrulesucceed )
[0]: org. junit. assert. assertsame ( m, m. assignedorgchanged ( ) )
[1]: org. junit. assert. assertequals ( com. matthewmitchell. peercoinj. core. blocktest. blockbytes, block. peercoinserialize ( ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( true, dockerexists )
[4]: org. junit. assert. assertnotnull ( cache. getresultfromcache ( "testcachekey ) )

************

************
tgt: org . junit . assert . asserttrue ( group . getallvariables ( ) . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( cache. getresultfromcache ( org. mockito. mockito. mock ( java. lang. string. class ) ) )
[1]: org. junit. assert. assertnotnull ( cache. getresultfromcache ( "testcachekey. getid ( ) ) )
[2]: org. junit. assert. assertnotnull ( cache. getresultfromcache ( org. springframework. data. node. class. getname ( ) ) )
[3]: org. junit. assert. assertnotnull ( cache. getresultfromcache ( org. springframework. data. redis. cache. class. getname ( ) ) )
[4]: org. junit. assert. assertequals ( 1, holepunchscheduler. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( brokerresp , queryresp )
[0]: org. junit. assert. assertequals ( 0, holepunchscheduler. size ( ) )
[1]: org. junit. assert. assertequals ( null, holepunchscheduler )
[2]: org. junit. assert. assertequals ( null, holepunchscheduler. clause ( ) )
[3]: org. junit. assert. assertnotnull ( holepunchscheduler )
[4]: org. junit. assert. assertequals ( extractor, completedevent )

************

************
tgt: org . junit . assert . assertequals ( "/user/role/edit" , view )
[0]: org. junit. assert. assertnotnull ( completedevent )
[1]: org. junit. assert. assertnotnull ( completedevent. getextractor ( ) )
[2]: org. junit. assert. assertnull ( completedevent )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . assertnotnull ( settingsbuilder )
[0]: org. junit. assert. assertequals ( 1l, result )
[1]: org. junit. assert. assertequals ( 0, result )
[2]: org. junit. assert. assertequals ( 0l, result )
[3]: org. junit. assert. assertequals ( 1l, resultl )
[4]: org. junit. assert. assertnotnull ( body )

************

************
tgt: org . junit . assert . asserttrue ( ( ( hardwareversionenum . getvalue ( ) ) >= 0 ) )
[0]: org. junit. assert. assertequals ( body, msg )
[1]: org. junit. assert. assertequals ( body, null )
[2]: org. junit. assert. assertequals ( body, result )
[3]: org. junit. assert. assertequals ( msg, body )
[4]: org. junit. assert. assertequals ( org. apache. accumulo. core. data. columntest. col [ i ], org. apache. accumulo. core. data. columntest. col [ j ] )

************

************
tgt: org . junit . assert . asserttrue ( org . gitlab4j . api . jsonutils . comparejson ( event , "group-member-system-hook-event.json" ) )
[0]: org. junit. assert. assertequals ( org. apache. accumulo. core. data. columntest. col [ j ], org. apache. accumulo. core. data. columntest. col [ j ] )
[1]: org. junit. assert. assertequals ( org. apache. accumulo. core. data. columntest. col [ i ], j )
[2]: org. junit. assert. assertequals ( org. apache. accumulo. core. data. columntest. col [ i ], java. lang. string. valueof ( j ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), builder. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( status . isavailable ( ) )
[0]: org. junit. assert. assertnotnull ( builder. tostring ( ) )
[1]: org. junit. assert. assertequals ( builder. tostring ( ), "www.exampl<sp>e.comfriendlyurl )
[2]: org. junit. assert. assertequals ( builder. tostring ( ), "www.exampl<sp>e.com_2 )
[3]: . tostring ( ) )
[4]: org. junit. assert. assertequals ( null, retval )

************

************
tgt: org . junit . assert . asserttrue ( isotest . areisomorphic ( g1 , g2 ) )
[0]: org. junit. assert. assertequals ( true, copy. getarenodelabelsacceptedbyrm ( ) )
[1]: org. junit. assert. assertequals ( null, match )
[2]: org. junit. assert. assertnotnull ( match )
[3]: org. junit. assert. assertequals ( match, null )
[4]: , match )

************

************
tgt: org . junit . assert . assertequals ( now , timestamp )
[0]: ) )
[1]: org. junit. assert. assertequals ( encrypt, decrypt )
[2]: org. junit. assert. assertnotnull ( decrypt )
[3]: org. junit. assert. assertnull ( decrypt )
[4]: org. junit. assert. assertequals ( decrypt, decrypt )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( encrypt, dec )
[1]: org. junit. assert. assertnotnull ( instance. getfile ( ) )
[2]: org. junit. assert. assertequals ( true, mockablelockitem. amiabouttoexpire ( ) )
[3]: org. junit. assert. assertequals ( true, instance. amiabouttoexpire ( ) )
[4]: org. junit. assert. asserttrue ( instance. amiabouttoexpire ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , getprocessapi ( ) . getnumberofopenedactivityinstances ( processinstance . getid ( ) ) )
[0]: org. junit. assert. assertequals ( false, mockablelockitem. amiabouttoexpire ( ) )
[1]: org. junit. assert. assertequals ( true, mockablelockitem. amiabouttoexpire ( ) )
[2]: org. junit. assert. assertequals ( 1, events. size ( ) )
[3]: org. junit. assert. assertequals ( 1, tests. size ( ) )
[4]: org. junit. assert. assertequals ( 1, 1 )

************

************
tgt: org . junit . assert . assertsame ( assertions , returned )
[0]: org. junit. assert. assertnotnull ( collection )
[1]: org. junit. assert. assertnotnull ( elements )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( result, consumer )
[4]: org. junit. assert. assertequals (linkedreleases, releaselinkr1b )

************

************
tgt: org . junit . assert . assertthat ( nextstartindex , org . hamcrest . corematchers . is ( ( - 1 ) ) )
[0]: org. junit. assert. assertequals (linkedreleases, result )
[1]: org. junit. assert. assertequals (linkedreleases, ident_24 )
[2]: org. junit. assert. assertequals (linkedreleases, releaselinkr1a )
[3]: org. junit. assert. assertequals (linkedreleases, releasedlink )
[4]: org. junit. assert. assertnotnull ( bytesstore )

************

************
tgt: org . junit . assert . assertfalse ( predicate . apply ( pickleevent ) )
[0]: org. junit. assert. assertnotnull ( bytesstore. getid ( ) )
[1]: org. junit. assert. assertnotnull ( bytesstore. getproperties ( ) )
[2]: org. junit. assert. assertnotnull ( bytesstore. getthrowable ( ) )
[3]: org. junit. assert. assertnotnull ( bytesstore. tostring ( ) )
[4]: org. junit. assert. assertequals ( 200, response. getstatus ( ) )

************

************
tgt: org . junit . assert . assertequals ( input . limit ( ) , input . position ( ) )
[0]: org. junit. assert. assertequals ( propertiesuri. getstatus ( ), response. getstatus ( ) )
[1]: org. junit. assert. assertequals ( propertiesuri, response. getstatus ( ) )
[2]: org. junit. assert. assertequals ( propsuri. getstatus ( ), response. getstatus ( ) )
[3]: org. junit. assert. assertequals ( 1, response. getstatus ( ) )
[4]: org. junit. assert. assertnotnull ( classundertest )

************

************
tgt: org . junit . assert . assertnotnull ( u . getid ( ) )
[0]: org. junit. assert. assertnotnull ( classundertest. getmessage ( ) )
[1]: org. junit. assert. assertnotnull ( classundertest. tojson ( expectednummoves ) )
[2]: org. junit. assert. assertnotnull ( classundertest. messages )
[3]: ) )
[4]: org. junit. assert. assertequals ( org. apache. hadoop. security. authentication. server. testjwtjwtjwtjwtjwtjwtjwt, token. getusername ( ) )

************

************
tgt: org . junit . assert . assertequals ( ambiente , eventoretorno . getambiente ( ) )
[0]: org. junit. assert. assertequals ( org. apache. hadoop. security. authentication. server. testjwtjwtjwtjwtjwtjwt, token. getusername ( ) )
[1]: org. junit. assert. assertnotnull ( token. getusername ( ) )
[2]: org. junit. assert. assertequals ( org. apache. hadoop. security. authentication. server. testjwtredirectauthentictionhandler. service_url, token )
[3]: org. junit. assert. assertnull ( token. getusername ( ) )
[4]: org. junit. assert. asserttrue ( waiter. pendingmessages ( ) )

************

************
tgt: org . junit . assert . assertequals ( productdata . type_uint8 , metadata . getgeolayerdatatype ( ) )
[0]: org. junit. assert. assertequals ( 1, waiter. pendingmessages ( ) )
[1]: org. junit. assert. asserttrue ( waiter. pendingmessages ( ). get ( ) )
[2]: org. junit. assert. asserttrue ( waiter. pendingmessages ( ). isempty ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, group. getstudents ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , errors . size ( ) )
[0]: org. junit. assert. assertequals ( 1, group. getstudents ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, groups. getstudents ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, group. getstudents ( ). length )
[3]: org. junit. assert. assertequals ( 0, group. getstudents ( ). size ( )
[4]: org. junit. assert. assertequals ( result, filterresult )

************

************
tgt: org . junit . assert . assertnull ( s . getprop ( "foo" ) )
[0]: org. junit. assert. assertsame ( result, filterresult )
[1]: org. junit. assert. assertnotnull ( filterresult )
[2]: org. junit. assert. assertsame ( result, url )
[3]: org. junit. assert. assertequals ( expected, filterresult )
[4]: org. junit. assert. assertequals ( 1, e. geterrors ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( location . getretired ( ) )
[0]: org. junit. assert. assertequals ( 0, e. geterrors ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 3, e. geterrors ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 9, e. geterrors ( ). size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, result. getfailurecount ( ) )

************

************
tgt: org . junit . assert . assertfalse ( actual )
[0]: org. junit. assert. assertequals ( bookcount, 1 )
[1]: org. junit. assert. assertequals ( 1, bookcount )
[2]: org. junit. assert. assertequals ( bookcount, 0 )
[3]: org. junit. assert. assertequals ( bookcount, 2 )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( inputvalues, inputvalues )
[1]: org. junit. assert. assertequals ( inputvalues, outputvalues )
[2]: org. junit. assert. assertequals ( outputvalues, inputvalues )
[3]: org. junit. assert. assertfalse ( org. apache. druid. collections. intsettestutility. equalsets ( defaultbitset, bitset ) )
[4]: org. junit. assert. asserttrue ( wasexception )

************

************
tgt: org . junit . assert . assertequals ( storagepolicy , resultstoragepolicy )
[0]: org. junit. assert. asserttrue ( didexception )
[1]: org. junit. assert. assertnotnull ( wasexception )
[2]: org. junit. assert. asserttrue ( hasexception )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( method. newinstance ( syncrequest ) )

************

************
tgt: org . junit . assert . assertequals ( buttonid , operation . gettarget ( ) )
[0]: org. junit. assert. assertnotnull ( method. newinstance ( ) )
[1]: org. junit. assert. assertnotnull ( syncrequest )
[2]: org. junit. assert. assertnotnull ( method. run ( avroencdec ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, com. liferay. portal. kernel. service. rolelocalserviceutil. getassigneestotal ( roleids ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , yesterdayjobs )
[0]: org. junit. assert. assertequals ( 1, com. liferay. portal. kernel. service. rolelocalserviceutil. getassigneestotal ( roleids [ 0 ] ) )
[1]: org. junit. assert. assertequals ( 1l, com. liferay. portal. kernel. service. rolelocalserviceutil. getassigneestotal ( roleids ) )
[2]: org. junit. assert. assertequals ( 1, com. liferay. portal. kernel. service. rolelocalserviceutil. getassigneestotal ( roleids [ 1 ] ) )
[3]: org. junit. assert. assertequals ( 1, com. liferay. portal. kernel. service. rolelocalserviceutil. getassigneestotal ( rolesids ) )
[4]: org. junit. assert. assertthat ( cr. tobuilder ( ). build ( ), org. hamcrest. matchers. empty ( ) )

************

************
tgt: org . junit . assert . assertequals ( dfunidadefederativa . sc , retornoconsultacadastrodados . getuf ( ) )
[0]: org. junit. assert. assertthat ( cr, org. hamcrest. matchers. equalto ( cr ) )
[1]: org. junit. assert. assertthat ( cr, org. hamcrest. matchers. empty ( ) )
[2]: org. junit. assert. assertthat ( cr. tobuilder ( ). build ( ), org. hamcrest )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, dataadapter. getpresentterms ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( config , getconfig ( service ) )
[0]: org. junit. assert. assertequals ( 0, dataadapter. getpresentterms ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, dataadapter. getpresentterms ( ) )
[2]: org. junit. assert. assertequals ( 1, dataadapter. getpresentterms ( ). length )
[3]: org. junit. assert. assertequals ( 1, dataadapter. getpresentterms ( ). size ( )
[4]: org. junit. assert. assertnotnull ( response )

************

************
tgt: org . junit . assert . assertequals ( persoonbericht , berichtentiteits . get ( 0 ) )
[0]: org. junit. assert. assertnotnull ( response. getstatuscode ( ) )
[1]: org. junit. assert. assertnotnull ( response. response ( ) )
[2]: org. junit. assert. assertnotnull ( response. body ( ) )
[3]: org. junit. assert. assertnotnull ( response. getmessage ( ) )
[4]: org. junit. assert. assertnotnull ( org. teavm. platform. platform. platform. isarray ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( pattern )
[0]: org. junit. assert. assertfalse ( org. teavm. platform. platform. platform. isarray ( ) )
[1]: org. junit. assert. assertequals ( true, org. teavm. platform. platform. isarray ( ) )
[2]: org. junit. assert. assertequals ( true, java. lang. object. class. isarray ( ) )
[3]: ) )
[4]: org. junit. assert. assertnull ( com. puresoltechnologies. ductiledb. core. graph. schema. ductiledbschemamanagerit. schemamanager. getpropertydefinition ( vertex, 1l ) )

************

************
tgt: org . junit . assert . assertequals ( resourcedefinition , embeddeddefinition )
[0]: org. junit. assert. assertnull ( com. puresoltechnologies. ductiledb. core. graph. schema. ductiledbschemamanagerit. schemamanager. getpropertydefinition ( vertex, null ) )
[1]: org. junit. assert. assertnull ( com. puresoltechnologies. ductiledb. core. graph. schema. ductiledbschemamanagerit. schemamanager. getpropertydefinition ( vertex, ""property"" ) )
[2]: org. junit. assert. assertnull ( vertex. getpropertydefinition ( elementtype. vertex, null ) )
[3]: org. junit. assert. assertnull ( filter. getpropertydefinition ( vertex, 1l ) )
[4]: org. junit. assert. assertnull ( def )

************

************
tgt: org . junit . assert . assertequals ( expected , resultrwa )
[0]: org. junit. assert. assertnotnull ( def )
[1]: org. junit. assert. null, def )
[2]: , def )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . assertnotnull ( validator )
[0]: org. junit. assert. assertequals ( 0, result )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )
[2]: org. junit. assert. assertequals ( 6, result )
[3]: org. junit. assert. assertequals ( 7, result )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertequals ( expected , bytesused )
[0]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( null, e )
[2]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, transformer. getminpts ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( dst . getone ( ) )
[0]: org. junit. assert. assertequals ( 1.0, transformer. getminpts ( ), 0 )
[1]: org. junit. assert. assertequals ( 1.0, transformer. getminpts ( ) )
[2]: org. junit. assert. assertequals ( 1, transformer. getminpts ( ). length )
[3]: org. junit. assert. assertequals ( 1.0, transformer. getminpts ( ), 0.0 )
[4]: org. junit. assert. assertequals ( result, periodduration1. getminutes ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( builder . build ( ( ( short ) ( 2 ) ) ) . size ( ) ) < ( builder . build ( ( ( short ) ( 1 ) ) ) . size ( ) ) ) )
[0]: org. junit. assert. assertsame ( result, periodduration1. getminutes ( ) )
[1]: org. junit. assert. assertnull ( periodduration1. getminutes ( ) )
[2]: org. junit. assert. assertfalse ( result. getminutes ( ). equals ( result ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( org. bukkit. material. matchmaterial ( material. tostring ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertnotnull ( org. bukkit. material. matchmaterial ( material. getid ( ) ) )
[1]: org. junit. assert. assertnotnull ( org. bukkit. material. matchmaterial ( material. getclass ( ) ) )
[2]: org. junit. assert. assertnotnull ( org. bukkit. material. matchmaterial ( material ) )
[3]: org. junit. assert. assertnotnull ( matchmaterial ( material. tostring ( ) ) )
[4]: org. junit. assert. assertnotnull ( headerprovider. getheaders ( ) )

************

************
tgt: org . junit . assert . asserttrue ( actual )
[0]: org. junit. assert. assertequals ( headers, headerprovider )
[1]: org. junit. assert. assertnotnull ( headerprovider )
[2]: org. junit. assert. assertequals ( headerprovider, headerprovider )
[3]: ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), result )

************

************
tgt: org . junit . assert . assertequals ( expectedmessage , ex . getmessage ( ) )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( java. lang. long. valueof ( 1 ) ) )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), result )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( expected ), result )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), result )
[4]: org. junit. assert. assertequals ( 1, parameterlist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . apache . hc . core5 . ssl . testsslcontextbuilder . provider_sun_jsse , sslcontext . getprovider ( ) . getname ( ) )
[0]: org. junit. assert. assertequals ( 0, parameterlist. size ( ) )
[1]: org. junit. assert. assertequals ( 3, parameterlist. size ( ) )
[2]: org. junit. assert. assertequals ( 1, ids. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( mappingconfiguration, mappingconfiguration ), ids )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( mappingconfiguration ), ids )

************

************
tgt: org . junit . assert . assertthat ( interactionevent . isveto ( ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( 0, ids. size ( ) )
[1]: org. junit. assert. assertequals ( list ( mappingconfiguration. getid ( ) ), ids )
[2]: org. junit. assert. assertequals ( 1, value. getvalue ( ) )
[3]: org. junit. assert. assertequals ( 1, value. getvalue ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( model )

************

************
tgt: org . junit . assert . assertnull ( kiemodule )
[0]: org. junit. assert. assertequals ( root, model )
[1]: org. junit. assert. assertequals ( model, model )
[2]: org. junit. assert. assertequals ( null, model )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( actieelement )

************

************
tgt: org . junit . assert . asserttrue ( setuserusergroupchecker . isdisabled ( user ) )
[0]: org. junit. assert. assertnotnull ( actieelement. get ( ) )
[1]: org. junit. assert. assertnotnull ( actieelement. getid ( ) )
[2]: org. junit. assert. assertequals ( historie, actieelement )
[3]: org. junit. assert. assertnull ( actieelement )
[4]: org. junit. assert. assertequals ( 4, metricvalues. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , yearly . getdayofmonth ( ) )
[0]: org. junit. assert. assertequals ( 4, metricvaluesar. size ( ) )
[1]: org. junit. assert. assertequals ( 1, metricvalues. size ( ) )
[2]: org. junit. assert. assertequals ( 4, metricvalues [ i ]. size ( )
[3]: org. junit. assert. assertequals ( 4, metricvalues [ 0 ]. size ( )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), 0, testcollector. errors. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result . memory ( ) . exists ( shortestpathvertexprogram . shortest_paths ) )
[0]: org. junit. assert. assertfalse ( target. parse ( ) )
[1]: org. junit. assert. assertnull ( target. parse ( ) )
[2]: org. junit. assert. assertequals ( false, target. parse ( ) )
[3]: org. junit. assert. assertequals ( 0, target. parse ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , esret . totalsize ( ) )
[0]: org. junit. assert. assertequals ( true, losingseason )
[1]: org. junit. assert. assertequals ( false, losingseason )
[2]: org. junit. assert. assertequals ( 1, losingseason )
[3]: org. junit. assert. assertequals ( null, losingseason )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( resolver , reconstructed . resolver )
[0]: org. junit. assert. assertnotnull ( folderprocessingswitch. getlabel ( ) )
[1]: org. junit. assert. assertequals ( 1, folderprocessingswitch. getlabel ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, folderprocessingswitch. getlabel ( ). size ( ) )
[3]: org. junit. assert. assertequals ( null, folderprocessingswitch. getlabel ( ) )
[4]: org. junit. assert. assertequals ( null, folderprocessingswitch. getlabel ( ). isempty ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( "er<sp>zou<sp>een<sp>fout<sp>op<sp>moeten<sp>treden." , e )
[0]: org. junit. assert. assertequals ( 1, customers. size ( ) )
[1]: org. junit. assert. assertequals ( 0, customers. size ( ) )
[2]: org. junit. assert. assertequals ( 1l, customers. size ( ) )
[3]: org. junit. assert. assertequals ( 0l, customers. size ( ) )
[4]: org. junit. assert. assertequals ( 5, customers. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , myfixture . parametercount ( ) )
[0]: org. junit. assert. assertnotnull ( ref )
[1]: org. junit. assert. assertnotnull ( ref. union ( ) )
[2]: org. junit. assert. assertnull ( ref )
[3]: org. junit. assert. assertnotnull ( reference )
[4]: org. junit. assert. assertnotnull ( ref. clause )

************

************
tgt: org . junit . assert . assertequals ( expected . trim ( ) , content . trim ( ) )
[0]: org. junit. assert. assertequals ( actualpermissionnumber, number )
[1]: org. junit. assert. assertequals ( new java. lang. long ( resourcenumber ), number )
[2]: org. junit. assert. assertequals ( ( actualpermissionnumber + resourcenumber ), number )
[3]: org. junit. assert. assertequals ( expectedpermissionnumber, number )
[4]: org. junit. assert. assertequals ( realpermissionnumber, number )

************

************
tgt: org . junit . assert . assertequals ( expected , actualquery )
[0]: org. junit. assert. assertequals ( 1, referrers. size ( ) )
[1]: org. junit. assert. assertequals ( 0, referrers. size ( ) )
[2]: org. junit. assert. assertequals ( 3, referrers. size ( ) )
[3]: org. junit. assert. assertequals ( 2, referrers. size ( ) )
[4]: org. junit. assert. assertequals ( 4, referrers. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( exceptionoccured )
[0]: org. junit. assert. assertnotnull ( msg )
[1]: org. junit. assert. asserttrue ( msg, msg. isempty ( ) )
[2]: org. junit. assert. assertnull ( msg )
[3]: org. junit. assert. assertequals ( msg, msg )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( javax . el . testbeanelresolver . bean_name , result )
[0]: org. junit. assert. assertequals ( 12, entities. size ( ) )
[1]: org. junit. assert. assertequals ( 15, entities. size ( ) )
[2]: org. junit. assert. assertequals ( 10, entities. size ( ) )
[3]: org. junit. assert. assertequals ( 0, entities. size ( ) )
[4]: org. junit. assert. assertequals ( 7, entities. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( arp . isnoarp ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( testvalue ), f. getneedle ( ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( testvalue ), f. getneedle ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( testvalue ), f. getneedle ( ) )
[3]: org. junit. assert. assertequals ( 1, f. getneedle ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, f. getneedle ( ) )

************

************
tgt: org . junit . assert . assertequals ( percentualrelativofundocombatepobrezadestino , icmsufdestino . getpercentualrelativofundocombatepobrezadestino ( ) )
[0]: org. junit. assert. asserttrue ( callbackresults. contains ( value ) )
[1]: org. junit. assert. assertequals ( expectedvalue, result )
[2]: org. junit. assert. assertequals ( expectedvalue. trim ( ), result )
[3]: org. junit. assert. assertsame ( expectedvalue, result )
[4]: org. junit. assert. assertequals ( expectedvalue, resulting )

************

************
tgt: org . junit . assert . assertsame ( subnetworkid , subnetworkid . setprojectid ( com . google . cloud . compute . deprecated . subnetworkidtest . project ) )
[0]: org. junit. assert. assertequals ( expectedvalue )
[1]: org. junit. assert. assertequals ( 1, str_array1. length )
[2]: org. junit. assert. assertnotnull ( fs )
[3]: org. junit. assert. asserttrue ( fs. exists ( ) )
[4]: org. junit. assert. assertequals ( 1, fs. exists ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , org . apache . hadoop . hbase . util . bytes . tostring ( res ) )
[0]: org. junit. assert. assertequals ( 1, fs. size ( ) )
[1]: org. junit. assert. assertequals ( 1, fs. length )
[2]: org. junit. assert. assertfalse ( peerunit. exists ( ) )
[3]: org. junit. assert. assertnull ( peerunit. getceworker ( ) )
[4]: org. junit. assert. assertfalse ( peerunit. getmeworker ( ) )

************

************
tgt: org . junit . assert . assertequals ( sentence , sample . tostring ( ) )
[0]: org. junit. assert. assertfalse ( peerunit. erreworker ( input ) )
[1]: org. junit. assert. assertnull ( result )
[2]: public string get ( ) { }
[3]: public void populate ( ) { }
[4]: public string get ( ) ) { }

************

************
tgt: org . junit . assert . assertnotnull ( target )
[0]: public string get ( ) )
[1]: public string get ( ) { } )
[2]: org. junit. assert. assertequals ( expected, sql )
[3]: org. junit. assert. assertequals ( sql, expected )
[4]: org. junit. assert. assertthat ( sql, org. hamcrest )

************

************
tgt: org . junit . assert . assertsame ( org . joda . money . testbigmoney . gbp_2_34 , test )
[0]: org. junit. assert. assertequals ( actual, sql )
[1]: ) )
[2]: org. junit. assert. asserttrue ( found )
[3]: org. junit. assert. assertfalse ( found )
[4]: org. junit. assert. assertnotnull ( found )

************

************
tgt: org . junit . assert . assertequals ( expected , rgas )
[0]: , found )
[1]: ) )
[2]: org. junit. assert. assertequals ( path, servletcontext. getrealpath ( path ) )
[3]: org. junit. assert. assertsame ( path, servletcontext. getrealpath ( path ) )
[4]: org. junit. assert. assertequals ( paths, servletcontext. getrealpath ( path ) )

************

************
tgt: org . junit . assert . assertsame ( org . opendaylight . yangtools . yang . common . empty . getinstance ( ) , read )
[0]: org. junit. assert. assertequals (path, servletcontext. getrealpath ( path ) )
[1]: org. junit. assert. assertsame ( path, servletcontext. getrealpath ( path ) )
[2]: org. junit. assert. assertequals ( nullmimetypedetector. instance, org. modeshape. jcr. mimetype. mimetypedetectors. createdetectorfor ( repositoryconfiguration. fieldvalue. mimetype_detection_name, environment ) )
[3]: org. junit. assert. assertnotnull ( org. modeshape. jcr. mimetype. mimetypedetectors. createdetectorfor ( repositoryconfiguration. fieldvalue. mimetype_detection_name, environment ) )
[4]: org. junit. assert. assertnull ( org. modeshape. jcr. mimetype. mimetypedetectors. createdetectorfor ( repositoryconfiguration. fieldvalue. mimetype_detection_name, environment ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , ex . getmax ( 4 , 4 ) )
[0]: org. junit. assert. assertsame ( nullmimetypedetector. instance, org. modeshape. jcr. mimetype. mimetypedetectors. createdetectorfor ( repositoryconfiguration. fieldvalue. mimetype_detection_name, environment ) )
[1]: org. junit. assert. assertnotnull ( org. modeshape. jcr. mimetype. mimetypedetectors. createdetectorfor ( repositoryconfiguration. fieldvalue. mimetype_detection_name, environment. getname ( ) ) )
[2]: org. junit. assert. assertnull ( clrc. getresult ( ) )
[3]: org. junit. assert. assertnull ( clrc )
[4]: org. junit. assert. assertfalse ( clrc. getresult ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . getpatches ( ) . size ( ) )
[0]: org. junit. assert. assertnull ( clra. getresult ( ) )
[1]: org. junit. assert. assertequals ( 1, resolvedclasspaths. size ( ) )
[2]: org. junit. assert. assertequals ( 0, resolvedclasspaths. size ( ) )
[3]: org. junit. assert. assertequals ( 2, resolvedclasspaths. size ( ) )
[4]: org. junit. assert. assertnotnull ( resolvedclasspaths )

************

************
tgt: org . junit . assert . assertequals ( negotiatedqop , qop . getsaslqop ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( p. getsavepolicy ( ) )
[2]: org. junit. assert. assertequals ( 1, p. getsavepolicy ( ). size ( ) )
[3]: org. junit. assert. assertequals ( cyproperty. savepolicy. do_not_save )
[4]: org. junit. assert. assertequals ( 1, p. getsavepolicy ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( hfprop )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, tuplecount )
[2]: org. junit. assert. assertequals ( 0, tuplecount )
[3]: org. junit. assert. assertequals ( 3, tuplecount )
[4]: org. junit. assert. assertequals ( 2, tuplecount )

************

************
tgt: org . junit . assert . assertthat ( venues . size ( ) , is ( 7 ) )
[0]: org. junit. assert. assertnotnull ( newlease )
[1]: org. junit. assert. asserttrue ( result. equals ( value ) )
[2]: org. junit. assert. asserttrue ( result. equals ( value. trim ( ) ) )
[3]: org. junit. assert. asserttrue ( result. equals ( value. tostring ( ) ) )
[4]: org. junit. assert. assertequals ( 1, linka. hashcode ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , containerresource . getcontainercontents ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( linka. hashcode ( ) ), linkb. hashcode ( ) )
[1]: org. junit. assert. assertequals ( linka. hashcode ( ), linkb. hashcode ( ) )
[2]: org. junit. assert. assertequals ( 0, linka. hashcode ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( linka, linkb ), testhashcodes. hashcode ( ) )
[4]: org. junit. assert. assertthat ( pusheventservice. isvalidevent ( dummyevent, dummyconfiguration ), org. hamcrest. matchers. is ( true ) )

************

************
tgt: org . junit . assert . assertfalse ( bpinfo1 . equals ( bpinfo2 ) )
[0]: org. junit. assert. assertequals ( 1, segments. size ( ) )
[1]: org. junit. assert. assertthat ( storage. getlimitforcounter ( com. spotify. styx. storage. datastorestoragetest. resource1 ), org. hamcrest. matchers. is ( 0l ) )
[2]: org. junit. assert. assertthat ( storage. getlimitforcounter ( com. spotify. styx. storage. datastorestoragetest. resource1 ), org. hamcrest. matchers. is ( 1l ) )
[3]: org. junit. assert. assertthat ( storage. getlimitforcounter ( com. spotify. styx. storage. datastorestoragetest. resource1 ), org. hamcrest. matchers. is ( java. util. optional. empty ( ) ) )
[4]: org. junit. assert. assertnotnull ( storage. getlimitforcounter ( com. spotify. styx. storage. datastorestoragetest. resource1 ) )

************

************
tgt: org . junit . assert . assertthat ( testerrorreason , org . hamcrest . corematchers . is ( expectederrorreason ) )
[0]: org. junit. assert. assertnotnull ( storage. getlimitforcounter ( com. spotify. styx. storage. datastorestoragetest. resource1. tostring ( ) ) )
[1]: org. junit. assert. assertequals ( null, result. get ( ns1 ) )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( ns1 ), result. get ( ns1 ) )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( ns1 ), result. get ( ns1 ) )
[4]: org. junit. assert. assertequals ( null, result. get ( ns1. getid ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( "doe" , datainstance . getvalue ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( ns1 ), result )
[1]: org. junit. assert. assertnotnull ( echo )
[2]: org. junit. assert. assertequals ( 1, echo. output ( ) )
[3]: org. junit. assert. assertequals ( 1, echo. echo ( ) )
[4]: org. junit. assert. assertequals ( 1, echo. result )

************

************
tgt: org . junit . assert . assertequals ( 0 , immunecapture . getvalue ( ) . length )
[0]: org. junit. assert. assertnotnull ( echo. echo ( ) )
[1]: org. junit. assert. assertequals ( 0, serialize ( null ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, serialize ( serializer ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, serialize ( serializer ) )
[4]: org. junit. assert. assertequals ( 0, serializer. serialize ( null ). length )

************

************
tgt: org . junit . assert . assertequals ( ex . getvolume ( ) , volume1 )
[0]: org. junit. assert. assertequals ( null, serializer. serialize ( null ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( p1, coplanarback ), coplanarfront )
[2]: org. junit. assert. assertnotnull ( result. tostring ( ) )
[3]: org. junit. assert. assertequals ( result. tostring ( ), 1 )
[4]: org. junit. assert. assertequals ( null, result. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( result instanceof kg . apc . jmeter . vizualizers . compositeresultcollector ) )
[0]: . tostring ( ) )
[1]: tostring ( ) )
[2]: org. junit. assert. assertequals ( 1, starredratings )
[3]: org. junit. assert. assertequals ( 0, ret )
[4]: org. junit. assert. assertequals ( i, ret )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . is ( expectedlist ) )
[0]: org. junit. assert. assertequals ( - 1, ret )
[1]: , ret )
[2]: ) )
[3]: org. junit. assert. assertfalse ( result )
[4]: org. junit. assert. assertequals ( 1, navigator. getstate ( ) )

************

************
tgt: org . junit . assert . assertequals ( rc , result )
[0]: org. junit. assert. assertequals ( 0, navigator. getstate ( ) )
[1]: org. junit. assert. assertequals ( 0, navigator. getstate )
[2]: org. junit. assert. assertequals ( 1, navigator. getstate )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( pricingfactor )

************

************
tgt: org . junit . assert . assertequals ( expectedmetadata , testsubject . getmetadata ( ) )
[0]: org. junit. assert. assertequals ( pricingfactor, from )
[1]: org. junit. assert. assertequals ( pricingfactor, to )
[2]: org. junit. assert. assertnull ( pricingfactor )
[3]: ) )
[4]: org. junit. assert. assertequals ( callback1, callback2 )

************

************
tgt: org . junit . assert . assertequals ( com . spotify . folsom . ketamaintegrationtest . value2 , client . get ( com . spotify . folsom . ketamaintegrationtest . key1 ) . tocompletablefuture ( ) . get ( ) )
[0]: org. junit. assert. assertequals ( exec1, callback2 )
[1]: org. junit. assert. assertnotnull ( callback1 )
[2]: org. junit. assert. assertequals ( call1, callback2 )
[3]: org. junit. assert. assertequals ( callback2, callback2 )
[4]: org. junit. assert. assertnull ( target. parse ( ) )

************

************
tgt: org . junit . assert . assertequals ( filters , builderfilters )
[0]: org. junit. assert. assertfalse ( target. parse ( ) )
[1]: org. junit. assert. assertequals ( 0, target. parse ( ) )
[2]: org. junit. assert. assertequals ( 0, target. parse ( ), 0 )
[3]: org. junit. assert. assertequals ( 0, target. parse ( ). length )
[4]: org. junit. assert. assertfalse ( state. noneenabled ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1000 , min )
[0]: org. junit. assert. asserttrue ( websession. issignedin ( ) )
[1]: org. junit. assert. assertfalse ( websession. issignedin ( ) )
[2]: org. junit. assert. assertequals ( true, websession. issignedin ( ) )
[3]: org. junit. assert. assertequals ( false, websession. issignedin ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( dotproduct > 0 ) )
[0]: org. junit. assert. assertequals ( check. failedtask ( ), failedtask ( ) )
[1]: org. junit. assert. assertequals ( 0, check. failedtask ( ) )
[2]: org. junit. assert. assertequals ( check. failedtask ( ), false )
[3]: org. junit. assert. assertequals ( check. failedtask ( ), failedtask )
[4]: org. junit. assert. assertequals ( 0, check. failedtask ( ). length )

************

************
tgt: org . junit . assert . assertequals ( "999999999999.99" , produto . getvaloroutrasdespesasacessorias ( ) )
[0]: org. junit. assert. assertequals ( 0, score, 0 )
[1]: org. junit. assert. assertequals ( 1, score, 0 )
[2]: org. junit. assert. assertequals ( 0.0, score, 0 )
[3]: org. junit. assert. assertequals ( 1.0, score, 0 )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( ( name ) + "<sp>" ) + "none" ) , t1 . tostring ( ) )
[0]: org. junit. assert. assertequals ( expectedresult, result )
[1]: org. junit. assert. assertequals ( expectedresult, response )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. assertequals ( expectedresult, output )
[4]: org. junit. assert. assertequals ( expectedresult, results )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , ints )
[0]: org. junit. assert. asserttrue ( logmanager. is flushed ( ) )
[1]: org. junit. assert. asserttrue ( logmanager. isancel ( ) )
[2]: org. junit. assert. asserttrue ( logmanager. isvia ( ) )
[3]: org. junit. assert. asserttrue ( logmanager. isserve ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , formatted )
[0]: org. junit. assert. assertequals ( true, havenicehashcodespread ( oomages ) )
[1]: org. junit. assert. assertequals ( expected, defaultheaders ( serializedobject, message ) )
[2]: org. junit. assert. assertequals ( expected, defaultheaders ( serializedobject, null ) )
[3]: org. junit. assert. assertequals ( expected, serializedobject )
[4]: org. junit. assert. assertequals ( expected, defaultheaders ( serializedobject, msg ) )

************

************
tgt: org . junit . assert . assertnotnull ( newclass )
[0]: ) )
[1]: org. junit. assert. assertequals ( 8, s. findinordersuccessor ( root. left. right. right ). val )
[2]: org. junit. assert. assertequals ( 8, s. findinordersuccessor ( root. left. right ). val )
[3]: org. junit. assert. assertequals ( 8, s. findinordersuccessor ( root ). val )
[4]: org. junit. assert. assertequals ( 8, s. findinordersuccessor ( root. left ). val )

************

************
tgt: org . junit . assert . assertthat ( c . compute ( ) , org . hamcrest . matchers . is ( true ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( org. pure4j. immutable. runtimeimmutabilitychecker. coimmutable ( java. lang. object. class ) )
[2]: org. junit. assert. asserttrue ( org. pure4j. immutable. runtimeimmutabilitychecker. coimmutable ( java. lang. string. class ) )
[3]: org. junit. assert. assertfalse ( org. pure4j. immutable. runtimeimmutabilitychecker. coimmutable ( java. lang. object. class ) )
[4]: org. junit. assert. assertfalse ( org. pure4j. immutable. runtimeimmutabilitychecker. coimmutable ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( com . jogamp . opengl . math . binary16 . negative_zero ) == ( com . jogamp . opengl . math . binary16 . packdouble ( ( - 0.0 ) ) ) ) )
[0]: org. junit. assert. asserttrue ( org. pure4j. immutable. runtimeimmutabilitychecker. coimmutable ( getclass ( ) ) )
[1]: org. junit. assert. assertequals ( 1, size. length )
[2]: org. junit. assert. assertequals ( 1, size. size ( ) )
[3]: org. junit. assert. assertequals ( 0, size. size ( ) )
[4]: org. junit. assert. assertequals ( 0, size. length )

************

************
tgt: org . junit . assert . assertnotnull ( e . getmessage ( ) )
[0]: org. junit. assert. assertequals ( alertservice. findalertbynameandowner ( alertname, expectedalert ), expectedalert )
[1]: org. junit. assert. assertequals ( alertservice. findalertbynameandowner ( alertname, expectedalert ), expectedalert. size ( ) )
[2]: org. junit. assert. assertequals ( alertservice. findalertbynameandowner ( alertname, expectedalert ). size ( ), 0 )
[3]: org. junit. assert. assertequals ( alertservice. findalertbynameandowner ( alertname, expectedalert ), expectedalert defs. get ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , actual . toarray ( ) )
[0]: org. junit. assert. assertequals ( e. getmessage ( ), null )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( e. getmessage ( ), java. lang. string. class. getname ( ) )
[3]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ) )
[4]: org. junit. assert. asserttrue ( e. getmessage ( ). contains ( string ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( expected ) )
[0]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { }, actual )
[1]: org. junit. assert. assertequals ( 1, actual. length )
[2]: org. junit. assert. assertequals ( 0, actual. length )
[3]: org. junit. assert. assertarrayequals ( new java. lang. string [ 0 ], actual )
[4]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { }, actual )

************

************
tgt: org . junit . assert . asserttrue ( fail )
[0]: org. junit. assert. assertequals ( listvenumelement, dbvenum )
[1]: org. junit. assert. assertequals ( listvenumelement, dbvenum. toarray ( ) )
[2]: org. junit. assert. assertequals ( listvenumelement, dbvenum. get ( 0 ) )
[3]: org. junit. assert. assertequals ( listvenumelement, dbvenum. size ( ) )
[4]: org. junit. assert. assertequals ( listvenumelement, dbvenum. getenums ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( 1, poolstats. totalbeanscreatedproperty ( ) )
[1]: org. junit. assert. assertequals ( 0, poolstats. totalbeanscreatedproperty ( ) )
[2]: org. junit. assert. assertnotnull ( company. getname ( ) )
[3]: org. junit. assert. assertequals ( company. getname ( ), address. getname ( ) )
[4]: org. junit. assert. assertequals ( company. getname ( ), address. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( name , model . getname ( ) )
[0]: org. junit. assert. assertequals ( privatecompany. getname ( ), company. getname ( ) )
[1]: org. junit. assert. assertequals ( null, company. getname ( ) )
[2]: org. junit. assert. assertequals ( 0, fetchcount ( ) )
[3]: org. junit. assert. assertequals ( 0, query. fetchcount ( ) )
[4]: org. junit. assert. assertequals ( 0, data. fetchcount ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( arr , marshalunmarshal ( arr ) )
[0]: org. junit. assert. assertequals ( 0, repository. fetchcount ( ) )
[1]: org. junit. assert. assertequals ( 1, fetchcount ( ) )
[2]: org. junit. assert. assertequals ( object, result )
[3]: org. junit. assert. assertequals ( obj, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertnotnull ( injector )
[0]: org. junit. assert. assertequals ( result, object )
[1]: org. junit. assert. assertequals ( result, null )
[2]: org. junit. assert. assertequals ( 0, constfilter. removenot ( ) )
[3]: org. junit. assert. assertnotnull ( constfilter. removenot ( ) )
[4]: org. junit. assert. assertequals ( false, constfilter. removenot ( ) )

************

************
tgt: org . junit . assert . assertthat ( new org . batfish . coordinator . resources . filtergroupbean ( bean . tofiltergroup ( ) ) , org . hamcrest . matchers . equalto ( bean ) )
[0]: org. junit. assert. assertequals ( 0, constfilter. removenot ( ). length )
[1]: ) )
[2]: org. junit. assert. assertequals ( getlabel ( ), m3. tostring ( ) )
[3]: org. junit. assert. assertequals ( getlabel ( ), m3, m1 )
[4]: org. junit. assert. assertequals ( getlabel ( ), m3. getmessage ( ) )

************

************
tgt: org . junit . assert . assertthat ( term , org . hamcrest . corematchers . is ( "" ) )
[0]: org. junit. assert. assertequals ( getlabel ( ), m1. getlabel ( ) )
[1]: org. junit. assert. assertequals ( getlabel ( ), m3. getlabel ( ) )
[2]: org. junit. assert. assertequals ( 1, subscription. getstatus ( ) )
[3]: org. junit. assert. assertequals ( 1, converter. getvmtotalheap ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, org. getvmtotalheap ( ). size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expecteddata , writtendata )
[0]: org. junit. assert. assertequals ( 1, bean. getvmtotalheap ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, this. field. getvmtotalheap ( ). size ( )
[2]: org. junit. assert. assertequals ( 1, this. component. getvmtotalheap ( ). size ( )
[3]: org. junit. assert. assertnotnull ( res )
[4]: org. junit. assert. assertequals ( null, res )

************

************
tgt: org . junit . assert . assertequals ( fixture , fixture . removesuffix ( 0 ) )
[0]: org. junit. assert. assertnull ( res )
[1]: org. junit. assert. assertequals ( res, null )
[2]: , res )
[3]: org. junit. assert. assertequals ( 1, dao. query ( where ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, dao. query ( where ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( date , com . splicemachine . derby . utils . splicedatefunctions . to_date ( source , format ) )
[0]: org. junit. assert. assertequals ( 1, dao. query ( where ). count ( ) )
[1]: org. junit. assert. assertequals ( 1, dao. query ( foo ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( expected, messages. trimmessages ( expected ) )
[4]: org. junit. assert. assertequals ( expected, message. trimmessages ( expected ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . getsize ( ) )
[0]: org. junit. assert. assertequals ( expected, com. google. common. collect. lists. trimmessages ( messages ) )
[1]: org. junit. assert. assertequals ( expected, new java. util. arraylist ( trimmessages ( messages ) ) )
[2]: ) )
[3]: org. junit. assert. assertthat ( brokerconnection, org. hamcrest. corematchers. is ( brokerconnection ) )
[4]: org. junit. assert. assertthat ( brokerconnection, org. hamcrest. corematchers. is ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( "smthg" 0 , expectedmsg , actualmsg )
[0]: org. junit. assert. assertnull ( brokerconnection )
[1]: org. junit. assert. assertthat ( handler. brokeradded ( null, brokerconnection ), org. hamcrest. corematchers. is ( 0 ) )
[2]: org. junit. assert. assertthat ( handler. brokeradded ( string, brokerconnection ), org. hamcrest. corematchers. is ( 0 ) )
[3]: org. junit. assert. asserttrue ( object. equals ( object ) )
[4]: org. junit. assert. assertequals ( false, result )

************

************
tgt: org . junit . assert . asserttrue ( master2 . getdetails ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( true, result )
[1]: org. junit. assert. assertnotnull ( file )
[2]: org. junit. assert. assertequals ( file, file )
[3]: org. junit. assert. assertequals ( file, disk )
[4]: org. junit. assert. assertequals ( file, zip )

************

************
tgt: org . junit . assert . asserttrue ( file . containsgroup ( "default-group" ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( w. getengines ( ) )
[2]: org. junit. assert. assertnotnull ( manager. getengines ( ) )
[3]: org. junit. assert. assertnotnull ( w )
[4]: org. junit. assert. assertnotnull ( sw. getengines ( ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , query . getpagesize ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, actualkilometers )
[2]: org. junit. assert. assertequals ( 0, actualkilometers )
[3]: org. junit. assert. assertequals ( 1, actualkilometers, 0 )
[4]: org. junit. assert. assertequals ( 100, actualkilometers )

************

************
tgt: org . junit . assert . asserttrue ( emitted )
[0]: org. junit. assert. assertequals ( 2, actualkilometers )
[1]: org. junit. assert. assertequals ( 1, val. getcheck ( ) )
[2]: org. junit. assert. assertnotnull ( val. getcheck ( ) )
[3]: org. junit. assert. asserttrue ( val. getcheck ( ) )
[4]: org. junit. assert. assertnull ( val. getcheck ( ) )

************

************
tgt: org . junit . assert . assertnull ( role )
[0]: org. junit. assert. assertequals ( 0, val. getcheck ( ) )
[1]: org. junit. assert. asserttrue ( answer. getresult ( ) )
[2]: org. junit. assert. assertequals ( 1, answer. getresult ( ) )
[3]: org. junit. assert. assertequals ( 3, solutions. size ( ) )
[4]: org. junit. assert. assertequals ( 1, solutions. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , getiterablesize ( iterable ) )
[0]: org. junit. assert. assertequals ( 0, solutions. size ( ) )
[1]: org. junit. assert. assertequals ( 2, solutions. size ( ) )
[2]: org. junit. assert. assertequals ( 4, solutions. size ( ) )
[3]: org. junit. assert. assertequals ( 2l, descendingorder. getepoch ( ) )
[4]: org. junit. assert. assertequals ( twol, descendingorder. getepoch ( ) )

************

************
tgt: org . junit . assert . assertequals ( org , copy )
[0]: org. junit. assert. assertthat ( descendingorder, is ( descendingorder ) )
[1]: org. junit. assert. assertequals ( l2, descendingorder. getepoch ( ) )
[2]: org. junit. assert. asserttrue ( descendingorder. getepoch ( ) )
[3]: org. junit. assert. assertnotnull ( template )
[4]: org. junit. assert. assertequals ( 1, ret_val )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 0, ret_val )
[1]: org. junit. assert. assertequals ( 2, ret_val )
[2]: org. junit. assert. assertequals ( 1, retiveval )
[3]: ) )
[4]: org. junit. assert. asserttrue ( arrow. isinverted ( ) )

************

************
tgt: org . junit . assert . assertnull ( enrichedrequest )
[0]: org. junit. assert. assertequals ( java. lang. string. class, this. manager. getid ( ) )
[1]: org. junit. assert. assertnotnull ( this. document. getid ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class, this. workspace. getid ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, this. model. getid ( ) )
[4]: org. junit. assert. assertnotnull ( this. component. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , resarr . $length ( ) )
[0]: org. junit. assert. assertequals ( 1, target. getoutput ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, target. getoutput ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( target. getoutput ( ) )
[3]: type ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 8 , result )
[0]: org. junit. assert. assertequals ( str_expected_output, readline ( ) )
[1]: org. junit. assert. assertnotnull ( readline ( ) )
[2]: org. junit. assert. assertequals ( msg_expected_output, readline ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( ( ( associationindicationstatus . getvalue ( ) ) >= 0 ) )
[0]: org. junit. assert. assertnull ( message. findsetoperation ( column, null ) )
[1]: org. junit. assert. assertnull ( message. findsetoperation ( column. getid ( ), null ) )
[2]: org. junit. assert. assertnull ( message. findsetoperation ( column, ""a"" ) )
[3]: org. junit. assert. assertnull ( message. findsetoperation ( ""a"", ""a"" ) )
[4]: org. junit. assert. assertnull ( message )

************

************
tgt: org . junit . assert . assertequals ( ( ( "\n" + sqltext ) + "\n" ) , expected , testutils . formattedresult . resultfactory . tostringunsorted ( rs ) )
[0]: org. junit. assert. assertnotnull ( compileandrun ( java. lang. object. class, null ) )
[1]: org. junit. assert. assertnotnull ( compileandrun ( java. lang. string. class, null ) )
[2]: org. junit. assert. assertnull ( compileandrun ( java. lang. object. class, null ) )
[3]: org. junit. assert. assertnotnull ( compileandrun ( getclass ( ), null ) )
[4]: org. junit. assert. assertnotnull ( compileandrun ( java. lang. object. class, new java. lang. object ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , actualresult )
[0]: org. junit. assert. assertequals ( 0, theabc. getbytes ( ). length )
[1]: org. junit. assert. assertequals ( 1, theabc. getbytes ( ). length )
[2]: org. junit. assert. assertequals ( 1, theabc. length ( ) )
[3]: org. junit. assert. assertequals ( 0, theabc. length ( ) )
[4]: org. junit. assert. assertequals ( 1, thisdocument. getbytes ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 0 , results . size ( ) )
[0]: org. junit. assert. assertnotnull ( localserviceagent )
[1]: org. junit. assert. assertnotnull ( localserviceagent. getserviceagent ( ) )
[2]: org. junit. assert. assertnotnull ( locallyserviceagent )
[3]: org. junit. assert. assertequals ( 1, localserviceagent )
[4]: org. junit. assert. assertnotnull ( localserviceagent ) )

************

************
tgt: org . junit . assert . assertthat ( action . remove ( server ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. null, amqpmessagefacade. getmessageannotations ( ) )
[1]: org. junit. assert. null ( amqpmessagefacade. getmessageannotations ( ) )
[2]: org. junit. assert. assertnull ( amqpmessagefacade )
[3]: null ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( ( windowsize * windowsize ) * ( products . length ) ) * ( coordinates . length ) ) , measurementlist . size ( ) )
[0]: org. junit. assert. assertnull ( array )
[1]: org. junit. assert. assertnotnull ( array )
[2]: , array. length )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertthat ( parser . next ( ) , is ( false ) )
[0]: org. junit. assert. assertequals ( 1l, result )
[1]: org. junit. assert. assertequals ( 0l, result )
[2]: org. junit. assert. assertequals ( result, 1l )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: long result )

************

************
tgt: org . junit . assert . assertnotnull ( response )
[0]: org. junit. assert. assertnotnull ( infos )
[1]: org. junit. assert. assertnull ( infos )
[2]: org. junit. assert. assertnull ( infos. length )
[3]: org. junit. assert. assertthat ( infos. length )
[4]: , infos. length )

************

************
tgt: org . junit . assert . assertthat ( definition , is ( "not<sp>found" ) )
[0]: org. junit. assert. assertnotnull ( feed. getsourceclusteraction ( ) )
[1]: org. junit. assert. assertequals ( props, feed. getsourceclusteraction ( ) )
[2]: org. junit. assert. assertequals ( null, feed. getsourceclusteraction ( ) )
[3]: org. junit. assert. assertequals ( 1, feed. getsourceclusteraction ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "abc" , nestedrecord2 . getfield ( new org . lilyproject . repository . api . qname ( ns , "rt3" 1 ) ) )
[0]: org. junit. assert. assertequals ( expected, java. util. arrays. tostring ( rs ) )
[1]: org. junit. assert. assertequals ( expected, java. lang. string. tostring ( rs ) )
[2]: org. junit. assert. assertequals ( expected, junit. tostring ( rs ) )
[3]: org. junit. assert. assertequals ( expected, tostring ( rs ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( new com . dongsw . authority . model . role ( ) , result )
[0]: org. junit. assert. assertequals ( facetexecutor. get ( i ), minimumsbeforereturning [ i ] )
[1]: org. junit. assert. assertequals ( facetexecutor [ i ], minimumsbeforereturning [ i ] )
[2]: org. junit. assert. assertequals ( facetexecutor. get ( i ), minsbeforereturning [ i ] )
[3]: org. junit. assert. assertequals ( facetexecutor. get ( i ), minimumsbeforereturnings [ i ] )
[4]: i ) )

************

************
tgt: org . junit . assert . assertthat ( missingromfiles , org . hamcrest . corematchers . equalto ( expectedmissingromfiles ) )
[0]: org. junit. assert. assertnotnull ( mountstrategy. getdirectorymapping ( ) )
[1]: org. junit. assert. assertequals ( mountpath, mountstrategy. getdirectorymapping ( ) )
[2]: org. junit. assert. assertequals ( mountid, mountstrategy. getdirectorymapping ( ) )
[3]: org. junit. assert. assertnull ( mountstrategy. getdirectorymapping ( ) )
[4]: org. junit. assert. assertnotnull ( workspacestrategy. getdirectorymapping ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , visitor . getshards ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( ( - 2 ), result )
[1]: org. junit. assert. assertequals ( - 2, result )
[2]: org. junit. assert. assertequals ( ( - 3 ), result )
[3]: org. junit. assert. assertequals ( ( - 5 ), result )
[4]: org. junit. assert. assertequals ( 0, result )

************

************
tgt: org . junit . assert . assertthat ( formdto . getloanofficerlist ( ) , org . hamcrest . corematchers . is ( loanofficers ) )
[0]: org. junit. assert. assertequals ( expected, d2 )
[1]: org. junit. assert. assertequals ( 1, writers. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ak ), writers )
[3]: org. junit. assert. assertequals ( 0, writers. size ( ) )
[4]: org. junit. assert. assertequals ( saved, writers )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( false ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( inhoud )
[2]: org. junit. assert. assertnull ( inhoud )
[3]: org. junit. assert. assertequals ( null, inhoud )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( injector . getinstance ( com . mycila . guice . ext . service . serv2 . class ) )
[0]: )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 3 ), sv. getiterationdepth ( cp, tempdepths ) )
[2]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), sv. getiterationdepth ( cp, tempdepths ) )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 4 ), sv. getiterationdepth ( cp, tempdepths ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 2 ), sv. getiterationdepth ( cp, tempdepths ) )

************

************
tgt: org . junit . assert . assertsame ( result1 , future . get ( ) )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 7 ), sv. getiterationdepth ( cp, tempdepths ) )
[1]: org. junit. assert. assertequals ( 1, counter. getvalue ( ) )
[2]: org. junit. assert. assertnotnull ( counter. getvalue ( ) )
[3]: org. junit. assert. assertequals ( 1l, counter. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 0, counter. getvalue ( ) )

************

************
tgt: org . junit . assert . assertthat ( presenter . gettitle ( ) , org . hamcrest . core . is . is ( org . eclipse . che . ide . ext . runner . client . manager . runnermanagerpresentertest . text ) )
[0]: org. junit. assert. assertequals ( 1, counter. getvalue ( ). length )
[1]: org. junit. assert. assertequals ( message, responsemap. response )
[2]: org. junit. assert. assertequals ( msg, responsemap. response )
[3]: org. junit. assert. assertequals ( responsemap. response, message )
[4]: org. junit. assert. assertequals ( msg, message )

************

************
tgt: org . junit . assert . assertequals ( resultdate , instance . gettime ( ) )
[0]: org. junit. assert. assertequals ( message, msg )
[1]: org. junit. assert. assertequals ( 0.0, traversalcost, 0.0 )
[2]: org. junit. assert. assertequals ( 1.0, traversalcost, 0.0 )
[3]: org. junit. assert. assertequals ( null, traversalcost, 0.0 )
[4]: org. junit. assert. assertequals ( 0.0, traversalcost )

************

************
tgt: org . junit . assert . assertequals ( expectedsqlformathoperationsforexistingdatafix1 ( ) , sql )
[0]: org. junit. assert. assertequals ( 0.0, traversalcost, 0 )
[1]: org. junit. assert. assertequals ( name, filename )
[2]: org. junit. assert. assertnotnull ( filename )
[3]: org. junit. assert. assertequals ( name, file )
[4]: org. junit. assert. assertequals ( names, filename )

************

************
tgt: org . junit . assert . assertequals ( layer , page . getlayercount ( ) )
[0]: , filename )
[1]: org. junit. assert. assertequals ( type, org. apache. kafka. connect. storage. convertertype. withname ( type ) )
[2]: org. junit. assert. assertnotnull ( org. apache. kafka. connect. storage. convertertype. withname ( type ) )
[3]: org. junit. assert. assertnotnull ( type. withname ( type. tostring ( ) ) )
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , descricoes . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( ( newsize - initialsize ), newsize )
[2]: org. junit. assert. assertnotnull ( svc. gethttptransport ( ) )
[3]: org. junit. assert. assertnotnull ( fullyqualifiedname )
[4]: org. junit. assert. assertnotnull ( generator. getzipcodes ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( org . ebayopensource . turmeric . runtime . sif . impl . internal . pipeline . localbindingthreadpool . getinstance ( ) . getstatistics ( ) . getpoolsize ( ) ) - tpsize ) , 1 )
[0]: org. junit. assert. assertnotnull ( s. getzipcodes ( ) )
[1]: org. junit. assert. assertnotnull ( fqnqualifiedname )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, ret )
[4]: org. junit. assert. assertequals ( 1, ret )

************

************
tgt: org . junit . assert . asserttrue ( ( ( productdtos . size ( ) ) == 3 ) )
[0]: org. junit. assert. assertequals ( 1, res. size ( ) )
[1]: org. junit. assert. assertequals ( 2, res. size ( ) )
[2]: org. junit. assert. assertequals ( 0, res. size ( ) )
[3]: org. junit. assert. assertequals ( 1, dependentbean. getvalue ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, dependentbean. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( false , equalpredicate . evaluate ( user ) )
[0]: org. junit. assert. assertequals ( 0, dependentbean. getvalue ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 2, dependentbean. getvalue ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, dependentbean. getvalue ( ). length )
[3]: org. junit. assert. assertequals ( e. getpartitioner ( ), a )
[4]: org. junit. assert. assertequals ( a. getpartitioner ( ), e. getpartitioner ( ) )

************

************
tgt: org . junit . assert . assertequals ( bigdecimal . ten , result . getrevenueshare ( ) )
[0]: org. junit. assert. assertequals ( null, e. getpartitioner ( ) )
[1]: org. junit. assert. assertequals ( a, e. getpartitioner ( ) )
[2]: org. junit. assert. assertequals ( 0, e. getpartitioner ( ) )
[3]: org. junit. assert. assertequals ( sulfuras, sulfuras. getquality ( ) )
[4]: org. junit. assert. assertequals ( sulfuras, org. apache. commons. lang. stringutils. getquality ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected . tostring ( ) , result . tostring ( ) )
[0]: org. junit. assert. assertequals ( sulfuras, org. apache. commons. lang3. stringutils. getquality ( ) )
[1]: org. junit. assert. assertequals ( sulfuras, builder. getquality ( ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( loadedtree. equals ( loadedtree ) )
[4]: org. junit. assert. asserttrue ( loadedtree. equals ( createdtree ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , factor , 0 )
[0]: org. junit. assert. asserttrue ( loadedtree. equals ( tree ) )
[1]: org. junit. assert. asserttrue ( loadedtree. equals ( this ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, results. size ( ) )
[4]: org. junit. assert. assertequals ( 4, results. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , result )
[0]: org. junit. assert. assertarrayequals ( inputid, inputid. tobytearray ( ) )
[1]: org. junit. assert. assertarrayequals ( inputid. tobytearray ( ), diag )
[2]: org. junit. assert. assertarrayequals ( inputid. tobytearray ( ), counter )
[3]: org. junit. assert. assertarrayequals ( inputid, inputid )
[4]: org. junit. assert. assertarrayequals ( inputid )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( 3, evaluatestartconditions. size ( ) )
[1]: org. junit. assert. assertequals ( 1, evaluatestartconditions. size ( ) )
[2]: org. junit. assert. assertnotnull ( bean )
[3]: org. junit. assert. assertnotnull ( bean )
[4]: org. junit. assert. assertnotnull ( bean )

************

************
tgt: org . junit . assert . assertnotnull ( response )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 1, i )
[3]: org. junit. assert. assertequals ( results [ i ]. length, i )
[4]: org. junit. assert. assertequals ( 0, i )

************

************
tgt: org . junit . assert . assertequals ( lister . getkeys ( null ) , lister2 . getkeys ( null ) )
[0]: org. junit. assert. assertequals ( 10, i )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, scores. getscore ( ) )
[3]: org. junit. assert. assertequals ( 1, instance. iterator ( ). hasnext ( ) )
[4]: org. junit. assert. assertnotnull ( instance. iterator ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , ldapusergroupprovider . getgroups ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 1, instance. iterator ( ). next ( ) )
[1]: org. junit. assert. assertnull ( instance. iterator ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( url )
[4]: org. junit. assert. assertequals ( null, url )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnull ( url )
[1]: ) )
[2]: )
[3]: org. junit. assert. asserttrue ( src. includestimerange ( tr ) )
[4]: org. junit. assert. assertequals ( 3, ds. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "error" , get ( just . niubi . httprequest . httprequesttest . url ) . body ( ) )
[0]: org. junit. assert. assertequals ( 1, ds. size ( ) )
[1]: org. junit. assert. assertequals ( 6, ds. size ( ) )
[2]: org. junit. assert. assertequals ( z, ds. size ( ) )
[3]: org. junit. assert. assertequals ( 0, ds. size ( ) )
[4]: org. junit. assert. assertequals ( byte. max_value, b. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( getrules ( ) . matches ( type1 , type2 ) )
[0]: org. junit. assert. assertthat ( model. get ( facescontext ), org. hamcrest. corematchers. is ( facescontext ) )
[1]: org. junit. assert. assertthat ( model. get ( facescontext ), org. hamcrest. corematchers. is ( facescontext. model ) )
[2]: org. junit. assert. assertequals ( facescontext, model. get ( facescontext. getviewroot ( ) ) )
[3]: org. junit. assert. assertnotnull ( model. get ( facescontext. getviewroot ( ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( this . classundertest ( ) . allsatisfy ( ( value ) -> false ) )
[0]: org. junit. assert. assertnotnull ( org. bonitasoft. engine. io. ioutil. getallcontentfrom ( file ) )
[1]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 2, 3 }, file. getallcontentfrom ( file ) )
[2]: org. junit. assert. assertnotnull ( getallcontentfrom ( file ) )
[3]: org. junit. assert. assertequals ( 1, file. getallcontentfrom ( file ). length )
[4]: org. junit. assert. assertnotnull ( file. getallcontentfrom ( file ) )

************

************
tgt: org . junit . assert . asserttrue ( p1 . implies ( p2 ) )
[0]: org. junit. assert. assertnotnull ( result. getbody ( ) )
[1]: org. junit. assert. assertequals ( java. lang. string. class, result. getbody ( ) )
[2]: org. junit. assert. assertequals ( 1, result. getbody ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. getbody ( ). length )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( mesostaskmanagerparameters . constraints ( ) . size ( ) , org . hamcrest . core . is . is ( 0 ) )
[0]: org. junit. assert. assertequals ( 'f', e. getoption ( ) )
[1]: org. junit. assert. assertequals ( 1, e. getoption ( ) )
[2]: org. junit. assert. assertequals ( null, e. getoption ( ) )
[3]: org. junit. assert. assertequals ( 1, e. getoption ( ). length )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( maxcandidates , runner . getresults ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 1, cart. getsize ( ) )
[1]: org. junit. assert. assertequals ( 0, cart. getsize ( ) )
[2]: org. junit. assert. assertnotnull ( cart. getsize ( ) )
[3]: org. junit. assert. assertequals ( 1, cart. getsize ( ). length )
[4]: org. junit. assert. assertequals ( 0, cart. getsize ( ). length )

************

************
tgt: org . junit . assert . assertnull ( libraryfile . getjavadocuri ( ) )
[0]: org. junit. assert. assertequals ( 1, this. asarray ( ). length )
[1]: org. junit. assert. assertequals ( 1, 1 )
[2]: org. junit. assert. assertequals ( 1, ident_2 )
[3]: org. junit. assert. assertequals ( 1, this. asarray )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "success" , result )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertequals ( 1, mockit. mockinstancematchingtest. collaborator. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 1, new mockit. mockinstancematchingtest. column. getvalue ( ) )
[3]: org. junit. assert. assertequals ( 1, new mockit. mockinstancematchingtest ( ). getvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, 1 )

************

************
tgt: org . junit . assert . assertfalse ( plugin . isfieldbindingvalid ( ) )
[0]: org. junit. assert. assertequals ( 0, mytestinstance. getconnectioncount ( ) )
[1]: org. junit. assert. assertequals ( 1, mytestinstance. getconnectioncount ( ) )
[2]: org. junit. assert. assertnull ( strategy. getconnectioncount ( ) )
[3]: org. junit. assert. assertequals ( 0, outputreconnect. getconnectioncount ( ) )
[4]: org. junit. assert. assertequals ( 0, mytestinstance. getconnectionrows ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , size )
[0]: org. junit. assert. assertnotnull ( friend )
[1]: org. junit. assert. assertequals ( null, friend )
[2]: org. junit. assert. assertequals ( datamodel, friend )
[3]: org. junit. assert. assertequals ( friend, null )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( jdbcinputformat . reachedend ( ) )
[0]: org. junit. assert. assertequals ( 1, unknown. getapplicablepolicies ( unknown ). length )
[1]: org. junit. assert. assertequals ( i, unknown. getapplicablepolicies ( unknown ). length )
[2]: org. junit. assert. assertequals ( 0, unknown. getapplicablepolicies ( unknown ). length )
[3]: org. junit. assert. assertequals ( unknown, unknown. getapplicablepolicies ( unknown ) )
[4]: org. junit. assert. assertequals ( unknown, unknown )

************

************
tgt: org . junit . assert . assertnotnull ( a )
[0]: org. junit. assert. assertnull ( connection. getconnectionstring ( ) )
[1]: org. junit. assert. assertequals ( null, connection. getconnectionstring ( ) )
[2]: org. junit. assert. assertequals ( """", connection. getconnectionstring ( ) )
[3]: org. junit. assert. assertnotnull ( connection. getconnectionstring ( ) )
[4]: org. junit. assert. assertnull ( conn. getconnectionstring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , source . getestimatedsizebytes ( null ) )
[0]: org. junit. assert. assertequals ( null, mmap. get ( 0 ) )
[1]: org. junit. assert. assertnotnull ( mmap. get ( 0 ) )
[2]: org. junit. assert. assertnull ( mmap. get ( 0 ) )
[3]: org. junit. assert. assertequals ( me. get ( 0 ), mmap )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "v1<sp>artist" , wrapper . getartist ( ) )
[0]: org. junit. assert. assertequals ( 1, all. size ( ) )
[1]: org. junit. assert. assertequals ( 5, all. size ( ) )
[2]: org. junit. assert. assertequals ( 2, all. size ( ) )
[3]: org. junit. assert. assertequals ( ( - 1 ), all. size ( )
[4]: org. junit. assert. assertequals ( ( - 1 ), all. size (

************

************
tgt: org . junit . assert . asserttrue ( fs . unlink ( new com . allanbank . mongodb . bson . element . objectid ( ) ) )
[0]: org. junit. assert. assertequals ( 1, emptylist. getlength ( ) )
[1]: org. junit. assert. assertequals ( expected, hexbuf )
[2]: org. junit. assert. assertequals ( expected. trim ( ), hexbuf. trim ( ) )
[3]: org. junit. assert. assertequals ( last, last )
[4]: org. junit. assert. assertnotnull ( last )

************

************
tgt: org . junit . assert . assertequals ( 2.8284f , org . simmetrics . example . stringdistancebuilderexample . example04 ( ) , org . simmetrics . example . stringdistancebuilderexampletest . delta )
[0]: org. junit. assert. assertnotnull ( ept. getname ( ) )
[1]: org. junit. assert. assertequals ( first, last )
[2]: ) )
[3]: org. junit. assert. assertequals ( log_history, builder. gethistory ( ). log ( ) )
[4]: org. junit. assert. assertequals ( log_history, builder. gethistory ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "i<sp>am<sp>abc" , resp . getcontent ( ) )
[0]: org. junit. assert. assertequals ( log_history, builder. gethistory ( ). tostring ( ) )
[1]: org. junit. assert. assertequals ( log_history, builder. gethistory ( ). count ( ) )
[2]: org. junit. assert. assertequals ( log_history, builder. gethistory ( ). length )
[3]: org. junit. assert. assertequals ( 1, 1 )
[4]: org. junit. assert. assertnotnull ( collection )

************

************
tgt: org . junit . assert . assertfalse ( alphabet . checkvowelharmonya ( a [ i ] , b [ i ] ) )
[0]: org. junit. assert. assertequals ( 1, events. size ( ) )
[1]: org. junit. assert. assertequals ( 1, collection. size ( ) )
[2]: org. junit. assert. assertnotnull ( context )
[3]: org. junit. assert. assertnotnull ( change. getissue ( ) )
[4]: org. junit. assert. assertequals ( 1, change. getissue ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( s , screenevent . tostring ( ) )
[0]: org. junit. assert. assertnotnull ( change )
[1]: ) )
[2]: 
[3]: org. junit. assert. assertequals ( graphlibrary, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( ( returned == expected ) )
[0]: org. junit. assert. assertequals ( hash, file2. getvaluehexstring ( ) )
[1]: org. junit. assert. assertequals ( hash, file1. getvaluehexstring ( ) )
[2]: org. junit. assert. assertequals ( hash, file. getvaluehexstring ( ) )
[3]: org. junit. assert. assertequals ( hash, files. getvaluehexstring ( ) )
[4]: org. junit. assert. assertequals ( hash, filename2. getvaluehexstring ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedopentsdbemitterconfig , opentsdbemitterconfig )
[0]: org. junit. assert. asserttrue ( rule. finderpath ( rule ) )
[1]: org. junit. assert. asserttrue ( rule. istermin ( rule ) )
[2]: org. junit. assert. asserttrue ( rule. nextname ( rule ) )
[3]: org. junit. assert. asserttrue ( rule.goog ( rule ) )
[4]: org. junit. assert. asserttrue ( rule.antialias ( rule ) )

************

************
tgt: org . junit . assert . asserttrue ( regionmapbefore . equals ( regionmapafter ) )
[0]: org. junit. assert. assertnotnull ( ksession. getglobal ( ""list"" ) )
[1]: org. junit. assert. assertnotnull ( ksession. getglobal ( org. apache. list. size ( ) ) )
[2]: org. junit. assert. assertnotnull ( ksession. getglobal ( org. apache. list. list. class ) )
[3]: org. junit. assert. assertnotnull ( ksession. getglobal ( "list. size ( ) ) )
[4]: org. junit. assert. assertnotnull ( ksession. getglobal ( null ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result , 1.0e-4 )
[0]: org. junit. assert. asserttrue ( collection. isempty ( ) )
[1]: org. junit. assert. asserttrue (collection. isempty ( ) )
[2]: org. junit. assert. assertnotnull ( e. getsymbol ( ) )
[3]: org. junit. assert. assertequals ( 1, e. getsymbol ( ) )
[4]: org. junit. assert. assertnull ( e. getsymbol ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( null, e. getsymbol ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, gcoperations. length )
[3]: org. junit. assert. assertequals ( false, constraintchecker. isconfigured ( ) )
[4]: org. junit. assert. assertfalse ( constraintchecker. isconfigured ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( is )
[0]: org. junit. assert. assertequals ( true, constraintchecker. isconfigured ( ) )
[1]: org. junit. assert. assertequals ( null, constraintchecker. isconfigured ( ) )
[2]: org. junit. assert. assertequals ( 0, constraintchecker. isconfigured ( ) )
[3]: org. junit. assert. assertequals ( null, subject. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 4, subject. getvalue ( ). length )

************

************
tgt: org . junit . assert . assertequals ( "joe" , org . apache . hadoop . http . lib . staticuserwebfilter . getusernamefromconf ( conf ) )
[0]: org. junit. assert. assertequals ( pkcs, subject. getvalue ( ) )
[1]: org. junit. assert. assertequals ( 5, subject. getvalue ( ). length )
[2]: type ) )
[3]: org. junit. assert. assertequals ( 1, projects. size ( ) )
[4]: org. junit. assert. assertequals ( 0, projects. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( primitivetype , clone )
[0]: org. junit. assert. assertequals ( null, projects )
[1]: org. junit. assert. assertnotnull ( projects )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, count )
[4]: org. junit. assert. assertequals ( 3, count )

************

************
tgt: org . junit . assert . asserttrue ( instance . isempty ( ) )
[0]: org. junit. assert. assertequals ( 5, count )
[1]: org. junit. assert. assertequals ( 0, count )
[2]: org. junit. assert. assertnotnull ( entitymanagerfactory ( datasource, jpavendoradapter ) )
[3]: org. junit. assert. assertnotnull ( jpavendoradapter. entitymanagerfactory ( datasource, jpavendoradapter ) )
[4]: org. junit. assert. assertnotnull ( daoconfig. entitymanagerfactory ( datasource, jpavendoradapter ) )

************

************
tgt: org . junit . assert . assertnotnull ( rs )
[0]: org. junit. assert. assertnotnull ( jpavendoradapter )
[1]: org. junit. assert. assertnotnull ( entitymanagerfactory ( datasource, jpavendoradapter ). get ( 0 ) )
[2]: org. junit. assert. assertequals ( 1, it. tolist ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, it. tolist ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ""a"", ""b"" ), it. tolist ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( org. apache. jena. rdf. model. test. testliststatements. s, it. tolist ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ""a"" ), it. tolist ( ) )
[2]: org. junit. assert. assertnotnull ( tm. getdescription ( ) )
[3]: org. junit. assert. assertnotnull ( this. mocker. getcomponentundertest ( ). getdescription ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), my. getdescription ( ) )

************

************
tgt: org . junit . assert . assertthat ( command . accept ( state ) , org . hamcrest . core . is . is ( false ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), s. getdescription ( ) )
[1]: org. junit. assert. assertnotnull ( my. getdescription ( ) )
[2]: org. junit. assert. assertfalse ( validator. isconditionheadernotblank ( col52 ) )
[3]: org. junit. assert. assertequals ( 0, ddl. alltables ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, ddl. alltables ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 500000 , dln . getlevelid ( 0 ) )
[0]: org. junit. assert. asserttrue ( ddl. alltables ( ). isempty ( ) )
[1]: org. junit. assert. assertequals ( 0, ddl. alltables ( ). size ( )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( result, null )

************

************
tgt: org . junit . assert . assertarrayequals ( new char [ ] { 0 , 0 , 0 , 0 , 0 } , secret )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( 1, result )
[3]: org. junit. assert. assertequals ( i, cache. size ( ) )
[4]: org. junit. assert. assertequals ( 1, cache. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( key , copy )
[0]: org. junit. assert. assertequals ( 0, cache. size ( ) )
[1]: org. junit. assert. assertequals ( ( i + 1 ), cache. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( q )
[4]: org. junit. assert. assertnotnull ( q. collection )

************

************
tgt: org . junit . assert . assertnull ( filtered )
[0]: org. junit. assert. assertnotnull ( q. stream )
[1]: org. junit. assert. assertnotnull ( q. s )
[2]: org. junit. assert. assertnotnull ( q. fixture )
[3]: org. junit. assert. assertequals ( 1, this. memstore. size ( ) )
[4]: org. junit. assert. assertequals ( 3, this. memstore. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( controleuitkomst . onduidelijk , subject . controle ( context ) )
[0]: org. junit. assert. assertequals ( 2, this. memstore. size ( ) )
[1]: org. junit. assert. assertequals ( 0, this. memstore. size ( ) )
[2]: org. junit. assert. assertequals ( 1, my. size ( ) )
[3]: org. junit. assert. assertnotnull ( formfield )
[4]: org. junit. assert. assertequals ( null, formfield )

************

************
tgt: org . junit . assert . asserttrue ( meldingen . isempty ( ) )
[0]: org. junit. assert. assertnull ( formfield )
[1]: org. junit. assert. assertequals ( context, formfield )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( doc )
[4]: org. junit. assert. assertnull ( doc )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( document )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertarrayequals ( expected, actual )
[4]: org. junit. assert. assertarrayequals ( expected. bytes, actual. bytes )

************

************
tgt: org . junit . assert . assertnotnull ( exception )
[0]: org. junit. assert. assertarrayequals ( expected. bytes ( ), actual. bytes ( ) )
[1]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( expected ) )
[2]: org. junit. assert. assertarrayequals ( expected. bytes ( ), actual. bytes )
[3]: org. junit. assert. assertequals ( 0, count )
[4]: org. junit. assert. assertequals ( 0, counter )

************

************
tgt: org . junit . assert . assertequals ( now , eventtime )
[0]: org. junit. assert. assertequals ( 1, count )
[1]: org. junit. assert. assertequals ( 1, counter )
[2]: org. junit. assert. assertequals ( 0, num )
[3]: org. junit. assert. assertequals ( 1, dao. getdatabasetimestampmillis ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, dao. getdatabasetimestampmillis ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedprofile , actualprofile )
[0]: org. junit. assert. assertequals ( java. util. optional. of ( timestamp ), dao. getdatabasconstructor ( ) )
[1]: org. junit. assert. assertequals ( 1, dao. getdatabasbuildmillis ( ) )
[2]: org. junit. assert. assertequals ( 1, result. getruncount ( ) )
[3]: org. junit. assert. assertequals ( 0, result. getruncount ( ) )
[4]: org. junit. assert. asserttrue ( r. readatomstringlist ( ). isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , ( ( resulta . compareto ( resultb ) ) < 0 ) )
[0]: org. junit. assert. assertequals ( 0, r. readatomstringlist ( ). length )
[1]: org. junit. assert. assertnull ( r. readatomstringlist ( ) )
[2]: org. junit. assert. assertnotnull ( r. readatomstringlist ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( outboundconfigurationa. hashcode ( ), outboundconfigurationb. hashcode ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedarg , parsedarg )
[0]: org. junit. assert. assertnotnull ( outboundconfigurationa. hashcode ( ) )
[1]: org. junit. assert. assertequals ( inboundconfigurationa. hashcode ( ), outboundconfigurationb. hashcode ( ) )
[2]: org. junit. assert. assertequals ( outboundconfigurationb. hashcode ( ), outboundconfigurationa. hashcode ( ) )
[3]: org. junit. assert. assertequals ( outboundconfigurationa. hashcode ( ), outboundconfigurationa. hashcode ( ) )
[4]: org. junit. assert. assertnotnull ( notification )

************

************
tgt: org . junit . assert . assertequals ( originallist , results )
[0]: org. junit. assert. assertnotnull ( seed. getvertex ( ) )
[1]: org. junit. assert. assertnull ( seed. getvertex ( ) )
[2]: org. junit. assert. assertnotnull ( seed. getvertex ( ). getcluster ( ) )
[3]: org. junit. assert. assertnotnull ( seed. getvertex ( ). getid ( ) )
[4]: org. junit. assert. assertnotnull ( seed )

************

************
tgt: org . junit . assert . asserttrue ( ( ( result . getnumelementsprocessed ( ) ) == 0 ) )
[0]: org. junit. assert. assertequals ( 0, dst. copyto ( dst ) )
[1]: org. junit. assert. assertequals ( 1, dst. copyto ( dst ) )
[2]: org. junit. assert. assertequals ( 2, dst. copyto ( dst ) )
[3]: org. junit. assert. assertequals ( java. nio. bytebuffer. storage ( ), dst )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 1, service. size ( ) )
[1]: org. junit. assert. assertequals ( 1, services. size ( ) )
[2]: org. junit. assert. assertequals ( 0, service. size ( ) )
[3]: org. junit. assert. assertequals ( 1, dao. size ( ) )
[4]: org. junit. assert. assertthat ( service. size ( ), org. hamcrest. matchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( "1<sp>hour" , com . sumzerotrading . ib . historical . historicaldatautils . buildbardatasizestring ( 1 , lengthunit . hour ) )
[0]: org. junit. assert. asserttrue ( uploadportletrequest. getcontenttype ( liferayservletrequest ) )
[1]: org. junit. assert. asserttrue ( uploadportletrequest. getcontenttype ( ""name"" ) )
[2]: org. junit. assert. asserttrue ( uploadportletrequest. getcontenttype ( liferayservletrequest. getrequest ( ) ) )
[3]: org. junit. assert. asserttrue ( uploadportletrequest. getcontenttype ( liferayservletrequest ). isempty ( ) )
[4]: org. junit. assert. asserttrue ( uploadportletrequest. getcontenttype ( """" ) )

************

************
tgt: org . junit . assert . assertequals ( 50 , ( ( int ) ( testclient . getofflinepublishqueuebound ( ) ) ) )
[0]: org. junit. assert. assertequals ( credentialretrievalexception, ex )
[1]: org. junit. assert. assertequals ( 1, options. specswithnonoptions ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, options. specswithnonoptions ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 2, options. specswithnonoptions ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 3, options. specswithnonoptions ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( timedelta < 10 ) )
[0]: org. junit. assert. assertnotnull ( options. specswithnonoptions ( ) )
[1]: org. junit. assert. assertnotnull ( s )
[2]: org. junit. assert. assertnotnull ( collection )
[3]: org. junit. assert. assertnotnull ( queue )
[4]: org. junit. assert. assertnotnull ( context )

************

************
tgt: org . junit . assert . assertequals ( ioexception , e )
[0]: type ) { }
[1]: org. junit. assert. assertequals ( results ( ). size ( ), 0 )
[2]: org. junit. assert. assertequals ( 0, result. results ( ). size ( )
[3]: . results ( ) )
[4]: the results ( ) )

************

************
tgt: org . junit . assert . assertnull ( result . gethost ( ) )
[0]: results ( ) )
[1]: org. junit. assert. assertequals ( 0, imageparams. ishuffmanoptimized ( ) )
[2]: org. junit. assert. assertequals ( 1, imageparams. ishuffmanoptimized ( ) )
[3]: org. junit. assert. assertequals ( null, imageparams. ishuffmanoptimized ( ) )
[4]: org. junit. assert. assertequals ( 0, imageparams. ishuffmanoptimized ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 1 , reconnectdata . getconnectionsequencenumber ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, secureevents. size ( ) )
[2]: org. junit. assert. assertequals ( 0, secureevents. size ( ) )
[3]: org. junit. assert. assertequals ( 3, secureevents. size ( ) )
[4]: org. junit. assert. assertequals ( 2, secureevents. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , timestampset )
[0]: org. junit. assert. assertequals ( 5, secureevents. size ( ) )
[1]: org. junit. assert. assertequals ( expected, s )
[2]: org. junit. assert. assertequals ( s, expected )
[3]: org. junit. assert. assertequals ( result, s )
[4]: org. junit. assert. assertequals ( sql, s )

************

************
tgt: org . junit . assert . assertfalse ( actual . next ( ) )
[0]: test s )
[1]: org. junit. assert. asserttrue ( fexisting. exists ( ) )
[2]: org. junit. assert. assertnotnull ( fexisting )
[3]: org. junit. assert. assertequals ( fexisting, f )
[4]: org. junit. assert. assertnotnull ( fexisting. getabsolutepath ( ) )

************

************
tgt: org . junit . assert . asserttrue ( vertexmap . getvertexlist ( ) . isempty ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, loggingregistry. getlogchannelfilewriterbufferids ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, loggingregistry. getlogchannelfilewriterbufferids ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( id ), loggingregistry. getlogchannelfilewriterbufferids ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( id ), loggingregistry. getlogchannelfilewriterbufferids ( ) )

************

************
tgt: org . junit . assert . assertfalse ( ( myentity == fromdb ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), loggingregistry. getlogchannelfilewriterbufferids ( ) )
[1]: org. junit. assert. assertequals ( dummytablelocation2, dummyschema2 )
[2]: org. junit. assert. assertequals ( dummytablelocation, dummyschema2 )
[3]: org. junit. assert. assertequals ( dummytablelocation1, dummyschema2 )
[4]: org. junit. assert. assertequals ( dummytablelocation2, dummyschema )

************

************
tgt: org . junit . assert . asserttrue ( ( ( identity . getlevel ( ) . compareto ( new org . picketlink . authentication . levels . internal . defaultlevel ( 1 ) ) ) == 0 ) )
[0]: org. junit. assert. assertequals ( dummytablelocation2, dummyschema1 )
[1]: org. junit. assert. assertequals ( actual, org. springframework. springfaces. message. defaultobjectmessagesourcetest. locale )
[2]: org. junit. assert. assertequals ( actual, null )
[3]: org. junit. assert. assertequals ( actual, expected )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertthat ( resourcepermission . tostring ( ) , org . hamcrest . corematchers . is ( systempermissionname ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( dataset. getwritecounter ( ) )
[2]: org. junit. assert. assertequals ( 0, dataset. getwritecounter ( ) )
[3]: org. junit. assert. assertequals ( 0, config. getwritecounter ( ) )
[4]: org. junit. assert. assertequals ( 1, dataset. getwritecounter ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( short ) ( 0 ) ) , result )
[0]: org. junit. assert. assertnotnull ( configuration. getwritecounter ( ) )
[1]: org. junit. assert. assertequals ( true, reader. isreadable ( java. lang. string. class, null, null, null ) )
[2]: org. junit. assert. asserttrue ( reader. isreadable ( java. lang. string. class, null, null, null ) )
[3]: org. junit. assert. assertequals ( false, reader. isreadable ( java. lang. string. class, null, null, null ) )
[4]: org. junit. assert. assertequals ( true, reader. isreadable ( java. lang. string. class, null, null, null, null ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , t )
[0]: type ) { } }
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertnotnull ( remoteobject. getid ( ) )
[3]: org. junit. assert. assertnull ( remoteobject. getid ( ) )
[4]: org. junit. assert. assertequals ( 0, remoteobject. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( id, remoteobject. getid ( ) )
[1]: org. junit. assert. assertequals ( 1, remoteobject. getid ( ) )
[2]: org. junit. assert. assertequals ( 1, errors. size ( ) )
[3]: org. junit. assert. assertnotnull ( clusterstatus2. getcluster ( true, org. apache. blur. manager. clusterstatus. zookeeperclusterstatustest. test ) )
[4]: org. junit. assert. assertnotnull ( clusterstatus2. getcluster ( false, org. apache. blur. manager. clusterstatus. zookeeperclusterstatustest. test ) )

************

************
tgt: org . junit . assert . assertequals ( expectedjson , objectmapper . writevalueasstring ( codesystem ) )
[0]: org. junit. assert. assertnotnull ( clusterstatus2. getcluster ( null, org. apache. blur. manager. clusterstatus. zookeeperclusterstatustest. test ) )
[1]: org. junit. assert. assertnotnull ( clusterstatus2 )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( mf. getproperties ( ) )
[4]: org. junit. assert. assertequals ( 1, mf. getproperties ( ). length )

************

************
tgt: org . junit . assert . assertequals ( "i'm<sp>stopped" , obj . getstringvalue ( ) )
[0]: org. junit. assert. assertequals ( 1, mf. getproperties ( ) )
[1]: org. junit. assert. assertequals ( 1, mf. getproperties ( ). size ( )
[2]: ) )
[3]: org. junit. assert. assertnull ( singletonmap. getonly ( ) )
[4]: org. junit. assert. assertequals ( null, singletonmap. getonly ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( cp . getvalue ( ) )
[0]: org. junit. assert. assertnull ( singletonmap )
[1]: org. junit. assert. assertnull ( singletonmap, singletonmap. getonly ( ) )
[2]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), singletonmap )
[3]: org. junit. assert. assertnotnull ( envelope )
[4]: org. junit. assert. assertnotnull ( envelope. content )

************

************
tgt: org . junit . assert . assertequals ( input , output )
[0]: org. junit. assert. assertnotnull ( envelope. getid ( ) )
[1]: org. junit. assert. assertnotnull ( envelope. body )
[2]: org. junit. assert. assertnotnull ( envelope. tostring ( ) )
[3]: org. junit. assert. assertnull ( expected. getcause ( ) )
[4]: org. junit. assert. assertequals ( 1, result. getexitvalue ( ) )

************

************
tgt: org . junit . assert . asserttrue ( lookup . isdefined ( testvariable ) )
[0]: org. junit. assert. assertequals ( 0, result. getexitvalue ( ) )
[1]: org. junit. assert. assertequals ( 1l, result. getexitvalue ( ) )
[2]: org. junit. assert. assertequals ( 0l, result. getexitvalue ( ) )
[3]: org. junit. assert. assertnotnull ( result. getexitvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, numdeleted )

************

************
tgt: org . junit . assert . assertequals ( 3 , numberofrealtrees )
[0]: org. junit. assert. assertequals ( 5, numdeleted )
[1]: org. junit. assert. assertequals ( 1, monitor. isrunning ( ) )
[2]: org. junit. assert. assertequals ( java. lang. long. tostring ( ), stream. getoutstream ( 0, file. tostring ( ), mstreamobserver ) )
[3]: org. junit. assert. assertequals ( the. getoutstream ( file. tostring ( ), mstreamobserver, default ), stream. getoutstream ( ). get ( ) )
[4]: org. junit. assert. assertequals ( the. getoutstream ( file. tostring ( ), mstreamobserver, response ), stream. getoutstream ( ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. optional. of ( file. tostring ( ) ), stream. getoutstream ( ). get ( ). tostring ( ) )
[1]: org. junit. assert. assertequals ( java. util. optional. of ( file. tostring ( ) ), stream. getoutstream ( 0, file. tostring ( ), default ) )
[2]: org. junit. assert. assertequals ( stop, fetched. getcontent ( ) )
[3]: org. junit. assert. assertequals ( stopped, fetched. getcontent ( ) )
[4]: org. junit. assert. assertequals ( updated, fetched. getcontent ( ) )

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertequals ( 1, fetched. getcontent ( ). length )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, 1 )
[3]: org. junit. assert. assertnotnull ( collection )
[4]: org. junit. assert. assertnotnull ( queue )

************

************
tgt: org . junit . assert . assertequals ( 1 , metadataauditstore . query ( query ) . size ( ) )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertequals ( 1, 1l )
[2]: org. junit. assert. assertequals ( 1, linesarray. length )
[3]: org. junit. assert. assertequals ( 0, linesarray. length )
[4]: org. junit. assert. assertequals ( 3, linesarray. length )

************

************
tgt: org . junit . assert . asserttrue ( protocolleringopdracht . isvalide ( ) )
[0]: org. junit. assert. assertnotnull ( collection )
[1]: org. junit. assert. assertnotnull ( mlist )
[2]: org. junit. assert. assertnotnull ( union )
[3]: org. junit. assert. assertnotnull ( guaranteed )
[4]: org. junit. assert. assertnotnull ( inmemory )

************

************
tgt: org . junit . assert . assertequals ( expected , sink . tostring ( ) )
[0]: org. junit. assert. assertthat ( context. getrequestattribute ( expectedattributename ), org. hamcrest. corematchers. is ( expectedattributevalue ) )
[1]: org. junit. assert. assertthat ( context. getrequestattribute ( expectedattributename ), org. hamcrest. matchers. is ( expectedattributevalue ) )
[2]: org. junit. assert. assertequals ( expectedattributevalue, context. getrequestattribute ( expectedattributename ) )
[3]: org. junit. assert. assertthat ( context, org. hamcrest. core. is. is ( expectedattributevalue ) )
[4]: org. junit. assert. assertequals ( expectedattributename, context. getrequestattribute ( expectedattributename ) )

************

************
tgt: org . junit . assert . assertequals ( "" , result )
[0]: org. junit. assert. assertequals ( 1, resultrowkeys. size ( ) )
[1]: org. junit. assert. assertequals ( 0, resultrowkeys. size ( ) )
[2]: org. junit. assert. assertequals ( 1, resultsrowkeys. size ( ) )
[3]: org. junit. assert. assertequals ( 2, resultrowkeys. size ( ) )
[4]: org. junit. assert. assertequals ( 3, resultrowkeys. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( e )
[0]: org. junit. assert. asserttrue ( org. roaringbitmap. roaringbitmap. arrays. equals ( arrayor, arrayrr ) )
[1]: org. junit. assert. assertnull ( costs )
[2]: org. junit. assert. assertequals ( null, costs )
[3]: org. junit. assert.null ( costs )
[4]: org. junit. assert. assertnull ( costs, id )

************

************
tgt: org . junit . assert . assertthat ( command . accept ( state ) , org . hamcrest . core . is . is ( false ) )
[0]: org. junit. assert. assertnull ( costs, null )
[1]: org. junit. assert. assertthat ( reader. next ( ), is ( true ) )
[2]: org. junit. assert. asserttrue ( result. passedvalidation ( ) )
[3]: org. junit. assert. assertequals ( true, result. passedvalidation ( ) )
[4]: org. junit. assert. assertequals ( 0, p. hashcode ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( response )
[0]: org. junit. assert. assertequals ( p. hashcode ( ), java. lang. long. valueof ( p. hashcode ( ) ) )
[1]: org. junit. assert. assertequals ( p. hashcode ( ), 1 )
[2]: org. junit. assert. assertequals ( p. hashcode ( ), java. lang. integer. valueof ( p. hashcode ( ) ) )
[3]: org. junit. assert. assertequals ( 1, p. hashcode ( ) )
[4]: org. junit. assert. asserttrue ( mrlocalcluster. getuseinjvmcontainerexecutor ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( org . societies . security . policynegotiator . util . valuegenerator . generateuniqueint ( ) ) != ( org . societies . security . policynegotiator . util . valuegenerator . generateuniqueint ( ) ) ) )
[0]: org. junit. assert. assertnotnull ( mrlocalcluster. getuseinjvmcontainerexecutor ( ) )
[1]: org. junit. assert. assertthat ( result, is ( expected ) )
[2]: org. junit. assert. assertthat ( result, is ( true ) )
[3]: org. junit. assert. assertthat ( actual, is ( expected ) )
[4]: org. junit. assert. assertthat ( instance, is ( expected ) )

************

************
tgt: org . junit . assert . assertsame ( elem , mergeelem )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, lines. size ( ) )
[2]: org. junit. assert. assertequals ( 1, lines. size ( ) )
[3]: org. junit. assert. assertequals ( 3, lines. size ( ) )
[4]: org. junit. assert. assertnotnull ( lines )

************

************
tgt: org . junit . assert . assertequals ( xmlesperado , com . fincatto . documentofiscal . nfe310 . fabricadeobjetosfake . getnfeventomanifestacaodestinatario ( ) . tostring ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, hashes. size ( ) )
[2]: org. junit. assert. assertequals ( zeroalgorithms. size ( ), hashes. size ( ) )
[3]: org. junit. assert. assertequals ( zeroalgorithms, hashes. size ( ) )
[4]: org. junit. assert. assertequals ( 1, hashes. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( programmes . hasnext ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( org. milyn. xml. n. class, writer. tostring ( ) )
[2]: org. junit. assert. assertequals ( ""foo"", writer. tostring ( ) )
[3]: org. junit. assert. assertequals ( ""a"", writer. tostring ( ) )
[4]: org. junit. assert. assertequals ( org. milyn. xml. n. class, writer. tostring ( ) )

************

************
tgt: org . junit . assert . assertfalse ( site . login ( "post" 2 , "post" 0 , http ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( complex. nan, complex. tan ( ) )
[2]: org. junit. assert. assertequals ( complex. nan, complex. tan ( ). isnan ( ) )
[3]: org. junit. assert. assertequals ( complex. nan. tan ( ), complex. nan. tan ( ) )
[4]: org. junit. assert. assertequals ( complex. nan. tan ( ), complex. nan )

************

************
tgt: org . junit . assert . assertequals ( ( ( short ) ( 0 ) ) , data . getdata ( ) )
[0]: org. junit. assert. assertequals ( complex. nan, com. google. common. collect. immutablelist. tan ( ) )
[1]: org. junit. assert. assertequals ( expectedval, returnval )
[2]: org. junit. assert. assertequals ( expectedval. substring ( 1 ), returnval )
[3]: org. junit. assert. assertequals ( expectedval. substring ( 0 ), returnval )
[4]: org. junit. assert. assertequals ( expectedval, returnval )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( expected val, returnval )
[1]: org. junit. assert. assertfalse ( warninglogged. get ( ) )
[2]: org. junit. assert. assertfalse ( warnlogged. get ( ) )
[3]: org. junit. assert. assertfalse ( errorlogged. get ( ) )
[4]: org. junit. assert. assertequals ( 0, version1. compareto ( version2 ) )

************

************
tgt: org . junit . assert . assertthat ( stmt . getmaxrows ( ) , org . hamcrest . core . is . is ( 0 ) )
[0]: org. junit. assert. asserttrue ( ( ( version1. compareto ( version2 ) ) < 0 ) )
[1]: org. junit. assert. assertequals ( 1, version1. compareto ( version2 ) )
[2]: org. junit. assert. asserttrue ( ( ( version1. compareto ( version2 ) ) == 0 ) )
[3]: org. junit. assert. asserttrue ( ( ( java. lang. boolean ) ( actualresult ) ) )
[4]: org. junit. assert. assertequals ( java. lang. boolean. valueof ( true ), actualresult )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( supportconst. i_three, actualresult )
[1]: org. junit. assert. assertnull ( actualresult )
[2]: org. junit. assert. assertequals ( java. lang. boolean. valueof ( false ), actualresult )
[3]: org. junit. assert. assertequals ( f, read ( f ) )
[4]: org. junit. assert. assertequals ( f, read ( f. tostring ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( expectedids , ids )
[0]: org. junit. assert. assertequals ( 1, read ( f ) )
[1]: org. junit. assert. assertequals ( null, read ( f ) )
[2]: ) )
[3]: org. junit. assert. assertthat ( asbyte, org. hamcrest. corematchers. is ( value. getbsontype ( asbyte ) ) )
[4]: org. junit. assert. assertequals ( asbyte, com. torodb. mongowp. bson. netty. parsingtools. getbsontype ( asbyte ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertthat ( java. lang. string. valueof ( types [ 0 ] ), org. hamcrest. corematchers. is ( value ) )
[1]: org. junit. assert. assertthat ( java. lang. string. valueof ( types [ 0 ] ), org. hamcrest. corematchers. is ( asbyte ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, this. workspacemanager. getbeanscount ( workspace ) )
[4]: org. junit. assert. assertequals ( 1, this. workspacemanager. getbeanscount ( workspace ) )

************

************
tgt: org . junit . assert . assertequals ( expected , new java . awt . color ( result ) )
[0]: org. junit. assert. assertequals ( 2, this. workspacemanager. getbeanscount ( workspace ) )
[1]: org. junit. assert. assertequals ( 0, this. clustermanager. getbeanscount ( workspace ) )
[2]: org. junit. assert. assertequals ( 1, this. clustermanager. getbeanscount ( workspace ) )
[3]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. validation. validators. put ), result. passedvalidation ( ) )
[4]: org. junit. assert. assertnotnull ( resultmessage ( result, org. openstack. atlas. api. validation. validators. put ), result. passedvalidation ( ) )

************

************
tgt: org . junit . assert . assertequals ( labelprovider , viewer . getlabelprovider ( ) )
[0]: org. junit. assert. assertequals ( 1, resultmessage ( result, org. openstack. atlas. api. validation. validators. put ). size ( ) )
[1]: org. junit. assert. assertnull ( resultmessage ( result, org. openstack. atlas. api. validation. validators. put ), result. passedvalidation ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, cache. size ( ) )
[4]: org. junit. assert. assertequals ( 5, cache. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( report . haserror ( ) )
[0]: org. junit. assert. assertequals ( 0, cache. size ( ) )
[1]: org. junit. assert. assertequals ( 7, cache. size ( ) )
[2]: org. junit. assert. assertequals ( 6, cache. size ( ) )
[3]: org. junit. assert. assertnotnull ( st )
[4]: org. junit. assert. assertequals ( 1, getdatasourcefromconfiguration ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( list . size ( ) ) == 2 ) )
[0]: org. junit. assert. assertnotnull ( getdatasourcefromconfiguration ( ) )
[1]: org. junit. assert. assertnotnull ( getdatasourcefromconfiguration ( ). getname ( ) )
[2]: org. junit. assert. assertequals ( 0, getdatasourcefromconfiguration ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( getdatasourcefromconfiguration ( ). get ( 0 ) )
[4]: org. junit. assert. assertthat ( cache. size ( ), org. hamcrest. corematchers. is ( 3 ) )

************

************
tgt: org . junit . assert . asserttrue ( "this<sp>test<sp>should<sp>not<sp>pass<sp>on<sp>sql<sp>server" , false )
[0]: org. junit. assert. assertthat ( cache. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertequals ( 0, parsed. length )
[2]: org. junit. assert. assertequals ( 1, parsed. length )
[3]: org. junit. assert. assertnull ( parsed )
[4]: org. junit. assert. assertarrayequals ( null, parsed )

************

************
tgt: org . junit . assert . assertequals ( "a" 1 , found )
[0]: org. junit. assert. assertnotnull ( parsed )
[1]: org. junit. assert. assertnull ( mockprojectoperations. convertfromtext ( modulename, modulename, null ) )
[2]: org. junit. assert. assertequals ( null, mockprojectoperations. convertfromtext ( modulename, modulename, null ) )
[3]: org. junit. assert. assertnull ( mockprojectoperations. convertfromtext ( modulename, modulename, mockpom ) )
[4]: org. junit. assert. assertnull ( mockprojectoperations. convertfromtext ( modulename, null, null ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: ) )
[1]: org. junit. assert. assertnull ( node. getrootnode ( ) )
[2]: org. junit. assert. assertnull ( root. getrootnode ( ) )
[3]: org. junit. assert. assertnull ( subnode. getrootnode ( ) )
[4]: org. junit. assert. assertnull ( node )

************

************
tgt: org . junit . assert . assertsame ( org . apache . jackrabbit . oak . spi . security . authorization . permission . emptypermissionprovider . getinstance ( ) , permissionprovider )
[0]: org. junit. assert. assertnull ( node. getrootnode )
[1]: org. junit. assert. assertnotnull ( uploadresponse )
[2]: org. junit. assert. assertnotnull ( uploadresponse. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( uploadresponse. build ( ) )
[4]: org. junit. assert. assertnotnull ( uploadrequest )

************

************
tgt: org . junit . assert . assertnull ( o )
[0]: org. junit. assert. assertnotnull ( upload uploadresponse )
[1]: org. junit. assert. assertarrayequals ( guests, updated. getguestids ( ) )
[2]: org. junit. assert. assertarrayequals ( guests, updated. getguestids ( ). toarray ( ) )
[3]: org. junit. assert. assertequals ( 1, updated. getguestids ( ). size ( ) )
[4]: org. junit. assert. asserttrue ( java. util. arrays. equals ( guests, updated. getguestids ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, updated. getguestids ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, pathspec. getdatasources ( pathspec ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, pathspec. getdatasources ( new org. apache. druid. indexer. hadoop. datasourceinputformat. configuration ( ) ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, pathspec. getdatasources ( new org. apache. druid. indexer. hadoop. datasourceinputformat. arraylist ( ) ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, pathspec. getdatasources ( new org. apache. druid. indexer. hadoop. datasourceinputformat. persisted ( ) ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. asserttrue ( pathspec. getdatasources ( pathspec ). isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, updatedval )
[2]: org. junit. assert. assertequals ( expected, updatedval )
[3]: org. junit. assert. assertequals ( 0, updatedval )
[4]: org. junit. assert. assertequals ( expected, properties )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertequals ( newexpression. getcronexpression ( ). size ( ), 1 )
[2]: org. junit. assert. assertequals ( newexpression. getcronexpression ( ), cronexpression )
[3]: org. junit. assert. assertequals ( newexpression, cronexpression. getcronexpression ( ) )
[4]: org. junit. assert. assertequals ( newexpression. getcronexpression ( ). size ( ), 3 )

************

************
tgt: org . junit . assert . assertnull ( variablevalue )
[0]: org. junit. assert. assertequals ( newexpression. getcronexpression ( ). size ( ), 2 )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( 9, n. getsize ( ) )
[3]: org. junit. assert. assertequals ( 1, n. getsize ( ) )
[4]: org. junit. assert. assertequals ( 9999, n. getsize ( ) )

************

************
tgt: org . junit . assert . assertsame ( result , callback . get ( ) )
[0]: org. junit. assert. assertequals ( 930, n. getsize ( ) )
[1]: org. junit. assert. assertequals ( 0, n. getsize ( ) )
[2]: org. junit. assert. assertnotnull ( date )
[3]: org. junit. assert. assertequals ( datestring, date )
[4]: org. junit. assert. assertnotnull ( date. getcookieheaders ( ) )

************

************
tgt: org . junit . assert . assertthat ( annisresult . gettokenlist ( ) , org . hamcrest . matchers . is ( expected ) )
[0]: org. junit. assert. assertnull ( date )
[1]: ) )
[2]: org. junit. assert. assertequals ( ( ( char ) ( i ++ ) ), list. get ( x ) )
[3]: org. junit. assert. assertequals ( ( ( char ) ( i ++ ) ), cut. get ( x ) )
[4]: org. junit. assert. assertequals ( ( ( char ) ( ( i ++ ) + 1 ) ), list. get ( x ) )

************

************
tgt: org . junit . assert . assertfalse ( a . equals ( b ) )
[0]: org. junit. assert. assertequals ( ( ( char ) ( ( ( i ++ ) + 1 ) + i ) ), list. get ( x ) )
[1]: org. junit. assert. assertequals ( ( ( char ) ( ( ( i ++ ) + 1 ) + i ) ), cut. get ( x ) )
[2]: org. junit. assert. assertequals ( true, evaluate ( context ) )
[3]: org. junit. assert. assertequals ( true, evaluate ( null ) )
[4]: org. junit. assert. assertequals ( 1, evaluate ( context ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , overtreders . size ( ) )
[0]: org. junit. assert. assertnotnull ( evaluate ( context ) )
[1]: org. junit. assert. assertequals ( null, evaluate ( context ) )
[2]: org. junit. assert. assertnotnull ( eventbusservice. getimplementation ( ) )
[3]: org. junit. assert. assertequals ( eventbusservice. getimplementation ( ), eventbusservice )
[4]: org. junit. assert. assertequals ( eventbusservice, eventbusservice. getimplementation ( ) )

************

************
tgt: org . junit . assert . asserttrue ( grid . getlinesvisible ( ) )
[0]: org. junit. assert. assertequals ( eventbusservice. getimplementation ( ), eventbusservice. size ( ) )
[1]: org. junit. assert. assertequals ( eventbusservice. getimplementation ( ), eventbusservice. tostring ( ) )
[2]: org. junit. assert. assertnotnull ( org. gitlab4j. api. jsonutils. comparejson ( commitpayload, commitpayload ) )
[3]: org. junit. assert. assertequals ( 1, org. gitlab4j. api. jsonutils. comparejson ( commitpayload, commitpayload ) )
[4]: org. junit. assert. asserttrue ( org. gitlab4j. api. jsonutils. comparejson ( commitpayload, commitpayload ) )

************

************
tgt: org . junit . assert . asserttrue ( listvalue )
[0]: org. junit. assert. asserttrue ( org. gitlab4j. api. jsonutils. comparejson ( commitpayload, commitpayload. tostring ( ) ) )
[1]: org. junit. assert. assertnotnull ( org. gitlab4j. api. jsonutils. comparejson ( commitpayload, commitpayload. tostring ( ) ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertequals ( result, 200 )

************

************
tgt: org . junit . assert . assertequals ( 10000 , map . entryset ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( result, null )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, assignments. size ( ) )
[3]: org. junit. assert. assertequals ( 1, assignments. size ( ) )
[4]: org. junit. assert. assertequals ( 0, assignments. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( isready )
[0]: org. junit. assert. assertequals ( 0l, assignments. size ( ) )
[1]: org. junit. assert. assertequals ( zero, assignments. size ( ) )
[2]: org. junit. assert. assertnotnull ( exception. getmessage ( ) )
[3]: org. junit. assert. assertequals ( ""foo"", exception. getmessage ( ) )
[4]: org. junit. assert. assertequals ( ""test"", exception. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( "current" , authzdepconf . get ( currentvar . getvar ( ) ) )
[0]: org. junit. assert. assertequals ( ""a"", exception. getmessage ( ) )
[1]: org. junit. assert. assertnotnull ( exception. getmessage ( ) )
[2]: org. junit. assert. assertequals ( 1, resultfromjpql. size ( ) )
[3]: org. junit. assert. assertnotnull ( resultfromjpql )
[4]: org. junit. assert. assertequals ( 0, resultfromjpql. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. asserttrue ( resultfromjpql. isempty ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( org. nuxeo. ecm. core. storage. sql. jdbc. dialect. testdialectsubclassing. dialectdummy )
[3]: org. junit. assert. assertequals ( java. lang. string. class, dialect. getclass ( ) )
[4]: org. junit. assert. assertequals ( java. util. list. class, dialect )

************

************
tgt: org . junit . assert . assertequals ( state . idle , state )
[0]: org. junit. assert. assertnotnull ( dialect )
[1]: org. junit. assert. assertnull ( dialect )
[2]: org. junit. assert. assertnotnull ( pet. getage ( ) )
[3]: org. junit. assert. assertequals ( 98, pet. getage ( ) )
[4]: org. junit. assert. assertequals ( 10, pet. getage ( ) )

************

************
tgt: org . junit . assert . assertequals ( dsd , dea . getapprovaldataset ( ) )
[0]: org. junit. assert. assertnotnull ( pet )
[1]: ) )
[2]: org. junit. assert. asserttrue ( breakers. isempty ( ) )
[3]: org. junit. assert. assertnotnull ( breakers )
[4]: org. junit. assert. asserttrue ( breakers. contains ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( enhanced )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 1, context [ 0 ] )
[3]: org. junit. assert. assertequals ( 1, c [ 0 ] )
[4]: org. junit. assert. assertnotnull ( result. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( accesstoken . gettoken ( ) , "" )
[0]: org. junit. assert. assertequals ( null, result. getmessage ( ) )
[1]: org. junit. assert. assertequals ( 1, result. getmessage ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, result. getmessage ( ). length ( ) )
[3]: org. junit. assert. assertnull ( result. getmessage ( ) )
[4]: org. junit. assert. assertnotnull ( matchmaterial ( name ) )

************

************
tgt: org . junit . assert . assertnull ( actual )
[0]: org. junit. assert. assertequals ( material, matchmaterial ( name ) )
[1]: org. junit. assert. assertnotnull ( org. apache. commons. lang. validate. matchmaterial ( name ) )
[2]: org. junit. assert. assertnull ( matchmaterial ( name ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, snap. child ( 0 ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( isop )
[0]: org. junit. assert. assertnotnull ( snap )
[1]: org. junit. assert. assertequals ( 1, snap. child ( 1 ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, snap. child ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, snap. child ( null ). size ( ) )
[4]: org. junit. assert. assertthat ( data. items ( ). size ( ), org. hamcrest. matchers. is ( 3 ) )

************

************
tgt: org . junit . assert . assertequals ( "hello" , filterresult . getvalue ( ) )
[0]: org. junit. assert. assertthat ( data. items ( ). size ( ), org. hamcrest. matchers. is ( 1 ) )
[1]: org. junit. assert. assertthat ( matchesallof. testitemproperties ( ), org. hamcrest. matchers. is ( true ) )
[2]: org. junit. assert. assertthat ( matchesallof )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. is ( testitemproperties ) )
[4]: org. junit. assert. assertequals ( 1, customers. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , chatids . size ( ) )
[0]: org. junit. assert. assertequals ( calendar, updated )
[1]: org. junit. assert. assertsame ( calendar, updated )
[2]: org. junit. assert. assertequals ( date, updated )
[3]: org. junit. assert. assertsame ( updated, pool )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( uaicriteria )
[0]: org. junit. assert. assertequals ( 1, sum )
[1]: org. junit. assert. assertequals ( 0, sum )
[2]: org. junit. assert. assertequals ( 5, sum )
[3]: org. junit. assert. assertequals ( 1l, sum )
[4]: org. junit. assert. assertequals ( 6, sum )

************

************
tgt: org . junit . assert . assertequals ( existinglayoutpagetemplatecollection , newlayoutpagetemplatecollection )
[0]: org. junit. assert. assertequals ( 1, counter. get ( ) )
[1]: org. junit. assert. assertequals ( 0, counter. get ( ) )
[2]: org. junit. assert. assertequals ( 3, counter. get ( ) )
[3]: org. junit. assert. assertequals ( 2, counter. get ( ) )
[4]: org. junit. assert. assertequals ( 1, count. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( persoonhisvolledig , resultaat )
[0]: org. junit. assert. assertequals ( sb2. tostring ( ), sb. tostring ( ) )
[1]: org. junit. assert. assertequals ( sb2. tostring ( ), found )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4 ), list )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), list )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 4, 3, 2 ), list )

************

************
tgt: org . junit . assert . assertequals ( "mozart" , result . getbidder ( ) . getname ( ) )
[0]: org. junit. assert. assertnotnull ( list )
[1]: org. junit. assert. asserttrue ( list. isempty ( ) )
[2]: org. junit. assert. asserttrue ( this. transactions [ 0 ]. isactive ( ) )
[3]: org. junit. assert. asserttrue ( there. isactive ( ) )
[4]: org. junit. assert. asserttrue ( this. manager. isactive ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( ew . maxweightcutoff ) == 0.4 ) )
[0]: org. junit. assert. asserttrue ( store. isactive ( ) )
[1]: org. junit. assert. asserttrue ( this. manager. isactive ( ). isempty ( ) )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( first, result )
[4]: org. junit. assert. assertequals ( e, result )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( 0, result )
[1]: org. junit. assert. assertequals ( 1, result )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( 0, result ) ;
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( service )
[0]: org. junit. assert. asserttrue ( user. equals ( null ) )
[1]: org. junit. assert. asserttrue ( user. equals ( data ) )
[2]: org. junit. assert. asserttrue ( user. equals ( obj ) )
[3]: org. junit. assert. asserttrue ( user. equals ( result ) )
[4]: org. junit. assert. assertnotnull ( user )

************

************
tgt: org . junit . assert . assertnotnull ( marytts . server . maryproperties . moduleinitinfo ( ) )
[0]: org. junit. assert. assertfalse ( hashtable. containskey ( value ) )
[1]: org. junit. assert. assertequals ( 0, hashtable. containskey ( value ) )
[2]: org. junit. assert. assertequals ( false, hashtable. containskey ( value ) )
[3]: org. junit. assert. assertnull ( hashtable. containskey ( value ) )
[4]: org. junit. assert. asserttrue ( hashtable. containskey ( value ) )

************

************
tgt: org . junit . assert . assertequals ( true , llcup . getmapparameters ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( sb. tostring ( ), sb. tostring ( ) )
[1]: org. junit. assert. assertequals ( sb. tostring ( ), result )
[2]: org. junit. assert. assertequals ( sb. tostring ( ), s )
[3]: . tostring ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , decoded . getvariableresfingerprints ( ) . size ( ) )
[0]: org. junit. assert. assertnotnull ( res )
[1]: org. junit. assert. assertequals ( 1, res. size ( ) )
[2]: org. junit. assert. assertequals ( 0, res. size ( ) )
[3]: org. junit. assert. assertequals ( null, res )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( existinglocalizedentry , newlocalizedentry )
[0]: org. junit. assert. assertnotnull ( epi. getpolicy ( ) )
[1]: org. junit. assert. assertequals ( sp, epi. getpolicy ( ) )
[2]: org. junit. assert. assertequals ( si, epi. getpolicy ( ) )
[3]: org. junit. assert. assertequals ( 1, epi. getpolicy ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, epi. getpolicy ( ) )

************

************
tgt: org . junit . assert . assertsame ( org . joda . money . testbigmoney . gbp_2_34 , test )
[0]: org. junit. assert. assertnotnull ( c. getitem ( ) )
[1]: org. junit. assert. assertequals ( i, c. getitem ( ) )
[2]: org. junit. assert. assertequals ( 1, c. getitem ( ). size ( ) )
[3]: org. junit. assert. assertequals ( i, c. getitem ( ). size ( ) )
[4]: org. junit. assert. assertequals ( c. getitem ( ), i )

************

************
tgt: org . junit . assert . assertthat ( config1 . activeinterfaces ( ) , org . hamcrest . matchers . equalto ( com . google . common . collect . immutableset . of ( notignored , notignored2 , notignored3 , notignored4 , notignored5 ) ) )
[0]: org. junit. assert. assertequals ( 0, result. length )
[1]: org. junit. assert. assertequals ( 1, result. length )
[2]: org. junit. assert. asserttrue ( ( ( result. length ) == 0 ) )
[3]: org. junit. assert. assertnull ( result )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "test" , str )
[0]: org. junit. assert. assertequals ( 1, projects. size ( ) )
[1]: org. junit. assert. assertequals ( 0, projects. size ( ) )
[2]: org. junit. assert. assertequals ( 3, projects. size ( ) )
[3]: org. junit. assert. assertequals ( 2, projects. size ( ) )
[4]: org. junit. assert. assertequals ( 4, projects. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( getreplheader ( ) )
[0]: org. junit. assert. assertequals ( ds. getcontent ( ), contentstring )
[1]: org. junit. assert. assertequals ( ds, contentstring )
[2]: org. junit. assert. assertequals ( ""test"", contentstring )
[3]: org. junit. assert. assertnotnull ( contentstring )
[4]: org. junit. assert. assertequals ( ds. getcontent ( ), contentstring )

************

************
tgt: org . junit . assert . assertequals ( stereo . clockwise , chirality . getstereo ( ) )
[0]: org. junit. assert. assertequals ( 1, org. camunda. bpm. spring. boot. starter. webapp. filter. lazyinitregistration. getregistrations ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, org. camunda. bpm. spring. boot. starter. webapp. filter. lazyinitregistration. getregistrations ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. camunda. bpm. spring. boot. starter. webapp. filter. lazyinitregistration. getregistrations ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. camunda. bpm. spring. boot. starter. webapp. filter. lazyinitregistration. getregistrations ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. camunda. bpm. spring. boot. starter. webapp. filter. lazyinitregistration. getregistrations ( ). isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( cause , response . cause ( ) )
[0]: org. junit. assert. assertequals ( true, accepts )
[1]: org. junit. assert. assertequals ( false, accepts )
[2]: org. junit. assert. assertnull ( curve. output ( ) )
[3]: org. junit. assert. assertfalse ( curve. output ( ) )
[4]: org. junit. assert. assertequals ( 0, curve. output ( ) )

************

************
tgt: org . junit . assert . assertequals ( flowstate . vserver_retrieveguest , newstate )
[0]: org. junit. assert. assertequals ( 0, curve. output ( ). length )
[1]: org. junit. assert. assertnotnull ( curve. output ( ) )
[2]: org. junit. assert. assertequals ( 1, beans. size ( ) )
[3]: org. junit. assert. assertequals ( 0, beans. size ( ) )
[4]: org. junit. assert. assertequals ( 1, bean. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( tenantidprovider . parameters . size ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( 3, beans. size ( ) )
[1]: org. junit. assert. assertequals ( 0, bean. size ( ) )
[2]: org. junit. assert. assertequals ( 1, desc. size ( ) )
[3]: org. junit. assert. assertequals ( 4, desc. size ( ) )
[4]: org. junit. assert. assertequals ( 0, desc. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( helper . isnotificationenabled ( ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( 9, desc. size ( ) )
[1]: org. junit. assert. assertequals ( 3, desc. size ( ) )
[2]: org. junit. assert. assertnull ( subject )
[3]: org. junit. assert. assertnotnull ( subject )
[4]: org. junit. assert. assertnull ( subject. controleer ( null, null, null, null ) )

************

************
tgt: org . junit . assert . asserttrue ( validrequest )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 1, count )
[3]: org. junit. assert. assertequals ( 0, count )
[4]: org. junit. assert. assertequals ( 3, count )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 5, count )
[1]: org. junit. assert. assertequals ( 4, count )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( result, be. bagofwords. util. keyvalue )

************

************
tgt: org . junit . assert . asserttrue ( pojo . get ( 0 ) . str . contains ( "a" ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: ) )
[2]: org. junit. assert. assertequals ( s, expected [ 0 ] )
[3]: org. junit. assert. assertequals ( s, expected [ 1 ] )
[4]: org. junit. assert. assertnull ( boom )

************

************
tgt: org . junit . assert . asserttrue ( equals )
[0]: org. junit. assert. assertequals ( 0, boom. data. size ( ) )
[1]: org. junit. assert. assertequals ( null, boom. data )
[2]: org. junit. assert. assertequals ( 1, boom. data. size ( ) )
[3]: org. junit. assert. assertequals ( null, boom )
[4]: org. junit. assert. assertequals ( false, validationresult. haserror ( ) )

************

************
tgt: org . junit . assert . assertnull ( dao . get ( r ) )
[0]: org. junit. assert. assertequals ( true, validationresult. haserror ( ) )
[1]: org. junit. assert. assertfalse ( validationresult. haserror ( ) )
[2]: org. junit. assert. assertequals ( 0, validationresult. haserror ( ) )
[3]: org. junit. assert. assertnull ( switchmanager. getswitch ( net. floodlightcontroller. core. internal. ofswitchmanagertest. datapath_id_1 ) )
[4]: org. junit. assert. assertequals ( origsw, getswitch ( net. floodlightcontroller. core. internal. ofswitchmanagertest. datapath_id_1 ) )

************

************
tgt: org . junit . assert . asserttrue ( io . strimzi . operator . cluster . operator . resource . zookeepersetoperator . needsrollingupdate ( diff ( ) ) )
[0]: org. junit. assert. assertnotnull ( switchmanager. getswitch ( net. floodlightcontroller. core. internal. ofswitchmanagertest. datapath_id_1 ) )
[1]: org. junit. assert. assertnull ( switchmanager. getswitch ( origsw ) )
[2]: org. junit. assert. assertnull ( switchmanager. getswitch ( net. floodlightcontroller. core. internal. whereswitchmanagertest. datapath_id_1 ) )
[3]: org. junit. assert. assertequals ( jmscorrelationid, result. getjmscorrelationidasbytes ( ) )
[4]: org. junit. assert. assertequals ( jmscorrelationid, result. getjmscorrelationidasbytes ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( jmscorrelationid, result. getjmscorrelationidasbytes ( ). tostring ( ) )
[1]: org. junit. assert. assertequals ( jmscorrelationid, result )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertnotnull ( jge. getmessage ( ) )
[4]: org. junit. assert. assertequals ( this. emptybaserequest. getmessage ( ), this. message )

************

************
tgt: org . junit . assert . assertequals ( 0 , rpt . size ( ) )
[0]: org. junit. assert. assertequals ( this. emptybaserequest. getmessage ( ),
[1]: org. junit. assert. assertequals ( this. emptybaserequest. getmessage ( ), msg )
[2]: ) )
[3]: org. junit. assert. assertequals ( expectedbatchbody, testbatchbody )
[4]: org. junit. assert. assertarrayequals ( expectedbatchbody. getbytes ( ), testbatchbody )

************

************
tgt: org . junit . assert . assertequals ( 200 , response . getstatuscode ( ) )
[0]: org. junit. assert. asserttrue ( testbatchbody. contains ( expectedbatchbody ) )
[1]: org. junit. assert. assertequals ( expectedbatchbody, testsbatchbody )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, models. size ( ) )
[4]: org. junit. assert. assertequals ( 0, models. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( control , key )
[0]: org. junit. assert. assertequals ( 3, models. size ( ) )
[1]: org. junit. assert. assertequals ( 1, models. size ( ) )
[2]: org. junit. assert. assertequals ( 1, models. size ( ) )
[3]: org. junit. assert. assertequals ( 1, nodes. size ( ) )
[4]: org. junit. assert. assertequals ( 0, nodes. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( 1, node. size ( ) )
[1]: org. junit. assert. assertequals ( 1, nodes. size ( ) )
[2]: org. junit. assert. assertequals ( 1, nodes. size ( ) )
[3]: org. junit. assert. assertequals ( statusstring, statusstring )
[4]: org. junit. assert. assertequals ( statusstring, data1 )

************

************
tgt: org . junit . assert . assertnotnull ( fixture )
[0]: org. junit. assert. assertequals ( statusstring, result )
[1]: org. junit. assert. assertequals ( statusstring, s )
[2]: org. junit. assert. assertequals ( statusstring, info )
[3]: org. junit. assert. assertnotnull ( request. getid ( ) )
[4]: org. junit. assert. assertequals ( t1, request. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedregex , pattern . compiled ( ) . tostring ( ) )
[0]: org. junit. assert. assertnotnull ( request. getid ( ). getid ( ) )
[1]: org. junit. assert. assertnull ( request. getid ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( pe )
[4]: org. junit. assert. assertnotnull ( pe. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( config1 , config2 )
[0]: org. junit. assert. assertnotnull ( ssloptions. getalias ( ) )
[1]: org. junit. assert. assertequals ( ssloptions. getalias ( ), serviceoptions )
[2]: org. junit. assert. assertequals ( ssloptions, ssloptions. getalias ( ) )
[3]: org. junit. assert. assertnull ( ssloptions. getalias ( ) )
[4]: org. junit. assert. assertequals ( serviceoptions, ssloptions. getalias ( ) )

************

************
tgt: org . junit . assert . assertfalse ( org . teiid . net . teiidurl . isvalidserverurl ( server_url ) )
[0]: org. junit. assert. assertequals ( events. size ( ), 1 )
[1]: org. junit. assert. assertequals ( 1, events. size ( ) )
[2]: org. junit. assert. assertequals ( events. length, 1 )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( testresource , dummyresource )
[0]: org. junit. assert. assertnotnull ( ex. getmessage ( ) )
[1]: org. junit. assert. assertequals ( null, ex. getmessage ( ) )
[2]: org. junit. assert. assertequals ( string_1, ex. getmessage ( ) )
[3]: . getmessage ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( storage . readactivestate ( com . spotify . styx . storage . datastorestoragetest . workflow_instance1 ) , org . hamcrest . matchers . is ( java . util . optional . of ( com . spotify . styx . storage . datastorestoragetest . run_state ) ) )
[0]: org. junit. assert. assertnotnull ( scope. getname ( ) )
[1]: org. junit. assert. assertequals ( name, scope. getname ( ) )
[2]: org. junit. assert. assertequals ( null, scope. getname ( ) )
[3]: org. junit. assert. assertequals ( string, scope. getname ( ) )
[4]: org. junit. assert. assertnull ( scope. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actualquery )
[0]: org. junit. assert. assertequals ( result, expected )
[1]: org. junit. assert. assertequals ( result, null )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( result, test )
[4]: org. junit. assert. assertequals ( result, testutils. fail )

************

************
tgt: org . junit . assert . assertequals ( 0 , d . parameters ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 1, uvp. getdasharray ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, uvp. getdasharray ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, uvp. getdasharray ( ). length )
[3]: org. junit. assert. assertarrayequals ( ls, uvp. getdasharray ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ls ), uvp )

************

************
tgt: org . junit . assert . assertnull ( request . getsession ( ) )
[0]: org. junit. assert. assertnotnull ( lastversion )
[1]: org. junit. assert. assertnotnull ( input )
[2]: org. junit. assert. assertequals ( input, input )
[3]: org. junit. assert. assertequals ( input, expected )
[4]: org. junit. assert. assertequals ( input, output )

************

************
tgt: org . junit . assert . asserttrue ( list . contains ( element ) )
[0]: org. junit. assert. assertequals ( input, result )
[1]: org. junit. assert. assertequals ( null, resultsystemjobrunresponse. getkey ( ) )
[2]: org. junit. assert. assertequals ( 1, resultsystemjobrunresponse. getkey ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, resultsystemjobrunresponse. getkey ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, resultsystemjobrunresponse. getkey ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 0 , meldingen . size ( ) )
[0]: org. junit. assert. assertequals ( null, resultsystemjobrunresponse )
[1]: org. junit. assert. assertnotnull ( getorganizationdata ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), getorganizationdata ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), getorganizationdata ( ) )
[4]: org. junit. assert. assertequals ( 1, getorganizationdata ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( event instanceof gov . hhs . fha . nhinc . event . responder . begininboundprocessingevent ) )
[0]: org. junit. assert. assertequals ( null, getorganizationdata ( ) )
[1]: org. junit. assert. assertequals ( nodes. tostring ( ), builder. tostring ( ) )
[2]: org. junit. assert. assertequals ( 1, builder. tostring ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, builder. tostring ( ). length )
[4]: org. junit. assert. assertequals ( 1, builder. tostring ( ). length ( ) )

************

************
tgt: org . junit . assert . assertthat ( this . end . minus ( period ) , org . hamcrest . corematchers . is ( this . start ) )
[0]: org. junit. assert. assertequals ( builder. tostring ( ), teststring )
[1]: org. junit. assert. assertnull ( org. eclipse. swt. internal. browser. browserkit. browseroperationhandler. javatojson ( null ) )
[2]: org. junit. assert. assertnull ( org. eclipse. rap. json. jsonvalue. javatojson ( null ) )
[3]: org. junit. assert. assertequals ( null, org. eclipse. swt. internal. browser. browserkit. browseroperationhandler. javatojson ( null ) )
[4]: org. junit. assert. assertnull ( org. eclipse. rbap. json. jsonvalue. javatojson ( null ) )

************

************
tgt: org . junit . assert . assertthat ( count , org . hamcrest . matchers . greaterthan ( ( numcollections + 1 ) ) )
[0]: ) )
[1]: org. junit. assert. assertthat ( routes. size ( ), org. hamcrest. corematchers. is ( 0 ) )
[2]: org. junit. assert. assertthat ( routes, org. hamcrest. corematchers. is ( originalroutes ) )
[3]: org. junit. assert. assertthat ( routes. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[4]: org. junit. assert. assertthat ( routes, is ( originalroutes. size ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( stagedir . tostring ( ) , expectedstagedir )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( errors )
[2]: org. junit. assert. assertequals ( result. tostring ( ), 1, maxdepth )
[3]: org. junit. assert. assertequals ( result. tostring ( ), 2, maxdepth )
[4]: org. junit. assert. assertequals ( result. tostring ( ), 3, maxdepth )

************

************
tgt: org . junit . assert . assertequals ( "hello<sp>world" , obj . getcharcontent ( true ) . tostring ( ) )
[0]: org. junit. assert. assertequals ( result. tostring ( ), maxdepth )
[1]: org. junit. assert. assertequals ( result. tostring ( ), 4, maxdepth )
[2]: org. junit. assert. assertequals ( 1, org. apache. beam. sdk. util. varint. getencodedelementbytesize ( encoded ) )
[3]: org. junit. assert. assertequals ( 0, org. apache. beam. sdk. util. varint. getencodedelementbytesize ( encoded ) )
[4]: org. junit. assert. assertequals ( value, org. apache. beam. sdk. util. varint. getencodedelementbytesize ( encoded ) )

************

************
tgt: org . junit . assert . assertequals ( ( count + 1 ) , org . springframework . test . jdbc . jdbctestutils . countrowsintable ( simplejdbctemplate , "t_foos" ) )
[0]: org. junit. assert. assertequals ( ( ( value. length ) + 1 ), org. apache. beam. sdk. util. varint. getencodedelementbytesize ( encoded ) )
[1]: org. junit. assert. assertequals ( value. length, org. apache. beam. sdk. util. varint. getencodedelementbytesize ( encoded ) )
[2]: org. junit. assert. assertequals ( 1, result. get ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. optional. of ( ), result )

************

************
tgt: org . junit . assert . assertarrayequals ( bytes , result )
[0]: org. junit. assert. assertequals ( 1, result. get ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( binlogevent. equals ( com. dianping. puma. utils. eventfactory. dml ( 2, 1, null, long, dmltype. insert, false, dmltype. insert ) ) )
[3]: org. junit. assert. asserttrue ( binlogevent. equals ( com. dianping. puma. utils. eventfactory. dml ( 2, 1, 1, long, dmltype. insert, false, dmltype. insert ) ) )
[4]: org. junit. assert. assertnotnull ( binlogevent )

************

************
tgt: org . junit . assert . assertfalse ( lockacquired )
[0]: org. junit. assert. assertequals ( binlogevent, binlogevent. getclass ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( authentication, result )
[3]: org. junit. assert. assertequals ( result, authentication )
[4]: org. junit. assert. assertequals ( resulting, result )

************

************
tgt: org . junit . assert . assertequals ( expecting , found )
[0]: org. junit. assert. assertequals ( auth, result )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, berichtentiteits. isempty ( ) )
[3]: org. junit. assert. assertequals ( true, berichtentiteits. isempty ( ) )
[4]: org. junit. assert. assertequals ( 0, berichtentiteits. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( concatenator instanceof ca . corefacility . bioinformatics . irida . processing . concatenate . impl . sequencefilepairconcatenator ) )
[0]: org. junit. assert. assertnotnull ( getworktree ( ) )
[1]: org. junit. assert. assertnull ( constants. getworktree ( ) )
[2]: org. junit. assert. assertequals ( constants. head, getworktree ( ) )
[3]: org. junit. assert. assertequals ( 1, constants. getworktree ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( like . evaluate ( null ) )
[0]: org. junit. assert. assertequals ( i, j )
[1]: org. junit. assert. assertequals ( 1, i )
[2]: org. junit. assert. assertequals ( 1, j )
[3]: org. junit. assert. asserttrue ( ( i == j )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( result . contains ( "violation<sp>message" ) )
[0]: org. junit. assert. assertnotnull ( field. getautocomplete ( ) )
[1]: org. junit. assert. assertequals ( null, field. getautocomplete ( ) )
[2]: org. junit. assert. assertequals ( expected, stringtype. getcodeblock ( ) )
[3]: org. junit. assert. assertnotnull ( com. google. cloud. tools. eclipse. appengine. localserver. server. moduleutils. getserviceid ( webinf ) )
[4]: org. junit. assert. assertequals ( null, com. google. cloud. tools. eclipse. appengine. localserver. server. moduleutils. getserviceid ( webinf ) )

************

************
tgt: org . junit . assert . asserttrue ( mappedlf . cancel ( true ) )
[0]: org. junit. assert. assertequals ( 0, com. google. cloud. tools. eclipse. appengine. localserver. server. moduleutils. getserviceid ( webinf ) )
[1]: org. junit. assert. assertequals ( 1, com. google. cloud. tools. eclipse. appengine. localserver. server. moduleutils. getserviceid ( webinf ) )
[2]: org. junit. assert. assertequals ( com. google. cloud. tools. eclipse. appengine. localserver. server. moduleutils. getserviceid ( webinf ), false )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), slr )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 2, 3 ), slr )

************

************
tgt: org . junit . assert . assertthat ( errors . haserrors ( ) , org . hamcrest . matchers . is ( false ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 2 ), slr )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), slr )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), slr )
[3]: org. junit. assert. assertequals ( 1, page. compareto ( null ) )
[4]: org. junit. assert. assertequals ( 0, page. compareto ( null ) )

************

************
tgt: org . junit . assert . assertequals ( expected , type )
[0]: org. junit. assert. asserttrue ( ( ( page. compareto ( null ) ) == 0 ) )
[1]: org. junit. assert. assertequals ( ( - 1 ), page. compareto ( null ) )
[2]: org. junit. assert. asserttrue ( ( ( page. compareto ( null ) ) < 0 ) )
[3]: org. junit. assert. assertequals ( 1, countwhendeserialize. get ( ) )
[4]: org. junit. assert. assertequals ( 3, countwhendeserialize. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( expectedexceptionthrown )
[0]: org. junit. assert. assertequals ( 2, countwhendeserialize. get ( ) )
[1]: org. junit. assert. assertequals ( expected, value )
[2]: org. junit. assert. assertequals ( input, value )
[3]: org. junit. assert. assertequals ( result, value )
[4]: org. junit. assert. assertequals ( output, value )

************

************
tgt: org . junit . assert . assertequals ( 10 , server1 . bounce_long ( 10 ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( response. informational ( ) )
[2]: org. junit. assert. assertnotnull ( response )
[3]: org. junit. assert. assertequals ( response, response. informational ( ) )
[4]: org. junit. assert. assertequals ( response, this. response. informational ( ) )

************

************
tgt: org . junit . assert . assertthat ( jenkins . scm . api . scmrevisionaction . getrevision ( source , a ) , org . hamcrest . matchers . is ( revision ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( newe. getcause ( ) )
[2]: org. junit. assert. assertequals ( newe. getcause ( ), e )
[3]: org. junit. assert. assertequals ( newe, newe. getcause ( ) )
[4]: org. junit. assert. assertequals ( e, newe. getcause ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( "er<sp>zou<sp>een<sp>fout<sp>op<sp>moeten<sp>treden." , e )
[0]: ) )
[1]: org. junit. assert. assertequals ( servicestub, sm. get ( servicestub. getclass ( ) ) )
[2]: org. junit. assert. assertnotnull ( sm. get ( servicestub. getclass ( ) ) )
[3]: org. junit. assert. assertequals ( servicestub. get ( servicestub. getclass ( ) ), servicestub )
[4]: org. junit. assert. asserttrue ( stream. isshortcircuit ( ) )

************

************
tgt: org . junit . assert . assertequals ( banonresource , returnedbans . get ( 0 ) )
[0]: org. junit. assert. assertequals ( expectedrootpackages, actualrootpackages )
[1]: org. junit. assert. assertequals ( expectedrootpackages, actualrootpackages. size ( ) )
[2]: org. junit. assert. assertequals ( expectedrootpackages, actualrootpackages )
[3]: org. junit. assert. assertequals ( expectedrootpackages, actualrootpackages, actualrootpackages )
[4]: org. junit. assert. assertequals ( expectedrootpackages, actualrootpackages, expectedrootpackages )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, productdtos. size ( ) )
[1]: org. junit. assert. assertequals ( 0, productdtos. size ( ) )
[2]: org. junit. assert. assertnotnull ( productdtos )
[3]: org. junit. assert. assertequals ( 5, productdtos. size ( ) )
[4]: org. junit. assert. assertequals ( 3, productdtos. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( in )
[0]: org. junit. assert. assertnotnull ( ov )
[1]: org. junit. assert. assertnotnull ( ov. getmessage ( ) )
[2]: org. junit. assert. assertnotnull ( ov, ""foo"" )
[3]: org. junit. assert. assertnotnull ( ov. getmessage ( ) )
[4]: org. junit. assert. assertnotnull ( ov )

************

************
tgt: org . junit . assert . assertfalse ( processed . contains ( result ) )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( 1, e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( 0, e. status )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( remainingamount , org . hamcrest . corematchers . is ( fulldepositamount . subtract ( recommendeddepositdue ) ) )
[0]: org. junit. assert. assertequals ( ff4j, samplebean. message )
[1]: org. junit. assert. assertequals ( ff4j, samplebean. msg )
[2]: org. junit. assert. assertequals ( ff4j, samplebean. messages )
[3]: org. junit. assert. assertequals ( ff4j, samplebean. collection )
[4]: org. junit. assert. assertequals ( 1, items. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( value , storedvalue )
[0]: org. junit. assert. assertequals ( 0, items. size ( ) )
[1]: org. junit. assert. assertequals ( 1, count. size ( ) )
[2]: org. junit. assert. assertequals ( 1, objects. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( s )

************

************
tgt: org . junit . assert . assertequals ( scanner . endlocation , locx )
[0]: org. junit. assert. assertnotnull ( context )
[1]: org. junit. assert. assertnotnull ( collection )
[2]: org. junit. assert. assertequals ( 1, 1 )
[3]: org. junit. assert. assertnotnull ( s. collection )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), props. getclusterid ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 5 ), props. getclusterid ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), props. getclusterid ( ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), props. getclusterid ( ) )
[3]: org. junit. assert. assertequals ( 0, props. getclusterid ( ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 2 ), iah. getillegalargument ( ) )

************

************
tgt: org . junit . assert . assertequals ( dedatarecordcollections . tostring ( ) , 1 , dedatarecordcollections . size ( ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), iah. getillegalargument ( ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), iah. getillegalargument ( ) )
[2]: org. junit. assert. assertequals ( 2, dropdown. getselectionindex ( ) )
[3]: org. junit. assert. assertequals ( 1, dropdown. getselectionindex ( ) )
[4]: org. junit. assert. assertequals ( 0, dropdown. getselectionindex ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( templateconfiguration )
[0]: org. junit. assert. assertequals ( 3, dropdown. getselectionindex ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, long1 )
[3]: org. junit. assert. assertequals ( 0, long1 )
[4]: org. junit. assert. assertequals ( 1l, long1 )

************

************
tgt: org . junit . assert . assertequals ( name . length ( ) , 255 )
[0]: org. junit. assert. assertequals ( s. getlong ( ), long1 )
[1]: org. junit. assert. assertequals ( 0l, long1 )
[2]: org. junit. assert. assertequals ( new java. util. arraylist ( ), movednativeindex )
[3]: org. junit. assert. assertequals ( null, movednativeindex )
[4]: org. junit. assert. assertequals ( materializednativeindex, movednativeindex )

************

************
tgt: org . junit . assert . assertequals ( x , statement )
[0]: org. junit. assert. assertequals ( 0, movednativeindex. length )
[1]: org. junit. assert. assertequals ( 0, movednativeindex. size ( ) )
[2]: org. junit. assert. assertequals ( expected, com. etsy. statsd. profiler. util. tagutil. gettags ( prefix, prefix, true ) )
[3]: org. junit. assert. assertequals ( expected, com. etsy. statsd. profiler. util. tagutil. gettags ( prefix, prefix, false ) )
[4]: org. junit. assert. assertequals ( expected, com. etsy. statsd. profiler. util. tagutil. gettags ( tag, prefix, true ) )

************

************
tgt: org . junit . assert . asserttrue ( ishurricaneseason )
[0]: org. junit. assert. assertequals ( expected, com. etsy. statsd. profiler. util. tagutil. gettags ( namespace, prefix, true ) )
[1]: org. junit. assert. assertequals ( expected, com. etsy. statsd. profiler. util. tagutil. gettags ( name, prefix, true ) )
[2]: org. junit. assert. assertnotnull ( bw )
[3]: org. junit. assert. assertequals ( array, bw )
[4]: org. junit. assert. assertequals ( 1, bw )

************

************
tgt: org . junit . assert . asserttrue ( hasvalcap )
[0]: org. junit. assert. assertequals ( 0, bw )
[1]: ) )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1l ), result )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 3l ), result )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( list, result )
[1]: ) )
[2]: org. junit. assert. assertthat ( bidirectionaltraces, org. hamcrest. matchers. empty ( ) )
[3]: org. junit. assert. assertthat ( bidirectionaltraces, org. hamcrest. matchers. contains ( org. batfish. question. traceroute. bidirectionaltracerouteanswerertest. forward_flow, forwardtrace, null ) )
[4]: org. junit. assert. assertthat ( bidirectionaltraces, org. hamcrest. matchers. contains ( org. batfish. question. traceroute. bidirectionaltracerouteanswerertest. forward_flow, forwardtrace ) )

************

************
tgt: org . junit . assert . asserttrue ( fieldtypes . contains ( fieldtype ) )
[0]: org. junit. assert. assertthat ( bidirectionaltraces, org. hamcrest. matchers. contains ( org. batfish. question. traceroute. bidirectionaltracerouteanswerertest. forward_flow, forwardtrace, tracerouteengine ) )
[1]: org. junit. assert. assertthat ( bidirectionaltraces, org. hamcrest. matchers. contains ( org. batfish. question. traceroute. bidirectionaltracerouteanswerertest. forward_flow, forwardtrace, traceroutemanager ) )
[2]: org. junit. assert. assertequals ( 0, ( ( int ) ( tippytop. getitem ( ) ) ) )
[3]: org. junit. assert. assertequals ( 1, ( ( int ) ( tippytop. getitem ( ) ) ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 3 ), tippytop. getitem ( ) )

************

************
tgt: org . junit . assert . asserttrue ( property )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4, 5, 6 ), tippytop. getitem ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 3 ), tippytop. getitem ( ) )
[2]: org. junit. assert. assertequals ( s, header )
[3]: org. junit. assert. assertequals ( s, headers )
[4]: org. junit. assert. assertnotnull ( header )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: , header )
[1]: ) )
[2]: org. junit. assert. asserttrue ( values. contains ( null ) )
[3]: org. junit. assert. asserttrue ( values. contains ( values. tostring ( ) ) )
[4]: org. junit. assert. asserttrue ( values. contains ( ""test"" ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. asserttrue ( values. contains ( java. lang. string. class ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( part. iscompletepathmatch ( ) )
[3]: org. junit. assert. assertequals ( true, part. iscompletepathmatch ( ) )
[4]: org. junit. assert. assertfalse ( part. iscompletepathmatch ( ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( msg . getpayloadbuffer ( ) , expectedresponsev1 ) )
[0]: org. junit. assert. assertthat ( part. iscompletepathmatch ( ), is ( true ) )
[1]: org. junit. assert. assertthat ( part. iscompletepathmatch ( ), is ( false ) )
[2]: org. junit. assert. assertequals ( true, canvas. isviewportrelative ( ) )
[3]: org. junit. assert. assertnotnull ( filtered )
[4]: org. junit. assert. assertnull ( filtered )

************

************
tgt: org . junit . assert . assertequals ( java . lang . long . valueof ( 6 ) , scheduleversionstore . get ( channel , scheduleday ) . get ( ) )
[0]: org. junit. assert. assertequals ( null, filtered )
[1]: org. junit. assert. assertequals ( string, filtered )
[2]: org. junit. assert. assertequals ( null, filtered )
[3]: org. junit. assert. assertequals ( zero, chargingprofile. getstacklevel ( ) )
[4]: org. junit. assert. assertequals ( 0, chargingprofile. getstacklevel ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , exception . getstartcolumn ( ) )
[0]: org. junit. assert. assertequals ( 0, chargingprofile. getstacklevel ( ) )
[1]: org. junit. assert. assertequals ( zero, chargingprofile. getstacklevel ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, chargingprofile. getstacklevel ( ) )
[3]: org. junit. assert. assertnotnull ( res )
[4]: org. junit. assert. assertequals ( one, two )

************

************
tgt: org . junit . assert . assertequals ( confstagedir . tostring ( ) , expecteddir )
[0]: org. junit. assert. assertequals ( 1, op. getinputfile ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_sunldaptest_urattrmappingvar4. servlet. getgroupdisplayname ( group ) )
[2]: org. junit. assert. assertequals ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_sunldaptest_urattrmappingvar4. servlet. getgroupdisplayname ( group ), group )
[3]: org. junit. assert. assertequals ( null, com. ibm. ws. security. wim. adapter. ldap. fat. urapis_sunldaptest_urattrmappingvar4. servlet. getgroupdisplayname ( group ) )
[4]: org. junit. assert. assertequals ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_sunldaptest_urattrmappingvar4. servlet, group )

************

************
tgt: org . junit . assert . assertequals ( customelementformgroup , this . testformsection . getcustomelements ( ) )
[0]: org. junit. assert. assertequals ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_sunldaptest_urattrmappingvar4. c, group )
[1]: org. junit. assert. assertequals ( 1, violations. size ( ) )
[2]: org. junit. assert. assertequals ( 2, counter. get ( ) )
[3]: org. junit. assert. assertequals ( 1, counter. get ( ) )
[4]: org. junit. assert. assertequals ( 3, counter. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 2, count )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( usl )
[3]: org. junit. assert. assertnotnull ( usl. getlegend ( ) )
[4]: org. junit. assert. assertnull ( usl )

************

************
tgt: org . junit . assert . assertarrayequals ( new byte [ ] { 1 , 2 , 3 } , content )
[0]: org. junit. assert. assertnotnull ( usl. getlegend )
[1]: )
[2]: org. junit. assert. assertnotnull ( retireable. getretirereason ( ) )
[3]: org. junit. assert. assertequals ( null, retireable. getretirereason ( ) )
[4]: org. junit. assert. assertnull ( retireable. getretirereason ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( qt )
[0]: org. junit. assert. assertequals ( 0, retireable. getretirereason ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( payment, payment2. getversion ( ) )
[3]: org. junit. assert. assertnotnull ( payment2. getversion ( ) )
[4]: org. junit. assert. assertequals ( payment, payment1. getversion ( ) )

************

************
tgt: org . junit . assert . assertnull ( facet )
[0]: org. junit. assert. assertequals ( payment, payment2 )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, result )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( 1 ) )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( eventtype . unsuspend , eventtype )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), result )
[2]: org. junit. assert. assertthat ( count, org. hamcrest. corematchers. is ( 2 ) )
[3]: org. junit. assert. assertequals ( true, cl. gettrue ( ) )
[4]: org. junit. assert. assertequals ( 1, cl. gettrue ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( cjc . errors ) <= 3 ) )
[0]: org. junit. assert. assertequals ( false, cl. gettrue ( ) )
[1]: org. junit. assert. assertequals ( true, cl. getfalse ( ) )
[2]: org. junit. assert. assertequals ( true, o_5_0. gettrue ( ) )
[3]: org. junit. assert. assertequals ( 0, ahelper. getfailedrecords ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( exception )

************

************
tgt: org . junit . assert . assertequals ( 3 , mappers )
[0]: org. junit. assert. assertnull ( exception )
[1]: org. junit. assert. asserttrue ( ( exception == null ) )
[2]: org. junit. assert. assertequals ( null, exception )
[3]: org. junit. assert. assertnotnull ( exceptions )
[4]: org. junit. assert. assertequals ( 1, vehicles. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( enable )
[0]: org. junit. assert. assertequals ( 0, vehicles. size ( ) )
[1]: org. junit. assert. assertequals ( 3, vehicles. size ( ) )
[2]: org. junit. assert. assertequals ( 1, vehicles. length )
[3]: org. junit. assert. assertnotnull ( vehicles )
[4]: org. junit. assert. assertequals ( obs, encounter. getencounter ( ) )

************

************
tgt: org . junit . assert . assertequals ( atestservice . validatestructure ( ) , true )
[0]: org. junit. assert. assertnotnull ( encounter. getencounter ( ) )
[1]: org. junit. assert. assertnotnull ( obs. getencounter ( ) )
[2]: org. junit. assert. assertsame ( obs, encounter. getencounter ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, events. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( column . getwordwrap ( ) )
[0]: org. junit. assert. assertequals ( 2, events. size ( ) )
[1]: org. junit. assert. assertequals ( 0, events. size ( ) )
[2]: org. junit. assert. assertequals ( 3, events. size ( ) )
[3]: org. junit. assert. assertequals ( 1, events. size ( ) ) ;
[4]: org. junit. assert. assertequals ( 3, resources. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( 3, errors. size ( ) )
[1]: org. junit. assert. assertequals ( 1, resources. size ( ) )
[2]: org. junit. assert. assertarrayequals ( expected, actual )
[3]: org. junit. assert. assertarrayequals ( new int [ ] { 1 }, stack )
[4]: org. junit. assert. assertequals ( 1, count )

************

************
tgt: org . junit . assert . assertequals ( 2 , sol . getroutes ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( upperlayer, np. getnetworklayerdefault ( ) )
[1]: org. junit. assert. assertequals ( lowerlayer, np. getnetworklayerdefault ( ) )
[2]: org. junit. assert. assertequals ( upperlayer, np. getnetworklayerdefault ( ). get ( ) )
[3]: org. junit. assert. assertnotnull ( np. getnetworklayerdefault ( ) )
[4]: org. junit. assert. assertequals ( upperlayer, np. getnetworklayerdefault ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( volume , player . getvolume ( ) )
[0]: org. junit. assert. assertequals ( 3, pools. size ( ) )
[1]: org. junit. assert. assertequals ( 1, fields. length )
[2]: org. junit. assert. assertequals ( 0, fields. length )
[3]: org. junit. assert. asserttrue ( ( ( fields. length ) == 1 ) )
[4]: org. junit. assert. assertnotnull ( fields )

************

************
tgt: org . junit . assert . assertequals ( true , standard )
[0]: )
[1]: org. junit. assert. assertequals ( 1, dao. nullcount ( ) )
[2]: org. junit. assert. assertequals ( 1, dataset. nullcount ( ) )
[3]: org. junit. assert. assertequals ( 1, fixture. nullcount ( ) )
[4]: org. junit. assert. assertequals ( 1, event. nullcount ( ) )

************

************
tgt: org . junit . assert . asserttrue ( spans . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, dataset. nullcount ( ) )
[1]: org. junit. assert. assertequals ( 3, decomposition. size ( ) )
[2]: org. junit. assert. assertnotnull ( inputfile )
[3]: org. junit. assert. assertequals ( expected, actual )
[4]: org. junit. assert. assertequals ( expected, instance )

************

************
tgt: org . junit . assert . assertnotnull ( getstdout ( ) )
[0]: org. junit. assert. assertequals ( expected, result )
[1]: org. junit. assert. assertequals ( expected, processed )
[2]: org. junit. assert. assertequals ( expected, transformed )
[3]: org. junit. assert. assertequals ( 0, pagelist. tryflushlock ( pageref ) )
[4]: org. junit. assert. assertequals ( 0l, pagelist. tryflushlock ( pageref ) )

************

************
tgt: org . junit . assert . assertnotnull ( testobject )
[0]: org. junit. assert. assertnull ( pagelist. tryflushlock ( pageref ) )
[1]: org. junit. assert. assertequals ( 1, pagelist. tryflushlock ( pageref ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( class1. testexistsiteratorexp02 ( ) )
[4]: org. junit. assert. assertequals ( 1, class1. testexistsiteratorexp02 ( ) )

************

************
tgt: org . junit . assert . assertthat ( images . size ( ) , org . hamcrest . core . is . is ( 2 ) )
[0]: org. junit. assert. assertnull ( class1. testexistsiteratorexp02 ( ) )
[1]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[2]: org. junit. assert. assertequals ( expected, java. lang. string. valueof ( rs. tostringunsorted ( rs ) ) )
[3]: org. junit. assert. assertequals ( expected, tostringunsorted ( rs ) )
[4]: org. junit. assert. assertequals ( expected, java. lang. string. valueof ( rs. tostringunsorted ( rs ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , org . apache . beam . runners . direct . unboundedreadevaluatorfactorytest . testunboundedsource . readerclosedcount )
[0]: ) )
[1]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. tostring ( ), builder. tostring ( ) )
[2]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. join ( ), builder. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), builder. tostring ( ) )
[4]: org. junit. assert. assertequals ( name, builder. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( sql . equalsignorecase ( expectedsql ) )
[0]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. tostring ( ), builder. getmessage ( ) )
[1]: org. junit. assert. assertequals ( response. getcontent ( ), resp )
[2]: org. junit. assert. assertnotnull ( resp. getcontent ( ) )
[3]: org. junit. assert. assertequals ( 1, resp. getcontent ( ). size ( ) )
[4]: org. junit. assert. assertequals ( string_1, resp. getcontent ( ) )

************

************
tgt: org . junit . assert . assertfalse ( rs . next ( ) )
[0]: org. junit. assert. assertequals ( 1, resp. getcontent ( ). length )
[1]: org. junit. assert. assertequals ( false, result. islenient ( ) )
[2]: org. junit. assert. assertequals ( true, result. islenient ( ) )
[3]: org. junit. assert. asserttrue ( result. islenient ( ) )
[4]: org. junit. assert. assertequals ( 0, result. islenient ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 0, result. islenient ( ). length )
[1]: org. junit. assert. assertnotnull ( seen )
[2]: org. junit. assert. assertequals ( null, seen )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( 200 ), seen )
[4]: org. junit. assert. assertequals ( string_0, seen )

************

************
tgt: org . junit . assert . assertequals ( i1 , i2 )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( ), seen )
[1]: org. junit. assert. assertthat ( results, is ( def ) )
[2]: org. junit. assert. assertthat ( results, org. hamcrest. corematchers. is ( def ) )
[3]: org. junit. assert. assertthat ( results, is ( empty ( ) ) )
[4]: , results )

************

************
tgt: org . junit . assert . assertnotnull ( p )
[0]: ) )
[1]: org. junit. assert. assertfalse ( validated )
[2]: org. junit. assert. assertequals ( false, validated )
[3]: org. junit. assert. assertthat ( attrmeta. charat ( 0 ), org. hamcrest. corematchers. is ( 1 ) )
[4]: org. junit. assert. assertthat ( attrmeta. charat ( 1 ), org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertthat ( com . hotels . corc . mapred . corcinputformat . gettypeinfo ( conf ) , org . hamcrest . corematchers . is ( typeinfo ) )
[0]: org. junit. assert. assertthat ( attrmeta. charat ( 1 ), org. hamcrest. corematchers. is ( 0 ) )
[1]: org. junit. assert. assertthat ( attrmeta. charat ( 0 ), org. hamcrest. corematchers. is ( 0 ) )
[2]: org. junit. assert. assertthat ( attrmeta. charat ( 0 ), org. hamcrest. corematchers. is ( 5 ) )
[3]: org. junit. assert. assertequals ( new weka. dl4j. schedules. schedule. create ( sched. getweightretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretain... ( ) ) )
[4]: org. junit. assert. assertequals ( new weka. dl4j. schedules. schedule. create ( sched. getweightretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretainretain... (

************

************
tgt: org . junit . assert . asserttrue ( list . tostring ( ) , list . isempty ( ) )
[0]: org. junit. assert. assertequals ( new weka. dl4j. schedules. schedule. create ( sched. getweightretainakschedule ( ) ), sched )
[1]: org. junit. assert. assertequals ( new weka. dl4j. schedules. schedule. create ( sched ), wrapper. getweightretainretainretainretainretainretainretainretain tc )
[2]: ) )
[3]: org. junit. assert. assertnull ( property )
[4]: org. junit. assert. assertnull ( property. tostring ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( value )
[0]: org. junit. assert. assertnull ( testfrommethod )
[1]: org. junit. assert. assertnull ( property. getvalue ( ) )
[2]: org. junit. assert. assertnull ( property. get ( ) )
[3]: org. junit. assert. assertequals ( sqls. keys ( ) [ i ], keys [ i ] )
[4]: org. junit. assert. assertequals ( 1, r. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( actual . executeupdate ( new java . lang . string [ ] { "col" } ) , org . hamcrest . corematchers . is ( 10 ) )
[0]: org. junit. assert. assertequals ( 0, r. size ( ) )
[1]: org. junit. assert. assertequals ( 4, r. size ( ) )
[2]: org. junit. assert. assertnotnull ( saved )
[3]: org. junit. assert. assertequals ( saved, library )
[4]: org. junit. assert. assertnotnull ( saved. get ( id ) )

************

************
tgt: org . junit . assert . assertequals ( bm , bm2 )
[0]: org. junit. assert. assertequals ( null, saved )
[1]: ) )
[2]: org. junit. assert. assertnull ( com. vmware. xenon. common. utils. getserviceuiresourcepath (interfaceresourcepath ) )
[3]: org. junit. assert. assertnull ( com. vmware. xenon. common. utils. getserviceuiresourcepath ( null ) )
[4]: org. junit. assert. assertnull ( com. vmware. xenon. common. utils. getserviceuiresourcepath ( wimeresourcepath ) )

************

************
tgt: org . junit . assert . assertequals ( iterations , lockedcounter . get ( ) )
[0]: org. junit. assert. assertnull ( com. vmware. xenon. common. utils. getserviceuiresourcepath ( testservice ) )
[1]: org. junit. assert. assertnull ( com. vmware. xenon. common. utils. getserviceuiresourcepath ( new myservice ) )
[2]: org. junit. assert. assertarrayequals ( prev, cur )
[3]: org. junit. assert. assertequals ( prev, cur )
[4]: , cur )

************

************
tgt: org . junit . assert . assertequals ( somelongpollingdelayinmills , configutil . getlongpollinginitialdelayinmills ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnotnull ( input )
[3]: org. junit. assert. assertequals ( 1, input. gettestdata ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, transformer. gettestdata ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( contentlengthstrategy . chunked , lenstrategy . determinelength ( message ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), input )
[1]: org. junit. assert. assertequals ( transformer. gettestdata ( ), input )
[2]: org. junit. assert. assertnotnull ( entity. findbyid ( entity. getid ( ) ) )
[3]: org. junit. assert. assertnotnull ( entity. findbyid ( 1 ) )
[4]: org. junit. assert. assertnotnull ( entity. findbyid ( null ) )

************

************
tgt: org . junit . assert . assertnull ( diff )
[0]: org. junit. assert. assertnotnull ( entity )
[1]: org. junit. assert. assertnull ( entity )
[2]: org. junit. assert. asserttrue ( problems. haserrors ( ) )
[3]: org. junit. assert. assertequals ( true, problems. haserrors ( ) )
[4]: org. junit. assert. assertfalse ( problems. haserrors ( ) )

************

************
tgt: org . junit . assert . asserttrue ( isvalid )
[0]: org. junit. assert. assertnotnull ( problems. haserrors ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( in, out )
[3]: org. junit. assert. assertnull ( out )
[4]: org. junit. assert. assertequals ( 1l, numberofinstants )

************

************
tgt: org . junit . assert . assertequals ( second , first )
[0]: org. junit. assert. assertequals ( 1, numberofinstants )
[1]: org. junit. assert. assertequals ( 2, numberofinstants )
[2]: org. junit. assert. assertequals ( 0, numberofinstants )
[3]: org. junit. assert. assertequals ( 1, ra1. count )
[4]: org. junit. assert. assertequals ( 1, ra1. count ( ) )

************

************
tgt: org . junit . assert . assertequals ( productdata . type_uint32 , tiffifd . getbanddatatype ( ) )
[0]: org. junit. assert. assertequals ( 1, ra1. errors )
[1]: org. junit. assert. assertequals ( 1, ra1. errors. length )
[2]: org. junit. assert. assertequals ( 1, ra1. errors. size )
[3]: org. junit. assert. assertequals ( true, prop. isowltopobjectproperty ( ) )
[4]: org. junit. assert. assertequals ( org. nd4j. linalg. factory. nd4j. create ( new double [ ] { - 4, - 4 } ), arr. getrow ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , dv )
[0]: org. junit. assert. assertequals ( org. nd4j. linalg. factory. nd4j. create ( new float [ ] { - 4, - 4 } ), arr. getrow ( 0 ) )
[1]: org. junit. assert. assertthat ( values, org. hamcrest. matchers. equalto ( """" ) )
[2]: public string get ( ) { }
[3]: public void init ( ) { }
[4]: public void fill ( ) { }

************

************
tgt: org . junit . assert . assertequals ( n , org . kocakosm . pitaya . io . scanf . readbiginteger ( ) )
[0]: public string get ( ) { } )
[1]: org. junit. assert. assertequals ( 1, preload. getviews ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, preload. getviews ( ). size ( ) )
[3]: org. junit. assert. asserttrue ( user. isemailinputrendered ( ) )
[4]: org. junit. assert. asserttrue ( hasfieldviolation ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( result . equals ( expected ) )
[0]: org. junit. assert. assertfalse ( hasfieldviolation ( null ) )
[1]: org. junit. assert. assertequals ( true, hasfieldviolation ( null ) )
[2]: org. junit. assert. asserttrue ( s. hasfieldviolation ( null ) )
[3]: org. junit. assert. asserttrue ( havefieldviolation ( null ) )
[4]: org. junit. assert. assertequals ( 1, cs. getchemmodel ( 2 ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . finra . herd . service . activiti . integer_value , result )
[0]: org. junit. assert. assertequals ( 1, cs. getchemmodel ( 1 ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, cs. getchemmodel ( second ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, cs. getchemmodel ( 0 ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, cs. getchemmodel ( second. getid ( ) ). length )
[4]: org. junit. assert. assertequals ( 10, built. getage ( ) )

************

************
tgt: org . junit . assert . assertequals ( throwable , result )
[0]: org. junit. assert. assertnotnull ( built. getage ( ) )
[1]: org. junit. assert. assertequals ( 1, built. getage ( ) )
[2]: org. junit. assert. assertequals ( 1, built. getage ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 10, built. getage ( ). size ( ) )
[4]: org. junit. assert. assertequals ( dbversion, catalognamewithquote )

************

************
tgt: org . junit . assert . assertequals ( true , m . gradientcheck ( ) )
[0]: org. junit. assert. assertnotnull ( catalognamewithquote )
[1]: org. junit. assert. assertequals ( dbmslanguage, catalognamewithquote )
[2]: org. junit. assert. assertequals ( dbbundleetf, catalognamewithquote )
[3]: org. junit. assert. assertequals ( dbversion, catalognamewithquote )
[4]: org. junit. assert. assertnotnull ( endpoint. getdurablesubscriptionname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , d . as . size ( ) )
[0]: org. junit. assert. assertequals ( org. apache. cxf. transport. jms. uri. jmsendpointtest. test_value, endpoint. getdurablesubscriptionname ( ) )
[1]: org. junit. assert. assertequals ( java. lang. string. class, endpoint. getdurablesubscriptionname ( ) )
[2]: org. junit. assert. assertequals ( org. apache. cxf. transport. jms. uri. jmsendpointtest. test_values, endpoint. getdurablesubscriptionname ( ) )
[3]: org. junit. assert. assertequals ( org. apache. cxf. transport. jms. uri. jmsendpointtest. test_value, endpoint. getdequestsubscriptionname ( ) )
[4]: org. junit. assert. assertequals ( errors. tostring ( ), 0, errors. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , toolitemmenu . getitems ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( errors. tostring ( ), 1, errors. size ( ) )
[1]: org. junit. assert. assertequals ( errors. tostring ( ), 3, errors. size ( ) )
[2]: org. junit. assert. assertequals ( errors. tostring ( ), 2, errors. size ( ) )
[3]: org. junit. assert. assertnotnull ( errors. tostring ( ) )
[4]: org. junit. assert. assertequals ( mergedrecord, outputrecord )

************

************
tgt: org . junit . assert . asserttrue ( exp . getmessage ( ) . startswith ( "internal<sp>server<sp>error" ) )
[0]: org. junit. assert. assertequals ( mergedrecord, java. util. arrays. aslist ( outputrecord, kvschema ) )
[1]: org. junit. assert. assertequals ( mergedrecord, java. util. collections. singletonlist ( kvschema ) )
[2]: org. junit. assert. assertequals ( mergedrecord, java. util. arrays. aslist ( outputrecord ) )
[3]: org. junit. assert. assertequals ( mergedrecord, resultrecord )
[4]: org. junit. assert. assertequals ( 1, all. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expecting , result )
[0]: org. junit. assert. assertequals ( 0, all. size ( ) )
[1]: org. junit. assert. assertequals ( 1, all. size ( ) )
[2]: org. junit. assert. assertequals ( 3, all. size ( ) )
[3]: org. junit. assert. assertequals ( 1, all. size ( ) )
[4]: org. junit. assert. assertthat ( messages. getlist ( ), org. hamcrest. corematchers. is ( msg1 ) )

************

************
tgt: org . junit . assert . asserttrue ( exceptionoccurred )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( msg1, msg2 ), messages. getlist ( ) )
[1]: org. junit. assert. assertthat ( messages. getlist ( ), org. hamcrest. corematchers. is ( 1 ) )
[2]: org. junit. assert. assertequals ( 1, messages. getlist ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( messages. getlist ( ) )
[4]: org. junit. assert. assertequals ( 0, countries. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( null , id . getvalue ( ) )
[0]: org. junit. assert. assertequals ( 1, countries. size ( ) )
[1]: org. junit. assert. assertequals ( 2, countries. size ( ) )
[2]: org. junit. assert. assertequals ( 6, countries. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertequals ( "f15490c4-fc6b-4e40-90b2-1a16a66b619f" , retrievedaccount . getid ( ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( e3 ), rename )
[3]: org. junit. assert. assertequals ( expected, results )
[4]: org. junit. assert. assertnull ( out. tobytearray ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertnull ( out )
[1]: org. junit. assert. assertfalse ( out. isempty ( ) )
[2]: org. junit. assert. assertfalse ( out. tobytearray ( ). length )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( product . getconfiguratorurl ( ) , service . getconfiguratorurl ( ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), result )
[2]: , result )
[3]: ) )
[4]: org. junit. assert. assertequals ( """", outcome )

************

************
tgt: org . junit . assert . assertequals ( date , order . geteffectivestartdate ( ) )
[0]: org. junit. assert. assertequals ( """", builder. tostring ( ) )
[1]: org. junit. assert. assertequals ( path, result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( url, result )
[4]: org. junit. assert. assertequals ( result, url )

************

************
tgt: org . junit . assert . assertequals ( b , a )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( system. in, rdsz )
[2]: org. junit. assert. assertequals ( 0, rdsz )
[3]: org. junit. assert. assertequals ( system. in. length, rdsz )
[4]: org. junit. assert. assertequals ( 1, rdsz )

************

************
tgt: org . junit . assert . assertequals ( virtualsize , processor . getvirtualsize ( mockfile ) )
[0]: org. junit. assert. assertequals ( system. in, rdsz, 0 )
[1]: org. junit. assert. assertequals ( ( il + i ), org. basex. build. createtest. docname ( ) )
[2]: org. junit. assert. assertequals ( org. basex. build. createtest. docname, org. basex. build. createtest. docname ( ) )
[3]: org. junit. assert. assertequals ( ( il + 1 ), org. basex. build. createtest. docname ( ) )
[4]: org. junit. assert. assertequals ( org. basex. build. createtest. docname, org. basex. build. createtest. docname )

************

************
tgt: org . junit . assert . assertnotnull ( xhtmloptions )
[0]: ) )
[1]: org. junit. assert. assertequals ( operatorid, undertest. getoperatorstodeploy ( ) )
[2]: org. junit. assert. assertnotnull ( undertest. getoperatorstodeploy ( ) )
[3]: org. junit. assert. assertsame ( operatorid, undertest. getoperatorstodeploy ( ) )
[4]: org. junit. assert. assertnull ( undertest. getoperatorstodeploy ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( operatorid, undertest. getoperatorstodeploy. )
[1]: org. junit. assert. asserttrue ( org. apache. shardingsphere. api. hint. hintmanager. isdatabaseshardingonly ( ) )
[2]: org. junit. assert. assertnotnull ( output )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( expected, output )

************

************
tgt: org . junit . assert . assertequals ( 0 , errors . size ( ) )
[0]: org. junit. assert. assertnotnull ( results )
[1]: org. junit. assert. assertequals ( output, result )
[2]: org. junit. assert. assertequals ( result. error, testruntime. validateputproperties ( properties ) )
[3]: org. junit. assert. assertequals ( result. error, validateputproperties ( properties ). getstatus ( ) )
[4]: org. junit. assert. assertnotnull ( testruntime. validateputproperties ( properties ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , violations . size ( ) )
[0]: org. junit. assert. assertequals ( result. error, testruntime. validateputproperties ( properties ). getstatus ( )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, org. jitsi. impl. neomedia. transform. fec. flexfec03headerreadertest. count )
[3]: org. junit. assert. assertequals ( 0, org. jitsi. impl. neomedia. transform. fec. flexfec03headerreadertest. testsignedversionscount )
[4]: org. junit. assert. assertequals ( 0, flexfecdata. length )

************

************
tgt: org . junit . assert . assertnotnull ( tested . getlocationexecutor ( ) )
[0]: org. junit. assert. assertequals ( 0, errors. length )
[1]: org. junit. assert. assertequals ( 0, flexfecdata. size ( ) )
[2]: org. junit. assert. assertequals ( 1, entityrepository. getmousebehavior ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, entityrepository. getmousebehavior ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( entityrepository. getmousebehavior ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , list . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 0, 0 ), entityrepository )
[1]: ) )
[2]: org. junit. assert. assertthat ( project. property ( null ), is ( null ) )
[3]: org. junit. assert. assertthat ( project. property ( null ), is ( props ) )
[4]: org. junit. assert. assertnotnull ( project )

************

************
tgt: org . junit . assert . assertequals ( "parent" , getone ( spancache , "parent" ) . getid ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertthat ( actmap, org. hamcrest. corematchers. is ( mdcmap ( aslist ( com. sap. hcp. cf. logback. converter. some_value ) ) ) )
[3]: org. junit. assert. assertthat ( actmap, org. hamcrest. core. is. is ( mdcmap ( aslist ( com. sap. hcp. cf. logback. converter. some_value ) ) ) )
[4]: org. junit. assert. assertthat ( actmap, org. hamcrest. matchers. is ( mdcmap ( aslist ( com. sap. hcp. cf. logback. converter. some_value ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( "some<sp>value" , result . dosomethingelse ( ) )
[0]: org. junit. assert. assertthat ( actmap, org. hamcrest. corematchers. is ( mdcmap ( aslist ( com. sap. hcp. cf. logback. converter. some_key ) ) ) )
[1]: org. junit. assert. assertthat ( actmap, org. hamcrest. core. is. is ( mdcmap ( aslist ( com. sap. hcp. cf. logback. converter. some_key ) ) ) )
[2]: org. junit. assert. assertnotnull ( selectedmultimap )
[3]: org. junit. assert. assertequals ( 1, selectedmultimap. size ( ) )
[4]: org. junit. assert. assertequals ( value, selectedmultimap )

************

************
tgt: org . junit . assert . asserttrue ( ( ( other . getclassloader ( ) ) instanceof org . apache . hadoop . conf . testconfiguration . fake_classloader ) )
[0]: org. junit. assert. assertequals ( null, selectedmultimap )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, vertices. size ( ) )
[3]: org. junit. assert. asserttrue ( ( ( vertices. size ( ) ) >= 1 ) )
[4]: org. junit. assert. assertequals ( ( 1 + 1 ), vertices. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 100 , list . size ( ) )
[0]: org. junit. assert. assertequals ( expected, vertices )
[1]: org. junit. assert. assertequals ( 1, vertices. length )
[2]: org. junit. assert. assertnotnull ( service. getsalt ( ) )
[3]: org. junit. assert. assertequals ( 1, service. getsalt ( ). length )
[4]: org. junit. assert. assertequals ( 0, service. getsalt ( ). length )

************

************
tgt: org . junit . assert . assertnull ( prod . getconfiguratorurl ( ) )
[0]: org. junit. assert. assertequals ( null, service. getsalt ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, items. size ( ) )
[3]: org. junit. assert. assertequals ( 0, items. size ( ) )
[4]: org. junit. assert. assertequals ( zero, items. size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( a , c )
[0]: org. junit. assert. assertequals ( 1, item. size ( ) )
[1]: org. junit. assert. assertequals ( 1,items. size ( ) )
[2]: org. junit. assert. assertnotnull ( oresponse )
[3]: org. junit. assert. asserttrue ( clazz. hasmethod ( clazz. getmethods ( ). iterator ( ). next ( ) ) )
[4]: org. junit. assert. asserttrue ( clazz. hasmethod ( clazz. getmethods ( ). iterator ( ) [ 0 ] ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. asserttrue ( clazz. hasmethod ( clazz. getmethods ( ). iterator ( ) [ 1 ] ) )
[1]: org. junit. assert. asserttrue ( clazz. hasmethod ( clazz. getmethods ( ) ) )
[2]: org. junit. assert. assertfalse ( clazz. hasmethod ( clazz. getmethods ( ). iterator ( ). next ( ) )
[3]: org. junit. assert. assertnotnull ( artist. getartistname ( ) )
[4]: org. junit. assert. assertnull ( artist. getartistname ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( inf )
[0]: org. junit. assert. assertequals ( artistname, artist )
[1]: org. junit. assert. assertnotnull ( artist )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( bcryptencoder. gerarbcrypt ( null ) )
[4]: org. junit. assert. assertequals ( null, bcryptencoder. gerarbcrypt ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( datawave . query . jexl . functions . contentfunctionstest . expect ( o , false ) )
[0]: org. junit. assert. assertnotnull ( bcryptencoder. gerarbcrypt ( ""test"" ) )
[1]: org. junit. assert. assertnotnull ( bcryptencoder )
[2]: org. junit. assert. assertnotnull ( bcryptencoder )
[3]: org. junit. assert. assertnull ( job. isdone ( ) )
[4]: org. junit. assert. assertequals ( null, job. isdone ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( 0, job. isdone ( ) )
[1]: org. junit. assert. assertequals ( 1, job. isdone ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( file. getaddress ( ), stream. getaddress ( ) )
[4]: org. junit. assert. assertequals ( io. grpc. stub. getaddressstreamlocal ( ), stream. getaddress ( ) )

************

************
tgt: org . junit . assert . asserttrue ( done )
[0]: org. junit. assert. assertequals ( java. lang. long. tostring ( file. getaddress ( ) ), stream. getaddress ( ) )
[1]: org. junit. assert. assertequals ( file, stream. getaddress ( ) )
[2]: org. junit. assert. assertequals ( javacstreamobserver, stream. getaddress ( ) )
[3]: org. junit. assert. assertnotnull ( message )
[4]: org. junit. assert. assertnotnull ( msg )

************

************
tgt: org . junit . assert . assertthat ( target . onconnectionchangedaddedpre ( msg ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertnotnull ( o )
[1]: org. junit. assert. assertnull ( o )
[2]: ) )
[3]: )
[4]: 

************

************
tgt: org . junit . assert . assertfalse ( parameter . isnamed ( ) )
[0]: org. junit. assert. assertequals ( expectedexecution, actual )
[1]: org. junit. assert. assertequals ( expectedexecution [ j ], actual )
[2]: org. junit. assert. assertequals ( expectedexecution [ 1 ], actual )
[3]: org. junit. assert. assertequals ( expectedexecution - start ), actual )
[4]: org. junit. assert. assertequals ( expectedexecution )

************

************
tgt: org . junit . assert . assertequals ( true , false )
[0]: org. junit. assert. assertequals ( expresult, result )
[1]: org. junit. assert. assertequals ( expresult, result ( ) )
[2]: org. junit. assert. assertequals ( expresult, result. toclistylestring )
[3]: org. junit. assert. assertequals ( expresult )
[4]: expresult. toclistylestring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( t . gettradeaverage ( ) ) == ( ( float ) ( 5 ) ) ) )
[0]: org. junit. assert. assertequals ( org56138725000, infoconsultacadastro. getcpf ( ) )
[1]: org. junit. assert. assertequals ( used56138725000, infoconsultacadastro. getcpf ( ) )
[2]: org. junit. assert. assertequals ( "56138725000, infoconsultacadastro. getcpf ( ) )
[3]: org. junit. assert. assertequals ( info56138725000, infoconsultacadastro. getcpf ( ) )
[4]: org. junit. assert. assertequals (

************

************
tgt: org . junit . assert . assertequals ( 0 , constraintviolations . size ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( """", result )
[4]: org. junit. assert. assertequals ( """", result )

************

************
tgt: org . junit . assert . assertequals ( 2 , afslist . size ( ) )
[0]: org. junit. assert. asserttrue ( failed ( ) )
[1]: org. junit. assert. assertfalse ( failed ( ) )
[2]: org. junit. assert. assertnotnull ( failed ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( 3 , list . gettotalcount ( ) )
[0]: org. junit. assert. assertequals ( 1, classes. size ( ) )
[1]: org. junit. assert. assertequals ( 0, classes. size ( ) )
[2]: org. junit. assert. assertequals ( 3, classes. size ( ) )
[3]: org. junit. assert. assertequals ( 2, classes. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . integer . valueof ( 1000 ) , result )
[0]: org. junit. assert. assertsame ( 1l, bean. getattribute ( ""value"" ) )
[1]: org. junit. assert. assertsame ( 1l, bean. getattribute ( "org. junit. assert. assertsame ( 1l ) )
[2]: org. junit. assert. assertsame ( 1l, bean. getattribute ( "org. getid ( ) ) )
[3]: org. junit. assert. assertsame ( 1l, bean. getattribute ( ""test"" ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertnotnull ( tradingengine )
[1]: org. junit. assert. assertnull ( tradingengine )
[2]: org. junit. assert. assertequals ( 1, tradingengine )
[3]: the junit setup method
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( dedatadefinitions . tostring ( ) , 1 , dedatadefinitions . size ( ) )
[0]: org. junit. assert. assertequals ( 1, b. getentry ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, b. getentry ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( velocitylist )
[3]: org. junit. assert. assertequals ( 0, velocitylist. size ( ) )
[4]: org. junit. assert. assertequals ( 1, velocitylist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( null , tree_empty )
[0]: org. junit. assert. assertequals ( null, velocitylist )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( array )
[3]: org. junit. assert. assertnotnull ( array [ 0 ] )
[4]: org. junit. assert. assertnull ( array )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , actual )
[0]: org. junit. assert. assertsame ( test, array )
[1]: org. junit. assert. assertnotnull ( array. length )
[2]: org. junit. assert. assertequals ( 10, foorows. getrows ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 10, foorows. getrows ( ). length )
[4]: org. junit. assert. assertequals ( 1, foorows. getrows ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( aslist ( 1 , 2 , 3 , 4 , 5 , 6 ) , list )
[0]: org. junit. assert. assertthat ( foorows. getrows ( ). size ( ), is ( 10 ) )
[1]: ) )
[2]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( 3 ) ) )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( 5 ) ) )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( 9 ) ) )

************

************
tgt: org . junit . assert . asserttrue ( privilegenames . isempty ( ) )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( 10 ) ) )
[1]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( 6 ) ) )
[2]: org. junit. assert. assertequals ( null, model. getnewisocode ( ) )
[3]: org. junit. assert. assertnull ( model. getnewisocode ( ) )
[4]: org. junit. assert. assertnotnull ( model. getnewisocode ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: type ) { } }
[1]: type ) )
[2]: org. junit. assert. assertequals ( 1, p. gettargetindex ( ) )
[3]: org. junit. assert. assertequals ( components, requestscapture. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, requestscapture. getvalue ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertnotnull ( requestscapture. getvalue ( ) )
[1]: org. junit. assert. assertequals ( 0, requestscapture. getvalue ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 2, requestscapture. getvalue ( ). size ( ) )
[3]: org. junit. assert. assertequals ( expectedstatement, deletestatement. getstatement ( tablename ). trim ( ) )
[4]: org. junit. assert. assertequals ( expectedstatement, deletestatement. getstatement ( tablename ). trim ( ). tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( expected ) ) )
[0]: org. junit. assert. assertequals ( expectedstatement, deletestatement. getstatement ( tablename ) )
[1]: org. junit. assert. assertequals ( dir, childfile )
[2]: org. junit. assert. assertnotnull ( childfile )
[3]: org. junit. assert. assertnull ( childfile )
[4]: org. junit. assert. assertequals ( directory, childfile )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , result )
[0]: ) )
[1]: org. junit. assert. assertequals ( true, dataset. delete ( ) )
[2]: org. junit. assert. assertequals ( 1, arg2. getoutput ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, arg1. getoutput ( ). size ( ) )
[4]: org. junit. assert. assertequals ( arg1, arg2. getoutput ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , nuoftype1vehicles )
[0]: org. junit. assert. assertequals ( 1, arg2. getoutput ( ) )
[1]: org. junit. assert. assertequals ( 1, arg2. getoutput ( ). length )
[2]: org. junit. assert. assertequals ( 1, ( ( int ) ( testtransaction. get ( ) ) ) )
[3]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), testtransaction. get ( ) )
[4]: org. junit. assert. assertequals ( 1, new java. lang. integer ( testtransaction. get ( ) ) )

************

************
tgt: org . junit . assert . assertnotnull ( response )
[0]: org. junit. assert. assertequals ( 0, ( ( int ) ( testtransaction. get ( ) ) ) )
[1]: org. junit. assert. assertequals ( 1, ( ( int ) ( testtransaction. get ( ) ) ) ) ;
[2]: org. junit. assert. assertequals ( expectedparams, actualparams )
[3]: org. junit. assert. assertequals ( expectedparams, actualparams. size ( 0 ) )
[4]: org. junit. assert. assertequals ( expectedparams. size ( 0 ), actualparams. size ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . collections . emptylist ( ) , actual )
[0]: org. junit. assert. assertequals ( expectedparams. size ( 1 ), actualparams. size ( 0 ) )
[1]: org. junit. assert. assertequals ( expectedparams. size ( 1 ), actualparams )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), destination. getcredentials ( ) )
[3]: org. junit. assert. assertequals ( 1, destination. getcredentials ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, destination. getcredentials ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 8 , results . size ( ) )
[0]: org. junit. assert. assertequals ( null, destination. getcredentials ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), destination. getcredentials ( ) )
[2]: org. junit. assert. asserttrue ( org. talend. commons. utils. resource. updateshelper. isoldcomponent ( compdefinefile ) )
[3]: org. junit. assert. assertequals ( 1, b. size ( ) )
[4]: org. junit. assert. assertequals ( 0, b. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , val . getsignatures ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 2, b. size ( ) )
[1]: org. junit. assert. assertequals ( 3, b. size ( ) )
[2]: org. junit. assert. assertequals ( 4, b. size ( ) )
[3]: org. junit. assert. assertnotnull ( array )
[4]: org. junit. assert. assertequals ( 1, array. length )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( 0, array. length )
[1]: org. junit. assert. assertequals ( 1, array. length, 0 )
[2]: )
[3]: org. junit. assert. assertequals ( ninja. results. notfound ( ), resultcaptor. getvalue ( ). notfound ( ) )
[4]: org. junit. assert. assertequals ( ninja. results, resultcaptor. notfound ( ). getstatuscode ( ) )

************

************
tgt: org . junit . assert . asserttrue ( missingproperties . getmissingproperties ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( ninja. results. notfound ( ). getstatuscode ( ), resultcaptor. getvalue ( ) )
[1]: org. junit. assert. assertequals ( ninja. results, resultcaptor. notfound ( ) )
[2]: org. junit. assert. assertequals ( ninja. results. notfound ( ), resultcaptor. getvalue ( ) )
[3]: org. junit. assert. assertequals ( res [ i ], res [ i ] )
[4]: org. junit. assert. assertfalse ( mockbasechoicestep. run ( ) )

************

************
tgt: org . junit . assert . assertsame ( detail , actualdetail )
[0]: org. junit. assert. asserttrue ( mockbasechoicestep. run ( ) )
[1]: org. junit. assert. assertequals ( false, mockbasechoicestep. run ( ) )
[2]: org. junit. assert. assertequals ( true, mockbasechoicestep. run ( ) )
[3]: org. junit. assert. assertfalse ( mockbasechoicestep. run ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( something ), jobqueue. poll ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , path . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( something ), jobqueue. poll ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( something ), jobqueue )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), jobqueue. poll ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( nothing ), jobqueue. poll ( ) )
[4]: org. junit. assert. assertnotnull ( foundtx )

************

************
tgt: org . junit . assert . assertequals ( 3 , ringset . getatomcontainercount ( ) )
[0]: org. junit. assert. assertequals ( txs, foundtx )
[1]: org. junit. assert. assertnull ( foundtx )
[2]: org. junit. assert. assertequals ( 0, foundtx. size ( ) )
[3]: org. junit. assert. assertequals ( 1, foundtx. size ( ) )
[4]: org. junit. assert. assertequals ( index_d, index )

************

************
tgt: org . junit . assert . asserttrue ( value . equals ( 1.0f ) )
[0]: org. junit. assert. assertnotnull ( index )
[1]: org. junit. assert. assertthat ( index )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( dto, pass ( dto, org. openkilda. northbound. dto. v1. switches. class ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( dto, pass ( dto, java. lang. object. class ) )
[1]: org. junit. assert. assertequals ( dto, pass ( dto, com. google. common. collect. immutablelist. of ( dto ) ) )
[2]: org. junit. assert. assertequals ( dto, pass ( dto, com. google. common. collect. immutablelist. class ) )
[3]: org. junit. assert. assertequals ( dto, pass ( dto, java. util. list. class ) )
[4]: org. junit. assert. assertfalse ( isauthorized )

************

************
tgt: org . junit . assert . assertequals ( time , result . getmodified ( ) )
[0]: org. junit. assert. asserttrue ( isauthorized )
[1]: org. junit. assert. assertequals ( false, isauthorized )
[2]: org. junit. assert. assertequals ( true, isauthorized )
[3]: org. junit. assert. assertnotnull ( isauthorized )
[4]: org. junit. assert. assertequals ( badcell, e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( badcell )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( e. getmessage ( ), badcell )
[3]: org. junit. assert. assertequals ( badcell, badcell )
[4]: org. junit. assert. assertthat ( result ( ), org. hamcrest. matchers. is ( expectedresult ) )

************

************
tgt: org . junit . assert . assertnull ( test )
[0]: org. junit. assert. assertthat ( result ( ), org. hamcrest. core. is. is ( expectedresult ) )
[1]: org. junit. assert. assertequals ( expectedresult, result ( ) )
[2]: org. junit. assert. assertthat ( result ( ), is ( expectedresult ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, detail. getfetchpaths ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , execs . size ( ) )
[0]: org. junit. assert. assertequals ( 0, detail. getfetchpaths ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, detail. getfetchpaths ( ). length )
[2]: org. junit. assert. assertequals ( 0, detail. getfetchpaths ( ). length )
[3]: org. junit. assert. assertequals ( 1, details. getfetchpaths ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, list. peek ( ) )

************

************
tgt: org . junit . assert . asserttrue ( processended ( ) )
[0]: org. junit. assert. assertequals ( 0, list. peek ( ) )
[1]: org. junit. assert. assertnull ( list. peek ( ) )
[2]: org. junit. assert. assertequals ( 1, list. peek ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, list. peek ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, tuple. len ( ) )

************

************
tgt: org . junit . assert . assertnull ( queue . dequeue ( new java . lang . object ( ) ) )
[0]: org. junit. assert. assertequals ( 0, tuple. len ( ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), tuple. len ( ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 3 ), tuple. len ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 6 ), tuple. len ( ) )
[4]: org. junit. assert. assertequals ( 1, kapuabirthmessage. getclientid ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , t . foo ( ) )
[0]: org. junit. assert. assertnotnull ( kapuabirthmessage. getclientid ( ) )
[1]: org. junit. assert. assertequals ( kapuabirthmessage, kapuabirthmessage. getclientid ( ) )
[2]: org. junit. assert. assertequals ( kapuabirthmessage. getclientid ( ), kapuabirthmessage )
[3]: org. junit. assert. assertequals ( 1, kapuabirthmessage. getclientid ( ). size ( ) )
[4]: org. junit. assert. assertequals ( vutuserid, merged )

************

************
tgt: org . junit . assert . assertequals ( 0 , vh . geteventssize ( ) )
[0]: org. junit. assert. assertequals ( ( ( vutuserid ) + tokens ), merged )
[1]: org. junit. assert. assertequals ( 1, merged. length ( ) )
[2]: org. junit. assert. assertequals ( ( ( vutuserid ) + 1 ), merged )
[3]: ) )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( in ), out )

************

************
tgt: org . junit . assert . assertequals ( view , viewname )
[0]: org. junit. assert. assertequals ( java. util. optional. empty ( ), out )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), out )
[2]: org. junit. assert. assertequals ( in, out )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( in ), out )
[4]: org. junit. assert. assertnull ( iae )

************

************
tgt: org . junit . assert . assertthat ( joinedsplits , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( expected, arr )
[1]: org. junit. assert. assertnull ( err )
[2]: org. junit. assert. assertnull ( err, arr )
[3]: org. junit. assert. asserttrue ( err, expected )
[4]: org. junit. assert. assertequals ( expected, arr. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( software . amazon . awssdk . protocols . json . awsjsonerrormessageparsertest . message_content , parsed )
[0]: org. junit. assert. assertnotnull ( groupa. getid ( groupb ) )
[1]: org. junit. assert. assertnull ( groupa. getid ( groupb ) )
[2]: org. junit. assert. assertequals ( 1, groupa. getid ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( groupa. getid ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( listenedlist . contains ( "b" ) )
[0]: org. junit. assert. assertequals ( 1, notes. size ( ) )
[1]: org. junit. assert. assertequals ( 0, notes. size ( ) )
[2]: org. junit. assert. assertequals ( 1, note. size ( ) )
[3]: org. junit. assert. assertequals ( 3, notes. size ( ) )
[4]: org. junit. assert. assertequals ( 1, column. indexof ( column ) )

************

************
tgt: org . junit . assert . assertthat ( element . getattribute ( "name" ) , org . hamcrest . matchers . is ( "hidden" ) )
[0]: org. junit. assert. assertequals ( 0, column. indexof ( column ) )
[1]: org. junit. assert. assertequals ( 1, othergrid. indexof ( column ) )
[2]: org. junit. assert. assertequals ( 1, column. indexof ( row ) )
[3]: org. junit. assert. assertequals ( 1, column. indexof ( null ) )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( assetcategories . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( result, schema )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. assertequals ( result, validator )
[4]: org. junit. assert. assertnotnull ( container. getcontainerproperty ( item, id ) )

************

************
tgt: org . junit . assert . assertequals ( ratio , org . apache . hadoop . mapred . gridmix . compressionemulationutil . getmapinputcompressionemulationratio ( conf ) , 0.0 )
[0]: org. junit. assert. assertnotnull ( container. getcontainerproperty ( id, id ) )
[1]: org. junit. assert. assertnotnull ( container. getcontainerproperty ( id, item ) )
[2]: org. junit. assert. assertnull ( container. getcontainerproperty ( item, id ) )
[3]: ) )
[4]: org. junit. assert. assertthat ( this. state. issortascending ( ), org. hamcrest. corematchers. is ( sortascending ) )

************

************
tgt: org . junit . assert . assertthat ( testproperties , org . hamcrest . corematchers . is ( expectedproperties ) )
[0]: org. junit. assert. assertthat ( this. adapter. issortascending ( ), org. hamcrest. corematchers. is ( sortascending ) )
[1]: org. junit. assert. assertthat ( this. state. issortascending ( ), org. hamcrest. corematchers. is ( sortedascending ) )
[2]: org. junit. assert. assertthat ( this. state. issortascending ( ), org. hamcrest. corematchers. is ( orderascending ) )
[3]: org. junit. assert. assertequals ( sortascending, this. state. issortascending ( ) )
[4]: org. junit. assert. assertequals ( 1, tokens. length )

************

************
tgt: org . junit . assert . assertequals ( "" , builder . tostring ( ) )
[0]: org. junit. assert. assertarrayequals ( listtokens. toarray ( ), tokens )
[1]: org. junit. assert. assertarrayequals ( 1, tokens. length )
[2]: org. junit. assert. assertequals ( 0, tokens. length )
[3]: org. junit. assert. assertarrayequals ( listtokens. toarray ( ), tokens. length )
[4]: org. junit. assert. assertnull ( env )

************

************
tgt: org . junit . assert . assertequals ( singletonlist ( item ) , nesteditems )
[0]: org. junit. assert. assertequals ( 0, env. getid ( ) )
[1]: org. junit. assert. assertequals ( 0, env. size ( ) )
[2]: org. junit. assert. assertequals ( null, env )
[3]: org. junit. assert. assertequals ( 0, env. getvalue ( ) )
[4]: org. junit. assert. assertnotnull ( prop )

************

************
tgt: org . junit . assert . assertnotnull ( pib )
[0]: org. junit. assert. assertequals ( null, prop )
[1]: org. junit. assert. assertnull ( prop )
[2]: org. junit. assert. assertequals ( null, prop )
[3]: ) )
[4]: org. junit. assert. assertequals ( message, defaultcredentialsprovider. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( null , value . read ( ) )
[0]: org. junit. assert. assertequals ( message, defaultcredentialsprovider. message )
[1]: org. junit. assert. assertequals ( message, defaultcredentialsprovider. msg )
[2]: org. junit. assert. assertequals ( expected, message )
[3]: ) )
[4]: org. junit. assert. assertequals ( iothubstatuscode. bad_format, result )

************

************
tgt: org . junit . assert . asserttrue ( ( ( keys . count ( ) ) >= 3 ) )
[0]: org. junit. assert. assertequals ( iothubstatuscode. ok_format, result )
[1]: org. junit. assert. assertequals ( iothubstatuscode. unknown_format, result )
[2]: org. junit. assert. assertequals ( iothubstatuscode. legal_format, result )
[3]: org. junit. assert. assertequals ( iothubstatuscode. error, result )
[4]: org. junit. assert. assertnotnull ( local. basedir )

************

************
tgt: org . junit . assert . assertequals ( newcontent , protocol . getcontent ( ) )
[0]: org. junit. assert. assertequals ( 0, local. version )
[1]: org. junit. assert. assertnotnull ( local. basedir, t1 )
[2]: org. junit. assert. assertnotnull ( local. version )
[3]: org. junit. assert. assertnotnull ( local )
[4]: org. junit. assert. assertequals ( dummy2, dummy2. value )

************

************
tgt: org . junit . assert . assertnotnull ( localeparent )
[0]: org. junit. assert. assertnotnull ( dummy2. value )
[1]: org. junit. assert. assertnotnull ( dummy2 )
[2]: org. junit. assert. assertequals ( dummy2, dummy2 )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( type )

************

************
tgt: org . junit . assert . assertequals ( new tillerino . tillerinobot . predicates . numericpropertypredicate ( "tl<=12" , new tillerino . tillerinobot . predicates . titlelength ( ) , double . negative_infinity , true , 12 , true ) , build )
[0]: org. junit. assert. assertnull ( type )
[1]: org. junit. assert. assertequals ( null, type )
[2]: org. junit. assert. assertequals ( type, type )
[3]: org. junit. assert. assertequals ( type, null )
[4]: org. junit. assert. asserttrue ( result )

************

************
tgt: org . junit . assert . assertequals ( importdropresult . getdropid ( ) , exportdropconfig . getdropid ( ) )
[0]: org. junit. assert. assertequals ( false, result )
[1]: org. junit. assert. assertequals ( 0, o. getchecksumdigit ( ) )
[2]: org. junit. assert. assertequals ( 1, o. getchecksumdigit ( ) )
[3]: org. junit. assert. assertequals ( 1, getchecksumdigit ( ) )
[4]: org. junit. assert. assertequals ( 0, getchecksumdigit ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 9, o. getchecksumdigit ( ) )
[1]: org. junit. assert. assertnotnull ( thetarget. getowner ( ) )
[2]: org. junit. assert. assertnotnull ( thetarget )
[3]: org. junit. assert. assertnotnull ( thetarget. getowner )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( router . getruletargets ( ) , org . hamcrest . corematchers . equalto ( com . google . common . collect . lists . transform ( rules , ( rule ) -> rule . gettarget ( ) ) ) )
[0]: )
[1]: org. junit. assert. assertequals ( message, parameter. getstringvalue ( ) )
[2]: org. junit. assert. assertequals ( string, parameter. getstringvalue ( ) )
[3]: org. junit. assert. assertequals ( 8, parameter. getstringvalue ( ) )
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( "vga" , instance . getcolormapname ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, query. fetch ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( query. fetch ( ) )
[3]: org. junit. assert. assertnull ( query. fetch ( ) )
[4]: org. junit. assert. assertequals ( 0, query. fetch ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 1 , bitmap . cardinality ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( view )
[2]: org. junit. assert. assertnull ( view )
[3]: org. junit. assert. assertequals ( view, null )
[4]: org. junit. assert. assertequals ( view, """" )

************

************
tgt: org . junit . assert . assertarrayequals ( new org . dummycreator . dummyfactories . randomarrayfactorytest . testclass [ ] { instance1 , instance2 } , createdummy )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, entry. getrequestmethod ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, entry. getrequestmethod ( ). length )
[3]: org. junit. assert. assertequals ( 1, entry. getrequestmethod ( ) )
[4]: org. junit. assert. assertequals ( 2, entry. getrequestmethod ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( serializer . decode ( bytes ) , org . hamcrest . matchers . is ( diff ) )
[0]: org. junit. assert. assertequals ( 0, entry. getrequestmethod ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, ret )
[2]: org. junit. assert. assertnull ( ret )
[3]: org. junit. assert. assertnotnull ( ret )
[4]: org. junit. assert. assertequals ( 0, ret )

************

************
tgt: org . junit . assert . assertequals ( s , expected , s )
[0]: get ( 0 ) )
[1]: org. junit. assert. assertnotnull ( forward )
[2]: org. junit. assert. assertequals ( errors, forward )
[3]: org. junit. assert. assertnull ( forward )
[4]: , forward )

************

************
tgt: org . junit . assert . assertequals ( "bar" , content . getvalue ( ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( checkacceptresult ( targetfilename ) )
[2]: org. junit. assert. assertequals ( expected, parser. getstringmap ( ) )
[3]: org. junit. assert. assertequals ( expected, data. getstringmap ( ) )
[4]: org. junit. assert. assertequals ( expected, stream. getstringmap ( ) )

************

************
tgt: org . junit . assert . assertthat ( springsprout , org . hamcrest . corematchers . is ( first ) )
[0]: org. junit. assert. assertequals ( expected, java. util. collections. singletonlist ( converter. getstringmap ( ) ) )
[1]: org. junit. assert. assertequals ( expected, java. util. collections. singletonlist ( parser. getstringmap ( ) ) )
[2]: org. junit. assert. assertnotnull ( field. isautocompleteoff ( ) )
[3]: org. junit. assert. assertequals ( 5, field. isautocompleteoff ( ) )
[4]: org. junit. assert. assertequals ( 1, field. isautocompleteoff ( ) )

************

************
tgt: org . junit . assert . asserttrue ( rightservice . isequalto ( service ) )
[0]: org. junit. assert. assertequals ( expectedurl, url )
[1]: org. junit. assert. assertequals ( expectedurl, urls )
[2]: org. junit. assert. assertequals ( expectedurl,url )
[3]: org. junit. assert. assertequals ( expectedurl, uri )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( returnedfund , org . hamcrest . corematchers . is ( fund ) )
[0]: org. junit. assert. assertnotnull ( msg. getfield ( 0 ) )
[1]: org. junit. assert. assertnotnull ( msg. getfield ( msg ) )
[2]: org. junit. assert. assertnotnull ( msg )
[3]: org. junit. assert. assertequals ( msg, x. getfield ( msg ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( org . threadly . util . exceptionutils . getrootcause ( e ) ) == rootcause ) )
[0]: org. junit. assert. assertequals ( 1, relationships. size ( ) )
[1]: org. junit. assert. assertnotnull ( relationships )
[2]: org. junit. assert. assertequals ( 0, relationships. size ( ) )
[3]: org. junit. assert. assertequals ( 1, relationships. count ( ) )
[4]: org. junit. assert. assertequals ( 1, relationships. length )

************

************
tgt: org . junit . assert . assertnotnull ( counts )
[0]: org. junit. assert. assertequals ( 1, result. geterrors ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, result. geterrors ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 2, result. geterrors ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. geterrors ( ). length )
[4]: org. junit. assert. assertequals ( 1, result. geterrors ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( list . size ( ) ) == 5 ) )
[0]: org. junit. assert. assertequals ( expected, instance. getpreferredprocessors ( format. jpg ) )
[1]: org. junit. assert. assertequals ( expected, instance. getpreferredprocessors ( format ) )
[2]: org. junit. assert. assertequals ( expected, instance. getpreferredprocessors ( format. jp2 ) )
[3]: org. junit. assert. assertequals ( expected, instance. getpreferredprocessors ( format. jp g ) )
[4]: org. junit. assert. assertequals ( expected, instance. getpreferredprocessors ( format. jpl ) )

************

************
tgt: org . junit . assert . assertequals ( "/project/branch/page/attachments" , view )
[0]: org. junit. assert. assertequals ( true, isinternalauthmode )
[1]: org. junit. assert. assertequals ( internalauthmode, isinternalauthmode )
[2]: org. junit. assert. asserttrue ( isinternalauthmode )
[3]: org. junit. assert. assertnotnull ( isinternalauthmode )
[4]: org. junit. assert. assertequals ( isinternalauthmode, internalauthmode )

************

************
tgt: org . junit . assert . asserttrue ( blob . equals ( resultblob ) )
[0]: org. junit. assert. assertequals ( 1, stmt. groupingiscomplete ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, batteryinfos. size ( ) )
[2]: org. junit. assert. assertequals ( 0, batteryinfos. size ( ) )
[3]: org. junit. assert. assertequals ( 2, batteryinfos. size ( ) )
[4]: org. junit. assert. assertequals ( 3, batteryinfos. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( apppath , handler . getpathname ( req ) )
[0]: org. junit. assert. assertequals ( 4, batteryinfos. size ( ) )
[1]: org. junit. assert. asserttrue ( ix. verify ( new java. lang. string ( k ) ) )
[2]: org. junit. assert. asserttrue ( ix. verify ( new java. util. arraylist ( ) ) )
[3]: org. junit. assert. assertarrayequals ( spout. tobytearray ( ), out. tobytearray ( ) )
[4]: org. junit. assert. assertarrayequals ( spout, out. tobytearray ( ) )

************

************
tgt: org . junit . assert . assertthat ( resource , org . hamcrest . matchers . equalto ( plugin_loaded_resource ) )
[0]: org. junit. assert. assertsame ( spout. tobytearray ( ), out. tobytearray ( ) )
[1]: org. junit. assert. assertsame ( spout, out. tobytearray ( ) )
[2]: org. junit. assert. assertarrayequals ( spout. tobytearray ( ), out )
[3]: org. junit. assert. assertequals ( str, dtparsed. tostring ( ) )
[4]: org. junit. assert. assertequals ( str, dtparsed. tostring ( ), time. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( simple . getname ( ) , find . get ( ) . getname ( ) )
[0]: org. junit. assert. assertequals ( str, dtparsed. tostring ( ), time )
[1]: org. junit. assert. assertequals ( 0, vh. geteventssize ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( left, right ), java. util. arrays. aslist ( row1, row2 ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( left, right ), java. util. arrays. aslist ( root. upperfocusables ( row1 ) ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( left, right ), java. util. arrays. aslist ( row1, row2, row1 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , tablemetas . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( left, right ), java. util. arrays. upperfocusables ( root ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( left, right, right ), java. util. arrays. aslist ( row1, row2, row1 ) )
[2]: org. junit. assert. assertnotnull ( wrapper )
[3]: org. junit. assert. assertnull ( wrapper )
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( results , sums )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( emptyids, resourcecollection. getids ( ) )
[3]: org. junit. assert. assertequals ( 0, emptyids. size ( ) )
[4]: org. junit. assert. assertequals ( 0, resourcecollection. getids ( ). length )

************

************
tgt: org . junit . assert . assertthat ( attribute . gettype ( ) . getname ( ) , org . hamcrest . core . is . is ( java . util . collection . class . getname ( ) ) )
[0]: org. junit. assert. assertequals ( emptyids. size ( ), emptyids. length )
[1]: ) )
[2]: org. junit. assert. assertequals ( com. google. cloud. bigquery. queryjobconfigurationtest. query_job_configuration, job. getquery ( ) )
[3]: org. junit. assert. assertequals ( com. google. cloud. bigquery. queryjobconfigurationtest. query, job. getquery ( ) )
[4]: org. junit. assert. assertequals ( com. google. cloud. bigquery. queryjobconfigurationtest. query_job_configuration. getquery ( ), job )

************

************
tgt: org . junit . assert . assertequals ( "customername" , customer . getname ( ) )
[0]: org. junit. assert. assertequals ( com. google. cloud. bigquery. queryjobconfigurationtest. query. getquery ( ), job )
[1]: org. junit. assert. assertequals ( com. google. cloud. bigquery. queryjobconfigurationtest. query. getquery ( ), job. getquery ( ) )
[2]: org. junit. assert. assertequals ( 0, records. size ( ) )
[3]: org. junit. assert. assertequals ( offset, record. offset ( ) )
[4]: org. junit. assert. assertequals ( 0l, record. offset ( ) )

************

************
tgt: org . junit . assert . assertnull ( missingpasswordtracker )
[0]: org. junit. assert. assertequals ( position, record. offset ( ) )
[1]: org. junit. assert. assertequals ( record. offset ( ), offset )
[2]: ) )
[3]: org. junit. assert. assertthat ( service. getclusters ( ), org. hamcrest. matchers. contains ( table ( ) ) )
[4]: org. junit. assert. assertthat ( service. getclusters ( ), org. hamcrest. matchers. contains ( table ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , in . available ( ) )
[0]: org. junit. assert. assertthat ( service. getclusters ( ), org. hamcrest. matchers. contains ( table, entity ) )
[1]: org. junit. assert. assertnotnull ( service. getclusters ( ) )
[2]: org. junit. assert. assertthat ( service. getclusters ( ), contains ( table ( ) ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( "aaa" , "bbb" , "ccc" ) , topics )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( ""foo"", result )
[2]: org. junit. assert. assertequals ( ""a"", result )
[3]: org. junit. assert. assertequals ( new java. lang. long ( 1 ), text. getselectiontext ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( event ), text. getselectiontext ( ) )

************

************
tgt: org . junit . assert . assertequals ( value , message . readobject ( ) )
[0]: org. junit. assert. assertequals ( 0, text. getselectiontext ( ) )
[1]: org. junit. assert. assertequals ( swt. gettext ( ), text. getselectiontext ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, lserverconfiguration. getstoragepool ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), lserverconfiguration. getstoragepool ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ruleadded )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), lserverconfiguration. getstoragepool ( ) )
[1]: org. junit. assert. assertequals ( 0, lserverconfiguration. getstoragepool ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), lserverconfiguration. getstoragepool ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( newrequest, msg. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( mocklist , testlist )
[0]: org. junit. assert. assertnotnull ( msg. get ( ) )
[1]: org. junit. assert. assertnotnull ( msg )
[2]: org. junit. assert. assertequals ( resultvalue, nonasciistring )
[3]: org. junit. assert. assertnotnull ( resultvalue )
[4]: org. junit. assert. assertequals ( nonasciistring, resultvalue )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( null, resultvalue )
[1]: org. junit. assert. assertequals ( resultvalue, nonascii string )
[2]: org. junit. assert. assertequals ( 1, frame. getradius ( ) )
[3]: org. junit. assert. assertequals ( 0, frame. getradius ( ) )
[4]: org. junit. assert. assertequals ( 3, frame. getradius ( ) )

************

************
tgt: org . junit . assert . assertequals ( eventosmanifestacaodestinatario , eventomanifestacaodestinatario . getevento ( ) )
[0]: org. junit. assert. assertequals ( 1, frame. size ( ) )
[1]: org. junit. assert. assertequals ( 1, frame. getradius ( ). length )
[2]: org. junit. assert. assertthat ( c. getvalue ( ), org. hamcrest. corematchers. is ( s ) )
[3]: org. junit. assert. assertthat ( c. getvalue ( ), org. hamcrest. corematchers. is ( true ) )
[4]: org. junit. assert. assertthat ( c. getvalue ( ), org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( instance . getscreenshotimages ( 0 ) )
[0]: , c. getvalue ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, found. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( pred ), found )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( predicate ), found )

************

************
tgt: org . junit . assert . assertequals ( 0 , entities . size ( ) )
[0]: org. junit. assert. assertequals ( 0, found. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( pred ), found )
[2]: org. junit. assert. assertequals ( value, 6 )
[3]: org. junit. assert. assertthat ( value, org. hamcrest. corematchers. is ( 1 ) )
[4]: org. junit. assert. assertequals ( value, 1 )

************

************
tgt: org . junit . assert . asserttrue ( msg , dynany . equal ( dynany2 ) )
[0]: org. junit. assert. assertthat ( value, org. hamcrest. corematchers. is ( 0 ) )
[1]: org. junit. assert. assertequals ( value, 4 )
[2]: org. junit. assert. assertequals ( org. oscm. ui. dialog. common. saml2. saml2ctrltest. dummy_reqid, outcome )
[3]: org. junit. assert. assertnotnull ( outcome )
[4]: org. junit. assert. asserttrue ( outcome, outcome. contains ( string_1 ) )

************

************
tgt: org . junit . assert . asserttrue ( workflowinstancelinks . isempty ( ) )
[0]: org. junit. assert. asserttrue ( outcome. contains ( string_1 ) )
[1]: org. junit. assert. assertequals ( org. oscm. ui. dialog. common. saml2. saml2ctrltest. cpo_reqid, outcome )
[2]: org. junit. assert. asserttrue ( result )
[3]: org. junit. assert. assertequals ( true, result )
[4]: org. junit. assert. assertthat ( linkedprojects, org. hamcrest. matchers. contains ( releaselinkr1a ) )

************

************
tgt: org . junit . assert . asserttrue ( msg , ( ( sync . getcount ( ) ) == 0 ) )
[0]: org. junit. assert. assertthat ( linkedprojects, org. hamcrest. matchers. contains ( releaselinkr2a ) )
[1]: org. junit. assert. assertthat ( linkedprojects, org. hamcrest. matchers. contains ( releasepathr1a ) )
[2]: org. junit. assert. assertthat ( linkedprojects, org. hamcrest. matchers. contains ( releaserequestr1a ) )
[3]: org. junit. assert. assertthat ( linkedprojects, contains ( releaselinkr1a ) )
[4]: org. junit. assert. assertequals ( 1, autnum. gethandle ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( autnum. gethandle ( ), stringmaxlength )
[1]: org. junit. assert. assertequals ( 0, autnum. gethandle ( ). size ( ) )
[2]: org. junit. assert. assertequals ( stringaututil. max_length_handle, content. gethandle ( ) )
[3]: org. junit. assert. assertequals ( stringaututil. max_length_handle, content )
[4]: org. junit. assert. assertequals ( 0, subitem. getselectioncount ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( s . spliterator ( ) )
[0]: org. junit. assert. assertequals ( ""1"", uk. gov. dstl. baleen. uima. utils. string. convertstringtoobject ( ""1"" ) )
[1]: org. junit. assert. assertequals ( ""a"", uk. gov. dstl. baleen. uima. utils. string. convertstringtoobject ( ""a"" ) )
[2]: org. junit. assert. assertequals ( null, uk. gov. dstl. baleen. uima. utils. string. convertstringtoobject ( ""1"" ) )
[3]: org. junit. assert. assertequals ( ""a"", uk. gov. dstl. baleen. uima. utils. string. convertstringtoobject ( ""b"" ) )
[4]: org. junit. assert. assertequals ( ""a"", uk. gov. dstl. baleen. uima. utils. string. convertstringtoobject ( ""foo"" ) )

************

************
tgt: org . junit . assert . assertnull ( out )
[0]: org. junit. assert. assertnull ( extractedvalue )
[1]: org. junit. assert. assertnotnull ( extractedvalue )
[2]: org. junit. assert. assertequals ( org. opendaylight. mdsal. binding. dom. adapter. contextextractortest. expected, extractedvalue )
[3]: org. junit. assert. assertequals ( org. opendaylight. mdsal. binding. dom. adapter. contextextractortest. input, extractedvalue )
[4]: org. junit. assert. assertsame ( extractedvalue, input )

************

************
tgt: org . junit . assert . asserttrue ( resultaat )
[0]: org. junit. assert. assertthat ( transformedbgproute. getmetric ( ), org. hamcrest. matchers. equalto ( bgproute ) )
[1]: org. junit. assert. assertthat ( transformedbgproute. getmetric ( ), org. hamcrest. matchers. equalto ( restproute ) )
[2]: org. junit. assert. assertthat ( transformedbgproute. getmetric ( ), org. hamcrest. matchers. equalto ( null ) )
[3]: org. junit. assert. assertthat ( transformedbgproute. getmetric ( ), org. hamcrest. matchers. equalto ( timeout ) )
[4]: org. junit. assert. assertthat ( transformedbgproute. getmetric ( ), org. hamcrest. matchers. equalto ( backgroundproute ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertnotnull ( file. getrootdocument ( ) )
[1]: org. junit. assert. assertequals ( 1, file. getrootdocument ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, file. getrootdocument ( ). size ( ) )
[3]: org. junit. assert. assertnull ( file. getrootdocument ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( populatedstore . get ( td1 . getid ( ) ) )
[0]: org. junit. assert. assertequals ( expected, set1 )
[1]: org. junit. assert. assertequals ( expected, list )
[2]: org. junit. assert. assertarrayequals ( classestoimport, getclassestoimport ( ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: null ), result )

************

************
tgt: org . junit . assert . asserttrue ( trylock )
[0]: null, result )
[1]: null ) )
[2]: null )
[3]: org. junit. assert. assertequals ( list, list. getcalendardefinition ( ) )
[4]: org. junit. assert. assertequals ( def1, list. getcalendardefinition ( ) )

************

************
tgt: org . junit . assert . asserttrue ( timedoutcommand ( 20 ) . execute ( ) )
[0]: org. junit. assert. assertequals ( 1, list. getcalendardefinition ( ). size ( ) )
[1]: org. junit. assert. assertequals ( config1, list. getcalendardefinition ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( ctp )
[4]: org. junit. assert. assertequals ( com. google. common. collect. immutablemap. of ( ), ctp )

************

************
tgt: org . junit . assert . asserttrue ( instance . gethealthcheckactions ( ) . isempty ( ) )
[0]: org. junit. assert. assertnull ( ctp )
[1]: org. junit. assert. assertequals ( ctp, ctp )
[2]: ) )
[3]: org. junit. assert. assertequals ( org. apache. accumulo. core. data. valuetest. data, v. get ( ) )
[4]: org. junit. assert. assertequals ( org. apache. accumulo. core. data. valuetest. data, v )

************

************
tgt: org . junit . assert . assertequals ( expected , sheet . gettrackedcolumnsforautosizing ( ) )
[0]: org. junit. assert. assertequals ( org. apache. accumulo. core. data. valuetest. data. get ( ), v )
[1]: org. junit. assert. assertsame ( org. apache. accumulo. core. data. valuetest. data, v )
[2]: org. junit. assert. assertnotnull ( v. get ( ) )
[3]: org. junit. assert. assertnull ( subject. getrecordforadunit ( null ) )
[4]: org. junit. assert. assertnull ( subject. getrecordforadunit ( """" ) )

************

************
tgt: org . junit . assert . asserttrue ( ( service instanceof org . eclipse . rap . rwt . internal . client . javascriptexecutorimpl ) )
[0]: org. junit. assert. assertnull ( subject. getrecordforadunit ( 0 ) )
[1]: org. junit. assert. assertnull ( subject )
[2]: ) )
[3]: org. junit. assert. assertequals ( even, odd )
[4]: org. junit. assert. assertequals ( even, odd, 0 )

************

************
tgt: org . junit . assert . assertequals ( "www.somedomain.com" , cookie . getdomain ( ) )
[0]: org. junit. assert. assertequals ( even, odd, odd )
[1]: org. junit. assert. assertequals ( even, odd, 1 )
[2]: org. junit. assert. asserttrue ( ( even == odd ) )
[3]: org. junit. assert. assertnotnull ( loggerinit )
[4]: org. junit. assert. assertnull ( loggerinit )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( null, loggerinit )
[1]: org. junit. assert. assertnotnull ( loggerinit. getpathfromrootlogger ( ) )
[2]: org. junit. assert. assertequals ( uuidlogfile, loggerinit )
[3]: org. junit. assert. assertequals ( 1l, m. getlongattr ( ) )
[4]: org. junit. assert. assertequals ( 1, m. getlongattr ( ) )

************

************
tgt: org . junit . assert . assertequals ( job , clone )
[0]: org. junit. assert. asserttrue ( ( ( m. getlongattr ( ) ) == 1l ) )
[1]: org. junit. assert. asserttrue ( ( ( m. getlongattr ( ) ) == 1 ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, repositorycontents ( null ). size ( ) )
[4]: org. junit. assert. assertnotnull ( repositorycontents ( org. axonframework. modelling. saga. annotatedsagamanagertest. startingevent ( ) ) )

************

************
tgt: org . junit . assert . assertfalse ( problem )
[0]: org. junit. assert. assertnotnull ( repositorycontents ( null ) )
[1]: org. junit. assert. assertequals ( 1, repositorycontents ( new java. lang. string ( ) ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( com. microsoft. azure. management. resources. samples. deployusingarmtemplatewithprogress. runsample ( azure ) )
[4]: org. junit. assert. assertequals ( 1, com. microsoft. azure. management. resources. samples. deployusingarmtemplatewithprogress. runsample ( azure ) )

************

************
tgt: org . junit . assert . assertequals ( new org . eclipse . jgit . diff . edit ( 0 , 1 , 0 , 1 ) , e )
[0]: org. junit. assert. assertequals ( 0, com. microsoft. azure. management. resources. samples. deployusingarmtemplatewithprogress. runsample ( azure ) )
[1]: org. junit. assert. assertequals ( com. microsoft. azure. management. resources. samples. deployusingarmtemplatewithprogress. runsample ( azure ), 0 )
[2]: org. junit. assert. assertequals ( com. microsoft. azure. management. resources. samples. deployusingarmtemplatewithprogress. runsample ( azure ), 1 )
[3]: org. junit. assert. assertthat ( validator. getmessagekey ( ), org. hamcrest. corematchers. is ( org. hamcrest. corematchers. is ( "validator.maxlength ) ) )
[4]: org. junit. assert. assertthat ( validator. getmessagekey ( ), org. hamcrest. corematchers. is ( "validator.maxlength ) )

************

************
tgt: org . junit . assert . asserttrue ( globalstreamthread . stillrunning ( ) )
[0]: org. junit. assert. assertthat ( validator. getmessagekey ( ), org. hamcrest. corematchers. is ( "validator.maxlength. class ) )
[1]: org. junit. assert. assertnotnull ( validator. getmessagekey ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( options, options. gettargetpath ( ) )
[4]: org. junit. assert. assertequals ( options. gettargetpath ( ), java. util. collections. emptylist ( ) )

************

************
tgt: org . junit . assert . assertfalse ( iterator . hasnext ( ) )
[0]: org. junit. assert. assertequals ( options. gettargetpath ( ), null )
[1]: org. junit. assert. assertnotnull ( options. gettargetpath ( ) )
[2]: ) )
[3]: org. junit. assert. assertnull ( domain. getlocalecodes ( ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( list , is ( java . util . arrays . aslist ( 0 , 1 , 2 , 3 , 4 , 5 ) ) )
[0]: org. junit. assert. assertequals ( 2, result. size ( ) )
[1]: org. junit. assert. assertequals ( 4, result. size ( ) )
[2]: org. junit. assert. assertequals ( 3, result. size ( ) )
[3]: org. junit. assert. assertequals ( 0, result. size ( ) )
[4]: org. junit. assert. assertnotnull ( reader )

************

************
tgt: org . junit . assert . assertequals ( exp , result )
[0]: org. junit. assert. assertnotnull ( reader. next ( ) )
[1]: org. junit. assert. assertnotnull ( reader. getmessage ( ) )
[2]: org. junit. assert. assertnotnull ( reader. stream )
[3]: org. junit. assert. assertnotnull ( reader. read ( ) )
[4]: org. junit. assert. assertequals ( 1, encounter. getallobs ( true ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( foundresources , contains ( p1id . getvalue ( ) ) )
[0]: org. junit. assert. assertequals ( 1, testcount )
[1]: org. junit. assert. assertequals ( 0, testcount )
[2]: org. junit. assert. assertthat ( testcount, org. hamcrest. matchers. is ( 1 ) )
[3]: org. junit. assert. assertequals ( 3, testcount )
[4]: org. junit. assert. assertequals ( 5, testcount )

************

************
tgt: org . junit . assert . assertthat ( found . size ( ) , org . hamcrest . core . is . is ( 0 ) )
[0]: org. junit. assert. assertfalse ( violated )
[1]: org. junit. assert. assertarrayequals ( arr, res. strarr )
[2]: org. junit. assert. assertarrayequals ( arr, res )
[3]: org. junit. assert. assertarrayequals ( array, res. strarr )
[4]: org. junit. assert. assertarrayequals ( arr )

************

************
tgt: org . junit . assert . assertarrayequals ( expresult , result )
[0]: )
[1]: org. junit. assert. assertnotnull ( buf )
[2]: org. junit. assert. assertnotnull ( buf. tostring ( ) )
[3]: org. junit. assert. assertequals ( expecting )
[4]: org. junit. assertequals. expecting, found )

************

************
tgt: org . junit . assert . asserttrue ( berichtentiteiten . isempty ( ) )
[0]: org. junit. assertequals ( expecting, found )
[1]: assertequals assertequals expecting, found )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( password )
[4]: org. junit. assert. assertequals ( """", password )

************

************
tgt: org . junit . assert . assertnotnull ( section )
[0]: org. junit. assert. assertnull ( password )
[1]: org. junit. assert. assertequals ( null, password )
[2]: ) )
[3]: org. junit. assert. assertequals ( result, input )
[4]: org. junit. assert. assertequals ( results, input )

************

************
tgt: org . junit . assert . assertfalse ( results . hasnext ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( result, inputs )
[2]: ) )
[3]: org. junit. assert. asserttrue ( fs. mkdirs ( test_file ) )
[4]: org. junit. assert. assertequals ( 1, getids ( res ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , failurebatchcount . get ( ) )
[0]: org. junit. assert. assertequals ( 0, getids ( res ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, getids ( doc ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, getids ( res ). size ( ) ) ;
[3]: ) )
[4]: org. junit. assert. assertequals ( result. getquerybuilder ( ), result. getquerybuilder ( ) )

************

************
tgt: org . junit . assert . assertequals ( envdir , resolver . getsdkorthrow ( ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), result. getquerybuilder ( ) )
[1]: org. junit. assert. assertnotnull ( result. getquerybuilder ( ) )
[2]: org. junit. assert. assertequals ( 1, result. getquerybuilder ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. optional. of ( 1 ), result. getquerybuilder ( ) )
[4]: org. junit. assert. assertthat ( attributemap. size ( ), org. hamcrest. matchers. is ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( msg . getpayloadbuffer ( ) , expectedresponsev1 ) )
[0]: org. junit. assert. assertthat ( attributemap. size ( ), org. hamcrest. matchers. is ( 0 ) )
[1]: org. junit. assert. assertequals ( 1, attributemap. size ( ) )
[2]: org. junit. assert. assertequals ( attributemapentries. size ( ), attributemap. size ( ) )
[3]: org. junit. assert. assertequals ( 0, attributemap. size ( ) )
[4]: org. junit. assert. asserttrue ( ff4jconf. containskey ( null ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertfalse ( ff4jconf. containskey ( null ) )
[1]: org. junit. assert. asserttrue ( ff4jconf. containskey ( java. lang. string. class ) )
[2]: org. junit. assert. asserttrue ( ff4jconf. containskey ( java. lang. object. class ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( log. get ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result . getfirstheader ( "date" ) )
[0]: org. junit. assert. assertequals ( 0, log. get ( ). length )
[1]: org. junit. assert. assertequals ( null, log. get ( ) )
[2]: org. junit. assert. assertnull ( log. get ( ) )
[3]: org. junit. assert. assertequals ( 0, log. get ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( timeframeview ), timeframeeditor. events )

************

************
tgt: org . junit . assert . asserttrue ( bitmap . isempty ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), timeframeeditor. events )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( timeframeview ), timeframeeditor. values )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, res. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( compute . getmachinetype ( com . google . cloud . compute . deprecated . computeimpltest . machine_type_id . getzone ( ) , com . google . cloud . compute . deprecated . computeimpltest . machine_type_id . gettype ( ) ) )
[0]: org. junit. assert. assertequals ( com. google. firebase. database. integration. querytestit. masterapp, snap. child ( com. google. firebase. database. integration. querytestit. masterapp. class ) )
[1]: org. junit. assert. assertequals ( com. google. firebase. database. integration. querytestit. masterapp, snap. child ( com. google. firebase. database. integration. querytestit. masterapp ) )
[2]: org. junit. assert. assertequals ( com. google. firebase. database. integration. querytestit. masterapp, snap. child ( 1 ) )
[3]: org. junit. assert. assertequals ( com. google. firebase. database. integration. querytestit. masterapp, snap. child ( java. lang. string. class ) )
[4]: org. junit. assert. assertequals ( com. google. firebase. database. integration. querytestit. masterapp, snap. child ( com. google. firebase. database. integration ) )

************

************
tgt: org . junit . assert . assertequals ( expectedresultjson , actualresultjson )
[0]: org. junit. assert. assertequals ( 1, mockclassannotations. length )
[1]: org. junit. assert. assertnull ( com. feilong. taglib. display. sensitive. sensitiveutil. parse ( null, null ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), com. feilong. taglib. display. sensitive. sensitiveutil. parse ( null, null ) )
[3]: type ) { } }
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, resultset. getcolumncount ( ) )
[2]: org. junit. assert. assertequals ( 0, resultset. getcolumncount ( ) )
[3]: org. junit. assert. assertequals ( 4, resultset. getcolumncount ( ) )
[4]: org. junit. assert. assertequals ( 3, resultset. getcolumncount ( ) )

************

************
tgt: org . junit . assert . asserttrue ( mapper1 . equals ( mapper2 ) )
[0]: org. junit. assert. assertequals ( 5, resultset. getcolumncount ( ) )
[1]: org. junit. assert. assertequals ( i, queue. size ( ) )
[2]: org. junit. assert. assertequals ( size, queue. size ( ) )
[3]: org. junit. assert. assertnotnull ( mtest )
[4]: org. junit. assert. assertnotnull ( mtest. injectable )

************

************
tgt: org . junit . assert . asserttrue ( ( ( results . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertnotnull ( mtest. jvm )
[1]: org. junit. assert. assertnotnull ( mtest. activities )
[2]: org. junit. assert. assertnotnull ( mtest. operations )
[3]: org. junit. assert. assertnotnull ( profilepage. getusername ( ) )
[4]: org. junit. assert. assertequals ( name, profilepage. getusername ( ) )

************

************
tgt: org . junit . assert . assertfalse ( page . cansetupdefaultvalue ( ) )
[0]: org. junit. assert. assertequals ( profilepage. getusername ( ), null )
[1]: org. junit. assert. assertequals ( null, profilepage. getusername ( ) )
[2]: org. junit. assert. assertequals ( profilepage. getusername ( ), name )
[3]: org. junit. assert. assertequals ( 1, slotcina. isvisible ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, contentcina. isvisible ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( tree . isbalancedtree ( ) , org . hamcrest . core . is . is ( false ) )
[0]: org. junit. assert. assertequals ( 1, presenterwidgetb. isvisible ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, slotcina. isvisible ( ) )
[2]: org. junit. assert. assertequals ( 1, slotcina. isvisible ( ). length )
[3]: org. junit. assert. assertequals ( 1, result. getnuofdimensions ( ) )
[4]: org. junit. assert. assertequals ( 0, result. getnuofdimensions ( ) )

************

************
tgt: org . junit . assert . asserttrue ( comparejson ( event , "pipeline-event" ) )
[0]: org. junit. assert. assertequals ( 1, result. getnuofdimensions ( ), 0 )
[1]: org. junit. assert. assertequals ( 1l, result. getnuofdimensions ( ) )
[2]: org. junit. assert. assertequals ( 1, count )
[3]: org. junit. assert. assertequals ( 1, count ( user1, user2 ) )
[4]: org. junit. assert. assertequals ( 1, testcount ( user1 ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( 1, results. size ( ) )
[1]: org. junit. assert. assertequals ( 1, testcount ( user1, null ) )
[2]: org. junit. assert. asserttrue ( org. springframework. ide. eclipse. data. jdt. core. repositoryinformation. isspringdatarepository ( type ) )
[3]: org. junit. assert. assertequals ( true, org. springframework. ide. eclipse. data. jdt. core. repositoryinformation. isspringdatarepository ( type ) )
[4]: org. junit. assert. assertequals ( firstinstance, secondinstance )

************

************
tgt: org . junit . assert . assertequals ( naamzonderkoppel , codezonderkoppel )
[0]: org. junit. assert. assertnotnull ( secondinstance )
[1]: org. junit. assert. assertequals ( secondinstance, firstinstance )
[2]: org. junit. assert. assertnotnull ( firstinstance )
[3]: org. junit. assert. assertequals ( firstinstance, firstinstance )
[4]: org. junit. assert. assertequals ( expectedjavascript, generatedjavascript )

************

************
tgt: org . junit . assert . asserttrue ( pool . isclosed ( ) )
[0]: org. junit. assert. assertequals ( java. util. list. class, taptype )
[1]: org. junit. assert. assertequals ( java. util. collection. class, taptype )
[2]: org. junit. assert. assertequals ( java. util. arraylist. class, taptype )
[3]: org. junit. assert. assertnotnull ( resourcelist )
[4]: org. junit. assert. assertequals ( 1, resourcelist. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( manager . dosendlicenseexpiration ( licenseinfo ) )
[0]: org. junit. assert. assertthat ( resourcelist, org. hamcrest. corematchers. equalto ( 1 ) )
[1]: org. junit. assert. assertequals ( 3, resourcelist. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, driver. length ( ) )
[4]: org. junit. assert. assertequals ( 0, driver. length ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( target )
[0]: org. junit. assert. assertequals ( 3, driver. length ( ) )
[1]: org. junit. assert. assertequals ( 5, driver. length ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( config. getartifact ( ) )
[4]: org. junit. assert. assertnull ( config. getartifact ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( md . getplaintext ( ) ) == null ) )
[0]: org. junit. assert. assertequals ( 1, config. getartifact ( ) )
[1]: org. junit. assert. assertequals ( 1, config. getartifact ( ). length )
[2]: ) )
[3]: org. junit. assert. assertsame ( composite, cloud. getimagedata ( ) )
[4]: org. junit. assert. assertnull ( cloud. getimagedata ( ) )

************

************
tgt: org . junit . assert . asserttrue ( product . equals ( product ) )
[0]: org. junit. assert. assertequals ( composite, cloud. getimagedata ( ) )
[1]: org. junit. assert. assertnotnull ( option. getname ( ) )
[2]: org. junit. assert. assertequals ( option. getname ( ), option. getname ( ) )
[3]: org. junit. assert. assertequals ( res, row )
[4]: org. junit. assert. assertequals ( res, null )

************

************
tgt: org . junit . assert . asserttrue ( simpleclass . decoratorcalled )
[0]: org. junit. assert. assertequals ( res, result )
[1]: , res )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, vars. getrule ( ""foo"" ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, vars. getrule ( ""foo"" ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . equalto ( expected ) )
[0]: org. junit. assert. assertequals ( 0, vars. getrule ( null ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, vars. getrule ( string ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, vars. getrule ( null ). size ( ) )
[3]: org. junit. assert. assertnull ( resultnat )
[4]: org. junit. assert. assertequals ( natcode, resultnat )

************

************
tgt: org . junit . assert . assertequals ( repo , repo2 )
[0]: org. junit. assert. assertequals ( """", resultnat )
[1]: org. junit. assert. assertequals ( ncode, resultnat )
[2]: org. junit. assert. assertequals ( natcode, resultnat )
[3]: org. junit. assert. assertnotnull ( sequentialsinghelper ( device, 1 ) )
[4]: org. junit. assert. assertequals ( 1, sequentialsinghelper ( device, 1 ) )

************

************
tgt: org . junit . assert . assertequals ( dbmap . get ( jsonstr ) , jsonstr )
[0]: org. junit. assert. assertequals ( 1, sequentialsinghelper ( device, 0 ) )
[1]: org. junit. assert. assertnotnull ( sequentialsinghelper ( device, 0 ) )
[2]: org. junit. assert. assertnotnull ( sequentialsinghelper ( device, 16 ) )
[3]: org. junit. assert. assertequals ( testexception, e )
[4]: org. junit. assert. assertequals ( testexception, resultfuture )

************

************
tgt: org . junit . assert . assertthat ( greeting . sayhello ( ) , org . hamcrest . corematchers . is ( "hello<sp>world!!" ) )
[0]: org. junit. assert. assertnotnull ( selectedcell )
[1]: org. junit. assert. assertnull ( selectedcell )
[2]: org. junit. assert. assertequals ( null, selectedcell )
[3]: org. junit. assert. assertequals ( s, selectedcell )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( count * ( count + 1 ) ) / 2 ) , result . get ( ) )
[0]: org. junit. assert. assertequals ( 0, i )
[1]: org. junit. assert. assertequals ( 0, files. length ( ) )
[2]: org. junit. assert. assertequals ( 0, but. length ( ) )
[3]: org. junit. assert. assertequals ( 0, compliance. length ( ) )
[4]: org. junit. assert. assertequals ( 0, collection. length ( ) )

************

************
tgt: org . junit . assert . assertequals ( value , message . readboolean ( ) )
[0]: org. junit. assert. assertequals ( null, complete ( null ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), complete ( null ) )
[2]: org. junit. assert. assertequals ( 1, complete ( null ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, complete ( null ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), complete ( null ) )

************

************
tgt: org . junit . assert . assertequals ( packet , p )
[0]: org. junit. assert. assertequals ( 1, exitcode )
[1]: org. junit. assert. assertnotnull ( getstarboard ( ) )
[2]: org. junit. assert. assertnull ( getstarboard ( ) )
[3]: org. junit. assert. assertequals ( 1, msg. getstarboard ( ) )
[4]: org. junit. assert. assertequals ( 1, msg. getstarboard ( ). length )

************

************
tgt: org . junit . assert . assertequals ( ( before + 1 ) , service . getallvisitattributetypes ( ) . size ( ) )
[0]: org. junit. assert. assertnull ( getstarboard ( ). isempty ( ) )
[1]: org. junit. assert. assertequals ( result. tostring ( ), expected )
[2]: org. junit. assert. assertequals ( result. tostring ( ), path. tostring ( ) )
[3]: org. junit. assert. assertequals ( result. tostring ( ), 200, result. tostring ( ) )
[4]: org. junit. assert. assertequals ( result. tostring ( ), 0, result. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( advance . getid ( ) ) != null ) )
[0]: org. junit. assert. assertequals ( result. tostring ( ), expected. tostring ( ) )
[1]: org. junit. assert. assertequals ( r [ i ], a [ i ], 0 )
[2]: org. junit. assert. assertequals ( r [ i ], a [ i ], 0.0 )
[3]: org. junit. assert. assertequals ( java. lang. double. valueof ( i ), r [ i ], 0 )
[4]: org. junit. assert. assertequals ( java. lang. double. tostring ( i ), r [ i ], 0 )

************

************
tgt: org . junit . assert . assertthat ( result . validate ( ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( 0.0, r [ i ], 0 )
[1]: org. junit. assert. assertequals ( 1, countresourcesinindex ( ) )
[2]: org. junit. assert. assertequals ( 0, countresourcesinindex ( ) )
[3]: org. junit. assert. assertequals ( 1, countsresourcesinindex ( ) )
[4]: org. junit. assert. assertnotnull ( resp )

************

************
tgt: org . junit . assert . assertthat ( tz . gethistory ( ) , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . nullvalue ( ) ) )
[0]: org. junit. assert. assertnotnull ( resp. select ( null ) )
[1]: org. junit. assert. assertnotnull ( resp. select ( ) )
[2]: org. junit. assert. assertnull ( resp )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, dataunit. getdebugdirectories ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnull ( cz . zcu . kiv . jop . util . arrayutils . toobjectarray ( ( ( double [ ] ) ( null ) ) ) )
[0]: org. junit. assert. assertnotnull ( foostatefsm. getname ( ) )
[1]: org. junit. assert. assertequals ( name, foostatefsm. getname ( ) )
[2]: org. junit. assert. assertnull ( foostatefsm. getname ( ) )
[3]: org. junit. assert. assertnotnull ( foostatefsm )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( statusstr , status )
[0]: org. junit. assert. assertequals ( i, e. geterrorcode ( ) )
[1]: org. junit. assert. assertequals ( err. geterrorcode ( ), e. geterrorcode ( ) )
[2]: org. junit. assert. assertequals ( e. geterrorcode ( ), err. tojson ( ) )
[3]: org. junit. assert. assertequals ( e. geterrorcode ( ), err. geterrorcode ( ) )
[4]: org. junit. assert. assertequals ( e. geterrorcode ( ), err. getid ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( com . hartwig . hmftools . patientdb . curators . treatmentcurator . fromproductionresource ( ) )
[0]: org. junit. assert. assertarrayequals ( new int [ ] { 1, 1 }, result )
[1]: org. junit. assert. assertarrayequals ( new int [ ] { 1 }, result )
[2]: org. junit. assert. assertarrayequals ( new int [ 0 ], result )
[3]: org. junit. assert. assertarrayequals ( null, result )
[4]: , result. length )

************

************
tgt: org . junit . assert . asserttrue ( changesetcollections . isempty ( ) )
[0]: org. junit. assert. assertequals ( datawave. query. jexl. functions. contentfunctionstest. expect ( o, false ), o )
[1]: org. junit. assert. assertequals ( o, datawave. query. jexl. functions. contentfunctionstest. expect ( o, false ) )
[2]: org. junit. assert. assertequals ( o, datawave. query. jexl. functions. contentfunctionstest. expect ( o, null ) )
[3]: org. junit. assert. assertequals ( datawave. query. jexl. functions. contentfunctionstest. expect, o )
[4]: org. junit. assert. assertequals ( true, o )

************

************
tgt: org . junit . assert . assertthat ( result ( ) , org . hamcrest . matchers . is ( org . hamcrest . matchers . equalto ( expectedresult ) ) )
[0]: org. junit. assert. assertarrayequals ( floats, floats2, floats )
[1]: org. junit. assert. assertarrayequals ( floats, floats2 )
[2]: org. junit. assert. assertarrayequals ( floats, floats2, 0.0 )
[3]: , floats2 )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( ( drawable instanceof com . facebook . drawee . drawable . visibilityawaredrawable ) )
[0]: org. junit. assert. assertequals ( com. google. cloud. firestore. localfirestorehelper. query ( com. google. cloud. firestore. localfirestorehelper. values ( ) ), runquery. getvalue ( ) )
[1]: org. junit. assert. assertequals ( com. google. cloud. firestore. localfirestorehelper. query ( com. google. cloud. firestore. localfirestorehelper. tostring ( ) ), runquery. getvalue ( ) )
[2]: org. junit. assert. assertequals ( com. google. cloud. firestore. localfirestorehelper. query ( com. google. cloud. firestore. localfirestorehelper. values ( ) ), runquery )
[3]: org. junit. assert. assertequals ( com. google. cloud. firestore. localfirestorehelper. query ( com. google. cloud. firestore. localfirestorehelper. tostring ( ) ), runquery )
[4]: org. junit. assert. assertequals ( com. google. cloud. firestore. localfirestorehelper. query ( com. google. cloud. firestore. localfirestorehelper. class ), runquery. getvalue ( ) )

************

************
tgt: org . junit . assert . assertnull ( resolver . resolve ( "id" ) )
[0]: org. junit. assert. assertnotnull ( teststring2 )
[1]: org. junit. assert. assertequals ( teststring2, teststring1 )
[2]: org. junit. assert. assertequals ( teststring2, teststring2 )
[3]: org. junit. assert. assertequals ( teststring1, teststring2 )
[4]: org. junit. assert. assertnotnull ( teststring1 )

************

************
tgt: org . junit . assert . asserttrue ( ( ( value == 6 ) || ( value == 5 ) ) )
[0]: org. junit. assert. assertequals ( 1, problems. size ( ) )
[1]: org. junit. assert. assertequals ( 0, problems. size ( ) )
[2]: public void action ( ) { }
[3]: public void size ( ) { }
[4]: public void error ( ) { }

************

************
tgt: org . junit . assert . assertequals ( a , addavg . call ( a , 0l ) )
[0]: org. junit. assert. assertnotnull ( ex )
[1]: org. junit. assert. assertnotnull ( output )
[2]: org. junit. assert. assertequals ( null, output )
[3]: org. junit. assert. assertequals ( ""foo"", output )
[4]: org. junit. assert. assertequals ( string, output )

************

************
tgt: org . junit . assert . assertnull ( element )
[0]: org. junit. assert. assertequals ( ""foo"", output )
[1]: org. junit. assert. assertnull ( item. getbean ( ) )
[2]: org. junit. assert. assertequals ( org. pac4j. core. context. httpconstants. bearer_header_prefix, profile. getid ( ) )
[3]: org. junit. assert. assertequals ( org. pac4 j. core. context. httpconstants. bearer_header_prefix, profile. getid ( ) )
[4]: org. junit. assert. assertequals ( org. pac4j. core. context. httpconstants. bearer_header_prefix }, profile. getid ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( org. pac4j. core. context. httpconstants. bearer_header, profile. getid ( ) )
[1]: org. junit. assert. assertnotnull ( profile. getid ( ) )
[2]: org. junit. assert. assertequals ( org. pentaho. platform. dataaccess. datasource. wizard. service. impl. connectionserviceimpltest. conn_name, connection )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), connection )
[4]: org. junit. assert. assertequals ( 1, connection. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( null, connection )
[1]: org. junit. assert. assertnotnull ( connection )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( java. lang. string. class, result )
[4]: org. junit. assert. assertequals ( ""test"", result )

************

************
tgt: org . junit . assert . assertnotnull ( glp )
[0]: org. junit. assert. assertequals ( ""a"", result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertnotnull ( abuse_contact_organisation )
[3]: org. junit. assert. assertnotnull ( abuse_contact_organisation. getid ( ) )
[4]: org. junit. assert. assertnotnull ( abuse_contact_allocationnum )

************

************
tgt: org . junit . assert . assertequals ( "/date(1414656074074)/" , getlastauthenticated )
[0]: org. junit. assert. assertnotnull ( abuse_contact_role )
[1]: org. junit. assert. assertnotnull ( abuse_contact_organisation. result )
[2]: org. junit. assert. assertequals ( 1, outages. length )
[3]: org. junit. assert. assertequals ( 0, outages. length )
[4]: org. junit. assert. assertequals ( 2, outages. length )

************

************
tgt: org . junit . assert . assertarrayequals ( imagedata , bytes )
[0]: org. junit. assert. assertnotnull ( adapter. getserverinfo ( ) )
[1]: org. junit. assert. assertnotnull ( adapter )
[2]: org. junit. assert. assertequals ( config, adapter. getserverinfo ( ) )
[3]: org. junit. assert. assertnotnull ( adapter, adapter. getserverinfo ( ) )
[4]: org. junit. assert. assertnotnull ( adapter = adapter. getserverinfo ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , constraintviolations . size ( ) )
[0]: org. junit. assert. assertequals ( 200, response. getstatus ( ) )
[1]: org. junit. assert. assertnotnull ( response )
[2]: org. junit. assert. assertequals ( response. getstatus ( ), 200 )
[3]: org. junit. assert. assertequals ( entity, response )
[4]: org. junit. assert. assertequals ( entity, response. getstatus ( ) )

************

************
tgt: org . junit . assert . assertsame ( decorator , actualdecorator )
[0]: org. junit. assert. assertnotnull ( context )
[1]: org. junit. assert. assertequals ( 1, study1. getusers ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 3, study1. getusers ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, bytescontainer. skip )
[4]: org. junit. assert. assertequals ( 0, bytescontainer. skip )

************

************
tgt: org . junit . assert . asserttrue ( result . ismatch ( ) )
[0]: org. junit. assert. assertequals ( null, bytescontainer. skip )
[1]: org. junit. assert. assertnotnull ( bytescontainer )
[2]: org. junit. assert. assertequals ( null, bytescontainer )
[3]: org. junit. assert. assertnotnull ( domains )
[4]: org. junit. assert. assertequals ( rsusermock, domains )

************

************
tgt: org . junit . assert . assertequals ( org . apache . shindig . gadgets . render . htmlrenderertest . basic_html_content , content )
[0]: org. junit. assert. assertnotnull ( domain )
[1]: org. junit. assert. asserttrue ( ( domains == null ) )
[2]: org. junit. assert. asserttrue ( ( domains!= null ) )
[3]: org. junit. assert. asserttrue ( found )
[4]: org. junit. assert. assertequals ( 0, list. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( equal )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) == 1 ) )
[2]: org. junit. assert. assertequals ( 2, list. size ( ) )
[3]: org. junit. assert. assertnotnull ( sds. getreadonlyconnection ( url ) )
[4]: org. junit. assert. assertnotnull ( sds. getreadonlyconnection ( username ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , config . getbuildtriggers ( ) . size ( ) )
[0]: org. junit. assert. assertnotnull ( sds. getreadonlyconnection ( string ) )
[1]: org. junit. assert. assertnotnull ( chemobject. getsymbol ( ) )
[2]: org. junit. assert. assertnull ( chemobject. getsymbol ( ) )
[3]: org. junit. assert. assertnotnull ( chem object. getsymbol ( ) )
[4]: org. junit. assert. assertnotnull ( chemobject )

************

************
tgt: org . junit . assert . asserttrue ( getexception )
[0]: ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( values ), 1, values. length )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( values ), 0, values. length )
[3]: org. junit. assert. assertequals ( com. liferay. portal. workflow. kaleo. definition. durationscale. tostring ( values ), 1, values. length )
[4]: org. junit. assert. assertequals ( com. liferay. portal. workflow. kaleo. definition. durationscale. tostring ( values ), 0, values. length )

************

************
tgt: org . junit . assert . assertequals ( expected , elements )
[0]: org. junit. assert. assertequals ( java. util. arrays. tostring ( values ), 3, values. length )
[1]: org. junit. assert. assertequals ( 0, wakelockinfos. size ( ) )
[2]: org. junit. assert. assertequals ( 0, wakelockinfos. size ( ), 0 )
[3]: org. junit. assert. assertequals ( 1, wakelockinfos. size ( ) )
[4]: org. junit. assert. assertequals ( 1, wakelockinfos. size ( ), 0 )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 5, wakelockinfos. size ( ) )
[1]: org. junit. assert. assertequals ( 1, equeue. size ( ) )
[2]: org. junit. assert. assertequals ( tmproot, folderroot. tostring ( ) )
[3]: org. junit. assert. assertequals ( tmproot, folderroot. tostring ( ). trim ( ) )
[4]: org. junit. assert. assertequals ( tmproot. tostring ( ), folderroot. tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( merged , org . hamcrest . corematchers . equalto ( expected ) )
[0]: org. junit. assert. assertequals ( tmproot, folderroot. tostring ( ). tolowercase ( ) )
[1]: org. junit. assert. assertnotnull ( tmproot )
[2]: org. junit. assert. assertequals ( "", wrapper. getyear ( ) )
[3]: org. junit. assert. assertequals ( "", wrapper. getyear ( ) )
[4]: org. junit. assert. assertequals ( "" }, wrapper. getyear ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , validatedentitycontexts . size ( ) )
[0]: org. junit. assert. assertequals ( "" ), wrapper. getyear ( ) )
[1]: org. junit. assert. assertequals ( ""l, wrapper. getyear ( ) )
[2]: org. junit. assert. assertfalse ( registered. value )
[3]: org. junit. assert. assertfalse ( registered. getvalue )
[4]: org. junit. assert. assertfalse ( regist. value )

************

************
tgt: org . junit . assert . assertequals ( "test" , task . getdatastring ( ) )
[0]: org. junit. assert. assertfalse ( register. value )
[1]: ) )
[2]: org. junit. assert. assertequals ( warning, result. getfirstheader ( warning ) )
[3]: org. junit. assert. assertequals ( warning, result. getfirstheader ( warn ) )
[4]: org. junit. assert. assertequals ( warning, result. getfirstheader ( error ) )

************

************
tgt: org . junit . assert . assertnull ( provider . findnexteditpart ( null , searchstring ) )
[0]: org. junit. assert. assertequals ( warning, result. getfirstheader ( null ) )
[1]: org. junit. assert. assertequals ( warning, result. getfirstheader ( debug ) )
[2]: org. junit. assert. assertthat ( minimumbalanceprincipal, org. hamcrest. corematchers. is ( org. mifos. framework. testutils. createmoney ( september5thdetails ) ) )
[3]: org. junit. assert. assertthat ( minimumbalanceprincipal, org. hamcrest. corematchers. is ( org. mifos. framework. testutils. createmoney ( september13thdetails ) ) )
[4]: org. junit. assert. assertthat ( minimumbalanceprincipal, org. hamcrest. corematchers. is ( org. mifos. framework. testutils. createmoney ( september3thdetails ) ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , userdao . findall ( params ) . size ( ) )
[0]: org. junit. assert. assertthat ( minimumbalanceprincipal, org. hamcrest. corematchers. is ( org. mifos. framework. testutils. createmoney ( september4thdetails ) ) )
[1]: org. junit. assert. assertthat ( minimumbalanceprincipal, org. hamcrest. corematchers. is ( org. mifos. framework. testutils. createmoney ( september6thdetails ) ) )
[2]: org. junit. assert. assertnotnull ( org. pentaho. platform. dataaccess. datasource. wizard. service. impl. connectionserviceimplit. connectionserviceimpl. deleteconnection ( connection. getname ( ) ) )
[3]: org. junit. assert. assertnotnull ( org. pentaho. platform. dataaccess. datasource. wizard. service. impl. connectionserviceimplit. connectionserviceimpl. deleteconnection ( connection. getid ( ) ) )
[4]: org. junit. assert. assertnotnull ( connection. deleteconnection ( org. pentaho. platform. dataaccess. datasource. wizard. service. impl. connectionserviceimplit. exist_connection_name ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( org. pentaho. platform. dataaccess. datasource. wizard. service. impl. connectionserviceimplit. connectionserviceimpl. deleteconnection ( connection. getname ( ) ). getid ( ) )
[1]: org. junit. assert. assertnotnull ( org. pentaho. platform. dataaccess. datasource. wizard. service. impl. connectionserviceimplit. connectionserviceimpl. deleteconnection ( connection. getname ( ) ). tostring ( ) )
[2]: org. junit. assert. assertnotnull ( attribute. getid ( ) )
[3]: org. junit. assert. assertnull ( attribute. getid ( ) )
[4]: org. junit. assert. assertnotnull ( name. getid ( ) )

************

************
tgt: org . junit . assert . assertthat ( context . getpath ( ) , org . hamcrest . core . is . is ( expectedpath ) )
[0]: org. junit. assert. assertnotnull ( attributes. getid ( ) )
[1]: ) )
[2]: org. junit. assert. assertnull ( err, err )
[3]: org. junit. assert. assertequals ( err, err )
[4]: org. junit. assert. asserttrue ( datawave. query. jexl. visitors. hastoplevelnegationvisitor. hastoplevelnegation ( script ) )

************

************
tgt: org . junit . assert . asserttrue ( found . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, users. size ( ) )
[1]: org. junit. assert. assertthat ( users. size ( ), is ( 1 ) )
[2]: org. junit. assert. assertequals ( 0, users. size ( ) )
[3]: org. junit. assert. assertthat ( users. size ( ), is ( 0 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( bean )
[0]: org. junit. assert. assertequals ( expected, new java. net. url ( url ) )
[1]: org. junit. assert. assertequals ( expected, new java. net. uri ( url ) )
[2]: org. junit. assert. assertequals ( expected, new java. net. url ( url ). tostring ( ) )
[3]: org. junit. assert. assertequals ( expected )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( name , s . getname ( ) )
[0]: org. junit. assert. assertfalse ( result )
[1]: org. junit. assert. assertequals ( false, result )
[2]: org. junit. assert. assertthat ( result )
[3]: org. junit. assert. assertthat ( result, org )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( 1, results. size ( ) )
[1]: org. junit. assert. assertnotnull ( city. getshape ( ) )
[2]: org. junit. assert. assertnotnull ( city )
[3]: org. junit. assert. assertnull ( city )
[4]: org. junit. assert. assertequals ( null, city )

************

************
tgt: org . junit . assert . assertfalse ( exists )
[0]: ) )
[1]: org. junit. assert. asserttrue ( isok )
[2]: org. junit. assert. asserttrue ( rs. usesdfa ( net. sourceforge. pmd. lang. languageregistry ) )
[3]: org. junit. assert. asserttrue ( rs. usesdfa ( net. sourceforge. pmd. lang. languageregistry. getlanguage ( dummylanguagemodule ) ) )
[4]: org. junit. assert. assertfalse ( rs. usesdfa ( net. sourceforge. pmd. lang. languageregistry ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( com . spotify . folsom . integrationtest . value2 ) + ( com . spotify . folsom . integrationtest . value1 ) ) , binaryclient . get ( com . spotify . folsom . integrationtest . key1 ) . tocompletablefuture ( ) . get ( ) )
[0]: org. junit. assert. assertequals ( true, rs. usesdfa ( net. sourceforge. pmd. lang. languageregistry ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( c. tostring ( ), result. tostring ( ) )
[3]: org. junit. assert. assertequals ( c. tostring ( ), result. get ( ) )
[4]: org. junit. assert. assertequals ( c. tostring ( ), result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( numeropedidoitemcliente , produto . getnumeropedidoitemcliente ( ) )
[0]: org. junit. assert. assertequals ( c. tostring ( ), result )
[1]: . tostring ( ) )
[2]: org. junit. assert. assertequals ( boolean. true, paramset. issetparameter ( ) )
[3]: org. junit. assert. assertequals ( true, paramset. issetparameter ( ) )
[4]: org. junit. assert. assertnotnull ( paramset. issetparameter ( ) )

************

************
tgt: org . junit . assert . assertequals ( unicharcode , keyevent . getkey ( ) . getunicharcode ( ) )
[0]: org. junit. assert. assertnotnull ( rec )
[1]: org. junit. assert. assertequals ( 1, rec. getrecordifstored ( null ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, rec. getrecordifstored ( record ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, rec. getrecordifstored ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, rec. getrecordifstored ( null ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( testtask . gettablename ( ) , com . amazonaws . mobileconnectors . dynamodbv2 . dynamodbmapper . parallelscantasktest . table )
[0]: org. junit. assert. assertequals ( originalsslex, interceptedex )
[1]: org. junit. assert. assertequals ( origsslex, interceptedex )
[2]: org. junit. assert. assertequals ( oldsslex, interceptedex )
[3]: org. junit. assert. assertsame ( originalsslex, interceptedex )
[4]: org. junit. assert. assertequals ( orig origlex, interceptedex )

************

************
tgt: org . junit . assert . asserttrue ( berichtentiteiten . isempty ( ) )
[0]: org. junit. assert. assertequals ( set ( rootsrc1 ), output )
[1]: org. junit. assert. assertequals ( set ( input ), output )
[2]: org. junit. assert. assertequals ( set ( rootsrc1, output ), output )
[3]: , output )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "/location" , mbean . getbundlelocation ( pid ) )
[0]: org. junit. assert. assertnotnull ( err )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertnotnull ( fs. get ( j ) )
[3]: org. junit. assert. assertnotnull ( store2cachepollingscheduler )
[4]: org. junit. assert. assertnotnull ( fs. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( val , reader . getlong ( ) )
[0]: org. junit. assert. assertnotnull ( amqpsmessage )
[1]: org. junit. assert. assertequals ( amqpsmessage, amqpsmessage )
[2]: org. junit. assert. assertequals ( operation, operation )
[3]: org. junit. assert. assertnotnull ( operation )
[4]: org. junit. assert. assertequals ( operation, operations )

************

************
tgt: org . junit . assert . assertequals ( matrix , matrix . clone ( ) )
[0]: org. junit. assert. assertnull ( operation )
[1]: , operation )
[2]: org. junit. assert. assertequals ( 1, this. profile. getchannelcount ( ) )
[3]: org. junit. assert. assertequals ( 0, this. profile. getchannelcount ( ) )
[4]: org. junit. assert. assertequals ( 1, this. config. getchannelcount ( ) )

************

************
tgt: org . junit . assert . assertsame ( expectedcrs , compatiblecrs )
[0]: org. junit. assert. assertequals ( 1, this. configuration. getchannelcount ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( proposals. length, 0 )
[3]: org. junit. assert. assertequals ( 0, proposals. length )
[4]: org. junit. assert. assertequals ( proposals. length, 3 )

************

************
tgt: org . junit . assert . asserttrue ( order . getorderid ( ) . equals ( 1000 ) )
[0]: org. junit. assert. assertequals ( 3, proposals. length )
[1]: org. junit. assert. assertequals ( 1, proposals. length )
[2]: org. junit. assert. assertnotnull ( socket )
[3]: org. junit. assert. assertnotnull ( address )
[4]: org. junit. assert. assertnotnull ( tcp )

************

************
tgt: org . junit . assert . assertequals ( "" , smssettings . phonenumberat ( 1 ) )
[0]: org. junit. assert. assertnotnull ( connection )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, result )
[3]: org. junit. assert. assertequals ( false, result )
[4]: org. junit. assert. assertfalse ( result )

************

************
tgt: org . junit . assert . assertequals ( banonfacility , returnedban )
[0]: org. junit. assert. asserttrue ( result )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, test. getallwaytags ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, test. getallwaytags ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, fixture. getallwaytags ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( pointer , returnedshard . getpointer ( ) )
[0]: org. junit. assert. assertequals ( 1, tests. getallwaytags ( ). size ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( util. getpassword ( ) )
[3]: org. junit. assert. assertnull ( util. getpassword ( ) )
[4]: org. junit. assert. assertequals ( ""foo"", util. getpassword ( ) )

************

************
tgt: org . junit . assert . assertfalse ( itemassocs . hasnext ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), writer. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( writer. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), writer. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( java. lang. string. format ( expected ), writer. tostring ( ) )
[1]: org. junit. assert. assertequals ( 1, writer. tostring ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, ksession. fireallrules ( ) )
[3]: org. junit. assert. assertequals ( 3, ksession. fireallrules ( ) )
[4]: org. junit. assert. assertequals ( 0, ksession. fireallrules ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( delta < 200 ) )
[0]: org. junit. assert. assertequals ( 2, ksession. fireallrules ( ) )
[1]: org. junit. assert. assertequals ( 1, ksession. fiallrules ( ) )
[2]: org. junit. assert. assertnull ( authenticator. validatetoken ( token ) )
[3]: org. junit. assert. assertnull ( authenticator. validatetoken ( tokens ) )
[4]: org. junit. assert. assertnull ( auth. validatetoken ( token ) )

************

************
tgt: org . junit . assert . assertequals ( 123 , _directory . getimagewidth ( ) )
[0]: org. junit. assert. asserttrue ( modelinstancecollection01. isunique ( ) )
[1]: org. junit. assert. assertnull ( actualexceptioncode )
[2]: org. junit. assert. assertequals ( exceptionmappings. tostring ( ), actualexceptioncode )
[3]: org. junit. assert. assertnotnull ( actualexceptioncode )
[4]: org. junit. assert. assertnull ( actualexceptioncode. length ( ) )

************

************
tgt: org . junit . assert . asserttrue ( iscompiled )
[0]: ) )
[1]: org. junit. assert. assertequals ( true, controller. iscodefieldsonly ( ) )
[2]: org. junit. assert. assertequals ( null, ec. getvalue ( ) )
[3]: org. junit. assert. assertnotnull ( ec. getvalue ( ) )
[4]: org. junit. assert. assertnotnull ( testheader )

************

************
tgt: org . junit . assert . asserttrue ( org . apache . drill . exec . util . assertionutil . isassertionsenabled ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnotnull ( ident_19 )
[2]: org. junit. assert. assertnotnull ( xmlfilter )
[3]: org. junit. assert. assertnotnull ( testheader ( ) )
[4]: org. junit. assert. assertequals ( expected, data )

************

************
tgt: org . junit . assert . assertequals ( expected , org . apache . sqoop . metastore . passwordredactor . redactvalues ( input ) )
[0]: org. junit. assert. assertequals ( expected, data [ 0 ] )
[1]: org. junit. assert. assertequals ( expected, data. length )
[2]: org. junit. assert. asserttrue ( v. equals ( c2 ) )
[3]: org. junit. assert. assertequals ( 1, e. getmaxentries ( ) )
[4]: org. junit. assert. assertequals ( 0, e. getmaxentries ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( response )
[0]: org. junit. assert. assertequals ( i, e. getmaxentries ( ) )
[1]: org. junit. assert. assertequals ( e. getmaxentries ( ), 0 )
[2]: org. junit. assert. assertequals ( e. getmaxentries ( ), 1 )
[3]: org. junit. assert. assertequals ( 1, response. getentry ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( o )

************

************
tgt: org . junit . assert . assertequals ( deletetemplate1 , deletetemplate1duplicate )
[0]: org. junit. assert. assertnull ( o )
[1]: org. junit. assert. asserttrue ( ( o == null ) )
[2]: ) )
[3]: 
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( repository . getdirectory ( ) , foundrepo )
[0]: org. junit. assert. assertequals ( 0, cr. getentity ( java. lang. string. class ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, cr. getentity ( java. lang. object. class ). size ( ) )
[2]: org. junit. assert. assertequals ( 200, cr. getentity ( java. lang. string. class ). size ( ) )
[3]: org. junit. assert. assertnotnull ( cr. getentity ( java. lang. string. class ) )
[4]: org. junit. assert. assertequals ( 0, cr. getentity ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertequals ( ( oldinvocationcount + 1 ) , com . picocontainer . converters . convertertestcase . myconverter . invocationcount )
[0]: org. junit. assert. assertequals ( 1, f. size ( ) )
[1]: org. junit. assert. assertequals ( 0, f. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), f )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), f )
[4]: org. junit. assert. assertnotnull ( temp. getaddress ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedmechanism , chosenmechanism )
[0]: org. junit. assert. assertnotnull ( temporary. getaddress ( ) )
[1]: org. junit. assert. assertnotnull ( temp )
[2]: org. junit. assert. assertnull ( temp )
[3]: org. junit. assert. assertnotnull ( temp. getaddress )
[4]: org. junit. assert. assertequals ( sb. tostring ( ), ""1"" )

************

************
tgt: org . junit . assert . assertequals ( phrase , expected )
[0]: org. junit. assert. assertequals ( sb. tostring ( ), ""bar"" )
[1]: org. junit. assert. assertequals ( sb. tostring ( ), 2 )
[2]: org. junit. assert. assertequals ( sb. tostring ( ), 3 )
[3]: public void add ( ) { }
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), q. aslist ( ) )

************

************
tgt: org . junit . assert . assertequals ( origin , reconstructed )
[0]: org. junit. assert. assertequals ( java. util. collections. empty ( ), q. aslist ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 0 ), q )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), q )
[3]: org. junit. assert. assertequals ( 0, q. aslist ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, dbauditlogs. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( ( ( ln . compareto ( ln2 ) ) >= 0 ) )
[0]: org. junit. assert. assertequals ( scans, roundtripped. getcollection ( ) )
[1]: org. junit. assert. assertequals ( scan, roundtripped. getcollection ( ) )
[2]: org. junit. assert. asserttrue ( roundtripped. getcollection ( ). isempty ( ) )
[3]: org. junit. assert. assertnotnull ( roundtripped. getcollection ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , markets . size ( ) )
[0]: org. junit. assert. asserttrue ( hasfieldviolation ( null ) )
[1]: org. junit. assert. asserttrue ( hasfieldviolation ( this. name ) )
[2]: org. junit. assert. asserttrue ( hasfieldviolation ( ""a"" ) )
[3]: org. junit. assert. asserttrue ( hasfieldviolation ( string ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( validatefop2pdf ( fofile , pdffile ) )
[0]: org. junit. assert. assertequals ( 1, count1. get ( ) )
[1]: org. junit. assert. assertequals ( 1, count2. get ( ) )
[2]: org. junit. assert. assertequals ( 2, count1. get ( ) )
[3]: org. junit. assert. assertequals ( 0, count1. get ( ) )
[4]: org. junit. assert. assertequals ( 3, count1. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( "/" , path . tostring ( ) )
[0]: org. junit. assert. assertarrayequals ( new org. sfs. block. range [ ] { }, rangetwo )
[1]: org. junit. assert. assertequals ( 1, rangetwo. length )
[2]: org. junit. assert. assertequals ( 0, rangetwo. length )
[3]: org. junit. assert. assertarrayequals ( new java. lang. block. range [ ] { }, rangetwo )
[4]: org. junit. assert. assertarrayequals ( org. sfs. block. range. values ( ), rangetwo )

************

************
tgt: org . junit . assert . asserttrue ( result . isempty ( ) )
[0]: org. junit. assert. assertequals ( sourc. evaluate ( feature ), modifiedfilter )
[1]: org. junit. assert. assertequals ( sourc, modifiedfilter. evaluate ( feature ) )
[2]: org. junit. assert. assertnotnull ( modifiedfilter. evaluate ( feature ) )
[3]: org. junit. assert. assertequals ( 0, modifiedfilter. evaluate ( feature ). length )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( subject . controleer ( persoon , verzoek ) )
[0]: org. junit. assert. assertequals ( 0, this. getexcludecount ( ) )
[1]: org. junit. assert. assertequals ( 1, this. getexcludecount ( ) )
[2]: org. junit. assert. assertequals ( 2, this. getexcludecount ( ) )
[3]: org. junit. assert. assertequals ( 20, this. getexcludecount ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( xdom . getchildren ( ) . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( sessionid )
[1]: org. junit. assert. assertequals ( 0, pool. size ( ) )
[2]: org. junit. assert. assertequals ( 1, pool. size ( ) )
[3]: org. junit. assert. assertequals ( 0, pool. sizes ( ) )
[4]: org. junit. assert. assertequals ( 0, queue. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "value" , request . getheader ( "key" ) )
[0]: the size ( ) )
[1]: org. junit. assert. assertequals ( appconfigproperties. default_hibernate_config_path, spyappconfigproperties. gethibernateconfigpath ( ) )
[2]: org. junit. assert. assertequals ( appconfigproperties. default_hibernate_config.xml >, spyappconfigproperties. gethibernateconfigpath ( ) )
[3]: org. junit. assert. assertequals ( appconfigproperties. default_hibernate_config.xml, spyappconfigproperties. gethibernateconfigpath ( ) )
[4]: org. junit. assert. assertequals ( appconfigproperties. default_hibernate_config_element, spyappconfigproperties. gethibernateconfigpath ( ) )

************

************
tgt: org . junit . assert . assertnull ( new org . codehaus . mojo . versions . requiredmavenversionfinder ( mavenproject ) . find ( ) )
[0]: org. junit. assert. assertequals ( appconfigproperties. default_hibernate_config.xmlistribut, spyappconfigproperties. gethibernateconfigpath ( ) )
[1]: org. junit. assert. asserttrue ( isstderrempty ( ) )
[2]: org. junit. assert. assertequals ( result1, result2 )
[3]: org. junit. assert. assertequals ( result1. expression, result2. expression )
[4]: org. junit. assert. assertequals ( list ( l, b ), fr. getrightsproperties ( ) )

************

************
tgt: org . junit . assert . assertfalse ( ws . gettcpnodelay ( ) )
[0]: org. junit. assert. assertequals ( list ( a, b ), fr. getrightsproperties ( ) )
[1]: org. junit. assert. assertequals ( list ( l, c ), fr. getrightsproperties ( ) )
[2]: org. junit. assert. assertequals ( list ( l, a ), fr. getrightsproperties ( ) )
[3]: org. junit. assert. assertequals ( list ( l ), fr. getrightsproperties ( ) )
[4]: org. junit. assert. asserttrue ( exceptionthrown )

************

************
tgt: org . junit . assert . assertsame ( emptyprincipalprovider . instance , org . apache . jackrabbit . oak . spi . security . principal . compositeprincipalprovider . of ( com . google . common . collect . immutablelist . < org . apache . jackrabbit . oak . spi . security . principal . principalprovider > of ( ) ) )
[0]: org. junit. assert. assertequals ( true, exceptionthrown )
[1]: org. junit. assert. assertnotnull ( acl )
[2]: org. junit. assert. assertnull ( acl )
[3]: org. junit. assert. assertequals ( acl, acl )
[4]: org. junit. assert. assertequals ( acl, null )

************

************
tgt: org . junit . assert . assertequals ( 0 , ranges . size ( ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( org. junit. contrib. theories. parametersignature. canaccepttype ( intsignature ) )
[2]: org. junit. assert. asserttrue ( org. junit. contrib. theories. parametersignature. canaccepttype ( intsignature. gettype ( ) ) )
[3]: org. junit. assert. assertfalse ( org. junit. contrib. theories. parametersignature. canaccepttype ( intsignature ) )
[4]: org. junit. assert. asserttrue ( org. junit. contrib. thisories. parametersignature. canaccepttype ( intsignature ) )

************

************
tgt: org . junit . assert . assertnull ( event . get ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( str, metadata. getgroupby ( ) )
[2]: org. junit. assert. assertequals ( string, metadata. getgroupby ( ) )
[3]: org. junit. assert. assertequals ( str, metadata. getgroupby ( ). get ( ) )
[4]: org. junit. assert. assertequals ( str, metadat. getgroupby ( ) )

************

************
tgt: org . junit . assert . asserttrue ( bpinfo1 . equals ( bpinfo2 ) )
[0]: org. junit. assert. assertequals ( str, metadata. getgroupby ( ). trim ( ) )
[1]: org. junit. assert. assertequals ( 1, controllerregistry. getroutes ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, org. apache. hadoop. hbase. zookeeper. zkutil. checkexists ( zkw, tasknode ) )
[3]: org. junit. assert. asserttrue ( ( ( org. apache. hadoop. hbase. zookeeper. zkutil. checkexists ( zkw, tasknode ) ) == 1 ) )
[4]: org. junit. assert. asserttrue ( ( 1 == ( org. apache. hadoop. hbase. zookeeper. zkutil. checkexists ( zkw, tasknode ) ) ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( org . appenders . log4j2 . elasticsearch . bulkemittertest . test_batch_size ) > 1 ) )
[0]: org. junit. assert. assertequals ( 1, org. apache. hadoop. hbase. zookeeper. zkutil. checkexists ( zkw, tasksnode ) )
[1]: org. junit. assert. assertequals ( 0, org. apache. hadoop. hbase. zookeeper. zkutil. checkexists ( zkw, tasknode ) )
[2]: org. junit. assert. assertarrayequals ( expectedbytes, outhexbytes )
[3]: org. junit. assert. assertarrayequals ( expectedbytes, outputhexbytes )
[4]: org. junit. assert. assertarrayequals ( expectedbytes )

************

************
tgt: org . junit . assert . assertthat ( resultint , org . hamcrest . corematchers . is ( 8 ) )
[0]: org. junit. assert. assertarrayequals ( expectedbytes, errhexbytes )
[1]: org. junit. assert. assertarrayequals ( expectedbytes, stdouthexbytes )
[2]: org. junit. assert. assertequals ( 0, delta )
[3]: org. junit. assert. assertequals ( 1, delta )
[4]: org. junit. assert. assertequals ( 10, delta )

************

************
tgt: org . junit . assert . assertequals ( 4 , result )
[0]: org. junit. assert. assertequals ( delta, 1 )
[1]: ) )
[2]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( expected
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( java. lang. boolean. valueof ( expected ) ) )
[4]: org. junit. assert. assertthat ( expected, org. hamcrest. corematchers. is ( actual ) )

************

************
tgt: org . junit . assert . asserttrue ( program . isstopped ( ) )
[0]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( expected ) )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( 0, result. geterrors ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. geterrors ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, result. geterrors ( ). get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( checksum , checksumactual )
[0]: org. junit. assert. assertequals ( 2, result. geterrors ( ). size ( ) )
[1]: ) )
[2]: org. junit. assert. assertthat ( uri. getname ( ), is ( file. getname ( ) ) )
[3]: org. junit. assert. assertthat ( definition. getname ( ), is ( file. getname ( ) ) )
[4]: org. junit. assert. assertthat ( file. getname ( ), is ( file. getname ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( expecting , result )
[0]: org. junit. assert. assertthat ( uri. getname ( ), is ( java. util. collections. emptylist ( ) ) )
[1]: org. junit. assert. assertthat ( uri. getname ( ), is ( java. util. collections. emptylist ( ). get ( ) ) )
[2]: org. junit. assert. assertarrayequals ( result, result )
[3]: org. junit. assert. assertarrayequals ( message, result )
[4]: org. junit. assert. assertarrayequals ( result, msg )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: , result )
[1]: ) )
[2]: org. junit. assert. assertequals ( clickid, prefix )
[3]: org. junit. assert. assertequals ( 1, prefix. length ( ) )
[4]: org. junit. assert. asserttrue ( istextpresent ( prefix, jndiname ) )

************

************
tgt: org . junit . assert . assertequals ( list ( "a" , "b" , "c" ) , redis . zrange ( key , 0 , ( - 1 ) ) )
[0]: org. junit. assert. assertequals ( lt, prefix )
[1]: , prefix )
[2]: org. junit. assert. assertequals ( 0, ret )
[3]: org. junit. assert. assertequals ( 1, result. getschema ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, result. getschema ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , operation . getrepetition ( ) )
[0]: org. junit. assert. assertequals ( expected, result. getschema ( ) )
[1]: org. junit. assert. assertequals ( 1.0, result. getschema ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1.0, result. getschema ( ) )
[3]: org. junit. assert. assertnotnull ( project )
[4]: org. junit. assert. assertequals ( 1, project. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( boolean . class , boxedboolean . unbox ( ) . getactualclass ( ) )
[0]: org. junit. assert. assertequals ( 0, project. size ( ) )
[1]: org. junit. assert. assertequals ( null, project )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, zero. exec ( input ) )
[4]: org. junit. assert. assertequals ( null, zero. exec ( input ) )

************

************
tgt: org . junit . assert . assertnull ( instance . getfirstvalue ( "key1" ) )
[0]: org. junit. assert. assertequals ( 0, zero. exec ( input ). length )
[1]: org. junit. assert. assertequals ( 1, zero. exec ( input ). length )
[2]: ) )
[3]: org. junit. assert. assertthat ( javascripts, org. hamcrest. corematchers. is ( acollectionwithsize ( 2 ) ) )
[4]: org. junit. assert. assertthat ( javascripts, acollectionwithsize ( 2 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , net . jonbell . examples . methodprof . profilelogger . dump ( ) . size ( ) )
[0]: org. junit. assert. assertthat ( javascripts, org. hamcrest. corematchers. is ( acollectionwithsize ( 1 ) ) )
[1]: org. junit. assert. assertthat ( javascripts, org. hamcrest. corematchers. is ( acollectionwithsize ( 3 ) ) )
[2]: org. junit. assert. assertthat ( javascripts, acollectionwithsize ( 1 ) )
[3]: org. junit. assert. assertequals ( 0.1, com. cloud. utils. db. genericdaobase. getobject ( com. cloud. utils. db. long. class, resultset, 1 ), 0.1 )
[4]: org. junit. assert. assertequals ( 0.1, com. cloud. utils. db. genericdaobase. getobject ( com. cloud. utils. db. double. class, resultset, 1 ), 0.1 )

************

************
tgt: org . junit . assert . assertequals ( true , result )
[0]: org. junit. assert. assertequals ( 0.1, com. cloud. utils. db. genericdaobase. getobject ( com. cloud. utils. db. integer. class, resultset, 1 ), 0.1 )
[1]: org. junit. assert. assertequals ( 0.1, com. cloud. utils. db. genericdaobase. getobject ( com. cloud. utils. db. boolean. class, resultset, 1 ), 0.1 )
[2]: org. junit. assert. assertequals ( 0.1, com. cloud. utils. db. genericdaobase. getobject ( com. cloud. utils. db. long. class, resultset, 1 ) )
[3]: org. junit. assert. assertfalse ( reporter. hasreportedstartup ( ) )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( """", result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnull ( result, result )
[4]: org. junit. assert. assertnotnull ( employee )

************

************
tgt: org . junit . assert . assertequals ( result , "default" )
[0]: org. junit. assert. assertequals ( employee, employee )
[1]: org. junit. assert. assertequals ( employeeregion, employee )
[2]: org. junit. assert. assertnotnull ( employee. getid ( ) )
[3]: org. junit. assert. assertnotnull ( employee, employee )
[4]: org. junit. assert. assertequals ( expr. accept ( visitor ), visitresult )

************

************
tgt: org . junit . assert . assertequals ( 0 , executor . getreturnvalue ( ) )
[0]: org. junit. assert. assertequals ( expression. accept ( visitor ), visitresult )
[1]: org. junit. assert. assertequals ( expression, expr. accept ( visitor ) )
[2]: org. junit. assert. assertequals ( expected, expr. accept ( visitor ) )
[3]: org. junit. assert. assertequals ( expr. accept ( visitor ), visitresult )
[4]: org. junit. assert. assertequals ( p, cache ( p ) )

************

************
tgt: org . junit . assert . assertnotnull ( description )
[0]: org. junit. assert. assertsame ( p, cache ( p ) )
[1]: org. junit. assert. assertnotnull ( cache ( p ) )
[2]: org. junit. assert. assertnull ( cache ( p ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, view. getrating ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 7 , nodes . length )
[0]: org. junit. assert. assertequals ( 0, view. getrating ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, view. getrating ( ) )
[2]: org. junit. assert. assertequals ( null, view. getrating ( ) )
[3]: org. junit. assert. assertequals ( 1, view. getrating ( ). length )
[4]: org. junit. assert. assertnotnull ( method )

************

************
tgt: org . junit . assert . asserttrue ( ( ( eventdata2 . compareto ( eventdata1 ) ) > 0 ) )
[0]: org. junit. assert. assertnotnull ( method. newinstance ( ) )
[1]: , method )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, kandidaten. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( convertedteststring , resultstring )
[0]: org. junit. assert. assertnotnull ( v. getname ( ) )
[1]: org. junit. assert. assertequals ( ""foo"", v. getname ( ) )
[2]: org. junit. assert. assertequals ( null, v. getname ( ) )
[3]: org. junit. assert. assertnull ( v. getname ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( result . fail , name . apply ( item ) )
[0]: org. junit. assert. assertequals ( 0, partitionids. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), partitionids )
[2]: org. junit. assert. assertequals ( partitioner, partitionids )
[3]: org. junit. assert. assertnotnull ( partitionids )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( processdefinition . issuspended ( ) )
[0]: org. junit. assert. assertequals ( 6, counter. get ( ) )
[1]: org. junit. assert. assertequals ( 0, counter. get ( ) )
[2]: org. junit. assert. assertequals ( 1, counter. get ( ) )
[3]: org. junit. assert. assertequals ( 4, counter. get ( ) )
[4]: org. junit. assert. assertequals ( 5, counter. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( 7 , count )
[0]: org. junit. assert. assertequals ( textstring, md. getplaintext ( ) )
[1]: org. junit. assert. assertequals ( textstring, md. getsplaintext ( ) )
[2]: org. junit. assert. assertequals ( textfieldstring, md. getplaintext ( ) )
[3]: org. junit. assert. assertequals ( textboxstring, md. getplaintext ( ) )
[4]: org. junit. assert. assertequals ( string, md. getplaintext ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1000 , org . apache . hadoop . hbase . replication . regionserver . testregionreplicareplicationendpointnomaster . entries . size ( ) )
[0]: org. junit. assert. assertequals ( image, cell. getimage ( ) )
[1]: org. junit. assert. assertnotnull ( builder. getmap ( ) )
[2]: org. junit. assert. assertequals ( 1, test. getmap ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), fixture. getmap ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), builder. getmap ( ) )

************

************
tgt: org . junit . assert . assertequals ( null , output )
[0]: org. junit. assert. assertequals ( 1, fixture. getmap ( ). size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( result. length ) == 4 ) )
[2]: org. junit. assert. asserttrue ( ( ( result. length ( ) ) == 4 ) )
[3]: org. junit. assert. asserttrue ( ( ( result. contains ( object1 ) ) && ( result. contains ( object2 ) ) ) )
[4]: org. junit. assert. asserttrue ( ( ( result. contains ( object1 ) ) || ( result. contains ( object2 ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , epackages . size ( ) )
[0]: org. junit. assert. asserttrue ( ( ( result. size ( ) ) == 4 ) )
[1]: org. junit. assert. asserttrue ( params. isstrict ( ) )
[2]: org. junit. assert. assertequals ( true, params. isstrict ( ) )
[3]: org. junit. assert. assertfalse ( params. isstrict ( ) )
[4]: org. junit. assert. assertnotnull ( params. isstrict ( ) )

************

************
tgt: org . junit . assert . assertnull ( sut . getmessage ( ) )
[0]: org. junit. assert. assertequals ( true, params. isstrict ( ) )
[1]: org. junit. assert. assertequals ( wallet, configuration. getwebapplicationwallet ( ), 0 )
[2]: org. junit. assert. assertequals ( wallet, config. getwebapplicationwallet ( ), 0 )
[3]: org. junit. assert. assertequals ( wallet, player. getwebapplicationwallet ( ), 0 )
[4]: org. junit. assert. assertequals ( wallet, playback. getwebapplicationwallet ( ), 0 )

************

************
tgt: org . junit . assert . assertequals ( 100 , balance )
[0]: org. junit. assert. assertequals ( wallet, configuration. getwebapplicationwallet ( ), 0 ) ;
[1]: org. junit. assert. assertnotnull ( source )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), source )
[3]: org. junit. assert. assertequals ( null, source )
[4]: org. junit. assert. assertequals ( java. util. optional. empty ( ), source )

************

************
tgt: org . junit . assert . assertequals ( fav1created , fav1get )
[0]: org. junit. assert. assertequals ( 1, source )
[1]: org. junit. assert. assertequals ( 1, resources. getnoofparties ( ) )
[2]: org. junit. assert. assertequals ( 1, resources. getnoofparties ( ) size ( ) )
[3]: org. junit. assert. assertequals ( 1, resources. getnoofparties ( ). length )
[4]: org. junit. assert. assertequals ( 1, resources. getnoofparties ( ). size ( )

************

************
tgt: org . junit . assert . assertequals ( index . getsize ( ) , 1 )
[0]: org. junit. assert. assertnotnull ( resources. getnoofparties ( ) )
[1]: org. junit. assert. asserttrue ( store. containsprekey ( prekey. getid ( ) ) )
[2]: org. junit. assert. assertnotnull ( cursorposition ( line ) )
[3]: org. junit. assert. assertequals ( 0, cursorposition ( line ). length )
[4]: org. junit. assert. assertnotnull ( cursorposition ( true ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , activesessionprincipalmap . size ( ) )
[0]: org. junit. assert. assertnotnull ( cursorposition ( false ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( commandexecuted )
[3]: org. junit. assert. assertequals ( false, commandexecuted )
[4]: org. junit. assert. assertequals ( true, commandexecuted )

************

************
tgt: org . junit . assert . asserttrue ( viewaction . project . visiblefiletry ( project . getname ( ) ) )
[0]: org. junit. assert. assertnull ( resp )
[1]: org. junit. assert. assertfalse ( resp. getcaredocumentation )
[2]: org. junit. assert. assertfalse ( resp )
[3]: org. junit. assert. assertequals ( null, resp )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expecetedtablename , builttablename )
[0]: org. junit. assert. assertequals ( 1, subject. getcontainersremoved ( ). size ( ) )
[1]: org. junit. assert. assertfalse ( returnvaluetocheck )
[2]: org. junit. assert. assertequals ( t1. tostring ( ), t2. tostring ( ) )
[3]: org. junit. assert. assertequals ( t1. tostring ( ), t1. tostring ( ) )
[4]: org. junit. assert. assertequals ( t2. tostring ( ), t1. tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( found , equalto ( expected ) )
[0]: org. junit. assert. assertnotnull ( t1. tostring ( ) )
[1]: org. junit. assert. assertequals ( t1. tostring ( ), r2. tostring ( ) )
[2]: org. junit. assert. assertequals ( 12, this. uipageddata. getpagesize ( ) )
[3]: org. junit. assert. assertequals ( 12, ( ( int ) ( this. uipageddata. getpagesize ( ) ) ) )
[4]: org. junit. assert. assertequals ( 12, new java. lang. long ( this. uipageddata. getpagesize ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( expected , out )
[0]: org. junit. assert. assertthat ( this. uipageddata. getpagesize ( ), org. hamcrest. corematchers. is ( 12 ) )
[1]: org. junit. assert. assertequals ( 12, this. uiipageddata. getpagesize ( ) )
[2]: org. junit. assert. assertequals ( 1, domobj. getmarketplaceid ( ) )
[3]: org. junit. assert. assertequals ( 1l, domobj. getmarketplaceid ( ) )
[4]: org. junit. assert. assertequals ( null, domobj. getmarketplaceid ( ) )

************

************
tgt: org . junit . assert . assertthat ( couldhold , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( 1, domobj. getmarketplaceid ( ). length )
[1]: org. junit. assert. assertequals ( 1, domobj. getmarketplaceid ( ). size ( )
[2]: org. junit. assert. assertnotnull ( newbag ( ). collection ( ) )
[3]: org. junit. assert. assertequals ( 1, newbag ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, newbag ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( chats . size ( ) , chatids . size ( ) )
[0]: org. junit. assert. assertequals ( 0, this. newbag ( ). size ( )
[1]: org. junit. assert. assertequals ( 1, this. newbag ( ). size ( )
[2]: org. junit. assert. assertequals ( 1, getfoo. invoke ( instance ) )
[3]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), getfoo. invoke ( instance ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), getfoo )

************

************
tgt: org . junit . assert . assertfalse ( presenter . isdirty ( ) )
[0]: org. junit. assert. assertnotnull ( getfoo )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( returned )
[3]: org. junit. assert. assertfalse ( modelinstancecollection01. isundefined ( ) )
[4]: org. junit. assert. assertequals ( 0, dao. refresh ( ( ( org. apache. hadoop. fs. path ) ( null ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( true , result )
[0]: org. junit. assert. assertequals ( 0, dao. refresh ( ( ( int ) ( null ) ) ) )
[1]: org. junit. assert. assertequals ( 0, dao. refresh ( ( ( java. util. list ) ( null ) ) ) )
[2]: org. junit. assert. assertequals ( block. getnonce ( ), 5 )
[3]: org. junit. assert. assertequals ( 1, list. size ( ) )
[4]: org. junit. assert. assertequals ( 0, list. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( count > 0 ) )
[0]: org. junit. assert. assertnotnull ( list )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), list )
[2]: org. junit. assert. assertnull ( list )
[3]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ ] [ ] { new java. lang. string [ ] { } } ) )
[4]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ 0 ] [ ] ) )

************

************
tgt: org . junit . assert . assertequals ( compareint ( val1 , val2 ) , orderbyvalue . compare ( org . apache . beam . sdk . values . kv . of ( key1 , val1 ) , org . apache . beam . sdk . values . kv . of ( key2 , val2 ) ) )
[0]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ 1 ] [ ] ) )
[1]: , results )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( actual )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . asserttrue ( guangdong . notexisted ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. assertequals ( result, null )
[3]: ) )
[4]: org. junit. assert. assertequals ( pam, map )

************

************
tgt: org . junit . assert . asserttrue ( berichtentiteits . isempty ( ) )
[0]: org. junit. assert. assertequals ( pam, null )
[1]: org. junit. assert. assertnotnull ( pam )
[2]: org. junit. assert. assertarrayequals ( plaintext, tag )
[3]: org. junit. assert. assertnotnull ( renderer. dimensionsforpages ( 10, 10 ) )
[4]: org. junit. assert. assertequals ( 1, renderer. dimensionsforpages ( 10, 10 ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( isvalid )
[0]: org. junit. assert. assertthat ( renderer, dimensionsforpages ( 10, 10 ) )
[1]: org. junit. assert. assertequals ( 1, renderer. dimensionsforpages ( 10, 10 ). count ( ) )
[2]: org. junit. assert. assertequals ( 1, renderer. dimensionsforpages ( 10, 10 ). length )
[3]: org. junit. assert. assertequals ( new org. jboss. resteasy. test. rx. resource. thing ( s ), t )
[4]: org. junit. assert. assertequals ( new org. jboss. resteasy. test. rx. resource. thing ( t ), t )

************

************
tgt: org . junit . assert . assertequals ( transactionid , spantransactionid )
[0]: org. junit. assert. assertequals ( new org. jboss. resteasy. test. rx. resource. thing ( s ), t )
[1]: org. junit. assert. assertequals ( t, new org. jboss. resteasy. test. rx. resource. thing ( s ) )
[2]: org. junit. assert. assertequals ( new org. jboss. resteasy. test. rx. resource. thing ( 1 ), t )
[3]: org. junit. assert. assertequals ( 1, profiles. size ( ) )
[4]: org. junit. assert. assertequals ( 0, profiles. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( unit . isconsistent ( ) )
[0]: org. junit. assert. assertequals ( 3, profiles. size ( ) )
[1]: org. junit. assert. assertequals ( 9, profiles. size ( ) )
[2]: org. junit. assert. assertnotnull ( profiles )
[3]: org. junit. assert. assertequals ( org. joda. money. testbigmoney. gbp_2_34, test )
[4]: org. junit. assert. assertequals ( org. joda. currency. testbigmoney. gbp_2_34, test )

************

************
tgt: org . junit . assert . assertfalse ( user . hasmanagerrole ( ) )
[0]: org. junit. assert. assertnotnull ( test )
[1]: org. junit. assert. assertequals ( null, test )
[2]: org. junit. assert. assertnull ( test )
[3]: org. junit. assert. asserttrue ( _c. canconvertto ( java. lang. object. class ) )
[4]: org. junit. assert. asserttrue ( _c. canconvertto ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertfalse ( _c. canconvertto ( java. lang. object. class ) )
[1]: org. junit. assert. asserttrue ( _c. canconvertto ( com. sjl. dsl4xml ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( geturl ( url ), html )
[4]: org. junit. assert. assertequals ( geturl, html )

************

************
tgt: org . junit . assert . assertequals ( "/" , result )
[0]: org. junit. assert. assertnotnull ( html )
[1]: , html )
[2]: ) )
[3]: org. junit. assert. assertequals ( expectedresult, actualresult )
[4]: org. junit. assert. assertequals ( expectedresult. size ( ), actualresult. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( "" , result . result )
[0]: org. junit. assert. assertequals ( expectedresult, actualresult. size ( ) )
[1]: org. junit. assert. assertequals ( expectedresult, actualresult. get ( 0 ) )
[2]: org. junit. assert. assertequals ( actualresult, expectedresult )
[3]: org. junit. assert. assertequals ( 0, svndef. compareto ( svndef2 ) )
[4]: org. junit. assert. assertequals ( 1, svndef. compareto ( svndef2 ) )

************

************
tgt: org . junit . assert . assertequals ( "/@foo/bar" , uri . getpath ( ) )
[0]: org. junit. assert. assertequals ( 0, svndef2. compareto ( svndef2 ) )
[1]: org. junit. assert. asserttrue ( ( ( svndef. compareto ( svndef2 ) ) == 0 ) )
[2]: org. junit. assert. assertequals ( 1, svndef2. compareto ( svndef2 ) )
[3]: org. junit. assert. assertequals ( xmlesperado, getnfprotocolo ( ) )
[4]: org. junit. assert. assertequals ( xmlesperado, getnfprotocolo ( ). tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( integer . max_value , filter . order ( ) )
[0]: org. junit. assert. assertequals ( xmlesperado, deveprotocolo ( ) )
[1]: org. junit. assert. assertequals ( xmlesperado, getnfprotocolo ( ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, historypagefilter. size ( ) )
[4]: org. junit. assert. assertequals ( 1, historypagefilter. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( info . bitrich . xchangestream . util . booksanitychecker . haserrors ( book ) )
[0]: org. junit. assert. assertthat ( historypagefilter. size ( ), empty ( ) )
[1]: org. junit. assert. assertequals ( 3, historypagefilter. size ( ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( ( command instanceof org. restcomm. media. core. control. mgcp. command. modifyconnectioncommand ) )
[4]: org. junit. assert. asserttrue ( ( command instanceof org. restcomm. media. core. control. mgcp. command. auditconnectioncommand ) )

************

************
tgt: org . junit . assert . assertequals ( returnjobs , jobs )
[0]: org. junit. assert. asserttrue ( ( command instanceof org. restcomm. media. core. control. mgcp. command. requestnotificationcommand ) )
[1]: org. junit. assert. asserttrue ( ( command instanceof org. restcomm. media. core. control. mgcp. command. editconnectioncommand ) )
[2]: org. junit. assert. asserttrue ( ( command instanceof org. restcomm. media. core. control. mgcp. command. updateconnectioncommand ) )
[3]: org. junit. assert. asserttrue ( registry. getregisteredtokens ( ). isempty ( ) )
[4]: org. junit. assert. assertequals ( registry. getregisteredtokens ( ), packages )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . equalto ( "2" ) )
[0]: org. junit. assert. assertequals ( packages, registry. getregisteredtokens ( ) )
[1]: org. junit. assert. asserttrue ( registry. getregisteredtokens ( ). contains ( packages ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, results. size ( ) )
[4]: org. junit. assert. assertequals ( 3, results. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( newstate )
[0]: org. junit. assert. assertequals ( org. opendaylight. protocol. bgp. flowspec. extended. communities. fsextendedcommunitiestest. redirect_as_2bytes, output. array ( ) )
[1]: org. junit. assert. assertarrayequals ( org. opendaylight. protocol. bgp. flowspec. extended. communities. fsextendedcommunitiestest. redirect_as_1, output. array ( ) )
[2]: org. junit. assert. assertarrayequals ( org. opendaylight. protocol. bgp. flowspec. extended. communities. fsextendedcommunitiestest. redirect_as_2bytes )
[3]: org. junit. assert. assertarrayequals ( expected. array ( ), output. array ( ) )
[4]: org. junit. assert. assertnull ( output. array ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( 1, fixtures. size ( ) )
[1]: org. junit. assert. assertequals ( 0, fixtures. size ( ) )
[2]: org. junit. assert. assertequals ( 1, result. geterrors ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, result. geterrors ( ). size ( ) )
[4]: org. junit. assert. asserttrue ( result. geterrors ( ). isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( filter . filter ( bundle ) )
[0]: org. junit. assert. assertequals ( 2, result. geterrors ( ). size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, descriptor. getlistid ( ) )
[3]: org. junit. assert. assertequals ( 1, descriptor. getlistid ( ) )
[4]: org. junit. assert. assertequals ( false, descriptor. getlistid ( ) )

************

************
tgt: org . junit . assert . assertfalse ( resultmessage ( result , org . openstack . atlas . api . mgmt . validation . validators . post ) , result . passedvalidation ( ) )
[0]: org. junit. assert. assertequals ( 1, descriptor. getlistid ( ). length )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, connection. getresponsecode ( ) )
[3]: org. junit. assert. assertequals ( 0, connection. getresponsecode ( ) )
[4]: org. junit. assert. assertnotnull ( ntm. materialized ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( configuration )
[0]: org. junit. assert. assertequals ( 1, ntm. count )
[1]: org. junit. assert. assertnotnull ( ntm )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( instant. max, cache. throttleduntil ( request, request ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( instant. max, throttler. throttleduntil ( null, request ) )
[1]: org. junit. assert. assertequals ( java. time. instant. max, cache. throttleduntil ( request, request ) )
[2]: org. junit. assert. assertequals ( java. time. instant. min, cache. throttleduntil ( request, request ) )
[3]: org. junit. assert. assertequals ( java. time. instant. max, cache. throttleduntil ( request, response ) )
[4]: org. junit. assert. assertequals ( input2, groupbys )

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: org. junit. assert. assertequals ( input1, groupbys )
[1]: org. junit. assert. assertequals ( output, groupbys )
[2]: , groupbys )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, boxuses. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( resultaat . getmeldingen ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, boxuses. size ( ) )
[1]: org. junit. assert. assertequals ( 3, boxuses. size ( ) )
[2]: org. junit. assert. assertequals ( 2, boxuses. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( expectedregex, pattern. compiled ( ) )

************

************
tgt: org . junit . assert . assertthat ( i18nproviderimpl . gettimezone ( ) , org . hamcrest . corematchers . is ( java . util . timezone . getdefault ( ) . tozoneid ( ) ) )
[0]: org. junit. assert. assertequals ( expectedregex, pattern. compiled ( ) [ 0 ] )
[1]: org. junit. assert. assertnotnull ( pattern. compiled ( ) )
[2]: org. junit. assert. assertequals ( expectedregex )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, errors. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( merge )
[0]: org. junit. assert. assertnotnull ( context. getrequestobjects ( ) )
[1]: org. junit. assert. assertnull ( context. getrequestobjects ( ) )
[2]: org. junit. assert. assertequals ( 0, context. getrequestobjects ( ). length )
[3]: org. junit. assert. assertequals ( 1, context. getrequestobjects ( ). length )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( contentencoding , targetencoding )
[0]: org. junit. assert. assertequals ( 1, tag. getid ( ) )
[1]: org. junit. assert. assertequals ( 0, tag. getid ( ) )
[2]: org. junit. assert. assertnotnull ( tag. getid ( ) )
[3]: org. junit. assert. assertequals ( 1, tag. getid ( ). length )
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( com . github . anno4j . model . impl . state . timestatetest . good_date , result . getsourcedatestart ( ) )
[0]: org. junit. assert. assertequals ( 1, results. size ( ) )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 1, s. size ( ) )
[3]: org. junit. assert. assertequals ( 1, n )
[4]: org. junit. assert. assertequals ( 1, s. length )

************

************
tgt: org . junit . assert . asserttrue ( ( currenttime >= timeslot ) )
[0]: org. junit. assert. assertthat ( listhosts ( hosts ), org. hamcrest. matchers. is ( hosts ) )
[1]: org. junit. assert. assertthat ( listhosts ( hosts ), org. hamcrest. matchers. contains ( hosts ) )
[2]: org. junit. assert. assertthat ( listhosts ( hosts ), org. hamcrest. corematchers. is ( hosts ) )
[3]: org. junit. assert. assertnotnull ( listhosts ( hosts ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( presenter . getconcurrentupdatesessioninfo ( ) )
[0]: org. junit. assert. assertequals ( 1, url. length ( ) )
[1]: org. junit. assert. assertequals ( 1, url. tolowercase ( ). length )
[2]: org. junit. assert. assertequals ( 1, url )
[3]: org. junit. assert. assertnotnull ( url )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( savedendpointuserdto , endpointuser )
[0]: org. junit. assert. assertequals ( 0, slowestmethods. size ( ) )
[1]: org. junit. assert. assertequals ( 1, slowestmethods. size ( ) )
[2]: org. junit. assert. assertequals ( zero, slowestmethods. size ( ) )
[3]: org. junit. assert. assertequals ( 0, slowestmethods. size ( ) ) ;
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( f . readhdu ( ) )
[0]: org. junit. assert. assertequals ( true, isvalid )
[1]: org. junit. assert. assertequals ( false, isvalid )
[2]: org. junit. assert. assertequals ( 1, isvalid )
[3]: org. junit. assert. asserttrue ( isvalid )
[4]: org. junit. assert. assertequals ( true, isvalid )

************

************
tgt: org . junit . assert . assertarrayequals ( ascii ( "hello" ) , read ( txt ) )
[0]: org. junit. assert. assertequals ( jobid, stopmessage )
[1]: org. junit. assert. assertequals ( jobid, stopmessage. id )
[2]: org. junit. assert. assertequals ( jobid, stopmessage. val )
[3]: org. junit. assert. assertnotnull ( stopmessage )
[4]: org. junit. assert. assertnull ( stopmessage )

************

************
tgt: org . junit . assert . asserttrue ( ( score > 0 ) )
[0]: org. junit. assert. assertequals ( expected, parsed )
[1]: org. junit. assert. assertequals ( null, parsed )
[2]: org. junit. assert. assertnull ( parsed )
[3]: org. junit. assert. assertequals ( string, parsed )
[4]: , parsed )

************

************
tgt: org . junit . assert . assertequals ( 100 , m . numberofstudents ( ) )
[0]: org. junit. assert. assertfalse ( guid1. equals ( null ) )
[1]: org. junit. assert. assertfalse ( guid1. equals ( guid1 ) )
[2]: org. junit. assert. assertfalse ( guid1. equals ( new java. lang. object ( ) ) )
[3]: org. junit. assert. assertfalse ( guid1. equals ( java. lang. object. class ) )
[4]: org. junit. assert. assertfalse ( guid1. equals ( new java. lang. string ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( r1 , r2 )
[0]: org. junit. assert. assertequals ( 1, ls. size ( ) )
[1]: org. junit. assert. assertequals ( 1, files. size ( ) )
[2]: org. junit. assert. assertequals ( 1, gfs. getpath ( ). length )
[3]: org. junit. assert. assertequals ( 1, rrfs. getpath ( ). length )
[4]: org. junit. assert. assertequals ( 1, gbfs. getpath ( ). size ( )

************

************
tgt: org . junit . assert . assertequals ( 200 , response . getstatuscode ( ) )
[0]: org. junit. assert. assertnotnull ( testobj )
[1]: org. junit. assert. assertequals ( testobj, oid )
[2]: org. junit. assert. assertequals ( testobj, dbobject )
[3]: org. junit. assert. assertequals ( testobj, db )
[4]: org. junit. assert. assertequals ( testobj, null )

************

************
tgt: org . junit . assert . assertnotnull ( action )
[0]: org. junit. assert. assertequals ( persons, result )
[1]: org. junit. assert. assertequals ( result, persons )
[2]: org. junit. assert. assertequals ( results, persons )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertnotnull ( partition )
[1]: org. junit. assert. assertnotnull ( partition. waitforread ( ) )
[2]: org. junit. assert. asserttrue ( partition. waitforread ( ) )
[3]: org. junit. assert. assertnotnull ( partition. waitforprocesses ( ) )
[4]: org. junit. assert. assertnotnull ( partition. waitfor ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( dbrangerpolicy )
[1]: org. junit. assert. assertequals ( reconstructed, origin )
[2]: org. junit. assert. assertequals ( 2, result. size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( result. size ( ), 1 )

************

************
tgt: org . junit . assert . asserttrue ( c . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertnotnull ( listbox )
[3]: org. junit. assert. assertequals ( userpass1, listbox )
[4]: org. junit. assert. assertnotnull ( listbox. get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnull ( listbox )
[1]: ) )
[2]: org. junit. assert. assertthat ( ( ( java. lang. string ) ( dest. getattribute ( ""value"" ) ) ), org. hamcrest. corematchers. is ( """" ) )
[3]: org. junit. assert. assertthat ( ( ( java. lang. string ) ( dest. getattribute ( ""a"" ) ) ), org. hamcrest. corematchers. is ( """" ) )
[4]: org. junit. assert. assertthat ( ( ( java. lang. string ) ( dest. getattribute ( ""name"" ) ) ), org. hamcrest. corematchers. is ( """" ) )

************

************
tgt: org . junit . assert . assertequals ( expectedddl , table . generateddl ( monitor ) )
[0]: org. junit. assert. assertthat ( ( ( java. lang. string ) ( dest. getattribute ( ""test"" ) ) ), org. hamcrest. corematchers. is ( """" ) )
[1]: org. junit. assert. assertthat ( ( ( java. lang. string ) ( dest. getattribute ( """" ) ) ), org. hamcrest. corematchers. is ( """" ) )
[2]: org. junit. assert. assertequals ( 1, parsedfields )
[3]: org. junit. assert. assertequals ( 0, parsedfields )
[4]: org. junit. assert. assertequals ( 9, parsedfields )

************

************
tgt: org . junit . assert . asserttrue ( getnoerrormsg ( ) , result )
[0]: org. junit. assert. assertequals ( ( - 1 ), parsedfields )
[1]: org. junit. assert. assertequals ( ( - 1 ), parsedfields )
[2]: org. junit. assert. assertfalse ( entity. equals ( entity2 ) )
[3]: org. junit. assert. assertarrayequals ( expectedresult, result. toarray ( ) )
[4]: org. junit. assert. assertarrayequals ( expectedresult, result. values ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertarrayequals ( expectedresult, result. values )
[1]: org. junit. assert. assertarrayequals ( expectedresult, result. stream ( ) )
[2]: org. junit. assert. assertarrayequals ( expectedresult, result. array ( ) )
[3]: org. junit. assert. asserttrue ( c. isvalid ( ) )
[4]: org. junit. assert. asserttrue ( ( expecteddelayinseconds > now ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , count . get ( ) )
[0]: org. junit. assert. asserttrue ( ( expecteddelayinseconds > 0 ) )
[1]: org. junit. assert. asserttrue ( ( expecteddelayinseconds <= now ) )
[2]: org. junit. assert. assertequals ( expecteddelayinseconds, report )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, cachemanager. getcachenames ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( flownodetransitionswrapper . issimpletomany ( ) )
[0]: org. junit. assert. asserttrue ( cachemanager. getcachenames ( ). isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, cachemanager. getcachenames ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( cachemanager. getcachenames ( ) )
[3]: org. junit. assert. assertequals ( 0, cachemanager. getcachenames ( ). size ( )
[4]: org. junit. assert. assertnotnull ( subject )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . size ( ) )
[0]: org. junit. assert. assertthat ( subject, org. hamcrest. matchers. is ( true ) )
[1]: org. junit. assert. assertnotnull ( subject. isrevoked ( ) )
[2]: org. junit. assert. assertequals ( subject, subject )
[3]: org. junit. assert. assertnotnull ( subject. getheaders ( ) )
[4]: org. junit. assert. assertfalse ( ismetafilepresent ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , com . psddev . dari . util . dateutils . issameday ( first , second ) )
[0]: org. junit. assert. asserttrue ( ismetafilepresent ( ) )
[1]: org. junit. assert. assertthat ( ismetafilepresent ( ), org. hamcrest. corematchers. is ( true ) )
[2]: org. junit. assert. assertthat ( ismetafilepresent ( ), org. hamcrest. corematchers. is ( false ) )
[3]: org. junit. assert. assertthat ( ismetafilepresent ( ), org. hamcrest. matchers. is ( true ) )
[4]: org. junit. assert. assertthat ( localtarget. obtainplatformtransactionmanager ( ), org. hamcrest. matchers. is ( mockedplatformtransactionmanager ) )

************

************
tgt: org . junit . assert . assertnotnull ( uuid )
[0]: org. junit. assert. assertthat ( localtarget. obtainplatformtransactionmanager ( ), is ( mockedplatformtransactionmanager ) )
[1]: org. junit. assert. assertnotnull ( localtarget. obtainplatformtransactionmanager ( ) )
[2]: org. junit. assert. assertequals ( mockedplatformtransactionmanager, localtarget. obtainplatformtransactionmanager ( ) )
[3]: org. junit. assert. assertthat ( localtarget. obtainplatformtransactionmanager ( ), org. hamcrest. matchers. equalto ( mockedplatformtransactionmanager ) )
[4]: org. junit. assert. assertequals ( startsize, list. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( sut . execute ( request ) )
[0]: org. junit. assert. asserttrue ( subject. passestypecheck ( org. json. jsonobject. class, true, boolean. true ) )
[1]: org. junit. assert. asserttrue ( subject. passestypecheck ( org. json. jsonobject. class, false, boolean. true ) )
[2]: org. junit. assert. asserttrue ( subject. passestypecheck ( org. json. jsonobject. class, true, true ) )
[3]: type ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertarrayequals ( orderedcells , rawcells )
[0]: org. junit. assert. assertequals ( 1, function. count )
[1]: org. junit. assert. assertequals ( 1, function. children. size ( ) )
[2]: org. junit. assert. assertequals ( 0, function. count )
[3]: org. junit. assert. assertnotnull ( methodoutcome. getcreated ( ) )
[4]: org. junit. assert. assertnotnull ( methodoutcome )

************

************
tgt: org . junit . assert . asserttrue ( search . getlookupkey ( ) . equals ( key ) )
[0]: org. junit. assert. asserttrue ( methodoutcome. getcreated ( ). isempty ( ) )
[1]: org. junit. assert. assertnotnull ( methodoutcome. getcreated ( ). tostring ( ) )
[2]: org. junit. assert. assertequals ( 1, methodoutcome. getcreated ( ) )
[3]: org. junit. assert. assertnotnull ( is )
[4]: org. junit. assert. assertequals ( expected, keystore. containskey ( key ) )

************

************
tgt: org . junit . assert . assertnotnull ( attributes . permissions ( ) )
[0]: org. junit. assert. assertequals ( expected, lookup. containskey ( key ) )
[1]: org. junit. assert. assertequals ( expected, jsonobject. containskey ( key ) )
[2]: org. junit. assert. assertequals ( expected, dictionary. containskey ( key ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, berichtentiteiten. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( new org . openehealth . ipf . commons . ihe . xds . core . transform . ebxml . submissionset ( ) , result )
[0]: org. junit. assert. assertnotnull ( user. findvalueoftype ( null, com. feilong. core. bean. propertyutil. class ) )
[1]: org. junit. assert. assertnotnull ( user. findvalueoftype ( null, java. lang. object. class ) )
[2]: org. junit. assert. assertnull ( user. findvalueoftype ( null, com. feilong. core. bean. propertyutil. class ) )
[3]: org. junit. assert. assertnull ( com. feilong. core. bean. propertyutil. findvalueoftype ( user, java. lang. object. class ) )
[4]: type ) )

************

************
tgt: org . junit . assert . asserttrue ( equals )
[0]: org. junit. assert. assertequals ( com. gentics. mesh. core. role. update_perm. getname ( ), reloadedrole. getname ( ) )
[1]: org. junit. assert. assertequals ( com. gentics. mesh. core. role. update_perm. name ( ), reloadedrole. getname ( ) )
[2]: org. junit. assert. assertequals ( getname ( ), reloadedrole. getname ( ) )
[3]: org. junit. assert. assertequals ( name, reloadedrole. getname ( ) )
[4]: . getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , notes . size ( ) )
[0]: org. junit. assert. assertarrayequals ( new java. lang. integer [ ] { 1, 2 }, result )
[1]: org. junit. assert. assertarrayequals ( new java. lang. integer [ ] { 1, null }, result )
[2]: org. junit. assert. assertarrayequals ( destination, result )
[3]: org. junit. assert. assertarrayequals ( source, result )
[4]: org. junit. assert. assertarrayequals ( result, destination )

************

************
tgt: org . junit . assert . assertequals ( 2 , gchild . getdistancetotop ( ) )
[0]: org. junit. assert. assertequals ( 1, org. apache. hadoop. hbase. client. testasynctablescannerclosecloserequests. getscannerscount ( ) )
[1]: org. junit. assert. assertequals ( 1, org. apache. hadoop. hbase. client. testasynctablescannercloseclosescount ( ) )
[2]: org. junit. assert. assertequals ( 1, scanner. getscannerscount ( ) )
[3]: org. junit. assert. assertequals ( 1, services. getscannerscount ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , value )
[0]: org. junit. assert. assertequals ( username, mdcvaluestr )
[1]: org. junit. assert. assertequals ( securitycontext, mdcvaluestr )
[2]: org. junit. assert. assertnotnull ( mdcvaluestr )
[3]: org. junit. assert. assertequals ( name, mdcvaluestr )
[4]: org. junit. assert. assertequals ( username, mdcvaluestr )

************

************
tgt: org . junit . assert . assertsame ( firsttry , st )
[0]: org. junit. assert. asserttrue ( com. vmware. admiral. common. util. certificateutilextended. isselfsignedcertificate ( certpem ) )
[1]: org. junit. assert. assertequals ( 0, store. size ( ) )
[2]: org. junit. assert. assertequals ( null, store. get ( value ) )
[3]: org. junit. assert. assertequals ( null, store. get ( ) )
[4]: org. junit. assert. assertequals ( null, store. get ( value ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( useragentheaderof ( useragent , useragentversion ) , result )
[0]: org. junit. assert. assertequals ( null, store. get ( value ). tostring ( ) )
[1]: org. junit. assert. assertnotnull ( s )
[2]: org. junit. assert. assertequals ( s, null )
[3]: org. junit. assert. assertequals ( s, s )
[4]: org. junit. assert. assertnull ( s )

************

************
tgt: org . junit . assert . assertnotnull ( bandwidthtwo )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( containerbuilder. getparentcontainer ( ) )
[2]: org. junit. assert. assertnull ( containerbuilder. getparentcontainer ( ) )
[3]: org. junit. assert. assertequals ( com. picocontainer. web. providers. defaults. testpicoprovider. class, containerbuilder. getparentcontainer ( ) )
[4]: org. junit. assert. asserttrue ( containerbuilder. getparentcontainer ( ). isempty ( ) )

************

************
tgt: org . junit . assert . assertfalse ( leaserefresher . renewlease ( leasecopy ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( org. apache. storm. utils. utils. isvalidconf ( map1, map2 ) )
[2]: org. junit. assert. assertequals ( expected. getkey ( ), actual. getkey ( ) )
[3]: org. junit. assert. assertequals ( expected. getkey ( ), actual. getkey ( ). getid ( ) )
[4]: org. junit. assert. assertequals ( expected, com. splicemachine. homeless. testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )

************

************
tgt: org . junit . assert . assertequals ( "v1" , node . attribute ( "k1" ) )
[0]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[1]: org. junit. assert. assertequals ( expected, org. splicemachine. homeless. testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[2]: org. junit. assert. assertequals ( expected, java. lang. string. valueof ( testutils. formattedresult. resultfactory. tostringunsorted ( rs ) ) )
[3]: org. junit. assert. assertequals ( expected, java. util. arrays. tostringunsorted ( rs ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 123 ), trie. shortestmatch ( null ) )

************

************
tgt: org . junit . assert . assertequals ( "hello<sp>world" , obj . getcharcontent ( true ) . tostring ( ) )
[0]: org. junit. assert. assertequals ( 123, trie. shortestmatch ( null ) )
[1]: org. junit. assert. assertequals ( null, trie. shortestmatch ( 123 ) )
[2]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 123 ), trie. shortestmatch ( string ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( pfcflag. maybe, header. getpfcflags ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , rules . getversion ( ) )
[0]: org. junit. assert. assertequals ( pfcflag. maybe, header. getpfcflags ( ). get ( ) )
[1]: org. junit. assert. assertequals ( pfcflag. maybe, header. getpfcflags ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( header. getpfcflags ( ) )
[3]: org. junit. assert. assertequals ( pfcflag. maybe }, header. getpfcflags ( ) )
[4]: org. junit. assert. assertnotnull ( res )

************

************
tgt: org . junit . assert . assertnotnull ( org . apache . phoenix . hbase . index . write . indexwriter . getcommitter ( env ) )
[0]: org. junit. assert. assertnotnull ( buf )
[1]: , buf )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( true, result )

************

************
tgt: org . junit . assert . assertequals ( ( before + 1 ) , service . getallraxaalerts ( true ) . size ( ) )
[0]: org. junit. assert. assertfalse ( result )
[1]: org. junit. assert. assertequals ( 1, actual )
[2]: org. junit. assert. assertequals ( 3, actual )
[3]: org. junit. assert. assertequals ( 2, actual )
[4]: org. junit. assert. assertequals ( 0, actual )

************

************
tgt: org . junit . assert . assertequals ( expectedfoldername , p . getmainframedatasetfolder ( ) )
[0]: org. junit. assert. asserttrue ( ( actual > 0 )
[1]: org. junit. assert. assertequals ( 1, grid. getitemcount ( ) )
[2]: org. junit. assert. assertequals ( 5, grid. getitemcount ( ) )
[3]: org. junit. assert. assertequals ( 0, grid. getitemcount ( ) )
[4]: org. junit. assert. assertequals ( 3, grid. getitemcount ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( evt )
[0]: org. junit. assert. assertequals ( 4, grid. getitemcount ( ) )
[1]: org. junit. assert. assertequals ( org. eclipse. collections. impl. string. immutable. codepointadaptertest. unicode_string, adapt. tostring ( ) )
[2]: org. junit. assert. assertequals ( alldata [ i ] [ i ], alldata [ i ] )
[3]: org. junit. assert. assertequals ( [ i ] [ alldata [ i ], alldata [ i ] )
[4]: org. junit. assert. assertequals ( alldata [ i ], alldata [ i ] )

************

************
tgt: org . junit . assert . assertequals ( "bar" , message . getsource ( ) )
[0]: org. junit. assert. assertequals ( alldata [ i ] [ i ], alldata [ i ] [ i ] )
[1]: org. junit. assert. assertequals ( i, alldata [ i ] [ i ] )
[2]: org. junit. assert. assertthat ( userids )
[3]: org. junit. assert. assertequals ( 2, userids. size ( ) )
[4]: org. junit. assert. assertequals ( 2, match. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( target . iswcinport ( ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( sprocessdefinition, filtermanagedby )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, resultmessage ( res, org. openstack. atlas. api. mgmt. validation. validators. put ). size ( ) )
[3]: org. junit. assert. assertequals ( resultmessage ( res, org. openstack. atlas. api. mgmt. validation. validators. put ), res. size ( ) )
[4]: org. junit. assert. assertequals ( resultmessage ( res, org. openstack. atlas. api. mgmt. validation. validators. put ), res. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( values , check ) )
[0]: org. junit. assert. assertequals ( org. openstack. atlas. api. mgmt. validation. validators. put, resultmessage ( res, org. openstack. atlas. api. mgmt. validation. validators ) )
[1]: org. junit. assert. assertequals ( org. openstack. atlas. api. mgmt. validation. validators. put, resultmessage ( res, org. openstack. atlas. api. mgmt. validation ) )
[2]: org. junit. assert. assertequals ( expected, ticker. buildcontract ( ticker ) )
[3]: org. junit. assert. assertequals ( expected, buildcontract ( ticker ) )
[4]: org. junit. assert. assertequals ( expected, buildercontract ( ticker ) )

************

************
tgt: org . junit . assert . assertequals ( 9 , directory . size ( ) )
[0]: org. junit. assert. assertequals ( expected, ticker. buildcontract ( null ) )
[1]: org. junit. assert. assertequals ( expected, ticker. buildcontract ( stock ) )
[2]: org. junit. assert. assertnull ( com. google. cloud. tools. eclipse. dataflow. core. project. gcsdataflowprojectclient. togcslocationuri ( null ) )
[3]: org. junit. assert. asserttrue ( dirtmpdir. exists ( childdir ) )
[4]: org. junit. assert. asserttrue ( folderdir. exists ( childdir ) )

************

************
tgt: org . junit . assert . assertfalse ( sta . validatestroke ( s ) )
[0]: org. junit. assert. asserttrue ( fs. exists ( childdir ) )
[1]: org. junit. assert. asserttrue ( directorytodelete, dirtodelete )
[2]: org. junit. assert. asserttrue ( dirtmpdir. exists ( child directory ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. asserttrue ( ( result == null ) )

************

************
tgt: org . junit . assert . asserttrue ( org . patientview . radar . util . radarutility . isnhsnumbervalid ( validcode ) )
[0]: org. junit. assert. assertequals ( result, wrapped )
[1]: org. junit. assert. assertequals ( 1, resultlist. size ( ) )
[2]: org. junit. assert. assertequals ( 0, resultlist. size ( ) )
[3]: org. junit. assert. assertequals ( 5, resultlist. size ( ) )
[4]: org. junit. assert. assertequals ( 3, resultlist. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( field )
[0]: org. junit. assert. assertequals ( 1, resultlist. size ( ) ) ;
[1]: org. junit. assert. assertequals ( 1, parser. spell ( word ) )
[2]: org. junit. assert. assertequals ( 1, spell ( word ) )
[3]: org. junit. assert. assertfalse ( spell ( word ) )
[4]: org. junit. assert. assertequals ( 1, parser. spell ( words ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , res . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, counter )
[2]: org. junit. assert. assertequals ( list ( ), source )
[3]: org. junit. assert. assertequals ( source, i )
[4]: org. junit. assert. assertnotnull ( source )

************

************
tgt: org . junit . assert . asserttrue ( ( ( future . get ( ) ) == result ) )
[0]: , source )
[1]: ) )
[2]: org. junit. assert. assertthat ( file. readutf ( ), is ( 0 ) )
[3]: org. junit. assert. assertthat ( file. readutf ( ), is ( false ) )
[4]: org. junit. assert. assertthat ( file. readutf ( ), is ( null ) )

************

************
tgt: org . junit . assert . assertthat ( value , org . hamcrest . matchers . is ( org . hamcrest . matchers . equalto ( 1l ) ) )
[0]: public void write ( ) { }
[1]: ) )
[2]: org. junit. assert. assertequals ( hash64_2, hash64_1 )
[3]: org. junit. assert. assertequals ( hash64_2, hash64_2 )
[4]: org. junit. assert. assertequals ( v [ i ], x. getentry ( i ), 0 )

************

************
tgt: org . junit . assert . assertarrayequals ( expresult , result )
[0]: org. junit. assert. assertequals ( v [ i ], x. getentry ( i ), inc )
[1]: org. junit. assert. assertequals ( x. getentry ( i ), val. getentry ( i ), inc )
[2]: org. junit. assert. assertequals ( v [ i ], x. getentry ( i ), 1 )
[3]: org. junit. assert. assertequals ( x. getentry ( i ), val. getentry ( i ), 0 )
[4]: org. junit. assert. assertequals ( expecting, result )

************

************
tgt: org . junit . assert . assertequals ( "test<sp>concept" , concept . getname ( localetosearch , false ) . tostring ( ) )
[0]: org. junit. assert. assertequals ( expecting, a2. getmessage ( ) )
[1]: org. junit. assert. assertequals ( expecting, a2. tostring ( ) )
[2]: org. junit. assert. assertequals ( expecting, a1. tostring ( ) )
[3]: assertequals assertequals expecting, result )
[4]: org. junit. assert. assertequals ( asset, undertest. formatattributes ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( consumer . getfoo ( ) )
[0]: org. junit. assert. assertequals ( asset, undertest. formatattributes ( ). get ( ) )
[1]: org. junit. assert. assertequals ( asset, undertest. formatattributes ( ). get ( ""a"" ) )
[2]: org. junit. assert. assertnotnull ( asset. formatattributes ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( """", firststatus. gettext ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 2, firststatus. gettext ( ). length )
[1]: org. junit. assert. assertnotnull ( firststatus. gettext ( ) )
[2]: org. junit. assert. assertequals ( """", firststatus. gettext ( ) )
[3]: org. junit. assert. assertequals ( 0, firststatus. gettext ( ). length )
[4]: org. junit. assert. assertnotnull ( model )

************

************
tgt: org . junit . assert . assertequals ( votenantsettings . size ( ) , 1 )
[0]: org. junit. assert. assertequals ( filter, model )
[1]: org. junit. assert. assertequals ( 1l, decoded. content ( ) )
[2]: org. junit. assert. assertequals ( 1, decoded. content ( ) )
[3]: org. junit. assert. assertequals ( 0l, decoded. content ( ) )
[4]: org. junit. assert. assertequals ( 1l, ( ( long ) ( decoded ) ) )

************

************
tgt: org . junit . assert . assertequals ( expectedwords , words )
[0]: org. junit. assert. assertequals ( 1, ( ( long ) ( decoded ) ) )
[1]: org. junit. assert. assertnotnull ( now )
[2]: org. junit. assert. assertequals ( null, now )
[3]: org. junit. assert. assertequals ( 1, now )
[4]: org. junit. assert. assertequals ( 0, now. length )

************

************
tgt: org . junit . assert . assertnotnull ( dbrangerpolicy )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( date )
[2]: org. junit. assert. assertnull ( date )
[3]: org. junit. assert. assertequals ( null, date )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( action )
[0]: 
[1]: org. junit. assert. assertequals ( 1, org. junit. tests. running. core. commandlinetest. fcount )
[2]: org. junit. assert. assertequals ( expected, elementsequal ( predecessors, expected ) )
[3]: org. junit. assert. assertequals ( expected, elementsequal ( predecessors, predecessors ) )
[4]: org. junit. assert. assertequals ( expected, elementsequal ( predecessors, list ) )

************

************
tgt: org . junit . assert . assertequals ( dataset . getname ( ) , createddataset . getname ( ) )
[0]: org. junit. assert. asserttrue ( elementsequal ( predecessors, expected ) )
[1]: ) )
[2]: org. junit. assert. assertarrayequals ( bos. tobytearray ( ), actual )
[3]: org. junit. assert. assertarrayequals ( expected, actual )
[4]: org. junit. assert. assertarrayequals ( new byte [ ] { 1 }, actual )

************

************
tgt: org . junit . assert . assertequals ( bs1 , bs2 )
[0]: org. junit. assert. assertarrayequals ( null, actual )
[1]: org. junit. assert. assertarrayequals ( bytes, actual )
[2]: org. junit. assert. assertnotnull ( piapeb. getvalidity ( ) )
[3]: org. junit. assert. assertequals ( org. codice. imaging. nitf. core. tre. tresource. extendedheaderdata, piapeb. getvalidity ( ) )
[4]: org. junit. assert. assertequals ( org. codice. imaging. nitf. trewrap. validityresult. getvalidity ( ), piapeb. getvalidity ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( heretype )
[0]: org. junit. assert. assertequals ( 1, piapeb. getvalidity ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, piapeb. getvalidity ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, contrequests. size ( ) )
[3]: org. junit. assert. assertequals ( path. makequalified ( path ), status. getpath ( ) )
[4]: org. junit. assert. assertequals ( path. makequalified ( status ), status. getpath ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , org . openkilda . persistence . repositories . impl . neo4jislrepositorytest . islrepository . findsymmetricactivewithavailablebandwidth ( availablebandwidth ) . size ( ) )
[0]: org. junit. assert. assertequals ( path. makequalified ( root ), status. getpath ( ) )
[1]: org. junit. assert. assertequals ( path. makequalified ( file ), status. getpath ( ) )
[2]: org. junit. assert. assertequals ( path. makequalified ( node ), status. getpath ( ) )
[3]: org. junit. assert. assertnotnull ( theresult )
[4]: org. junit. assert. assertarrayequals ( str, result )

************

************
tgt: org . junit . assert . assertequals ( selectordata . getvalues ( ) . size ( ) , 2 )
[0]: org. junit. assert. assertarrayequals ( strings, result )
[1]: org. junit. assert. assertarrayequals ( result, decoded )
[2]: org. junit. assert. assertarrayequals ( results, decoded )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( 1 , cap . getnuofdimensions ( ) )
[0]: org. junit. assert. assertarrayequals ( plaintext, hybridencrypt. decrypt ( ciphertext, contextinfo ) )
[1]: org. junit. assert. assertequals ( 0, actual )
[2]: org. junit. assert. assertequals ( 1, actual )
[3]: org. junit. assert. assertequals ( 4, actual )
[4]: org. junit. assert. assertequals ( ( - 1 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , info . geterased ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, columns )
[2]: org. junit. assert. assertnotnull ( parameters. getoutputfilename ( ) )
[3]: org. junit. assert. assertequals ( 1, parameters. getoutputfilename ( ) )
[4]: org. junit. assert. assertequals ( 0, parameters. getoutputfilename ( ). length )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , actualresult )
[0]: org. junit. assert. assertequals ( 1, parameters. getoutputfilename ( ). size ( )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, channel. getfilecontents ( file ). size ( ) )
[3]: org. junit. assert. assertnull ( channel. getfilecontents ( file ) )
[4]: org. junit. assert. assertequals ( 0, channel. getfilecontents ( null ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( eu . europa . esig . dss . utils . utils . tobase64 ( digest1 ) , eu . europa . esig . dss . utils . utils . tobase64 ( digest2 ) )
[0]: org. junit. assert. assertnotnull ( channel. getfilecontents ( file ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( str )
[3]: org. junit. assert. assertnull ( str )
[4]: org. junit. assert. assertfalse ( str. isempty ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertfalse ( str. contains ( string ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, retval )
[3]: org. junit. assert. assertequals ( s0, retval )
[4]: org. junit. assert. assertequals ( x8. y, y2. y )

************

************
tgt: org . junit . assert . assertnotnull ( servlet )
[0]: org. junit. assert. assertequals ( x8. y, y )
[1]: org. junit. assert. assertequals ( x8. y, y2 )
[2]: org. junit. assert. assertequals ( x8, y )
[3]: org. junit. assert. assertequals ( x8. y, y2. get ( 0 ) )
[4]: org. junit. assert. assertequals ( 1, access. getrules ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( java . nio . file . files . exists ( source ) )
[0]: org. junit. assert. assertequals ( 0, access. getrules ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( access. getrules ( ) )
[2]: org. junit. assert. assertequals ( 3, access. getrules ( ). size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( false, fr. marcwrobel. jbanking. iban. iban. isvalid ( null ) )

************

************
tgt: org . junit . assert . assertfalse ( com . sun . sgs . test . impl . service . data . testdataserviceimpl . service . createreference ( x ) . equals ( com . sun . sgs . test . impl . service . data . testdataserviceimpl . service . createreference ( y ) ) )
[0]: org. junit. assert. assertequals ( diskranges, com. splicemachine. orc. diskrange. collection ( diskranges ) )
[1]: org. junit. assert. assertequals ( diskranges, com. splicemachine. orc. diskrange. union ( diskranges ) )
[2]: org. junit. assert. assertequals ( diskranges, com. splicemachine. orc. diskrange. collect. immutablelist. of ( diskranges ) )
[3]: org. junit. assert. assertequals ( diskranges. size ( ), 1 )
[4]: org. junit. assert. assertequals ( diskranges, 1 )

************

************
tgt: org . junit . assert . asserttrue ( fouteentiteiten . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, instances. size ( ) )
[1]: org. junit. assert. assertequals ( 1, instance. size ( ) )
[2]: org. junit. assert. assertequals ( 0, instances. size ( ) )
[3]: org. junit. assert. assertequals ( 1, examples. size ( ) )
[4]: org. junit. assert. assertequals ( 3, instances. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( null , bean . getserverbaseurl ( ) )
[0]: org. junit. assert. assertequals ( ethrown, ecaught )
[1]: org. junit. assert. assertequals ( ethrown, ecaught. none ( ) )
[2]: org. junit. assert. assertequals ( ethrown, ecaught. getmessage ( ) )
[3]: org. junit. assert. assertsame ( ethrown, ecaught )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( hash , checksum . getvalue ( ) )
[0]: org. junit. assert. assertequals ( 5, store. store ( ""test"" ) )
[1]: org. junit. assert. assertequals ( ""test"", store. store ( ""test"" ) )
[2]: org. junit. assert. assertequals ( ""bar"", store. store ( ""test"" ) )
[3]: org. junit. assert. assertequals ( 1, store. store ( ""test"" ) )
[4]: org. junit. assert. assertequals ( ""1"", store. store ( ""test"" ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( firstkpl . size ( ) ) < ( firstkpldouble . size ( ) ) ) )
[0]: org. junit. assert. assertequals ( 1, resultoi. getlist ( value ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, resultoi. getlist ( value ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, resultoi. getlist ( result ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, resultoi. getlist ( result ). size ( ) )
[4]: org. junit. assert. assertequals ( null, resultoi. getlist ( value ) )

************

************
tgt: org . junit . assert . assertequals ( expectedtotalcount , actual . size ( ) )
[0]: org. junit. assert. assertequals ( 1, employees. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( new com. stackify. stream. employee ( ) ), employees )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( new com. stackify. stream. employee ( ). values ( ) ), employees )
[3]: org. junit. assert. assertequals ( com. stackify. stream. employeetest. emplist. values ( ). length, employees. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), employees )

************

************
tgt: org . junit . assert . asserttrue ( filter . test ( null ) )
[0]: org. junit. assert. assertequals ( flowinittime, flowdestroytime )
[1]: org. junit. assert. assertnotnull ( person. getage ( ) )
[2]: org. junit. assert. assertequals ( 1, person. getage ( ) )
[3]: org. junit. assert. assertequals ( 0, person. getage ( ) )
[4]: org. junit. assert. assertequals ( null, person. getage ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , forest . getroot ( 1 ) )
[0]: org. junit. assert. assertequals ( 1, person. getage ( ). length )
[1]: org. junit. assert. asserttrue ( com. sun. sgs. test. impl. kernel. testkernelsetaccesscoordinator. getused ( ) )
[2]: org. junit. assert. assertequals ( true, com. sun. sgs. test. impl. kernel. testkernelsetaccesscoordinator. getused ( ) )
[3]: org. junit. assert. assertequals ( false, com. sun. sgs. test. impl. kernel. testkernelsetaccesscoordinator. getused ( ) )
[4]: org. junit. assert. assertequals ( 1, com. sun. sgs. test. impl. kernel. testkernelsetaccesscoordinator. getused ( ) )

************

************
tgt: org . junit . assert . assertfalse ( false )
[0]: org. junit. assert. assertequals ( true, node. getused ( ) )
[1]: org. junit. assert. assertequals ( 1, tests. size ( ) )
[2]: org. junit. assert. assertequals ( 0, tests. size ( ) )
[3]: org. junit. assert. assertequals ( 1, tests. size ( ) )
[4]: org. junit. assert. assertequals ( 1, examples. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , dao . create ( foo ) )
[0]: org. junit. assert. assertequals ( 1, tests. size ( ) )
[1]: org. junit. assert. assertequals ( true, xmlattributecount. hasfurtherparams ( ) )
[2]: org. junit. assert. assertthat ( xmlattributecount. hasfurtherparams ( ), org. hamcrest. matchers. is ( true ) )
[3]: org. junit. assert. assertequals ( 1, xmlattributecount. hasfurtherparams ( ). size ( ) )
[4]: org. junit. assert. assertequals ( false, xmlattributecount. hasfurtherparams ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedmaster , logged )
[0]: org. junit. assert. assertequals ( 1, xmlattributecount. hasfurtherparams ( ). length )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 0, result. size ( ) )
[3]: org. junit. assert. asserttrue ( ( ( result. size ( ) ) == 0 ) )
[4]: org. junit. assert. asserttrue ( ( ( result. size ( ) ) == 1 ) )

************

************
tgt: org . junit . assert . assertequals ( data , elector . getactivedata ( ) )
[0]: org. junit. assert. asserttrue ( ( ( result. size ( ) ) > 0 ) )
[1]: org. junit. assert. assertnull ( answer )
[2]: org. junit. assert. assertnotnull ( answer )
[3]: org. junit. assert. assertsame ( expected, answer )
[4]: org. junit. assert. assertnotnull ( org. apache. tiles. template. composestackutil. getcomposestack ( request ) )

************

************
tgt: org . junit . assert . assertnull ( tenantdeployer )
[0]: org. junit. assert. assertequals ( requestscope, org. apache. tiles. template. composestackutil. getcomposestack ( request ) )
[1]: org. junit. assert. assertequals ( org. apache. tiles. template. composestackutil. getcomposestack ( request ), requestscope )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. equalto ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expectedbuilder . tostring ( ) , resulttranscript )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. equalto ( null ) )
[1]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. equalto ( string ) )
[2]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. equalto ( sql ) )
[3]: org. junit. assert. assertequals ( 0, result. length ( ) )
[4]: org. junit. assert. asserttrue ( com. hazelcast. simulator. utils. cloudproviderutils. iscloudprovider ( properties ) )

************

************
tgt: org . junit . assert . assertnull ( genericrowvaluetypeenforcer . enforcefieldtype ( 0 , null ) )
[0]: org. junit. assert. asserttrue ( org. hazelcast. simulator. utils. cloudproviderutils. iscloudprovider ( properties ) )
[1]: org. junit. assert. asserttrue ( com. hazelcast. simulator. utils. cloudproviderutils. hascloudprovider ( properties ) )
[2]: org. junit. assert. asserttrue ( com. hazelcast. simulator. utils. cloudproviderutils. arecloudprovider ( properties ) )
[3]: org. junit. assert. asserttrue ( properties. iscloudprovider ( properties ) )
[4]: org. junit. assert. assertthat ( count, is ( 1l ) )

************

************
tgt: org . junit . assert . assertequals ( buffer , result )
[0]: org. junit. assert. assertthat ( count, is ( equalto ( 1 ) ) )
[1]: org. junit. assert. assertthat ( count, is ( 0l ) )
[2]: org. junit. assert. assertthat ( count )
[3]: ) )
[4]: org. junit. assert. assertequals ( expresult, result )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( expressionresult, result )
[1]: org. junit. assert. assertequals ( experimentresult, result )
[2]: org. junit. assert. assertequals ( expresult, result. value )
[3]: org. junit. assert. assertequals ( expresult, result. values )
[4]: org. junit. assert. assertfalse ( instance. haseffect ( fullsize, fullsize ) )

************

************
tgt: org . junit . assert . assertequals ( resource , result )
[0]: org. junit. assert. assertnull ( instance. haseffect ( fullsize, fullsize ) )
[1]: org. junit. assert. assertequals ( null, instance. haseffect ( fullsize, fullsize ) )
[2]: org. junit. assert. assertequals ( new edu. illinois. library. cantaloupe. image. dimension ( 2, 600 ), instance. haseffect ( fullsize, fullsize ) )
[3]: org. junit. assert. assertequals ( true, instance. haseffect ( fullsize, fullsize ) )
[4]: org. junit. assert. assertequals ( 1, multiarray. length )

************

************
tgt: org . junit . assert . assertequals ( expected , elements )
[0]: org. junit. assert. assertequals ( 0, multiarray. length )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), multiarray )
[2]: org. junit. assert. assertequals ( null, multiarray )
[3]: org. junit. assert. assertnotnull ( multiarray )
[4]: org. junit. assert. assertequals ( 1, c. number ( ) )

************

************
tgt: org . junit . assert . assertequals ( flush1 , flush1duplicate )
[0]: org. junit. assert. assertequals ( 0, c. number ( ) )
[1]: org. junit. assert. assertequals ( c. number ( ), 1 )
[2]: org. junit. assert. assertequals ( 3, c. number ( ) )
[3]: org. junit. assert. assertequals ( 9, c. number ( ) )
[4]: org. junit. assert. assertequals ( value, instance. get ( key ) )

************

************
tgt: org . junit . assert . assertequals ( result , "1<sp>2<sp>3<sp>[other]<sp>5" )
[0]: org. junit. assert. assertequals ( new java. lang. long ( value ), instance. get ( key ) )
[1]: org. junit. assert. assertequals ( new java. lang. integer ( value ), instance. get ( key ) )
[2]: org. junit. assert. assertequals ( new java. lang. string ( value ), instance. get ( key ) )
[3]: org. junit. assert. assertequals ( 0l, count )
[4]: org. junit. assert. assertequals ( 0, count )

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertequals ( 1l, count )
[1]: org. junit. assert. assertequals ( 1, count )
[2]: ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), testutils. getcollectioninput ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( item ), reader. getcollectioninput ( ) )

************

************
tgt: org . junit . assert . asserttrue ( fsaction . getdeletes ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, test. getcollectioninput ( ). size ( ) )
[1]: org. junit. assert. assertequals ( inputassociations, test. getcollectioninput ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, bluetoothinfo. size ( ) )
[4]: org. junit. assert. asserttrue ( ( ( bluetoothinfo. size ( ) ) == 1 ) )

************

************
tgt: org . junit . assert . assertthat ( transformer . transform ( inputstream ) , org . hamcrest . corematchers . equalto ( org . mule . runtime . core . internal . transformer . simple . inputstreamtobytearraytestcase . donkey . getbytes ( ) ) )
[0]: org. junit. assert. asserttrue ( ( ( bluetoothinfo. size ( ) ) == 2 ) )
[1]: org. junit. assert. asserttrue ( ( ( bluetoothinfo. size ( ) ) == 0 ) )
[2]: org. junit. assert. assertequals ( 0, bluetoothinfo. size ( ) )
[3]: org. junit. assert. assertnotnull ( restartedprocessinstance )
[4]: org. junit. assert. assertnull ( restartedprocessinstance )

************

************
tgt: org . junit . assert . assertequals ( modelinstanceinteger . getlong ( ) , ( ( org . dresdenocl . modelinstancetype . types . imodelinstanceinteger ) ( castedelement ) ) . getlong ( ) )
[0]: org. junit. assert. assertequals ( null, restartedprocessinstance )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertnotnull ( credentials. getauthenticationtype ( ) )
[4]: org. junit. assert. assertequals ( null, credentials. getauthenticationtype ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , equalto ( expected ) )
[0]: org. junit. assert. assertequals ( expected, credentials. getauthenticationtype ( ) )
[1]: org. junit. assert. assertequals ( 0, credentials. getauthenticationtype ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( dsl )
[4]: org. junit. assert. assertequals ( 1, dsl. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "a" , args . next ( ) )
[0]: org. junit. assert. assertequals ( 0, dsl. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), dsl )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( ml )
[4]: org. junit. assert. assertequals ( ml, classundertest )

************

************
tgt: org . junit . assert . assertequals ( dest , org . sejda . impl . sambox . component . outlineutils . topagedestination ( victim , catalog ) . get ( ) )
[0]: org. junit. assert. assertequals ( feedbacklinesbefore, getfeedbackfilelines ( ) )
[1]: org. junit. assert. assertequals ( 1, ( ( getfeedbackfilelines ( ) ) - feedbacklinesbefore ) )
[2]: org. junit. assert. assertequals ( 1, dao. getfeedbackfilelines ( ) )
[3]: org. junit. assert. assertequals ( ( feedbacklinesbefore + 1 ), getfeedbackfilelines ( ) )
[4]: org. junit. assert. assertequals ( 1, getfeedbackfilelines ( ) )

************

************
tgt: org . junit . assert . assertequals ( study , st )
[0]: org. junit. assert. assertequals ( result, 1.0, 0.0 )
[1]: org. junit. assert. assertequals ( 1, result, 0 )
[2]: org. junit. assert. assertequals ( result, 1, 0 )
[3]: org. junit. assert. assertequals ( 1, result, 0.0 )
[4]: org. junit. assert. assertequals ( result, 1.0 )

************

************
tgt: org . junit . assert . assertfalse ( parser . gotanyheader ( ) )
[0]: org. junit. assert. assertequals ( 1, profiles. size ( ) )
[1]: org. junit. assert. assertequals ( 0, profiles. size ( ) )
[2]: org. junit. assert. assertnotnull ( profiles )
[3]: org. junit. assert. assertequals ( 1.0, profiles. size ( ) )
[4]: org. junit. assert. assertequals ( 1, profile. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( testconstants . valid_deliverer_name , deliverer . getname ( ) )
[0]: org. junit. assert. assertnotnull ( descriptor. getmodelname ( ) )
[1]: org. junit. assert. assertequals ( 1, descriptor. getmodelname ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, descriptor. getmodelname ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, descriptor. getmodelname ( ). length )
[4]: org. junit. assert. assertequals ( 1, descriptor. getmodelname ( ). size ( )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. asserttrue ( result )
[1]: org. junit. assert. assertfalse ( result )
[2]: org. junit. assert. assertequals ( converted, configuration )
[3]: org. junit. assert. assertequals ( null, converted )
[4]: org. junit. assert. assertnotnull ( converted )

************

************
tgt: org . junit . assert . assertequals ( expectedcount , visitor . getownedelements ( ) . size ( ) )
[0]: public void write ( ) { }
[1]: public void set ( ) { }
[2]: org. junit. assert. assertnull ( authentication. authenticate ( creds ) )
[3]: org. junit. assert. assertequals ( 0, authentication. authenticate ( creds ) )
[4]: org. junit. assert. assertequals ( 0, screenshot. length ( ) )

************

************
tgt: org . junit . assert . assertequals ( "foo" , resolver . findwildcardmatch ( multitargetlocation , singlelocation ) )
[0]: org. junit. assert. assertequals ( 1, screenshot. length ( ) )
[1]: org. junit. assert. assertequals ( 3, screenshot. length ( ) )
[2]: org. junit. assert. assertequals ( 2, screenshot. length ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, service. countbyquery ( ) )

************

************
tgt: org . junit . assert . assertnull ( profile )
[0]: org. junit. assert. assertequals ( 0, service. countbyquery ( ) )
[1]: org. junit. assert. assertthat ( countbyquery ( ), org. hamcrest. corematchers. is ( 0l ) )
[2]: org. junit. assert. assertthat ( countbyquery ( ), org. hamcrest. corematchers. is ( 1l ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( java. lang. string. class, e. getclass ( ) )

************

************
tgt: org . junit . assert . assertequals ( out , v . tostring ( ) )
[0]: org. junit. assert. assertequals ( org. finra. herd. service. abstractservicetest. business_object_data_key_as_string, e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( org. finra. herd. service. abstractservicetest. business_object_data_key_as_string, e )
[3]: ) )
[4]: org. junit. assert. assertnull ( converter. convertfrom ( null ) )

************

************
tgt: org . junit . assert . assertequals ( existingreadingtimeentry , newreadingtimeentry )
[0]: org. junit. assert. assertnotnull ( converter. convertfrom ( null ) )
[1]: org. junit. assert. assertnotnull ( converter. convertfrom ( java. lang. string. class ) )
[2]: org. junit. assert. asserttrue ( converter. convertfrom ( null ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, groupbyrowcomparator. compare ( o1, o2 ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 0, groupbyrowcomparator. compare ( o1, o2 ) )
[1]: org. junit. assert. assertthat ( getfirstmonitorable ( gaugeadapter ). get ( ), org. hamcrest. matchers. < java. lang. object > is ( newvalue ) )
[2]: org. junit. assert. assertthat ( getfirstmonitorable ( gaugeadapter ). get ( ), org. hamcrest. matchers. < java. lang. string > is ( newvalue ) )
[3]: org. junit. assert. assertthat ( getfirstmonitorable ( gaugeadapter ). get ( ), org. hamcrest. matchers. < java. lang. long > is ( newvalue ) )
[4]: org. junit. assert. assertthat ( getfirstmonitorable ( gaugeadapter ), org. hamcrest. matchers. < java. lang. object > is ( newvalue ) )

************

************
tgt: org . junit . assert . assertnull ( type )
[0]: org. junit. assert. assertequals ( newvalue, getfirstmonitorable ( gaugeadapter ). get ( ) )
[1]: org. junit. assert. assertarrayequals ( bytes, resolvedbytes. get ( 0 ) )
[2]: org. junit. assert. assertequals ( bytes, resolvedbytes. get ( 0 ) )
[3]: org. junit. assert. assertequals ( item, resolvedbytes. get ( 0 ) )
[4]: org. junit. assert. assertequals ( resolvedbytes. get ( 0 ), resolvedbytes )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedresults , results )
[0]: ) )
[1]: org. junit. assert. assertequals ( actualdata, version )
[2]: org. junit. assert. assertequals ( version, actualdata [ 0 ] )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( actualdata ), version )
[4]: org. junit. assert. assertequals ( expecteddata, version )

************

************
tgt: org . junit . assert . assertequals ( lance , i . next ( ) )
[0]: org. junit. assert. assertequals ( version, actualdata [ 1 ] )
[1]: org. junit. assert. assertnotnull ( method )
[2]: org. junit. assert. assertnotnull ( method. newinstance ( 1 ) )
[3]: org. junit. assert. assertequals ( 1, method. matcher ( method ). size ( ) )
[4]: org. junit. assert. assertnotnull ( method. newinstance ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , myform . getisreg ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, result )
[2]: org. junit. assert. assertequals ( result, expected )
[3]: org. junit. assert. assertarrayequals ( expected. toarray ( ), result )
[4]: org. junit. assert. assertequals ( expected, results )

************

************
tgt: org . junit . assert . asserttrue ( ( ( internalfact . getobject ( ) ) instanceof org . drools . testcoverage . common . model . factb ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( streamname, reader. getstreamname ( ) )
[2]: org. junit. assert. assertequals ( streamname, input. getstreamname ( ) )
[3]: org. junit. assert. assertequals ( streamname, handler. getstreamname ( ) )
[4]: org. junit. assert. assertequals ( streamname, manager. getstreamname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( computer . needsprocessing ( context ) )
[0]: org. junit. assert. assertequals ( streamname, dao. getstreamname ( ) )
[1]: org. junit. assert. assertequals ( expectedmove, ml )
[2]: org. junit. assert. assertequals ( id1, id2 )
[3]: org. junit. assert. assertsame ( id1, id2 )
[4]: org. junit. assert. assertequals ( id1, id2. previtemid ( id1 ) )

************

************
tgt: org . junit . assert . assertequals ( original , restored )
[0]: org. junit. assert. assertequals ( 1, tree. size ( ) )
[1]: org. junit. assert. assertequals ( 0, tree. size ( ) )
[2]: org. junit. assert. assertequals ( 1l, tree. size ( ) )
[3]: org. junit. assert. assertequals ( 3, tree. size ( ) )
[4]: org. junit. assert. assertequals ( 1, tree. collection. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , splitsample . estimatesourcesize ( 10 ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( true, wrongdocument. exists ( ) )
[2]: org. junit. assert. asserttrue ( wrongdocument. exists ( ) )
[3]: org. junit. assert. assertfalse ( wrongdocument. exists ( ) )
[4]: org. junit. assert. assertequals ( false, wrongdocument. exists ( ) )

************

************
tgt: org . junit . assert . assertequals ( set2 , set1 )
[0]: ) )
[1]: org. junit. assert. assertnull ( work. gettitle ( ) )
[2]: org. junit. assert. assertnotnull ( work. gettitle ( ) )
[3]: org. junit. assert. assertequals ( work. gettitle ( ), null )
[4]: org. junit. assert. assertnull ( work. gettitle ( ) )

************

************
tgt: org . junit . assert . asserttrue ( matcher . match ( rule , parent , node ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, values. size ( ) )
[2]: org. junit. assert. assertequals ( 0, set. size ( ) )
[3]: org. junit. assert. assertequals ( 0, collection. size ( ) )
[4]: org. junit. assert. assertequals ( 0, list. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( e . iscancelled ( ) )
[0]: org. junit. assert. assertequals ( 0, events. size ( ) )
[1]: org. junit. assert. assertnotnull ( com. jayway. facebooktestjavaapi. testuser. impl. testhttpclientfacebooktestuserstore. account. getalltestusers ( ) )
[2]: org. junit. assert. assertnotnull ( com. jayway. facebooktestjavaapi. testuser. impl. testhttpclientfacebooktestuserstore. facebookstore2. getalltestusers ( ) )
[3]: org. junit. assert. assertnotnull ( com. jayway. facebooktestconfig. testuser. impl. testhttpclientfacebooktestuserstore. account. getalltestusers ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( existingsapentry , newsapentry )
[0]: )
[1]: org. junit. assert. assertequals ( dosepoch, entry. getname ( ) )
[2]: org. junit. assert. assertthat ( entry. getname ( ), org. hamcrest. matchers. equalto ( dosepoch ) )
[3]: org. junit. assert. assertthat ( entry. getname ( ), org. hamcrest. matchers. is ( dosepoch ) )
[4]: org. junit. assert. assertequals ( dosepoch. getname ( ), entry. getname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( returnval )
[0]: org. junit. assert. assertequals ( dosepoch, entry. getname ( ), list. size ( ) )
[1]: org. junit. assert. assertequals ( 1, uri. stringvalue ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, uri. stringvalue ( ). length )
[3]: org. junit. assert. assertequals ( 1, uri. stringvalue ( ) )
[4]: org. junit. assert. assertequals ( 0, uri. stringvalue ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , actual . size ( ) )
[0]: org. junit. assert. assertnotnull ( uri. stringvalue ( ) )
[1]: org. junit. assert. asserttrue ( org. kie. dmn. feel. parser. feel11. feelparser. isvariablenamevalid ( var ) )
[2]: org. junit. assert. assertfalse ( org. kie. dmn. feel. parser. feel11. feelparser. isvariablenamevalid ( var ) )
[3]: org. junit. assert. assertequals ( 1, org. kie. dmn. feel. parser. feel11. feelparser. isvariablenamevalid ( var ) )
[4]: org. junit. assert. assertnotnull ( org. kie. dmn. feel. parser. feel11. feelparser. isvariablenamevalid ( var ) )

************

************
tgt: org . junit . assert . assertequals ( 14750.0 , testresult , 0.0 )
[0]: org. junit. assert. assertequals ( true, org. kie. dmn. feel. parser. feel11. feelparser. isvariablenamevalid ( var ) )
[1]: org. junit. assert. assertequals ( 3, proc. getprojectedsymbols ( ). size ( ) )
[2]: org. junit. assert. asserttrue ( profile. isnoisefiltersupported ( ) )
[3]: org. junit. assert. asserttrue ( this. profile. isnoisefiltersupported ( ) )
[4]: org. junit. assert. assertequals ( true, this. profile. isnoisefiltersupported ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( org . apache . oozie . fluentjob . api . action . testfsactionbuilder . moves ) , fsaction . getmoves ( ) )
[0]: org. junit. assert. assertequals ( 1, m. numberofstudents ( ) )
[1]: org. junit. assert. assertnotnull ( dqlparser )
[2]: org. junit. assert. assertnotnull ( db )
[3]: org. junit. assert. assertnotnull ( insert )
[4]: org. junit. assert. assertnotnull ( s )

************

************
tgt: org . junit . assert . assertequals ( initlength , jq ( ".z-listcell" ) . length ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, map. size ( ) )
[2]: org. junit. assert. assertnotnull ( map )
[3]: org. junit. assert. assertequals ( 1, size )
[4]: org. junit. assert. assertequals ( size, map. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( bundleprocessor . processuninstalledbundleandpopulatetasklist ( bundle , tasks ) , org . hamcrest . matchers . equalto ( true ) )
[0]: org. junit. assert. assertequals ( expected, map. size ( ) )
[1]: org. junit. assert. assertequals ( 1, listtest4. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), listtest4 )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), listtest4 )
[4]: org. junit. assert. assertnotnull ( listtest4 )

************

************
tgt: org . junit . assert . assertequals ( "1.2.1" , result )
[0]: org. junit. assert. assertequals ( 0, listtest4. size ( ) )
[1]: org. junit. assert. assertequals ( org.3456789012345, pass. getpass ( ) )
[2]: org. junit. assert. assertequals ( "123456789012345, pass. getpass ( ) )
[3]: org. junit. assert. assertequals ( 1, pass. getpass ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( pass. getpass ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 1, pass. getpass ( ) )
[1]: org. junit. assert. assertnotnull ( returncontenttype )
[2]: org. junit. assert. assertequals ( contenttype, returncontenttype )
[3]: org. junit. assert. assertnull ( returncontenttype )
[4]: org. junit. assert. assertequals ( contenttype, returncontenttype. getcontenttype ( ) )

************

************
tgt: org . junit . assert . asserttrue ( data . isempty ( ) )
[0]: org. junit. assert. assertequals ( contenttype, returncontenttype )
[1]: org. junit. assert. assertnotnull ( td. get ( 0 ) )
[2]: org. junit. assert. assertnotnull ( td. get ( "do<sp>a<sp>testtest; ) )
[3]: org. junit. assert. assertnotnull ( td. get ( "do<sp>a<sp>testtestkeyid ) )
[4]: org. junit. assert. assertnotnull ( td. get ( "do<sp>a<sp>testtestclass ) )

************

************
tgt: org . junit . assert . assertequals ( i , j )
[0]: org. junit. assert. assertnotnull ( td. get ( "do<sp>a<sp>testtestproperties ) )
[1]: org. junit. assert. assertequals ( 0, writer. tostring ( ). length )
[2]: org. junit. assert. assertarrayequals ( new char [ ] { 0, 1, 0 }, writer. tostring ( ) )
[3]: org. junit. assert. assertarrayequals ( new char [ ] { 0, 1 }, writer. tostring ( ) )
[4]: org. junit. assert. assertequals ( null, writer. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( erdo_id , a . at ( i ) )
[0]: org. junit. assert. assertnotnull ( writer. tostring ( ) )
[1]: org. junit. assert. assertnotnull ( lastbrand )
[2]: org. junit. assert. assertnull ( lastbrand )
[3]: org. junit. assert. assertequals ( tests. unit, lastbrand )
[4]: , lastbrand )

************

************
tgt: org . junit . assert . assertequals ( ddmtemplates . tostring ( ) , 3 , ddmtemplates . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( authenticationmodule.exceptions ( ) )
[2]: org. junit. assert. assertequals ( expected, actualexceptions )
[3]: org. junit. assert. assertnotnull ( authenticationmanager )
[4]: org. junit. assert. assertequals ( 1, authenticationmodule. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expecteds , actuals )
[0]: org. junit. assert. assertnotnull ( authenticationmodule. actions )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. asserttrue ( result )
[3]: org. junit. assert. assertequals ( false, result )
[4]: org. junit. assert. assertthat ( result, is ( true ) )

************

************
tgt: org . junit . assert . assertnull ( metadatadom )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( 1, usercumulativelist. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( calendar ), usercumulativelist )
[3]: org. junit. assert. asserttrue ( ( ( e. getcause ( ) ) instanceof java. lang. illegalargumentexception ) )
[4]: org. junit. assert. asserttrue ( ( ( e. getcause ( ). getmessage ( ) ) instanceof java. lang. illegalargumentexception ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. asserttrue ( e. getcause ( ). getmessage ( ). contains ( string_1 ) )
[1]: org. junit. assert. asserttrue ( ( ( e. getcause ( ). getmessage ( ) ) instanceof java. lang. string ) )
[2]: org. junit. assert. asserttrue ( ( ( e. getcause ( ) ) instanceof org. apache. flink. streaming. connectors. elasticsearch ) )
[3]: org. junit. assert. assertequals ( estest0. hashcode ( ), estest1. hashcode ( ) )
[4]: org. junit. assert. assertequals ( 1, estest0. hashcode ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( fields . length ) >= 4 ) )
[0]: org. junit. assert. assertnotnull ( estest0. hashcode ( ) )
[1]: org. junit. assert. assertequals ( 0, estest0. hashcode ( ) )
[2]: org. junit. assert. assertequals ( estest0. hashcode ( ), estest0. hashcode ( ) )
[3]: org. junit. assert. assertnotnull ( simulatorproperties. get ( workingdirfile. getid ( ) ) )
[4]: org. junit. assert. assertnotnull ( simulatorproperties. get ( workingdirfile. getabsolutepath ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( bs1 . equals ( bs2 ) )
[0]: org. junit. assert. assertnotnull ( simulatorproperties. get ( workingdirfile ) )
[1]: org. junit. assert. assertnotnull ( simulatorproperties. get ( workingdirfile. getname ( ) ) )
[2]: org. junit. assert. assertnotnull ( simulatorproperties. get ( workingdirfile. tostring ( ) ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), givenlist )
[4]: org. junit. assert. assertequals ( givenlist, new java. util. arraylist ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , command )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 2, 3, 1 ), givenlist )
[1]: org. junit. assert. assertequals ( list, givenlist )
[2]: ) )
[3]: org. junit. assert. assertequals ( resources. getresource ( null ), exception. getmessage ( ) )
[4]: org. junit. assert. assertequals ( resources. getresource ( 0 ), exception. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( result , result . success )
[0]: org. junit. assert. assertequals ( resources. getresource ( ""foo"" ), exception. getmessage ( ) )
[1]: org. junit. assert. assertequals ( resources. getresource ( exception. getmessage ( ) ), exception. getmessage ( ) )
[2]: org. junit. assert. assertequals ( resources. getresource ( java. util. locale. getdefault ( ) ), exception )
[3]: org. junit. assert. assertthat ( parsedpullrequest, org. hamcrest. matchers. equalto ( expectedpullrequest ) )
[4]: org. junit. assert. assertthat ( parsedpullrequest, org. hamcrest. matchers. equalto ( locallabels ) )

************

************
tgt: org . junit . assert . asserttrue ( result . get ( ) )
[0]: org. junit. assert. assertnull ( parsedpullrequest )
[1]: org. junit. assert. assertthat ( parsedpullrequest )
[2]: org. junit. assert. assertnull ( parsedpullrequest. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( composite. getcomponents ( ) )
[4]: org. junit. assert. assertnotnull ( tree )

************

************
tgt: org . junit . assert . assertequals ( 1 , orders . size ( ) )
[0]: org. junit. assert. assertnotnull ( pref )
[1]: org. junit. assert. assertnotnull ( composite. getcomponents )
[2]: org. junit. assert. assertequals ( 1, secure )
[3]: org. junit. assert. assertnull ( voimageresource. getcontenttype ( ) )
[4]: org. junit. assert. assertequals ( null, voimageresource. getcontenttype ( ) )

************

************
tgt: org . junit . assert . assertequals ( field . get ( snapshot ) , field . get ( clonedsnapshot ) )
[0]: org. junit. assert. assertnotnull ( voimageresource. getcontenttype ( ) )
[1]: org. junit. assert. assertequals ( 0, voimageresource. getcontenttype ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( org. joda. beans. sample. immpersonnonfinal. meta. meta ( ) )
[4]: org. junit. assert. assertnotnull ( org. joda. beans. sample. immpersonnonfinal. meta ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , patientcount )
[0]: org. junit. assert. assertnull ( org. joda. beans. sample. immpersonnonfinal. meta. meta ( ) )
[1]: org. junit. assert. assertequals ( org. joda. beans. sample. immpersonnonfinal. meta. meta ( ), util. meta ( ) )
[2]: org. junit. assert. assertnotnull ( org. joda. beans. sample. immpersonnonfinal. meta. meta ( ). meta ( ) )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertnotnull ( entity )

************

************
tgt: org . junit . assert . assertequals ( 1 , res )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertnotnull ( index1 )
[2]: org. junit. assert. assertequals ( 1, count )
[3]: org. junit. assert. assertnull ( testmapitem ( null ) )
[4]: org. junit. assert. assertnull ( testmapitem ( java. util. collections. emptylist ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( user . isunitadministrator ( ) )
[0]: org. junit. assert. assertnull ( testmapitem. mapitems ( null ) )
[1]: org. junit. assert. assertnull ( testmapitems ( null ) )
[2]: org. junit. assert. assertnull ( testmapitems ( java. util. collections. emptylist ( ) ) )
[3]: org. junit. assert. assertequals ( 1, mol. stereoelements ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, mol. stereoelements ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( context . window ( ) , org . hamcrest . matchers . equalto ( window ) )
[0]: org. junit. assert. assertnotnull ( mol. stereoelements ( ) )
[1]: org. junit. assert. asserttrue ( mol. stereoelements ( ). isempty ( ) )
[2]: org. junit. assert. assertequals ( 1, mol. stereoelements ( ). size ( )
[3]: org. junit. assert. assertnotnull ( info. michaelkohler. helpertools. filehelpertest. targetfile )
[4]: org. junit. assert. assertnotnull ( info. michaelkohler. helpertools. filehelpertest. targetfile. name )

************

************
tgt: org . junit . assert . assertequals ( 3 , changedservice . size ( ) )
[0]: org. junit. assert. assertnotnull ( target )
[1]: org. junit. assert. assertnotnull ( info. michaelkohler. helpertools. filehelpertest )
[2]: org. junit. assert. assertnotnull ( source )
[3]: org. junit. assert. assertequals ( kubernetesapiversion. v1, registry. getmaxsupportedkubernetesversion ( serverversions ) )
[4]: org. junit. assert. assertarrayequals ( kubernetesapiversion. v1, registry. getmaxsupportedkubernetesversion ( serverversions ) )

************

************
tgt: org . junit . assert . assertthat ( rs . size ( ) , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( 0 ) ) )
[0]: org. junit. assert. assertsame ( kubernetesapiversion. v1, registry. getmaxsupportedkubernetesversion ( serverversions ) )
[1]: org. junit. assert. assertnull ( registry. getmaxsupportedkubernetesversion ( serverversions ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( com. groupon. nakala. sentiment. prepostprocessortest. original [ i ], result )
[4]: org. junit. assert. assertequals ( com. groupon. nakala. sentiment. prepostprocessortest. original [ ( i + 1 ) ], result )

************

************
tgt: org . junit . assert . assertequals ( 0 , shift )
[0]: org. junit. assert. assertequals ( com. groupon. nakala. sentiment. prepostprocessortest. original [ i ]. length, result )
[1]: org. junit. assert. assertequals ( com. groupon. nakala. sentiment. prepostprocessortest. original [ ( i - 1 ) ], result )
[2]: org. junit. assert. assertequals ( com. groupon. nakala. sentiment. prepostprocessortest. original [ ( i ++ ) ], result )
[3]: org. junit. assert. assertequals ( 1, summaryrecords. size ( ) )
[4]: org. junit. assert. assertequals ( 0, summaryrecords. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "<sp>" , "<sp>" )
[0]: org. junit. assert. assertequals ( 1, sumrecords. size ( ) )
[1]: org. junit. assert. assertequals ( 2, summaryrecords. size ( ) )
[2]: org. junit. assert. assertequals ( 3, summaryrecords. size ( ) )
[3]: org. junit. assert. assertequals ( 1, elements. size ( ) )
[4]: org. junit. assert. assertequals ( 0, elements. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( bhas )
[0]: org. junit. assert. assertequals ( 2, elements. size ( ) )
[1]: org. junit. assert. assertnotnull ( elements )
[2]: org. junit. assert. assertequals ( 1, element. size ( ) )
[3]: org. junit. assert. assertnull ( net. sourceforge. pmd. lang. languageregistry. findlanguageversionbytersename ( null ) )
[4]: org. junit. assert. assertnull ( net. sourceforge. pmd. lang. languageregistry. findlanguageversionbytersename ( "<sp>goog ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . integer ( 0 ) , newoffset )
[0]: org. junit. assert. assertnull ( net. sourceforge. pmd. lang. languageregistry. findlanguageversionbytersename ( "<sp>bot ) )
[1]: org. junit. assert. assertnull ( net. sourceforge. pmd. lang. languageregistry. findlanguageversionbytersename ( "<sp>antialias ) )
[2]: org. junit. assert. assertnull ( net. sourceforge. pmd. lang. languageregistry. findlanguageversionbytersename ( "<sp>istribut ) )
[3]: org. junit. assert. assertequals ( insertioncount, leftblock. getrecords ( ). size ( ) )
[4]: org. junit. assert. assertequals ( insertcount, leftblock. getrecords ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( s . contains ( java . lang . string . valueof ( i ) ) )
[0]: org. junit. assert. assertequals ( insertedcount, leftblock. getrecords ( ). size ( ) )
[1]: org. junit. assert. assertequals ( insertioncount, leftblock. getrecords ( ). get ( ) )
[2]: org. junit. assert. assertequals ( insertioncount, leftblock. getrecords ( ). length )
[3]: org. junit. assert. assertequals ( longstringtext, total )
[4]: org. junit. assert. assertequals ( total, longstringtext )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( expected ) )
[0]: org. junit. assert. assertequals ( 1, total )
[1]: org. junit. assert. assertequals ( expected, longstringtext )
[2]: org. junit. assert. assertequals ( num, longstringtext )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, results. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( query . getquery ( ) , org . hamcrest . core . is . is ( expectedtostring ) )
[0]: org. junit. assert. assertequals ( 1, count )
[1]: org. junit. assert. assertequals ( 1, book. size ( ) )
[2]: org. junit. assert. assertequals ( 1, testlist )
[3]: org. junit. assert. assertequals ( null, topicmetadata. get ( 0 ) )
[4]: org. junit. assert. assertequals ( null, topicmetadata. get ( null ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( null, topicmetadata. get ( java. lang. string. class ) )
[1]: org. junit. assert. assertequals ( null, topicmetadata. get ( 1 ) )
[2]: org. junit. assert. assertequals ( null, topicmetadata. get ( java. util. collections. class ) )
[3]: org. junit. assert. asserttrue ( trr. includestimerange ( 2 ) )
[4]: org. junit. assert. assertfalse ( trr. includestimerange ( 2 ) )

************

************
tgt: org . junit . assert . assertequals ( true , out . firstelement ( ) . get ( ) )
[0]: org. junit. assert. asserttrue ( trr. includestimerange ( two ) )
[1]: org. junit. assert. asserttrue ( trr. includestimerange ( second ) )
[2]: org. junit. assert. asserttrue ( trr. includestimerange ( 2 ) ) )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( org. hamcrest. corematchers. equalto ( expected ) ) )
[4]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( expected ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( expected ) )
[1]: org. junit. assert. assertthat ( expected, org. hamcrest. corematchers. is ( actual ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertnull ( cache. get ( new org. apache. hc. core5. http. httphost ( "localhost, 80 ) ) )
[4]: org. junit. assert. assertnull ( cache. get ( new org. apache. hc. core5. http. httphost ( "localhost ), 80 ) )

************

************
tgt: org . junit . assert . assertfalse ( ip , result )
[0]: org. junit. assert. assertnull ( cache. get ( new org. apache. hc. core5. http. httphost ( publiclocalhost, 80 ) ) )
[1]: org. junit. assert. assertnull ( cache. get ( new org. apache. hc. core5. http. httphost ( ), 80 ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, metadat. size ( ) )
[4]: org. junit. assert. assertequals ( 1, metadata. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 1, count )
[1]: org. junit. assert. assertequals ( 1, metadataddl )
[2]: org. junit. assert. assertequals ( 1, metadatadd. size ( )
[3]: org. junit. assert. assertequals ( ddmformrules. tostring ( ), 1, ddmformrules. size ( ) )
[4]: org. junit. assert. assertequals ( ddmformrules. tostring ( ), 2, ddmformrules. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( encs . size ( ) , ( originallength - ( encs2 . size ( ) ) ) )
[0]: org. junit. assert. assertthat ( file. isdirectory ( ), is ( path ) )
[1]: org. junit. assert. assertthat ( file. isdirectory ( ), is ( path. getabsolutepath ( ) ) )
[2]: org. junit. assert. assertthat ( file. isdirectory ( ), is ( path. tostring ( ) ) )
[3]: org. junit. assert. assertthat ( profile. isdirectory ( ), is ( path ) )
[4]: org. junit. assert. assertthat ( session. isdirectory ( ), is ( path ) )

************

************
tgt: org . junit . assert . assertequals ( value , convert ( value ) )
[0]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, instance )
[1]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, edu. washington. cs. knowitall. extractor. reverbextractortest )
[2]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, result )
[3]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, fixture )
[4]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, edu. washington. cs. knowitall. extractor )

************

************
tgt: org . junit . assert . assertequals ( metric2 , registry . addifabsent ( id , metric ) )
[0]: org. junit. assert. assertnull ( converter. getassimpletype ( ) )
[1]: org. junit. assert. assertnotnull ( converter. getassimpletype ( ) )
[2]: org. junit. assert. assertnull ( model. getassimpletype ( ) )
[3]: org. junit. assert. assertnull ( convert. getassimpletype ( ) )
[4]: org. junit. assert. assertnull ( com. google. common. collect. lists. newarraylist ( ) )

************

************
tgt: org . junit . assert . assertequals ( expecting , result )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( new java. lang. object [ ] { new java. lang. string ( scriptresults. get ( 0 ) ) } ), org. springframework. data. redis. connection. arrays. aslist ( new java. lang. object [ ] { new java. lang. string ( scriptresults. get ( 1 ) ) } ) )
[1]: org. junit. assert. assertequals ( org. springframework. data. redis. connection. arrays. aslist ( new java. lang. object [ ] { new java. lang. string ( scriptresults. get ( 0 ) ) } ), org. springframework. data. redis. connection. arrays. aslist ( new java. lang. object [ ] { new java. lang. string ( scriptresults. get ( 1 ) ) } ) )
[2]: org. junit. assert. assertequals ( 1, scriptresults. size ( ) )
[3]: org. junit. assert. assertnotnull ( scriptresults )
[4]: org. junit. assert. assertequals ( new java. lang. object ( ), scriptresults )

************

************
tgt: org . junit . assert . assertnotnull ( com . gisgraphy . importer . importerhelper . listgisfiles ( "" ) )
[0]: org. junit. assert. assertequals ( sound. entity_cat_hiss, container. getsoundeffects ( ). read ( 0 ) )
[1]: org. junit. assert. assertequals ( sound. entity_cat_hiss, container. getsoundeffects ( ). read ( 0, 0 ) )
[2]: org. junit. assert. assertequals ( sound. entity_cat_hiss, container. getsoundeffects ( ). read ( 1 ) )
[3]: org. junit. assert. assertequals ( sound. entity_cat_hiss, container. getsoundeffects ( ). read ( 0, 1 ) )
[4]: org. junit. assert. assertequals ( sound, container. getsoundeffects ( ). read ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( expected, data )
[1]: org. junit. assert. assertequals ( 1, data. size ( ) )
[2]: org. junit. assert. assertequals ( 3, data. size ( ) )
[3]: org. junit. assert. assertequals ( expectedresult, data )
[4]: org. junit. assert. assertequals ( expected1, data )

************

************
tgt: org . junit . assert . assertequals ( command , kotlincompiler . tostring ( ) )
[0]: org. junit. assert. assertequals ( baseuri, m. getbaseuri ( ) )
[1]: org. junit. assert. assertnotnull ( m. getbaseuri ( ) )
[2]: org. junit. assert. assertequals ( baseuri, m. getbaseuri ( ) )
[3]: org. junit. assert. assertequals ( baseuri )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( returnvalue , counternode . getvalue ( ) )
[0]: org. junit. assert. assertequals ( nonclassloadingresult, nonclassloadingresult )
[1]: org. junit. assert. assertequals ( value, readedvalue )
[2]: org. junit. assert. assertequals ( value, readedvalue, 0.0 )
[3]: org. junit. assert. assertequals ( new java. lang. double ( 1.0 ), readedvalue )
[4]: org. junit. assert. assertequals ( value, readedvalue, 1.0 )

************

************
tgt: org . junit . assert . asserttrue ( cache . contains ( nl . jqno . equalsverifier . internal . prefabvalues . cachetest . string_tag ) )
[0]: org. junit. assert. assertequals ( value, readedvalue, 0 )
[1]: org. junit. assert. assertequals ( tom, house. getmouse ( ) )
[2]: org. junit. assert. assertthat ( method. getmouse ( ), org. hamcrest. matchers. is ( tom ) )
[3]: org. junit. assert. assertequals ( tom, method. getmouse ( ) )
[4]: org. junit. assert. assertequals ( tom, ho. getmouse ( ) )

************

************
tgt: org . junit . assert . assertfalse ( pr . getpath ( ) . tostring ( ) . contains ( "jcr:content/renditions" ) )
[0]: org. junit. assert. assertthat ( method. getmouse ( ), org. hamcrest. matchers. contains ( tom ) )
[1]: org. junit. assert. assertequals ( 0, othergrid. indexof ( item ) )
[2]: org. junit. assert. assertequals ( 1, othergrid. indexof ( item ) )
[3]: org. junit. assert. assertequals ( 0, this. grid. indexof ( item ) )
[4]: org. junit. assert. assertequals ( 1, this. grid. indexof ( item ) )

************

************
tgt: org . junit . assert . assertnotnull ( is )
[0]: org. junit. assert. assertequals ( 0, item. indexof ( item ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), response. tostring ( ) )
[2]: org. junit. assert. assertnotnull ( response. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), response. tostring ( ) )
[4]: . tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( datumtijdeindeformeleperioderesultaat , org . hamcrest . core . is . is ( datumtijdklaarzettenbericht ) )
[0]: output ( ) )
[1]: org. junit. assert. assertequals ( expected, result )
[2]: org. junit. assert. assertequals ( result, expected )
[3]: org. junit. assert. assertequals ( expected, results )
[4]: , result )

************

************
tgt: org . junit . assert . assertfalse ( key1 . equals ( key2 ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( client. getsharedsecret ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), client. getsharedsecret ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, client. getsharedsecret ( ) )
[4]: org. junit. assert. assertequals ( null, client. getsharedsecret ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , result )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( changes. getchanges ( ) )
[2]: org. junit. assert. assertequals ( 1, changes. getchanges ( ) )
[3]: org. junit. assert. assertequals ( 1, changes. getchanges ( ). length )
[4]: org. junit. assert. assertequals ( 1, changes. getchanges ( ). size ( )

************

************
tgt: org . junit . assert . assertnull ( readtask . getresult ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, region. getlength ( ) )
[2]: org. junit. assert. assertequals ( 0, region. getlength ( ) )
[3]: org. junit. assert. assertequals ( 12, entities. size ( ) )
[4]: org. junit. assert. assertequals ( 15, entities. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( controller , controllercapture . getvalue ( ) )
[0]: org. junit. assert. assertequals ( 100, request. gettimetolivems ( ) )
[1]: org. junit. assert. assertequals ( 0, request. gettimetolivems ( ) )
[2]: org. junit. assert. assertequals ( 1000, request. gettimetolivems ( ) )
[3]: org. junit. assert. assertequals ( 1, request. gettimetolivems ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( features . length , n . getsize ( ) )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertequals ( 3, result )
[2]: org. junit. assert. assertequals ( 0, result )
[3]: org. junit. assert. assertequals ( 4, result )
[4]: org. junit. assert. assertequals ( 2, result )

************

************
tgt: org . junit . assert . assertequals ( org . everrest . core . impl . provider . json . junit_in_action , book )
[0]: org. junit. assert. assertequals ( 1, builds. size ( ) )
[1]: org. junit. assert. assertnotnull ( ubermessagemodel. getdata ( ) )
[2]: org. junit. assert. assertnull ( ubermessagemodel. getdata ( ) )
[3]: org. junit. assert. assertnotnull ( ubermessagemodel )
[4]: org. junit. assert. assertnull ( ubermessagemodel )

************

************
tgt: org . junit . assert . asserttrue ( ( ( result . length ( ) ) > 0 ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( exitcode, 1 )
[2]: org. junit. assert. assertequals ( expected, restime )
[3]: org. junit. assert. assertequals ( expected. materialized ( ), restime )
[4]: org. junit. assert. assertequals ( expected. getmessage ( ), restime )

************

************
tgt: org . junit . assert . assertnull ( found )
[0]: org. junit. assert. assertequals ( expected. tostring ( ), restime )
[1]: org. junit. assert. assertequals ( expected. index ( ), restime )
[2]: org. junit. assert. assertequals ( 1, logversion )
[3]: org. junit. assert. assertequals ( 0, logversion )
[4]: org. junit. assert. assertequals ( logversion, 1 )

************

************
tgt: org . junit . assert . asserttrue ( exceptionoccured )
[0]: org. junit. assert. assertequals ( 3, logversion )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( iter. next ( ) )
[3]: org. junit. assert. assertequals ( factory. next ( ), valueiter. next ( ) )
[4]: org. junit. assert. assertnotnull ( iterator. next ( ) )

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertequals ( factory. next ( ), valiter. next ( ) )
[1]: org. junit. assert. assertnull ( iter. next ( ) )
[2]: org. junit. assert. assertequals ( 0, bars. length )
[3]: org. junit. assert. assertnull ( bars [ 0 ] )
[4]: org. junit. assert. assertarrayequals ( bars, bars )

************

************
tgt: org . junit . assert . assertequals ( value , lists . iterator ( ) . next ( ) . get ( 0 ) )
[0]: org. junit. assert. assertnull ( bars )
[1]: ) )
[2]: org. junit. assert. assertequals ( ""foo"", console. gettextwrittentostderr ( ) )
[3]: org. junit. assert. assertequals ( """", console. gettextwrittentostderr ( ) )
[4]: org. junit. assert. assertequals ( ""1"", console. gettextwrittentostderr ( ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , d . asint4 ( ) )
[0]: org. junit. assert. assertequals ( ""test"", console. gettextwrittentostderr ( ) )
[1]: public void init ( ) { }
[2]: org. junit. assert. assertequals ( in, out )
[3]: org. junit. assert. assertequals ( out, in )
[4]: org. junit. assert. assertequals ( null, out )

************

************
tgt: org . junit . assert . assertnotnull ( updateduser )
[0]: org. junit. assert. assertequals ( err, in )
[1]: org. junit. assert. assertequals ( input, out )
[2]: org. junit. assert. assertequals ( match, matchecounts [ 1 ] )
[3]: org. junit. assert. assertnotnull ( etag )
[4]: org. junit. assert. assertequals ( null, etag )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( assertnotnull, etag )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 1, buffer. getshort ( 0 ) )
[4]: org. junit. assert. assertequals ( 1, buffer. getshort ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( expectedid , actualid )
[0]: org. junit. assert. assertequals ( 1, count )
[1]: org. junit. assert. assertnotnull ( seed. getvertex ( ) )
[2]: org. junit. assert. assertequals ( testgroups. entity, seed. getvertex ( ) )
[3]: org. junit. assert. assertequals ( ""foo"", seed. getvertex ( ) )
[4]: org. junit. assert. assertnotnull ( seed )

************

************
tgt: org . junit . assert . assertequals ( testdata , result )
[0]: org. junit. assert. assertequals ( entity. getvertex ( ), seed )
[1]: org. junit. assert. assertnotnull ( root )
[2]: org. junit. assert. assertequals ( root, root )
[3]: org. junit. assert. assertnull ( root )
[4]: org. junit. assert. assertnotnull ( root. node )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( root. data )
[1]: org. junit. assert. assertequals ( 1, obj. getvulnerablesoftware ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, obj. getvulnerableoftware ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( obj. getvulnerablesoftware ( ) )
[4]: org. junit. assert. assertthat ( count, is ( 1l ) )

************

************
tgt: org . junit . assert . assertequals ( expectedspec , opts . getindexingspecification ( ) )
[0]: org. junit. assert. assertthat ( count, is ( equalto ( 1 ) ) )
[1]: org. junit. assert. assertthat ( count, is ( 0l ) )
[2]: org. junit. assert. assertthat ( count )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( bloggot. gettitle ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , com . graphaware . common . util . iterableutils . countnodes ( getdatabase ( ) ) )
[0]: org. junit. assert. assertequals ( blog, bloggot. gettitle ( ) )
[1]: org. junit. assert. assertnull ( bloggot. gettitle ( ) )
[2]: org. junit. assert. assertequals ( blog. gettitle ( ), bloggot )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( createsearchobject ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , message . getoperationcount ( ) )
[0]: org. junit. assert. assertnotnull ( createsearchobject ( ). collection ( ) )
[1]: org. junit. assert. assertnotnull ( createsearchobject ( ). getid ( ) )
[2]: org. junit. assert. assertnotnull ( createsearchobject ( ). type ( ) )
[3]: org. junit. assert. assertnotnull ( createsearchobject ( ). item ( ) )
[4]: org. junit. assert. assertequals ( firstmid, mid. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( layoutpagetemplateentries . isempty ( ) )
[0]: org. junit. assert. assertequals ( ( firstmid + exchangelifetime ), mid. get ( ) )
[1]: org. junit. assert. assertequals ( ( firstmid * exchangelifetime ), mid. get ( ) )
[2]: org. junit. assert. assertequals ( firmid, mid. get ( ) )
[3]: get ( ) )
[4]: org. junit. assert. assertequals ( 1, obj. getid ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( randombytes , address . tobytearray ( ) )
[0]: org. junit. assert. assertnotnull ( obj. s )
[1]: org. junit. assert. assertnotnull ( obj. tostring ( ) )
[2]: org. junit. assert. assertnotnull ( obj. getmessage ( ) )
[3]: org. junit. assert. assertequals ( 1, obj. s. length )
[4]: org. junit. assert. assertnotnull ( tilesdefinition )

************

************
tgt: org . junit . assert . asserttrue ( ( result == 10 ) )
[0]: org. junit. assert. asserttrue ( ( ( tilesdefinition. getid ( ) ) > 0 ) )
[1]: org. junit. assert. asserttrue ( ( annotationprocessor. findannotation ( tilesdefinition, null ) ) )
[2]: org. junit. assert. asserttrue ( ( ( tilesdefinition. getclass ( ) )!= null ) )
[3]: org. junit. assert. assertequals ( string_1, portletinstance. getinstanceid ( ) )
[4]: org. junit. assert. assertequals ( 0, portletinstance. getinstanceid ( ) )

************

************
tgt: org . junit . assert . assertfalse ( check )
[0]: org. junit. assert. assertequals ( string_3, portletinstance. getinstanceid ( ) )
[1]: org. junit. assert. assertequals ( string_1, portletinstance. getinstanceid ( ). tostring ( ) )
[2]: org. junit. assert. assertequals ( string_1, portletinstance. getinstanceid ( ). trim ( ) )
[3]: org. junit. assert. assertequals ( 1, name. get ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, name. get ( ). length )

************

************
tgt: org . junit . assert . assertequals ( performancepublisher . mrt , valueselector . getgraphtype ( ) )
[0]: org. junit. assert. assertequals ( 1, name. get ( ). gettime ( ) )
[1]: org. junit. assert. assertequals ( java. util. optional. empty ( ), name )
[2]: org. junit. assert. assertequals ( null, name. get ( ) )
[3]: org. junit. assert. assertnotnull ( org. nuxeo. ecm. core. io. marshallers. csv. csvutils. csv ( renderingctx, renderingcontext ) )
[4]: org. junit. assert. assertnotnull ( org. nuxeo. ecm. core. io. marshallers. csv. csvutils. csvassert ( renderingctx, context ) )

************

************
tgt: org . junit . assert . asserttrue ( iskeyentity )
[0]: org. junit. assert. assertnotnull ( org. nuxeo. ecm. core. io. marshallers. csv. csvutils. csv ( renderingctx, context ) )
[1]: org. junit. assert. assertnotnull ( org. nuxeo. ecm. core. io. marshallers. csv. csvutils. csvplaceholder ( renderingctx, context ) )
[2]: org. junit. assert. assertnotnull ( java. util. arrays. aslist ( renderingctx, renderingcontext ) )
[3]: org. junit. assert. assertequals ( frame, frame. getdialogowner ( ) )
[4]: org. junit. assert. assertequals ( frame, frame. getdialogowner ( ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . google . auth . oauth2 . serviceaccountjwtaccesscredentialstest . sa_client_email , credentials . getaccount ( ) )
[0]: org. junit. assert. assertequals ( frame, frame. getdialogowner ( ). getclass ( ) )
[1]: org. junit. assert. assertequals ( frame, frame. getdialogowner ( ). frame ( ) )
[2]: org. junit. assert. assertequals ( frame, frame. getdialogowner ( ). tostring ( ) )
[3]: org. junit. assert. assertfalse ( isequals )
[4]: org. junit. assert. assertequals ( false, isequals )

************

************
tgt: org . junit . assert . assertnotnull ( nacionalidad . getid ( ) )
[0]: org. junit. assert. assertequals ( 0, isequals )
[1]: org. junit. assert. assertnull ( isequals )
[2]: , isequals )
[3]: org. junit. assert. assertequals ( dedatadefinitions. tostring ( ), 0, dedatadefinitions. size ( ) )
[4]: org. junit. assert. assertequals ( 0, properties. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. assertequals ( 0, provider. size ( ) )
[2]: org. junit. assert. assertequals ( 0, events. size ( ) )
[3]: org. junit. assert. assertequals ( 0, viewinstanceentity. size ( )
[4]: org. junit. assert. assertnotnull ( result. gettext ( ) )

************

************
tgt: org . junit . assert . assertequals ( checkpoint1 , checkpoint2 )
[0]: org. junit. assert. assertnotnull ( result. gettext ( ). tostring ( ) )
[1]: org. junit. assert. assertequals ( """", result. gettext ( ) )
[2]: org. junit. assert. assertequals ( 1, result. gettext ( ). length )
[3]: ) )
[4]: org. junit. assert. asserttrue ( target. equals ( obj ) )

************

************
tgt: org . junit . assert . assertequals ( principal , authentication . getsessionhandler ( ) . get ( "token" ) )
[0]: org. junit. assert. assertfalse ( target. equals ( obj ) )
[1]: org. junit. assert. asserttrue ( obj. equals ( target ) )
[2]: org. junit. assert. asserttrue ( this. target. equals ( obj ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( true, result )

************

************
tgt: org . junit . assert . assertsame ( mocknewconnection , strategy . reconnect ( mockoldconnection ) )
[0]: org. junit. assert. asserttrue ( result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( false, result )
[3]: org. junit. assert. assertequals ( true, results )
[4]: org. junit. assert. assertequals ( true, isvalid )

************

************
tgt: org . junit . assert . assertequals ( exp , json )
[0]: org. junit. assert. asserttrue ( isvalid )
[1]: org. junit. assert. assertequals ( false, isvalid )
[2]: org. junit. assert. assertequals ( 1, isvalid )
[3]: org. junit. assert. assertequals ( true, isvalid )
[4]: org. junit. assert. assertequals ( 1, properties. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "param_value" , handler . paramvalue )
[0]: org. junit. assert. assertequals ( 5, properties. size ( ) )
[1]: org. junit. assert. asserttrue ( t. isalive ( ) )
[2]: org. junit. assert. assertequals ( 42, description. getminimumlength ( ) )
[3]: org. junit. assert. assertequals ( 42, descriptions. getminimumlength ( ) )
[4]: org. junit. assert. assertnull ( description. getminimumlength ( ) )

************

************
tgt: org . junit . assert . assertfalse ( datawave . query . jexl . visitors . hastoplevelnegationvisitor . hastoplevelnegation ( script ) )
[0]: org. junit. assert. assertequals ( 1, description. getminimumlength ( ) )
[1]: org. junit. assert. assertequals ( 42, description. getminimumlength ( ). size ( ) )
[2]: org. junit. assert. assertsame ( source, read )
[3]: org. junit. assert. assertnull ( beanitem. getitemproperty ( null ) )
[4]: org. junit. assert. assertnull ( beanitem. getitemproperty ( ""name"" ) )

************

************
tgt: org . junit . assert . assertequals ( user , user )
[0]: org. junit. assert. assertnull ( beanitem. getitemproperty ( beanitem ) )
[1]: org. junit. assert. assertnotnull ( beanitem. getitemproperty ( null ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( false, iterable. hasnext ( ) )
[4]: org. junit. assert. assertequals ( true, iterable. hasnext ( ) )

************

************
tgt: org . junit . assert . assertequals ( infoeventoretorno , retorno . getinfoeventoretorno ( ) )
[0]: org. junit. assert. assertfalse ( iterable. hasnext ( ) )
[1]: org. junit. assert. assertequals ( 0, iterable. hasnext ( ) )
[2]: org. junit. assert. asserttrue ( iterable. hasnext ( ) )
[3]: org. junit. assert. assertequals ( true, ishurricaneseason )
[4]: org. junit. assert. assertequals ( null, ishurricaneseason )

************

************
tgt: org . junit . assert . assertequals ( "testclass" , viewentityentity . getclassname ( ) )
[0]: org. junit. assert. assertequals ( false, ishurricaneseason )
[1]: org. junit. assert. assertequals ( 1, ishurricaneseason )
[2]: org. junit. assert. assertequals ( java. lang. boolean. valueof ( true ), ishurricaneseason )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result )
[0]: org. junit. assert. assertequals ( 4, result. size ( ) )
[1]: org. junit. assert. assertequals ( 2, result. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( testqueue )
[4]: org. junit. assert. assertequals ( pampass, authinfo )

************

************
tgt: org . junit . assert . assertequals ( ( ( mscores [ i ] ) > ( mscores [ ( i - 1 ) ] ) ) , ( ( dscores [ i ] ) > ( dscores [ ( i - 1 ) ] ) ) )
[0]: org. junit. assert. assertnotnull ( authinfo )
[1]: org. junit. assert. assertequals ( pampass, authinfo )
[2]: org. junit. assert. assertnotnull ( authinfo. getcredentials ( ) )
[3]: org. junit. assert. assertequals ( pampass }
[4]: org. junit. assert. assertthat ( cf1. format ( expected ), org. hamcrest. corematchers. is ( expected ) )

************

************
tgt: org . junit . assert . assertequals ( expected , com . gemstone . gemfire . internal . lang . systemutils . iswindows ( ) )
[0]: org. junit. assert. assertthat ( cf1, org. hamcrest. corematchers. is ( expected ) )
[1]: org. junit. assert. assertthat ( cf1. format ( 0 ), org. hamcrest. corematchers. is ( expected ) )
[2]: org. junit. assert. assertthat ( cf1. format ( ), org. hamcrest. corematchers. is ( expected ) )
[3]: org. junit. assert. assertthat ( cf1 )
[4]: org. junit. assert. assertequals ( 1, result. getviolations ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( parsed , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( original ) ) )
[0]: org. junit. assert. assertequals ( 0, result. getviolations ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 2, result. getviolations ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 3, result. getviolations ( ). size ( ) )
[3]: org. junit. assert. asserttrue ( result. getviolations ( ). isempty ( ) )
[4]: org. junit. assert. assertequals ( set, result )

************

************
tgt: org . junit . assert . assertequals ( 1 , shell . init ( new java . lang . string [ 0 ] ) )
[0]: org. junit. assert. assertnull ( sut. getauthenticationtype ( ) )
[1]: org. junit. assert. assertnotnull ( sut. getauthenticationtype ( ) )
[2]: org. junit. assert. asserttrue ( sut. getauthenticationtype ( ). isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, sut. getauthenticationtype ( ) )
[4]: org. junit. assert. assertequals ( 1, sut. getauthenticationtype ( ). length )

************

************
tgt: org . junit . assert . assertequals ( expecteddir , actualdir )
[0]: org. junit. assert. assertequals ( true, result )
[1]: org. junit. assert. asserttrue ( result )
[2]: org. junit. assert. assertequals ( false, result )
[3]: org. junit. assert. assertfalse ( result )
[4]: org. junit. assert. assertequals ( 123, j. name ( ) )

************

************
tgt: org . junit . assert . assertequals ( filterresult , actual )
[0]: org. junit. assert. assertequals ( 123, j. name ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 123, j. name ( ). get ( ) )
[2]: org. junit. assert. assertequals ( 123, j. name ( ). length )
[3]: org. junit. assert. assertequals ( string_1, j. name ( ) )
[4]: org. junit. assert. assertequals ( cp1expected, cp1before )

************

************
tgt: org . junit . assert . assertnotnull ( hc )
[0]: org. junit. assert. assertequals ( cp1expected, cp1after )
[1]: org. junit. assert. assertequals ( cp1expected, cp1 before )
[2]: org. junit. assert. assertnotnull ( cp1expected )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( params )

************

************
tgt: org . junit . assert . assertequals ( "7" , writer . tostring ( ) )
[0]: org. junit. assert. assertequals ( null, params )
[1]: org. junit. assert. assertnull ( params )
[2]: org. junit. assert. assertequals ( 0, params. size ( ) )
[3]: org. junit. assert. assertequals ( 0, params. length )
[4]: org. junit. assert. assertthat ( org. slim3. controller. upload. streams. asstring ( tester. request ), org. hamcrest. corematchers. is ( java. util. arrays. tostring ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( allzeros )
[0]: org. junit. assert. assertthat ( org. slim3. controller. upload. streams. asstring ( tester. request ), org. hamcrest. corematchers. is ( java. util. arrays. aslist ( ) ) )
[1]: org. junit. assert. assertthat ( org. slim3. controller. upload. streams. asstring ( tester. request ), org. hamcrest. corematchers. is ( java. util. collections. singletonlist ( ""a"" ) ) )
[2]: org. junit. assert. assertthat ( org. slim3. controller. upload. streams. asstring ( tester. request ), org. hamcrest. corematchers. is ( java. util. optional. of ( string_1 ) ) )
[3]: ) )
[4]: org. junit. assert. assertsame ( executor, this. configuration. getthreadexecutor ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( list. getclass ( ). getname ( ), list. getclass ( ). getname ( ) )
[1]: org. junit. assert. assertequals ( list. getclass ( ). getname ( ), list )
[2]: org. junit. assert. assertequals ( java. lang. string. class. getname ( ), list )
[3]: org. junit. assert. assertequals ( list. getname ( ), list )
[4]: org. junit. assert. assertequals ( list. getname ( ), list. tostring ( ) )

************

************
tgt: org . junit . assert . assertnull ( value )
[0]: org. junit. assert. assertequals ( value, org. terracotta. offheapstore. util. debuggingutils. tobase2suffixedstring ( suffix ) )
[1]: org. junit. assert. assertequals ( value, org. terracotta. offheapstore. util. debuggingutils. tobase2suffixedstring ( size ) )
[2]: org. junit. assert. assertequals ( value, org. terracotta. offheapstore. util. debugutils. tobase2suffixedstring ( suffix ) )
[3]: org. junit. assert. assertequals ( value, org. terracotta. offheapstore. util. debuggingutils. tobase2suffixedstring ( prefix ) )
[4]: org. junit. assert. assertequals ( value, org. terracotta. offheapstore. util. debuggingutils. tobase2suffixedstring ( length ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . integer . valueof ( 2 ) , s . execute ( ctxt ) )
[0]: org. junit. assert. assertnotnull ( melding. getmeldingtekst ( ) )
[1]: org. junit. assert. assertnull ( melding. getmeldingtekst ( ) )
[2]: org. junit. assert. assertequals ( null, melding. getmeldingtekst ( ) )
[3]: org. junit. assert. assertequals ( 1, melding. getmeldingtekst ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( atta )
[1]: org. junit. assert. assertnull ( atta )
[2]: org. junit. assert. assertequals ( atta, atta )
[3]: org. junit. assert. assertequals ( atta, null )
[4]: org. junit. assert. assertequals ( atta, attas )

************

************
tgt: org . junit . assert . assertequals ( 4 , countresolvedgriditems ( ) )
[0]: org. junit. assert. assertequals ( rightsource, comparison )
[1]: org. junit. assert. assertequals ( resultdocument, resultdocument )
[2]: org. junit. assert. assertequals ( resultdocument, testprocessor )
[3]: org. junit. assert. assertnotnull ( resultdocument )
[4]: org. junit. assert. assertequals ( testdocument, resultdocument )

************

************
tgt: org . junit . assert . asserttrue ( directory . lock ( taskid ) )
[0]: org. junit. assert. assertequals ( null, resultdocument )
[1]: org. junit. assert. assertequals ( 1, entity. getblueprintname ( ) )
[2]: org. junit. assert. assertsame ( "foo, entity. getblueprintname ( ) )
[3]: org. junit. assert. assertnull ( entity. getblueprintname ( ) )
[4]: org. junit. assert. assertequals ( 1, entity. getblueprintname ( ). length )

************

************
tgt: org . junit . assert . assertequals ( false , _searchcontainer . isrecalculatecur ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( fellowship )
[2]: org. junit. assert. assertequals ( 1, fellowship. size ( ) )
[3]: org. junit. assert. asserttrue ( fellowship. isempty ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , results . size ( ) )
[0]: )
[1]: org. junit. assert. assertequals ( 1, node. size ( ) )
[2]: org. junit. assert. assertequals ( 0, node. size ( ) )
[3]: org. junit. assert. assertequals ( 1, nodes. size ( ) )
[4]: org. junit. assert. assertnull ( list )

************

************
tgt: org . junit . assert . assertequals ( "foo" , f . evaluate ( ) )
[0]: org. junit. assert. assertnotnull ( list )
[1]: org. junit. assert. assertequals ( value, key. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( value ), key. tostring ( ) )
[3]: org. junit. assert. assertequals ( new java. lang. string ( value ), key. tostring ( ) )
[4]: org. junit. assert. assertequals ( values, key. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( wjah . issslrequired ( wr , uri_name ) )
[0]: org. junit. assert. assertequals ( name, key. tostring ( ) )
[1]: org. junit. assert. assertequals ( newfile, propertyloader. getuniquename ( ) )
[2]: org. junit. assert. assertnotnull ( propertyloader. getuniquename ( ) )
[3]: org. junit. assert. assertequals ( newfile, propertiesloader. getuniquename ( ) )
[4]: org. junit. assert. assertequals ( newfile )

************

************
tgt: org . junit . assert . assertarrayequals ( nu . najt . kecon . jsocksproxy . tunnelthreadtest . data , outputstream . tobytearray ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( job, cluster. submit ( ) )
[2]: org. junit. assert. assertequals ( 1, job. submit ( ). size ( ) )
[3]: org. junit. assert. assertequals ( job, testsubmit. submit ( ) )
[4]: org. junit. assert. assertequals ( job, testsubmit ( ). submit ( ) )

************

************
tgt: org . junit . assert . assertequals ( stores . size ( ) , 1 )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), job )
[1]: org. junit. assert. assertnotnull ( ucm )
[2]: org. junit. assert. assertnotnull ( uicm )
[3]: org. junit. assert. assertnotnull ( ucm. id )
[4]: org. junit. assert. assertnotnull ( n )

************

************
tgt: org . junit . assert . asserttrue ( m . containskey ( "cat" ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, revisionparts. length )
[2]: org. junit. assert. assertequals ( 0, revisionparts. length )
[3]: org. junit. assert. assertnotnull ( revisionparts )
[4]: org. junit. assert. assertequals ( 3, revisionparts. length )

************

************
tgt: org . junit . assert . assertsame ( supply1 , supply2 )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, org. onosproject. net. ochsignal. tofixedgrid ( com. google. common. collect. lists. newarraylist ( input ), com. google. common. collect. lists. newarraylist ( input ) ) )
[2]: org. junit. assert. assertequals ( expected, org. onosproject. net. ochsignal. tofixedgrid ( com. google. common. collect. lists. newarraylist ( input ), input ) )
[3]: org. junit. assert. assertequals ( expected, org. onosproject. net. ochsignal. tofixedgrid ( com. google. common. collect. lists. newarraylist ( input ), java. util. arrays. aslist ( input ) ) )
[4]: org. junit. assert. assertequals ( expected, org. onosproject. net. ochsignal. tofixedgrid ( com. google. common. collect. lists. newarraylist ( input ), null ) )

************

************
tgt: org . junit . assert . assertequals ( expected , seen )
[0]: org. junit. assert. assertequals ( expected, org. onosproject. net. ochsignal. tofixedgrid ( com. google. common. collect. lists. newarraylist ( input ), java. util. arrays. aslist ( ) ) )
[1]: org. junit. assert. assertequals ( 1, errors )
[2]: org. junit. assert. assertequals ( 0, errors )
[3]: org. junit. assert. assertequals ( 3, errors )
[4]: org. junit. assert. assertequals ( style, style. get ( org. vaadin. flow. internal. statenode ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , content . split ( "\n" ) . length )
[0]: org. junit. assert. assertequals ( style, style. get ( "border-color ) )
[1]: org. junit. assert. assertequals ( style, style. get ( 0 ) )
[2]: org. junit. assert. assertequals ( style, styles. get ( org. vaadin. flow. internal. statenode ) )
[3]: org. junit. assert. assertequals ( style, style. get ( "border-color. getid ( ) ) )
[4]: org. junit. assert. assertequals ( defaultvalue, dto. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , io . datakernel . http . testutils . tobytearray ( socket . getinputstream ( ) ) . length )
[0]: org. junit. assert. assertnotnull ( dto. getvalue ( ) )
[1]: org. junit. assert. assertequals ( propertyvalue, dto. getvalue ( ) )
[2]: org. junit. assert. assertequals ( dto. getvalue ( ), propertyvalue )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, providers. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( orgs )
[0]: org. junit. assert. assertequals ( 1, target. size ( ) )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 1, results. size ( ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( 1, list. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( spec1 , andspec )
[0]: org. junit. assert. assertequals ( 1, submissionfuture. get ( ). size ( ) )
[1]: org. junit. assert. assertequals ( org. apache. flink. runtime. dispatcher. dispatcherresourcecleancleancleancleancleanytest. get ( ), submissionfuture. get ( ) )
[2]: org. junit. assert. assertequals ( guaranteed, submissionfuture. get ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), submissionfuture. get ( ) )
[4]: org. junit. assert. assertequals ( 1, submissionfuture. get ( ). get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( extractor . extract ( result ) . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( n. getsource ( ) )
[1]: org. junit. assert. assertequals ( true, value )
[2]: org. junit. assert. assertequals ( false, value )
[3]: org. junit. assert. assertequals ( 1, value )
[4]: org. junit. assert. assertequals ( null, value )

************

************
tgt: org . junit . assert . asserttrue ( tpv . equals ( tpv ) )
[0]: org. junit. assert. assertnull ( value )
[1]: org. junit. assert. assertthat ( counter. countcrossingsbetweenlayers ( order ( ) [ 0 ], order ( ) [ 1 ] ), org. hamcrest. corematchers. is ( 1 ) )
[2]: org. junit. assert. assertthat ( counter. countcrossingsbetweenlayers ( order ( ) [ 1 ], order ( ) [ 0 ] ), org. hamcrest. corematchers. is ( 1 ) )
[3]: org. junit. assert. assertthat ( counter. countcrossingsbetweenlayers ( order ( ), order ( ) [ 0 ] ), org. hamcrest. corematchers. is ( 1 ) )
[4]: org. junit. assert. assertthat ( counter. countcrossingsbetweenlayers ( order ( ), order ( ) ), org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( ( result instanceof org . milyn . payload . javaresult ) )
[0]: org. junit. assert. assertthat ( counter. countcrossingsbetweenlayers ( order ( ) [ 1 ], order ( ) [ 2 ] ), org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertnotnull ( manager. getnewrecords ( ) )
[2]: org. junit. assert. assertequals ( 1, manager. getnewrecords ( ). size ( )
[3]: org. junit. assert. assertequals ( 1, manager. getnewrecords ( ). length )
[4]: org. junit. assert. assertequals ( 1, manager. getnewrecords ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( op )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, patientidentifiers. size ( ) )
[2]: org. junit. assert. assertequals ( 0, patientidentifiers. size ( ) )
[3]: org. junit. assert. assertequals ( 2, patientidentifiers. size ( ) )
[4]: org. junit. assert. assertequals ( 3, patientidentifiers. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( result . type , pi ( nat ( ) , nat ( ) ) )
[0]: org. junit. assert. assertequals ( list1, list2 )
[1]: org. junit. assert. assertequals ( list, list1 )
[2]: org. junit. assert. assertequals ( list, list2 )
[3]: org. junit. assert. assertequals ( lists, list1 )
[4]: org. junit. assert. assertequals ( list1, list2 )

************

************
tgt: org . junit . assert . assertequals ( org . geotools . filter . filterstest . ff . and ( org . geotools . filter . filterstest . a , org . geotools . filter . filterstest . b ) , result )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertequals ( 1, all. size ( ) )
[2]: org. junit. assert. assertequals ( 1, instance. size ( ) )
[3]: org. junit. assert. assertequals ( 1, properties. size ( ) )
[4]: org. junit. assert. assertequals ( 1, objects. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , account . getnameandemail ( ) )
[0]: org. junit. assert. assertfalse ( ismanaged ( null ) )
[1]: org. junit. assert. assertfalse ( testismanaged ( null ) )
[2]: org. junit. assert. asserttrue ( ismanaged ( null ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( expected , counts )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( result, null )
[4]: org. junit. assert. assertequals ( result, items )

************

************
tgt: org . junit . assert . assertequals ( ec1 , ec2 )
[0]: org. junit. assert. assertequals ( errortext, errortext )
[1]: org. junit. assert. assertnull ( errortext )
[2]: org. junit. assert. assertnotnull ( errortext )
[3]: org. junit. assert. assertequals ( errortext, errorortext )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( mmap . contains ( name ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( assertnotnull, result )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertequals ( guaranteed, result )

************

************
tgt: org . junit . assert . assertnull ( facet )
[0]: org. junit. assert. assertnotnull ( registry )
[1]: org. junit. assert. assertequals ( 1, mockrequest. address ( ) )
[2]: org. junit. assert. assertnotnull ( mockrequest. address ( ) )
[3]: org. junit. assert. assertnotnull ( mockrequest )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( host )
[0]: )
[1]: org. junit. assert. assertequals ( string, result )
[2]: org. junit. assert. assertequals ( result, string )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertequals ( java. lang. string. class, result )

************

************
tgt: org . junit . assert . assertequals ( 1l , result )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, things. getnumofentities ( ) )
[2]: org. junit. assert. assertequals ( 4, thebuilder. length ( ), 0 )
[3]: org. junit. assert. assertequals ( 0, thebuilder. length ( ), 0 )
[4]: org. junit. assert. assertequals ( 6, thebuilder. length ( ), 0 )

************

************
tgt: org . junit . assert . assertequals ( org . apache . commons . lang3 . time . fastdateparsertest . reykjavik , parser . gettimezone ( ) )
[0]: org. junit. assert. assertequals ( 1, thebuilder. length ( ), 0 )
[1]: org. junit. assert. assertequals ( "<. length ( ), thebuilder. length ( )
[2]: org. junit. assert. assertequals ( 1, result. geterrors ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, result. geterrors ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 2, result. geterrors ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( outbound ) )
[0]: org. junit. assert. asserttrue ( result. geterrors ( ). isempty ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( com. picocontainer. testmodel. dependsontouchable. class, dot. gettouchable ( ). getclass ( ) )
[3]: org. junit. assert. assertequals ( com. picocontainer. testmodel. alternativetouchable. class, dot. gettouchable ( ). getclass ( ) )
[4]: org. junit. assert. assertequals ( com. picocontainer. testmodel. dependontouchable. class, dot. gettouchable ( ). getclass ( ) )

************

************
tgt: org . junit . assert . assertequals ( bayesim , bayesim2 )
[0]: org. junit. assert. assertequals ( com. picocontainer. testmodel. dependsontouchable. class, dot. gettouchable ( ) )
[1]: org. junit. assert. assertequals ( dot. gettouchable ( ), dot. gettouchable ( ) )
[2]: org. junit. assert. asserttrue ( org. apache. webbeans. util. annotationutil. iscdiannotationequal ( q1, q2 ) )
[3]: org. junit. assert. assertnotnull ( producedoutput )
[4]: org. junit. assert. assertequals ( code, producedoutput. tostring ( ) )

************

************
tgt: org . junit . assert . assertfalse ( command . isenabled ( ) )
[0]: org. junit. assert. assertequals ( 1, producedoutput. size ( ) )
[1]: org. junit. assert. assertequals ( code, producedoutput. trim ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( savedevent )
[4]: org. junit. assert. assertequals ( rawevent, savedevent )

************

************
tgt: org . junit . assert . assertequals ( decrypted , message )
[0]: org. junit. assert. asserttrue ( ( savedevent instanceof rawevent ) )
[1]: org. junit. assert. assertnull ( savedevent )
[2]: ) )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( com. github. bmsantos. core. cola. story. processor. methoddetailstest. step ) )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. is ( com. github. bmsantos. core. cola. story. processor. methoddetailstest. step ) )

************

************
tgt: org . junit . assert . assertequals ( "hello<sp>world<sp>你好" , out )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( ""foo"" ) )
[1]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( ""test"" ) )
[2]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. empty ( ) )
[3]: org. junit. assert. assertequals ( expected, testbase )
[4]: org. junit. assert. assertequals ( expected, testbase ( t ) )

************

************
tgt: org . junit . assert . asserttrue ( start . issuccessful ( ) )
[0]: org. junit. assert. assertequals ( expected, testbase. size ( ) )
[1]: org. junit. assert. assertequals ( expected, actualbase )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( expectinggrammarstr, s. tostring ( ) )
[4]: org. junit. assert. assertequals ( 0, list. getfocusindex ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( com . google . common . collect . immutablemap . of ( c1 , com . google . common . collect . immutablemap . of ( v1 , com . google . common . collect . immutablemap . of ( i1 , com . google . common . collect . immutableset . of ( r1 ) ) , v2 , com . google . common . collect . immutablemap . of ( i1 , com . google . common . collect . immutableset . of ( r1 ) ) ) ) ) )
[0]: org. junit. assert. assertequals ( 1, list. getfocusindex ( ) )
[1]: org. junit. assert. assertequals ( 0, list. getfocusindex ( ). length )
[2]: org. junit. assert. assertequals ( 0l, list. getfocusindex ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, ba. asbytearraycopy ( ). length )

************

************
tgt: org . junit . assert . assertequals ( java . lang . string . class , information . getidtype ( ) )
[0]: org. junit. assert. assertequals ( ba. asbytearraycopy ( ). length, 1 )
[1]: org. junit. assert. assertarrayequals ( ba. asbytearraycopy ( ), null )
[2]: org. junit. assert. assertequals ( ba, ba. asbytearraycopy ( ) )
[3]: org. junit. assert. assertarrayequals ( ba. asbytearraycopy ( ), ba. bytes )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertfalse ( hasnext )
[0]: org. junit. assert. assertnotnull ( s2 )
[1]: org. junit. assert. assertequals ( 1, result )
[2]: org. junit. assert. assertnotnull ( s1 )
[3]: org. junit. assert. assertnotnull ( s )
[4]: org. junit. assert. assertequals ( rs. getstring ( i ), colname )

************

************
tgt: org . junit . assert . assertfalse ( property . tostringvalues ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( rs. getstring ( 1 ), colname )
[1]: org. junit. assert. assertequals ( rs. getstring ( colname ), colname )
[2]: org. junit. assert. assertnotnull ( jdbcrs. getstring ( colname ) )
[3]: org. junit. assert. assertequals ( rs. getstring ( i ), colname, 0 )
[4]: org. junit. assert. assertthat ( singlescenariosfromfeature, org. hamcrest. core. is. is ( 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( 1, singlescenariosfromfeature. size ( ) )
[1]: org. junit. assert. assertequals ( 0, singlescenariosfromfeature. size ( ) )
[2]: org. junit. assert. assertthat ( singlescenariosfromfeature )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, childs. length )

************

************
tgt: org . junit . assert . assertequals ( theindex . count ( ) , 0 )
[0]: org. junit. assert. assertequals ( 0, childs. length )
[1]: org. junit. assert. assertequals ( 2, childs. length )
[2]: org. junit. assert. assertarrayequals ( new java. lang. string [ 0 ], childs )
[3]: org. junit. assert. assertarrayequals ( new java. lang. string [ 1 ], childs )
[4]: org. junit. assert. assertfalse ( resultset. hasnext ( ) )

************

************
tgt: org . junit . assert . assertequals ( 9 , request . getopnum ( ) )
[0]: org. junit. assert. assertfalse ( resultset. next ( ) )
[1]: org. junit. assert. assertequals ( true, org. isremoteldapactive ( ) )
[2]: org. junit. assert. assertequals ( 1l, actual. getcurrentwatermark ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( i ), getcurrentwatermark ( ) )
[4]: org. junit. assert. assertequals ( 1l, data. getcurrentwatermark ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedtruncate , actualtruncate )
[0]: org. junit. assert. assertequals ( i, actual. getcurrentwatermark ( ) )
[1]: org. junit. assert. assertequals ( 1l, l. getcurrentwatermark ( ) )
[2]: org. junit. assert. assertarrayequals ( result. getvalue ( ), filterresult. getvalue ( ) )
[3]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { }, filterresult. getvalue ( ) )
[4]: org. junit. assert. assertarrayequals ( result. getvalue ( ), filterresult. getvalue ( ). toarray ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( ( 6 * 6 ) * 6 ) * 6 ) , numberofguesses )
[0]: org. junit. assert. assertarrayequals ( java. lang. string [ ] { result. getvalue ( ), url )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected, e. evaluate ( ), 0.0 )
[3]: org. junit. assert. assertequals ( expected, e. evaluate ( ) )
[4]: org. junit. assert. assertequals ( expected, e. evaluate ( ), 0.0 )

************

************
tgt: org . junit . assert . assertequals ( actor , parsedactor )
[0]: org. junit. assert. asserttrue ( ( expected == ( e. evaluate ( ) ) )
[1]: ( expected ) )
[2]: org. junit. assert. assertequals ( 1, cnt )
[3]: org. junit. assert. assertequals ( 0, cnt )
[4]: org. junit. assert. assertequals ( 1l, cnt )

************

************
tgt: org . junit . assert . assertnotnull ( notesslide )
[0]: org. junit. assert. assertequals ( readed, binding )
[1]: org. junit. assert. assertequals ( null, readed )
[2]: org. junit. assert. assertequals ( inputed, readed )
[3]: org. junit. assert. assertequals ( inputed, readed )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( lo3bron . equals ( lo3resultaat ) )
[0]: org. junit. assert. assertnotnull ( factory. build ( java. util. collections. emptylist ( ) ) )
[1]: org. junit. assert. assertnotnull ( factory. build ( new java. io. bytearrayinputstream ( null ) ) )
[2]: org. junit. assert. assertnotnull ( factory. build ( java. io. bytearrayinputstream. class ) )
[3]: org. junit. assert. assertnotnull ( factory. build ( new java. io. bytearrayinputstream ( expected. toarray ( ) ) ) )
[4]: org. junit. assert. assertnotnull ( factory. build ( null ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , delete . execute ( ) )
[0]: org. junit. assert. assertequals ( ""a"", value )
[1]: org. junit. assert. assertnull ( value )
[2]: org. junit. assert. assertequals ( null, value )
[3]: org. junit. assert. assertequals ( ""bar"", value )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , reports . size ( ) )
[0]: org. junit. assert. assertequals ( 1, retornoconsultacadastrodados. getsituacaocadastral ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, retornoconsultacadastrodados. getsituacaocadastral ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, retornoconsultacadastrodados. getsituacaocadastral ( ) )
[3]: org. junit. assert. assertequals ( 1, retornoconsultacadastrodados. getsituacaocadastral ( ). length )
[4]: org. junit. assert. assertequals ( 1, retornoconsultacadastrodados. getsituacaocadastral ( ). size ( ), 0 )

************

************
tgt: org . junit . assert . assertthat ( date , org . hamcrest . core . is . is ( parseisodate ( "2011-06-01" ) ) )
[0]: org. junit. assert. assertnotnull ( changedforeignable )
[1]: org. junit. assert. assertnotnull ( changedhitable )
[2]: org. junit. assert. assertnotnull ( changedowner )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertthat ( jexlselector . gettype ( ) , org . hamcrest . corematchers . is ( jexlselector . type ) )
[0]: org. junit. assert. assertequals ( 1l, com. huawei. streaming. config. streamingconfigtest. config. getlongvalue ( com. huawei. streaming. config. streamingconfigtest. conf_var ) )
[1]: org. junit. assert. assertequals ( com. huawei. streaming. config. streamingconfigtest. config. getlongvalue ( com. huawei. streaming. config. streamingconfigtest. conf_var ), 1l )
[2]: org. junit. assert. assertequals ( 1, com. huawei. streaming. config. streamingconfigtest. config. getlongvalue ( com. huawei. streaming. config. streamingconfigtest. conf_var ) )
[3]: org. junit. assert. assertequals ( 0l, com. huawei. streaming. config. streamingconfigtest. config. getlongvalue ( com. huawei. streaming. config. streamingconfigtest. conf_var ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( guangdong . existed ( ) )
[0]: org. junit. assert. assertnotnull ( c )
[1]: org. junit. assert. assertthat ( c. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[2]: org. junit. assert. assertthat ( c. count, org. hamcrest. corematchers. is ( 1 ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertfalse ( fixture . hassubscriptionid ( ) )
[0]: org. junit. assert. assertequals ( 1, curiemap ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, curiemap ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( curiemap ( ) )
[3]: org. junit. assert. assertnull ( curiemap ( ) )
[4]: org. junit. assert. assertequals ( 1, curiemap ( ). length )

************

************
tgt: org . junit . assert . assertequals ( null , actualfileinput )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( this. stateholders ), aslist )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), aslist )
[2]: org. junit. assert. assertequals ( 1, aslist. size ( ) )
[3]: org. junit. assert. assertequals ( 0, aslist. size ( ) )
[4]: org. junit. assert. assertequals ( list, aslist )

************

************
tgt: org . junit . assert . assertfalse ( history . isstepforwardallowed ( ) )
[0]: org. junit. assert. assertequals ( 1, builder. getissueselector ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, builder. getissueselector ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, builder. getissueselector ( ) )
[3]: org. junit. assert. assertnotnull ( builder. getissueselector ( ) )
[4]: org. junit. assert. assertequals ( null, builder. getissueselector ( ). isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0.0 , resultplaceholder . getresult ( ) )
[0]: org. junit. assert. assertequals ( org. onosproject. net. resource. resourceidtest. p1, resource. tostring ( ) )
[1]: org. junit. assert. assertequals ( org. onosproject. net. resource. resourceidtest. p1. tostring ( ), resource. tostring ( ) )
[2]: org. junit. assert. assertthat ( resource. tostring ( ). isempty ( ), org. hamcrest. corematchers. is ( true ) )
[3]: org. junit. assert. assertnotnull ( resource. tostring ( ) )
[4]: . tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( f . isfailed ( ) )
[0]: org. junit. assert. assertnotnull ( config )
[1]: org. junit. assert. assertnotnull ( configuration )
[2]: org. junit. assert. assertequals ( configuration, cconfig )
[3]: org. junit. assert. assertequals ( configuration, preupdate ( config ) )
[4]: org. junit. assert. assertequals ( configuration, c config )

************

************
tgt: org . junit . assert . assertequals ( du , 0 )
[0]: org. junit. assert. assertequals ( null, instancenamepattern )
[1]: org. junit. assert. assertequals ( 0, instancenamepattern )
[2]: org. junit. assert. assertnotnull ( instancenamepattern )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertnotnull ( likes )
[0]: org. junit. assert. asserttrue ( emitter. succeeded ( ) )
[1]: org. junit. assert. assertequals ( 1, emitter. succeeded ( ) )
[2]: org. junit. assert. assertnotnull ( emitter. succeeded ( ) )
[3]: org. junit. assert. assertequals ( true, emitter. succeeded ( ) )
[4]: org. junit. assert. asserttrue ( future. succeeded ( ) )

************

************
tgt: org . junit . assert . assertequals ( header , org . apache . hadoop . fs . contentsummary . getheader ( false ) )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertequals ( 0, interactiontypepredicate. size ( ) )
[2]: org. junit. assert. assertequals ( null, interactiontypepredicate. get ( ) )
[3]: org. junit. assert. assertequals ( null, interactiontypepredicate )
[4]: org. junit. assert. assertnotnull ( interactiontypepredicate )

************

************
tgt: org . junit . assert . assertfalse ( org . apache . tinkerpop . gremlin . structure . util . elementhelper . areequal ( mockpropertya , mockpropertyb ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( servicelistingbean. isservicelistcontainschargeableresellerservice ( ) )
[2]: org. junit. assert. asserttrue ( servicelistingbean. isservicelistcontainschargeableresellerservice ( ). isempty ( ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( result, startstatus )

************

************
tgt: org . junit . assert . assertequals ( assertion , arr )
[0]: org. junit. assert. assertequals ( 1, result. uploadfile ( ) )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( 0, result. uploadfile ( ) )
[3]: org. junit. assert. assertequals ( 1, countresolvedgriditems ( ) )
[4]: org. junit. assert. assertequals ( 0, countresolvedgriditems ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedupdatedbucket , actualupdatedbucket )
[0]: org. junit. assert. assertequals ( 3, countresolvedgriditems ( ) )
[1]: org. junit. assert. assertequals ( 1, column. countresolvedgriditems ( )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, rpt. size ( ) )
[4]: org. junit. assert. assertequals ( 0, fields. length )

************

************
tgt: org . junit . assert . asserttrue ( ( ( ( "abbbabbbliceaaa" 3 + ( testpatterns [ i ] ) ) + "abbbabbbliceaaa" 1 ) + ( posseq [ i ] [ j ] ) ) , mat . matches ( ) )
[0]: org. junit. assert. assertarrayequals ( new java. lang. object [ ] { }, fields )
[1]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { }, fields )
[2]: org. junit. assert. assertequals ( 1, fields. length )
[3]: org. junit. assert. assertnull ( fields [ 0 ] )
[4]: org. junit. assert. assertequals ( resource, name )

************

************
tgt: org . junit . assert . assertequals ( 1 , spy . executedstatements ( ) )
[0]: org. junit. assert. assertnotnull ( name )
[1]: , name )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, beans. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 50 , gri . getmaximalstructures ( ) )
[0]: org. junit. assert. assertequals ( 0, termhandler. getkeybuf ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, termhandler. getkeybuf ( ). tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ctrlpress ), termhandler. getkeybuf ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), termhandler. getkeybuf ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), termhandler. getkeybuf ( ). tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. asserttrue ( manager. hassent ( packet ) )
[1]: org. junit. assert. assertfalse ( manager. hassent ( packet ) )
[2]: org. junit. assert. asserttrue (manager. hassent ( packet ) )
[3]: org. junit. assert. asserttrue ( manager. hassents ( packet ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( valueanalytic , value , tolerancethistest )
[0]: org. junit. assert. assertnotnull ( facade )
[1]: org. junit. assert. assertequals ( swt. selection, facade )
[2]: org. junit. assert. assertequals ( new org. eclipse. swt. widgets. composite ( ), facade )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( swt. selection ), facade )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( composite ), facade )

************

************
tgt: org . junit . assert . asserttrue ( cache . isevictionrequired ( ) )
[0]: org. junit. assert. assertequals ( 0, list. size ( ) )
[1]: org. junit. assert. assertequals ( 1, list. size ( ) )
[2]: org. junit. assert. assertequals ( 2, list. size ( ) )
[3]: org. junit. assert. assertequals ( 3, list. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( null, prop. getpropertyname ( ) )
[1]: org. junit. assert. assertequals ( 0, prop. getpropertyname ( ). length )
[2]: org. junit. assert. assertnull ( prop. getpropertyname ( ) )
[3]: org. junit. assert. assertequals ( 1, prop. getpropertyname ( ) )
[4]: org. junit. assert. assertequals ( 1, prop. getpropertyname ( ). length )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( true, filter. isacceptable ( service ) )
[1]: org. junit. assert. assertequals ( needletofind, sw. tostring ( ) )
[2]: org. junit. assert. assertequals ( needsletofind, sw. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( sw. tostring ( ) )
[4]: org. junit. assert. assertequals ( s, sw. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , count )
[0]: org. junit. assert. assertequals ( needletofind, sw )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( key ), readproperties )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( value ), readproperties )
[3]: org. junit. assert. assertequals ( value, readproperties. singletonmap ( key, value ) )
[4]: org. junit. assert. assertequals ( values, readproperties. singletonmap ( key, value ) )

************

************
tgt: org . junit . assert . assertnotnull ( report )
[0]: org. junit. assert. assertequals ( key, readproperties. singletonmap ( key, value ) )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. assertfalse ( result )
[3]: org. junit. assert. asserttrue ( result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( null , s )
[0]: org. junit. assert. assertthat ( result, org )
[1]: org. junit. assert. assertnotnull ( relationshipproperty )
[2]: org. junit. assert. assertequals ( relationshipid, relationshipproperty )
[3]: org. junit. assert. assertequals ( 1, relationshipproperty. size ( ) )
[4]: org. junit. assert. assertequals ( properties, relationshipproperty )

************

************
tgt: org . junit . assert . assertthat ( capture . getvalue ( ) . size ( ) , org . hamcrest . matchers . is ( 1 ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( org. nutz. lang. lang. long. valueof ( 1 ), bout. tobytearray ( ) )
[2]: org. junit. assert. assertnotnull ( bout. tobytearray ( ) )
[3]: org. junit. assert. assertnotnull ( bout )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( uniqueid )
[0]: 
[1]: org. junit. assert. assertequals ( 1, meldingen. size ( ) )
[2]: org. junit. assert. assertequals ( 1, result. getonderzoek ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, result. getonderzoek ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( classnameforpropertyinputfield )

************

************
tgt: org . junit . assert . assertequals ( 2 , newmap . size ( ) )
[0]: org. junit. assert. assertequals ( ""foo"", classnameforpropertyinputfield )
[1]: org. junit. assert. assertequals ( classnameforpropertyinputfield, ""test"" )
[2]: org. junit. assert. assertequals ( classnameforpropertyinputfield, ""foo"" )
[3]: org. junit. assert. assertequals ( classnameforpropertyinputfield, """" )
[4]: org. junit. assert. assertequals ( empty, result )

************

************
tgt: org . junit . assert . assertnull ( dbservicepolicies )
[0]: org. junit. assert. assertequals ( new java. util. hashset ( empty ), result )
[1]: org. junit. assert. assertequals ( result, empty )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertequals ( originalstate, state )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertnull ( state )
[1]: org. junit. assert. assertequals ( origstate, state )
[2]: org. junit. assert. assertnotnull ( state )
[3]: org. junit. assert. assertequals ( originalstate, state ) )
[4]: org. junit. assert. assertequals ( obj1, key )

************

************
tgt: org . junit . assert . assertthat ( receivedstatus , org . hamcrest . matchers . is ( unauthorized ) )
[0]: org. junit. assert. assertnull ( key )
[1]: org. junit. assert. assertnotnull ( key )
[2]: org. junit. assert. assertequals ( obj1, keys )
[3]: )
[4]: org. junit. assert. assertequals ( 1, size )

************

************
tgt: org . junit . assert . assertequals ( 5 , vcores )
[0]: org. junit. assert. assertequals ( 3, size )
[1]: org. junit. assert. assertequals ( 0, size )
[2]: org. junit. assert. assertequals ( 5, size )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, backend. count )

************

************
tgt: org . junit . assert . assertnull ( com . redhat . lightblue . util . modifydoctest . doc . get ( new com . redhat . lightblue . util . path ( "x" ) ) )
[0]: org. junit. assert. assertequals ( 1, backend. getid ( ) )
[1]: org. junit. assert. assertequals ( 1, backend. isconnected ( ) )
[2]: org. junit. assert. assertequals ( 0, backend. count )
[3]: org. junit. assert. assertequals ( expectedresult, result )
[4]: org. junit. assert. assertequals ( teststring, tokenizer. next ( teststring ) )

************

************
tgt: org . junit . assert . asserttrue ( com . google . common . collect . lists . newarraylist ( iterable ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( teststring, tokenizer. next ( null ) )
[1]: org. junit. assert. assertequals ( teststring, tokenizer. next ( testtest ) )
[2]: teststring )
[3]: ) )
[4]: org. junit. assert. assertequals ( true, locksymmetrylistener. issymmetrical ( ) )

************

************
tgt: org . junit . assert . assertequals ( dlg . isdisabled ( ) , user . isdisabled ( ) )
[0]: org. junit. assert. assertequals ( false, locksymmetrylistener. issymmetrical ( ) )
[1]: org. junit. assert. assertequals ( prefix, makepathfromfileid ( inode ) )
[2]: org. junit. assert. assertequals ( prefix, makepathfromfileid ( inode ). tostring ( ) )
[3]: org. junit. assert. assertnotnull ( makepathfromfileid ( inode ) )
[4]: org. junit. assert. assertequals ( prefix, makepathfromfileid ( inode ). trim ( ) )

************

************
tgt: org . junit . assert . assertfalse ( itty . hasnext ( ) )
[0]: org. junit. assert. assertequals ( prefix, makepathfromfileid ( inode ). getpath ( ) )
[1]: org. junit. assert. assertnotnull ( def )
[2]: org. junit. assert. assertequals ( esql, osql )
[3]: org. junit. assert. assertequals ( esql, def )
[4]: org. junit. assert. assertequals ( expected, def )

************

************
tgt: org . junit . assert . assertequals ( "header_value" , lastrequest . getheader ( "header_key" ) )
[0]: org. junit. assert. assertnotnull ( definition )
[1]: org. junit. assert. assertequals ( expectedjobs. size ( ), list_1. size ( ) )
[2]: org. junit. assert. assertequals ( expectedjobs. size ( ), list. size ( ) )
[3]: org. junit. assert. assertequals ( expectedjobs. size ( ), listarchiver. size ( ) )
[4]: org. junit. assert. assertequals ( expectedjobs. size ( ), listadvice. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( containerinformation )
[0]: org. junit. assert. assertequals ( expectedjobs. size ( ), list mlist. size ( ) )
[1]: org. junit. assert. assertequals ( 1, meldingen. size ( ) )
[2]: org. junit. assert. assertequals ( 0, meldingen. size ( ) )
[3]: org. junit. assert. assertequals ( 1, meldingen. size ( ) )
[4]: org. junit. assert. assertthat ( meldingen. size ( ), is ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expectedbindingstring , volumeconfiguration . getbind ( ) . get ( 0 ) )
[0]: org. junit. assert. assertequals ( 0, myeldingen. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, root. haseffect ( ) )
[3]: org. junit. assert. assertfalse ( root. haseffect ( ) )
[4]: org. junit. assert. assertequals ( false, root. haseffect ( ) )

************

************
tgt: org . junit . assert . asserttrue ( isfocusinsideelement ( checkboxgroup ) )
[0]: org. junit. assert. assertequals ( true, instance. haseffect ( ) )
[1]: org. junit. assert. assertequals ( true, this. haseffect ( ) )
[2]: org. junit. assert. assertequals ( t1, t1 )
[3]: org. junit. assert. assertequals ( t1, t2 )
[4]: org. junit. assert. assertequals ( 0, ( t1 - t1 ) )

************

************
tgt: org . junit . assert . assertequals ( expressietype . datumtijd , metaobjectliteral . gettype ( new nl . bzk . brp . domain . expressie . context ( ) ) )
[0]: org. junit. assert. assertequals ( t1, t )
[1]: org. junit. assert. assertequals ( 1, ( t1 - t1 ) )
[2]: org. junit. assert. assertequals ( true, berichtgegevens. isgeautoriseerdvoorgedeblokkeerdemeldingen ( ) )
[3]: org. junit. assert. assertequals ( false, berichtgegevens. isgeautoriseerdvoorgedeblokkeerdemeldingen ( ) )
[4]: org. junit. assert. assertequals ( null, berichtgegevens. isgeautoriseerdvoorgedeblokkeerdemeldingen ( ) )

************

************
tgt: org . junit . assert . assertequals ( users . tostring ( ) , 4 , users . size ( ) )
[0]: org. junit. assert. assertequals ( 1, berichtgegevens. isgeautoriseerdvoorgedeblokkeerdemeldingen ( ). length )
[1]: org. junit. assert. assertequals ( 0, berichtgegevens. isgeautoriseerdvoorgedeblokkeerdemeldingen ( ). length )
[2]: org. junit. assert. asserttrue ( ssl )
[3]: org. junit. assert. assertequals ( 1, errorcount ( bijhouderfiatteringsuitzondering ) )
[4]: org. junit. assert. assertthat ( renewer. getcurrentlyheldleases ( ). size ( ), org. hamcrest. corematchers. equalto ( 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( dinfo2 )
[0]: org. junit. assert. assertthat ( renewer. getcurrentlyheldleases ( ). size ( ), org. hamcrest. corematchers. equalto ( 0 ) )
[1]: org. junit. assert. assertthat ( renewer. getcurrentlyheldleases ( ). size ( ), org. hamcrest. corematchers. equalto ( 2 ) )
[2]: org. junit. assert. assertthat ( renewer. getcurrentlyheldleases ( ), org. hamcrest. corematchers. equalto ( leasestorenew ) )
[3]: org. junit. assert. assertthat ( renewer. getcurrentlyheldleases ( ). size ( ), org. hamcrest. corematchers. equalto ( 3 ) )
[4]: org. junit. assert. assertequals ( 1, regconsensustransaction. gethash ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertnotnull ( regconsensustransaction. gethash ( ) )
[1]: org. junit. assert. assertequals ( account, regconsensustransactiontemp. gethash ( ) )
[2]: org. junit. assert. assertequals ( 1, registerconsensustransaction. gethash ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( i, org. apache. hive. common. util. murmur3. hash32 ( buffer. array ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( policy . canretry ( context ) )
[0]: org. junit. assert. assertequals ( org. apache. hive. common. util. murmur3. hash32 ( buffer ), org. apache. hive. common. util. murmur3. hash32 ( i ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( i ), org. apache. hive. common. util. murmur3. hash32 ( buffer. array ( ) ) )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), org. apache. hive. common. util. murmur3. hash32 ( buffer. array ( ) ) )
[3]: org. junit. assert. assertequals ( org. apache. hive. common. util. murmur3. hash32 ( buffer ), org. apache. hive. common. util. murmur3. hash32 ( buffer ) )
[4]: org. junit. assert. assertequals ( 1, arrayint )

************

************
tgt: org . junit . assert . asserttrue ( link . equals ( link2 ) )
[0]: org. junit. assert. assertequals ( 0, arrayint )
[1]: org. junit. assert. assertequals ( arrayint, minusone [ 0 ] )
[2]: org. junit. assert. assertequals ( arrayint, minusone [ 1 ] )
[3]: org. junit. assert. assertequals ( plus [ 1 ], arrayint )
[4]: org. junit. assert. assertequals ( new java. lang. integer ( i ), removed. contains ( i ) )

************

************
tgt: org . junit . assert . assertequals ( bd1 , bd2 )
[0]: org. junit. assert. assertequals ( new java. lang. integer ( 0 ), removed. contains ( i ) )
[1]: org. junit. assert. assertequals ( 0, removed. contains ( i ) )
[2]: org. junit. assert. assertequals ( false, removed. contains ( i ) )
[3]: org. junit. assert. assertequals ( new java. lang. integer ( i ), removed. get ( i ) )
[4]: org. junit. assert. assertequals ( 1, routers. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "test" , echo . echo ( "test" ) )
[0]: org. junit. assert. assertequals ( 0, routers. size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( routers. size ( ) ) == 1 ) )
[2]: org. junit. assert. asserttrue ( ( ( routers. size ( ) ) == 0 ) )
[3]: org. junit. assert. asserttrue ( ( ( routers. size ( ) ) > 0 ) )
[4]: org. junit. assert. assertequals ( value, ra. scale ( value ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( new java. lang. long ( value ), ra. scale ( value ) )
[1]: org. junit. assert. assertequals ( value, ra. scale ( value ) )
[2]: org. junit. assert. assertequals ( new java. lang. double ( value ), ra. scale ( value ) )
[3]: org. junit. assert. assertequals ( value, ra. scale ( value ). get ( ), 0 )
[4]: org. junit. assert. asserttrue ( expr. matches ( atom ) )

************

************
tgt: org . junit . assert . assertnull ( receivedmessage )
[0]: org. junit. assert. assertequals ( 0, this. processor. canprocessevent ( event ). size ( ) )
[1]: org. junit. assert. assertequals ( null, this. canprocessevent ( event ) )
[2]: org. junit. assert. assertequals ( 0, processor. canprocessevent ( event ) )
[3]: org. junit. assert. assertequals ( 0, this. canprocessevent ( event ) )
[4]: org. junit. assert. assertequals ( 0, this. processor. canprocessevent ( event ) )

************

************
tgt: org . junit . assert . assertequals ( "" , html )
[0]: org. junit. assert. assertequals ( javanative, javanative )
[1]: org. junit. assert. assertequals ( nvencoded, javanative )
[2]: org. junit. assert. assertequals ( javanative, nvencoded )
[3]: org. junit. assert. assertequals ( javanative, javanative. trim ( ) )
[4]: org. junit. assert. assertequals ( javanative, javanative, javanative )

************

************
tgt: org . junit . assert . assertthat ( buffer . position ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertthat ( org. slim3. jsp. functions. br ( null ), org. hamcrest. corematchers. is ( null ) )
[1]: org. junit. assert. assertthat ( org. slim3. jsp. functions. br ( null ), org. hamcrest. corematchers. is ( ""null ) )
[2]: org. junit. assert. assertthat ( org. slim3. jsp. functions. br ( ""a"" ), org. hamcrest. corematchers. is ( ""a"" ) )
[3]: org. junit. assert. assertnotnull ( org. slim3. jsp. functions. br ( null ) )
[4]: org. junit. assert. assertthat ( org. slim3. jsp. functions. br ( ""foo"" ), org. hamcrest. corematchers. is ( ""bar"" ) )

************

************
tgt: org . junit . assert . assertequals ( "/parent/new" , n2 . getpath ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( 1, query. getrows ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, query. getrows ( ). size ( ) )
[4]: org. junit. assert. assertequals ( parttreequery. getrows ( ), query. getrows ( ) )

************

************
tgt: org . junit . assert . assertequals ( res . size ( ) , 0 )
[0]: org. junit. assert. assertequals ( 2, query. getrows ( ). size ( ) )
[1]: org. junit. assert. assertequals ( parttreequery. getrows ( ). size ( ), 1 )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), urls )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), urls )
[4]: org. junit. assert. assertequals ( 1, urls. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( text )
[0]: org. junit. assert. assertequals ( java. util. optional. empty ( ), urls )
[1]: org. junit. assert. assertequals ( 0, urls. size ( ) )
[2]: org. junit. assert. assertthat ( view. getmessage ( ), org. robobinding. widget. edittext. charsequencematcher. sameas ( newtext ) )
[3]: org. junit. assert. assertthat ( view, org. robobinding. widget. edittext. charsequencematcher. sameas ( newtext ) )
[4]: org. junit. assert. assertthat ( view. tostring ( ), org. robobinding. widget. edittext. charsequencematcher. sameas ( newtext ) )

************

************
tgt: org . junit . assert . asserttrue ( result . startswith ( expresult ) )
[0]: org. junit. assert. assertnotnull ( cell )
[1]: org. junit. assert. assertnotnull ( cell. getid ( ) )
[2]: org. junit. assert. assertnotnull ( cell. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( cell. getvalue ( ) )
[4]: org. junit. assert. assertequals ( memcached, cell )

************

************
tgt: org . junit . assert . assertthat ( metadata , uk . gov . justice . services . test . utils . core . matchers . jsonenvelopemetadatamatcher . metadata ( ) )
[0]: org. junit. assert. assertequals ( getlabel ( ), m3. tostring ( ) )
[1]: org. junit. assert. assertequals ( getlabel ( ), m3, m1 )
[2]: org. junit. assert. assertequals ( getlabel ( ), m1. getlabel ( ) )
[3]: org. junit. assert. assertequals ( getlabel ( ), m3. getmessage ( ) )
[4]: org. junit. assert. assertequals ( getlabel ( ), m1, m3 )

************

************
tgt: org . junit . assert . assertthat ( new org . batfish . coordinator . resources . serviceobjectbean ( bean . toserviceobject ( ) ) , org . hamcrest . matchers . equalto ( bean ) )
[0]: org. junit. assert. assertequals ( java. net. uri. create ( httpget ), uri )
[1]: org. junit. assert. assertequals ( java. net. uri. create ( httpget, uri ), uri )
[2]: org. junit. assert. assertnotnull ( uri )
[3]: org. junit. assert. assertequals ( java. net. uri, uri )
[4]: org. junit. assert. assertequals ( java. net. uri. create ( httpget, uri ), uris )

************

************
tgt: org . junit . assert . assertnull ( instance . setschedulingoptions ( schedulingoptions ) )
[0]: org. junit. assert. assertequals ( buffer, deserialised )
[1]: org. junit. assert. assertnotnull ( deserialised )
[2]: org. junit. assert. assertequals ( deserialised, deserialised )
[3]: org. junit. assert. assertequals ( serialized, deserialised )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( r , com . baeldung . bytebuddy . bar . sayhellobar ( ) )
[0]: org. junit. assert. assertequals ( 1, connectionattempts. get ( ) )
[1]: org. junit. assert. assertequals ( 0, persoon. maakactie ( actie ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, persoon. maakactie ( actie ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, persoon. sakactie ( actie ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, persoon. s )

************

************
tgt: org . junit . assert . asserttrue ( ( ( outputs . getall ( ) . length ) > 0 ) )
[0]: org. junit. assert. asserttrue ( java. util. arrays. equals ( exactresults, expectedresults ) )
[1]: org. junit. assert. asserttrue ( equals ( exactresults, expectedresults ) )
[2]: org. junit. assert. asserttrue ( java. util. arrays. equals ( expectedresults, exactresults ) )
[3]: org. junit. assert. asserttrue ( this. equals ( exactresults, expectedresults ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , rootview . getallitems ( ) . toarray ( ) )
[0]: org. junit. assert. asserttrue ( violations. isempty ( ) )
[1]: org. junit. assert. assertfalse ( violations. isempty ( ) )
[2]: org. junit. assert. assertequals ( true, violations. isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, violations. isempty ( ) )
[4]: . isempty ( ) )

************

************
tgt: org . junit . assert . assertfalse ( dit . hasnext ( ) )
[0]: org. junit. assert. assertthat ( table. tostring ( ), org. hamcrest. core. is. is ( """" ) )
[1]: org. junit. assert. assertthat ( table. tostring ( ), org. hamcrest. core. is. is ( 0 ) )
[2]: org. junit. assert. assertequals ( """", table. tostring ( ) )
[3]: org. junit. assert. assertthat ( table. tostring ( ), is ( """" ) )
[4]: org. junit. assert. assertequals ( ""foo"", table. tostring ( ) )

************

************
tgt: org . junit . assert . assertfalse ( consistent )
[0]: org. junit. assert. assertfalse ( day. equals ( day ) )
[1]: org. junit. assert. assertequals ( true, day. equals ( day ) )
[2]: org. junit. assert. assertequals ( false, day. equals ( day ) )
[3]: org. junit. assert. assertequals ( 1, migratiebijhoudingstapel. size ( ) )
[4]: org. junit. assert. assertequals ( 1, migratiebijhoudingstapel. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( endpointlifecyclemanager . endpoints ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, migratiebijhoudingstapel. getid ( ) )
[1]: org. junit. assert. assertequals ( 1, migratiebijhoudingstapel. length )
[2]: org. junit. assert. assertnotnull ( migratiebijhoudingstapel )
[3]: org. junit. assert. assertequals ( pfast, mslow )
[4]: org. junit. assert. assertequals ( pfast, msfast )

************

************
tgt: org . junit . assert . assertnotnull ( feed )
[0]: org. junit. assert. assertequals ( pfast. tostring ( ), msfast. tostring ( ) )
[1]: org. junit. assert. assertequals ( pfast. tostring ( ), key. tostring ( ) )
[2]: org. junit. assert. assertequals ( pfast. tostring ( ), java. lang. string. class )
[3]: org. junit. assert. assertequals ( 0, items. size ( ) )
[4]: org. junit. assert. assertequals ( 1, items. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, item. size ( ) )
[1]: org. junit. assert. assertequals ( 0,items. size ( ) )
[2]: org. junit. assert. assertequals ( 0, count. size ( ) )
[3]: org. junit. assert. assertnotnull ( find ( org. opencastproject. util. persistence. queries. class, id ) )
[4]: org. junit. assert. assertnotnull ( penv. find ( org. opencastproject. util. persistence. queries. class, id ) )

************

************
tgt: org . junit . assert . assertequals ( options , java . lang . system . getproperty ( com . ea . agentloader . test . agentloadertest . someagent . class . getname ( ) ) )
[0]: org. junit. assert. assertequals ( 1, penv. find ( org. opencastproject. util. persistence. queries. class, id ). size ( ) )
[1]: org. junit. assert. assertnotnull ( dao. find ( org. opencastproject. util. persistence. queries. class, id ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( errors. tostring ( ) )
[4]: org. junit. assert. assertequals ( 0, errors. tostring ( ). length )

************

************
tgt: org . junit . assert . assertnotnull ( bulkenrollmentoperationerror )
[0]: org. junit. assert. assertequals ( 1, errors. tostring ( ) )
[1]: org. junit. assert. assertequals ( 1, errors. tostring ( ). length )
[2]: . tostring ( ) )
[3]: org. junit. assert. assertequals ( 0, helperpush. exists ( ) )
[4]: org. junit. assert. assertequals ( 0, helperpush. length )

************

************
tgt: org . junit . assert . assertequals ( defaultversion , store . loadversion ( ) )
[0]: org. junit. assert. assertequals ( 0, helperpush. size ( ) )
[1]: org. junit. assert. assertequals ( 0, helperpush. count ( ) )
[2]: org. junit. assert. asserttrue ( helperpush. exists ( ) )
[3]: org. junit. assert. assertnotnull ( objectnameprefix )
[4]: org. junit. assert. assertequals ( objectnameprefix, objectnameprefix )

************

************
tgt: org . junit . assert . assertnotnull ( glp )
[0]: org. junit. assert. assertnull ( objectnameprefix )
[1]: org. junit. assert. asserttrue ( objectnameprefix == null ) )
[2]: org. junit. assert. asserttrue ( objectnameprefix == null )
[3]: org. junit. assert. assertequals ( 1, segments. size ( ) )
[4]: org. junit. assert. assertequals ( 1, hits2. getresultsize ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( nanosbytes , field . getbytes ( ) )
[0]: org. junit. assert. assertequals ( 3, hits2. getresultsize ( ) )
[1]: org. junit. assert. assertequals ( 2, hits2. getresultsize ( ) )
[2]: org. junit. assert. assertequals ( 0, hits2. getresultsize ( ) )
[3]: org. junit. assert. assertequals ( 4, hits2. getresultsize ( ) )
[4]: org. junit. assert. assertequals ( result, hello )

************

************
tgt: org . junit . assert . assertequals ( 1 , actualdetails . size ( ) )
[0]: org. junit. assert. assertequals ( hello, result )
[1]: org. junit. assert. assertequals ( now, result )
[2]: org. junit. assert. assertequals ( resulting, result )
[3]: )
[4]: org. junit. assert. asserttrue ( session3. propertyexists ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( instance . iscollectionresource ( ) )
[0]: org. junit. assert. asserttrue ( session3. propertyexists ( session3. getid ( ) ) )
[1]: org. junit. assert. asserttrue ( session3. propertyexists ( session2. getid ( ) ) )
[2]: org. junit. assert. asserttrue ( session3. propertyexists ( ""foo"" ) )
[3]: org. junit. assert. asserttrue ( session3. propertyexists ( session2. tostring ( ) ) )
[4]: org. junit. assert. asserttrue ( childfromdb. hassamefieldsas ( child ) )

************

************
tgt: org . junit . assert . assertsame ( expected , result )
[0]: org. junit. assert. assertequals ( 1, responselist. size ( ) )
[1]: org. junit. assert. assertequals ( 0, responselist. size ( ) )
[2]: org. junit. assert. assertequals ( 2, responselist. size ( ) )
[3]: org. junit. assert. assertnotnull ( responselist )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , res . size ( ) )
[0]: org. junit. assert. assertequals ( landsatmetadata, landsatmetadata )
[1]: org. junit. assert. assertnotnull ( landsatmetadata )
[2]: org. junit. assert. assertequals ( landsatmetadata, testfile )
[3]: org. junit. assert. asserttrue ( ( landsatmetadata == null ) )
[4]: org. junit. assert. asserttrue ( ( landsatmetadata instanceof org. esa ) )

************

************
tgt: org . junit . assert . assertarrayequals ( zs , mikera . vectorz . util . intarrays . intersectsorted ( xs , ys ) )
[0]: org. junit. assert. assertnotnull ( type )
[1]: org. junit. assert. assertnull ( type )
[2]: org. junit. assert. assertequals ( requestkeys. hit_type, type )
[3]: org. junit. assert. assertequals ( null, type )
[4]: org. junit. assert. assertequals ( requestkeys. hit_type, types )

************

************
tgt: org . junit . assert . assertequals ( seekvalues [ i ] , v . next ( ) )
[0]: org. junit. assert. assertequals ( 1, querysnapshot. size ( ) )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( ""a"", e. getmessage ( ) )
[4]: . getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . uberfire . backend . server . vfsservicesserverimpltest . root_path , path )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( responsebody )
[2]: org. junit. assert. assertequals ( data, responsebody )
[3]: org. junit. assert. assertnotnull ( responsebody. tolowercase ( ) )
[4]: org. junit. assert. asserttrue ( responsebody. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , cities . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertnull ( p1. getproperty ( null ) )
[2]: org. junit. assert. assertnull ( p1. getproperty ( ""name"" ) )
[3]: org. junit. assert. assertnull ( p1. getproperty ( string ) )
[4]: org. junit. assert. assertnull ( p1. getproperty ( "name ) )

************

************
tgt: org . junit . assert . asserttrue ( clickme . gettext ( ) . contains ( buttontext ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( plan, executionid )
[2]: org. junit. assert. assertequals ( plan, null )
[3]: org. junit. assert. assertequals ( plan, 200 )
[4]: org. junit. assert. assertequals ( plan, """" )

************

************
tgt: org . junit . assert . assertnotnull ( org . eclipse . swt . widgets . display . getdefault ( ) )
[0]: org. junit. assert. assertnotnull ( type )
[1]: org. junit. assert. assertequals ( assertnotnull ( type )
[2]: org. junit. assert. assertequals ( type, type )
[3]: org. junit. assert. assertequals ( type, datatype. entity )
[4]: org. junit. assert. assertequals ( type, datatype. table )

************

************
tgt: org . junit . assert . asserttrue ( r . ismatch ( request ) )
[0]: org. junit. assert. assertequals ( 1, processended ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, processesended ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, processended ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 3, processended ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( processended ( ) )

************

************
tgt: org . junit . assert . assertthat ( content , org . hamcrest . matchers . equalto ( org . talend . esb . servicelocator . testcontent . content_any_1 ) )
[0]: org. junit. assert. assertequals ( ""a"", buf. tostring ( ) )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( depth ), buf. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( depth ), buf. tostring ( ) )
[3]: org. junit. assert. assertequals ( ""1"", buf. tostring ( ) )
[4]: org. junit. assert. assertequals ( ""foo"", buf. tostring ( ) )

************

************
tgt: org . junit . assert . assertsame ( expr . accept ( visitor ) , visitresult )
[0]: org. junit. assert. assertfalse ( failed )
[1]: org. junit. assert. assertequals ( now, entity. gettimestamp ( ) )
[2]: org. junit. assert. assertnotnull ( ipmatcher. match ( null ) )
[3]: org. junit. assert. assertnotnull ( ipmatcher. match ( name ) )
[4]: org. junit. assert. assertnotnull ( ipmatcher. match ( ""foo"" ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , metadata . getorganisationunitgroups ( ) . size ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertfalse ( org. dcache. util. subnet. isvalid ( ""foo"" ) )
[3]: org. junit. assert. assertfalse ( org. dcache. util. subnet. isvalid ( ""a"" ) )
[4]: org. junit. assert. assertfalse ( org. dcache. util. subnet. isvalid ( """" ) )

************

************
tgt: org . junit . assert . assertequals ( "foo!" , getter . get ( foo ) )
[0]: org. junit. assert. assertfalse ( org. dcache. util. subnet. isvalid ( "2001:db8::00ff ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( dbxxtrxloglist )
[3]: org. junit. assert. assertequals ( 1, dbxxtrxloglist. length )
[4]: org. junit. assert. assertequals ( 1, dbxxtrxloglist )

************

************
tgt: org . junit . assert . assertequals ( teststring , component . getautocomplete ( ) )
[0]: org. junit. assert. assertequals ( 1, dbxxtrxloglist. size ( )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( org. jaitools. tilecache. diskcachedtile. getcachefolder ( ) )
[3]: org. junit. assert. assertequals ( 1, data. getcomponents ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, data. getcomponents ( ). length )

************

************
tgt: org . junit . assert . assertequals ( org . nd4j . linalg . factory . nd4j . create ( new double [ ] { 4 , 5 , 6 } ) , vector )
[0]: org. junit. assert. assertequals ( 0, data. getcomponents ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, data. getcomponents ( ). length )
[2]: org. junit. assert. assertequals ( 1, data. getcomponents ( ). size ( )
[3]: org. junit. assert. assertequals ( faketypes. mine. minename_descriptor, builder. gettype ( ) )
[4]: org. junit. assert. assertequals ( faketypes. mine. minename_descriptor, builder. gettype ( ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( text . resolvedtext , "test" )
[0]: org. junit. assert. assertequals ( faketypes. mine. minename_descriptor, builder. gettype ( ). gettype ( ) )
[1]: org. junit. assert. assertequals ( faketypes. mine. minename_descriptor, builder. gettype ( ). tostring ( ) )
[2]: org. junit. assert. assertnotnull ( builder. gettype ( ) )
[3]: org. junit. assert. assertequals ( 1, found. size ( ) )
[4]: org. junit. assert. assertequals ( 0, found. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( instance )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), found )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), found )
[2]: org. junit. assert. assertequals ( 1, found. size ( ) )
[3]: org. junit. assert. assertequals ( expectedjson, generatedjson )
[4]: org. junit. assert. assertequals ( expectedjson, generatedjson. trim ( ) )

************

************
tgt: org . junit . assert . assertequals ( soortsynchronisatie . mutatiebericht , soortsynchronisatie )
[0]: org. junit. assert. assertthat ( generatedjson, is ( expectedjson ) )
[1]: org. junit. assert. assertequals ( resultjson, generatedjson )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( ex. getmessage ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. class, ex. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , resultaat . getmeldingen ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 1, ex. getmessage ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, ex. getmessage ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, emptyprovider. getschedulerprovider ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 3, emptyprovider. getschedulerprovider ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( stats )
[0]: org. junit. assert. assertsame ( defaultpoolsize, emptyprovider. getschedulerprovider ( ) )
[1]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { }, emptyprovider. getschedulerprovider ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( field )
[4]: org. junit. assert. assertnotnull ( field. getstring ( ) )

************

************
tgt: org . junit . assert . assertthat ( definition . gettenantid ( ) , org . hamcrest . corematchers . is ( org . camunda . bpm . engine . test . api . multitenancy . tenantcheck . multitenancycasedefinitioncmdstenantchecktest . tenant_one ) )
[0]: org. junit. assert. assertequals ( null, field )
[1]: org. junit. assert. assertnull ( field )
[2]: ) )
[3]: org. junit. assert. assertarrayequals ( values, stringtobignumber )
[4]: org. junit. assert. assertnull ( stringtobignumber )

************

************
tgt: org . junit . assert . assertequals ( "version" 0 , empresa . getcodigo ( ) )
[0]: org. junit. assert. assertequals ( values, stringtobignumber )
[1]: org. junit. assert. assertnotnull ( stringtobignumber )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( result, metric )

************

************
tgt: org . junit . assert . assertequals ( numcolumns , c )
[0]: org. junit. assert. assertnotnull ( result. getscope ( ) )
[1]: org. junit. assert. assertequals ( result, metric_2 )
[2]: org. junit. assert. assertequals ( result, metric. getscope )
[3]: org. junit. assert. assertnotnull ( revenueshare )
[4]: org. junit. assert. assertequals ( 10, revenueshare. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , received )
[0]: org. junit. assert. assertequals ( revenueshare, 10 )
[1]: org. junit. assert. assertequals ( 10, revenueshare. count ( ) )
[2]: org. junit. assert. assertequals ( 1, defaultcompiledquery. getparameters ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, defaultcompiledquery. getparameters ( ). length )
[4]: org. junit. assert. assertnotnull ( artist. getartistname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . getentities ( ) . size ( ) )
[0]: org. junit. assert. assertnull ( artist. getartistname ( ) )
[1]: org. junit. assert. assertnotnull ( artist )
[2]: org. junit. assert. assertequals ( qual, artist )
[3]: ) )
[4]: org. junit. assert. assertequals ( true, result )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( new java . lang . string [ ] [ ] { new java . lang . string [ ] { "" , "" } } ) )
[0]: org. junit. assert. assertequals ( false, result )
[1]: org. junit. assert. asserttrue ( result )
[2]: org. junit. assert. assertfalse ( result )
[3]: org. junit. assert. assertthat ( result, org )
[4]: org. junit. assert. assertequals ( 1, tablecount )

************

************
tgt: org . junit . assert . assertarrayequals ( te . array , te2 . array )
[0]: org. junit. assert. assertequals ( 0, tablecount )
[1]: org. junit. assert. assertequals ( 3, tablecount )
[2]: org. junit. assert. assertequals ( 1, tablescount )
[3]: ) )
[4]: org. junit. assert. asserttrue ( opennlp. tools. namefind. bilounamefindersequencevalidatortest. validator. validsequence ( 1, inputsequence, outcomessequence, outcome ) )

************

************
tgt: org . junit . assert . assertequals ( expectedcommand , actualcommand )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertequals ( 0, 1 )
[2]: org. junit. assert. assertnotnull ( s )
[3]: org. junit. assert. assertnotnull ( collection )
[4]: type ) { }

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( exception. getmessage ( ), e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( 404, e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. class, e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( "transactionid" , transactionid )
[0]: org. junit. assert. assertequals ( 1, res )
[1]: org. junit. assert. assertequals ( 0, res )
[2]: org. junit. assert. assertequals ( 3, res )
[3]: org. junit. assert. assertequals ( 200, res )
[4]: org. junit. assert. assertequals ( 4, res )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . integer ( 1 ) , new java . lang . integer ( loops . size ( ) ) )
[0]: org. junit. assert. assertequals ( lastpriority, priority, 0.0 )
[1]: org. junit. assert. assertequals ( lastpriority, priority, 1.0 )
[2]: org. junit. assert. assertequals ( lastpriority, priority, 0 )
[3]: org. junit. assert. assertequals ( 0, priority, lastpriority )
[4]: org. junit. assert. assertequals ( 0.0, priority, lastpriority )

************

************
tgt: org . junit . assert . assertnotnull ( descriptor )
[0]: org. junit. assert. assertequals ( twin1, set. getfirst ( ) )
[1]: org. junit. assert. assertnotnull ( set. getfirst ( ) )
[2]: org. junit. assert. assertnull ( set. getfirst ( ) )
[3]: org. junit. assert. assertequals ( twin1. getfirst ( ), set )
[4]: org. junit. assert. assertsame ( twin1, set )

************

************
tgt: org . junit . assert . assertsame ( org . eclipse . collections . impl . map . strategy . mutable . unifiedmapwithhashingstrategytest . integer_hashing_strategy , map . hashingstrategy ( ) )
[0]: org. junit. assert. assertequals ( replacedtemporalproperty, testresponse )
[1]: org. junit. assert. assertequals ( replacefieldemporalproperty, testresponse )
[2]: org. junit. assert. assertequals ( replacesdtemporalproperty, testresponse )
[3]: org. junit. assert. assertequals ( replaceresponse, testresponse )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( null, thumbnail. gettype ( ) )
[1]: org. junit. assert. assertequals ( 0, thumbnail. gettype ( ) )
[2]: org. junit. assert. assertequals ( 1, thumbnail. gettype ( ) )
[3]: type ) )
[4]: type )

************

************
tgt: org . junit . assert . assertequals ( "/a/b" , result . tostring ( ) )
[0]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[1]: org. junit. assert. assertequals ( expected, tostringunsorted ( rs ) )
[2]: org. junit. assert. assertequals ( expected, java. lang. string. valueof ( result. tostringunsorted ( rs ) ) )
[3]: org. junit. assert. assertequals ( expected, java. lang. string. valueof ( result. tostringunsorted ( rs ) )
[4]: ( sqltext ) )

************

************
tgt: org . junit . assert . assertequals ( 1l , testingnetconfsession . getsessionid ( ) )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), result )
[1]: org. junit. assert. assertequals ( 1, skinfactory. createtailskin ( de. tesis. dynaware. grapheditor. core. skins. skinfactorytest. connector ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, skinfactory. createtailskin ( de. tesis. dynaware. grapheditor. core. skins. skinfactorytest. connector ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, skinfactory. createtailskin ( de. tesis. dynaware. grapheditor. core. skins. skinfactorytest. connector ). length )
[4]: org. junit. assert. assertnotnull ( skinfactory. createtailskin ( de. tesis. dynaware. grapheditor. core. skins. skinfactorytest. connector ) )

************

************
tgt: org . junit . assert . assertnull ( whenisassetablebasemodel . fetchassetentry ( basemodel ) )
[0]: org. junit. assert. asserttrue ( ( ( skinfactory. createtailskin ( de. tesis. dynaware. grapheditor. core. skins. skinfactorytest. connector ) ) instanceof de ) )
[1]: org. junit. assert. assertequals ( expected, addr2 )
[2]: org. junit. assert. assertnotnull ( addr2 )
[3]: org. junit. assert. assertequals ( expected, addr1 )
[4]: org. junit. assert. assertequals ( expected, address2 )

************

************
tgt: org . junit . assert . asserttrue ( to . isempty ( ) )
[0]: org. junit. assert. assertequals ( true, service. getuniscount ( ) )
[1]: org. junit. assert. assertequals ( true, service. getuniparity ( ) )
[2]: org. junit. assert. assertequals ( true, service. getunicount ( ) )
[3]: org. junit. assert. assertequals ( true, service. getunioread ( ) )
[4]: org. junit. assert. assertequals ( true, status )

************

************
tgt: org . junit . assert . assertequals ( column . length , length )
[0]: org. junit. assert. assertequals ( 0, org. eclipse. swt. widgets. tree_test. countresolveditems ( tree ) )
[1]: org. junit. assert. assertequals ( size, service. getresultssize ( result ) )
[2]: org. junit. assert. assertequals ( 1, service. getresultssize ( result ) )
[3]: org. junit. assert. assertequals ( 1, ( size - 1 ) )
[4]: org. junit. assert. assertequals ( size, service. getresultssize ( result ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( outany . equal ( inany ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( generatedvalidation. exists ( ) )
[2]: org. junit. assert. asserttrue ( generateddep. exists ( ) )
[3]: org. junit. assert. asserttrue ( generated200. exists ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result )
[0]: )
[1]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. equalto ( false ) )
[2]: org. junit. assert. assertequals ( true, conceptservice. hasanyconceptattribute ( conceptattributetype ) )
[3]: org. junit. assert. assertequals ( false, conceptservice. hasanyconceptattribute ( conceptattributetype ) )
[4]: org. junit. assert. assertequals ( 1l, reservoir. getmeasurements ( ). size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( packet , com . github . mpjct . jmpjct . mysql . proto . proto . arraylist_to_array ( payload ) )
[0]: org. junit. assert. assertequals ( 1, reservoir. getmeasurements ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, reservoir. getmeasurements ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1l, 2l, 3l ), reservoir. getmeasurements ( ) )
[3]: org. junit. assert. assertthat ( reservoir. getmeasurements ( ). size ( ), org. hamcrest. corematchers. is ( 1l ) )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . asserttrue ( ( ( list . size ( ) ) == 1 ) )
[0]: org. junit. assert. assertequals ( result, expected )
[1]: org. junit. assert. assertnotnull ( result )
[2]: get the expected ) )
[3]: get the expected )
[4]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( org. hamcrest. corematchers. equalto ( expected ) ) )

************

************
tgt: org . junit . assert . assertequals ( qname . gettype ( ) , net . sourceforge . pmd . lang . java . ast . astadditiveexpression . class )
[0]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( expected ) )
[1]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( org. hamcrest. matchers. equalto ( expected ) ) )
[2]: org. junit. assert. assertthat ( expected, org. hamcrest. corematchers. is ( actual ) )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( expected ) )
[4]: org. junit. assert. assertnull ( com. vmware. admiral. compute. container. volume. volumeutil. parsevolumehostdirectory ( emptyvolume ) )

************

************
tgt: org . junit . assert . assertnotnull ( com . hazelcast . simulator . common . gitinfo . getcommittime ( ) )
[0]: org. junit. assert. assertnotnull ( com. vmware. admiral. compute. container. volume. volumeutil. parsevolumehostdirectory ( emptyvolume ) )
[1]: org. junit. assert. assertequals ( null, com. vmware. admiral. compute. container. volume. volumeutil. parsevolumehostdirectory ( emptyvolume ) )
[2]: org. junit. assert. assertequals ( 0, com. vmware. admiral. compute. container. volume. volumeutil. parsevolumehostdirectory ( emptyvolume ) )
[3]: ( emptyvolume ) )
[4]: org. junit. assert. assertequals ( 0, ccn )

************

************
tgt: org . junit . assert . assertequals ( builder . create ( ) , builder2 . create ( ) )
[0]: org. junit. assert. assertequals ( 1, userdefinemetrics. size ( ) )
[1]: org. junit. assert. assertequals ( com. google. common. collect. immutablelist. of ( ), userdefinemetrics )
[2]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( ), userdefinemetrics )
[3]: org. junit. assert. assertequals ( 0, userdefinemetrics. size ( ) )
[4]: org. junit. assert. assertequals ( 1, usersdefinemetrics. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , calculated )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( result, callback )
[4]: , result )

************

************
tgt: org . junit . assert . assertequals ( 6 , numberofoccurences )
[0]: org. junit. assert. assertequals ( expectedtag, result )
[1]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. is ( expectedtag ) )
[2]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. contains ( expectedtag ) )
[3]: org. junit. assert. assertequals ( expectedtag. gettags ( ), result )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. equalto ( expectedtag ) )

************

************
tgt: org . junit . assert . assertthat ( context . tenant ( ) , org . hamcrest . corematchers . is ( "tenant" ) )
[0]: org. junit. assert. assertequals ( derivativeofcostfunction, result [ 0 ], derivativeofcostfunction )
[1]: org. junit. assert. assertequals ( derivativeofcostfunction, result [ j ], derivativeofcostfunction )
[2]: org. junit. assert. assertequals ( derivativeofcostfunction, derivativeofcostfunction )
[3]: org. junit. assert. assertequals ( derivativeofcostfunction, derivativeofcostfunction. length )
[4]: org. junit. assert. assertequals ( derivativeofcostfunction, derivativeofcostfunction, 0.0 )

************

************
tgt: org . junit . assert . asserttrue ( actualvertices . isempty ( ) )
[0]: org. junit. assert. assertthat ( options. iss3serversideencryption ( ), org. hamcrest. corematchers. is ( true ) )
[1]: org. junit. assert. assertequals ( 1, subkeys. size ( ) )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( result, null )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertthat ( unmarshallervalue , org . hamcrest . corematchers . equalto ( unmarshaller ) )
[0]: org. junit. assert. assertequals ( result, expected )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( 1, reservationstatus. getnumber ( ) )
[3]: org. junit. assert. assertnotnull ( reservationstatus )
[4]: org. junit. assert. assertequals ( 0, reservationstatus. getnumber ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result . getobject ( ) )
[0]: org. junit. assert. assertequals ( 1, reservationstatus. getnumber ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, reservationstatus. getnumber ( ). length )
[2]: org. junit. assert. assertthat ( determineduri, org. hamcrest. corematchers. equalto ( uri ) )
[3]: org. junit. assert. assertthat ( determineduri, org. hamcrest. corematchers. equalto ( url ) )
[4]: org. junit. assert. assertthat ( determineduri, org. hamcrest. corematchers. equalto ( string ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , texts . size ( ) )
[0]: org. junit. assert. assertthat ( determineduri, org. hamcrest. corematchers. equalto ( uris ) )
[1]: org. junit. assert. assertnotnull ( determineduri )
[2]: org. junit. assert. assertequals ( windowspath, actual )
[3]: org. junit. assert. assertequals ( windowsfolder, actual )
[4]: org. junit. assert. assertnotnull ( runner. getresult ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, runner. getresult ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), runner )
[2]: ) )
[3]: 
[4]: org. junit. assert. assertequals ( 1, listtokens. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( file . tostring ( ) )
[0]: org. junit. assert. assertarrayequals ( 1, listtokens. toarray ( new org. apache. ambari. server. api. predicate. token [ listtokens. size ( ) ] ) )
[1]: org. junit. assert. assertarrayequals ( 1, listtokens. size ( ) )
[2]: org. junit. assert. assertarrayequals ( listtokens. toarray ( new org. apache. ambari. server. api. predicate. token [ listtokens. size ( ) ] ), tokenstokens. size ( ) )
[3]: org. junit. assert. assertarrayequals ( 1, listtokens. toarray ( ) )
[4]: org. junit. assert. assertequals ( 0, lower. compareto ( upper ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 1, lower. compareto ( upper ) )
[1]: org. junit. assert. assertequals ( 0, upper. compareto ( upper ) )
[2]: org. junit. assert. assertequals ( 1, upper. compareto ( upper ) )
[3]: org. junit. assert. assertequals ( 0, lower. compareto ( upper ) ) ;
[4]: org. junit. assert. assertequals ( topics, notificationmanager. gettopics ( ) )

************

************
tgt: org . junit . assert . assertnull ( parsed )
[0]: org. junit. assert. assertequals ( 1, notificationmanager. gettopics ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, notificationmanager. gettopics ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( topics ), notificationmanager. gettopics )
[3]: ) )
[4]: org. junit. assert. assertequals ( true, enforcement )

************

************
tgt: org . junit . assert . assertequals ( ref , tokens )
[0]: org. junit. assert. assertequals ( false, enforcement )
[1]: org. junit. assert. assertequals ( null, enforcement )
[2]: org. junit. assert. assertfalse ( enforcement )
[3]: org. junit. assert. assertnotnull ( enforcement )
[4]: org. junit. assert. assertequals ( rru, result. gettrackingrefupdates ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , violations . size ( ) )
[0]: org. junit. assert. assertequals ( rru, result. gettrackingrefupdates ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, result. gettrackingrefupdates ( ). size ( ) )
[2]: org. junit. assert. assertequals ( rru. gettrackingrefupdates ( ). size ( ), result )
[3]: ) )
[4]: org. junit. assert. assertnull ( response. getmetadata ( ) )

************

************
tgt: org . junit . assert . assertequals ( internalindexstate . failed , state )
[0]: org. junit. assert. assertnotnull ( response. getmetadata ( ) )
[1]: org. junit. assert. assertsame ( responsebuilder, response. getmetadata ( ) )
[2]: org. junit. assert. assertequals ( null, response. getmetadata ( ) )
[3]: org. junit. assert. assertnull ( response. getmetadata ( ). get ( ) )
[4]: org. junit. assert. assertequals ( org. apache. hadoop. hbase. replication. regionserver. testreplicationsink. batch_size, nextres. length )

************

************
tgt: org . junit . assert . asserttrue ( ( ( response . getstatus ( ) ) == 200 ) )
[0]: org. junit. assert. assertequals ( org. apache. hadoop. hbase. replication. regionserver. testreplicationsink. batch_size, listres. next ( ). length )
[1]: org. junit. assert. assertequals ( org. apache. hadoop. hbase. replication. regionserver. testreplicationsink. batch_size, nextres. next ( ). length )
[2]: org. junit. assert. assertequals ( org. apache. hadoop. hbase. replication. regionserver. testreplicationsink. batch_size, nextres. getmessage ( ) )
[3]: org. junit. assert. assertequals ( 0, org. apache. hadoop. hbase. replication. regionserver. testreplicationsink. batch_size )
[4]: org. junit. assert. assertnotnull ( com. google. cloud. tools. eclipse. util. cloudtoolsinfo. gettoolsversion ( data ) )

************

************
tgt: org . junit . assert . asserttrue ( org . apache . tinkerpop . gremlin . structure . util . elementhelper . areequal ( mockpropertya , mockpropertyb ) )
[0]: org. junit. assert. assertnotnull ( com. google. cloud. tools. eclipse. util. cloudtoolsinfo. gettoolsversion ( values ) )
[1]: org. junit. assert. assertnotnull ( com. google. cloud. tools. eclipse. util. cloudtoolsinfo. gettoolsversion ( java. util. collections. emptylist ( ) ) )
[2]: org. junit. assert. assertnotnull ( com. google. cloud. tools. eclipse. util. cloudtoolsinfo. gettoolsversion ( list. size ( ) ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( peek, requesttask )

************

************
tgt: org . junit . assert . assertequals ( 4 , m . size ( ) )
[0]: org. junit. assert. assertnotnull ( requesttask )
[1]: org. junit. assert. assertequals ( rt, requesttask )
[2]: org. junit. assert. assertequals ( look, requesttask )
[3]: org. junit. assert. assertequals ( requesttask, peek )
[4]: org. junit. assert. assertnull ( org. eclipse. che. ide. ext. runner. client. tabs. properties. panel. common. shutdown. detect ( shutdown. tostring ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( "127.0.1.1" , hostandportstring )
[0]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. tabs. properties. panel. common. shutdown. detect ( shutdown. tostring ( ) ), shutdown )
[1]: org. junit. assert. assertsame ( shutdown, org. eclipse. che. ide. ext. runner. client. tabs. properties. panel. common. shutdown. detect ( shutdown. tostring ( ) ) )
[2]: org. junit. assert. assertnotnull ( org. eclipse. che. ide. ext. runner. client. tabs. properties. panel. common. shutdown. detect ( shutdown. tostring ( ) ) )
[3]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. tabs. properties. panel. common. shutdown. detect ( shutdown. tostring ( ) ), shut )
[4]: org. junit. assert. assertfalse ( value. equals ( null ) )

************

************
tgt: org . junit . assert . assertnotnull ( setter )
[0]: org. junit. assert. assertequals ( false, value. equals ( null ) )
[1]: org. junit. assert. assertfalse ( value. equals ( value ) )
[2]: org. junit. assert. assertequals ( false, value. equals ( value ) )
[3]: org. junit. assert. asserttrue ( value. equals ( value ) )
[4]: org. junit. assert. assertnull ( org. eclipse. hono. client. command. from ( message, replytoid, replytoid ) )

************

************
tgt: org . junit . assert . assertequals ( "column:<sp>'_c456_'<sp>and<sp>column:<sp>_c123_" , results )
[0]: org. junit. assert. assertnull ( org. eclipse. hono. client. command. from ( message, replytoid, fqn. default_tenant ) )
[1]: org. junit. assert. assertfalse ( org. eclipse. hono. client. command. from ( message, replytoid, replytoid ). isvalid ( ) )
[2]: org. junit. assert. assertfalse ( org. eclipse. hono. client. command. from ( message, replytoid, replytoid ) )
[3]: org. junit. assert. assertnull ( org. eclipse. hono. client. command. from ( message, ""a"", replytoid ) )
[4]: org. junit. assert. assertnull ( data )

************

************
tgt: org . junit . assert . assertthat ( c . getvalue ( ) , org . hamcrest . corematchers . is ( 1l ) )
[0]: org. junit. assert. assertnull ( getdata )
[1]: org. junit. assert. assertnotnull ( data )
[2]: org. junit. assert.null ( data )
[3]: ) )
[4]: org. junit. assert. assertequals ( index, valuemodel. getvalue ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( child . getfather ( ) )
[0]: org. junit. assert. assertequals ( 1, ( ( int ) ( valuemodel. getvalue ( ) ) ) )
[1]: org. junit. assert. assertequals ( valuemodel. getvalue ( ), index )
[2]: org. junit. assert. assertequals ( 0, valuemodel. getvalue ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( view )

************

************
tgt: org . junit . assert . assertequals ( 2 , count )
[0]: org. junit. assert. assertequals ( null, view )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( model ), view )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), view )
[3]: org. junit. assert. assertnull ( view )
[4]: org. junit. assert. assertnotnull ( cat )

************

************
tgt: org . junit . assert . assertthat ( loaded , is ( script ) )
[0]: org. junit. assert. assertequals ( 1, cat. size ( ) )
[1]: org. junit. assert. assertequals ( 1, cat. getid ( ) )
[2]: org. junit. assert. assertequals ( 0, cat. size ( ) )
[3]: org. junit. assert. assertequals ( 1, cat. 1 ( ). length )
[4]: org. junit. assert. assertequals ( 1, buffersizetracer. numpendingtasks ( ) )

************

************
tgt: org . junit . assert . assertsame ( error , failingstream . geterror ( ) )
[0]: org. junit. assert. assertequals ( 1, bufferizetracer. numpendingtasks ( ) )
[1]: org. junit. assert. assertequals ( 0, buffersizetracer. numpendingtasks ( ) )
[2]: org. junit. assert. assertequals ( 1, bufizetracer. numpendingtasks ( ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( trie. contains ( "apple ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , parser . getparametercount ( ) )
[0]: org. junit. assert. asserttrue ( trie. contains ( null ) )
[1]: org. junit. assert. asserttrue ( trie. contains ( this. entity ) )
[2]: org. junit. assert. asserttrue ( trie. contains ( java. lang. object ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, net. openhft. lang. io. serialization. direct. directserializationfilter. stopatfirstineligiblefield ( field ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( query . getquery ( ) , org . hamcrest . core . is . is ( expectedtostring ) )
[0]: org. junit. assert. assertequals ( 1, net. openhft. lang. io. serialization. direct. directserializationfilter. stopatfirstineligiblefield ( field ). size ( ) )
[1]: org. junit. assert. assertequals ( field, net. openhft. lang. io. serialization. direct. directserializationfilter. stopatfirstineligiblefield ( field ) )
[2]: org. junit. assert. assertequals ( 0, net. openhft. lang. io. serialization. direct. directserializationfilter. stopatfirstineligiblefield ( field ). length )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, result. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( domain )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: ) )
[4]: org. junit. assert. assertequals ( testtable, ret )

************

************
tgt: org . junit . assert . assertequals ( testdatablock8kb [ i ] , result [ i ] )
[0]: org. junit. assert. assertequals ( schema, ret )
[1]: org. junit. assert. assertequals ( ident schema, ret )
[2]: org. junit. assert. assertequals ( ld, ret )
[3]: org. junit. assert. assertnotnull ( ret )
[4]: org. junit. assert.null ( actual )

************

************
tgt: org . junit . assert . assertequals ( 0 , nodes . size ( ) )
[0]: org. junit. assert. null, actual )
[1]: org. junit. assert. null ( actual )
[2]: null ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), serialization. copy ( null ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , gisfeature . getalternatenames ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 1, serialization. copy ( null ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, serialization. copy ( 1 ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertfalse ( ex. canbedividedby3 ( null ) )

************

************
tgt: org . junit . assert . assertequals ( errocode , result . geterrcode ( ) )
[0]: org. junit. assert. assertfalse ( ex. canbedividedby3 ( ""foo"" ) )
[1]: org. junit. assert. assertfalse ( ex. canbedividedby3 ( ""test"" ) )
[2]: org. junit. assert. asserttrue ( ex. canbedividedby3 ( null ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( expected, input )

************

************
tgt: org . junit . assert . assertnotnull ( walker )
[0]: org. junit. assert. assertequals ( expected, new java. lang. string ( input ) )
[1]: org. junit. assert. assertequals ( expected, output )
[2]: org. junit. assert. assertequals ( expected, new java. lang. string ( output ) )
[3]: ) )
[4]: org. junit. assert. assertthat ( result. size ( ), org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( h , h2 )
[0]: org. junit. assert. assertequals ( leftmask, org. opendaylight. openflowplugin. openflow. md. core. sal. convertor. common. ipconversionutil. normalizeipv4arbitrary ( leftaddress, right ) )
[1]: org. junit. assert. assertnotnull ( org. opendaylight. openflowplugin. openflow. md. core. sal. convertor. common. ipconversionutil. normalizeipv4arbitrary ( leftaddress, right ) )
[2]: org. junit. assert. assertnull ( org. opendaylight. openflowplugin. openflow. md. core. sal. convertor. common. ipconversionutil. normalizeipv4arbitrary ( leftaddress, right ) )
[3]: org. junit. assert. assertequals ( leftaddress, org. opendaylight. openflowplugin. openflow. md. core. sal. convertor. common. ipconversionutil. normalizeipv4arbitrary ( leftaddress, right ) )
[4]: org. junit. assert. assertequals ( leftmask, org. opendaylight. openflowplugin. openflow. md. core. sal. convertor. common. ipconversionutil. normalizeipv4arbitrary ( right, null ) )

************

************
tgt: org . junit . assert . assertfalse ( s . isbalanced ( root ) )
[0]: org. junit. assert. assertequals ( expected, mojo. replaceproperty ( content, null ) )
[1]: org. junit. assert. assertnotnull ( calendars )
[2]: org. junit. assert. assertequals ( 200, calendars. size ( ) )
[3]: org. junit. assert. assertequals ( 1, calendars. size ( ) )
[4]: org. junit. assert. assertnotnull ( calendarquery )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( parser1 , parser3 , parser2 ) , parsers )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( accumulator )
[2]: org. junit. assert. assertequals ( 1, accumulator. get ( ) )
[3]: org. junit. assert. assertequals ( null, accumulator )
[4]: org. junit. assert. assertequals ( expected, accumulator )

************

************
tgt: org . junit . assert . assertequals ( dt , genson . deserialize ( totalnanos . tostring ( ) , java . time . localtime . class ) )
[0]: ) )
[1]: org. junit. assert. assertthat ( results, is ( def ) )
[2]: org. junit. assert. assertthat ( results, org. hamcrest. corematchers. is ( def ) )
[3]: , results [ 0 ] )
[4]: , results )

************

************
tgt: org . junit . assert . assertequals ( 5 , srvnodes . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( answer, 1 )
[2]: org. junit. assert. assertequals ( answer, 0 )
[3]: org. junit. assert. assertequals ( 1, answer )
[4]: org. junit. assert. assertequals ( 0, answer )

************

************
tgt: org . junit . assert . assertarrayequals ( new java . lang . string [ ] { "1" , "2" , "3" , "4" , "3" , "b" , "3" , "b" } , list . toarray ( ) )
[0]: org. junit. assert. assertequals ( answer,
[1]: org. junit. assert. assertnotnull ( obj )
[2]: org. junit. assert. asserttrue ( ( obj instanceof java. lang. string ) )
[3]: org. junit. assert. assertequals ( null, obj )
[4]: org. junit. assert. asserttrue ( ( obj == null ) )

************

************
tgt: org . junit . assert . assertequals ( id , entity . getid ( ) )
[0]: org. junit. assert. assertnull ( obj )
[1]: org. junit. assert. assertsame ( runtimeexception, ee. getcause ( ) )
[2]: org. junit. assert. assertequals ( 1024, zerocount )
[3]: org. junit. assert. assertequals ( 1, zerocount )
[4]: org. junit. assert. assertequals ( 1020, zerocount )

************

************
tgt: org . junit . assert . assertequals ( "param_value" , handler . paramvalue )
[0]: org. junit. assert. assertequals ( 0, zerocount )
[1]: org. junit. assert. assertequals ( 1020, zerocount, 0 )
[2]: org. junit. assert. assertnotnull ( fileuris )
[3]: org. junit. assert. assertequals ( 1, fileuris. size ( ) )
[4]: org. junit. assert. assertequals ( 0, fileuris. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( streamer )
[0]: org. junit. assert. assertequals ( null, fileuris )
[1]: org. junit. assert. assertnotnull ( filuris )
[2]: org. junit. assert. assertnull ( ds. inc ( ""a"", 0 ) )
[3]: org. junit. assert. assertnull ( ds. inc ( ""test"", 0 ) )
[4]: org. junit. assert. assertnull ( ds. inc ( ""foo"", 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , triadcensus )
[0]: org. junit. assert. assertnull ( ds. inc ( ""r"", 0 ) )
[1]: org. junit. assert. assertnull ( ds. inc ( org. github. jmkgreen ) )
[2]: org. junit. assert. asserttrue ( wildcardattributeevaluator. haswildcards ( ) )
[3]: org. junit. assert. assertequals ( true, wildcardattributeevaluator. haswildcards ( ) )
[4]: org. junit. assert. assertfalse ( wildcardattributeevaluator. haswildcards ( ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( expected ) ) )
[0]: org. junit. assert. assertnotnull ( wildcardattributeevaluator. haswildcards ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, deserialized. cantakeitem ( item. getid ( ) ) )
[3]: org. junit. assert. assertequals ( false, deserialized. cantakeitem ( item. getid ( ) ) )
[4]: org. junit. assert. assertequals ( true, deserialized. cantakeitem ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( ( result == ( - 1 ) ) )
[0]: org. junit. assert. assertequals ( true, deserialized. cantakeitem ( 0 ) )
[1]: org. junit. assert. assertequals ( true, deserialized. cantakeitem ( item ) )
[2]: org. junit. assert. assertnotnull ( s. getname ( ) )
[3]: org. junit. assert. assertequals ( s. getname ( ), s. tostring ( ) )
[4]: org. junit. assert. assertequals ( s. getname ( ), s. getname ( ) )

************

************
tgt: org . junit . assert . assertthat ( mcb . size ( ) , org . hamcrest . corematchers . is ( 2 ) )
[0]: org. junit. assert. assertequals ( s. getname ( ), s. getid ( ) )
[1]: org. junit. assert. assertequals ( s. getname ( ), s. getmessage ( ) )
[2]: org. junit. assert. assertequals ( error, allfailed. tostring ( ) )
[3]: org. junit. assert. assertequals ( err, allfailed. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( allfailed. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , result )
[0]: org. junit. assert. assertequals ( error, allfailed. tostring ( ), 0 )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( packagetypeloader )
[3]: org. junit. assert. assertnotnull ( packagetypeloader. loadtype ( ) )
[4]: org. junit. assert. assertnotnull ( content )

************

************
tgt: org . junit . assert . assertequals ( filemask , instance . getfilemask ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( bb, r1 )
[3]: org. junit. assert. assertnotnull ( r1 )
[4]: org. junit. assert. assertequals ( null, r1 )

************

************
tgt: org . junit . assert . asserttrue ( ( var5 . equals ( var6 ) ? ( var5 . hashcode ( ) ) == ( var6 . hashcode ( ) ) : true ) )
[0]: org. junit. assert. assertequals ( expected, r1 )
[1]: org. junit. assert. assertnotnull ( ( r1 ) )
[2]: org. junit. assert. asserttrue ( resultaat. getmeldingen ( ). isempty ( ) )
[3]: org. junit. assert. assertnotnull ( resultaat. getmeldingen ( ) )
[4]: org. junit. assert. assertequals ( 1, resultaat. getmeldingen ( ). length )

************

************
tgt: org . junit . assert . assertequals ( resultwhentrue , alldrugs . size ( ) )
[0]: org. junit. assert. assertnull ( resultaat. getmeldingen ( ) )
[1]: org. junit. assert. assertequals ( 0, resultaat. getmeldingen ( ). length )
[2]: org. junit. assert. assertnotnull ( decodedstring )
[3]: org. junit. assert. assertequals ( null, decodedstring )
[4]: org. junit. assert. assertequals ( decodedstring, null )

************

************
tgt: org . junit . assert . assertequals ( 1 , categoriesandthreadscount )
[0]: org. junit. assert. assertnull ( decodedstring )
[1]: org. junit. assert. assertequals ( decodedstring, expected )
[2]: org. junit. assert. assertequals ( id. get ( ), dummy )
[3]: org. junit. assert. assertequals ( id. get ( ), dummy. get ( ) )
[4]: org. junit. assert. assertnotnull ( id. get ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( dummy, id. get ( ) )
[1]: org. junit. assert. assertequals ( id. get ( ), dummy. getid ( ) )
[2]: org. junit. assert. assertequals ( subscriptionobjecttype. thread, dbo2. getobjecttype ( ) )
[3]: org. junit. assert. assertnotnull ( dbo2. getobjecttype ( ) )
[4]: org. junit. assert. assertnotnull ( dbo2 )

************

************
tgt: org . junit . assert . assertnotnull ( informe . getid ( ) )
[0]: org. junit. assert. assertequals ( subscriptionobjecttype. thread. name ( ), dbo2 )
[1]: org. junit. assert. assertequals ( subscriptionobjecttype. thread, dbo2 )
[2]: org. junit. assert. assertequals ( 1, result. getresultsize ( ) )
[3]: org. junit. assert. assertequals ( 0, result. getresultsize ( ) )
[4]: org. junit. assert. assertequals ( 2, result. getresultsize ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( 3, result. getresultsize ( ) )
[1]: org. junit. assert. assertequals ( 5, result. getresultsize ( ) )
[2]: org. junit. assert. assertequals ( 1, httpclientconfig. getcertpath ( ) )
[3]: org. junit. assert. assertequals ( 1, httpclientconfig. getcertpath ( ). size ( ) )
[4]: org. junit. assert. asserttrue ( ( ( httpclientconfig. getcertpath ( ) ) == 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( deleted )
[0]: org. junit. assert. asserttrue ( ( ( httpclientconfig. getcertpath ( ) )!= null ) )
[1]: org. junit. assert. assertequals ( 0, httpclientconfig. getcertpath ( ) )
[2]: org. junit. assert. asserttrue ( reverseimagexml. exists ( ) )
[3]: org. junit. assert. assertequals ( reverseimage, reverseimage2xml )
[4]: org. junit. assert. asserttrue ( reverseimage. exists ( ) )

************

************
tgt: org . junit . assert . assertequals ( nodeid , copy . getnodeid ( ) )
[0]: org. junit. assert. asserttrue ( reverseimagexml. isempty ( ) )
[1]: org. junit. assert. assertnotnull ( reverseimage )
[2]: org. junit. assert. assertnotnull ( parsejettyoptions )
[3]: org. junit. assert. assertequals ( null, parsejettyoptions )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), lessthan200 )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), lessthan200 )
[1]: org. junit. assert. assertequals ( 1, lessthan200. size ( ) )
[2]: org. junit. assert. assertequals ( 0, lessthan200. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, hitcount )

************

************
tgt: org . junit . assert . assertsame ( merged , epi . getpolicy ( ) )
[0]: org. junit. assert. assertequals ( 1, maximumsubpath. maxpathsum ( right ) )
[1]: org. junit. assert. assertequals ( 1, maxpathsum ( right ) )
[2]: org. junit. assert. assertequals ( 0, maximumsubpath. maxpathsum ( right ) )
[3]: org. junit. assert. assertequals ( 1, maximumsubpath. maxpathsum ( left ) )
[4]: org. junit. assert. assertequals ( null, maxpathsum ( right ) )

************

************
tgt: org . junit . assert . asserttrue ( ac . contains ( subset ) )
[0]: org. junit. assert. assertnotnull ( info. getencodedusername ( ) )
[1]: org. junit. assert. assertequals ( null, info. getencodedusername ( ) )
[2]: org. junit. assert. assertnotnull ( consumer )
[3]: org. junit. assert. asserttrue ( ( consumer instanceof org. odata4j. cxf. consumer. odatacxfconsumer ) )
[4]: org. junit. assert. assertthat ( consumer, org. hamcrest. matchers. is ( consumer ) )

************

************
tgt: org . junit . assert . assertequals ( "valid" , actual )
[0]: org. junit. assert. assertnull ( consumer )
[1]: org. junit. assert. assertequals ( org. odata4j. cxf. consumer. odatacxfconsumer. class, consumer )
[2]: org. junit. assert. assertnotnull ( metadata. getjsonobject ( ) )
[3]: org. junit. assert. assertnotnull ( unit. getjsonobject ( ) )
[4]: org. junit. assert. assertnotnull ( builder. getjsonobject ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertnotnull ( materialized. getjsonobject ( ) )
[1]: org. junit. assert. assertnotnull ( parser. getjsonobject ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4, 5, 6 ), reversed )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4, 5 ), reversed )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4 ), reversed )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: , reversed )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( getvalue ( ) )
[3]: org. junit. assert. assertequals ( 1, getvalue ( ) )
[4]: org. junit. assert. assertequals ( 0, getvalue ( ) )

************

************
tgt: org . junit . assert . asserttrue ( "" , r . equals ( "经\"费收\"入\"aaa-100" ) )
[0]: , getvalue ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, events. size ( ) )
[3]: org. junit. assert. assertarrayequals ( events. toarray ( ), new java. lang. object [ ] { thdata } )
[4]: org. junit. assert. assertnotnull ( smsd1. getquery ( ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . string ( data ) , "hsweb" )
[0]: org. junit. assert. assertequals ( 0, smsd1. getquery ( ). getatomcount ( ) )
[1]: org. junit. assert. assertequals ( com. github. aureliano. evtbridge. core. eventbridg. instance ( ), null )
[2]: org. junit. assert. assertequals ( null, com. github. aureliano. evtbridge. core. eventbridg. instance ( ) )
[3]: org. junit. assert. assertequals ( 0, com. github. aureliano. evtbridge. core. eventbridg. instance ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, com. github. aureliano. evtbridge. core. eventbridg. instance ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( content . company , contentstore . getcontent ( ) )
[0]: org. junit. assert. assertequals ( null, com. github. aureliano. evtbridge. core. eventbridg. instance ( ). get ( ) )
[1]: org. junit. assert. assertnotnull ( resultpred )
[2]: org. junit. assert. assertnull ( resultpred )
[3]: org. junit. assert. assertequals ( predcode, resultpred )
[4]: org. junit. assert. assertnull ( resultpred )

************

************
tgt: org . junit . assert . assertequals ( expected , selectorlist )
[0]: ) )
[1]: org. junit. assert. assertequals ( jsondocument. tostring ( ), result. tostring ( ) )
[2]: org. junit. assert. assertequals ( jsonstring. tostring ( ), result. tostring ( ) )
[3]: org. junit. assert. assertequals ( json document. tostring ( ), result. tostring ( ) )
[4]: org. junit. assert. assertequals ( jsonresponse. tostring ( ), result. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( range . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertequals ( json. tostring ( ), result. tostring ( ) )
[1]: org. junit. assert. assertequals ( 1, report. getitems ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, report. getitems ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 3, report. getitems ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, report. getitems ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 0 , output . getrecords ( ) . get ( "lane" ) . size ( ) )
[0]: org. junit. assert. assertequals ( 2, report. getitems ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )
[3]: org. junit. assert. assertequals ( 0, roles. size ( ) )
[4]: org. junit. assert. assertequals ( 1, roles. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( map , result )
[0]: org. junit. assert. assertequals ( true, _c. canconvertto ( java. lang. string. class ) )
[1]: org. junit. assert. assertequals ( false, _c. canconvertto ( java. lang. string. class ) )
[2]: org. junit. assert. assertequals ( null, _c. canconvertto ( java. lang. string. class ) )
[3]: org. junit. assert. assertequals ( true, _c. canconvertto ( com. sjl. dsl4xml. support. convert. primitivedouble. class ) )
[4]: org. junit. assert. assertequals ( null, _c. canconvertto ( com. sjl. dsl4xml. support. convert. primitivedouble. class ) )

************

************
tgt: org . junit . assert . assertthat ( config . getcacheexpireshours ( ) , org . hamcrest . corematchers . equalto ( validcacheexpireshours ) )
[0]: org. junit. assert. assertequals ( true, result )
[1]: org. junit. assert. assertequals ( false, result )
[2]: org. junit. assert. assertequals ( 1, result )
[3]: org. junit. assert. assertfalse ( result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( p . i , t . i )
[0]: org. junit. assert. assertequals ( 1, users. size ( ) )
[1]: org. junit. assert. assertnotnull ( users )
[2]: org. junit. assert. assertequals ( 0, users. size ( ) )
[3]: org. junit. assert. asserttrue ( users. isempty ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( ( values [ i ] ) - ( values [ ( i - 1 ) ] ) ) >= 1 ) )
[0]: org. junit. assert. assertnotnull ( factory. getsslcontext ( ) )
[1]: org. junit. assert. assertequals ( cf, factory. getsslcontext ( ) )
[2]: org. junit. assert. assertnull ( factory. getsslcontext ( ) )
[3]: org. junit. assert. assertequals ( 1, factory. getsslcontext ( ) )
[4]: org. junit. assert. assertequals ( 0, factory. getsslcontext ( ) )

************

************
tgt: org . junit . assert . assertequals ( a1 , a2 )
[0]: org. junit. assert. assertequals ( controle ( context ), context. getmessage ( ) )
[1]: org. junit. assert. assertequals ( controle ( context ), context )
[2]: org. junit. assert. assertequals ( controle ( context ), context. tostring ( ) )
[3]: org. junit. assert. assertequals ( controle ( context ), context. next ( ) )
[4]: org. junit. assert. assertequals ( controle ( context ), context2 )

************

************
tgt: org . junit . assert . assertequals ( header , org . apache . hadoop . fs . contentsummary . getheader ( true ) )
[0]: org. junit. assert. asserttrue ( isvalid )
[1]: org. junit. assert. asserttrue ( doc. isvalid ( ) )
[2]: org. junit. assert. asserttrue ( doc. isvalid ( doc ) )
[3]: org. junit. assert. asserttrue ( doc. iss ( doc ) )
[4]: org. junit. assert. assertfalse ( doc. isvalid ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( pollsquestion )
[0]: org. junit. assert. assertsame ( object, lookupmanager. lookupworkingobject ( object ) )
[1]: org. junit. assert. assertequals ( object, lookupmanager. lookupworkingobject ( object ) )
[2]: org. junit. assert. assertsame ( object, lookupmanager. lookupworkingobject ( object. guaranteed ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( expectedvmargs , arguments . tostring ( ) )
[0]: org. junit. assert. assertnotnull ( read )
[1]: org. junit. assert. assertnull ( read )
[2]: org. junit. assert. assertequals ( null, read )
[3]: org. junit. assert. assertequals ( read, null )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , issues . size ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( java. lang. string. class, result )
[3]: org. junit. assert. assertnull ( result )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( a1 [ i ] , a2 [ i ] )
[0]: org. junit. assert. assertequals ( com. thoughtworks. qdox. builder. impl. double. class, com. thoughtworks. qdox. builder. impl. evaluatingvisitor. unaryresulttype ( null ) )
[1]: org. junit. assert. assertequals ( com. thoughtworks. qdox. builder. impl. double. class, com. thoughtworks. qdox. builder. impl. evaluatingvisitor. unaryresulttype ( 0 ) )
[2]: org. junit. assert. assertequals ( com. thoughtworks. qdox. builder. impl. float. class, com. thoughtworks. qdox. builder. impl. evaluatingvisitor. unaryresulttype ( null ) )
[3]: org. junit. assert. assertequals ( com. thoughtworks. qdox. builder. impl. double. class, com. thoughtworks. qdox. builder. impl. evaluatingvisitor. unaryresulttype ( 1 ) )
[4]: org. junit. assert. assertequals ( java. lang. double. class, com. thoughtworks. qdox. builder. impl. evaluatingvisitor. unaryresulttype ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( targetfile . exists ( ) )
[0]: org. junit. assert. assertnull ( resolved )
[1]: org. junit. assert. assertequals ( value, sn. hashcode ( ) )
[2]: org. junit. assert. assertnotnull ( screenresolution )
[3]: org. junit. assert. assertnull ( screenresolution )
[4]: org. junit. assert. assertequals ( 1, screenresolution. length )

************

************
tgt: org . junit . assert . asserttrue ( ( ( list . getinternallist ( ) . size ( ) ) == 1 ) )
[0]: org. junit. assert. assertequals ( null, screenresolution )
[1]: org. junit. assert. assertequals ( 1, screenresolution. index )
[2]: org. junit. assert. assertequals ( org. eclipse. collections. impl. string. immutable. codepointlisttest. unicode_string, sequence )
[3]: org. junit. assert. assertequals ( org. eclipse. collections. impl. string. immutable. codepointlisttest. unicode_string, sequence )
[4]: org. junit. assert. assertsame ( org. eclipse. collections. impl. string. immutable. codepointlisttest. unicode_string, sequence )

************

************
tgt: org . junit . assert . assertequals ( expectedlines , progresslines )
[0]: org. junit. assert. assertnotnull ( sequence )
[1]: org. junit. assert. assertnull ( sequence )
[2]: org. junit. assert. assertequals ( true, result )
[3]: org. junit. assert. assertequals ( false, result )
[4]: org. junit. assert. assertthat ( datausage. crontime ( ), org. hamcrest. matchers. is ( org. codice. ddf. resourcemanagement. usage. datausagetest. time ) )

************

************
tgt: org . junit . assert . assertnull ( missingddmcontent )
[0]: org. junit. assert. assertthat ( datausage. crontime ( ), org. hamcrest. matchers. equalto ( org. codice. ddf. resourcemanagement. usage. datausagetest. time ) )
[1]: org. junit. assert. assertthat ( datausage. crontime ( ), org. hamcrest. matchers. contains ( org. codice. ddf. resourcemanagement. usage. datausagetest. time ) )
[2]: org. junit. assert. assertthat ( datausage. crontime ( ), org. hamcrest. matchers. is ( org. codice. ddf. resourcemanagement. usage. datausagetest. time ) ) and
[3]: org. junit. assert. assertnotnull ( datausage. crontime ( ) )
[4]: org. junit. assert. assertthat ( q. getreachabilityparameters ( ). getignorefilters ( ), org. hamcrest. matchers. equalto ( true ) )

************

************
tgt: org . junit . assert . assertfalse ( channel . haspendingdata ( ) )
[0]: org. junit. assert. assertthat ( q, org. hamcrest. matchers. equalto ( q. getreachabilityparameters ( ). getignorefilters ( ) ) )
[1]: org. junit. assert. assertthat ( q. getreachabilityparameters ( ), org. hamcrest. matchers. equalto ( getignorefilters ( ) ) )
[2]: org. junit. assert. assertthat ( q )
[3]: . getignorefilters ( ) )
[4]: org. junit. assert. assertequals ( writer. tostring ( ), testlog )

************

************
tgt: org . junit . assert . asserttrue ( ( result instanceof java . lang . string ) )
[0]: org. junit. assert. assertequals ( testlog, writer. tostring ( ) )
[1]: org. junit. assert. assertequals ( writer. tostring ( ), testlog. trim ( ) )
[2]: org. junit. assert. assertequals ( writer. tostring ( ), testlog. tostring ( ) )
[3]: org. junit. assert. assertequals ( writer. tostring ( ), testlog. length ( ) )
[4]: org. junit. assert. assertnotnull ( id3v2tag. getyear ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( orga<sp>yearpertest. getid ( ), id3v2tag. getyear ( ) )
[1]: org. junit. assert. assertequals ( null, id3v2tag. getyear ( ) )
[2]: org. junit. assert. assertequals ( orga<sp>yearpertest. getbranch, id3v2tag. getyear ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( secondlockforonevalue )

************

************
tgt: org . junit . assert . assertnotnull ( id )
[0]: org. junit. assert. asserttrue ( material. equals ( readmaterial ) )
[1]: org. junit. assert. assertfalse ( material. equals ( readmaterial ) )
[2]: org. junit. assert. assertequals ( material. equals ( readmaterial ), true )
[3]: org. junit. assert. assertequals ( material. equals ( readmaterial ), readmaterial )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( pcrmanifest )
[0]: org. junit. assert. assertequals ( 1, resultcollection. size ( ) )
[1]: org. junit. assert. assertequals ( 0, resultcollection. size ( ) )
[2]: org. junit. assert. assertequals ( org. apache. flink. test. operators. remoteenvironmentitcase. s, resultcollection. size ( ) )
[3]: org. junit. assert. assertequals ( 3, resultcollection. size ( ) )
[4]: org. junit. assert. assertequals ( 9, resultcollection. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , hexstring )
[0]: org. junit. assert. assertfalse ( m_detector. isservicedetected ( m_server ) )
[1]: org. junit. assert. assertfalse ( m_detector. isservicedetected ( null ) )
[2]: org. junit. assert. assertfalse ( m_detector. isservicedetected ( hu ) )
[3]: org. junit. assert. assertfalse ( m_detector. isservicedetected ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( hooks )
[0]: org. junit. assert. assertequals ( 1, eventsubscription. geteventname ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( eventsubscription. geteventname ( ) )
[2]: org. junit. assert. assertequals ( 0, eventsubscription. geteventname ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, rules )
[4]: org. junit. assert. assertequals ( 0, attr. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( instance . start ( ) )
[0]: org. junit. assert. assertequals ( 1, attr. size ( ) )
[1]: org. junit. assert. assertequals ( 0, attribute. size ( ) )
[2]: org. junit. assert. assertequals ( 0, attr )
[3]: ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( missingfilename ), expected )

************

************
tgt: org . junit . assert . assertequals ( 0 , tasks . size ( ) )
[0]: org. junit. assert. assertequals ( 1, expected. size ( ) )
[1]: org. junit. assert. assertequals ( true, expected. getmessage ( ). contains ( missingfilename ) )
[2]: org. junit. assert. assertequals ( 1, expected. errors. size ( ) )
[3]: org. junit. assert. assertnotnull ( expected )
[4]: org. junit. assert. assertequals ( 1, commandargumentcaptor. getvalue ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( apikey )
[0]: org. junit. assert. assertequals ( 0, commandargumentcaptor. getvalue ( ) )
[1]: org. junit. assert. assertequals ( null, commandargumentcaptor. getvalue ( ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, copy. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( workertool . getmaxworkers ( ) , org . hamcrest . matchers . equalto ( 1 ) )
[0]: org. junit. assert. assertequals ( 0, copy. size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( copy. size ( ) ) == 1 ) )
[2]: org. junit. assert. assertequals ( 3, copy. size ( ) )
[3]: org. junit. assert. asserttrue ( ( ( copy. size ( ) ) == 0 ) )
[4]: org. junit. assert. assertnotnull ( neo )

************

************
tgt: org . junit . assert . asserttrue ( geldig )
[0]: org. junit. assert. assertnull ( neo )
[1]: org. junit. assert. assertequals ( node, neo )
[2]: org. junit. assert. assertnotnull ( neo. next ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( new java. lang. float ( 0 ), maxpreference )

************

************
tgt: org . junit . assert . assertnotnull ( afetipodescuento )
[0]: org. junit. assert. assertequals ( new java. lang. float ( 1 ), maxpreference )
[1]: org. junit. assert. assertequals ( new java. lang. float ( 1.0 ), maxpreference )
[2]: org. junit. assert. assertequals ( null, maxpreference )
[3]: org. junit. assert. assertnotnull ( maxpreference )
[4]: org. junit. assert. assertnull ( cz. zcu. kiv. jop. util. arrayutils. toobjectarray ( ( ( boolean [ ] ) ( null ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , fxform . getelements ( ) . size ( ) )
[0]: org. junit. assert. assertnull ( cz. zcu. kiv. jop. util. arrayutils. toobjectarray ( ( ( int [ ] ) ( null ) ) ) )
[1]: org. junit. assert. assertnull ( cz. zcu. kiv. jop. util. arrayutils. toobjectarray ( ( ( short [ ] ) ( null ) ) ) )
[2]: org. junit. assert. assertnull ( cz. zcu. kiv. jop. util. arrayutils. toobjectarray ( ( ( byte [ ] ) ( null ) ) ) )
[3]: org. junit. assert. assertnull ( cz. zcu. kiv. jop. util. arrayutils. toobjectarray ( ( ( short [ ] ) ( null ) ) ) ) )
[4]: org. junit. assert. assertnotnull ( handelingenperkeer )

************

************
tgt: org . junit . assert . assertequals ( sdf . format ( new java . util . date ( ) ) , year )
[0]: org. junit. assert. assertequals ( 1, ( ( int ) ( handelingenperkeer ) ) )
[1]: org. junit. assert. assertequals ( null, handelingenperkeer )
[2]: ) )
[3]: 
[4]: org. junit. assert. assertequals ( true, out. firstelement ( ). get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( handler . handlerequest ( session , request , response ) )
[0]: org. junit. assert. assertequals ( 1, c )
[1]: org. junit. assert. assertequals ( 0, c )
[2]: org. junit. assert. assertequals ( int_1, c )
[3]: org. junit. assert. assertequals ( 1, c, 0 )
[4]: org. junit. assert. assertequals ( 1, c, 3 )

************

************
tgt: org . junit . assert . assertfalse ( inputformat . issplitable ( null , null ) )
[0]: org. junit. assert. assertequals ( department2. getname ( ), existingcomplainttype. getname ( ) )
[1]: org. junit. assert. assertequals ( departments. tostring ( ), existingcomplainttype. getname ( ) )
[2]: org. junit. assert. assertequals ( department1. getname ( ), existingcomplainttype. getname ( ) )
[3]: org. junit. assert. assertequals ( departments. getname ( ), existingcomplainttype. getname ( ) )
[4]: org. junit. assert. assertequals ( departments. tostring ( ), existingcomplainttype. getname ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( processinstance )
[0]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ ] [ ] { new java. lang. string [ ] { } } ) )
[1]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ 0 ] [ ] ) )
[2]: org. junit. assert. assertthat ( results, is ( new java. util. arraylist < java. lang. string > ( ) ) )
[3]: , results )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( hits . size ( ) ) >= 0 ) )
[0]: org. junit. assert. assertthat ( monitor, monitor ( false, false, false ) )
[1]: org. junit. assert. assertthat ( monitor, monitor ( false, true, false ) )
[2]: org. junit. assert. assertnotnull ( auth )
[3]: org. junit. assert. assertnotnull ( udanametoshow )
[4]: org. junit. assert. assertnull ( udanametoshow )

************

************
tgt: org . junit . assert . assertnotnull ( outboundadmindistunsecuredendpoint )
[0]: org. junit. assert. assertequals ( udanametoshow, ""a"" )
[1]: org. junit. assert. assertequals ( udanametoshow, ""name"" )
[2]: org. junit. assert. assertequals ( udanametoshow, ""test"" )
[3]: org. junit. assert. assertthat ( results, contains ( null ) )
[4]: org. junit. assert. assertthat ( results, contains ( ""test"" ) )

************

************
tgt: org . junit . assert . assertfalse ( ret )
[0]: org. junit. assert. assertthat ( results )
[1]: , results )
[2]: ) )
[3]: org. junit. assert. assertequals ( standarddisk, newdisk. getdescription ( ) )
[4]: org. junit. assert. assertequals ( 16, newdisk. getdescription ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected . next ( ) , testing . next ( ) )
[0]: org. junit. assert. assertnotnull ( newdisk. getdescription ( ) )
[1]: org. junit. assert. assertequals ( 16, newdisk. getdescription ( ). length )
[2]: ) )
[3]: org. junit. assert. asserttrue ( isvalidsignature ( forgedmessage, forgedsignature ) )
[4]: org. junit. assert. asserttrue ( validator. isvalidsignature ( forgedmessage, forgedsignature ) )

************

************
tgt: org . junit . assert . assertequals ( numentities , numentitieswritten )
[0]: org. junit. assert. asserttrue ( decode. isvalidsignature ( forgedmessage, forgedsignature ) )
[1]: org. junit. assert. assertfalse ( isvalidsignature ( forgedmessage, forgedsignature ) )
[2]: ) )
[3]: org. junit. assert. assertthat ( aclspecs, org. hamcrest. matchers. hassize ( org. hamcrest. matchers. empty ( ) ) )
[4]: org. junit. assert. assertthat ( evaluated )

************

************
tgt: org . junit . assert . assertnull ( cmd . execute ( ) )
[0]: org. junit. assert. assertfalse ( evaluated )
[1]: org. junit. assert. asserttrue ( evaluated )
[2]: , evaluated )
[3]: ) )
[4]: org. junit. assert. assertequals ( expected, list )

************

************
tgt: org . junit . assert . assertequals ( 3 , visitor . getshards ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( expected, java. util. arrays. aslist ( list ) )
[1]: org. junit. assert. assertequals ( expected, lists )
[2]: org. junit. assert. assertequals ( expected, set )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, events. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , members . size ( ) )
[0]: org. junit. assert. assertequals ( 1, collection. size ( ) )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 1,
[3]: org. junit. assert. assertequals ( 1, 1 )
[4]: org. junit. assert. assertequals ( false, iterator. hasnext ( ) )

************

************
tgt: org . junit . assert . assertthat ( musics , org . hamcrest . matchers . empty ( ) )
[0]: org. junit. assert. assertequals ( true, iterator. hasnext ( ) )
[1]: org. junit. assert. assertnull ( evaluate )
[2]: org. junit. assert. assertnotnull ( evaluate )
[3]: , evaluate )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( ( initialtime < lastaccess ) )
[0]: 
[1]: org. junit. assert. assertnotnull ( incrementpoolontimeoutconnectionacquiringstrategy. getconnection ( connectionrequestcontext ) )
[2]: org. junit. assert. assertnotnull ( incrementpoolontimeoutconnectionacquiringstrategy )
[3]: org. junit. assert. assertsame ( connection, incrementpoolontimeoutconnectionacquiringstrategy )
[4]: org. junit. assert. assertnull ( incrementpoolontimeoutconnectionacquiringstrategy )

************

************
tgt: org . junit . assert . assertequals ( 1 , issues . length )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( hash )
[2]: org. junit. assert. assertnull ( hash )
[3]: org. junit. assert. assertnotnull ( hashcode )
[4]: ) )

************

************
tgt: org . junit . assert . assertsame ( factory , factory2 )
[0]: )
[1]: org. junit. assert. assertthat ( orderlinegroup. getparent ( ), org. hamcrest. corematchers. equalto ( orderline ) )
[2]: org. junit. assert. assertequals ( orderline, orderlinegroup. getparent ( ) )
[3]: org. junit. assert. assertthat ( orderline. getparent ( ), org. hamcrest. corematchers. equalto ( orderline ) )
[4]: org. junit. assert. assertnotnull ( orderlinegroup. getparent ( ) )

************

************
tgt: org . junit . assert . assertfalse ( cache . remove ( 1 , p2 , 0 , 4 ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( actual )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertnull ( actual )
[4]: org. junit. assert. assertequals ( null, actual )

************

************
tgt: org . junit . assert . assertequals ( expectedoffset , offset )
[0]: org. junit. assert. assertequals ( s, actual )
[1]: org. junit. assert. assertequals ( ( ( double ) ( 8 ) ), result. getdoublevalue ( ), 0 )
[2]: org. junit. assert. assertequals ( ( ( double ) ( 8 ) ), result. getdoublevalue ( ) )
[3]: org. junit. assert. assertequals ( ( ( double ) ( 8 ) ), result. getdoublevalue ( 0 ), 0 )
[4]: org. junit. assert. assertequals ( cefmessage, decidesource ( cefmessage, rawmessage ) )

************

************
tgt: org . junit . assert . assertnull ( cache . getentryfordecrypt ( otheridentifier ) )
[0]: org. junit. assert. assertequals ( cefmessage, codec. decidesource ( cefmessage, rawmessage ) )
[1]: org. junit. assert. assertequals ( cefmessage, org. graylog2. plugins. cef. parser. decidesource ( cefmessage, rawmessage ) )
[2]: org. junit. assert. assertequals ( cefmessage, s. decidesource ( cefmessage, rawmessage ) )
[3]: org. junit. assert. assertequals ( cefmessage, org. graylog2. plugin. cef. parser. decidesource ( cefmessage, rawmessage ) )
[4]: org. junit. assert. assertnotnull ( allpatientlist )

************

************
tgt: org . junit . assert . assertequals ( testcertificatefile , tlscertificateauthorityclientcommandline . getcertificatedirectory ( ) )
[0]: org. junit. assert. assertnull ( allpatientlist )
[1]: org. junit. assert. asserttrue ( allpatientlist. isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, allpatientlist. length )
[3]: org. junit. assert. assertequals ( 0, allpatientlist )
[4]: org. junit. assert. asserttrue ( org. geotools. referencing. factory. logger. isavailable ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , collection . getmaximumsize ( ) )
[0]: org. junit. assert. asserttrue ( provider. isavailable ( ) )
[1]: org. junit. assert. assertfalse ( provider. isavailable ( ) )
[2]: org. junit. assert. asserttrue ( parser. isavailable ( ) )
[3]: org. junit. assert. asserttrue ( org. geotools. referencing. factory. utils. isavailable ( ) )
[4]: org. junit. assert. assertfalse ( matcher. matches ( null ) )

************

************
tgt: org . junit . assert . assertfalse ( canaccess )
[0]: org. junit. assert. assertequals ( s. get ( ), 2.0 )
[1]: org. junit. assert. assertequals ( s. get ( ), 2.0 }
[2]: org. junit. assert. assertequals ( s, s. get ( ) )
[3]: org. junit. assert. assertequals ( s. get ( ), 1.0, 0.0 )
[4]: org. junit. assert. assertequals ( s. get ( ), 2.0, 0.0 )

************

************
tgt: org . junit . assert . assertarrayequals ( new java . lang . string [ ] { "epsg:3035" , "epsg:4258" } , wms . getcrss ( ) )
[0]: org. junit. assert. assertequals ( result, map )
[1]: org. junit. assert. assertthat ( conv, org. hamcrest. matchers. is ( 1 ) )
[2]: org. junit. assert. assertthat ( conv, org. hamcrest. matchers. is ( 0 ) )
[3]: org. junit. assert. assertthat ( conv, org. hamcrest. matchers. is ( 100 ) )
[4]: org. junit. assert. assertthat ( conv, org. hamcrest. matchers. is ( 20 ) )

************

************
tgt: org . junit . assert . assertequals ( first , second )
[0]: org. junit. assert. assertthat ( conv, org. hamcrest. matchers. is ( 50 ) )
[1]: org. junit. assert. assertnotnull ( processorchain )
[2]: org. junit. assert. assertnull ( processorchain )
[3]: org. junit. assert. assertequals ( processorchain, processorchain )
[4]: org. junit. assert. assertequals ( 0, processorchain. errors )

************

************
tgt: org . junit . assert . asserttrue ( retrievedtables . contains ( table ) )
[0]: )
[1]: org. junit. assert. assertnotnull ( version )
[2]: org. junit. assert. assertnull ( version )
[3]: org. junit. assert. assertequals ( ""foo"", version )
[4]: org. junit. assert. assertequals ( null, version )

************

************
tgt: org . junit . assert . assertequals ( expected , multimap . tomap ( ) )
[0]: org. junit. assert. assertequals ( ""bar"", version )
[1]: org. junit. assert. assertequals ( com. vaadin. flow. component. compositetest. class, composite. getcontent ( ). getclass ( ) )
[2]: org. junit. assert. assertequals ( com. vaadin. flow. component. compositetest. data, composite. getcontent ( ) )
[3]: org. junit. assert. assertequals ( com. vaadin. flow. component. compositetest. customcomponent. getcontent ( ), composite )
[4]: org. junit. assert. assertnotnull ( composite. getcontent ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( obj instanceof java . lang . string ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( result, c )
[2]: org. junit. assert. assertequals ( 1, next. length )
[3]: org. junit. assert. assertequals ( 0, next. length )
[4]: org. junit. assert. assertequals ( 3, next. length )

************

************
tgt: org . junit . assert . assertnotnull ( this . model . getrules ( ) )
[0]: org. junit. assert. assertequals ( 2, next. length )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, s. method ( ) )
[3]: org. junit. assert. assertequals ( 1, trackencoded. gettags ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 2, trackencoded. gettags ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( file . isopen ( ) )
[0]: org. junit. assert. assertnotnull ( trackencoded. gettags ( ) )
[1]: org. junit. assert. assertequals ( 0, trackencoded. gettags ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, trackencoded. gettags ( ). length )
[3]: org. junit. assert. assertequals ( ref, ref. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( iae. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( parentidentity , deserializedparentid )
[0]: org. junit. assert. assertequals ( ""foo"", iae. getmessage ( ) )
[1]: org. junit. assert. assertequals ( ""bar"", iae. getmessage ( ) )
[2]: org. junit. assert. assertequals ( string, iae. getmessage ( ) )
[3]: org. junit. assert. assertequals ( null, iae. getmessage ( ) )
[4]: org. junit. assert. asserttrue ( samplemsa. equals ( after, after ) )

************

************
tgt: org . junit . assert . assertfalse ( result . passedvalidation ( ) )
[0]: org. junit. assert. assertequals ( true, samplemsa. equals ( after, after ) )
[1]: org. junit. assert. asserttrue ( org. biojava. nbio. structure. align. xml. equals ( before, after ) )
[2]: org. junit. assert. asserttrue ( samplemsa. equals ( before, after ) )
[3]: org. junit. assert. asserttrue ( org. biojava. nbio. structure. align. xml. equals ( after, after ) )
[4]: org. junit. assert. assertequals ( 1, branch_conditions. size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedarray , originalarray )
[0]: org. junit. assert. assertfalse ( de. jonato. jfxc. info. version. compareversions ( version1, version2 ) )
[1]: org. junit. assert. asserttrue ( de. jonato. jfxc. info. version. compareversions ( version1, version2 ) )
[2]: org. junit. assert. assertnull ( de. jonato. jfxc. info. version. compareversions ( version1, version2 ) )
[3]: org. junit. assert. assertnotnull ( de. jonato. jfxc. info. version. compareversions ( version1, version2 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( graph . gettokens ( ) , org . hamcrest . matchers . is ( expected ) )
[0]: org. junit. assert. assertthat ( validator1. hashcode ( ), org. hamcrest. matchers. is ( validator2. hashcode ( ) ) )
[1]: org. junit. assert. assertthat ( validator1. hashcode ( ), org. hamcrest. matchers. is ( validator1. hashcode ( ) ) )
[2]: org. junit. assert. assertthat ( validator1. hashcode ( ), org. hamcrest. matchers. equalto ( validator2. hashcode ( ) ) )
[3]: org. junit. assert. assertequals ( validator1. hashcode ( ), validator2. hashcode ( ) )
[4]: org. junit. assert. assertnotnull ( validator1. hashcode ( ) )

************

************
tgt: org . junit . assert . assertequals ( driver . getcontexthandles ( ) . size ( ) , 2 )
[0]: org. junit. assert. assertequals ( com. google. common. primitives. bytes. aslist ( new byte [ ] { 1, 2, 6 } ), io. grpc. internal. messagedeframertest. bytes ( producer. getvalue ( ). next ( ) ) )
[1]: org. junit. assert. assertequals ( com. google. common. primitives. bytes. aslist ( new byte [ ] { 5, 6 } ), io. grpc. internal. messagedeframertest. bytes ( producer. getvalue ( ). next ( ) ) )
[2]: org. junit. assert. assertequals ( com. google. common. primitives. bytes. aslist ( new byte [ ] { 5, 7 } ), io. grpc. internal. messagedeframertest. bytes ( producer. getvalue ( ). next ( ) ) )
[3]: org. junit. assert. assertequals ( com. google. common. primitives. bytes. aslist ( new byte [ ] { 1, 2, 5 } ), io. grpc. internal. messagedeframertest. bytes ( producer. getvalue ( ). next ( ) ) )
[4]: org. junit. assert. assertequals ( com. google. common. primitives. bytes. aslist ( new byte [ ] { 1, 1, 6 } ), io. grpc. internal. messagedeframertest. bytes ( producer. getvalue ( ). next ( ) ) )

************

************
tgt: org . junit . assert . assertnull ( pn . getfamilyname2 ( ) )
[0]: org. junit. assert. asserttrue ( animation. isfinished ( ) )
[1]: org. junit. assert. assertequals ( 1, animation. isfinished ( ) )
[2]: org. junit. assert. assertequals ( 0, animation. isfinished ( ) )
[3]: org. junit. assert. assertnotnull ( theresult )
[4]: org. junit. assert. assertthat ( jsonenvelope, org. hamcrest. core. is. is ( testmetadataenvelopedfrom ( testmetadata ) ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( "select<sp>e1,<sp>e2<sp>from<sp>pm1.g1<sp>where<sp>e2<sp>=<sp>5" ) , datamanager . getqueries ( ) )
[0]: org. junit. assert. assertthat ( jsonenvelope, org. hamcrest. corematchers. is ( testmetadataenvelopedfrom ( testmetadata ) ) )
[1]: org. junit. assert. assertthat ( jsonenvelope, org. hamcrest. corematchers. is ( java. util. collections. singletonlist ( testmetadata ) ) )
[2]: ( jsonenvelope ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertnull ( cache . getstatus ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: ) )
[3]: )
[4]: org. junit. assert. asserttrue ( v )

************

************
tgt: org . junit . assert . assertsame ( input , e )
[0]: org. junit. assert. assertnotnull ( executor )
[1]: org. junit. assert. asserttrue ( ( ( executor. thread ) > 0 ) )
[2]: org. junit. assert. asserttrue ( ( ( executor. size ( ) ) > 0 ) )
[3]: org. junit. assert. assertnull ( executor )
[4]: )

************

************
tgt: org . junit . assert . assertnotnull ( store . get ( ) )
[0]: org. junit. assert. asserttrue ( e. isequivalent ( shuffledciphertexts. getat ( i ) ) )
[1]: org. junit. assert. asserttrue ( verify. isequivalent ( shuffledciphertexts. getat ( i ) ) )
[2]: org. junit. assert. asserttrue ( e. isequivalent ( shuffledciphertext ) )
[3]: org. junit. assert. asserttrue ( dec. isequivalent ( shuffledciphertexts. getat ( i ) ) )
[4]: org. junit. assert. assertnotnull ( mutant. mutateandcall ( null, mutant ) )

************

************
tgt: org . junit . assert . assertsame ( firstinstance , secondinstance )
[0]: org. junit. assert. assertequals ( null, mutant. mutateandcall ( null, null ) )
[1]: org. junit. assert. assertnull ( mutant. mutateandcall ( null, mutant ) )
[2]: org. junit. assert. assertnotnull ( mutant )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( authentication )

************

************
tgt: org . junit . assert . assertequals ( 2 , com . intendia . gwt . autorest . client . jreresourcebuildertest . rest . many ( ) . tolist ( ) . blockingget ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( id, retrievedobject. getstringvalue ( ) )
[1]: org. junit. assert. assertequals ( object, retrievedobject. getstringvalue ( ) )
[2]: org. junit. assert. assertequals ( object. getstringvalue ( ), retrievedobject. getstringvalue ( ) )
[3]: org. junit. assert. assertequals ( null, retrievedobject. getstringvalue ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( edu . uci . ics . texera . api . utils . testutils . attributeequals ( expectedresults , exactresults , attributenames ) )
[0]: org. junit. assert. assertthat ( cfg. getbreakstring ( ), org. hamcrest. core. is. is ( null ) )
[1]: org. junit. assert. assertthat ( cfg. getbreakstring ( ), org. hamcrest. core. is. is ( data ) )
[2]: org. junit. assert. assertnotnull ( cfg. getbreakstring ( ) )
[3]: org. junit. assert. assertequals ( 0, cfg. getbreakstring ( ). length )
[4]: org. junit. assert. assertequals ( 0, cfg. getbreakstring ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( canafford )
[0]: org. junit. assert. assertequals ( 1, autg. order ( ) )
[1]: org. junit. assert. assertequals ( 0, autg. order ( ) )
[2]: org. junit. assert. assertequals ( 3, autg. order ( ) )
[3]: org. junit. assert. assertequals ( 1, conn2. get ( 0 ) )
[4]: org. junit. assert. assertequals ( 1, conn2. get ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , ( ( int ) ( lambdalist . iterator ( ) . next ( ) ) ) )
[0]: org. junit. assert. assertequals ( null, conn2. get ( 1 ) )
[1]: org. junit. assert. assertequals ( null, conn2. get ( 0 ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( """", element. getattribute ( ""value"" ) )
[4]: org. junit. assert. assertnull ( element. getattribute ( ""value"" ) )

************

************
tgt: org . junit . assert . assertequals ( n , org . kocakosm . pitaya . io . scanf . readbigdecimal ( ) )
[0]: org. junit. assert. assertequals ( """", element. getattribute ( """" ) )
[1]: org. junit. assert. assertnull ( element. getattribute ( 0 ) )
[2]: org. junit. assert. assertequals ( """", element. getattribute ( ""name"" ) )
[3]: org. junit. assert. assertequals ( true, filter. isacceptable ( service ) )
[4]: org. junit. assert. assertnotnull ( ex. getmessage ( ) )

************

************
tgt: org . junit . assert . asserttrue ( exist )
[0]: org. junit. assert. assertequals ( ""foo"", ex. getmessage ( ) )
[1]: org. junit. assert. assertnotnull ( ex. getmessage ( ). tostring ( ) )
[2]: org. junit. assert. assertequals ( null, ex. getmessage ( ) )
[3]: . getmessage ( ) )
[4]: org. junit. assert. assertequals ( 1, results. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( 0, results. size ( ) )
[1]: org. junit. assert. assertequals ( 9, results. size ( ) )
[2]: org. junit. assert. assertequals ( 3, results. size ( ) )
[3]: org. junit. assert. assertequals ( 7, results. size ( ) )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedencodedpayload , actualencodedpayload )
[0]: org. junit. assert. assertequals ( string_2, result )
[1]: org. junit. assert. assertequals ( ""_2, result )
[2]: org. junit. assert. assertequals ( string_1, result )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, counter. value ( ) )

************

************
tgt: org . junit . assert . assertthat ( effect , is ( 0 ) )
[0]: org. junit. assert. assertnotnull ( env )
[1]: org. junit. assert. assertnull ( env )
[2]: org. junit. assert. assertequals ( geom, env )
[3]: org. junit. assert. assertequals ( null, env )
[4]: , env )

************

************
tgt: org . junit . assert . assertthat ( restored , is ( p ) )
[0]: org. junit. assert. assertequals ( 1, responselist. size ( ) )
[1]: org. junit. assert. assertequals ( 0, responselist. size ( ) )
[2]: org. junit. assert. assertnotnull ( responselist )
[3]: org. junit. assert. assertequals ( 2, responselist. size ( ) )
[4]: org. junit. assert. assertequals ( 1, notifications. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( true, b )
[1]: org. junit. assert. assertequals ( result, triggerservice. getallactionsfororganization ( ) )
[2]: org. junit. assert. assertequals ( result, triggerservice. getallactionsfororganization ( ). size ( ) )
[3]: org. junit. assert. assertequals ( result. getallactionsfororganization ( ), keys )
[4]: org. junit. assert. assertequals ( result. getallactionsfororganization ( ). size ( ), 0 )

************

************
tgt: org . junit . assert . assertequals ( 1 , fakerepository . getvalue ( ) )
[0]: org. junit. assert. assertequals ( result, triggerservice. getallactionsfororganization ( ). list ( ) )
[1]: org. junit. assert. assertequals ( 1, i )
[2]: org. junit. assert. assertequals ( i, 1 )
[3]: org. junit. assert. assertequals ( 0, i )
[4]: org. junit. assert. assertequals ( 3, i )

************

************
tgt: org . junit . assert . assertequals ( 100l , statistics . getaveragetime ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( p, 0l )
[2]: org. junit. assert. assertequals ( p, 0 )
[3]: org. junit. assert. assertequals ( p. length, 0 )
[4]: org. junit. assert. assertequals ( 0, p )

************

************
tgt: org . junit . assert . assertequals ( newlastmodificationtimems , inodedirectory . getlastmodificationtimems ( ) )
[0]: , p )
[1]: org. junit. assert. asserttrue ( mustrevalidate ( entry ) )
[2]: org. junit. assert. assertequals ( ( ( float ) ( 8 ) ), result. getfloatvalue ( ) )
[3]: org. junit. assert. assertequals ( ( ( float ) ( 8 ) ), result. getfloatvalue ( ), 0 )
[4]: org. junit. assert. assertequals ( replaced, notused )

************

************
tgt: org . junit . assert . assertequals ( "value" , request . getproperty ( "key" ) )
[0]: org. junit. assert. assertequals ( replaced, notused. getserverprincipal ( hostname, shouldnotreplace ) )
[1]: org. junit. assert. assertequals ( replaced, notused. getserverprincipal ( name, shouldnotreplace ) )
[2]: org. junit. assert. assertequals ( replaced, notused. getserverprincipal ( host, shouldnotreplace ) )
[3]: org. junit. assert. assertequals ( replaces, notused )
[4]: org. junit. assert. assertthat ( textarea. isenabled ( ), is ( false ) )

************

************
tgt: org . junit . assert . assertthat ( target . getinlink ( ) , org . hamcrest . corematchers . is ( "jkl" ) )
[0]: org. junit. assert. assertequals ( false, textarea. isenabled ( ) )
[1]: org. junit. assert. asserttrue ( textarea. isenabled ( ) )
[2]: org. junit. assert. assertthat ( textarea. isenabled ( ), is ( true ) )
[3]: org. junit. assert. assertthat ( textarea. isenabled ( ), contains ( false ) )
[4]: org. junit. assert. assertfalse ( itr. hasnext ( ) )

************

************
tgt: org . junit . assert . assertequals ( hash , checksum . getvalue ( ) )
[0]: org. junit. assert. asserttrue ( itr. hasnext ( ) )
[1]: org. junit. assert. assertthat ( itr. hasnext ( ), is ( false ) )
[2]: org. junit. assert. assertthat ( itr )
[3]: org. junit. assert. assertfalse ( itr )
[4]: org. junit. assert. assertequals ( 1, messages. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( messages )
[1]: org. junit. assert. assertequals ( 0, messages. size ( ) )
[2]: org. junit. assert. assertequals ( 1, errors. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( uk. gov. pay. api. validation. urlvalidator. security_disabled, urlvalidatorvalueof ( false ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , list . getdata ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( uk. gov. pay. api. validation. urlvalidator. security_disabled, uk. gov. pay. api. validation. urlvalidator. urlvalidatorvalueof ( false ) )
[1]: org. junit. assert. assertnull ( uk. gov. pay. api. validation. urlvalidator. urlvalidatorvalueof ( false ) )
[2]: org. junit. assert. assertequals ( uk. gov. pay. api. validation. urlvalidator. security_disabled, urlvalidatorvalueof ( true ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( failure. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( 7 , vc . getattributeasintlistoffset ( "intlist" , 3 , 7 ) )
[0]: org. junit. assert. assertequals ( getmessage ( ), failure. getmessage ( ) )
[1]: org. junit. assert. asserttrue ( failure. getmessage ( ). contains ( expected ) )
[2]: org. junit. assert. assertnull ( sn. getuserparticipation ( ) )
[3]: org. junit. assert. assertnull ( sn. getuservia ( ) )
[4]: org. junit. assert. assertnull ( sn. getuservariparticipation ( ) )

************

************
tgt: org . junit . assert . assertequals ( capabilitytoserialize . hashcode ( ) , newcaps . hashcode ( ) )
[0]: org. junit. assert. assertnull ( sn. getuseredgedg ( ) )
[1]: org. junit. assert. assertnull ( sn. getusershelper ( ) )
[2]: org. junit. assert. assertequals ( true, binding. isbindingtimeout ( ) )
[3]: org. junit. assert. assertfalse ( binding. isbindingtimeout ( ) )
[4]: org. junit. assert. assertthat ( japiclasses. size ( ), org. hamcrest. core. is. is ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( long . max_value , result )
[0]: org. junit. assert. assertthat ( japiclasses. size ( ), org. hamcrest. core. is. is ( 1 ) )
[1]: org. junit. assert. assertthat ( japiclasses. isempty ( ), org. hamcrest. core. is. is ( true ) )
[2]: org. junit. assert. assertthat ( japiclasses. size ( ), org. hamcrest. core. is. is ( 4 ) )
[3]: org. junit. assert. assertthat ( japiclasses, org. hamcrest. core. is. is ( 0 ) )
[4]: org. junit. assert. assertnull ( ap )

************

************
tgt: org . junit . assert . assertnull ( classundertest . getid ( ) )
[0]: org. junit. assert. assertnull ( actual )
[1]: org. junit. assert. assertnotnull ( actual )
[2]: _2 ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( line , arrow . getarrowline ( ) )
[0]: org. junit. assert. assertequals ( resultmessage ( res, org. openstack. atlas. api. mgmt. validation. validators. post ), res. size ( ) )
[1]: org. junit. assert. assertequals ( resultmessage ( res, org. openstack. atlas. api. mgmt. validation. validators. post ), res. passedvalidation ( ) )
[2]: org. junit. assert. assertequals ( resultmessage ( res, org. openstack. atlas. api. mgmt. validation. validators. post ), res. getmessage ( ) )
[3]: org. junit. assert. assertequals ( resultmessage ( res, org. openstack. atlas. api. mgmt. validation. validators. post ), res. length ( ) )
[4]: org. junit. assert. assertequals ( resultmessage ( res, org. openstack. atlas. api. mgmt. validation. validators. post ), res. tostring ( ) )

************

************
tgt: org . junit . assert . assertnull ( mqttusernamepassword )
[0]: org. junit. assert. asserttrue ( cap1. isgreaterorequal ( cap2 ) )
[1]: org. junit. assert. assertequals ( true, cap1. isgreaterorequal ( cap2 ) )
[2]: org. junit. assert. assertfalse ( cap1. isgreaterorequal ( cap2 ) )
[3]: org. junit. assert. assertequals ( false, cap1. isgreaterorequal ( cap2 ) )
[4]: org. junit. assert. asserttrue ( cap2. isgreaterorequal ( cap2 ) )

************

************
tgt: org . junit . assert . asserttrue ( ( elapsed < 5 ) )
[0]: org. junit. assert. assertequals ( org. milyn. xml. n. class, writer. tostring ( ) )
[1]: org. junit. assert. assertequals ( "&#xfriendlyurl ), writer. tostring ( ) )
[2]: org. junit. assert. assertequals ( ""foo"", writer. tostring ( ) )
[3]: org. junit. assert. assertequals ( "&#xfriendlyurl )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( ""foo"", toml. getstring ( ""foo"" ) )
[1]: org. junit. assert. assertequals ( ""a"", toml. getstring ( ""a"" ) )
[2]: org. junit. assert. assertequals ( ""null, toml. getstring ( ""a"" ) )
[3]: org. junit. assert. assertequals ( ""null"", toml. getstring ( ""a"" ) )
[4]: org. junit. assert. assertnull ( toml. getstring ( null ) )

************

************
tgt: org . junit . assert . assertequals ( null , p . getvalue ( ) )
[0]: org. junit. assert. assertequals ( 1, this. crossword. getwidth ( ) )
[1]: org. junit. assert. assertequals ( 0, this. crossword. getwidth ( ) )
[2]: org. junit. assert. assertequals ( 7, this. crossword. getwidth ( ) )
[3]: org. junit. assert. assertequals ( 6, this. crossword. getwidth ( ) )
[4]: org. junit. assert. assertequals ( 5, this. crossword. getwidth ( ) )

************

************
tgt: org . junit . assert . assertequals ( adddlcontent , getdlcontent )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertequals ( actual, expected )
[2]: org. junit. assert. assertnull ( actual )
[3]: org. junit. assert. assertnotnull ( actual )
[4]: org. junit. assert. assertequals ( expected, real )

************

************
tgt: org . junit . assert . assertnotnull ( strategy )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertequals ( 0, list. size ( ) )
[2]: org. junit. assert. assertequals ( 3, list. size ( ) )
[3]: org. junit. assert. assertequals ( 1,list. size ( ) )
[4]: org. junit. assert. assertequals ( 1, size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , sibs . size ( ) )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertequals ( s, s )
[2]: org. junit. assert. assertequals ( s, null )
[3]: org. junit. assert. assertnull ( s )
[4]: org. junit. assert. assertequals ( s, msg )

************

************
tgt: org . junit . assert . assertequals ( ( "num<sp>files<sp>wrong,<sp>found:<sp>" + ( com . google . common . collect . lists . newarraylist ( flist ) ) ) , expectedfiles , flist . length )
[0]: org. junit. assert. assertequals ( 1, select. ismultiple ( ) )
[1]: org. junit. assert. assertequals ( 0, select. ismultiple ( ) )
[2]: org. junit. assert. assertfalse ( select. ismultiple ( ) )
[3]: org. junit. assert. assertnull ( select. ismultiple ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( tg )
[0]: org. junit. assert. assertequals ( 0, deserializedkeygroup )
[1]: org. junit. assert. assertequals ( 1, deserializedkeygroup )
[2]: org. junit. assert. assertequals ( null, deserializedkeygroup )
[3]: org. junit. assert. assertequals ( 2, deserializedkeygroup )
[4]: )

************

************
tgt: org . junit . assert . assertfalse ( sc . invokedestinationcalled ( ) )
[0]: org. junit. assert. assertequals ( 0, ldapusergroupprovider. getgroups ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, ldapusergroupprovider. getgroups ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( folder. getname ( ) )
[3]: org. junit. assert. assertequals ( name, folder. getname ( ) )
[4]: org. junit. assert. assertequals ( null, folder. getname ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertnull ( folder. getname ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( null, command )
[3]: org. junit. assert. assertnull ( command )
[4]: _1 ) )

************

************
tgt: org . junit . assert . assertequals ( 7 , time )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 1, result. iterator ( ). next ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. iterator ( ). next ( ). getid ( ) )
[4]: org. junit. assert. assertequals ( 1, result. iterator ( ). next ( ). getvalue ( ) )

************

************
tgt: org . junit . assert . assertthat ( java . lang . integer . valueof ( root . getchildren ( ) . length ) , org . hamcrest . corematchers . is ( java . lang . integer . valueof ( 1 ) ) )
[0]: org. junit. assert. assertequals ( 1, result. iterator ( ). next ( ). count ( ) )
[1]: org. junit. assert. assertnotnull ( result. iterator ( ) )
[2]: org. junit. assert. asserttrue ( file. exists ( ) )
[3]: org. junit. assert. assertequals ( 1, reportdata. size ( ) )
[4]: org. junit. assert. assertequals ( 0, reportdata. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( 6, reportdata. size ( ) )
[1]: org. junit. assert. assertequals ( 5, reportdata. size ( ) )
[2]: org. junit. assert. assertequals ( 3, reportdata. size ( ) )
[3]: org. junit. assert. assertnotnull ( book )
[4]: org. junit. assert. assertnotnull ( book. name )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , triadcensus )
[0]: org. junit. assert. assertnotnull ( book. collection )
[1]: org. junit. assert. assertnotnull (book )
[2]: org. junit. assert. assertnull ( book )
[3]: org. junit. assert. assertnotnull ( document )
[4]: org. junit. assert. assertequals ( 0, document. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , schema )
[0]: org. junit. assert. assertequals ( null, document )
[1]: org. junit. assert. assertequals ( null, document. get ( ) )
[2]: org. junit. assert. assertnull ( document )
[3]: org. junit. assert. assertnotnull ( col. toq ( ) )
[4]: org. junit. assert. assertequals ( 1, col. toq ( ) )

************

************
tgt: org . junit . assert . assertequals ( expecting , org . antlr . v4 . test . tool . testgraphnodes . todotstring ( r ) )
[0]: org. junit. assert. assertequals ( 0, col. toq ( ) )
[1]: org. junit. assert. assertnull ( col. toq ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, view. getcurrenthour ( ) )
[4]: org. junit. assert. assertequals ( 0, view. getcurrenthour ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( sb . tostring ( ) , temp )
[0]: org. junit. assert. assertequals ( newcurrenthourvalue, view. getcurrenthour ( ) )
[1]: org. junit. assert. assertequals ( 200, view. getcurrenthour ( ) )
[2]: org. junit. assert. assertequals ( 0, view. getcurrenthour ( ). length ( ) )
[3]: org. junit. assert. assertequals ( 1, numdocs )
[4]: org. junit. assert. assertequals ( 2, numdocs )

************

************
tgt: org . junit . assert . assertequals ( rolluptype . counter , com . rackspacecloud . blueflood . types . rolluptype . fromrollup ( rollup ) )
[0]: org. junit. assert. assertequals ( motivo, retrievedmotivo. getmotivo ( ) )
[1]: org. junit. assert. assertnotnull ( retornoinfocancelamento. getmotivo ( ) )
[2]: org. junit. assert. assertequals ( motivo, n. getmotivo ( ) )
[3]: org. junit. assert. assertequals ( motivo, retornoinfocancelamento. getmotivo )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expectedset , resultset )
[0]: org. junit. assert. assertequals ( 1, tr. getruncount ( ) )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 0, result. size ( ) )
[3]: org. junit. assert. assertequals ( 2, result. size ( ) )
[4]: org. junit. assert. assertequals ( 3, result. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( definition . gettenantid ( ) , org . hamcrest . corematchers . is ( org . camunda . bpm . engine . test . api . multitenancy . tenantcheck . multitenancyprocessdefinitioncmdstenantchecktest . tenant_one ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( entity, retrievedentity. getproperty ( 0 ) )
[2]: org. junit. assert. assertnull ( retrievedentity. getproperty ( 0 ) )
[3]: org. junit. assert. assertnull ( retrievedentity. getproperty ( ""name"" ) )
[4]: org. junit. assert. assertequals ( entity, retrievedentity. getproperty ( ""name"" ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , words . tostring ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( id, statemanager. getroutestate ( route, id, com. graphhopper. jsprit. core. algorithm. state. boolean. class ) )
[2]: org. junit. assert. assertequals ( route, statemanager. getroutestate ( route, id, com. graphhopper. jsprit. core. algorithm. state. boolean. class ) )
[3]: org. junit. assert. assertnotnull ( statemanager. getroutestate ( route, id, com. graphhopper. jsprit. core. algorithm. state. boolean. class ) )
[4]: org. junit. assert. assertequals ( true, statemanager. getroutestate ( route, id, com. graphhopper. jsprit. core. algorithm. state. boolean. class ) )

************

************
tgt: org . junit . assert . assertequals ( org . apache . storm . utils . time . deltams ( current ) , 0 )
[0]: org. junit. assert. assertequals ( id, statemanager. getroutestate ( route, id, java. lang. boolean. class ) )
[1]: org. junit. assert. assertnotnull ( ( ( java. lang. boolean ) ( method. invoke ( repair ) ) ) )
[2]: org. junit. assert. assertnotnull ( ( ( java. lang. long ) ( repair. invoke ( ) ) ) )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( 0, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "test" , theexpression . get ( ) )
[0]: org. junit. assert. assertequals ( 2, result. size ( ) )
[1]: org. junit. assert. assertequals ( 5, result. size ( ) )
[2]: org. junit. assert. assertequals ( 4, result. size ( ) )
[3]: org. junit. assert. assertequals ( 0, hyperloglog. cardinality ( ) )
[4]: org. junit. assert. assertequals ( 1, hyperloglog. cardinality ( ) )

************

************
tgt: org . junit . assert . assertequals ( vxtrxloglist , expectedvxtrxloglistt )
[0]: org. junit. assert. assertequals ( 9, hyperloglog. cardinality ( ) )
[1]: org. junit. assert. assertequals ( 0, hyperloglog. cardinality ( ), 18 )
[2]: org. junit. assert. assertequals ( 6, hyperloglog. cardinality ( ) )
[3]: org. junit. assert. assertequals ( address, decode ( bytes ) )
[4]: org. junit. assert. assertequals ( 1, decode ( bytes ) )

************

************
tgt: org . junit . assert . assertthat ( input , org . hamcrest . matchers . equalto ( maininput ) )
[0]: org. junit. assert. assertequals ( 1, decode ( address ) )
[1]: org. junit. assert. assertequals ( 0, decode ( bytes ) )
[2]: org. junit. assert. assertequals ( 100, decode ( bytes ) )
[3]: org. junit. assert. assertequals ( 0l, result )
[4]: org. junit. assert. assertequals ( 1l, result )

************

************
tgt: org . junit . assert . assertnotnull ( t . getlocale ( ) )
[0]: org. junit. assert. assertequals ( long. max_value, result )
[1]: org. junit. assert. assertequals ( 0, result )
[2]: org. junit. assert. assertequals ( long. max_long, result )
[3]: org. junit. assert. assertnull ( dao. fieldstring )
[4]: org. junit. assert. assertsame ( bean, dao )

************

************
tgt: org . junit . assert . assertequals ( false , this . document . ismetadatadirty ( ) )
[0]: org. junit. assert. assertnull ( bean. fieldstring )
[1]: org. junit. assert. assertnull ( dao )
[2]: ) )
[3]: org. junit. assert. assertequals ( result, event )
[4]: org. junit. assert. assertequals ( result, listenermodel )

************

************
tgt: org . junit . assert . assertequals ( jobname , actual . getjobname ( ) )
[0]: org. junit. assert. assertequals ( result, this )
[1]: org. junit. assert. assertequals ( result, view )
[2]: org. junit. assert. assertequals ( result, listener )
[3]: org. junit. assert. assertnotnull ( rol )
[4]: org. junit. assert. assertnotnull ( err )

************

************
tgt: org . junit . assert . assertfalse ( result . passedvalidation ( ) )
[0]: org. junit. assert. asserttrue ( set )
[1]: org. junit. assert. assertnotnull ( funddao. getfundname ( ) )
[2]: org. junit. assert. assertnotnull ( _. getfundname ( ) )
[3]: org. junit. assert. assertnotnull ( root. getfundname ( ) )
[4]: org. junit. assert. assertequals ( 1, funddao. getfundname ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( bridge )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( propertyinfo )
[2]: org. junit. assert. assertequals ( 1, propertyinfo. getstring ( ). length )
[3]: org. junit. assert. assertnotnull ( propertyinfo. getstring ( ) )
[4]: org. junit. assert. assertequals ( null, propertyinfo. getstring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( billinginput . getsubscriptionkeys ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, propertyinfo. getstring ( ) )
[1]: org. junit. assert. assertequals ( 1, count )
[2]: org. junit. assert. assertequals ( 0, count )
[3]: org. junit. assert. assertequals ( 3, count )
[4]: org. junit. assert. assertequals ( ( ( char ) ( i ++ ) ), list. get ( x ) )

************

************
tgt: org . junit . assert . assertequals ( transport , f . gettransport ( ) )
[0]: org. junit. assert. assertequals ( ( ( char ) ( ( i ++ ) + 1 ) ), list. get ( x ) )
[1]: org. junit. assert. assertequals ( ( ( char ) ( i ++ ) ), s. get ( x ) )
[2]: org. junit. assert. assertequals ( i, list. get ( x ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( numbers. numbertowordsconverter. convert ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( clockisticking ( ) )
[0]: org. junit. assert. assertequals ( 0, numbers. numbertowordsconverter. convert ( 1 ). length )
[1]: org. junit. assert. assertequals ( 1, numbers. numbertowordsconverter. convert ( 1 ). length )
[2]: org. junit. assert. assertnotnull ( numbers. numbertowordsconverter. convert ( 0 ) )
[3]: ) )
[4]: org. junit. assert. assertsame ( testhandler, result )

************

************
tgt: org . junit . assert . assertequals ( 0 , question . getattachments ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( testhandler, result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( 1, status )
[3]: org. junit. assert. assertequals ( 0, status )
[4]: org. junit. assert. assertequals ( 200, status )

************

************
tgt: org . junit . assert . assertnotnull ( app )
[0]: org. junit. assert. assertequals ( 3, status )
[1]: org. junit. assert. assertequals ( 5, status )
[2]: org. junit. assert. assertarrayequals ( ordered, result. toarray ( unordered ) )
[3]: org. junit. assert. assertarrayequals ( ordered, result. toarray ( collection ) )
[4]: org. junit. assert. assertarrayequals ( ordered, result. toarray ( ordered ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertarrayequals ( ordered, result )
[1]: java. util. arrays. aslist ( ordered ), result )
[2]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ 0 ] [ ] ) )
[3]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ 0 ] [ 0 ] ) )
[4]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ 0 ] [ 1 ] ) )

************

************
tgt: org . junit . assert . assertthat ( processedclaims . size ( ) , org . hamcrest . matchers . is ( 0 ) )
[0]: org. junit. assert. assertthat ( results, empty ( ) )
[1]: , results )
[2]: org. junit. assert. assertequals ( org. switchyard. internal. defaultcontexttest. prop_val, _context. getproperty ( org. switchyard. internal. defaultcontexttest. prop_name ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( org. switchyard. internal. defaultcontexttest. prop_val ), _context. getproperty ( org. switchyard. internal. defaultcontexttest. prop_name ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( org. switchyard. internal. defaultcontexttest. prop_val ), _context. getproperty ( org. switchyard. internal. defaultcontexttest. prop_name ) )

************

************
tgt: org . junit . assert . assertequals ( md5hashkey1 , md5hashkey2 )
[0]: org. junit. assert. assertequals ( java. util. optional. of ( org. switchyard. internal. defaultcontexttest. prop_val ), _context. getproperty ( org. switchyard. internal. defaultcontexttest. prop_name ) )
[1]: org. junit. assert. assertnotnull ( manager )
[2]: org. junit. assert. assertnull ( manager )
[3]: org. junit. assert. assertnotnull ( manager. unlock ( lockmanager ) )
[4]: org. junit. assert. asserttrue ( ( manager == null ) )

************

************
tgt: org . junit . assert . assertequals ( "" , zipreader . getentryasstring ( "empty.txt" ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( encodeequal )
[2]: org. junit. assert. assertequals ( true, encodeequal )
[3]: org. junit. assert. assertfalse ( encodeequal )
[4]: org. junit. assert. asserttrue ( encodingequal )

************

************
tgt: org . junit . assert . assertfalse ( list . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( encodeequal )
[1]: org. junit. assert. assertnotnull ( s )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnotnull ( results )
[4]: org. junit. assert. assertnotnull ( _document )

************

************
tgt: org . junit . assert . asserttrue ( e . getmessage ( ) , true )
[0]: ) )
[1]: org. junit. assert. assertthat ( destring, org. hamcrest. corematchers. is ( enstring ) )
[2]: org. junit. assert. assertequals ( 1, set. size ( ) )
[3]: org. junit. assert. assertequals ( 3, set. size ( ) )
[4]: org. junit. assert. assertequals ( 2, set. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0.5f , albumoptions . getcompressionquality ( ) , 0 )
[0]: org. junit. assert. assertequals ( 0, set. size ( ) )
[1]: org. junit. assert. assertequals ( 1, sets. size ( ) )
[2]: org. junit. assert. assertequals ( 87654321l, result )
[3]: org. junit. assert. assertequals ( 167654321l, result )
[4]: org. junit. assert. assertequals ( 1234567890123456789l, result )

************

************
tgt: org . junit . assert . assertequals ( teststring [ 2 ] , attr . get ( shouldbe ) )
[0]: org. junit. assert. assertequals ( 77654321l, result )
[1]: org. junit. assert. assertequals ( 87654321l, result ) ;
[2]: org. junit. assert. assertnull ( noticeablefuture. iscancelled ( ) )
[3]: org. junit. assert. assertequals ( null, noticeablefuture. iscancelled ( ) )
[4]: org. junit. assert. assertfalse ( noticeablefuture. iscancelled ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( pi )
[0]: org. junit. assert. assertequals ( events, localtxid1 )
[1]: org. junit. assert. assertthat ( events, org. hamcrest. corematchers. is ( events ) )
[2]: org. junit. assert. assertequals ( events, event )
[3]: org. junit. assert. assertequals ( events, localtxid 1 )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , org . jerlang . stdlib . lists . append ( given1 , given2 ) )
[0]: org. junit. assert. assertnotnull ( com. spotify. futures. completablefutures. getcompleted ( future ) )
[1]: org. junit. assert. assertequals ( null, com. spotify. futures. completablefutures. getcompleted ( future ) )
[2]: org. junit. assert. assertnull ( com. spotify. futures. completablefutures. getcompleted ( future ) )
[3]: org. junit. assert. assertequals ( 0, com. spotify. futures. completablefutures. getcompleted ( future ) )
[4]: org. junit. assert. assertequals ( 1, com. spotify. futures. completablefutures. getcompleted ( future ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , commitinfo . getnewrevision ( ) )
[0]: org. junit. assert. assertequals ( 1, jobinstances. size ( ) )
[1]: org. junit. assert. asserttrue ( admin. tableexists ( e ) )
[2]: org. junit. assert. assertnotnull ( admin. tableexists ( snapshotname0 ) )
[3]: org. junit. assert. asserttrue ( admin. tableexists ( snapshotname0 ) )
[4]: org. junit. assert. assertnotnull ( admin. tableexists ( e ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, executor. run ( ruleunit ) )
[2]: org. junit. assert. assertnotnull ( executor. run ( ruleunit ) )
[3]: org. junit. assert. assertequals ( 1, executor. run ( rule unit ) )
[4]: org. junit. assert. assertequals ( 1, executor. runs ( ruleunit ) )

************

************
tgt: org . junit . assert . asserttrue ( provider . getcells ( null ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 2, executor. run ( ruleunit ) )
[1]: org. junit. assert. assertequals ( stagestatus. null, victim. getlateststatus ( ) )
[2]: org. junit. assert. assertequals ( stagestatus. empty, victim. getlateststatus ( ) )
[3]: org. junit. assert. assertequals ( stagestatus. runtime, victim. getlateststatus ( ) )
[4]: org. junit. assert. assertequals ( stagestatus. visible, victim. getlateststatus ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , isfailedcommand ( ) )
[0]: org. junit. assert. assertnotnull ( victim. getlateststatus ( ) )
[1]: org. junit. assert. asserttrue ( match )
[2]: org. junit. assert. assertfalse ( match )
[3]: org. junit. assert. assertequals ( true, match )
[4]: org. junit. assert. assertequals ( false, match )

************

************
tgt: org . junit . assert . assertequals ( applicationeventfamilymaps , storedapplicationeventfamilymaps )
[0]: org. junit. assert. assertequals ( match, true )
[1]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), resultfromnode ( node ) )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( 0 ), resultfromnode ( node ) )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), resultfromnode ( node ) )
[4]: org. junit. assert. assertequals ( 1, actioninvokestatus. requiresupdate ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( d1 . equals ( d2 ) )
[0]: org. junit. assert. assertequals ( true, actioninvokestatus. requiresupdate ( ) )
[1]: org. junit. assert. assertequals ( 1, actioninvokestatus. requiresupdate ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), actioninvokestatus )
[3]: org. junit. assert. assertequals ( 1, actioninvokestatus. requiresupdate ( ). get ( ) )
[4]: org. junit. assert. assertequals ( com. gs. collections. impl. map. mutable. unifiedmap. newwithkeysvalues ( 0, 1, 1, 2, 2, 3, 3 ), integers )

************

************
tgt: org . junit . assert . assertequals ( 10 , money . getamount ( ) )
[0]: org. junit. assert. asserttrue ( isequals )
[1]: org. junit. assert. assertequals ( true, isequals )
[2]: org. junit. assert. assertthat ( isequals )
[3]: org. junit. assert. assertfalse ( isequals )
[4]: org. junit. assert. assertthat ( isequals, org )

************

************
tgt: org . junit . assert . assertsame ( output , multiplexed )
[0]: org. junit. assert. assertnotnull ( actual )
[1]: org. junit. assert. assertequals ( campaigncampaignnode, parsedcampaignnode )
[2]: org. junit. assert. assertnotnull ( campaigncampaignnode )
[3]: org. junit. assert. assertequals ( parsedcampaignnode, parsedcampaignnode )
[4]: org. junit. assert. assertequals ( parsedcampaignnode, campaigncampaignnode )

************

************
tgt: org . junit . assert . asserttrue ( e . getmessage ( ) . contains ( badcell ) )
[0]: org. junit. assert. assertequals ( campaignscount, parsedcampaignnode )
[1]: org. junit. assert. assertequals ( 1, result. getfailurecount ( ) )
[2]: org. junit. assert. assertnotnull ( result. getfailurecount ( ) )
[3]: org. junit. assert. assertequals ( 0, result. getfailurecount ( ) )
[4]: org. junit. assert. assertequals ( 1, results. get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expectedurl , url )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, overtreders. size ( ) )
[2]: org. junit. assert. assertequals ( 1, command. getlength ( ) )
[3]: org. junit. assert. assertequals ( ml, expectedmove )
[4]: org. junit. assert. assertequals ( expectedmove, ml )

************

************
tgt: org . junit . assert . asserttrue ( set . get ( ) )
[0]: org. junit. assert. assertnotnull ( root )
[1]: org. junit. assert. assertsame ( root, root )
[2]: org. junit. assert. assertequals ( root, root )
[3]: org. junit. assert. assertnull ( root )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( testee . isstatic ( ) , org . hamcrest . matchers . is ( true ) )
[0]: org. junit. assert. assertequals ( 1, dropresult. head ( ) )
[1]: org. junit. assert. assertequals ( 0, dropresult. head ( ) )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), dropresult. head ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4, 5 ), dropresult )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), dropresult. head ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , prop . keyset ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 1, clone )
[1]: org. junit. assert. assertequals ( null, clone )
[2]: org. junit. assert. assertequals ( 0, clone )
[3]: org. junit. assert. assertequals ( sequence, clone )
[4]: org. junit. assert. assertequals ( 0, clone. length )

************

************
tgt: org . junit . assert . assertequals ( "value" , decoded . content ( ) )
[0]: org. junit. assert. assertnotnull ( array )
[1]: , array. length )
[2]: , array )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertfalse ( dialog . isbuilding ( ) )
[0]: org. junit. assert. assertequals ( 1, result. getproperties ( ). size ( ) )
[1]: org. junit. assert. assertequals ( contentbody, result. getproperties ( ) )
[2]: org. junit. assert. assertequals ( 0, result. getproperties ( ). size ( ) )
[3]: org. junit. assert. assertequals ( result. getproperties ( ). size ( ), 1 )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . size ( ) )
[0]: org. junit. assert. assertnotnull ( dao. getuniqueresultfromquery ( query. getname ( ) ) )
[1]: org. junit. assert. assertnotnull ( dao. getuniqueresultfromquery ( query. getid ( ) ) )
[2]: org. junit. assert. assertnotnull ( dao. getuniqueresultfromquery ( query. tostring ( ) ) )
[3]: org. junit. assert. assertnotnull ( dao. getuniqueresultfromquery ( query. name ) )
[4]: org. junit. assert. assertnotnull ( dao. getuniqueresultfromquery ( query ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , objmap . get ( "field_int" ) )
[0]: org. junit. assert. assertnotnull ( getpartitionkey ( ) )
[1]: org. junit. assert. assertnull ( root. getpartitionkey ( ) )
[2]: org. junit. assert. assertnull ( configuration. getpartitionkey ( ) )
[3]: org. junit. assert. assertnotnull ( dao. getpartitionkey ( ) )
[4]: org. junit. assert. assertnull ( request. getpartitionkey ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0.1 , com . cloud . utils . db . genericdaobase . getobject ( double . class , resultset , 1 ) , 0.1 )
[0]: org. junit. assert. assertequals ( str, exception. getmessage ( ) )
[1]: org. junit. assert. assertequals ( 1, smileys. size ( ) )
[2]: org. junit. assert. assertequals ( ddf. catalog. data. attributetype. attributeformat. integer, serializable )
[3]: org. junit. assert. assertequals ( ddf. catalog. data. attributetype. attributesformat. integer, serializable )
[4]: org. junit. assert. assertnotnull ( serializable )

************

************
tgt: org . junit . assert . assertnotnull ( descriptor )
[0]: org. junit. assert. assertequals ( futureresult. getname ( ), futureresult. get ( ) )
[1]: org. junit. assert. assertequals ( futureresult. getname ( ), futureresult. tostring ( ) )
[2]: org. junit. assert. assertequals ( futureresult. getname ( ), futureresult. getname ( ) )
[3]: org. junit. assert. assertequals ( futureresult. get ( ), futureresult. getname ( ) )
[4]: org. junit. assert. assertequals ( futureresult. getclass ( ), futureresult. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , parser . escape ( input ) )
[0]: org. junit. assert. assertequals ( 1, idx. size ( ) )
[1]: org. junit. assert. assertnotnull ( idx )
[2]: org. junit. assert. assertequals ( 1, idx. index ( ) )
[3]: org. junit. assert. assertequals ( 1, idx. index )
[4]: org. junit. assert. assertequals ( 2, idx. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( recipe , tree . matchshapedrecipe ( testingredients , true ) )
[0]: org. junit. assert. assertnull ( msg. getbytes ( null ) )
[1]: org. junit. assert. assertnull ( msg. getbytes ( java. lang. string. class ) )
[2]: org. junit. assert. assertnull ( msg. getbytes ( 0 ) )
[3]: org. junit. assert. assertnull ( msg. getbytes ( null ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( assignedclientid , client . getid ( ) )
[0]: org. junit. assert. assertequals ( 1, visitor. getfiles ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, visitor. getfiles ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( visitor. getfiles ( ) )
[3]: org. junit. assert. assertnull ( visitor. getfiles ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( actual , expected )
[0]: org. junit. assert. assertnull ( org. eclipse. e4. core. internal. di. osgi. providerhelper. findprovider ( null, sr ) )
[1]: org. junit. assert. assertnull ( org. eclipse. e4. core. internal. di. osgi. providerhelper. findprovider ( string, sr ) )
[2]: org. junit. assert. assertnull ( org. eclipse. e4. core. internal. di. osgi. providerhelper. findprovider ( name, sr ) )
[3]: org. junit. assert. assertnull ( service. findprovider ( null, sr ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , map . size ( ) )
[0]: org. junit. assert. assertequals ( 1, vh. geteventssize ( ) )
[1]: org. junit. assert. assertthat ( set. contains ( 1 ), org. hamcrest. matchers. is ( true ) )
[2]: org. junit. assert. assertthat ( set. contains ( null ), org. hamcrest. matchers. is ( true ) )
[3]: org. junit. assert. assertthat ( set. contains ( 1 ), org. hamcrest. corematchers. is ( true ) )
[4]: org. junit. assert. assertthat ( set. contains ( 0 ), org. hamcrest. matchers. is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( expected . entryset ( ) . hashcode ( ) , map . entryset ( ) . hashcode ( ) )
[0]: org. junit. assert. assertthat ( set. contains ( 1 ), org. hamcrest. corematchers. is ( true ) )
[1]: org. junit. assert. assertequals ( 1, examplepost. getmessagetags ( ). size ( ) )
[2]: org. junit. assert. asserttrue ( foundgraph. equals ( truegraph ) )
[3]: org. junit. assert. asserttrue ( truegraph. equals ( foundgraph ) )
[4]: org. junit. assert. asserttrue ( foundgraph. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( childresourceortypename . isempty ( ) )
[0]: org. junit. assert. asserttrue ( containsgraph )
[1]: org. junit. assert. asserttrue ( foundgraph. contains ( truegraph ) )
[2]: org. junit. assert. assertequals ( d1, d2 )
[3]: org. junit. assert. assertequals ( 1, classundertest. getlinecomment ( ) )
[4]: org. junit. assert. assertequals ( 0, classundertest. getlinecomment ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , res . size ( ) )
[0]: org. junit. assert. assertequals ( 5, classundertest. getlinecomment ( ) )
[1]: org. junit. assert. assertequals ( 2, classundertest. getlinecomment ( ) )
[2]: org. junit. assert. assertequals ( 1, classundertest. getlinecomment ( ). length )
[3]: org. junit. assert. asserttrue ( mockjob. isfinished ( ) )
[4]: org. junit. assert. assertequals ( count, receiver. getsize ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( nodemousedoubleclickhandler )
[0]: org. junit. assert. assertequals ( count, validator. getsize ( ) )
[1]: org. junit. assert. assertequals ( count, sender. getsize ( ) )
[2]: org. junit. assert. assertequals ( count, handler. getsize ( ) )
[3]: org. junit. assert. assertequals ( count, consumer. getsize ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. empty ( ), group. getopenlist ( ) )

************

************
tgt: org . junit . assert . assertthat ( matchingartifacts . isempty ( ) , org . hamcrest . matchers . is ( true ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( true, false ), group. getopenlist ( ) )
[1]: org. junit. assert. assertequals ( java. util. optional. empty ( ), group. getopenlist ( ). get ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), group. getopenlist ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( java. util. optional. empty ( ) ), group )
[4]: org. junit. assert. assertnotnull ( browsers. tostring ( ), browsers )

************

************
tgt: org . junit . assert . assertequals ( 20 , content . length )
[0]: org. junit. assert. assertequals ( double. nan, unpackdouble ( binary16. negative_zero ) )
[1]: org. junit. assert. assertequals ( 0.0, unpackdouble ( binary16. negative_zero ), 0.0 )
[2]: org. junit. assert. assertequals ( double. nan, unpackdouble ( binary16. negative_zero ), 0.0 )
[3]: org. junit. assert. assertequals ( 1.0, unpackdouble ( binary16. negative_zero ), 0.0 )
[4]: org. junit. assert. assertequals ( 0.0, unpackdouble ( binary16. negative_zero ) )

************

************
tgt: org . junit . assert . asserttrue ( handler . isenabled ( ) )
[0]: org. junit. assert. assertthat ( exit, org. hamcrest. matchers. equalto ( 1 ) )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertnotnull ( e. get ( ) )
[3]: org. junit. assert. assertnotnull ( e )
[4]: org. junit. assert. assertnotnull ( e. getclass ( ) )

************

************
tgt: org . junit . assert . assertthat ( fpr . getversiondescription ( ) , org . hamcrest . corematchers . is ( expected ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( r, last )
[2]: org. junit. assert. assertequals ( true, initresult )
[3]: org. junit. assert. asserttrue ( initresult )
[4]: org. junit. assert. assertthat ( resources, contains ( patientid, parentorgid, parentparentorgid ) )

************

************
tgt: org . junit . assert . assertequals ( o , serializedeserialize ( mapper , o , java . time . localdate . class ) )
[0]: org. junit. assert. assertthat ( resources, contains ( orgid, parentorgid, parentparentorgid ) )
[1]: org. junit. assert. assertthat ( resources, contains ( patientid, parentorgid ) )
[2]: org. junit. assert. assertthat ( resources, contains ( patientid, orgid, parentorgid ) )
[3]: org. junit. assert. assertthat ( resources, contains ( orgid, parentorgid ) )
[4]: org. junit. assert. assertequals ( org. apache. commons. compress. archivers. tar. tararchiveentrytest. root, t. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 6 , impl . getresidenttimesecs ( entry , now ) )
[0]: org. junit. assert. assertsame ( org. apache. commons. compress. archivers. tar. tararchiveentrytest. root, t. getname ( ) )
[1]: org. junit. assert. assertequals ( org. apache. commons. compress. archivers. tar. tararchiveentrytest. root. class, t. getname ( ) )
[2]: org. junit. assert. assertequals ( org. apache. commons. compress. archivers. tar. tararchiveentrytest. root }, t. getname ( ) )
[3]: org. junit. assert. assertequals ( org. apache. commons. compress. archivers. tar. tararchiveentrytest. root. class. getname ( ), t )
[4]: org. junit. assert. asserttrue ( result )

************

************
tgt: org . junit . assert . assertthat ( diff , org . hamcrest . matchers . equalto ( org . javersion . core . difftest . map ( 1 , null , 2 , null , 3 , null , 4 , 4 , 5 , 5 ) ) )
[0]: org. junit. assert. assertsame ( object, object. add ( java. lang. string. class ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), values. add ( 1 ) )
[2]: org. junit. assert. assertnotnull ( materialized. add ( 1 ) )
[3]: org. junit. assert. assertsame ( array, array. add ( 1 ) )
[4]: add ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , nvar )
[0]: org. junit. assert. asserttrue ( signature. equals ( desc. getid ( ) ) )
[1]: org. junit. assert. asserttrue ( signature. equals ( descriptor ) )
[2]: org. junit. assert. asserttrue ( signature. equals ( desc. tostring ( ) ) )
[3]: org. junit. assert. asserttrue ( signature. equals ( signature ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , list . size ( ) )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertequals ( 0, result )
[2]: org. junit. assert. assertequals ( 1l, result )
[3]: org. junit. assert. assertequals ( 0l, result )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( size , org . hamcrest . core . is . is ( 4 ) )
[0]: org. junit. assert. assertequals ( 1, actualshardnumber )
[1]: org. junit. assert. assertequals ( 0, actualshardnumber )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), actualshardnumber )
[3]: org. junit. assert. assertequals ( ( - 1 ), actualshardnumber )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( defaultextension0 . hashcode ( ) , defaultextension1 . hashcode ( ) )
[0]: org. junit. assert. assertnotnull ( posix )
[1]: org. junit. assert. assertnotnull ( posix. args )
[2]: org. junit. assert. assertnotnull ( posix. context )
[3]: org. junit. assert. assertnotnull ( posix. collection )
[4]: org. junit. assert. assertnotnull ( posix. data )

************

************
tgt: org . junit . assert . assertnotnull ( e . getmessage ( ) )
[0]: org. junit. assert. assertnotnull ( transfer )
[1]: org. junit. assert. assertequals ( transfer, host )
[2]: org. junit. assert. assertequals ( transfer, local )
[3]: org. junit. assert. assertnull ( transfer )
[4]: org. junit. assert. assertnotnull ( transfer. process )

************

************
tgt: org . junit . assert . asserttrue ( crop . haseffect ( ) )
[0]: org. junit. assert. assertequals ( i, f. get ( ) )
[1]: org. junit. assert. assertequals ( f. get ( ), i )
[2]: org. junit. assert. assertequals ( 1, f. get ( ) )
[3]: org. junit. assert. assertequals ( i, f. get ( ). i )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( rulekeywithoutdep , org . hamcrest . matchers . equalto ( rulekeywithdep ) )
[0]: org. junit. assert. assertequals ( i, keys. size ( ) )
[1]: org. junit. assert. assertequals ( 1, i )
[2]: org. junit. assert. assertequals ( num_of_vertices, i )
[3]: org. junit. assert. assertequals ( count, i )
[4]: org. junit. assert. assertequals ( num_of_vertices, keys )

************

************
tgt: org . junit . assert . assertequals ( "token<sp>2\n" , found )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( 0, account. getbalance ( ) )
[2]: org. junit. assert. assertnotnull ( account. getbalance ( ) )
[3]: org. junit. assert. assertnull ( account. getbalance ( ) )
[4]: org. junit. assert. assertequals ( 0l, account. getbalance ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( part1 . getparentpanel ( ) ) == westpanel ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( missingscope )
[2]: org. junit. assert. assertequals ( null, missingscope )
[3]: org. junit. assert. assertequals ( missingscope, source )
[4]: org. junit. assert. assertequals ( source, missingscope )

************

************
tgt: org . junit . assert . assertsame ( assertions , returned )
[0]: org. junit. assert. assertnotnull ( iarchivemanager. factory. createarchivemodeluri ( uri ) )
[1]: org. junit. assert. assertequals ( uri, iarchivemanager. factory. createarchivemodeluri ( uri ) )
[2]: org. junit. assert. assertequals ( uri, iarchivemanager. factory. createarchivemodeluri ( uri. tostring ( ) ) )
[3]: org. junit. assert. assertequals ( uri, iarchivemanager. factory. createarchivemodeluri ( file ) )
[4]: org. junit. assert. assertequals ( uri, iarchivemanager. factory. createarchivemodeluri ( uri. name ( ) ) )

************

************
tgt: org . junit . assert . assertnull ( retrieved . getdockerdigest ( ) )
[0]: org. junit. assert. assertequals ( 1, css2. count ( ) )
[1]: org. junit. assert. assertequals ( 0, css2. count ( ) )
[2]: org. junit. assert. assertequals ( 1, css1. count ( ) )
[3]: org. junit. assert. assertequals ( 3, css2. count ( ) )
[4]: org. junit. assert. assertequals ( 2, css2. count ( ) )

************

************
tgt: org . junit . assert . assertequals ( size , org . openmrs . module . webservices . rest . test . util . getresultssize ( result ) )
[0]: org. junit. assert. assertequals ( 1, encounters. size ( ) )
[1]: org. junit. assert. assertequals ( 0, encounters. size ( ) )
[2]: org. junit. assert. assertequals ( 6, encounters. size ( ) )
[3]: org. junit. assert. assertequals ( 3, encounters. size ( ) )
[4]: org. junit. assert. assertequals ( 4, encounters. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( canceled )
[0]: org. junit. assert. assertequals ( new java. util. date ( nowdate ), job. getnextrun ( ) )
[1]: org. junit. assert. assertequals ( new java. util.date ( nowdate ), job. getnextrun ( ) )
[2]: org. junit. assert. assertequals ( 1, plots. get ( 0 ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, plots. get ( 0 ). getid ( ) )
[4]: org. junit. assert. assertequals ( 1, plots. get ( 0 ). length )

************

************
tgt: org . junit . assert . assertequals ( ( "value" + valsuffix ) , map . get ( key ) )
[0]: org. junit. assert. assertequals ( plots. get ( 0 ), plot1 )
[1]: get ( 0 ) )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( ""test"", result )
[4]: org. junit. assert. assertequals ( ""a"", result )

************

************
tgt: org . junit . assert . assertequals ( "somevalue" , result )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class, e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[4]: . getmessage ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ! ( output . contains ( "imports-cleaner" ) ) ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, ids. size ( ) )
[2]: org. junit. assert. assertequals ( 1, ids. size ( ) )
[3]: org. junit. assert. assertequals ( emptylist ( ), ids )
[4]: , ids )

************

************
tgt: org . junit . assert . assertequals ( expected , properties )
[0]: ) )
[1]: org. junit. assert. asserttrue ( string. contains ( template ) )
[2]: org. junit. assert. asserttrue ( string, string. contains ( template ) )
[3]: org. junit. assert. asserttrue ( listappender. contains ( string ) )
[4]: org. junit. assert. asserttrue ( listappender. contains ( template ) )

************

************
tgt: org . junit . assert . asserttrue ( deleted )
[0]: org. junit. assert. asserttrue ( string )
[1]: org. junit. assert. assertequals ( 200, teststatus )
[2]: org. junit. assert. assertequals ( 1, teststatus )
[3]: org. junit. assert. assertequals ( 100, teststatus )
[4]: org. junit. assert. assertequals ( 200, testsstatus )

************

************
tgt: org . junit . assert . assertequals ( representation . full , service . getrepresentation ( restconstants . representation_full ) )
[0]: org. junit. assert. assertequals ( 0, teststatus )
[1]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( expected ) )
[2]: org. junit. assert. assertthat ( expected, org. hamcrest. corematchers. is ( actual ) )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is (
[4]: org. junit. assert. assertthat ( actual, is ( equalto ( expected ) ) )

************

************
tgt: org . junit . assert . assertequals ( 200 , info . simplecloud . scimproxy . scimschemasservletgettest . response . getstatus ( ) )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertequals ( expected, allsubsections )
[2]: org. junit. assert. assertequals ( expected, allsubsections. size ( ) )
[3]: org. junit. assert. assertequals ( expected, allsubsections, null )
[4]: org. junit. assert. assertequals ( expected, allsubsections )

************

************
tgt: org . junit . assert . asserttrue ( ( ( eventwhichfails . geteventlengthinseconds ( ) ) != ( - 1 ) ) )
[0]: org. junit. assert. assertequals ( expected, allsubsections, 0 )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( org. eclipse. rdf4j. http. protocol, result )
[3]: org. junit. assert. assertequals ( org. eclipse. rdf4j. http. protocol )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . asserttrue ( ( ( result . geterrors ( ) . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( acicontext. filter ( null, acicontext, null ) )
[2]: org. junit. assert. assertnull ( acicontext. filter ( null, null, null ) )
[3]: org. junit. assert. assertnull ( acicontext. filter ( acicontext, null, null ) )
[4]: org. junit. assert. assertnull ( acicontext. filter ( null, acicontext. getentry ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , com . orientechnologies . orient . core . storage . index . hashindex . local . cache . wowcachetestit . wowcache . allocatenewpage ( fileid ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( hivemall. utils. hadoop. writableutils. val ( 0.0 ), udf. evaluate ( args ) )
[2]: org. junit. assert. assertequals ( hivemall. utils. hadoop. writableutils. val ( 1.0 ), udf. evaluate ( args ) )
[3]: org. junit. assert. assertequals ( hivemall. utils. hadoop. writableutils. val ( 0.0 ), udf )
[4]: org. junit. assert. assertequals ( hivemall. utils. hadoop. writableutils. val ( 0.0 ), udf. evaluate ( arguments ) )

************

************
tgt: org . junit . assert . assertthat ( instancesfromdifferentscenarios , elementsareallunique ( ) )
[0]: org. junit. assert. assertequals ( hivemall. utils. hadoop. writableutils. val ( 0.0 ), udf, 0.0 )
[1]: org. junit. assert. assertequals ( result. tostring ( ), expected )
[2]: org. junit. assert. assertequals ( result. tostring ( ), s )
[3]: org. junit. assert. assertequals ( expected, result. tostring ( ) )
[4]: org. junit. assert. assertequals ( s, result. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( passwordencoder . checkpw ( plaintext , encoded ) )
[0]: org. junit. assert. assertequals ( null, result. tostring ( ) )
[1]: org. junit. assert. assertequals ( ref1, object. getstringvalue ( ) )
[2]: org. junit. assert. assertequals ( ref2, object. getstringvalue ( ) )
[3]: org. junit. assert. assertnotnull ( object. getstringvalue ( ) )
[4]: org. junit. assert. assertequals ( ref1. getstringvalue ( ), object )

************

************
tgt: org . junit . assert . assertequals ( htd . gettablename ( ) , deserializedhtd . gettablename ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, query. getminimumlatency ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0.0, query. getminimumlatency ( ) )
[3]: org. junit. assert. assertequals ( 1, query. getminimumlatency ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, query. getminimumlatency ( ) )

************

************
tgt: org . junit . assert . assertthat ( info . id ( ) , org . hamcrest . matchers . startswith ( expectedid ) )
[0]: org. junit. assert. assertequals ( 1.0, query. getminimumlatency ( ) )
[1]: org. junit. assert. assertnotnull ( anyobject )
[2]: org. junit. assert.null ( anyobject )
[3]: org. junit. assert. assertnotnull ( anystring )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "hello" , klass . getprop ( ) )
[0]: )
[1]: org. junit. assert. assertequals ( i, ( ( int ) ( it. next ( ) ) ) )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), next ( ) )
[3]: org. junit. assert. assertequals ( i, ( ( long ) ( it. next ( ) ) ) )
[4]: org. junit. assert. assertequals ( i, ( ( int ) ( next ( ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( expected , tostring ( builder ) )
[0]: org. junit. assert. assertequals ( i, ( i + 1 ) )
[1]: org. junit. assert. asserttrue ( m. matches ( candidate ) )
[2]: org. junit. assert. assertequals ( true, m. matches ( candidate ) )
[3]: org. junit. assert. assertthat ( m, matches ( candidate ) )
[4]: org. junit. assert. assertthat ( m. matches ( candidate ), is ( true ) )

************

************
tgt: org . junit . assert . assertnotnull ( encountertype )
[0]: org. junit. assert. assertfalse ( m. matches ( candidate ) )
[1]: org. junit. assert. assertnotnull ( iae )
[2]: org. junit. assert. assertnotnull ( exceptionthrown )
[3]: org. junit. assert. assertequals ( 1, exceptionthrown )
[4]: org. junit. assert. assertequals ( null, exceptionthrown )

************

************
tgt: org . junit . assert . asserttrue ( check )
[0]: org. junit. assert. assertnotnull ( iae. exceptionthrown )
[1]: org. junit. assert. assertequals ( true, converteddocument. exists ( ) )
[2]: org. junit. assert. assertequals ( 1, converteddocument. exists ( ) )
[3]: org. junit. assert. assertequals ( false, converteddocument. exists ( ) )
[4]: org. junit. assert. assertequals ( null, converteddocument. exists ( ) )

************

************
tgt: org . junit . assert . asserttrue ( msg , gradok )
[0]: org. junit. assert. assertequals ( java. util. optional. empty ( ), converteddocument )
[1]: org. junit. assert. assertnotnull ( conf. key ( ) )
[2]: org. junit. assert. assertequals ( 1, conf. key ( ) )
[3]: org. junit. assert. assertequals ( 0, conf. key ( ) )
[4]: org. junit. assert. assertequals ( null, conf. key ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , branch_conditions . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, entity. gethostgroupname ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, entity. gethostgroupname ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), entity. gethostgroupname ( ) )
[4]: org. junit. assert. assertequals ( "foo, entity. gethostgroupname ( ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( expected ) ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, key. getidfield ( ) )
[2]: org. junit. assert. assertnotnull ( key. getidfield ( ) )
[3]: org. junit. assert. assertequals ( 0, key. getidfield ( ). length )
[4]: org. junit. assert. assertequals ( null, key. getidfield ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( parser )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, repository. getitemcount ( ) )
[2]: org. junit. assert. assertequals ( 1, collection. getitemcount ( ) )
[3]: org. junit. assert. assertequals ( 1, metrics. getitemcount ( ) )
[4]: org. junit. assert. assertequals ( 0, repository. getitemcount ( ) )

************

************
tgt: org . junit . assert . assertfalse ( iterator . hasnext ( ) )
[0]: org. junit. assert. assertequals ( 1, events. getitemcount ( ) )
[1]: org. junit. assert. assertequals ( 1, migratiebijhoudingstapel. size ( ) )
[2]: org. junit. assert. assertequals ( 1, migratiebijhoudingstapel. getid ( ) )
[3]: org. junit. assert. assertequals ( 1, migratiebijhoudingstapel. length )
[4]: org. junit. assert. assertnull ( migratiebijhoudingstapel. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( parentvalue , childvariablespace . getparametervalue ( newparam ) )
[0]: org. junit. assert. assertnull ( migratiebijhoudingstapel )
[1]: org. junit. assert. assertequals ( 1, count )
[2]: org. junit. assert. assertequals ( 0, count )
[3]: org. junit. assert. assertequals ( count, 1 )
[4]: org. junit. assert. assertequals ( 3, count )

************

************
tgt: org . junit . assert . asserttrue ( deserializedcontainer . validate ( ) . isvalid ( ) )
[0]: org. junit. assert. assertequals ( count, columns. length )
[1]: org. junit. assert. assertnull ( uuid )
[2]: org. junit. assert. assertnotnull ( uuid )
[3]: org. junit. assert. assertequals ( null, uuid )
[4]: org. junit. assert. assertequals ( 0, uuid )

************

************
tgt: org . junit . assert . assertequals ( 4 , sourcefilelist . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( path, relativepath )
[2]: org. junit. assert. assertequals ( path, relativepath. tostring ( ) )
[3]: org. junit. assert. assertequals ( path, relativepath. trim ( ) )
[4]: org. junit. assert. assertequals ( path, relativepath. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( targetelement , cal . getelement ( ) )
[0]: org. junit. assert. assertequals ( path, relativepath. getabsolutepath ( ) )
[1]: org. junit. assert. asserttrue ( badsale. isapproved ( ) )
[2]: org. junit. assert. assertequals ( feature, storedfeaturestate )
[3]: org. junit. assert. assertequals ( ip, ip )
[4]: org. junit. assert. assertnotnull ( ip )

************

************
tgt: org . junit . assert . assertequals ( port , configurator . getport ( ) )
[0]: org. junit. assert. assertequals ( ip, p. tostring ( ) )
[1]: org. junit. assert. assertequals ( ip, p. trim ( ) )
[2]: org. junit. assert. assertequals ( ipaddress, ip )
[3]: org. junit. assert. assertnotnull ( a. leavesiterator ( ) )
[4]: org. junit. assert. assertnotnull ( a. leavesiterator ( ). collect ( ) )

************

************
tgt: org . junit . assert . assertnull ( datasource )
[0]: org. junit. assert. assertequals ( 1, a. leavesiterator ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( a. leavesiterator ( ). get ( 0 ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( q )
[4]: org. junit. assert. assertnotnull ( q. stream )

************

************
tgt: org . junit . assert . assertsame ( result , this . logger )
[0]: org. junit. assert. assertnotnull ( q. jj ( ) )
[1]: org. junit. assert. assertequals ( 4, q. getid ( ) )
[2]: org. junit. assert. assertnotnull ( q. collection )
[3]: org. junit. assert. assertfalse ( itr. hasnext ( ) )
[4]: org. junit. assert. asserttrue ( itr. hasnext ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( query )
[0]: org. junit. assert. assertequals ( false, itr. hasnext ( ) )
[1]: org. junit. assert.false ( itr. hasnext ( ) )
[2]: org. junit. assert. assertfalse ( itr. hasnext ( ), true )
[3]: org. junit. assert. assertthat ( command. getattributes ( ), org. hamcrest. corematchers. is ( attributes ) )
[4]: org. junit. assert. assertthat ( command. getattributes ( ), org. hamcrest. corematchers. equalto ( attributes ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertthat ( command, org. hamcrest. corematchers. is ( attributes ) )
[1]: org. junit. assert. assertequals ( attributes, command. getattributes ( ) )
[2]: org. junit. assert. assertnotnull ( command. getattributes ( ) )
[3]: org. junit. assert. assertnotnull ( childrenderer )
[4]: org. junit. assert. assertnotnull ( childderer )

************

************
tgt: org . junit . assert . asserttrue ( com . sun . mail . util . proputil . getbooleanproperty ( props , "test" , false ) )
[0]: org. junit. assert. assertequals ( childrenderer, element )
[1]: org. junit. assert. assertequals ( childrenderer, null )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( supplier )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertequals ( ord , mod )
[0]: org. junit. assert. assertequals ( expected, actualindex )
[1]: org. junit. assert. assertequals ( expected, supplier )
[2]: org. junit. assert. assertequals ( 1, supplier. count )
[3]: org. junit. assert. assertnotnull ( modeljaxbcontextfactory )
[4]: org. junit. assert. assertnotnull ( modeljaxbcontext )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertnotnull ( modeljaxbfec )
[1]: org. junit. assert. assertnotnull ( modeljaxbcontextfactory ) )
[2]: org. junit. assert. assertnotnull ( modeljaxbcontextfactory ) ;
[3]: org. junit. assert. assertnotnull ( is )
[4]: org. junit. assert. assertnotnull ( are )

************

************
tgt: org . junit . assert . assertequals ( httpstatus . sc_bad_request , lockingservice . lockpatient ( ( ( org . phenotips . data . patient ) ( null ) ) ) )
[0]: org. junit. assert. assertnotnull ( was )
[1]: org. junit. assert. assertnotnull ( be )
[2]: org. junit. assert. assertnotnull ( has )
[3]: org. junit. assert. assertequals ( expected, new java. lang. string ( result ) )
[4]: org. junit. assert. assertequals ( expected, java. lang. string. valueof ( result ) )

************

************
tgt: org . junit . assert . asserttrue ( config . isserverenable ( ) )
[0]: org. junit. assert. assertequals ( expected, new java. lang. string ( result, 2 ) )
[1]: org. junit. assert. assertequals ( expected, new java. lang. string ( result, snapshots ) )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. asserttrue ( sink. deleteresource ( mock ( java. util. properties. class ) ) )
[4]: org. junit. assert. assertthat ( sink. deleteresource ( java. util. properties. class ), org. hamcrest. corematchers. is ( true ) )

************

************
tgt: org . junit . assert . assertnotnull ( rowkeys )
[0]: org. junit. assert. asserttrue ( sink. deleteresource ( null ) )
[1]: org. junit. assert. asserttrue ( sink. deleteresource ( java. util. properties. class ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( bt. isempty ( ) )
[4]: org. junit. assert. assertfalse ( bt. isempty ( ) )

************

************
tgt: org . junit . assert . assertthat ( coerciveparsing . hasfurtherparams ( ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( true, bt. isempty ( ) )
[1]: org. junit. assert. assertequals ( false, bt. isempty ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( null, avrofield. getprimitive ( null, null ) )
[4]: org. junit. assert. assertequals ( ( originstat + 1 ), os. getbyteswritten ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( tool )
[0]: org. junit. assert. assertequals ( 1, os. getbyteswritten ( ) )
[1]: org. junit. assert. assertequals ( ( originstat + ( expectedstat + 1 ) ), os. getbyteswritten ( ) )
[2]: org. junit. assert. assertequals ( expectedstat, os. getbyteswritten ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( output )

************

************
tgt: org . junit . assert . assertequals ( expectedindex , artistindex )
[0]: org. junit. assert. assertequals ( null, output )
[1]: org. junit. assert. assertequals ( 1, output. size ( ) )
[2]: org. junit. assert. assertequals ( 1, output. value )
[3]: org. junit. assert. assertequals ( 1, output. values ( ). length )
[4]: org. junit. assert. assertequals ( expectedlist, actuallist )

************

************
tgt: org . junit . assert . assertequals ( com . hazelcast . jet . impl . connector . hazelcastconnectortest . entry_count , com . hazelcast . jet . impl . connector . hazelcastconnectortest . jetinstance . getmap ( sinkname ) . size ( ) )
[0]: org. junit. assert. assertsame ( expectedlist, actuallist )
[1]: org. junit. assert. assertequals ( actuallist, expectedlist )
[2]: org. junit. assert. assertequals ( explist, actuallist )
[3]: org. junit. assert. assertsame ( expectedlist, actuallist )
[4]: org. junit. assert. asserttrue ( p. apply ( tree ) )

************

************
tgt: org . junit . assert . assertequals ( resultentity , entity )
[0]: org. junit. assert. assertequals ( defaultpermission, org. apache. jackrabbit. oak. spi. security. authorization. permission. permissions. getpermission ( path, defaultpermission ) )
[1]: org. junit. assert. assertnotnull ( org. apache. jackrabbit. oak. spi. security. authorization. permission. permissions. getpermission ( path, defaultpermission ) )
[2]: org. junit. assert. assertsame ( defaultpermission, org. apache. jackrabbit. oak. spi. security. authorization. permission. permissions. getpermission ( path, defaultpermission ) )
[3]: org. junit. assert. assertequals ( standardpermission, org. apache. jackrabbit. oak. spi. security. authorization. permission. permissions. getpermission ( path, defaultpermission ) )
[4]: org. junit. assert. assertequals ( org. apache. jackrabbit. oak. spi. security. authorization. permission. permissions. getpermission ( path, defaultpermission ), permissions. permission )

************

************
tgt: org . junit . assert . asserttrue ( client . hasmobile ( ) )
[0]: org. junit. assert. assertequals ( 0, ft. attributes ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, ft. attributes ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 3, ft. attributes ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, ft. attributes ( ). length )
[4]: org. junit. assert. assertnotnull ( ft. attributes ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , key . code )
[0]: org. junit. assert. assertnotnull ( collection )
[1]: org. junit. assert. assertnotnull ( queue )
[2]: org. junit. assert. assertnotnull ( s )
[3]: org. junit. assert. assertnotnull ( context )
[4]: type ) { }

************

************
tgt: org . junit . assert . assertequals ( "testnode" 3 , results . getresultsize ( ) , 10 )
[0]: org. junit. assert. assertnotnull ( wallet. getbalance ( ) )
[1]: org. junit. assert. assertequals ( 1, wallet. getbalance ( ) )
[2]: org. junit. assert. assertequals ( 0, wallet. getbalance ( ) )
[3]: org. junit. assert. assertequals ( 1, wallet. getbalance ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, wallet. getbalance ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , result )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( result, null )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( result, string )

************

************
tgt: org . junit . assert . assertequals ( entity , treated )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), list )
[1]: org. junit. assert. assertequals ( 1, list. size ( ) )
[2]: org. junit. assert. assertnotnull ( list )
[3]: , list )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( data , new java . lang . string ( item . getdata ( ) . get ( ) . array ( ) ) )
[0]: org. junit. assert. assertequals ( true, exceptioncaught )
[1]: org. junit. assert. assertequals ( 1, exceptioncaught )
[2]: org. junit. assert. assertequals ( false, exceptioncaught )
[3]: org. junit. assert. assertequals ( 0, exceptioncaught )
[4]: org. junit. assert. assertequals ( 1, project. getpublishcount ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( path )
[0]: org. junit. assert. assertequals ( 0, project. getpublishcount ( ) )
[1]: org. junit. assert. assertequals ( 1, sched. getpublishcount ( ) )
[2]: org. junit. assert. assertequals ( 1, repository. getpublishcount ( ) )
[3]: org. junit. assert. assertequals ( 1, task. getpublishcount ( ) )
[4]: org. junit. assert. assertequals ( 1, messages. length )

************

************
tgt: org . junit . assert . assertequals ( "groupid:artifactid:extension:version" , instance . getjarartifact ( ) . tostring ( ) )
[0]: org. junit. assert. assertequals ( 0, messages. length )
[1]: org. junit. assert. assertequals ( 5, messages. length )
[2]: org. junit. assert. assertequals ( 4, messages. length )
[3]: org. junit. assert. assertequals ( 3, messages. length )
[4]: org. junit. assert. assertnotnull ( wrapper. getcomment ( ) )

************

************
tgt: org . junit . assert . assertequals ( entitynamechartype . boundary , type )
[0]: org. junit. assert. assertnotnull ( id3v1tag. getcomment ( ) )
[1]: org. junit. assert. assertequals ( id3v1tag, wrapper. getcomment ( ) )
[2]: org. junit. assert. assertnotnull ( converter. getcomment ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( fc )

************

************
tgt: org . junit . assert . assertequals ( 0 , job . getnumreducetasks ( ) )
[0]: org. junit. assert. assertequals ( io. jeo. testdata. states ( ), fc )
[1]: org. junit. assert. assertequals ( io. jeo. testdata. state ( ), fc )
[2]: org. junit. assert. assertequals ( io. jeo. testdata. values ( ), fc )
[3]: org. junit. assert. assertequals ( io. jeo. testdata. elements ( ), fc )
[4]: org. junit. assert. assertthat ( centeredcoordinate, org. hamcrest. matchers. is ( expectedcenteredcoordinate ) )

************

************
tgt: org . junit . assert . assertthat ( incrementcounterlistener . counter , org . hamcrest . matchers . is ( 0 ) )
[0]: org. junit. assert. assertthat ( centeredcoordinate, org. hamcrest. corematchers. is ( expectedcenteredcoordinate ) )
[1]: org. junit. assert. assertthat ( middleedcoordinate, org. hamcrest. matchers. is ( expectedcenteredcoordinate ) )
[2]: org. junit. assert. assertthat ( entitydata, org. hamcrest. matchers. is ( expectedcenteredcoordinate ) )
[3]: org. junit. assert. assertthat ( centeredcoordinate, org. hamcrest. corematchers. is ( expectedcenteredcoordinate ) )
[4]: org. junit. assert. assertequals ( mockmetadata, response )

************

************
tgt: org . junit . assert . asserttrue ( cell . focused ( ) . get ( ) )
[0]: org. junit. assert. assertnotnull ( response )
[1]: org. junit. assert. assertequals ( mockset, response )
[2]: org. junit. assert. assertequals ( mockmetadata )
[3]: ) )
[4]: org. junit. assert. assertequals (bar, cl. getoptionvalue ( ""bar"" ) )

************

************
tgt: org . junit . assert . assertthat ( violations . size ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals (bar, cl. getoptionvalue ( null ) )
[1]: org. junit. assert. assertequals (bar, cl. getoptionvalue ( 1 ) )
[2]: org. junit. assert. assertequals ( ""bar"", cl. getoptionvalue ( ""foo"" ) )
[3]: org. junit. assert. assertequals ( ""bar"", cl. getoptionvalue ( ""a"" ) )
[4]: org. junit. assert. assertnotnull ( cmdline. isshowhelp ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( 1, test. size ( ) )
[1]: org. junit. assert. assertequals ( 0, test. size ( ) )
[2]: org. junit. assert. assertequals ( 1, count1. get ( ) )
[3]: org. junit. assert. assertequals ( 1, count2. get ( ) )
[4]: org. junit. assert. assertequals ( 0, count1. get ( ) )

************

************
tgt: org . junit . assert . assertnull ( gegeveninonderzoek . getentiteitofvoorkomen ( ) )
[0]: org. junit. assert. assertequals ( 3, count1. get ( ) )
[1]: org. junit. assert. assertequals ( 2, count1. get ( ) )
[2]: org. junit. assert. assertnotnull ( request. getproperty ( org. xwiki. container. portlet. portletutils. class ) )
[3]: org. junit. assert. assertequals ( request, request. getproperty ( org. xwiki. container. portlet. portletutils. class ) )
[4]: org. junit. assert. assertnotnull ( request. getproperty ( ""foo"" ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . collections . singleton ( 5 ) , xvalues )
[0]: org. junit. assert. assertnotnull ( request. getproperty ( 0 ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( set. contains ( persoona ) )
[3]: org. junit. assert. asserttrue ( result )
[4]: org. junit. assert. assertthat ( result )

************

************
tgt: org . junit . assert . asserttrue ( ( filesizeafter < filesizebefore ) )
[0]: org. junit. asserttrue ( result )
[1]: , result )
[2]: ) )
[3]: org. junit. assert. assertequals ( null, resultusernamespaceauthorization. getid ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), resultusernamespaceauthorization. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , this . serializer . computeunsugaredexpression ( call ) )
[0]: org. junit. assert. assertequals ( 1, resultusernamespaceauthorization. getid ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( usernamespaceauthorizationentity. getid ( ) ), resultusernamespaceauthorization )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), resultusernamespaceauthorization )
[3]: org. junit. assert. assertnotnull ( org. bonitasoft. engine. io. ioutil. read ( file ) )
[4]: org. junit. assert. assertnull ( org. bonitasoft. engine. io. ioutil. read ( file ) )

************

************
tgt: org . junit . assert . assertequals ( deleteuserkramer , deleteuserkramerduplicate )
[0]: org. junit. assert. assertnotnull ( org. bonitasoft. engine. util. ioutil. read ( file ) )
[1]: org. junit. assert. assertnotnull ( read ( file ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( expected, buchberger )
[4]: org. junit. assert. assertequals ( norm, sugar )

************

************
tgt: org . junit . assert . assertequals ( analyzer . getresults ( ) . tostring ( ) , 2 , analyzer . getresults ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( norm, gb )
[1]: org. junit. assert. assertequals ( norm, agcd )
[2]: the test case
[3]: org. junit. assert. assertequals ( null, lda. getkradlegacydataadapter ( ) )
[4]: org. junit. assert. assertthat ( chain, contains ( locale. chinese ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), chain )
[1]: org. junit. assert. assertthat ( chain, contains ( locale. chinese, locale. chinese ) )
[2]: org. junit. assert. assertequals ( 0, chain. size ( ) )
[3]: org. junit. assert. assertequals ( r, writer. next ( ) )
[4]: org. junit. assert. assertnotnull ( writer. next ( ) )

************

************
tgt: org . junit . assert . assertthat ( resource . list ( "" , namepattern ) , org . hamcrest . matchers . is ( com . google . common . collect . immutablemap . of ( jobid1 , job1 , jobid2 , job2 ) ) )
[0]: org. junit. assert. assertequals ( r, writer. getresult ( ) )
[1]: org. junit. assert. assertnotnull ( writer )
[2]: ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, clazz. typeclass ( ) )
[4]: org. junit. assert. assertequals ( java. lang. object. class, clazz. typeclass ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedlist , actuallist )
[0]: org. junit. assert. assertequals ( java. lang. long. class, clazz. typeclass ( ) )
[1]: org. junit. assert. assertequals ( java. lang. class, clazz. typeclass ( ) )
[2]: org. junit. assert. assertequals ( java. util. arraylist. class, clazz. typeclass ( ) )
[3]: org. junit. assert. assertequals ( spc, spnew )
[4]: org. junit. assert. assertequals ( spc, spnew. getenum ( ) )

************

************
tgt: org . junit . assert . assertequals ( results [ p ] , density , 0.0 )
[0]: org. junit. assert. assertequals ( spc, tcnew. getenum ( ) )
[1]: org. junit. assert. assertequals ( spc, getbranchnew )
[2]: org. junit. assert. assertequals ( spc. getenum ( ), spnew )
[3]: org. junit. assert. assertequals ( 1, candidates. size ( ) )
[4]: org. junit. assert. assertequals ( 0, candidates. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result )
[0]: org. junit. assert. assertequals ( 3, candidates. size ( ) )
[1]: org. junit. assert. assertequals ( 1, candidate. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( origchange, modchange )
[4]: org. junit. assert. assertequals ( "", modchange )

************

************
tgt: org . junit . assert . assertnotnull ( pi )
[0]: org. junit. assert. assertequals ( originalchange, modchange )
[1]: public void modchange ) { }
[2]: public void modchange )
[3]: org. junit. assert. assertnotnull ( group )
[4]: org. junit. assert. assertnull ( group )

************

************
tgt: org . junit . assert . assertequals ( "100px" , c . getminheight ( ) )
[0]: org. junit. assert. assertequals ( null, group )
[1]: , group )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, s. skip ( 1 ) )
[4]: org. junit. assert. assertequals ( 0, s. skip ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , meldingen . size ( ) )
[0]: org. junit. assert. assertequals ( s. skip ( 1 ), 1 )
[1]: org. junit. assert. assertequals ( 1, s. skip ( 0 ) )
[2]: org. junit. assert. assertequals ( s, s. skip ( 1 ) )
[3]: org. junit. assert. assertequals ( 2, tenantid )
[4]: org. junit. assert. assertequals ( null, tenantid )

************

************
tgt: org . junit . assert . assertsame ( result , scope )
[0]: org. junit. assert. assertnotnull ( tenantid )
[1]: , tenantid )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( message )
[4]: org. junit. assert. asserttrue ( message. containsserrormessagelike ( message ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , results . size ( ) )
[0]: org. junit. assert. asserttrue ( message. containserrormessagelike ( message ) )
[1]: , message )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertarrayequals ( expectedresult, result. data )

************

************
tgt: org . junit . assert . assertthat ( 1 , org . hamcrest . matchers . is ( schema . getfields ( ) . size ( ) ) )
[0]: org. junit. assert. assertarrayequals ( expectedresult, result. result )
[1]: org. junit. assert. assertarrayequals ( expectedresult, result. value )
[2]: org. junit. assert. assertarrayequals ( expectedresult, result. args )
[3]: org. junit. assert. assertarrayequals ( expectedresult, result. bytes )
[4]: org. junit. assert. assertequals ( org. threeten. extra. chrono. discordiandate. of ( 2014, 0, 5 ), test )

************

************
tgt: org . junit . assert . asserttrue ( authorizeinteraction )
[0]: org. junit. assert. assertequals ( sp, cb. getsecurityprovider ( ) )
[1]: org. junit. assert. assertnotnull ( cb. getsecurityprovider ( ) )
[2]: org. junit. assert. assertnull ( cb. getsecurityprovider ( ) )
[3]: org. junit. assert. assertequals ( sp, cb. getsecurityprovider ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( d , person . getpersondatevoided ( ) )
[0]: org. junit. assert. assertequals ( jmsbridgeprovidertest. topic_connection_factory_test, bridge. gettopicconnectionfactoryname ( ) )
[1]: org. junit. assert. assertnotnull ( bridge. gettopicconnectionfactoryname ( ) )
[2]: org. junit. assert. assertequals ( jmsbridge. topic_connection_factory_test, bridge. gettopicconnectionfactoryname ( ) )
[3]: org. junit. assert. assertequals ( jmsbridgeprovidertest. topic_connection_factory_test, bridge. gettopicconnectionfactoryname ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( jmsbridge1. topic_connection_factory_test, bridge. gettopicconnectionfactoryname ( ) )

************

************
tgt: org . junit . assert . assertequals ( i , r )
[0]: org. junit. assert. assertequals ( 20, d. noise ( ) )
[1]: org. junit. assert. assertequals ( 20, d. noise ( ), 0 )
[2]: org. junit. assert. assertequals ( 1, d. noise ( ) )
[3]: org. junit. assert. assertnotnull ( d. noise ( ) )
[4]: org. junit. assert. assertequals ( 0, d. noise ( ) )

************

************
tgt: org . junit . assert . asserttrue ( hasindexhashkeyequalcondition )
[0]: org. junit. assert. assertequals ( licenseid, license )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( licenseid ), license )
[2]: org. junit. assert. assertequals ( java. lang. string. class, license. getclass ( ) )
[3]: org. junit. assert. assertequals ( ee, license )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( true , ok . get ( ) )
[0]: org. junit. assert. assertfalse ( datachanged )
[1]: org. junit. assert. assertequals ( true, datachanged )
[2]: org. junit. assert. assertnull ( interceptor. getnextpage ( p ) )
[3]: org. junit. assert. assertnotnull ( interceptor. getnextpage ( p ) )
[4]: org. junit. assert. assertequals ( p, interceptor. getnextpage ( p ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( null, interceptor. getnextpage ( p ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, classundertest ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, classundertest ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( classundertest ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( classundertest ( ). collection ( ) )
[1]: org. junit. assert. assertnotnull ( classundertest ( ). set ( 1, 1 ) )
[2]: org. junit. assert. assertequals ( 1, getsalience ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, getsalience ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( getsalience ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( at . gettokenkey ( ) )
[0]: org. junit. assert. assertequals ( 1, get ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, this. getsalience ( ) )
[2]: org. junit. assert. assertequals ( rs. next ( ), tmp [ i ] )
[3]: org. junit. assert. assertnotnull ( tmp [ i ] )
[4]: org. junit. assert. assertequals ( rs, tmp [ i ] )

************

************
tgt: org . junit . assert . assertsame ( mocked , actual )
[0]: org. junit. assert. assertequals ( rs. next ( ), tmp )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, query. count ( ) )
[3]: org. junit. assert. assertequals ( 0, query. count ( ) )
[4]: org. junit. assert. assertequals ( 1l, query. count ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , listeners . size ( ) )
[0]: org. junit. assert. assertequals ( 0l, query. count ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, numberofsuccessfulgetitemcalls. get ( ) )
[3]: org. junit. assert. assertequals ( 0, numberofsuccessfulgetitemcalls. get ( ) )
[4]: org. junit. assert. assertequals ( 2, numberofsuccessfulgetitemcalls. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( 50 , sum , 0 )
[0]: org. junit. assert. assertequals ( 3, numberofsuccessfulgetitemcalls. get ( ) )
[1]: . get ( ) )
[2]: org. junit. assert. assertnotnull ( name )
[3]: org. junit. assert. assertequals ( null, name )
[4]: org. junit. assert. assertequals ( name, name )

************

************
tgt: org . junit . assert . assertequals ( 1 , count . get ( ) )
[0]: org. junit. assert. assertequals ( name, null )
[1]: org. junit. assert. assertequals ( name, 1 )
[2]: org. junit. assert. assertnotnull ( propertynamesset )
[3]: org. junit. assert. assertnull ( propertynamesset )
[4]: org. junit. assert. assertequals ( 1, propertynamesset )

************

************
tgt: org . junit . assert . assertequals ( 401 , response . getcode ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnull ( concurrentmap. get ( s ) )
[3]: org. junit. assert. assertnull ( concurrentmap. get ( 0 ) )
[4]: org. junit. assert. assertequals ( oldvalue, concurrentmap. get ( s ) )

************

************
tgt: org . junit . assert . assertequals ( firstvalidinput , inputs [ 8 ] )
[0]: org. junit. assert. assertequals ( oldvalue, concurrentmap. get ( s ) )
[1]: null ) )
[2]: org. junit. assert. assertthat ( messages. getlist ( ), org. hamcrest. corematchers. is ( 0 ) )
[3]: org. junit. assert. assertnotnull ( messages. getlist ( ) )
[4]: org. junit. assert. assertequals ( 0, messages. getlist ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . collections . singletonlist ( downloadar ) , result )
[0]: org. junit. assert. assertequals ( 1, messages. getlist ( ). size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, exitvalue )
[3]: org. junit. assert. assertthat ( exitvalue )
[4]: org. junit. assert. assertnotnull ( exitvalue )

************

************
tgt: org . junit . assert . assertthat ( uut . getfeatures ( ) . isempty ( ) , org . hamcrest . matchers . is ( false ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnotnull ( mars. getname ( ) )
[3]: org. junit. assert. assertequals ( null, mars. getname ( ) )
[4]: org. junit. assert. assertequals ( name, mars. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( string_1, mars. getname ( ) )
[1]: org. junit. assert. assertequals ( string_1, mars. getname ( ). tostring ( ) )
[2]: org. junit. assert. assertequals ( 1, exitstatus. exitstatus ( ) )
[3]: org. junit. assert. assertnotnull ( zipreader. getentryasstring ( tempzipfile ) )
[4]: org. junit. assert. assertnotnull ( zipreader. getentryasstring ( null ) )

************

************
tgt: org . junit . assert . assertarrayequals ( result , expected )
[0]: org. junit. assert. assertequals ( null, zipreader. getentryasstring ( null ) )
[1]: org. junit. assert. assertnotnull ( zipreader. getentryasstring ( 0 ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( auth. authenticate ( com. asolutions. scmsshd. authenticators. passifanyincollectionpassauthenticatortest. username, com. asolutions. scmsshd. authenticators. passifanyincollectionpassauthenticatortest. password, mockserversession ) )
[4]: org. junit. assert. assertnotnull ( authentication. authenticate ( com. asolutions. scmsshd. authenticators. passifanyincollectionpassauthenticatortest. username, com. asolutions. scmsshd. authenticators. passifanyincollectionpassauthenticatortest. password, mockserversession ) )

************

************
tgt: org . junit . assert . asserttrue ( indels . isempty ( ) )
[0]: org. junit. assert. assertequals ( authlist, failsauth. authenticate ( com. asolutions. scmsshd. authenticators. passifanyincollectionpassauthenticatortest. username, com. asolutions. scmsshd. authenticators. passifanyincollectionpassauthenticatortest. password, mockserversession ) )
[1]: org. junit. assert. assertequals ( studycount, allstudies. size ( ) )
[2]: org. junit. assert. assertequals ( 1, allstudies. size ( ) )
[3]: org. junit. assert. assertequals ( dataset, allstudies. size ( ) )
[4]: org. junit. assert. assertnotnull ( allstudies )

************

************
tgt: org . junit . assert . assertequals ( "default" , com . google . cloud . tools . eclipse . appengine . localserver . server . moduleutils . getserviceid ( module ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( plusexpr. right, right. get ( ) )
[2]: org. junit. assert. assertequals ( plusexpr. right. get ( ), right )
[3]: org. junit. assert. assertequals ( plusexpr. right, container. get ( ) )
[4]: org. junit. assert. assertequals ( plusexpr. right. get ( ), right. expression )

************

************
tgt: org . junit . assert . assertequals ( category . getproducts ( ) . size ( ) , 10 )
[0]: get ( ) )
[1]: org. junit. assert. assertequals ( 1, keyindexdefinition. getparamcount ( ) )
[2]: org. junit. assert. assertequals ( 0, keyindexdefinition. getparamcount ( ) )
[3]: org. junit. assert. assertequals ( 2, keyindexdefinition. getparamcount ( ) )
[4]: org. junit. assert. assertthat ( customhandler, org. hamcrest. corematchers. equalto ( customhandler ) )

************

************
tgt: org . junit . assert . assertfalse ( meldingen . isempty ( ) )
[0]: org. junit. assert. assertthat ( customhandler, org. hamcrest. matchers. equalto ( customhandler ) )
[1]: org. junit. assert. assertthat ( customhandler, org. hamcrest. corematchers. is ( customhandler ) )
[2]: org. junit. assert. assertthat ( customhandler, org. mule. tck. util. enumerationmatcher. equalto ( customhandler ) )
[3]: org. junit. assert. assertthat ( customhandler, org. hamcrest. corematchers. equalto ( customhandler ). tostring ( ) )
[4]: org. junit. assert. assertthat ( b1. get ( ), org. hamcrest. corematchers. is ( false ) )

************

************
tgt: org . junit . assert . asserttrue ( filter . evaluate ( feature ) )
[0]: org. junit. assert. assertthat ( b1. get ( ). size ( ), org. hamcrest. corematchers. is ( 0 ) )
[1]: org. junit. assert. assertthat ( b1. get ( ), org. hamcrest. corematchers. is ( 0 ) )
[2]: org. junit. assert. assertthat ( b1. get ( ), org. hamcrest. corematchers. is ( 1 ) )
[3]: org. junit. assert. assertthat ( b1. get ( ). size ( ), org. hamcrest. corematchers. is ( 1 ) )
[4]: org. junit. assert. assertequals ( countbits, permuteds. countsetbits ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( "error<sp>in<sp>serialization<sp>for<sp>size<sp>" + i ) , value , org . apache . oozie . util . stringserializationutil . readstring ( datainput ) )
[0]: org. junit. assert. assertequals ( cntbits, permuteds. countsetbits ( ) )
[1]: org. junit. assert. assertequals ( cntbits, s. countsetbits ( ) )
[2]: org. junit. assert. assertequals ( ( cntbits + 1 ), permuteds. countsetbits )
[3]: ) )
[4]: org. junit. assert. assertnull ( converter. converttomodel ( null, java. lang. enum. class, null ) )

************

************
tgt: org . junit . assert . assertequals ( customer1 . getsources ( ) . size ( ) , 2 )
[0]: org. junit. assert. assertnull ( converter. converttomodel ( null, java. util. date. class, null ) )
[1]: org. junit. assert. assertnull ( converter. converttomodel ( null, java. util. arraylist. class, null ) )
[2]: org. junit. assert. assertnull ( converter. converttomodel ( null, java. util. list. class, null ) )
[3]: type ) { } }
[4]: org. junit. assert. assertequals ( 0, object. indexof ( "a ) )

************

************
tgt: org . junit . assert . asserttrue ( exceptionoccured )
[0]: org. junit. assert. assertequals ( 0, object. indexof ( java. lang. string. valueof ( 1 ) ) )
[1]: org. junit. assert. assertequals ( 0, object. indexof ( ""a"" ) )
[2]: org. junit. assert. assertequals ( 0, object. indexof ( java. lang. string. class ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 2, textoutputstream. getstyleranges ( ). length )

************

************
tgt: org . junit . assert . assertthat ( ts . getpattern ( ) , org . hamcrest . corematchers . is ( "you<sp>can't<sp>do<sp>that<sp>because<sp>there<sp>are<sp>dependent<sp>objects" ) )
[0]: org. junit. assert. assertequals ( 1, textoutputstream. getstyleranges ( ). length )
[1]: org. junit. assert. assertequals ( 1, text. getstyleranges ( ). length )
[2]: org. junit. assert. assertequals ( 2, text. getstyleranges ( ). length )
[3]: org. junit. assert. assertequals ( 3, textoutputstream. getstyleranges ( ). length )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( result, null )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertnotnull ( behavior )

************

************
tgt: org . junit . assert . assertequals ( "12345" , value )
[0]: org. junit. assert. assertequals ( q, result )
[1]: org. junit. assert. assertequals ( quant, result )
[2]: org. junit. assert. assertequals ( query, result )
[3]: org. junit. assert. assertequals ( q, results )
[4]: org. junit. assert. assertequals ( q )

************

************
tgt: org . junit . assert . assertsame ( expr . accept ( visitor ) , visitresult )
[0]: org. junit. assert. asserttrue ( map. isempty ( ) )
[1]: org. junit. assert. asserttrue ( sender. checkjmsresources ( ) )
[2]: org. junit. assert. assertthat ( operationcontext. hasparameter ( null ), org. hamcrest. corematchers. is ( true ) )
[3]: org. junit. assert. assertthat ( operationcontext. hasparameter ( null ), org. hamcrest. corematchers. is ( false ) )
[4]: org. junit. assert. asserttrue ( operationcontext. hasparameter ( null ) )

************

************
tgt: org . junit . assert . assertthat ( option , is ( new com . asakusafw . runtime . value . intoption ( ) ) )
[0]: org. junit. assert. assertfalse ( operationcontext. hasparameter ( null ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected, result. memory ( ) )
[3]: org. junit. assert. assertequals ( 1, result. memory ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( program, program ), result )

************

************
tgt: org . junit . assert . asserttrue ( ( ( p1 . compareto ( p2 ) ) == 0 ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( program ), result )
[1]: org. junit. assert. assertequals ( expected, result )
[2]: org. junit. assert. assertequals ( true, condition. evaluatewithrecord ( null ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( maxtime ), time )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( maxtime ), java. lang. string. valueof ( time ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expect , dest )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( maxtime ), time )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( maxtime ), java. lang. long. valueof ( time ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( time ), java. util. arrays. aslist ( time ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( key1, key2 ), challenge. solve ( key1, key2, key2 ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( key1, key2 ), challenge. solve ( key3, key1, key2 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , ret )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( key1, key2 ), challenge. solve ( key1, key2, key3 ) )
[1]: org. junit. assert. assertequals ( org. projectodd. stilts. protocol. websocket. ietf00websocketchallenge. solve ( key1, key2, key3 ), challenge. tostring ( ) )
[2]: org. junit. assert. assertequals ( org. projectodd. stilts. protocol. websocket. ietf00websocketchallenge. solve ( key1, key2, key3 ), challenge. getmessage ( ) )
[3]: org. junit. assert. assertnotnull ( uk. uuid. slf4j. android. loggerfactory. aggregator ( name. tostring ( ) ) )
[4]: org. junit. assert. assertnotnull ( uk. uuid. slf4j. android. loggerfactory. aggregator ( name ) )

************

************
tgt: org . junit . assert . asserttrue ( mroundedcolordrawable . iscircle ( ) )
[0]: org. junit. assert. assertnotnull ( uk. uuid. slf4j. android. loggerfactory. aggregator ( ""bar"" ) )
[1]: org. junit. assert. assertnotnull ( uk. uuid. slf4j. android. loggerfactory. aggregator ( name. touppercase ( ) ) )
[2]: org. junit. assert. assertnotnull ( uk. uuid. slf4j. android. loggerfactory. class. getname ( ""bar"" ) )
[3]: org. junit. assert. assertfalse ( matcher. matches ( null ) )
[4]: org. junit. assert. assertequals ( bigdecimal. ten, costs. get ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( bigdecimal. ten, costs. get ( null ) )
[1]: org. junit. assert. assertequals ( bigdecimal. ten, costs. get ( 1 ) )
[2]: org. junit. assert. assertnotnull ( costs. get ( 0 ) )
[3]: org. junit. assert. assertnotnull ( costs )
[4]: org. junit. assert. assertnotnull ( trinity )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . string ( "trp" ) , omonomer . getmonomertype ( ) )
[0]: org. junit. assert. assertequals ( trinity, trinity )
[1]: org. junit. assert. assertnotnull ( trinity. getproperty ( 0 ) )
[2]: org. junit. assert. assertnotnull ( trinity. getproperty ( ) )
[3]: org. junit. assert. assertnotnull ( trinity. getproperty ( null ) )
[4]: org. junit. assert. assertequals ( 1, completes. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( finalstatedescription . getoptions ( ) , org . hamcrest . corematchers . is ( statedescription2 . getoptions ( ) ) )
[0]: org. junit. assert. assertnotnull ( rendered )
[1]: org. junit. assert. assertnull ( rendered )
[2]: org. junit. assert. assertarrayequals ( test, rendered )
[3]: , rendered )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( "0123456789" , result )
[0]: org. junit. assert. assertequals ( com. fillumina. performance. warmuptest. warmup, countertest. getvalue ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( com. fillumina. performance. warmuptest. iterations ), countertest. getvalue ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( com. fillumina. performance. warmuptest. concurrency_level ), countertest. getvalue ( ) )
[3]: org. junit. assert. assertequals ( 0, countertest. getvalue ( ) )
[4]: org. junit. assert. assertequals ( null, countertest. getvalue ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result . passedvalidation ( ) )
[0]: org. junit. assert. assertequals ( expectedjson, generatedjson )
[1]: org. junit. assert. assertthat ( generatedjson, is ( expectedjson ) )
[2]: org. junit. assert. assertequals ( resultjson, generatedjson )
[3]: org. junit. assert. assertequals ( actualjson, generatedjson )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( mm . getgrid ( ) [ 8 ] [ 7 ] )
[0]: org. junit. assert. assertnotnull ( filestate )
[1]: org. junit. assert. assertequals ( filestate, filestate )
[2]: org. junit. assert. assertequals ( filestate, filestate. getfilestate ( originallen ) )
[3]: org. junit. assert. assertnotnull ( filestate. getfilestate ( originallen ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( com . eclipsesource . v8 . v8 . getundefined ( ) , result )
[0]: org. junit. assert. assertnotnull ( loadpath. get ( ) )
[1]: org. junit. assert. assertnotnull ( loadingpath. get ( ) )
[2]: org. junit. assert. assertequals ( loadpath. get ( ), null )
[3]: org. junit. assert. assertnotnull ( loaderpath. get ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( businessobjectformat , updatedbusinessobjectformat )
[0]: org. junit. assert. assertequals ( """", proxy. tostring ( ) )
[1]: org. junit. assert. assertequals ( null, proxy. tostring ( ) )
[2]: org. junit. assert. assertequals ( ""test"", proxy. tostring ( ) )
[3]: org. junit. assert. assertequals ( 0, proxy. tostring ( ). length )
[4]: . tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( team1. getname ( ) )
[1]: org. junit. assert. assertequals ( com. sap. core. odata. ref. model. teamtest. name, team1. getname ( ) )
[2]: org. junit. assert. assertequals ( null, team1. getname ( ) )
[3]: org. junit. assert. assertequals ( name, team1. getname ( ) )
[4]: org. junit. assert. assertequals ( com. sap. core. odata. ref. model )

************

************
tgt: org . junit . assert . assertnull ( message )
[0]: org. junit. assert. assertthat ( result2, org. hamcrest. corematchers. is ( result2 ) )
[1]: org. junit. assert. assertthat ( result2, org. hamcrest. corematchers. is ( result1 ) )
[2]: org. junit. assert. assertthat ( result2, org. hamcrest. matchers. is ( result ) )
[3]: org. junit. assert. assertthat ( result2, org. hamcrest. matchers. is ( result2 ) )
[4]: org. junit. assert. assertthat ( result2, org. hamcrest. corematchers. is ( result2. type ) )

************

************
tgt: org . junit . assert . assertequals ( origin , reconstructed )
[0]: org. junit. assert. assertequals ( testvalue, outvalue, 0 )
[1]: org. junit. assert. assertnotnull ( multimock )
[2]: org. junit. assert. assertnull ( multimock )
[3]: org. junit. assert. assertequals ( 1, multimock )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "a" , org . campagnelab . dl . genotype . segments . segmentlabelmapper . sortbyindices ( teststring , testindices ) )
[0]: )
[1]: org. junit. assert. assertequals ( 1, conflictmedicationids. size ( ) )
[2]: org. junit. assert. assertequals ( 0, conflictmedicationids. size ( ) )
[3]: org. junit. assert. assertequals ( 3l, conflictmedicationids. size ( ) )
[4]: org. junit. assert. assertequals ( 1l, conflictmedicationids. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( acbp )
[0]: org. junit. assert. assertequals ( 2, conflictmedicationids. size ( ) )
[1]: org. junit. assert. assertnotnull ( pnr )
[2]: org. junit. assert. assertnotnull ( pnr. getproperty ( ) )
[3]: org. junit. assert. assertnotnull ( pnrs )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "result" , testbean . getresult ( ) )
[0]: )
[1]: org. junit. assert. asserttrue ( actual )
[2]: org. junit. assert. assertfalse ( actual )
[3]: org. junit. assert. assertnotnull ( actual )
[4]: , actual )

************

************
tgt: org . junit . assert . asserttrue ( fieldtype . isforeign ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( simplified, simplified )
[2]: org. junit. assert. assertequals ( simplified, fromjson )
[3]: org. junit. assert. assertequals ( simplified, string )
[4]: org. junit. assert. assertequals ( simplified, s )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, results. size ( ) )
[2]: org. junit. assert. assertequals ( sb. tostring ( ), string )
[3]: org. junit. assert. assertnotnull ( name )
[4]: org. junit. assert. assertnull ( name )

************

************
tgt: org . junit . assert . assertequals ( expectedoutput , conf . tostring ( ) )
[0]: , name )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 1, pricemodelhistory. getobjversion ( ) )
[4]: org. junit. assert. assertequals ( 0, pricemodelhistory. getobjversion ( ) )

************

************
tgt: org . junit . assert . assertequals ( color , cloud . getselectioncolor ( ) )
[0]: org. junit. assert. assertequals ( expected, out )
[1]: org. junit. assert. assertequals ( expected. trim ( ), out. trim ( ) )
[2]: org. junit. assert. assertequals ( expected, out. substring ( 0, 2 ) )
[3]: org. junit. assert. assertequals ( expected, out. trim ( ) )
[4]: assertequals ( expected, out )

************

************
tgt: org . junit . assert . assertequals ( "another" , connection . getname ( ) )
[0]: org. junit. assert. assertfalse ( isvalid )
[1]: org. junit. assert. assertequals ( 1, _h. size ( ) )
[2]: org. junit. assert. assertequals ( 0, _h. size ( ) )
[3]: org. junit. assert. assertequals ( 1, _h. data. size ( ) )
[4]: org. junit. assert. assertequals ( 1, _h. values ( ). length )

************

************
tgt: org . junit . assert . assertnotnull ( model )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, com. machinezoo. sourceafis. block. around ( 1, 1, 1 ). size ( ) )
[2]: org. junit. assert. assertequals ( com. machinezoo. sourceafis. block. around ( 1, 1, 1 ), com. machinezoo. sourceafis. block. around ( 1, 1, 1 ) )
[3]: org. junit. assert. assertequals ( 1, com. machinezoo. sourceafis. block. around ( 0, 1, 1 ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, com. machinezoo. sourceafis. block. around ( 1, 1, 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( exceptionreport . gethttpstatuscode ( ) ) == ( javax . servlet . http . httpservletresponse . sc_not_implemented ) ) )
[0]: org. junit. assert. assertequals ( com. machinezoo. sourceafis. block. around ( 1, 1, 1 ), com. machinezoo. sourceafis. block. around ( 0, 1, 1 ) )
[1]: org. junit. assert. assertfalse ( path, defineslocation ( location ) )
[2]: org. junit. assert. assertfalse ( path. defineslocation ( location ) )
[3]: org. junit. assert. assertfalse ( s. defineslocation ( location ) )
[4]: org. junit. assert. assertfalse ( com. google. common. collect. lists. newarraylist ( path, location ) )

************

************
tgt: org . junit . assert . assertnull ( scan )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, model. getawssecretkey ( ) )
[2]: org. junit. assert. assertequals ( 0, model. getawssecretkey ( ) )
[3]: org. junit. assert. assertequals ( null, model. getawssecretkey ( ) )
[4]: org. junit. assert. assertequals ( root, model. getawssecretkey ( ) )

************

************
tgt: org . junit . assert . assertnull ( ref )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( socket. getselectorproviderchooser ( ) )
[2]: org. junit. assert. assertnotnull ( ctx. getselectorproviderchooser ( ) )
[3]: org. junit. assert. assertnotnull ( socket )
[4]: org. junit. assert. assertnotnull ( socket. getselectorproviderchooser )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertnull ( socket )
[1]: org. junit. assert. assertequals ( expected. tostring ( ), s )
[2]: org. junit. assert. assertequals ( expected, s. tostring ( ) )
[3]: org. junit. assert. assertequals ( expected, actual )
[4]: org. junit. assert. assertequals ( result, actual )

************

************
tgt: org . junit . assert . assertequals ( resource , overwritefunction . getresource ( ) )
[0]: org. junit. assert. assertequals ( actual, expected )
[1]: org. junit. assert. assertequals ( expected, actual ) to )
[2]: ) )
[3]: org. junit. assert. assertnull ( processor )
[4]: org. junit. assert. assertequals ( null, processor )

************

************
tgt: org . junit . assert . asserttrue ( bdeleted )
[0]: org. junit. assert. assertnotnull ( processor )
[1]: org. junit. assert.null ( processor )
[2]: ) )
[3]: org. junit. assert. assertnull ( encryption )
[4]: org. junit. assert. assertequals ( 1, found. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ticksstyle . bottom , group . getticksstyle ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 3, 5 ), found )
[1]: org. junit. assert. assertequals ( 0, found. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), found )
[3]: org. junit. assert. assertnotnull ( found )
[4]: org. junit. assert. assertnull ( mapper. readvalue ( quote ( "<sp>12 ), java. time. zoneoffset. class ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnull ( mapper. readvalue ( quote ( "<sp> shipping ), java. time. zoneoffset. class ) )
[1]: org. junit. assert. assertnull ( mapper. readvalue ( quote ( "<sp>null ), java. time. zoneoffset. class ) )
[2]: org. junit. assert. assertnull ( mapper. readvalue ( quote ( "<sp>priority ), java. time. zoneoffset. class ) )
[3]: org. junit. assert. assertnull ( mapper. readvalue ( quote ) )
[4]: org. junit. assert. assertequals ( 1, mapappender. geteventmap ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( cumulates )
[0]: org. junit. assert. assertequals ( 0, mapappender. geteventmap ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, resultmessage ( result, org. openstack. atlas. api. validation. validators. put ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, resultmessage ( result, org. openstack. atlas. api. validation. validators. put ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, resultmessage ( result, org. openstack. atlas. api. validation. validators. put ), result. size ( ) )
[4]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. validation. validators. put ), result. passedvalidation ( ) )

************

************
tgt: org . junit . assert . assertthat ( target . equals ( match ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertnull ( resultmessage ( result, org. openstack. atlas. api. validation. validators. put ), result. passedvalidation ( ) )
[1]: org. junit. assert. assertequals ( json, sessionid. tostring ( ) )
[2]: org. junit. assert. assertequals ( json, sessionid. tostring ( ) )
[3]: org. junit. assert. assertequals ( json, dpc. tostring ( ) )
[4]: org. junit. assert. assertequals ( json, sessionid. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( date , bean . gettodate ( ) )
[0]: ) )
[1]: org. junit. assert. assertthat ( after, org. hamcrest. corematchers. is ( before ) )
[2]: org. junit. assert. assertthat ( after, org. hamcrest. corematchers. is ( after ) )
[3]: org. junit. assert. assertequals ( ( before + 4 ), after )
[4]: org. junit. assert. assertthat ( after, is ( before ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . core . is . is ( expected ) )
[0]: org. junit. assert. assertthat ( after )
[1]: org. junit. assert. assertnotnull ( to todelete )
[2]: org. junit. assert. assertequals ( 1, thevalue, 0 )
[3]: org. junit. assert. assertequals ( ( x + 1 ), thevalue, 0 )
[4]: org. junit. assert. assertequals ( ( x / 2 ), thevalue, 0 )

************

************
tgt: org . junit . assert . asserttrue ( fouten . isempty ( ) )
[0]: org. junit. assert. assertequals ( ( x + 2 ), thevalue, 0 )
[1]: org. junit. assert. assertequals ( ( x + 1 ), thevalue )
[2]: org. junit. assert. assertnotnull ( list )
[3]: org. junit. assert. assertequals ( 1, list. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), list )

************

************
tgt: org . junit . assert . assertequals ( "" , plaintext )
[0]: ) )
[1]: 
[2]: org. junit. assert. assertequals ( expectedsql, actualquery )
[3]: org. junit. assert. assertequals ( expectedsql, testbuild )
[4]: org. junit. assert. assertequals ( expectedsql, outputquery )

************

************
tgt: org . junit . assert . assertequals ( assertion , test )
[0]: org. junit. assert. assertequals ( expectedsql, resultquery )
[1]: org. junit. assert. assertequals ( expectedsql, fullquery )
[2]: org. junit. assert. assertequals ( 0, serializer. serialize ( null ). length )
[3]: org. junit. assert. assertequals ( new byte [ 0 ], serializer. serialize ( null ) )
[4]: org. junit. assert. assertequals ( null, serializer. serialize ( null ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), serialize ( null ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, activitynodes. size ( ) )
[3]: org. junit. assert. assertequals ( winstatus, totalmoves )
[4]: org. junit. assert. assertequals ( 0, winstatus )

************

************
tgt: org . junit . assert . assertnull ( org . eclipse . hono . util . messagehelper . gettimeuntildisconnect ( messagecaptor . getvalue ( ) ) )
[0]: org. junit. assert. assertequals ( 1, winstatus )
[1]: , winstatus )
[2]: ) )
[3]: org. junit. assert. assertequals ( f. s, solution, 0.0 )
[4]: org. junit. assert. assertequals ( f. shipping ( solution ), solution, 0.0 )

************

************
tgt: org . junit . assert . assertnotnull ( report )
[0]: org. junit. assert. assertequals ( f. guaranteed ( solution ), solution, 0.0 )
[1]: org. junit. assert. assertequals ( f. tostring ( ), solution, 0.0 )
[2]: org. junit. assert. assertequals ( f. guaranteed ( solution, 0.0 ), solution )
[3]: org. junit. assert. assertequals ( 3, metadata. size ( ) )
[4]: org. junit. assert. assertequals ( 2, metadata. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , zero . getpartialderivative ( n ) , epsilon [ n ] )
[0]: org. junit. assert. assertequals ( 3, metadat. size ( ) )
[1]: org. junit. assert. assertequals ( 1, metadata. size ( ) )
[2]: org. junit. assert. assertequals ( 5, metadata. size ( ) )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 34 ), immediatevalue. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, ( ( int ) ( immediatevalue. getvalue ( ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( "$foo" , cookie . getname ( ) )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), immediatevalue. getvalue ( ) )
[1]: org. junit. assert. assertequals ( null, immediatevalue. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 1, immediatevalue. getvalue ( ) )
[3]: org. junit. assert. assertequals ( com. rackspacecloud. blueflood. types. bluefloodcounterrollup. class, com. rackspacecloud. blueflood. types. rolluptype. classof ( rolluptype. my, type ) )
[4]: org. junit. assert. assertequals ( com. rackspacecloud. blueflood. types. bluefloodcounterrollup. class, com. rackspacecloud. blueflood. types. rolluptype. classof ( rolluptype. getid ( ), type ) )

************

************
tgt: org . junit . assert . assertequals ( union , result )
[0]: org. junit. assert. assertequals ( com. rackspacecloud. blueflood. types. bluefloodcounterrollup. class, com. rackspacecloud. blueflood. types. rolluptype. classof ( rolluptype. timer, type ) )
[1]: org. junit. assert. assertequals ( com. rackspacecloud. blueflood. types. bluefloodcounterrollup. class, com. rackspacecloud. blueflood. types. rolluptype. classof ( rolluptype. counter, type ) )
[2]: org. junit. assert. assertequals ( com. rackspacecloud. blueflood. types. bluefloodcounterrollup. class, com. rackspacecloud. blueflood. types. rolluptype. classof ( rolluptype. getid ( ), null ) )
[3]: org. junit. assert. assertnotnull ( np. getdescription ( ) )
[4]: org. junit. assert. assertequals ( np. getdescription ( ), "bla_2 )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , actual )
[0]: org. junit. assert. assertequals ( np. getdescription ( ), "blawide )
[1]: org. junit. assert. assertequals ( np. getdescription ( ), "blalecules )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, wait )
[4]: org. junit. assert. assertequals ( wait, 1 )

************

************
tgt: org . junit . assert . asserttrue ( success )
[0]: org. junit. assert. assertequals ( 0, wait )
[1]: org. junit. assert. assertequals ( wait, 0 )
[2]: org. junit. assert. assertequals ( waits, 1 )
[3]: org. junit. assert. asserttrue ( profile. isexpired ( ) )
[4]: org. junit. assert. assertequals ( n, n )

************

************
tgt: org . junit . assert . assertfalse ( testedstore . existproperty ( "invalid" ) )
[0]: org. junit. assert. assertequals ( n, 4 )
[1]: org. junit. assert. assertfalse ( customer )
[2]: org. junit. assert. assertnull ( customer )
[3]: org. junit. assert. assertequals ( s, converter. reconvert ( s ) )
[4]: org. junit. assert. assertequals ( s, converter. reconvert ( s ). tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( specificrecord , deserialized )
[0]: org. junit. assert. assertequals ( s, converter. reconvert ( s ). trim ( ) )
[1]: org. junit. assert. assertequals ( s, converter. reconvert ( s ). getid ( ) )
[2]: org. junit. assert. assertequals ( s, converter. reconvert ( w ) )
[3]: org. junit. assert. assertequals ( null, marketplaceservice. getselectablemarketplaces ( ) )
[4]: org. junit. assert. assertequals ( 1, control. getselectablemarketplaces ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 1, c. getselectablemarketplaces ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, marketplaceservice. getselectablemarketplaces ( ). length )
[2]: ) )
[3]: org. junit. assert. assertequals ( blobsize, input. length ( ) )
[4]: org. junit. assert. assertequals ( 1, input. length ( ) )

************

************
tgt: org . junit . assert . asserttrue ( results . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, input. length ( ) )
[1]: org. junit. assert. assertequals ( input. length ( ), blobsize )
[2]: org. junit. assert. assertequals ( bytes. length ( ), input. length )
[3]: org. junit. assert. assertnotnull ( inode )
[4]: org. junit. assert. assertnull ( context. currentinode ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . apache . druid . metadata . defaultpasswordprovidertest . pwd , pp . getpassword ( ) )
[0]: org. junit. assert. assertnotnull ( context. currentinode ( ) )
[1]: org. junit. assert. assertnull ( context )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, options. getoptions ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, options. getoptions ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( foundusers . contains ( user . getusername ( ) ) , org . hamcrest . matchers . is ( true ) )
[0]: org. junit. assert. assertequals ( 0, options. getoptions ( ). length )
[1]: org. junit. assert. assertequals ( 0, options. getoptions ( ). size ( ), 0 )
[2]: org. junit. assert. assertequals ( 0, options. getoptions ( ). size ( )
[3]: org. junit. assert. assertequals ( fileid, mfilesystemmaster. getfileinfo ( alluxio. master. file. filesystemmastertest. nested_file_uri ). getfileid ( ) )
[4]: org. junit. assert. assertequals ( fileid, mfilesystemmaster. getfileinfo ( alluxio. master. file. filesystemmastertest. nested_file_uri, context ). getfileid ( ) )

************

************
tgt: org . junit . assert . assertequals ( this . newmultimapwithkeysvalues ( "one" , 1 , "one" , 12 ) , rejectedmultimap )
[0]: org. junit. assert. assertequals ( fileid, mfilesystemmaster. getfileinfo ( alluxio. master. file. filesystemmastertest. nested_file_uri,context ). getfileid ( ) )
[1]: org. junit. assert. assertequals ( fileid, mfilesystemmaster. getfileinfo ( alluxio. master. file. filesystemmastertest. nested_file_uri, context ). getfileid ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( s )
[4]: org. junit. assert. assertequals ( s, standardcharsets. utf_8 )

************

************
tgt: org . junit . assert . assertsame ( messagetrace1 , messagetrace2 )
[0]: org. junit. assert. assertequals ( s, null )
[1]: org. junit. assert. assertequals ( s, s )
[2]: junit. assert. assertnotnull ( s )
[3]: org. junit. assert. assertequals ( 1, serialisedtre. length )
[4]: org. junit. assert. assertnotnull ( serialisedtre )

************

************
tgt: org . junit . assert . asserttrue ( ( mode == ( org . omg . corba . arg_in . value ) ) )
[0]: org. junit. assert. assertequals ( 0, serialisedtre. length )
[1]: ) )
[2]: )
[3]: org. junit. assert. asserttrue ( oid. startswithprefix ( prefix ) )
[4]: org. junit. assert. asserttrue ( de. persosim. simulator. protocols. oid. startswithprefix ( prefix ) )

************

************
tgt: org . junit . assert . asserttrue ( kaleonodes . isempty ( ) )
[0]: org. junit. assert. asserttrue ( de. persosim. simulator. utils. utils. startswithprefix ( prefix ) )
[1]: org. junit. assert. asserttrue ( java. util. arrays. startswithprefix ( prefix ) )
[2]: org. junit. assert. asserttrue ( dn. startswithprefix ( prefix ) )
[3]: org. junit. assert. assertnotnull ( macopy )
[4]: org. junit. assert. assertequals ( 1, stapelvoorkomen. getanummer ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( contained >= ( ( intruth . size ( ) ) / 2 ) ) )
[0]: org. junit. assert. assertequals ( 0, stapelvoorkomen. getanummer ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, stapelvoorkomen. getanummer ( ) )
[2]: org. junit. assert. assertequals ( 1, stapelvoorkomen. getanummer ( ). length )
[3]: org. junit. assert. assertequals ( 1, stapelvoorkomen. getanummer ( ). size ( )
[4]: org. junit. assert. assertnotnull ( onconnectionchangedaddedpre ( msg ) )

************

************
tgt: org . junit . assert . assertthat ( headerbuilder . tostring ( ) , org . hamcrest . matchers . equalto ( "http://example.com" ) )
[0]: org. junit. assert. assertequals ( 1, onconnectionchangedaddedpre ( msg ) )
[1]: org. junit. assert. assertequals ( 1, onconnectionchangedaddedpre ( msg ). length )
[2]: org. junit. assert. assertequals ( 1, onconnectionchangedaddedpre ( msg ). size ( )
[3]: ) )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( expected ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert.null ( result )
[3]: ) )
[4]: org. junit. assert. assertequals ( null, serial )

************

************
tgt: org . junit . assert . assertthat ( testpath , org . hamcrest . corematchers . is ( expectedpath ) )
[0]: org. junit. assert. assertnotnull ( serial )
[1]: org. junit. assert. assertequals ( out, serial )
[2]: org. junit. assert. asserttrue ( ( serial == null )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( i )

************

************
tgt: org . junit . assert . assertequals ( input , out . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, ( ( int ) ( i ) ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), i )
[2]: org. junit. assert. assertequals ( 1, java. lang. integer. valueof ( i ) )
[3]: org. junit. assert. assertnull ( i )
[4]: org. junit. assert. assertarrayequals ( b, new byte [ ] { 0, 0, 0, 0, - 1, 0, 0 } )

************

************
tgt: org . junit . assert . assertequals ( 0 , actions . size ( ) )
[0]: org. junit. assert. assertarrayequals ( b, null )
[1]: org. junit. assert. assertarrayequals ( b, 0 )
[2]: org. junit. assert. assertarrayequals ( b, new bytes )
[3]: , b )
[4]: org. junit. assert. assertequals ( 0, reader. get ( org. apache. hadoop. io. testarrayfile. test_file, conf ) )

************

************
tgt: org . junit . assert . assertnull ( actualpageconfiguration )
[0]: org. junit. assert. assertequals ( null, reader. get ( org. apache. hadoop. io. testarrayfile. test_file, conf ) )
[1]: org. junit. assert. assertnull ( reader. get ( org. apache. hadoop. io. testarrayfile. test_file, conf ) )
[2]: org. junit. assert. assertequals ( 1, reader. get ( org. apache. hadoop. io. testarrayfile. test_file, conf ) )
[3]: type ) )
[4]: org. junit. assert. assertnull ( integers. detectwith ( null, null ) )

************

************
tgt: org . junit . assert . assertnull ( info )
[0]: org. junit. assert. assertnull ( integers. detectwith ( 1, null ) )
[1]: org. junit. assert. assertnull ( integers. detectwith ( java. lang. integer. valueof ( 1 ), integers ) )
[2]: org. junit. assert. assertnull ( integers. detectwith ( object :: equals, null ) )
[3]: org. junit. assert. assertnull ( integers. detectwith ( java. lang. integer. valueof ( 1 ), null ) )
[4]: org. junit. assert. assertnotnull ( mapper. getoakpath ( path ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnull ( mapper. getoakpath ( path ) )
[1]: org. junit. assert. assertnotnull ( mapper. getoakpath ( paths ) )
[2]: org. junit. assert. assertnotnull ( path )
[3]: )
[4]: org. junit. assert. assertequals ( possiblesolutions [ i ], shapeiter. next ( ) )

************

************
tgt: org . junit . assert . assertthat ( com . facebook . buck . core . build . engine . manifest . manifestutil . tomap ( deserialized ) , org . hamcrest . matchers . equalto ( entries ) )
[0]: org. junit. assert. assertequals ( possiblesolutions [ i ] [ 1 ], shapeiter. next ( ) )
[1]: org. junit. assert. assertequals ( possiblesolutions [ i ] [ i ], shapeiter. next ( ) )
[2]: org. junit. assert. assertequals ( possiblesolutions [ i ] [ ( i + 1 ) ], shapeiter. next ( ) )
[3]: org. junit. assert. assertequals ( possiblesolutions [ i ] [ 0 ], shapeiter. next ( ) )
[4]: org. junit. assert. assertequals ( 1, processcommandclassmessage ( packetdata ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , command . getvariables ( ) . size ( ) )
[0]: org. junit. assert. assertnotnull ( t1. tostring ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), t1. tostring ( ) )
[2]: org. junit. assert. assertequals ( null, t1. tostring ( ) )
[3]: org. junit. assert. assertequals ( t1. tostring ( ), java. util. collections. emptylist ( ) )
[4]: org. junit. assert. assertequals ( t1. tostring ( ), null )

************

************
tgt: org . junit . assert . assertsame ( jv1 , jv2 )
[0]: org. junit. assert. assertequals ( binding, city )
[1]: org. junit. assert. assertequals ( java. lang. string. class, city )
[2]: org. junit. assert. assertnotnull ( city )
[3]: org. junit. assert. assertequals ( null, city )
[4]: 

************

************
tgt: org . junit . assert . asserttrue ( specificresourceallocation . getassignments ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, found. size ( ) )
[1]: org. junit. assert. assertequals ( 3, found. size ( ) )
[2]: org. junit. assert. assertequals ( 0, found. size ( ) )
[3]: org. junit. assert. assertequals ( 5, records. count ( ) )
[4]: org. junit. assert. assertequals ( 3, records. count ( ) )

************

************
tgt: org . junit . assert . assertequals ( transa , transb )
[0]: org. junit. assert. assertnotnull ( qc )
[1]: org. junit. assert. assertfalse ( options. isempty ( ) )
[2]: org. junit. assert. assertequals ( i, octet. length ( ) )
[3]: org. junit. assert. assertequals ( octet, octet. length ( ) )
[4]: org. junit. assert. assertequals ( octet. length ( ), i )

************

************
tgt: org . junit . assert . assertsame ( assertions , returned )
[0]: org. junit. assert. assertequals ( 0, octet. length ( ) )
[1]: org. junit. assert. assertequals ( octet, i )
[2]: org. junit. assert. assertarrayequals ( providers, caps. getstrongestcipher ( ) )
[3]: org. junit. assert. assertnotnull ( caps. getstrongestcipher ( ) )
[4]: org. junit. assert. assertequals ( 1, caps. getstrongestcipher ( ). length )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, caps. getstrongestcipher ( ). length )
[1]: ) )
[2]: org. junit. assert. assertnull ( idxdefn. issuggestenabled ( ) )
[3]: org. junit. assert. assertequals ( 0, idxdefn. issuggestenabled ( ) )
[4]: org. junit. assert. asserttrue ( impl. islate ( ) )

************

************
tgt: org . junit . assert . assertequals ( data , entries )
[0]: org. junit. assert. asserttrue ( impl. haslate ( ) )
[1]: org. junit. assert. asserttrue ( impl. arelate ( ) )
[2]: org. junit. assert. asserttrue ( implementation. islate ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( administratievehandelingen, administratievehandelingen ( ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , percentile . getresult ( ) )
[0]: org. junit. assert. assertequals ( administratievehandelingen, administratievehandelingen. getadministratievehandelingen ( ) )
[1]: org. junit. assert. assertequals ( administratievehandelingen, administratievehandelingen ( ). getadministratievehandelingen ( ) )
[2]: org. junit. assert. assertequals ( administratievehandelingen. size ( ), administratievehandelingen ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( administratievehandelingen ( ) )
[4]: org. junit. assert. assertthat ( subject. supports ( update ), org. hamcrest. matchers. is ( false ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , kinesisservice . getaddedrecords ( ) . get ( ) )
[0]: org. junit. assert. assertthat ( repo. supports ( update ), org. hamcrest. matchers. is ( false ) )
[1]: org. junit. assert. assertfalse ( subject. supports ( update ) )
[2]: org. junit. assert. assertthat ( subject. supports ( update ), org. hamcrest. core. is. is ( false )
[3]: ) )
[4]: org. junit. assert. asserttrue ( violations. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedconfiguration , config . asorderedproperties ( ) )
[0]: org. junit. assert. assertfalse ( violations. isempty ( ) )
[1]: org. junit. assert. assertequals ( true, violations. isempty ( ) )
[2]: org. junit. assert. assertequals ( 1, violations. isempty ( ) )
[3]: . isempty ( ) )
[4]: org. junit. assert. assertequals ( 1, mutations. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( new org . semanticweb . owlapi . model . owlontologyid ( i139 , v1 ) , e . getontologyid ( ) )
[0]: org. junit. assert. assertequals ( 0, mutations. size ( ) )
[1]: org. junit. assert. assertequals ( 7, mutations. size ( ) )
[2]: org. junit. assert. assertequals ( 4, mutations. size ( ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnotnull ( matcher )

************

************
tgt: org . junit . assert . assertequals ( null , propsecrets )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), matcher )
[1]: org. junit. assert. assertequals ( java. util. collection. class, matcher. getclass ( ) )
[2]: org. junit. assert. assertequals ( java. util. arraylist. class, matcher. getclass ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1l ), matcher )
[4]: org. junit. assert. assertequals ( 0, query. count ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( data , stream . tobytearray ( ) )
[0]: org. junit. assert. assertequals ( 0l, query. count ( ) )
[1]: org. junit. assert. assertnull ( query. count ( ) )
[2]: org. junit. assert. assertequals ( 0, query. count ( ), 0 )
[3]: ) )
[4]: org. junit. assert. assertequals ( code [ 0 ], rulemanager. get ( id [ 0 ] ) )

************

************
tgt: org . junit . assert . assertequals ( authority , host . gethostname ( ) )
[0]: org. junit. assert. assertnotnull ( rulemanager. get ( id [ 0 ] ) )
[1]: org. junit. assert. assertnull ( rulemanager. get ( id [ 0 ] ) )
[2]: org. junit. assert. assertequals ( code [ 0 ], rulemanager. get ( id [ 1 ] ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( null, clone )

************

************
tgt: org . junit . assert . assertequals ( expect , dump )
[0]: org. junit. assert. assertequals ( 0, clone )
[1]: org. junit. assert. assertequals ( 0, clone. getclass ( ) )
[2]: org. junit. assert. assertequals ( 1, clone )
[3]: org. junit. assert. assertequals ( 0, clone. getclass ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, apacheconf. getvhosts ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , resultval )
[0]: org. junit. assert. assertnotnull ( apacheconf. getvhosts ( ) )
[1]: org. junit. assert. assertequals ( 1, apacheconf. getvhosts ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 4, apacheconf. getvhosts ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 2, apacheconf. getvhosts ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( dto )

************

************
tgt: org . junit . assert . assertnotnull ( ztype )
[0]: org. junit. assert. assertequals ( p. family, dto )
[1]: org. junit. assert. assertequals ( p, dto )
[2]: type ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( props . getproductname ( ) , org . hamcrest . core . is . is ( "" ) )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. assertequals ( 1, results. size ( ) )
[2]: org. junit. assert. assertequals ( 3, result. size ( ) )
[3]: org. junit. assert. assertequals ( 2, result. size ( ) )
[4]: org. junit. assert. assertequals ( 0, is. available ( ) )

************

************
tgt: org . junit . assert . assertfalse ( iterator . hasnext ( ) )
[0]: org. junit. assert. assertequals ( 1, is. available ( ) )
[1]: org. junit. assert. assertarrayequals ( testdata, is. available ( ) )
[2]: org. junit. assert. assertequals ( 0, is. available ( ). length )
[3]: org. junit. assert. assertequals ( 1, is. available ( ). length )
[4]: org. junit. assert. assertequals ( true, converter. canconvert ( edu. zipcloud. cloudstreetmarket. core. converters. industry. class ) )

************

************
tgt: org . junit . assert . assertequals ( rs . getarray ( 1 ) , array )
[0]: org. junit. assert. assertequals ( null, converter. canconvert ( edu. zipcloud. cloudstreetmarket. core. converters. industry. class ) )
[1]: org. junit. assert. assertequals ( false, converter. canconvert ( edu. zipcloud. cloudstreetmarket. core. converters. industry. class ) )
[2]: org. junit. assert. assertnull ( converter. canconvert ( edu. zipcloud. cloudstreetmarket. core. converters. industry. class ) )
[3]: org. junit. assert. assertnotnull ( c )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), c )

************

************
tgt: org . junit . assert . assertequals ( registryvaluetype . reg_sz , value . gettype ( ) )
[0]: org. junit. assert. assertequals ( 1, c. sideinput ( view ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), c )
[2]: org. junit. assert. assertequals ( pipeline, c )
[3]: org. junit. assert. assertequals ( 1, this. config. gethttpport ( ) )
[4]: org. junit. assert. assertnotnull ( this. config. gethttpport ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . length )
[0]: org. junit. assert. assertequals ( 0, this. config. gethttpport ( ) )
[1]: org. junit. assert. assertequals ( props, this. config. gethttpport ( ) )
[2]: ) )
[3]: org. junit. assert. assertthat ( out. getdefaultbatchappslocation ( ), is ( 1 ) )
[4]: org. junit. assert. assertthat ( out. getdefaultbatchappslocation ( ), is ( null ) )

************

************
tgt: org . junit . assert . assertthat ( role . haspermission ( permission ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertthat ( out. getdefaultbatchappslocation ( ), is ( true ) )
[1]: org. junit. assert. assertthat ( out. getdefaultbatchappslocation ( ), is ( 1l ) )
[2]: org. junit. assert. assertthat ( out. getdefaultbatchappslocation ( ), is ( empty ( ) )
[3]: org. junit. assert. assertequals ( 1, applicationbuffersize ( ) )
[4]: org. junit. assert. assertequals ( 0, applicationbuffersize ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . apache . flink . streaming . connectors . activemq . activemqconnectoritcase . messages_num , sourcecontext . getidsnum ( ) )
[0]: org. junit. assert. assertequals ( 1, this. applicationbuffersize ( ) )
[1]: org. junit. assert. assertequals ( 1, instance. applicationbuffersize ( ) )
[2]: org. junit. assert. assertequals ( 1, testapplicationbuffersize ( ) )
[3]: org. junit. assert. assertnull ( compute. getzone ( com. google. cloud. compute. deprecated. computeimpltest. zone_id ) )
[4]: org. junit. assert. assertequals ( null, compute. getzone ( com. google. cloud. compute. deprecated. computeimpltest. zone_id ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertnull ( compute. getzone ( com. google. cloud. compute. deprecated. computeimpltest ) )
[1]: org. junit. assert. assertnull ( compute )
[2]: ) )
[3]: org. junit. assert. assertequals ( true, caps. ispostsupported ( ) )
[4]: org. junit. assert. assertfalse ( caps. ispostsupported ( ) )

************

************
tgt: org . junit . assert . asserttrue ( properties . hasproperty ( "newpath/prop2" ) )
[0]: org. junit. assert. assertequals ( 1, preparator. getdata ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( preparator. getdata ( ) )
[2]: org. junit. assert. assertequals ( 0, preparator. getdata ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, context. getdata ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1l, preparator. getdata ( ) )

************

************
tgt: org . junit . assert . assertfalse ( arr . some ( callbackfn ) )
[0]: org. junit. assert. asserttrue ( iscontainerprincipaltypeinresponse ( resp, true ) )
[1]: org. junit. assert. assertnotnull ( iscontainerprincipaltypeinresponse ( resp, true ) )
[2]: org. junit. assert. assertthat ( result. ishealthy ( ), org. hamcrest. core. is. is ( false ) )
[3]: org. junit. assert. assertequals ( 1, parameters. getoutputprefix ( ) )
[4]: org. junit. assert. assertequals ( 0, parameters. getoutputprefix ( ) )

************

************
tgt: org . junit . assert . assertnull ( tree . getparentitem ( ) )
[0]: org. junit. assert. assertnotnull ( parameters. getoutputprefix ( ) )
[1]: org. junit. assert. assertequals ( 1, parameters. getoutputprefix ( ). length )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, reverserequest. getlocationdistancesort ( ) )
[4]: org. junit. assert. assertequals ( 0, reverserequest. getlocationdistancesort ( ) )

************

************
tgt: org . junit . assert . assertequals ( now . gettime ( ) , lastpublishdate . gettime ( ) )
[0]: org. junit. assert. assertnotnull ( reverserequest. getlocationdistancesort ( ) )
[1]: org. junit. assert. assertequals ( 1, reverserequest. getlocationdistancesort ( ). length )
[2]: ) )
[3]: org. junit. assert. assertequals ( skippedbackward, result )
[4]: org. junit. assert. assertnotnull ( skipbackward )

************

************
tgt: org . junit . assert . assertarrayequals ( supportedciphers . toarray ( ) , filtered )
[0]: org. junit. assert. assertequals ( skippedbackward, output )
[1]: org. junit. assert. assertequals ( skippedbackward, expected )
[2]: org. junit. assert. assertequals ( skippedbackward, name )
[3]: org. junit. assert. assertequals ( 1, docs. size ( ) )
[4]: org. junit. assert. assertnotnull ( com. liferay. util. normalizer. normalizetoascii ( asciialphabet ) )

************

************
tgt: org . junit . assert . assertnull ( lookupmanager . lookupworkingobjectorreturnnull ( object ) )
[0]: org. junit. assert. assertnotnull ( com. liferay. util. normalizer. normalizetoascii ( asciiialphabet ) )
[1]: org. junit. assert. assertnotnull ( serializer. normalizetoascii ( asciialphabet ) )
[2]: org. junit. assert. assertnotnull ( unit. normalizetoascii ( asciialphabet ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, array. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , arrays . size ( ) )
[0]: org. junit. assert. assertequals ( 0, array. size ( ) )
[1]: org. junit. assert. assertequals ( 1, array. size ( ) )
[2]: org. junit. assert. assertequals ( 1, array. length ( ) )
[3]: org. junit. assert. assertequals ( 1, e. getsuperiorid ( ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 3 ), e. getsuperiorid ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( deserializer )
[0]: org. junit. assert. assertequals ( 1, engine. getsolutions ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, repository. getsolutions ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, resultset. getsolutions ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. getsolutions ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, dao. getsolutions ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( runtime , com . graphaware . runtime . runtimeregistry . getruntime ( database ) )
[0]: org. junit. assert. assertnotnull ( formattedstring )
[1]: org. junit. assert. assertequals ( formattedstring, quantity. format. decimal_exponent )
[2]: org. junit. assert. asserttrue ( formattedstring. isempty ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( from ( aslist ( org . gradoop . flink . model . impl . layouts . gve . gvelayouttest . g0 , org . gradoop . flink . model . impl . layouts . gve . gvelayouttest . g1 ) , aslist ( org . gradoop . flink . model . impl . layouts . gve . gvelayouttest . v0 , org . gradoop . flink . model . impl . layouts . gve . gvelayouttest . v1 , org . gradoop . flink . model . impl . layouts . gve . gvelayouttest . v2 ) , aslist ( org . gradoop . flink . model . impl . layouts . gve . gvelayouttest . e0 , org . gradoop . flink . model . impl . layouts . gve . gvelayouttest . e1 ) ) . isgvelayout ( ) )
[0]: org. junit. assert. assertthat ( storage. getresources ( ). size ( ), org. hamcrest. matchers. is ( 1 ) )
[1]: org. junit. assert. assertthat ( storage. getresources ( ), org. hamcrest. matchers. is ( java. util. optional. of ( com. spotify. styx. storage. datastorestoragetest. resource1 ) ) )
[2]: org. junit. assert. assertthat ( storage. getresources ( ). get ( com. spotify. styx. storage. datastorestoragetest. resource1 ), org. hamcrest. matchers. is ( java. util. optional. empty ( ) ) )
[3]: org. junit. assert. assertthat ( storage. getresources ( ), org. hamcrest. matchers. is ( com. spotify. styx. storage. datastorestoragetest. resource1 ) )
[4]: org. junit. assert. assertthat ( storage. getresources ( ). isempty ( ), org. hamcrest. matchers. is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( 201 , response . getstatus ( ) )
[0]: org. junit. assert. assertequals ( 0, results. size ( ) )
[1]: org. junit. assert. assertequals ( constanttuplefilter. true, or )
[2]: org. junit. assert. assertnull ( getstringvalue ( ) )
[3]: org. junit. assert. assertthat ( functiontemplate. getresultcollector ( ), is ( 500 ) )
[4]: org. junit. assert. assertthat ( functiontemplate. getresultcollector ( ), is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( subscribe , newsubscribe )
[0]: org. junit. assert. assertthat ( functiontemplate. getresultcollector ( ), is ( 1.0 ) )
[1]: org. junit. assert. assertnotnull ( functiontemplate. getresultcollector ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, cache. get ( 1 ) )
[4]: org. junit. assert. assertnotnull ( cache. get ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( auditlogdataisempty ( ) )
[0]: org. junit. assert. assertequals ( null, cache. get ( 1 ) )
[1]: org. junit. assert. assertequals ( 0, cache. get ( 1 ) )
[2]: org. junit. assert. assertnull ( cache. get ( 1 ) )
[3]: org. junit. assert. assertnotnull ( packagename )
[4]: org. junit. assert. assertequals ( """", packagename )

************

************
tgt: org . junit . assert . assertfalse ( g1 . equals ( g2 ) )
[0]: org. junit. assert. assertequals ( ""test"", packagename )
[1]: org. junit. assert. assertequals ( ""foo"", packagename )
[2]: org. junit. assert. assertequals ( ""a"", packagename )
[3]: org. junit. assert. assertnotnull ( icon )
[4]: org. junit. assert. assertequals ( maingroup, icon )

************

************
tgt: org . junit . assert . assertthat ( timefield . gettext ( ) , org . hamcrest . corematchers . is ( "90" ) )
[0]: org. junit. assert. assertnull ( icon )
[1]: org. junit. assert. assertequals ( icon, maingroup )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( obj )
[4]: org. junit. assert. assertnotnull ( obj. s )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertnotnull ( obj. collection )
[1]: org. junit. assert. assertequals ( 0, newrepository. isbare ( ) )
[2]: org. junit. assert. assertequals ( 1, newrepository. isbare ( ) )
[3]: org. junit. assert. assertequals ( 100, newrepository. isbare ( ) )
[4]: org. junit. assert. assertnotnull ( newrepository. isbare ( ) )

************

************
tgt: org . junit . assert . assertequals ( request . getprotocol ( ) , result )
[0]: ) )
[1]: org. junit. assert. assertarrayequals ( documentcontent, storedcontents )
[2]: org. junit. assert. assertequals ( documentcontent, new java. lang. string ( storedcontents ) )
[3]: org. junit. assert. assertequals ( documentcontent, storedcontents )
[4]: org. junit. assert. assertnotnull ( storedcontents )

************

************
tgt: org . junit . assert . assertequals ( expected , service . totransformscript ( request ) )
[0]: )
[1]: org. junit. assert. assertthat ( usedcache. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[2]: org. junit. assert. assertthat ( usedcache. size ( ), org. hamcrest. corematchers. is ( 3 ) )
[3]: org. junit. assert. assertnotnull ( resultobject )
[4]: org. junit. assert. assertequals ( jsonobject, resultobject )

************

************
tgt: org . junit . assert . asserttrue ( bars . isempty ( ) )
[0]: org. junit. assert. assertequals ( jsonstr, resultobject )
[1]: org. junit. assert. assertequals ( resultobject, jsonobject )
[2]: org. junit. assert. assertequals ( jsonarray, resultobject )
[3]: org. junit. assert. assertequals ( traversaldescription, nodes. getendnode ( ) )
[4]: org. junit. assert. assertequals ( traversaldescription. getendnode ( ), nodes )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , map . get ( java . lang . object . class ) )
[0]: org. junit. assert. assertequals ( 1, nodes. size ( ) )
[1]: org. junit. assert. assertequals ( traversaldescription, nodes )
[2]: org. junit. assert. assertnotnull ( nodes )
[3]: org. junit. assert. assertnotnull ( configuration. getconnecttimeout ( ) )
[4]: org. junit. assert. assertequals ( 1, configuration. getconnecttimeout ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ts1 < ( testfile . lastmodified ( ) ) ) )
[0]: org. junit. assert. assertnull ( configuration. getconnecttimeout ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( spritedirective, org. carrot2. labs. smartsprites. spritedirectiveoccurrencecollector. extractspritereferenceereferenceereferenceereferenceereferenceereferenceereferenceereferenceereference
[4]: org. junit. assert. assertequals ( spritedirective, org. carrot2. labs. smartsprites. spritedirectiveoccurrencecollector. extractspritereferenceereferenceereferenceereferenceereferenceereferenceereferenceereference

************

************
tgt: org . junit . assert . assertarrayequals ( testcontent , out . tobytearray ( ) )
[0]: org. junit. assert. assertequals ( spritedirective, org. carrot2. labs. smartsprites. spritedirectiveoccurrencecollector. extractspritereferenceereferenceereferenceereferenceereferenceereferenceereference
[1]: org. junit. assert. assertequals ( spritedirective, org. carrot2. labs. smartsprites. spritedirectiveoccurrencecollector. extractspritereferenceereferenceereferencecompletedstring ( css ) )
[2]: org. junit. assert. assertequals ( spritedirective, org. carrot2. labs. smartsprites. spritedirectiveoccurrencecollector. extractspritereferenceereferenceereferenceereferenceereferenceereference
[3]: org. junit. assert. assertnotnull ( review )
[4]: org. junit. assert. assertequals ( 0, review. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( encodedkey + "=" ) + encodedvalue ) , result )
[0]: org. junit. assert. assertequals ( 1, review. size ( ) )
[1]: org. junit. assert. assertequals ( null, review )
[2]: org. junit. assert. assertequals ( 1, review. getid ( ) )
[3]: org. junit. assert. assertequals ( e2, deserialized )
[4]: org. junit. assert. assertequals ( e1, deserialized )

************

************
tgt: org . junit . assert . assertnull ( existingfragmententry )
[0]: org. junit. assert. assertequals ( e3, deserialized )
[1]: org. junit. assert. assertequals ( e, deserialized )
[2]: org. junit. assert. assertequals ( e2, deserialized )
[3]: org. junit. assert. assertequals ( pi0. getid ( ), processdefinitionid )
[4]: org. junit. assert. assertequals ( pi0, processdefinitionid )

************

************
tgt: org . junit . assert . assertequals ( 0.0 , factor , 0 )
[0]: org. junit. assert. assertequals ( pi0. getid ( ), processesdefinitionid )
[1]: org. junit. assert. assertequals ( pi0. getid ( ), processdefinitionid )
[2]: org. junit. assert. assertequals ( processing0. getid ( ), processdefinitionid )
[3]: org. junit. assert. assertequals ( 1, org. gitlab4j. api. jsonutils. comparejson ( fileupload, null ) )
[4]: org. junit. assert. assertequals ( 1, org. gitlab4j. api. jsonutils. comparejson ( fileupload, "file-upload.json ) )

************

************
tgt: org . junit . assert . assertnull ( antwoord )
[0]: org. junit. assert. assertequals ( 1, org. gitlab4j. api. jsonutils. comparejson ( fileupload, org. gitlab4j. api. jsonutils. class ) )
[1]: org. junit. assert. asserttrue ( org. gitlab4j. api. jsonutils. comparejson ( fileupload, org. gitlab4j. api. jsonutils. serialize ( fileupload ) ) )
[2]: org. junit. assert. assertequals ( 1, org. gitlab4j. api. jsonutils. comparejson ( fileupload, org. gitlab4j. api. jsonutils. newinstance ( ) ) )
[3]: org. junit. assert. assertequals ( 1, posts. size ( ) )
[4]: org. junit. assert. assertequals ( 0, posts. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( dbdialectclass )
[0]: org. junit. assert. assertequals ( 1, cvs. size ( ) )
[1]: org. junit. assert. assertequals ( 0, cvs. size ( ) )
[2]: org. junit. assert. asserttrue ( cvs. isempty ( ) )
[3]: org. junit. assert. assertequals ( 2, cvs. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( splitbycomma . size ( ) ) == 4 ) )
[0]: org. junit. assert. assertnotnull ( a. preorderiterator ( ) )
[1]: org. junit. assert. assertnotnull ( a. preorderiterator ( ). collect ( ) )
[2]: org. junit. assert. assertnotnull ( a. preorderiterator ( ). get ( 0 ) )
[3]: org. junit. assert. assertnotnull ( a. preorderiterator ( ). size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expectednode . tostring ( ) , pdoc . tostring ( ) )
[0]: org. junit. assert. assertarrayequals ( expectedfilelist )
[1]: org. junit. assert. assertequals ( expectedfilelist, actualfilelist )
[2]: org. junit. assert. assertsame ( expectedfilelist, actualfilelist )
[3]: , actualfilelist )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( messagecount , consumerdriver . getmessagesreceived ( ) )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( obj, e )
[3]: org. junit. assert. assertequals ( stored, contaienr. getcomponent ( java. lang. string. class ) )
[4]: org. junit. assert. assertequals ( stored, contaienr. getcomponent ( null ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( expected ) )
[0]: ) )
[1]: )
[2]: 
[3]: org. junit. assert. assertequals ( 0, module. finished ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, module. finished ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( expected ) ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), module. finished ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), module. finished ( ) )
[2]: org. junit. assert. assertnotnull ( module. finished ( ) )
[3]: org. junit. assert. assertequals ( 1, i )
[4]: org. junit. assert. assertnotnull ( e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( aslist ( aslist ( 1 , 1 , 1 ) , aslist ( 2 , 2 ) , aslist ( 3 ) ) , lists )
[0]: org. junit. assert. assertequals ( 1, ( i ++ ) )
[1]: org. junit. assert. assertequals ( 1, e. i )
[2]: org. junit. assert. assertequals ( 1, e. count )
[3]: org. junit. assert. assertthat ( key. existsbyid ( dep1. getid ( ) ), is ( true ) )
[4]: org. junit. assert. assertthat ( key. existsbyid ( dep1. getid ( ) ), is ( false ) )

************

************
tgt: org . junit . assert . assertequals ( uuid , roundtrippedmessage . getuuid ( ) )
[0]: org. junit. assert. assertthat ( dao. existsbyid ( dep1. getid ( ) ), is ( true ) )
[1]: org. junit. assert. asserttrue ( key. existsbyid ( dep1. getid ( ) ) )
[2]: org. junit. assert. assertthat ( keys. existsbyid ( dep1. getid ( ) ), is ( true ) )
[3]: org. junit. assert. assertsame ( operation, instance. attachdisk ( com. google. cloud. compute. deprecated. instancetest. instance_id, configuration, 1 ) )
[4]: org. junit. assert. assertsame ( operation, instance. attachdisk ( com. google. cloud. compute. deprecated. instancetest. instance_id, configuration, configuration ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , data . getcomponents ( ) . length )
[0]: org. junit. assert. assertsame ( operation, instance. attachdisk ( com. google. cloud. compute. deprecated. instancetest. instance_id, configuration, null ) )
[1]: org. junit. assert. assertsame ( operation, instance. attachdisk ( com. google. cloud. compute. deprecated. instancetest. instance_id, configuration, true ) )
[2]: org. junit. assert. assertsame ( operation, instance. attachdisk ( java. lang. string. class, configuration, 1 ) )
[3]: org. junit. assert. assertthat ( org. slim3. util. byteutil. toprimitivebyte ( null ), org. hamcrest. corematchers. is ( ( ( byte ) ( 0 ) ) ) )
[4]: org. junit. assert. assertthat ( org. slim3. util. byteutil. toprimitivebyte ( 1 ), org. hamcrest. corematchers. is ( ( ( byte ) ( 1 ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertthat ( org. slim3. util. byteutil. toprimitivebyte ( null ), org. hamcrest. corematchers. is ( ( ( byte ) ( 1 ) ) ) )
[1]: org. junit. assert. assertthat ( org. slim3. util. byteutil. toprimitivebyte ( ""1"" ), org. hamcrest. corematchers. is ( ( ( byte ) ( 1 ) ) ) )
[2]: org. junit. assert. assertthat ( org. slim3. util. byteutil. toprimitivebyte ( null ), org. hamcrest. corematchers. is ( ( ( byte ) ( 0 ) ) ) ) )
[3]: org. junit. assert. assertfalse ( watchmanclient. syncdisabled ( ) )
[4]: org. junit. assert. assertequals ( format. getpreferredextension ( ), format. getpreferredextension ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( room1 . getid ( ) )
[0]: org. junit. assert. assertfalse ( checkmd5hash ( com. baeldung. download. filedownloadintegrationtest. file_name ) )
[1]: org. junit. assert. asserttrue ( hudson. plugins. jobconfighistory. deletedfilefilter. accepts ( file ) )
[2]: org. junit. assert. assertequals ( 1, hudson. plugins. jobconfighistory. deletedfilefilter. accepts ( file ) )
[3]: org. junit. assert. assertequals ( true, hudson. plugins. jobconfighistory. deletedfilefilter. accepts ( file ) )
[4]: org. junit. assert. assertfalse ( hudson. plugins. jobconfighistory. deletedfilefilter. accepts ( file ) )

************

************
tgt: org . junit . assert . asserttrue ( org . oscm . portal . portalmarketservicewt . tester . getexecutionresult ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( handler2, wait. getsession ( ) )
[2]: org. junit. assert. assertnotnull ( wait. getsession ( ) )
[3]: org. junit. assert. assertequals ( handler1, wait. getsession ( ) )
[4]: org. junit. assert. assertequals ( 1, wait. getsession ( ). count )

************

************
tgt: org . junit . assert . assertnotnull ( e2 )
[0]: ) )
[1]: org. junit. assert. assertequals ( ld, list )
[2]: org. junit. assert. assertequals ( 1, list. size ( ) )
[3]: org. junit. assert. assertequals ( 0, list. size ( ) )
[4]: org. junit. assert. assertnotnull ( list )

************

************
tgt: org . junit . assert . assertthat ( resultaat , org . hamcrest . matchers . is ( true ) )
[0]: , list )
[1]: org. junit. assert. assertnotnull ( com. google. cloud. tools. jib. plugins. common. mainclassresolver. resolvemainclass ( null, mockprojectproperties ) )
[2]: org. junit. assert. assertequals ( null, com. google. cloud. tools. jib. plugins. common. mainclassresolver. resolvemainclass ( null, mockprojectproperties ) )
[3]: org. junit. assert. assertequals ( ""foo"", com. google. cloud. tools. jib. plugins. common. mainclassresolver. resolvemainclass ( null, mockprojectproperties ) )
[4]: org. junit. assert. assertequals ( ""test"", com. google. cloud. tools. jib. plugins. common. mainclassresolver. resolvemainclass ( null, mockprojectproperties ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( lit1 , lit2 , lit3 ) , nodes )
[0]: org. junit. assert. assertequals ( null, com. google. cloud. tools. jib. plugins. common. mainclassresolver. resolvemainclass ( null, mockprojectproperties ) )
[1]: org. junit. assert. assertthat ( timeout, org. hamcrest. corematchers. is ( 1l ) )
[2]: org. junit. assert. assertthat ( timeout, org. hamcrest. corematchers. is ( 0l ) )
[3]: org. junit. assert. assertthat ( timeout, org. hamcrest. matchers. is ( 1l ) )
[4]: org. junit. assert. assertthat ( timeout, org. hamcrest. matchers. is ( 0l ) )

************

************
tgt: org . junit . assert . assertthat ( position , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertthat ( timeout, org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertnotnull ( provider )
[2]: org. junit. assert. assertnotnull ( provider
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( null , updateresult )
[0]: 
[1]: org. junit. assert. assertequals ( 0, nextiteration. gettotalcompleted ( ) )
[2]: org. junit. assert. assertequals ( 1, nextiteration. gettotalcompleted ( ) )
[3]: org. junit. assert. assertequals ( 0, currentiteration. gettotalcompleted ( ) )
[4]: org. junit. assert. assertequals ( 0, iterator. gettotalcompleted ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: ) )
[1]: org. junit. assert. assertequals ( vec3, vec2 )
[2]: org. junit. assert. assertequals ( vec1, vec3 )
[3]: org. junit. assert. assertnotnull ( file )
[4]: org. junit. assert. assertequals ( flowstate. vserver_stopped, newstate )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( flowstate. vserver_starting, newstate )
[1]: org. junit. assert. assertequals ( flowstate. vserver_started, newstate )
[2]: org. junit. assert. assertequals ( flowstate. finished, newstate )
[3]: org. junit. assert. assertnull ( newstate )
[4]: org. junit. assert. assertnotnull ( dest )

************

************
tgt: org . junit . assert . assertequals ( expected . substring ( 0 , 5 ) , sb . tostring ( ) )
[0]: org. junit. assert. assertthat ( dest, org. hamcrest. corematchers. is ( original ) )
[1]: org. junit. assert. assertthat ( dest, org. hamcrest. corematchers. is ( expected ) )
[2]: org. junit. assert. assertnotnull ( dest. fff )
[3]: ) )
[4]: org. junit. assert. assertarrayequals ( item, values. getfileitems ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , a . getrfc ( ) )
[0]: org. junit. assert. assertequals ( json, info. tostring ( ) )
[1]: org. junit. assert. assertequals ( info. tostring ( ), json )
[2]: org. junit. assert. assertequals ( info. tostring ( ), info. tostring ( ) )
[3]: org. junit. assert. assertthat ( task, exists ( ) )
[4]: org. junit. assert. assertthat ( task, is ( empty ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( expectedprefix , actualprefix )
[0]: org. junit. assert. assertthat ( task, is ( exists ( ) ) )
[1]: org. junit. assert. assertthat ( out, exists ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( distribution. getsnapshot ( ). size ( ), 1 )
[4]: org. junit. assert. assertequals ( distribution. getsnapshot ( ). size ( ), 0 )

************

************
tgt: org . junit . assert . assertequals ( ( - 10000 ) , filter . getorder ( ) )
[0]: org. junit. assert. assertequals ( distribution. getsnapshot ( ). size ( ), 15 )
[1]: org. junit. assert. assertequals ( distribution. getsnapshot ( ). size ( ), 5 )
[2]: org. junit. assert. assertequals ( distribution. getsnapshot ( ). size ( ), 10 )
[3]: org. junit. assert. assertequals ( org. oscm. internal. types. exception. sa_0_0exception. getmessage ( ), e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( org. oscm. internal. types. exception. savariantexception. getmessage ( ), e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertfalse ( extension , instance . accept ( new java . io . file ( extension ) ) )
[0]: org. junit. assert. assertequals ( org. oscm. internal. types. exception. saexistingexception. getmessage ( ), e. getmessage ( ) )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: . getmessage ( ) )
[3]: org. junit. assert. asserttrue ( org. apache. hadoop. hbase. regionserver. testhdfssnapshothregion. test_util. gettabledir ( snapshottedregion, snapshotdir ) )
[4]: org. junit. assert. asserttrue ( org. apache. hadoop. hbase. regionserver. testhdfssnapshothregion. test_util. gettabledir ( snapshottedregion, encodedname ) )

************

************
tgt: org . junit . assert . asserttrue ( org . jpmml . rapidminer . batchutil . evaluate ( batch ) )
[0]: org. junit. assert. asserttrue ( org. apache. hadoop. hbase. util. fsutils. gettabledir ( firstregion, snapshottedregion ) )
[1]: org. junit. assert. asserttrue ( org. apache. hadoop. hbase. util. fsutils. gettabledir ( snapshottedregion, snapshotdir ) )
[2]: org. junit. assert. assertequals ( gui, clone )
[3]: org. junit. assert. assertnotnull ( clone )
[4]: org. junit. assert. assertsame ( gui, clone )

************

************
tgt: org . junit . assert . assertequals ( l , outit . next ( ) )
[0]: org. junit. assert. assertequals ( gu, clone )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, functionimportlist. size ( ) )
[3]: org. junit. assert. assertequals ( 0, functionimportlist. size ( ) )
[4]: org. junit. assert. assertfalse ( unsetuserrolechecker. isdisabled ( user ) )

************

************
tgt: org . junit . assert . assertequals ( before , checksum . getvalue ( ) )
[0]: org. junit. assert. asserttrue ( resultprovided. get ( ) )
[1]: org. junit. assert. asserttrue ( workersl. equals ( workerss ) )
[2]: org. junit. assert. asserttrue ( workersl. equals ( workersl ) )
[3]: org. junit. assert. asserttrue ( workersl. equals ( new java. lang. object ( ) ) )
[4]: org. junit. assert. asserttrue ( workersl. equals ( peoplel ) )

************

************
tgt: org . junit . assert . assertequals ( dto , translateddto )
[0]: org. junit. assert. asserttrue ( workersl. equals ( null ) )
[1]: org. junit. assert. assertequals ( s, result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertequals ( string, result )

************

************
tgt: org . junit . assert . asserttrue ( ( ( out . getlength ( ) ) > 0 ) )
[0]: type ) { result )
[1]: org. junit. assert. assertequals ( null, installproposalrequest. getchaincodeinputstream ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class, installproposalrequest. getchaincodeinputstream ( ) )
[3]: org. junit. assert. assertequals ( expected, installproposalrequest. getchaincodeinputstream ( ) )
[4]: org. junit. assert. assertequals ( 0, installproposalrequest. getchaincodeinputstream ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( bits , bv . tobytearray ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( v )
[2]: org. junit. assert. assertequals ( null, v )
[3]: org. junit. assert. assertequals ( pgbulkad. get ( ), v )
[4]: org. junit. assert. assertequals ( pgbulkdao. next ( ), v )

************

************
tgt: org . junit . assert . assertequals ( 10 , compressors . size ( ) )
[0]: org. junit. assert. assertequals ( pgbulkad, v )
[1]: org. junit. assert. assertequals ( 2, folderids. size ( ) )
[2]: org. junit. assert. assertequals ( 1, folderids. size ( ) )
[3]: org. junit. assert. assertequals ( 1, testcountby_u_r_f_m_id )
[4]: org. junit. assert. assertequals ( repositoryids, folderids )

************

************
tgt: org . junit . assert . assertnotnull ( ex )
[0]: org. junit. assert. assertequals ( 2, testcountby_u_r_f_m_id )
[1]: org. junit. assert. assertequals ( expectedresult, result )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( expectedresult ), result )
[3]: org. junit. assert. assertequals ( result, expectedresult )
[4]: org. junit. assert. assertequals ( java. lang. string. format ( expectedresult ), result )

************

************
tgt: org . junit . assert . assertnull ( values [ 0 ] )
[0]: org. junit. assert. assertequals ( actualresult, result )
[1]: org. junit. assert. assertequals ( 0, mygraph. numedges ( ) )
[2]: org. junit. assert. assertequals ( 1, mygraph. numedges ( ) )
[3]: org. junit. assert. assertequals ( 0l, mygraph. numedges ( ) )
[4]: org. junit. assert. assertnotnull ( mygraph. numedges ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 0, mygraph. numedges ( ). length )
[1]: org. junit. assert. assertequals ( 1, locator. gettokens ( context ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, locator. gettokens ( null ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, locator. gettokens ( context ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, locator. gettokens ( null ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( intset . contains ( 1 ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, org. kie. soup. project. datamodel. oracle. fieldaccessorsandmutators. getaccessor ( ). size ( ) )
[2]: org. junit. assert. assertnull ( org. kie. soup. project. datamodel. oracle. fieldaccessorsandmutators. getaccessor ( ) )
[3]: org. junit. assert. assertequals ( 1, org. kie. soup. project. datamodel. oracle. fieldaccessorsandmutators. getaccessor ( ). get ( ) )
[4]: org. junit. assert. assertnotnull ( org. kie. soup. project. datamodel. oracle. fieldaccessorsandmutators. getaccessor ( ) )

************

************
tgt: org . junit . assert . assertequals ( crh1 . getcount ( ) , crh2 . getcount ( ) )
[0]: org. junit. assert. assertequals ( 0, org. kie. soup. project. datamodel. oracle. fieldaccessorsandmutators. getaccessor ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, collector. getannotations ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, collector. getannotations ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, events. getannotations ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, collection. getannotations ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( 1, event. getannotations ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( autodiscovery. tryfindclass ( ) )
[2]: org. junit. assert. assertthat ( encodedfast, org. hamcrest. matchers. equalto ( encodedfast ) )
[3]: org. junit. assert. assertthat ( encodedfast, org. hamcrest. matchers. is ( encodedfast ) )
[4]: org. junit. assert. assertthat ( encodedvia, org. hamcrest. matchers. equalto ( encodedfast ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( encodedslow, value ), encodedfast )
[1]: org. junit. assert. assertarrayequals ( encodedslow, encodedfast )
[2]: org. junit. assert. assertequals ( outcome. return, version )
[3]: org. junit. assert. assertequals ( expected, version )
[4]: org. junit. assert. assertequals ( java. lang. string. class, version )

************

************
tgt: org . junit . assert . assertthat ( status , org . hamcrest . matchers . is ( 201 ) )
[0]: , version )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, results. size ( ) )
[3]: org. junit. assert. assertequals ( 0, results. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), results )

************

************
tgt: org . junit . assert . assertequals ( o1 . name ( ) , parse ( o1 ) . name ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), results )
[1]: ) )
[2]: org. junit. assert. assertequals ( samplegraph1, approximategraphscheck ( writer, read ) )
[3]: org. junit. assert. assertequals ( json, approximategraphscheck ( writer, read ) )
[4]: org. junit. assert. assertequals ( json, approximategraphscheck ( read, read ) )

************

************
tgt: org . junit . assert . assertsame ( value , storeundertest . get ( ) )
[0]: org. junit. assert. assertequals ( samplegraph1, approximategraphscheck ( read, read ) )
[1]: org. junit. assert. assertequals ( samplegraph1, approximategraphscheck ( reader, read ) )
[2]: org. junit. assert. assertnotnull ( f )
[3]: org. junit. assert. assertequals ( f, test )
[4]: org. junit. assert. assertequals ( f, test. s )

************

************
tgt: org . junit . assert . assertequals ( 0 , documents . size ( ) )
[0]: org. junit. assert. assertequals ( test. s, f )
[1]: org. junit. assert. assertequals ( test, f )
[2]: org. junit. assert. assertnotnull ( buffer )
[3]: org. junit. assert. assertnull ( buffer )
[4]: , buffer )

************

************
tgt: org . junit . assert . assertnull ( java . lang . object . class . getsuperclass ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnotnull ( migrationplan )
[3]: org. junit. assert. assertequals ( 1, migrationplan. count )
[4]: org. junit. assert. assertequals ( 0, migrationplan. count )

************

************
tgt: org . junit . assert . assertnull ( existingsubscription )
[0]: org. junit. assert. assertnull ( migrationplan )
[1]: ) )
[2]: org. junit. assert. assertarrayequals ( expectedarray, resultarray )
[3]: org. junit. assert. assertarrayequals ( expectedarray, resultsarray )
[4]: org. junit. assert. assertarrayequals ( expectedarray, resultarray, 0 )

************

************
tgt: org . junit . assert . assertsame ( withcreate , ret )
[0]: org. junit. assert. assertequals ( expectedarray, resultarray )
[1]: org. junit. assert. assertarrayequals ( expectedarray, resultarray, 0.0 )
[2]: org. junit. assert. assertequals ( expected, devent. getfield ( string ) )
[3]: org. junit. assert. assertequals ( expected, devent. getfield ( null ) )
[4]: org. junit. assert. assertequals ( expected, devent. getfield ( 0 ) )

************

************
tgt: org . junit . assert . assertnotnull ( actual )
[0]: org. junit. assert. assertequals ( expected, devent )
[1]: ) )
[2]: org. junit. assert. asserttrue ( module. login ( ) )
[3]: org. junit. assert. assertnotnull ( resultsq )
[4]: org. junit. assert. assertnull ( resultsq )

************

************
tgt: org . junit . assert . assertnull ( ret )
[0]: org. junit. assert. assertequals ( 1, resultsq )
[1]: org. junit. assert. assertequals ( 1, resultsq. length )
[2]: org. junit. assert. assertnotnull ( results q )
[3]: org. junit. assert. asserttrue ( ok )
[4]: org. junit. assert. assertnotnull ( namedescription. getmaximumlength ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , org . nuxeo . ecm . core . event . test . dummypostcommiteventlistener . handledcount ( ) )
[0]: org. junit. assert. assertequals ( 1, vh. geteventssize ( ) )
[1]: org. junit. assert. assertequals ( expected, updates. tostring ( ) )
[2]: org. junit. assert. assertequals ( expected, updates. get ( 0 ) )
[3]: org. junit. assert. assertequals ( expected, updates )
[4]: org. junit. assert. assertequals ( expected, updates. get ( ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( expected ) ) )
[0]: org. junit. assert. assertequals ( expected, updates. collect ( ) )
[1]: org. junit. assert. assertequals ( gemeenten, result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( gemeentens, result )
[4]: , result )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( res )
[2]: org. junit. assert. assertequals ( null, res )
[3]: org. junit. assert. assertequals ( string_1, res )
[4]: org. junit. assert. assertequals ( string, res )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: ) )
[1]: org. junit. assert. assertequals ( 150l, getsize ( file, java. lang. class, null, null, null ) )
[2]: org. junit. assert. assertequals ( 150l, getsize ( file, java. lang. string. class, null, null, null ) )
[3]: org. junit. assert. assertequals ( 150l, getsize ( file, java. util. file. class, null, null, null ) )
[4]: org. junit. assert. assertequals ( 150l, getsize ( file, java. io. file. class, null, null, null ) )

************

************
tgt: org . junit . assert . assertthat ( reader . isnull ( ) , org . hamcrest . matchers . is ( false ) )
[0]: org. junit. assert. assertequals ( 150l, getsize ( file, java. lang. file. class, null, null, null ) )
[1]: org. junit. assert. assertnull ( person. getattribute ( null ) )
[2]: org. junit. assert. assertnull ( person. getattribute ( 1 ) )
[3]: org. junit. assert. assertnull ( person. getattribute ( 0 ) )
[4]: org. junit. assert. assertnull ( person. getattribute ( string ) )

************

************
tgt: org . junit . assert . asserttrue ( provider . issupported ( org . apache . cxf . jaxrs . provider . index . testbean . class , org . apache . cxf . jaxrs . provider . index . testbean . class , new java . lang . annotation . annotation [ ] { } ) )
[0]: org. junit. assert. assertnull ( person )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 1, statements. size ( ) )
[3]: org. junit. assert. assertequals ( 1, results. size ( ) )
[4]: org. junit. assert. assertequals ( 1, size )

************

************
tgt: org . junit . assert . assertequals ( endpoints , parsedendpoints )
[0]: org. junit. assert. assertequals ( 1, members. size ( ) )
[1]: org. junit. assert. assertequals ( 1, deliveryhash )
[2]: org. junit. assert. assertequals ( 0, deliveryhash )
[3]: org. junit. assert. assertequals ( 2, deliveryhash )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( format , org . hamcrest . matchers . is ( "xml" ) )
[0]: )
[1]: org. junit. assert. assertnotnull ( radius. getcentrality ( null ) )
[2]: org. junit. assert. assertequals ( null, radius. getcentrality ( null ) )
[3]: org. junit. assert. assertnotnull ( radius. getcentrality ( graph ) )
[4]: org. junit. assert. assertequals ( null, radius. getcentrality ( null ), 0.0 )

************

************
tgt: org . junit . assert . assertarrayequals ( incontent , outcontent )
[0]: org. junit. assert. assertequals ( null, radius. getcentrality ( null ), 1.0 )
[1]: org. junit. assert. assertequals ( 1, i )
[2]: org. junit. assert. assertnotnull ( newconfigurationto )
[3]: org. junit. assert. assertnull ( newconfigurationto )
[4]: org. junit. assert. assertnotnull ( newconfigurationto. value )

************

************
tgt: org . junit . assert . assertequals ( "[]" , value )
[0]: org. junit. assert. assertnotnull ( newconfigurationto. data )
[1]: , newconfigurationto )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( 1 , counter . get ( ) )
[0]: org. junit. assert. assertequals ( ""foo"", result )
[1]: org. junit. assert. assertequals ( ""a"", result )
[2]: org. junit. assert. asserttrue ( ( ( data. size ( ) ) >= 1 ) )
[3]: org. junit. assert. asserttrue ( ( ( data. size ( ) ) == 1 ) )
[4]: org. junit. assert. asserttrue ( ( ( metadata. size ( ) ) == 1 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , countrylist . size ( ) )
[0]: org. junit. assert. asserttrue ( true )
[1]: org. junit. assert. asserttrue ( contains )
[2]: org. junit. assert. assertthat ( rawmatcher. matches ( typedescription, classloader, module, net. bytebuddy. agent. builder. agentbuilderrawmatcherconjunctiontest. foo ), org. hamcrest. corematchers. is ( true ) )
[3]: org. junit. assert. assertthat ( rawmatcher. matches ( typedescription, classloader, module, net. bytebuddy. agent. builder. agentbuilderrawmatcherconjunctiontest. foo. class, protectiondomain ), is ( true ) )
[4]: org. junit. assert. assertthat ( rawmatcher. matches ( typedescription ), org. hamcrest. corematchers. is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertthat ( rawmatcher. matches ( typedescription, classloader, module ), org. hamcrest. corematchers. is ( true ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( result. isempty ( ) )
[3]: org. junit. assert. assertequals ( true, result. isempty ( ) )
[4]: org. junit. assert. assertequals ( expected, commentresult )

************

************
tgt: org . junit . assert . assertequals ( euclideanassertion , result )
[0]: org. junit. assert. assertequals ( expected, commentresult. getmessage ( ) )
[1]: org. junit. assert. assertequals ( expected, actualanswer. getmessage ( ) )
[2]: org. junit. assert. assertequals ( expectedresult, commentresult )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertarrayequals ( paths, expected )

************

************
tgt: org . junit . assert . assertequals ( 0 , res . size ( ) )
[0]: org. junit. assert. assertthat ( paths, org. hamcrest. matchers. is ( expected ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( expected ), paths )
[2]: org. junit. assert. assertequals ( paths, expected )
[3]: org. junit. assert. assertarrayequals ( expected, paths )
[4]: org. junit. assert. assertequals ( inputs, input )

************

************
tgt: org . junit . assert . assertequals ( "/a.txt" , path . tostring ( ) )
[0]: org. junit. assert. assertequals ( inputs, result )
[1]: org. junit. assert. assertequals ( input, input )
[2]: org. junit. assert. assertequals ( inputs, results )
[3]: org. junit. assert. assertequals ( results, input )
[4]: org. junit. assert. asserttrue ( true )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( new int [ ] { 2 , 2 , 2 , 2 } , this . getcounts2 ( ) ) )
[0]: org. junit. assert. assertnotnull ( actual )
[1]: org. junit. assert. assertnotnull ( info )
[2]: org. junit. assert. assertnotnull ( data )
[3]: ) )
[4]: org. junit. assert. assertequals ( count, dataobject. getproperties ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( message )
[0]: org. junit. assert. assertequals ( 1, dataobject. getproperties ( ). size ( ) )
[1]: org. junit. assert. assertequals ( counts, dataobject. getproperties ( ). size ( ) )
[2]: org. junit. assert. assertequals ( size, dataobject. getproperties ( ). size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( dependentservice. getvalue ( ), java. util. optional. of ( dependentservice ) )

************

************
tgt: org . junit . assert . assertequals ( constant , template . getelements ( ) . iterator ( ) . next ( ) )
[0]: org. junit. assert. assertequals ( dependentservice. getvalue ( ), java. util. collections. singletonlist ( dependentservice ) )
[1]: org. junit. assert. assertequals ( dependentservice. getvalue ( ), 0 )
[2]: org. junit. assert. assertequals ( dependentservice. getvalue ( ), outinjections )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, ret )

************

************
tgt: org . junit . assert . assertequals ( in , out )
[0]: org. junit. assert. asserttrue ( stack. equals ( readmaterialstack ) )
[1]: org. junit. assert. asserttrue ( material. equals ( readmaterialstack ) )
[2]: org. junit. assert. asserttrue ( symbol. equals ( readmaterialstack ) )
[3]: org. junit. assert. asserttrue ( queue. equals ( readmaterialstack ) )
[4]: org. junit. assert. asserttrue ( inst. equals ( readmaterialstack ) )

************

************
tgt: org . junit . assert . assertfalse ( containsseededmethod )
[0]: org. junit. assert. assertequals ( input, actual )
[1]: org. junit. assert. assertequals ( java. math. bigdecimal. valueof ( expected ), actual )
[2]: org. junit. assert. assertequals ( new java. math. bigdecimal ( expected ), actual )
[3]: org. junit. assert. assertequals ( expected, actual )
[4]: org. junit. assert. assertequals ( java. math. bigdecimal. valueof ( input ), actual )

************

************
tgt: org . junit . assert . assertequals ( 1.0 , scheduler . getsimtime ( ) , 0.0 )
[0]: org. junit. assert. assertequals ( true, e0. issamebybind ( e1 ) )
[1]: org. junit. assert. assertequals ( true, e0. issamebybind ( e0 ) )
[2]: org. junit. assert. assertnotnull ( listener. triggers )
[3]: org. junit. assert. assertnotnull ( listener )
[4]: org. junit. assert. assertnull ( listener. triggers )

************

************
tgt: org . junit . assert . assertnull ( converter . parse ( null , null ) )
[0]: org. junit. assert. assertnotnull ( listener. triggersquery )
[1]: ) )
[2]: org. junit. assert. assertequals ( listener, wrapper. getproviderlistener ( ) )
[3]: org. junit. assert. assertnotnull ( wrapper. getproviderlistener ( ) )
[4]: org. junit. assert. assertequals ( event, wrapper. getproviderlistener ( ) )

************

************
tgt: org . junit . assert . assertequals ( iterations , processor . getcounter ( ) )
[0]: org. junit. assert. assertequals ( handler, wrapper. getproviderlistener ( ) )
[1]: ) )
[2]: org. junit. assert. assertthat ( expecteddue, org. hamcrest. corematchers. is ( expecteddue ) )
[3]: org. junit. assert. assertthat ( expecteddue, org. hamcrest. corematchers. is ( java. lang. double. valueof ( expecteddue ) ) )
[4]: org. junit. assert. assertequals ( expecteddue, loanbo )

************

************
tgt: org . junit . assert . assertequals ( testobject , result . getrenderable ( ) )
[0]: org. junit. assert. assertthat ( expecteddue, org. hamcrest. corematchers. is ( expectedequest ) )
[1]: org. junit. assert. assertthat ( expectedequest, org. hamcrest. corematchers. is ( expecteddue ) )
[2]: org. junit. assert. assertequals ( samples [ i ] [ j ], gotsamples [ i ] [ j ] )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), gotsamples [ j ] [ i ] )
[4]: org. junit. assert. assertequals ( values [ i ] [ j ], gotsamples [ i ] [ j ] )

************

************
tgt: org . junit . assert . assertnotnull ( newhive )
[0]: org. junit. assert. assertequals ( samples [ i ] [ j ], gotsamples [ i ] )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), gotsamples [ i ] [ j ] )
[2]: org. junit. assert. assertequals ( 1, creatarrayutil ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( creatarrayutil ( ) )
[4]: org. junit. assert. assertnotnull ( creatarrayutil ( ). collect ( tolist ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( authorizable . getpath ( ) . startswith ( ( ( org . apache . jackrabbit . oak . spi . security . user . userconstants . default_group_path ) + "/a/b/c" ) ) )
[0]: org. junit. assert. assertnotnull ( creatarrayutil ( ). collect ( ) )
[1]: org. junit. assert. assertnotnull ( creatarrayutil ( ). size ( ) )
[2]: org. junit. assert. assertarrayequals ( expected, cmds )
[3]: org. junit. assert. assertnull ( shouldnotexist )
[4]: org. junit. assert. assertnotnull ( shouldnotexist )

************

************
tgt: org . junit . assert . assertequals ( "28087726000122" , retorno . getcnpj ( ) )
[0]: org. junit. assert. assertequals ( null, shouldnotexist )
[1]: get ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( result [ j ], initial [ j ], 0 )
[4]: org. junit. assert. assertequals ( result [ j ], initial [ j ], initial [ j ] )

************

************
tgt: org . junit . assert . asserttrue ( sqle . getmessage ( ) . contains ( "keystorepassword" 1 ) )
[0]: org. junit. assert. assertequals ( result [ j ], initial [ j ], 1 )
[1]: org. junit. assert. assertequals ( result [ j ], initial [ j ], 0l )
[2]: org. junit. assert. assertequals ( result [ j ], initial [ j ], initial [ j ] }
[3]: org. junit. assert. assertnotnull ( endtime )
[4]: org. junit. assert. assertequals ( resource, endtime )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( null, endtime )
[1]: ) )
[2]: )
[3]: org. junit. assert. asserttrue ( daemon. isalive ( ) )
[4]: org. junit. assert. assertnotnull ( clazz2 )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( msg . getpayloadbuffer ( ) , expectedresponsev1 ) )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. assertequals ( clazz2, e )
[2]: org. junit. assert. assertnotnull ( clazz1 )
[3]: 
[4]: org. junit. assert. assertnotnull ( scheduled. notifycalls ( ) )

************

************
tgt: org . junit . assert . assertequals ( count , 1 )
[0]: org. junit. assert. assertnotnull ( scheduled. notifycalls ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, scheduled. notifycalls ( ) )
[2]: org. junit. assert. assertequals ( 1, scheduled. notifycalls ( ). length )
[3]: org. junit. assert. assertequals ( 1, scheduled. notifycalls ( ). size ( )
[4]: org. junit. assert. assertequals ( usd, accountbalance. getaccount ( ) )

************

************
tgt: org . junit . assert . assertequals ( ai . labs . persistence . illegalargumentexception . class , e . getclass ( ) )
[0]: org. junit. assert. assertequals ( accountbalance, accountbalance. getaccount ( ) )
[1]: org. junit. assert. asserttrue ( result )
[2]: org. junit. assert. assertequals ( true, result )
[3]: org. junit. assert. assertfalse ( result )
[4]: org. junit. assert. assertequals ( false, result )

************

************
tgt: org . junit . assert . assertthat ( actual . tostring ( ) , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( expected ) ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( 0, violations. size ( ) )
[2]: org. junit. assert. asserttrue ( list. isempty ( ) )
[3]: org. junit. assert. assertequals ( true, list. isempty ( ) )
[4]: org. junit. assert. assertequals ( expected, uri )

************

************
tgt: org . junit . assert . assertequals ( expected , tostring ( acc ) )
[0]: org. junit. assert. assertequals ( expected, new java. lang. string ( uri ) )
[1]: org. junit. assert. assertequals ( expected, java. lang. string. valueof ( uri ) )
[2]: org. junit. assert. assertequals ( expected, handler. sanitizeuri ( uri ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( result, true )

************

************
tgt: org . junit . assert . assertnull ( utils . convertpicture ( null ) )
[0]: org. junit. assert. assertequals ( 1, object. getobjectreferencecount ( ) )
[1]: org. junit. assert. assertequals ( 0, object. getobjectreferencecount ( ) )
[2]: org. junit. assert. assertequals ( 1, objects. getobjectreferencecount ( ) )
[3]: org. junit. assert. assertequals ( 1, obj. getobjectreferencecount ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( actual )
[0]: org. junit. assert. assertnotnull ( testresource. tostring ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), testresource. tostring ( ) )
[2]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. join ( ), testresource. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, testresource. tostring ( ) )
[4]: org. junit. assert. assertequals ( null, testresource. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( message , result )
[0]: org. junit. assert. assertequals ( 1, com. liferay. portal. kernel. util. arrayutil. isempty ( array ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), com. liferay. portal. kernel. util. arrayutil. isempty ( array ) )
[2]: org. junit. assert. assertarrayequals ( new long [ ] { }, com. liferay. portal. kernel. util. arrayutil. isempty ( array ) )
[3]: org. junit. assert. assertequals ( com. liferay. portal. kernel. util. arrayutil. isempty ( array ), false )
[4]: org. junit. assert. assertarrayequals ( new long [ ] { }, com. liferay. portal. kernel. util. arrayutil. isempty ( array ) )

************

************
tgt: org . junit . assert . assertfalse ( cz . zcu . kiv . jop . util . primitiveutils . iswrapper ( null ) )
[0]: org. junit. assert. assertnotnull ( coll. getname ( ) )
[1]: org. junit. assert. assertequals ( name, coll. getname ( ) )
[2]: org. junit. assert. assertequals ( null, coll. getname ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( expected , actual , org . apache . commons . math3 . fitting . leastsquares . tol )
[0]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { }, sequence. toarray ( new java. lang. string [ 0 ] ) )
[1]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { null }, sequence. toarray ( new java. lang. string [ 0 ] ) )
[2]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { 1, 1, 1 }, sequence. toarray ( new java. lang. string [ 0 ] ) )
[3]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { 1, 2, 3 }, sequence. toarray ( new java. lang. string [ 0 ] ) )
[4]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { 1, 2, 3 }, sequence. toarray ( new java. lang. string [ ] { } ) )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , testutils . formattedresult . resultfactory . tostring ( rs ) )
[0]: org. junit. assert. asserttrue ( verifyandgetresult ( ) )
[1]: org. junit. assert. asserttrue ( portbindings. verifyandgetresult ( ) )
[2]: org. junit. assert. assertfalse ( portbindings. verifyandgetresult ( ) )
[3]: org. junit. assert. assertequals ( etag, manager. getetag ( objectid, null ) )
[4]: org. junit. assert. assertequals ( etag, dao. getetag ( objectid, null ) )

************

************
tgt: org . junit . assert . assertnotnull ( sheep )
[0]: org. junit. assert. assertequals ( etag, getetag ( objectid, null ) )
[1]: org. junit. assert. assertequals ( etag, dao. getetag ( objectid, gson. forum ) )
[2]: org. junit. assert. assertequals ( etag, dao. getetag ( objectid, gson ) )
[3]: org. junit. assert. assertequals ( true, result )
[4]: org. junit. assert. asserttrue ( result )

************

************
tgt: org . junit . assert . asserttrue ( exceptionoccured )
[0]: org. junit. assert. assertfalse ( result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( true, result )
[3]: org. junit. assert. assertequals ( true, ws. getoobinline ( ) )
[4]: org. junit. assert. assertequals ( 1, ws. getoobinline ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , message . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, meldingen. size ( ) )
[1]: org. junit. assert. assertequals ( ref, ref. atomicget ( ) )
[2]: org. junit. assert. assertnotnull ( ref. atomicget ( ) )
[3]: org. junit. assert. assertnull ( ref. atomicget ( ) )
[4]: org. junit. assert. assertequals ( 1, jobentrycopy. getattributesmap ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( is , adapter . getattributenames ( ) )
[0]: org. junit. assert. assertequals ( 0, jobentrycopy. getattributesmap ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, jobentrycopy. getattributesmap ( ) )
[2]: org. junit. assert. assertequals ( null, jobentrycopy. getattributesmap ( ). get ( 0 ) )
[3]: org. junit. assert. assertequals ( null, jobentrycopy. getattributesmap ( ). get ( ) )
[4]: org. junit. assert. assertequals ( 1, getactivity ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( exp , res )
[0]: org. junit. assert. assertequals ( java. util. optional. empty ( ), getactivity ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), getactivity ( ) )
[2]: org. junit. assert. assertequals ( 1, getactivity ( ). list ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, getactivity ( ). size ( ) )
[4]: org. junit. assert. assertthat ( host. isempty ( ), org. hamcrest. matchers. is ( true ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertthat ( response. isempty ( ), org. hamcrest. matchers. is ( true ) )
[1]: org. junit. assert. assertthat ( job. isempty ( ), org. hamcrest. matchers. is ( true ) )
[2]: org. junit. assert. assertthat ( name, org. hamcrest. matchers. is ( host ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( rvstr, rvfromstr )

************

************
tgt: org . junit . assert . assertequals ( expectedjsonstringoutput , actualjsonstringoutput )
[0]: org. junit. assert. assertnotnull ( rvfromstr )
[1]: org. junit. assert. assertequals ( rv3, rvfromstr )
[2]: org. junit. assert. assertequals ( rv1, rvfromstr )
[3]: org. junit. assert. assertnull ( rvfromstr )
[4]: org. junit. assert. asserttrue ( collected1. equals ( collected0 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( true, collected1. equals ( collected0 ) )
[1]: org. junit. assert. assertnotnull ( q )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnotnull ( query )
[4]: org. junit. assert. assertnotnull ( loaded )

************

************
tgt: org . junit . assert . assertthat ( element . gettext ( ) , org . hamcrest . matchers . is ( loweralphas ) )
[0]: org. junit. assert. assertnotnull ( data )
[1]: org. junit. assert. assertarrayequals ( values, null )
[2]: org. junit. assert. assertarrayequals ( values, values )
[3]: org. junit. assert. assertarrayequals ( vals, values )
[4]: org. junit. assert. assertarrayequals ( values, 0 )

************

************
tgt: org . junit . assert . assertequals ( expecting , result )
[0]: org. junit. assert. assertarrayequals ( new java. lang. string [ 0 ], values )
[1]: org. junit. assert. assertnotnull ( repository )
[2]: org. junit. assert. assertthat ( functionexecution. executeandextract ( ), org. hamcrest. corematchers. equalto ( ( - 1 ) ) )
[3]: org. junit. assert. assertthat ( functionexecution. executeandextract ( ), org. hamcrest. corematchers. equalto ( null ) )
[4]: org. junit. assert. assertthat ( functionexecution. executeandextract ( ), org. hamcrest. corematchers. is ( ( - 1 ) ) )

************

************
tgt: org . junit . assert . assertequals ( "1**2**3" , getfieldvalue ( "content" ) )
[0]: org. junit. assert. assertnotnull ( functionexecution. executeandextract ( ) )
[1]: org. junit. assert. assertnull ( functionexecution. executeandextract ( ) )
[2]: org. junit. assert. assertequals ( 1, 1 )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, statements. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( testcase . verifysignature ( message , signature , publickey ) )
[0]: org. junit. assert. assertequals ( 1, events. size ( ) )
[1]: org. junit. assert. assertnotnull ( converter )
[2]: org. junit. assert. asserttrue ( promise. cause ( ) )
[3]: org. junit. assert. asserttrue ( promise. cause ( ). isempty ( ) )
[4]: org. junit. assert. asserttrue ( promise. cause ( ). exists ( ) )

************

************
tgt: org . junit . assert . assertequals ( codigoevento , infoeventocancelamento . getcodigoevento ( ) )
[0]: org. junit. assert. assertfalse ( promise. cause ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( expectedjson, generatedjson )
[3]: org. junit. assert. assertthat ( generatedjson, is ( expectedjson ) )
[4]: org. junit. assert. assertequals ( expectedjson, generatedjson. trim ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new java . lang . byte [ ] { ( ( byte ) ( 1 ) ) , ( ( byte ) ( 2 ) ) } , ( ( java . lang . byte [ ] ) ( marko . property ( "bytes" ) . value ( ) ) ) )
[0]: org. junit. assert. assertequals ( resultjson, generatedjson )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, result. length )
[3]: org. junit. assert. assertequals ( 0, result. length )
[4]: org. junit. assert. assertequals ( result. length, 1 )

************

************
tgt: org . junit . assert . assertequals ( expected , reference . get ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( net. roboconf. core. utils. utils. readfilecontent ( f ) )
[3]: org. junit. assert. asserttrue ( mines. equals ( minesanother ) )
[4]: org. junit. assert. assertequals ( mines. equals ( minesanother ), minesanother. get ( index ) )

************

************
tgt: org . junit . assert . assertequals ( s , ns )
[0]: org. junit. assert. assertfalse ( mines. equals ( minesanother ) )
[1]: org. junit. assert. assertequals ( mines. equals ( minesanother ), minesanother. get ( 0 ) )
[2]: org. junit. assert. assertequals ( mines. equals ( minesanother ), minesanother. size ( ) )
[3]: org. junit. assert. assertnotnull ( usertaskpageproviver. getlocale ( ) )
[4]: org. junit. assert. assertequals ( null, usertaskpageproviver. getlocale ( ) )

************

************
tgt: org . junit . assert . assertequals ( httpstatus . ok , response . getstatuscode ( ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), usertaskpageproviver. getlocale ( ) )
[1]: org. junit. assert. assertequals ( org. apache. commons. lang3. stringutils. class, usertaskpageproviver. getlocale ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, layout. getcontenttype ( ) )
[4]: org. junit. assert. assertnotnull ( layout. getcontenttype ( ) )

************

************
tgt: org . junit . assert . assertequals ( 13 , result )
[0]: org. junit. assert. asserttrue ( layout. getcontenttype ( ). isempty ( ) )
[1]: org. junit. assert. assertequals ( 0, layout. getcontenttype ( ) )
[2]: org. junit. assert. assertequals ( 1, layout. getcontenttype ( ). length )
[3]: org. junit. assert. assertequals ( 1, branch_conditions. size ( ) )
[4]: org. junit. assert. assertequals ( 0, branch_conditions. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( a . equals ( "" ) )
[0]: org. junit. assert. assertequals ( 1, branch_conditions. size ( ) )
[1]: org. junit. assert. assertequals ( 3, branch_conditions. size ( ) )
[2]: org. junit. assert. assertequals ( 1, branch.conditions. size ( ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertfalse ( clark. isengagedwith ( alice ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ! ( instance . ismonitoringenabled ( ) ) ) )
[0]: org. junit. assert. assertequals ( false, clark. isengagedwith ( alice ) )
[1]: org. junit. assert. asserttrue ( clark. isengagedwith ( alice ) )
[2]: org. junit. assert. assertfalse ( clark. isengagedwith ( alice ) ) to false )
[3]: org. junit. assert. assertfalse ( clark. isengagedwith ( alice ) ) to
[4]: org. junit. assert. assertnotnull ( subject )

************

************
tgt: org . junit . assert . assertthat ( remoterunnables . getlength ( ) , org . hamcrest . matchers . equalto ( 0 ) )
[0]: org. junit. assert. assertnotnull ( clienttracer )
[1]: org. junit. assert. assertnotnull ( subject. close )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 0, cmd. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( billingservices )
[0]: org. junit. assert. assertequals ( 1, cmd. size ( ) )
[1]: org. junit. assert. assertequals ( 1, sum )
[2]: org. junit. assert. assertequals ( 0, sum )
[3]: org. junit. assert. assertequals ( sum, 1 )
[4]: org. junit. assert. assertequals ( 6, sum )

************

************
tgt: org . junit . assert . assertnotnull ( type )
[0]: org. junit. assert. assertequals ( sum, 0 )
[1]: org. junit. assert. assertequals ( 1, caps. size ( ) )
[2]: org. junit. assert. assertequals ( 0, caps. size ( ) )
[3]: org. junit. assert. assertequals ( dto2, city. getadm1name ( ) )
[4]: org. junit. assert. assertequals ( dto1, city. getadm1name ( ) )

************

************
tgt: org . junit . assert . assertnull ( treatmentinterval )
[0]: org. junit. assert. assertequals ( dto3, city. getadm1name ( ) )
[1]: org. junit. assert. assertnotnull ( city. getadm1name ( ) )
[2]: org. junit. assert. assertequals ( dto2. getadm1name ( ), city )
[3]: org. junit. assert. assertequals ( doc_id, result )
[4]: org. junit. assert. assertequals ( document_id, result )

************

************
tgt: org . junit . assert . assertthat ( providerlist . size ( ) , org . hamcrest . corematchers . is ( 5 ) )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertequals ( 0, result )
[2]: ) )
[3]: org. junit. assert. assertequals ( orgateststring, classundertest. gettablecontentsoutputclassname ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), classundertest. gettablecontentsoutputclassname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , response . getthreaddumpssize ( ) )
[0]: org. junit. assert. assertequals ( "ateststring, classundertest. gettablecontentsoutputclassname ( ) )
[1]: org. junit. assert. assertequals ( orgateststring. size ( ), classundertest. gettablecontentsoutputclassname ( ) )
[2]: org. junit. assert. assertequals ( orgateststring. size ( ), classundertest. gettablecontentsoutputclassname ( ). length )
[3]: org. junit. assert. assertequals ( true, b )
[4]: org. junit. assert. assertequals ( false, b )

************

************
tgt: org . junit . assert . assertequals ( portsb . build ( ) , portsout )
[0]: org. junit. assert. assertequals ( 1, b )
[1]: org. junit. assert. assertequals ( null, b )
[2]: org. junit. assert. assertequals ( ""test"", echo. echo ( ""test"" ) )
[3]: org. junit. assert. assertequals ( ""test"", echo. echo ( ""test"" ) )
[4]: org. junit. assert. assertnotnull ( echo. echo ( ""test"" ) )

************

************
tgt: org . junit . assert . asserttrue ( ( leaftype instanceof org . opendaylight . yangtools . yang . model . api . type . leafreftypedefinition ) )
[0]: public void set ( ""test"" ) { }
[1]: org. junit. assert. assertnotnull ( echo )
[2]: org. junit. assert. assertequals ( 1, adjacent. length )
[3]: org. junit. assert. assertequals ( 0, adjacent. length )
[4]: org. junit. assert. assertequals ( 4, adjacent. length )

************

************
tgt: org . junit . assert . assertnull ( map )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. assertequals ( null, e )
[2]: org. junit. assert. assertnotnull ( one )
[3]: org. junit. assert. assertnotnull ( results )
[4]: org. junit. assert. assertnotnull ( 1 )

************

************
tgt: org . junit . assert . assertarrayequals ( expected . tobytearray ( ) , received . tobytearray ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: ) )
[2]: org. junit. assert. assertequals ( expectedusersession, actualusersession )
[3]: org. junit. assert. assertequals ( expectedusersession, session )
[4]: org. junit. assert. assertequals ( expectedusersession, contextutil )

************

************
tgt: org . junit . assert . assertequals ( mutationmentions . size ( ) , 1 )
[0]: org. junit. assert. assertequals ( expectedusersession, contextutil. getcurrentusersession )
[1]: org. junit. assert. assertequals ( expectedusersession, context. getcurrentusersession )
[2]: org. junit. assert. assertequals ( null, back )
[3]: org. junit. assert. assertnotnull ( back )
[4]: org. junit. assert. assertequals ( expected, back )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( expected , command ) )
[0]: org. junit. assert. assertequals ( msg, back )
[1]: type ) )
[2]: org. junit. assert. asserttrue ( names. isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, list. isempty ( ) )
[4]: org. junit. assert. asserttrue ( list. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( configs . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, list. isempty ( ) )
[1]: org. junit. assert. assertfalse ( collection. isempty ( ) )
[2]: org. junit. assert. assertequals ( null, au. gov. ga. earthsci. worldwind. common. util. util. computelatlonfromstring ( null ) )
[3]: org. junit. assert. assertequals ( null, au. gov. ga. earthsci. worldwind. common. util. util. computelatlonfromstring ( """" ) )
[4]: org. junit. assert. assertequals ( null, au. gov. ga. earthsci. worldwind. common. util. util. computelatlonfromstring ( ""a"" ) )

************

************
tgt: org . junit . assert . asserttrue ( union . isdistinct ( ) )
[0]: org. junit. assert. assertnotnull ( au. gov. ga. earthsci. worldwind. common. util. util. computelatlonfromstring ( null ) )
[1]: org. junit. assert. assertequals ( 0, au. gov. ga. earthsci. worldwind. common. util. util. computelatlonfromstring ( null ). length )
[2]: org. junit. assert. assertnotnull ( event )
[3]: org. junit. assert. assertequals ( null, event )
[4]: org. junit. assert. assertequals ( 1, event. s )

************

************
tgt: org . junit . assert . assertequals ( ( ( int ) ( testval ) ) , i )
[0]: org. junit. assert. assertnull ( event )
[1]: org. junit. assert. assertequals ( event, eventfactory )
[2]: org. junit. assert. assertequals ( expected, tableformatter. formatastable )
[3]: org. junit. assert. assertequals ( expected, c2 )
[4]: org. junit. assert. assertequals ( expected, data )

************

************
tgt: org . junit . assert . assertequals ( s , l , c . parse ( s ) )
[0]: org. junit. assert. assertequals ( expected, s )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, uploadlistener. getlog ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, uploadlistener. getlog ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, uploadlistener. getlog ( ) )

************

************
tgt: org . junit . assert . assertequals ( target . getsessionstate ( ) , sessionstate . inactive )
[0]: org. junit. assert. assertequals ( 1, uploadlistener. getlog ( ). length )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( policy. log ), uploadlistener )
[2]: org. junit. assert. assertequals ( 0, container. children. size ( ) )
[3]: org. junit. assert. assertequals ( 1, container. children. size ( ) )
[4]: org. junit. assert. assertequals ( 0, containers. children. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 7 , result )
[0]: org. junit. assert. assertequals ( 0, container. children. size ( ) )
[1]: org. junit. assert. assertequals ( 0, container. child. size ( ) )
[2]: org. junit. assert. assertequals ( enablelowercase, sink. enablelowercase )
[3]: org. junit. assert. assertequals ( enableslowercase, sink. enablelowercase )
[4]: org. junit. assert. assertequals ( enablelowercase, sink )

************

************
tgt: org . junit . assert . assertequals ( exception . getmessage ( ) , str )
[0]: org. junit. assert. assertequals ( enabledlowercase, sink. enablelowercase )
[1]: org. junit. assert. assertequals ( enablelowercase, sink. enabledlowercase )
[2]: org. junit. assert. assertequals ( 4, p1. gettabsize ( ) )
[3]: org. junit. assert. assertequals ( 1, p1. gettabsize ( ) )
[4]: org. junit. assert. assertequals ( 3, p1. gettabsize ( ) )

************

************
tgt: org . junit . assert . assertequals ( resizer , receivedresizer )
[0]: org. junit. assert. assertequals ( p1. gettabsize ( ), 4 )
[1]: org. junit. assert. assertequals ( 4, env. gettabsize ( ) )
[2]: org. junit. assert. assertfalse ( ctx. hasbroadcastvariable ( null ) )
[3]: org. junit. assert. asserttrue ( ctx. hasbroadcastvariable ( java. lang. string. class ) )
[4]: org. junit. assert. assertfalse ( ctx. hasbroadcastvariable ( 10 ) )

************

************
tgt: org . junit . assert . assertequals ( "foo" , con . request ( ) . requestbody ( ) )
[0]: org. junit. assert. asserttrue ( ctx. hasbroadcastvariable ( 10 ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( onconnectionchangeddeletepre ( msg ) )
[3]: org. junit. assert. assertequals ( true, onconnectionchangeddeletepre ( msg ) )
[4]: org. junit. assert. assertfalse ( onconnectionchangeddeletepre ( msg ) )

************

************
tgt: org . junit . assert . assertfalse ( readonly )
[0]: org. junit. assert. assertthat ( handler. onconnectionchangeddeletepre ( msg ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, violations. size ( ) )
[3]: org. junit. assert. assertequals ( 0, violations. size ( ) )
[4]: org. junit. assert. assertequals ( 3, violations. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( pi )
[0]: org. junit. assert. assertnotnull ( role1. getname ( ) )
[1]: org. junit. assert. assertequals ( role1, role1. getname ( ) )
[2]: org. junit. assert. assertnull ( role1. getname ( ) )
[3]: org. junit. assert. assertnotnull ( roles1. getname ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , count )
[0]: org. junit. assert. assertequals ( 1, target. getservices ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( target. getservices ( ) )
[2]: org. junit. assert. assertnotnull ( target )
[3]: org. junit. assert. assertequals ( 0, target. getservices ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( target. getservices ( ). get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , reportresults . size ( ) )
[0]: org. junit. assert. assertequals ( poolname, prefix )
[1]: org. junit. assert. assertequals ( poolname, gettext ( prefix ) )
[2]: org. junit. assert. asserttrue ( istextpresent ( poolname ) )
[3]: org. junit. assert. assertequals ( poolname, gettext )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( wrapper . getcount ( ) ) == 10 ) )
[0]: org. junit. assert. asserttrue ( isprocessmodel ( test_process_name ) )
[1]: org. junit. assert. assertnotnull ( isprocessmodel ( test_process_name ) )
[2]: org. junit. assert. assertequals ( true, isprocessmodel ( test_process_name ) )
[3]: org. junit. assert. assertnotnull ( value )
[4]: org. junit. assert. assertequals ( pattern, value )

************

************
tgt: org . junit . assert . assertequals ( true , objectset . isempty ( ) )
[0]: org. junit. assert. assertequals ( expected, value )
[1]: org. junit. assert. assertnull ( value )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, pets. get ( 0 ). getid ( ) )
[4]: org. junit. assert. assertequals ( 1, pets. get ( 0 ). get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( targetmap . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, pets. get ( 0 ). getindex ( ) )
[1]: org. junit. assert. assertequals ( 1, pets. get ( 0 ). size ( ) )
[2]: org. junit. assert. assertnull ( pets. get ( 0 ) )
[3]: org. junit. assert. assertequals ( plaintext, plaintext )
[4]: org. junit. assert. assertequals ( 1, testvisitor. wasvisited ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( testvisitor. wasvisited ( ) )
[1]: org. junit. assert. assertnull ( testvisitor. wasvisited ( ) )
[2]: org. junit. assert. assertequals ( 0, org. springframework. data. solr. core. resulthelper. convertandaddhighlightqueryresponsetoresultpage ( response, response ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. springframework. data. solr. core. resulthelper. convertandaddhighlightqueryresponsetoresultpage ( response, java. util. collections. singletonlist ( new java. lang. object ( ) ) ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. springframework. data. solr. core. resulthelper. convertandaddhighlightqueryresponsetoresultpage ( response, response ) )

************

************
tgt: org . junit . assert . assertfalse ( isvalid )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. springframework. data. solr. core. resulthelper. convertandaddhighlightqueryresponsetoresultpage ( response, new org. springframework. data. solr. core. solrresultpage ( java. util. collections. emptylist ( ) ) ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, m. nextint ( 1 ) )
[3]: org. junit. assert. assertequals ( 0, m. nextint ( 42 ) )
[4]: org. junit. assert. assertequals ( 0, m. nextint ( 0 ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . is ( true ) )
[0]: org. junit. assert. assertnull ( m. nextint ( 42 ) )
[1]: org. junit. assert. assertnull ( m. nextint ( 0 ) )
[2]: org. junit. assert. assertequals ( 1, this. builder. guaranteed )
[3]: org. junit. assert. assertequals ( 1, 1 )
[4]: org. junit. assert. assertequals ( 1, this. builder. guaranteed. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( gov . hhs . fha . nhinc . mail . abstractmailpollertest . exception_msg , e . getmessage ( ) )
[0]: org. junit. assert. assertequals ( 0, this. builder. guaranteed. size ( ) )
[1]: org. junit. assert. assertequals ( 1, this. list. size ( ) )
[2]: org. junit. assert. assertequals ( delegate2, client. execute )
[3]: org. junit. assert. assertequals ( delegate2, client. execution )
[4]: org. junit. assert. assertequals ( delegate2, client. run )

************

************
tgt: org . junit . assert . assertfalse ( resultmessage ( result , org . openstack . atlas . api . mgmt . validation . validators . post ) , result . passedvalidation ( ) )
[0]: org. junit. assert. assertnotnull ( client )
[1]: ) )
[2]: org. junit. assert. assertequals ( itemsecond, tracker. getall ( ) [ firstelementofarray ] )
[3]: org. junit. assert. assertequals ( itemsecond, tracker. getall ( ). get ( 0 ) )
[4]: org. junit. assert. assertequals ( itemsecond, tracker. getall ( ). get ( 5 ) )

************

************
tgt: org . junit . assert . assertequals ( "foo" , transactionid )
[0]: org. junit. assert. assertequals ( itemsecond, tracker. getall ( ) )
[1]: ( itemsecond ) )
[2]: org. junit. assert. assertnotnull ( customscopedcomponent. getvalue ( ) )
[3]: org. junit. assert. assertequals ( 1, customscopedcomponent. getvalue ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, customscopedcomponent. getvalue ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , trimmed . size ( ) )
[0]: org. junit. assert. assertequals ( 1, customscopedcomponent. getvalue ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, docs. size ( ) )
[3]: org. junit. assert. assertnotnull ( group )
[4]: org. junit. assert. assertnull ( group )

************

************
tgt: org . junit . assert . assertequals ( java . lang . system . empty ( io . cereebro . core . defaultsystemservicetest . name ) , service . get ( ) )
[0]: org. junit. assert. assertequals ( null, group )
[1]: org. junit. assert. assertnotnull ( groups )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, list. get ( 0 ) )
[4]: org. junit. assert. assertequals ( new java. util. arraylist ( ), list. get ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( newarraylist ( allmatchesmethodinvokerfilter , embeddedmethodinvokerfilter ) , applicationproviders . getmethodinvokerfilters ( "/a" ) )
[0]: org. junit. assert. assertequals ( 1, list. get ( 1 ) )
[1]: org. junit. assert. assertequals ( new java. util. arraylist ( ), list. get ( 0 ) )
[2]: get ( 1 ) )
[3]: org. junit. assert. assertnotnull ( doc. asdocument ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), doc )

************

************
tgt: org . junit . assert . assertequals ( 1 , size . get ( ) )
[0]: org. junit. assert. assertnull ( doc. asdocument ( ) )
[1]: org. junit. assert. assertnotnull ( doc )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, m. numberofstudents ( ) )
[4]: org. junit. assert. assertnull ( loginasrepository. getaclfor ( null ) )

************

************
tgt: org . junit . assert . assertequals ( tempfilename , appender . getfilename ( ) )
[0]: org. junit. assert. assertnull ( loginasrepositoryadmin. getaclfor ( null ) )
[1]: org. junit. assert. assertnull ( loginasrepositoryimpl. getaclfor ( null ) )
[2]: org. junit. assert. assertnull ( user. getaclfor ( null ) )
[3]: org. junit. assert. assertnull ( loginasrepositorymethod_ getaclfor ( null ) )
[4]: org. junit. assert. assertequals ( 1, contacts. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( hookcalled )
[0]: org. junit. assert. assertequals ( resultproxyip, proxyip )
[1]: org. junit. assert. assertequals ( null, resultproxyip )
[2]: org. junit. assert. assertequals ( proxyip, resultproxyip )
[3]: org. junit. assert. assertequals ( resultproxyip, null )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( 1, violations. size ( ) )
[1]: org. junit. assert. assertequals ( 0, violations. size ( ) )
[2]: org. junit. assert. assertequals ( 2, violations. size ( ) )
[3]: org. junit. assert. assertequals ( 3, violations. size ( ) )
[4]: org. junit. assert. assertequals ( 4, violations. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , latch . getcount ( ) )
[0]: org. junit. assert. assertnotnull ( dashboardhistories )
[1]: org. junit. assert. assertequals ( 1, dashboardhistories. length )
[2]: org. junit. assert. assertequals ( 1, dashboardhistories )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( expectedpassword , actualpassword )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1l, 2l, 3l, 4l ), result )
[1]: org. junit. assert. asserttrue ( ( rh00008priority > rh00009priority ) )
[2]: org. junit. assert. assertnotnull ( rh00008priority )
[3]: org. junit. assert. asserttrue ( ( rh00009priority > rh00008priority ) )
[4]: org. junit. assert. asserttrue ( ( rh00009priority > rh00009priority ) )

************

************
tgt: org . junit . assert . assertequals ( org . apache . ibatis . submitted . parametrizedlist . user . class , map . get ( 1 ) . getclass ( ) )
[0]: org. junit. assert. assertnotnull ( rh00009priority )
[1]: org. junit. assert. assertequals ( options, builder. getfitnessejavaworkingdirectory ( ) )
[2]: org. junit. assert. assertequals ( null, builder. getfitnessejavaworkingdirectory ( ) )
[3]: org. junit. assert. assertequals ( config, builder. getfitnessejavaworkingdirectory ( ) )
[4]: org. junit. assert. assertequals ( 0, builder. getfitnessejavaworkingdirectory ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 2.0f , org . simmetrics . example . stringdistancebuilderexample . example03 ( ) , org . simmetrics . example . stringdistancebuilderexampletest . delta )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, repository. getprojects ( g ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, dao. getprojects ( g ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, repo. getprojects ( g ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, config. getprojects ( g ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( motivo , consultaretorno . getmotivo ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 10, testfile. length ( ) )
[2]: org. junit. assert. assertequals ( 1, testfile. length ( ) )
[3]: org. junit. assert. assertequals ( 1, decoder. length ( ) )
[4]: org. junit. assert. assertequals ( 10, decoder. length ( ) )

************

************
tgt: org . junit . assert . assertthat ( lastruletobebuilt . get ( ) , org . hamcrest . matchers . is ( rule ) )
[0]: org. junit. assert. assertequals ( 2, decoder. length ( ) )
[1]: org. junit. assert. asserttrue ( canaccess )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( ( ! ( branch_conditions . isempty ( ) ) ) )
[0]: org. junit. assert. assertnotnull ( result ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( string )
[3]: org. junit. assert. assertequals ( null, string )
[4]: org. junit. assert. assertequals ( string, target. name )

************

************
tgt: org . junit . assert . asserttrue ( client . login ( ) )
[0]: org. junit. assert. assertequals ( string, string )
[1]: org. junit. assert. assertequals ( string, target. string )
[2]: org. junit. assert. assertnotnull ( useragent )
[3]: org. junit. assert. assertequals ( useragent, useragent )
[4]: org. junit. assert. assertequals ( ""foo"", useragent )

************

************
tgt: org . junit . assert . assertequals ( pod . getstatus ( ) , "reasontoterminate" )
[0]: org. junit. assert. assertequals ( ""test"", useragent )
[1]: org. junit. assert. assertnull ( useragent )
[2]: org. junit. assert. assertequals ( null, _c. convert ( null ) )
[3]: org. junit. assert. assertequals ( null, _c. convert ( ""1"" ) )
[4]: org. junit. assert. assertequals ( 0, _c. convert ( null ). size ( ) )

************

************
tgt: org . junit . assert . assertnull ( actualmap )
[0]: org. junit. assert. assertequals ( 0, _c. convert ( null ). length )
[1]: org. junit. assert. assertequals ( 0, _c. convert ( null ). length ( ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), result )

************

************
tgt: org . junit . assert . asserttrue ( tracker . isempty ( ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( java. nio. file. files )
[3]: org. junit. assert. assertequals ( 1, java. nio. file. files. length )
[4]: org. junit. assert. assertnull ( java. nio. file. files )

************

************
tgt: org . junit . assert . assertnull ( compute . attachdisk ( com . google . cloud . compute . deprecated . computeimpltest . instance_id , com . google . cloud . compute . deprecated . computeimpltest . persistent_disk_configuration ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnotnull ( filterresult )
[3]: org. junit. assert. null, filterresult )
[4]: org. junit. assert.null ( filterresult )

************

************
tgt: org . junit . assert . assertequals ( protocoloevento , consultaretorno . getprotocoloevento ( ) )
[0]: null, filterresult )
[1]: null ) )
[2]: org. junit. assert. assertequals ( expectedresult, result )
[3]: org. junit. assert. assertequals ( result, expectedresult )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( expectedresult ), result )

************

************
tgt: org . junit . assert . assertfalse ( validator . validate ( entitynames . teacher_school_association , teacherschoolassociations ) . equals ( teacherschoolassociations ) )
[0]: org. junit. assert. assertequals ( actualresult, result )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( attributescaptor. getvalue ( ). getvalue ( 0 ) )
[3]: org. junit. assert. assertnotnull ( attributescaptor. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 0, attributescaptor. getvalue ( ). getvalue ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , jobexecutor . getjobsadded ( ) )
[0]: org. junit. assert. assertequals ( 1, attributescaptor. getvalue ( ). getvalue ( 0 ) )
[1]: org. junit. assert. assertequals ( 0, attributescaptor. getvalue ( ). size ( ) )
[2]: org. junit. assert. assertnull ( org. apache. logging. log4j. core. time. internal. format. fixeddateformat. createifsupported ( options ) )
[3]: org. junit. assert. assertnull ( org. apache. logging. log4j. core. time. internal. format. fixeddateformat. createsifsupported ( options ) )
[4]: org. junit. assert. assertequals ( null, org. apache. logging. log4j. core. time. internal. format. fixeddateformat. createifsupported ( options ) )

************

************
tgt: org . junit . assert . asserttrue ( e . getmessage ( ) . contains ( "foo" ) )
[0]: org. junit. assert. assertnull ( properties. createifsupported ( options ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( null, actual )
[3]: org. junit. assert. assertequals ( expected, actual )
[4]: org. junit. assert. assertnotnull ( actual )

************

************
tgt: org . junit . assert . assertfalse ( instance . exists ( ) )
[0]: , actual )
[1]: ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), converter. convert ( 1 ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), converter. convert ( java. lang. long. valueof ( 1 ) ) )
[4]: org. junit. assert. assertnotnull ( converter. convert ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( m . matches ( ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), converter. convert ( 1l ) )
[1]: org. junit. assert. assertequals ( 1, converter. convert ( 1 ). size ( ) )
[2]: org. junit. assert. assertequals ( org. springframework. data. redis. core. collections. singletonlist ( null ), results )
[3]: org. junit. assert. assertequals ( 1, results. size ( ) )
[4]: org. junit. assert. assertequals ( 0, results. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , ids . size ( ) )
[0]: org. junit. assert. assertequals ( 2, results. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), head ( collection ) )
[3]: org. junit. assert. assertequals ( null, head ( collection ) )
[4]: org. junit. assert. assertequals ( null, head ( collection ). get ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( source )
[0]: org. junit. assert. assertnull ( head ( collection ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), head ( null ) )
[2]: org. junit. assert. assertthat ( constant. tostring ( ), is ( java. lang. string. class ) )
[3]: org. junit. assert. assertthat ( constant. tostring ( ), is ( empty ( ) ) )
[4]: org. junit. assert. assertthat ( constant. tostring ( ), is ( class. tostring ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , tree . calculatedepth ( ) )
[0]: org. junit. assert. assertthat ( constant. tostring ( ), is ( class ) )
[1]: org. junit. assert. assertthat ( constant, is ( empty ( ) ) )
[2]: org. junit. assert. assertequals ( 1, count )
[3]: org. junit. assert. assertequals ( 0, count )
[4]: org. junit. assert. assertequals ( 5, count )

************

************
tgt: org . junit . assert . asserttrue ( e . getmessage ( ) . contains ( "xyzzy" ) )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertequals ( 2, count )
[2]: org. junit. assert. assertequals ( content, collection. getresult ( ) )
[3]: org. junit. assert. assertequals ( 1, count. getresult ( ) )
[4]: org. junit. assert. assertequals ( content, processing. getresult ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( - 1 ) == ( firstdate . compareto ( seconddate ) ) ) )
[0]: org. junit. assert. assertequals ( 1, events. getresult ( ). length )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( normalized. tostring ( ) )
[3]: org. junit. assert. assertthat ( normalized. tostring ( ), org. hamcrest. corematchers. equalto ( """" ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), fb. values )

************

************
tgt: org . junit . assert . assertequals ( 9 , properties . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), fb. values )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), fb._37 )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), fb. events )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), fb )
[4]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( route, java. lang. object. class ), org. hamcrest. matchers. equalto ( route ) )

************

************
tgt: org . junit . assert . assertnotnull ( contextcm . getinstance ( org . xwiki . component . internal . contextcomponentmanagertest . role . class ) )
[0]: org. junit. assert. assertequals ( org. batfish. common. util. batfishobjectmapper. clone ( route, org. batfish. datamodel. kernelroute. class ), route )
[1]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( route, "<. datamodel. kernelroute. class ), org. hamcrest. matchers. equalto ( route ) )
[2]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( route, com. google. common. collect. object. class ), org. hamcrest. matchers. equalto ( route ) )
[3]: org. junit. assert. assertthat ( org. batfish. common. util. batfishobjectmapper. clone ( route, org. batfish. datamodel. kernelroute. class ), org. hamcrest. matchers. empty ( ) )
[4]: org. junit. assert. assertequals ( allias, mdo. gettablemapping ( ) )

************

************
tgt: org . junit . assert . assertthat ( resultmap . isempty ( ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( allias, mdo. gettablemapping ( ). get ( ) )
[1]: org. junit. assert. assertequals ( allias, mdo. gettablemapping ( ). tostring ( ) )
[2]: org. junit. assert. assertequals ( allias, mdo. gettablemapping ( ). isempty ( ) )
[3]: org. junit. assert. assertequals ( allias, mdo. gettablemapping ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, e. getstacktrace ( ). length )

************

************
tgt: org . junit . assert . assertequals ( "" , result )
[0]: org. junit. assert. assertequals ( null, e. getstacktrace ( ) )
[1]: org. junit. assert. assertequals ( null, e. getstacktrace ( ). length )
[2]: org. junit. assert. assertequals ( e. getstacktrace ( ). length, 1 )
[3]: org. junit. assert. assertequals ( 1, e. getstacktrace ( ). length )
[4]: org. junit. assert. assertnull ( retrievedtoken )

************

************
tgt: org . junit . assert . assertequals ( 200 , response . getstatus ( ) )
[0]: org. junit. assert. assertnotnull ( net. pms. util. fileutil. getfilecharsetname ( file ) )
[1]: org. junit. assert. assertnull ( net. pms. util. fileutil. getfilecharsetname ( file ) )
[2]: org. junit. assert. assertnotnull ( net. pms. util. fileutil. getfilecharsetname ( file ) )
[3]: org. junit. assert. assertnotnull ( net. pms. util. fileutil. getfilecharsetname ( file ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( body , response . getbody ( ) )
[0]: org. junit. assert. assertequals ( null, nonlocalconfigurationclassobject. getvalue ( ) )
[1]: org. junit. assert. assertnotnull ( nonlocalconfigurationclassobject. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 1, nonlocalconfigurationclassobject. getvalue ( ). length )
[3]: org. junit. assert. assertequals ( 1, nonlocalconfigurationclassobject. getvalue ( ) )
[4]: type )

************

************
tgt: org . junit . assert . assertequals ( expected , com . sumzerotrading . data . futuresticker . getinstance ( "6c" ) )
[0]: org. junit. assert. assertnotnull ( a. get ( ) )
[1]: org. junit. assert. assertnotnull ( counter. get ( ) )
[2]: org. junit. assert. assertnotnull ( count. get ( ) )
[3]: org. junit. assert. assertnotnull ( as. get ( ) )
[4]: org. junit. assert. assertnotnull ( a )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( 1, berichtentiteits. size ( ) )
[1]: org. junit. assert. assertequals ( svc, actual )
[2]: org. junit. assert. assertnotnull ( actual )
[3]: org. junit. assert. assertnull ( actual )
[4]: org. junit. assert. assertsame ( svc, actual )

************

************
tgt: org . junit . assert . assertfalse ( persoonviewopactiespredikaat . evaluate ( formeelverantwoordbaar ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, actual )
[2]: org. junit. assert. assertequals ( 0, actual )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), actual )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), actual )

************

************
tgt: org . junit . assert . assertequals ( existingregion , newregion )
[0]: org. junit. assert. assertequals ( java. lang. system. currenttimemillis ( ), actual )
[1]: org. junit. assert. asserttrue ( appender. isstarted ( ) )
[2]: org. junit. assert. assertequals ( target. getsessionstate ( ), sessionstate. inactive )
[3]: org. junit. assert. assertequals ( ( ( last + i ) + last ), curr )
[4]: org. junit. assert. assertequals ( new java. lang. string ( last ), curr )

************

************
tgt: org . junit . assert . assertequals ( 1 , res . size ( ) )
[0]: org. junit. assert. assertequals ( ( ( last + i ) + 1 ), curr )
[1]: org. junit. assert. assertequals ( last, curr )
[2]: org. junit. assert. assertequals ( curr, last )
[3]: org. junit. assert. assertequals ( 1, java. nio. file. files. length )
[4]: org. junit. assert. assertequals ( 0, java. nio. file. files. length )

************

************
tgt: org . junit . assert . assertequals ( net . md_5 . bungee . api . chat . textcomponent . tolegacytext ( components ) , net . md_5 . bungee . api . chat . textcomponent . tolegacytext ( list . toarray ( new net . md_5 . bungee . api . chat . basecomponent [ list . size ( ) ] ) ) )
[0]: org. junit. assert. assertequals ( 1, source. count ( ) )
[1]: org. junit. assert. assertequals ( 1, java. nio. file. files. count )
[2]: org. junit. assert. assertequals ( 1, source. length )
[3]: org. junit. assert. assertthat ( result2, org. hamcrest. corematchers. is ( result2 ) )
[4]: org. junit. assert. assertthat ( result2, org. hamcrest. corematchers. is ( result1 ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertthat ( result2, org. hamcrest. matchers. is ( result ) )
[1]: org. junit. assert. assertthat ( result2, org. hamcrest. matchers. is ( result2 ) )
[2]: org. junit. assert. assertthat ( result2, org. hamcrest. corematchers. is ( result2. type ) )
[3]: org. junit. assert. assertequals ( 1, this. context. isempty ( ) )
[4]: org. junit. assert. assertequals ( 0, this. context. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( inputvalues , actualvalues )
[0]: org. junit. assert. assertequals ( 1, this. list. isempty ( ) )
[1]: org. junit. assert. asserttrue ( this. context. isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, this. list. isempty ( ) )
[3]: org. junit. assert. assertequals ( true, qe. execask ( ) )
[4]: org. junit. assert. assertequals ( 1, rm. getresultslist ( ). size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new long [ ] { 4 , 15 , 12 , 8 , 18 } , array )
[0]: org. junit. assert. assertequals ( 0, rm. getresultslist ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), rm. getresultslist ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( username ), rm. getresultslist ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), rm. getresultslist ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, content. length ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , readytimers . size ( ) )
[0]: org. junit. assert. assertequals ( 0, content. length ( ) )
[1]: org. junit. assert. assertequals ( 3, content. length ( ) )
[2]: org. junit. assert. assertequals ( 2, content. length ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( service3dataresolved )

************

************
tgt: org . junit . assert . assertequals ( 2 , instance . list . size ( ) )
[0]: org. junit. assert. assertequals ( service3datadesired, service3dataresolved )
[1]: org. junit. assert. assertnotnull ( service3datadesired )
[2]: org. junit. assert. assertequals ( service3dataresolved, service3datadesired )
[3]: org. junit. assert. assertequals ( service3dataresolved, service3datancelired )
[4]: org. junit. assert. assertnull ( squeue. sdequeue ( 0 ) )

************

************
tgt: org . junit . assert . assertthat ( reporter , org . apache . jackrabbit . oak . plugins . migration . report . assertingperiodicreporter . hasreportedproperty ( 10 , org . hamcrest . corematchers . any ( java . lang . string . class ) ) )
[0]: org. junit. assert. assertnull ( squeue. sdequeue ( 1 ) )
[1]: org. junit. assert. assertnotnull ( squeue. sdequeue ( integer. max_value ) )
[2]: org. junit. assert. assertnull ( squeue )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, impl. getretryinterval ( response, null ) )

************

************
tgt: org . junit . assert . assertequals ( "" , this . getstringencoder ( ) . encode ( null ) )
[0]: org. junit. assert. assertequals ( 1, impl. getretryinterval ( response, null ) )
[1]: org. junit. assert. assertequals ( impl. getretryinterval ( response, null ), 1 )
[2]: org. junit. assert. assertequals ( impl. getretryinterval ( response, null ), 0 )
[3]: org. junit. assert. assertequals ( implementation. getretryinterval ( response, null ), 1 )
[4]: org. junit. assert. assertequals ( null, simplified )

************

************
tgt: org . junit . assert . asserttrue ( undertest . matches ( parser ) )
[0]: org. junit. assert. assertequals ( 0, simplified. length ( ) )
[1]: org. junit. assert. assertnull ( simplified )
[2]: org. junit. assert. assertequals ( 0, simplified )
[3]: ) )
[4]: org. junit. assert. assertequals ( null, after )

************

************
tgt: org . junit . assert . assertequals ( 0 , calls . size ( ) )
[0]: org. junit. assert. assertnotnull ( after )
[1]: org. junit. assert. assertequals ( expected, after )
[2]: org. junit. assert. assertequals ( string, after )
[3]: org. junit. assert. assertequals ( null, before )
[4]: org. junit. assert. assertnotnull ( home. getentity ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( ( ( ( new java . lang . string ( file . getbytes ( ) ) ) + ':' ) + message ) + ':' ) + folder ) , response )
[0]: org. junit. assert. assertequals ( entity, home. getentity ( ) )
[1]: org. junit. assert. assertnotnull ( entity. getentity ( ) )
[2]: org. junit. assert. assertnull ( home. getentity ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( loramessagetype. unknown, type )

************

************
tgt: org . junit . assert . assertequals ( actualmqttcallback , testmqttcallback )
[0]: org. junit. assert. assertequals ( loramessagetype. none, type )
[1]: org. junit. assert. assertequals ( loramessagetype. not, type )
[2]: org. junit. assert. assertequals ( loramessagetype. one, type )
[3]: org. junit. assert. assertnotnull ( type )
[4]: org. junit. assert. assertnotnull ( linkinformation. linkdestinationipaddress ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( coeffs , p . tointegerpolynomial ( ) . coeffs )
[0]: org. junit. assert. assertequals ( org. onlab. packet. ip4address. valueof ( org. onlab. packet. ip4address. values ( ) ), linkinformation. linkdestinationipaddress ( ) )
[1]: org. junit. assert. assertequals ( org. onlab. packet. ip4address. valueof ( org. onlab. packet. ip4address. values ( ). length ), linkinformation. linkdestinationipaddress ( ) )
[2]: org. junit. assert. assertequals ( 1, linkinformation. linkdestinationipaddress ( ). size ( ) )
[3]: ) )
[4]: org. junit. assert. assertfalse ( com. metamx. collections. intsettestutility. equalsets ( defaultbitset, bitset ) )

************

************
tgt: org . junit . assert . assertnotnull ( subsub1 . get ( 0 ) )
[0]: org. junit. assert. assertequals ( 1, patientcaptor. getvalue ( ). getidentifier ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( patientcaptor. getvalue ( ). getidentifier ( ). get ( 0 ) )
[2]: org. junit. assert. assertnotnull ( patientcaptor. getvalue ( ) )
[3]: org. junit. assert. assertnotnull ( patientcaptor. getvalue ( ). getidentifier ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( ln. tostring ( ), test. tostring ( ) )
[1]: org. junit. assert. assertequals ( ln. tostring ( ), test. get ( 0 ). tostring ( ) )
[2]: org. junit. assert. assertequals ( ln. tostring ( ), java. util. arrays. aslist ( ln ) )
[3]: org. junit. assert. assertequals ( ln. tostring ( ), test. size ( ) )
[4]: org. junit. assert. assertequals ( ln. tostring ( ), test. get ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( resultmessage ( result , org . openstack . atlas . api . mgmt . validation . validators . post ) , result . passedvalidation ( ) )
[0]: org. junit. assert. assertfalse ( testwhethervectorscontainsameelements ( b, a ) )
[1]: org. junit. assert. asserttrue ( testwhethervectorscontainsameelements ( b, a ) )
[2]: org. junit. assert. assertequals ( true, testwhethervectorscontainsameelements ( b, a ) )
[3]: org. junit. assert. assertequals ( false, testwhethervectorscontainsameelements ( b, a ) )
[4]: org. junit. assert. assertfalse ( testwhethervectorscontainsameelements ( a, b ) )

************

************
tgt: org . junit . assert . assertequals ( "idelt1" , response . getprocessgroupflow ( ) . getid ( ) )
[0]: org. junit. assert. assertnotnull ( theresult )
[1]: org. junit. assert. assertnotnull ( f )
[2]: org. junit. assert. assertequals ( test, f )
[3]: org. junit. assert. assertequals ( test. s, f )
[4]: org. junit. assert. assertequals ( f, test )

************

************
tgt: org . junit . assert . assertequals ( expectedname , actualname )
[0]: org. junit. assert. assertequals ( f, test. s )
[1]: org. junit. assert. assertthat ( merge, org. hamcrest. matchers. contains ( broadcast ) )
[2]: org. junit. assert. assertthat ( merge, org. hamcrest. core. is. is ( true ) )
[3]: org. junit. assert. asserttrue ( merge. contains ( broadcast ) )
[4]: org. junit. assert. assertthat ( merge, contains ( broadcast ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertarrayequals ( child2. gettablist ( ), controls )
[2]: org. junit. assert. assertarrayequals ( child1. gettablist ( ), controls )
[3]: org. junit. assert. assertequals ( 0, controls. length )
[4]: org. junit. assert. assertequals ( 1, controls. length )

************

************
tgt: org . junit . assert . assertequals ( 1 , detachevents . get ( ) )
[0]: org. junit. assert. assertnotnull ( controls )
[1]: org. junit. assert. assertnotnull ( record )
[2]: org. junit. assert. assertnotnull ( record }
[3]: org. junit. assert. assertnotnull ( records )
[4]: org. junit. assert. assertnotnull ( record

************

************
tgt: org . junit . assert . assertnotnull ( features )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( expected, actual. gettype ( ) )
[3]: org. junit. assert. assertsame ( expected, actual )
[4]: org. junit. assert. assertequals ( expected. gettype ( ), actual )

************

************
tgt: org . junit . assert . assertnotnull ( pi )
[0]: org. junit. assert. assertnotnull ( actual )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), com. feilong. core. util. sortutil. sortlist ( java. util. collections. < java. lang. string > emptylist ( ), java. util. collections. < java. lang. string > emptylist ( ) ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), com. feilong. core. util. sortutil. sortlist ( java. util. collections. < java. util. comparator > emptylist ( ), java. util. collections. < java. lang. string > emptylist ( ) ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), com. feilong. core. util. sortutil. sortlist ( java. util. collections. < java. lang. object > emptylist ( ), java. util. collections. < java. lang. object > emptylist ( ) ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), com. feilong. core. util. sortutil. sortlist ( java. util. collections. emptylist ( ), java. util. collections. < java. lang. string > emptylist ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( ( status == true ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), com. feilong. core. util. sortutil. sortlist ( java. util. collections. < java. lang. string > emptylist ( ), java. util. comparator. empty ( ) ) )
[1]: org. junit. assert. assertequals ( 1, validationlist. size ( ) )
[2]: org. junit. assert. assertequals ( 0, validationlist. size ( ) )
[3]: org. junit. assert. assertnotnull ( validationlist )
[4]: org. junit. assert. assertequals ( 1, validationlist )

************

************
tgt: org . junit . assert . assertequals ( 0 , map . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 3, visitattribute. getid ( ) )
[2]: org. junit. assert. assertequals ( 1, visitattribute. getid ( ) )
[3]: org. junit. assert. assertequals ( 0, visitattribute. getid ( ) )
[4]: org. junit. assert. assertequals ( 1, visitattribute. getid ( ). length )

************

************
tgt: org . junit . assert . assertequals ( true , found )
[0]: org. junit. assert. assertequals ( 3, visitattribute. getid ( ). length )
[1]: org. junit. assert. assertequals ( 1, createschema ( map, 0 ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), createschema ( map, 0 ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), createschema ( map, 0 ) )
[4]: org. junit. assert. assertequals ( 0, createschema ( map, 0 ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( root . getproperties ( null ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), createschema ( map, ( - 1 ) ) )
[1]: org. junit. assert. assertequals ( expectedmetastoreuris, hivesiteproperties )
[2]: org. junit. assert. assertequals ( expectedmetastoreuris, hivesiteproperties. get ( ) )
[3]: org. junit. assert. assertequals ( expectedmetastoreuris, hivesiteproperties. get ( s ) )
[4]: org. junit. assert. assertequals ( expectedmetastoreuris, hivesiteproperties. get ( path ) )

************

************
tgt: org . junit . assert . assertthat ( agreementrolerepository . findbyparty ( party ) . size ( ) , org . hamcrest . corematchers . is ( 3 ) )
[0]: org. junit. assert. assertequals ( expectedxmluris, hivesiteproperties )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( result, actual )
[3]: org. junit. assert. assertequals ( expected, actual )
[4]: org. junit. assert. assertequals ( actual, expected )

************

************
tgt: org . junit . assert . assertequals ( 1 , com . streamsets . pipeline . stage . origin . http . httpclientsourceit . tokengetcount )
[0]: org. junit. assert. assertequals ( expected, actual ) ;
[1]: org. junit. assert. asserttrue ( this. filesystem. exists ( ) )
[2]: org. junit. assert. asserttrue ( this. filesystem. exists ( ) )
[3]: org. junit. assert. asserttrue ( this. filesystem. exist ( ) )
[4]: org. junit. assert. assertfalse ( this. filesystem. exists ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , ksession . fireallrules ( ) )
[0]: org. junit. assert. asserttrue ( this. filesystem. exists ( ) )
[1]: org. junit. assert. assertequals ( 0, mr. read ( ) )
[2]: org. junit. assert. assertequals ( 1, mr. read ( ) )
[3]: org. junit. assert. assertequals ( 0, mr. reads ( ) )
[4]: org. junit. assert. assertequals ( 5, mr. read ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , folderopenmode )
[0]: org. junit. assert. assertequals ( 0, mr. count )
[1]: org. junit. assert. assertnotnull ( stage )
[2]: org. junit. assert. assertequals ( 1, stage. count )
[3]: org. junit. assert. assertequals ( 0, stage. count )
[4]: org. junit. assert. assertequals ( 1, state. count )

************

************
tgt: org . junit . assert . assertnull ( context )
[0]: org. junit. assert. assertequals ( 1, stages. count )
[1]: org. junit. assert. assertequals ( 0, org. imgscalr. asyncscalr. asyncscalr. asyncscalr. asyncscalr. class )
[2]: org. junit. assert. assertnotnull ( org. imgscalr. asyncscalr. asyncscalr. asyncscalr. asyncscalr. asyncscalr. class )
[3]: org. junit. assert. assertequals ( 0, org. imgscalr. asyncscalr. asyncscalr. asyncscalr. class )
[4]: org. junit. assert. assertnotnull ( org. imgscalr. asyncscalr. asyncscalr. asyncscalr )

************

************
tgt: org . junit . assert . assertequals ( 5 , sih . invoke ( null , m , new java . lang . object [ ] { } ) )
[0]: org. junit. assert. assertnotnull ( s )
[1]: org. junit. assert. assertequals ( code, newcode )
[2]: org. junit. assert. assertequals ( newcode, code )
[3]: org. junit. assert. assertnotnull ( newcode )
[4]: org. junit. assert. assertequals ( core, newcode )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: )
[1]: org. junit. assert. assertnotnull ( reactorprojects )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnotnull ( response )
[4]: org. junit. assert. assertnotnull ( error )

************

************
tgt: org . junit . assert . assertnotnull ( c )
[0]: org. junit. assert. assertnotnull ( res )
[1]: org. junit. assert. assertnotnull ( status )
[2]: org. junit. assert. assertnotnull ( includefile )
[3]: org. junit. assert. assertequals ( 1, localfilesys. length )
[4]: org. junit. assert. assertnotnull ( includesfile )

************

************
tgt: org . junit . assert . assertequals ( authorization . bad_request , result )
[0]: org. junit. assert. assertnotnull ( includedfile )
[1]: )
[2]: org. junit. assert. assertequals ( 1, project. size ( ) )
[3]: org. junit. assert. assertequals ( 0, project. size ( ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( "testbulkheadretryoverload" + i ) , executions )
[0]: org. junit. assert. assertequals ( 1, project. testfalse ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( false, touchview. hasenoughnodes ( ) )
[3]: org. junit. assert. assertequals ( false, polygon. hasenoughnodes ( ) )
[4]: org. junit. assert. assertfalse ( polygon. hasenoughnodes ( ) )

************

************
tgt: org . junit . assert . assertequals ( stringresponsetype . getexpectedresponsetype ( ) , deserialized . getexpectedresponsetype ( ) )
[0]: org. junit. assert. assertequals ( true, touchview. hasenoughnodes ( ) )
[1]: org. junit. assert. assertfalse ( touchview. hasenoughnodes ( ) )
[2]: org. junit. assert. assertnotnull ( params. getstring ( new ec. util. parameter ( ), params ) )
[3]: org. junit. assert. assertnotnull ( getbranch. getstring ( params, params ) )
[4]: org. junit. assert. assertnotnull ( context. getstring ( params, null ) )

************

************
tgt: org . junit . assert . asserttrue ( com . github . zk1931 . jzab . nettytransporttest . comparefiles ( file , receivedfiles . get ( 0 ) ) )
[0]: org. junit. assert. assertequals ( null, params. getstring ( null, null ) )
[1]: org. junit. assert. assertnotnull ( params. getstring ( new ec. util. parameter ( ), null ) )
[2]: org. junit. assert. assertequals ( true, eu. printingin3d. javascad. utils. doubleutils. closeequals ( null, null ) )
[3]: org. junit. assert. asserttrue ( eu. printingin3d. javascad. utils. doubleutils. closeequals ( null, null ) )
[4]: org. junit. assert. assertequals ( true, eu. printingin3d. javascad. utils. doubleutils. closeequals ( null, values ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , vh . geteventssize ( ) )
[0]: org. junit. assert. assertequals ( true, eu. printingin3d. javascad. utils. doubleutils. closeequals ( null, value ) )
[1]: org. junit. assert. assertequals ( true, condition. closeequals ( null, null ) )
[2]: org. junit. assert. assertequals ( before, after )
[3]: org. junit. assert. assertequals ( ( before + 1 ), after )
[4]: org. junit. assert. assertequals ( ( before - 1l ), after )

************

************
tgt: org . junit . assert . assertthat ( this . request . getsortcolumn ( ) , org . hamcrest . corematchers . is ( sortcolumn ) )
[0]: org. junit. assert. assertequals ( ( before - 1 ), after )
[1]: org. junit. assert. assertequals ( ( before + 1l ), after )
[2]: org. junit. assert. assertnotnull ( getgroupings ( ) )
[3]: org. junit. assert. assertequals ( 0, context. getgroupings ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, context. getgroupings ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( elementsinstring . length ) == 8 ) )
[0]: org. junit. assert. assertequals ( 1, fixture. getgroupings ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), util. getgroupings ( ) )
[2]: org. junit. assert. assertequals ( 1, obj. dosomething ( value. getid ( ) ) )
[3]: org. junit. assert. assertequals ( 1, obj. dosomething ( value. getclass ( ) ) )
[4]: org. junit. assert. assertequals ( 1, obj. dosomething ( value ) )

************

************
tgt: org . junit . assert . assertthat ( networkloggingdecorator . getnoofparties ( ) , org . hamcrest . core . is . is ( 22 ) )
[0]: org. junit. assert. assertequals ( 1, obj. dosomething ( value. tostring ( ) ) )
[1]: org. junit. assert. assertequals ( 1, obj. dosomething ( value. length ) )
[2]: org. junit. assert. assertequals ( 1, hwb. getnumberofsheets ( ) )
[3]: org. junit. assert. assertequals ( 0, hwb. getnumberofsheets ( ) )
[4]: org. junit. assert. assertequals ( expected, condition )

************

************
tgt: org . junit . assert . assertequals ( 0 , envelopes . size ( ) )
[0]: org. junit. assert. assertequals ( expected, cond )
[1]: org. junit. assert. assertequals ( expected, conditional )
[2]: org. junit. assert. assertequals ( expected, conditions )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, i. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( selectedcells . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, i. size ( ) )
[1]: org. junit. assert. assertequals ( 6, i. size ( ) )
[2]: org. junit. assert. assertnotnull ( statement. getquery ( ) )
[3]: org. junit. assert. assertequals ( statement, statement. getquery ( ) )
[4]: org. junit. assert. assertequals ( statement. getquery ( ), statement )

************

************
tgt: org . junit . assert . asserttrue ( ( ss != null ) )
[0]: org. junit. assert. assertequals ( query, statement. getquery ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( null, output )
[3]: org. junit. assert. assertnotnull ( output )
[4]: org. junit. assert. assertequals ( string_1, output )

************

************
tgt: org . junit . assert . assertequals ( 0 , ndbtb . getfailed ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 1, output. length )
[1]: org. junit. assert. assertequals ( 1, output. length ( )
[2]: org. junit. assert. assertequals ( 0, statementlog. gettimeout ( ) )
[3]: org. junit. assert. assertequals ( 1, statementlog. gettimeout ( ) )
[4]: org. junit. assert. assertnotnull ( found )

************

************
tgt: org . junit . assert . assertarrayequals ( old , arr )
[0]: org. junit. assert. assertequals ( grammar, found )
[1]: org. junit. assert. assertequals ( expected, found )
[2]: org. junit. assert. assertequals ( null, found )
[3]: org. junit. assert. assertequals ( result, found )
[4]: org. junit. assert. assertequals ( clobstring, s )

************

************
tgt: org . junit . assert . assertnull ( buildrule . getproject ( ) . getproperty ( "foo" ) )
[0]: org. junit. assert. assertequals ( blobstring, s )
[1]: org. junit. assert. assertequals ( s, clobstring )
[2]: org. junit. assert. assertequals ( clob_, s )
[3]: org. junit. assert. assertnotnull ( s )
[4]: org. junit. assert. assertequals ( expectedcolumnnames, inputs )

************

************
tgt: org . junit . assert . assertfalse ( createiterator ( ) . hasnext ( ) )
[0]: org. junit. assert. assertequals ( expectedcolumnnames, outputs )
[1]: org. junit. assert. assertequals ( expectedcolumnnames, input )
[2]: org. junit. assert. assertequals ( expectedcolumnnames, inputs )
[3]: org. junit. assert. assertequals ( expectedcolumnnames, inputs ) and result )
[4]: org. junit. assert. assertnotnull ( re )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( org. geotools. jdbc. jdbcdatastore. empty_envelope, re )
[1]: org. junit. assert. assertequals ( jdbcdatastore. empty_envelope, re )
[2]: org. junit. assert. assertequals ( 1, indicaties. size ( ) )
[3]: org. junit. assert. assertequals ( 0, indicaties. size ( ) )
[4]: org. junit. assert. assertequals ( 2, indicaties. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "an<sp>album" , id3v2tag . getalbum ( ) )
[0]: org. junit. assert. assertequals ( 3, indicaties. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( ( count + 1 ), i )
[3]: org. junit. assert. assertequals ( count, i )
[4]: org. junit. assert. assertequals ( 1, i )

************

************
tgt: org . junit . assert . assertthat ( result ( ) , org . hamcrest . matchers . is ( org . hamcrest . matchers . equalto ( expectedresult ) ) )
[0]: org. junit. assert. assertequals ( ( count + i ), i )
[1]: org. junit. assert. assertequals ( i, count )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( 0, result. size ( ) )
[4]: org. junit. assert. assertequals ( addedheaders, origrequest )

************

************
tgt: org . junit . assert . assertequals ( 0 , patientcount )
[0]: org. junit. assert. assertequals ( 1, result. size ( )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, actual. getfilter ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), actual. getfilter ( ) )
[4]: org. junit. assert. assertequals ( null, actual. getfilter ( ) )

************

************
tgt: org . junit . assert . assertequals ( alignment . right , gridcolumn . getalign ( ) )
[0]: org. junit. assert. assertnotnull ( actual. getfilter ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( integer2, integer3 )
[3]: org. junit. assert. assertequals ( integer1, integer2 )
[4]: org. junit. assert. assertequals ( integer2, ( integer3 - integer1 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( integer1, ( integer2 - integer3 ) )
[1]: org. junit. assert. assertequals ( integer2, ( integer3 - integer3 ) )
[2]: org. junit. assert. asserttrue ( hasfieldviolation ( null ) )
[3]: org. junit. assert. asserttrue ( this. hasfieldviolation ( null ) )
[4]: org. junit. assert. assertfalse ( hasfieldviolation ( null ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new int [ ] { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 } , result )
[0]: org. junit. assert. asserttrue ( s. hasfieldviolation ( null ) )
[1]: org. junit. assert. asserttrue ( manager. hasfieldviolation ( null ) )
[2]: org. junit. assert. asserttrue ( ( ( newlogentry. gettext ( ) ) == null ) )
[3]: org. junit. assert. asserttrue ( ( ( newlogentry. gettext ( ) ) == null ) )
[4]: org. junit. assert. asserttrue ( (! ( newlogentry. gettext ( ) ) ) )

************

************
tgt: org . junit . assert . assertsame ( 0l , cn . getcount ( ) )
[0]: org. junit. assert. asserttrue ( ( ( newlogentry. gettext ( ) ) == null ) ) ;
[1]: ) )
[2]: org. junit. assert. assertarrayequals ( cols, sqlmanager. filterspecifiedcolumnnames ( allcolumnsfromdbtable ) )
[3]: org. junit. assert. assertarrayequals ( columns, sqlmanager. filterspecifiedcolumnnames ( allcolumnsfromdbtable ) )
[4]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { }, sqlmanager. filterspecifiedcolumnnames ( allcolumnsfromdbtable ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . integer ( 1 ) , currentquarterwithguava . getquarter ( ) )
[0]: org. junit. assert. assertarrayequals ( col, sqlmanager. filterspecifiedcolumnnames ( allcolumnsfromdbtable ) )
[1]: org. junit. assert. assertarrayequals ( column, sqlmanager. filterspecifiedcolumnnames ( allcolumnsfromdbtable ) )
[2]: org. junit. assert. assertequals ( datatypetestcase. test_text, ad. gettext ( ) )
[3]: org. junit. assert. assertnotnull ( ad. gettext ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. isempty ( array ), 0 )

************

************
tgt: org . junit . assert . assertequals ( storageunitentity , result )
[0]: org. junit. assert. assertequals ( 1, com. liferay. portal. kernel. util. arrayutil. isempty ( array ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. isempty ( array ), false )
[2]: org. junit. assert. assertequals ( java. util. arrays. isempty ( array ), true )
[3]: org. junit. assert. assertequals ( com. liferay. portal. kernel. util. arrayutil. isempty ( array ), false )
[4]: org. junit. assert. assertarrayequals ( bindingexprgroup, bindingnamerow )

************

************
tgt: org . junit . assert . assertfalse ( rs . next ( ) )
[0]: org. junit. assert. assertnotnull ( bindingexprgroup [ 0 ] )
[1]: org. junit. assert. assertarrayequals ( bindingexprgroup, bindingnamegroup )
[2]: org. junit. assert. assertnotnull ( bindingexprgroup )
[3]: org. junit. assert. assertnotnull ( bindingexprgroup [ 1 ] )
[4]: org. junit. assert. assertequals ( 0, hl. gethref ( ). length )

************

************
tgt: org . junit . assert . assertequals ( original , check )
[0]: org. junit. assert. assertequals ( null, hl. gethref ( ) )
[1]: org. junit. assert. assertequals ( 1, hl. gethref ( ). length )
[2]: type ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, decodedvbi )

************

************
tgt: org . junit . assert . assertequals ( null , actual )
[0]: org. junit. assert. assertequals ( 1, queryevents. size ( ) )
[1]: org. junit. assert. assertequals ( 0, queryevents. size ( ) )
[2]: org. junit. assert. assertequals ( 3, queryevents. size ( ) )
[3]: org. junit. assert. assertequals ( 2, queryevents. size ( ) )
[4]: org. junit. assert. assertthat ( org. openscience. cdk. renderer. generators. standard. standardatomgenerator. chargeadjuncttext ( ( - 2 ), 0 ), org. hamcrest. corematchers. is ( 2 ) )

************

************
tgt: org . junit . assert . assertfalse ( englishtagfound )
[0]: org. junit. assert. assertthat ( org. openscience. cdk. renderer. generators. standard. standardatomgenerator. chargeadjuncttext ( ( - 2 ), 0 ), org. hamcrest. corematchers. is ( ""2"" ) )
[1]: org. junit. assert. assertthat ( org. openscience. cdk. renderer. generators. standard. standardatomgenerator. chargeadjuncttext ( ( - 2 ), 0 ), org. hamcrest. corematchers. is ( ""2"" ) )
[2]: org. junit. assert. assertthat ( org. openscience. cdk. renderer. generators. standard. standardatomgenerator. chargeadjuncttext ( ( - 2 ), ( - 2 ) ), org. hamcrest. corematchers. is ( 2 ) )
[3]: org. junit. assert. assertthat ( org. openscience. cdk. renderer. generators. standard. standardatomgenerator. chargeadjuncttext ( ( - 2 ), 0 ), org. hamcrest. corematchers. is ( 0 ) )
[4]: org. junit. assert. assertfalse ( mockdistributedsystem. isdurable ( gemfireproperties ) )

************

************
tgt: org . junit . assert . asserttrue ( tokens . equals ( expected ) )
[0]: org. junit. assert. assertfalse ( mockdistributedsystem. isdurable ( mockdistributedsystem ) )
[1]: org. junit. assert. assertnull ( mockdistributedsystem. isdurable ( gemfireproperties ) )
[2]: org. junit. assert. assertnull ( mockdistributedsystem. isdurable ( mockdistributedsystem ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( ( elapsedmillis == 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( writer . close ( 0 ) )
[0]: org. junit. assert. asserttrue ( ( elapsedmillis == 0 ) )
[1]: org. junit. assert. assertequals ( 1, elapsedmillis )
[2]: org. junit. assert. assertnotnull ( elapsedmillis )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, groupstobeproxied. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( 3, groupstobeproxied. size ( ) )
[1]: org. junit. assert. assertequals ( 0, groupstobeproxied. size ( ) )
[2]: org. junit. assert. assertequals ( 2, groupstobeproxied. size ( ) )
[3]: org. junit. assert. assertequals ( 4, groupstobeproxied. size ( ) )
[4]: org. junit. assert. assertnotnull ( l )

************

************
tgt: org . junit . assert . assertequals ( 1 , instance . getimages ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), l )
[1]: org. junit. assert. assertequals ( new java. lang. long ( 1l ), l )
[2]: org. junit. assert. assertequals ( new java. lang. long ( 1 ), l )
[3]: org. junit. assert. assertequals ( l, java. lang. long. valueof ( 1 ) )
[4]: org. junit. assert. assertequals ( 1, repository. all ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( createduser )
[0]: org. junit. assert. assertnotnull ( repository. all ( ) )
[1]: org. junit. assert. assertequals ( 0, repository. all ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, repositories. all ( ). size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( patternroot, patternxx )

************

************
tgt: org . junit . assert . assertequals ( "test" , echo . echo ( "test" ) )
[0]: org. junit. assert. assertnotnull ( patternroot )
[1]: org. junit. assert. assertequals ( patternroot, patternlang )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnotnull ( parser. parse ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertequals ( version , selectedversion )
[0]: org. junit. assert. assertnotnull ( parser. parse ( new java. lang. string [ ] { } ) )
[1]: org. junit. assert. assertequals ( parser, parser. parse ( new java. lang. string [ ] { } ) )
[2]: org. junit. assert. assertequals ( parser, parser. parse ( new java. lang. string [ 0 ] ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( ( e instanceof tests. unit. com. microsoft. azure. sdk. iot. device. transport. mqtt. exceptions. mqttidentifierrejectedexception ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , array . size ( ) )
[0]: org. junit. assert. asserttrue ( ( e instanceof tests. unit. com. microsoft. azure. sdk. iot. device. transport. mqtt. exceptions. mqttrejectedprotocolversionexception ) )
[1]: org. junit. assert. asserttrue ( ( e instanceof tests. unit. com. microsoft. azure. sdk. iot. device. transport. mqtt. exceptions. mqttunexpectederrorexception ) )
[2]: org. junit. assert. asserttrue ( ( e instanceof java. lang. illegalargumentexception ) )
[3]: org. junit. assert. assertnotnull ( e )
[4]: org. junit. assert. assertthat ( hashcollision. hasfurtherparams ( ), org. hamcrest. matchers. is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( "master" 0 , expectedmsg , actualmsg )
[0]: org. junit. assert. assertequals ( true, hashcollision. hasfurtherparams ( ) )
[1]: org. junit. assert. assertthat ( hashcollision, org. hamcrest. corematchers. is ( true ) )
[2]: org. junit. assert. assertthat ( hashcollision, hasfurtherparams ( ) )
[3]: org. junit. assert. assertthat ( hashcollision )
[4]: org. junit. assert. assertnotnull ( manager. s )

************

************
tgt: org . junit . assert . assertequals ( 3 , queue . size ( ) )
[0]: org. junit. assert. assertnotnull ( manager. materialized ( row ) )
[1]: org. junit. assert. assertnotnull ( manager. compound )
[2]: org. junit. assert. assertnotnull ( manager. context )
[3]: org. junit. assert. assertnotnull ( manager. find ( row ) )
[4]: org. junit. assert. assertnotnull ( reply )

************

************
tgt: org . junit . assert . assertnotnull ( label . getimage ( ) )
[0]: org. junit. assert. assertequals ( outbound, reply )
[1]: org. junit. assert. assertequals ( message, reply )
[2]: org. junit. assert. assertequals ( null, reply )
[3]: ) )
[4]: org. junit. assert. assertnull ( converted )

************

************
tgt: org . junit . assert . assertequals ( expected , entry . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, f. getlastchild ( ) )
[1]: org. junit. assert. assertequals ( 3, f. getlastchild ( ) )
[2]: org. junit. assert. assertequals ( 1.0, f. getlastchild ( ) )
[3]: org. junit. assert. assertequals ( 1, f. getlastchild ( ). length )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( hostresult . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( startpos )
[1]: org. junit. assert. assertnotnull ( startpos )
[2]: org. junit. assert. assertnull ( startpos )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( expected . length , list . size ( ) )
[0]: org. junit. assert. assertequals ( 1, service. getselector ( ). size ( ) )
[1]: org. junit. assert. assertthat ( root. hassameancestor ( root ), org. hamcrest. core. is. is ( true ) )
[2]: org. junit. assert. assertthat ( root. hassameancestor ( path ), org. hamcrest. core. is. is ( true ) )
[3]: org. junit. assert. assertthat ( root. hassameancestor ( null ), org. hamcrest. core. is. is ( true ) )
[4]: org. junit. assert. assertthat ( root. hassameancestor ( null ), org. hamcrest. core. is. is ( false ) )

************

************
tgt: org . junit . assert . assertequals ( expected , wificonfig )
[0]: org. junit. assert. assertthat ( root. hassameancestor ( root ), org. hamcrest. core. is. is ( false ) )
[1]: org. junit. assert. assertequals ( i, buf. tostring ( ) )
[2]: org. junit. assert. assertequals ( buf. tostring ( ), i )
[3]: org. junit. assert. assertnotnull ( buf. tostring ( ) )
[4]: org. junit. assert. assertequals ( s, buf. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , products . size ( ) )
[0]: org. junit. assert. assertequals ( i, buf. tostring ( ). length )
[1]: org. junit. assert. assertnotnull ( lst )
[2]: org. junit. assert. asserttrue ( lst. isempty ( ) )
[3]: org. junit. assert. assertnotnull ( lst. get ( ) )
[4]: org. junit. assert. assertnotnull ( lst. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , b )
[0]: org. junit. assert. asserttrue ( lst. contains ( ) )
[1]: org. junit. assert. assertnotnull ( t )
[2]: org. junit. assert. assertnotnull ( t. getclass ( ) )
[3]: org. junit. assert. assertnotnull ( t. getmessage ( ) )
[4]: org. junit. assert. assertnotnull ( t. name )

************

************
tgt: org . junit . assert . assertequals ( "" , s )
[0]: ) )
[1]: org. junit. assert. assertequals ( 3, result. size ( ) )
[2]: org. junit. assert. assertnotnull ( children )
[3]: org. junit. assert. assertnull ( children )
[4]: org. junit. assert. assertnull ( children. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( effect , is ( 1 ) )
[0]: org. junit. assert. assertnotnull ( child )
[1]: org. junit. assert. assertnull ( children, result )
[2]: org. junit. assert. assertequals ( null, env. resolve ( env ) )
[3]: org. junit. assert. assertequals ( 1, env. resolve ( null ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. optional. empty ( ), env. resolve ( env ) )

************

************
tgt: org . junit . assert . assertequals ( lines [ 0 ] . length ( ) , lines [ ( ( lines . length ) - 1 ) ] . length ( ) )
[0]: org. junit. assert. assertequals ( 1, env. resolve ( unvar ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. optional. empty ( ), env. resolve ( null ) )
[2]: org. junit. assert. asserttrue ( willtransactionstop )
[3]: org. junit. assert. asserttrue ( shouldtransactionstop )
[4]: org. junit. assert. assertnotnull ( willtransactionstop )

************

************
tgt: org . junit . assert . assertequals ( expecteddelayinseconds , 60 , 2 )
[0]: org. junit. assert. asserttrue ( needtransactionstop )
[1]: ) )
[2]: org. junit. assert. assertequals ( lists. mutable. with ( 1, 2, 3, 4 ), integers )
[3]: org. junit. assert. assertequals ( lists. mutable. with ( 2, 4, 3, 4 ), integers )
[4]: org. junit. assert. asserttrue ( container. containsid ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( result . getlist ( ) . get ( 0 ) . name . equals ( java . lang . string . format ( "name%03d" , ( i * 10 ) ) ) )
[0]: org. junit. assert. asserttrue ( container. containsid ( 1 ) )
[1]: org. junit. assert. asserttrue ( container. containsid ( java. lang. object. class ) )
[2]: org. junit. assert. asserttrue ( container. containsid ( 1l ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, gefilterdemodellen. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( policy . isresponsecacheable ( request , response ) )
[0]: org. junit. assert. assertequals ( 0, gefilterdemodellen. size ( ) )
[1]: org. junit. assert. assertequals ( 2, gefilterdemodellen. size ( ) )
[2]: org. junit. assert. assertthat ( gefilterdemodellen. size ( ), org. hamcrest )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( callback. aserror ( reply ) )

************

************
tgt: org . junit . assert . assertarrayequals ( examplemessages . important_quote_text . getbytes ( ) , plainba . tobytearray ( ) )
[0]: org. junit. assert. assertequals ( docs, callback. aserror ( reply ) )
[1]: org. junit. assert. assertequals ( true, target. isallowed ( ) )
[2]: org. junit. assert. asserttrue ( target. isallowed ( ) )
[3]: org. junit. assert. assertnotnull ( target. isallowed ( ) )
[4]: org. junit. assert. assertequals ( false, target. isallowed ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertequals ( t1. getsegment2 ( ). length, segment. getsegment2 ( ). length )
[2]: org. junit. assert. assertequals ( null, segment. getsegment2 ( ) )
[3]: org. junit. assert. assertequals ( t1. getsegment2 ( ), segment )
[4]: org. junit. assert. assertequals ( t1. getsegment2 ( ), segment. getsegment2 ( ) )

************

************
tgt: org . junit . assert . assertequals ( expecteddepartment , department )
[0]: org. junit. assert. assertequals ( t1. getsegment2 ( ). tostring ( ), segment )
[1]: org. junit. assert. assertequals ( 0, cacheloader. getloadcount ( ) )
[2]: org. junit. assert. assertequals ( 1, cacheloader. getloadcount ( ) )
[3]: org. junit. assert. assertthat ( cacheloader. getloadcount ( ), org. hamcrest. matchers. is ( 0 ) )
[4]: org. junit. assert. assertequals ( 3, cacheloader. getloadcount ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedoutput , tostring ( builder ) )
[0]: org. junit. assert. assertequals ( zero, cacheloader. getloadcount ( ) )
[1]: org. junit. assert. assertnotnull ( alist )
[2]: org. junit. assert. asserttrue ( alist. isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, alist )
[4]: org. junit. assert. assertequals ( 1, alist. length )

************

************
tgt: org . junit . assert . assertequals ( year , instance . getyear ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), 0, res. length )
[3]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr [ 0 ] )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr, res )

************

************
tgt: org . junit . assert . asserttrue ( condition . eval ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr [ 1 ] )
[1]: org. junit. assert. assertequals ( 1, upgradepath. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( upgradeinfo1 ), upgradepath )
[3]: org. junit. assert. assertequals ( 0, upgradepath. size ( ) )
[4]: org. junit. assert. assertequals ( 2, upgradepath. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , false )
[0]: ) )
[1]: org. junit. assert. assertequals ( 3, controllercapture. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( package3, packagelist1 ), controllercapture. getvalue ( ) )
[3]: org. junit. assert. assertequals ( 3, controllercapture. getvalue ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( package3, package1 ), controllercapture. getvalue ( ) )

************

************
tgt: org . junit . assert . assertnull ( syntaxid )
[0]: org. junit. assert. assertequals ( 4, controllercapture. size ( ) )
[1]: org. junit. assert. assertequals ( 1, x )
[2]: org. junit. assert. assertequals ( 0, x )
[3]: org. junit. assert. assertequals ( x, 1 )
[4]: org. junit. assert. asserttrue ( ( x > 0 )

************

************
tgt: org . junit . assert . asserttrue ( edu . kit . aifb . cumulus . store . persistentmaptest . map . isempty ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( username, username )
[2]: org. junit. assert. assertequals ( username, username. getname ( ) )
[3]: org. junit. assert. assertequals ( username, username. tostring ( ) )
[4]: org. junit. assert. assertequals ( username, username. tolowercase ( ) )

************

************
tgt: org . junit . assert . assertnull ( value )
[0]: org. junit. assert. assertequals ( username, username. trim ( ) )
[1]: org. junit. assert. assertnotnull ( data )
[2]: org. junit. assert. assertnotnull ( distribuicaoint. getchaveacesso ( ) )
[3]: org. junit. assert. assertequals ( 1, distribuicaoint. getchaveacesso ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, distribuicaoint. getchaveacesso ( ). length )

************

************
tgt: org . junit . assert . assertnull ( themessage )
[0]: org. junit. assert. assertequals ( 1, distribuicaoint. getchaveacesso ( ). size ( )
[1]: ) )
[2]: org. junit. assert. assertarrayequals ( expected, output. array ( ) )
[3]: org. junit. assert. assertarrayequals ( expected. array ( ), output. array ( ) )
[4]: org. junit. assert. assertequals ( expected, output )

************

************
tgt: org . junit . assert . assertnull ( val )
[0]: org. junit. assert. assertarrayequals ( expected, output )
[1]: org. junit. assert. assertarrayequals ( expected, output. array )
[2]: org. junit. assert. assertequals ( 1, results. size ( ) )
[3]: org. junit. assert. assertequals ( pval, qval )
[4]: org. junit. assert. assertequals ( 19, value )

************

************
tgt: org . junit . assert . assertequals ( expected , actual . getname ( ) )
[0]: org. junit. assert. assertthat ( value, is ( 42 ) )
[1]: org. junit. assert. assertequals ( 19, value, 0 )
[2]: org. junit. assert. assertthat ( value, is ( 1l ) )
[3]: org. junit. assert. assertthat ( value, is ( 0l ) )
[4]: org. junit. assert. assertequals ( 1, stats ( ehcache ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( resultset )
[0]: org. junit. assert. assertequals ( 0, stats ( ehcache ). size ( ) )
[1]: org. junit. assert. assertnotnull ( stats ( ehcache ) )
[2]: org. junit. assert. assertequals ( 1, statistics ( ehcache ). size ( ) )
[3]: org. junit. assert. asserttrue ( dao. exists ( null, session ) )
[4]: org. junit. assert. asserttrue ( dao. exists ( null, null ) )

************

************
tgt: org . junit . assert . assertnotnull ( serverclass )
[0]: org. junit. assert. asserttrue ( dao. exists ( name, session ) )
[1]: org. junit. assert. asserttrue ( dao. exists ( ""foo"", session ) )
[2]: type ) )
[3]: org. junit. assert. asserttrue ( userfile. checkowned ( userfile. getid ( ) ) )
[4]: org. junit. assert. asserttrue ( userfile. checkowned ( null ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , definitions . size ( ) )
[0]: org. junit. assert. asserttrue ( userfile. checkowned ( userfile. getname ( ) ) )
[1]: org. junit. assert. assertfalse ( userfile. checkowned ( null ) )
[2]: org. junit. assert. asserttrue ( userfile. checkowned ( ""test"" ) )
[3]: org. junit. assert. assertsame ( connectionrequestcontextargumentcaptor. getvalue ( ), connectionrequestcontextargumentcaptor. getvalue ( ) )
[4]: org. junit. assert. asserttrue ( connectionrequestcontextargumentcaptor. getvalue ( ). equals ( connectionrequestcontextargumentcaptor. getvalue ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , array . length )
[0]: org. junit. assert. asserttrue ( ( connectionrequestcontextargumentcaptor. getvalue ( ) ) == connectionrequestcontextargumentcaptor. getvalue ( ) ) )
[1]: org. junit. assert. asserttrue ( ( connectionrequestcontextargumentcaptor. getvalue ( ). connectionrequestcontextargumentcaptor ) == null ) )
[2]: org. junit. assert. asserttrue ( connectionrequestcontextargumentcaptor. getvalue ( ). isvalid ( 1 ) )
[3]: org. junit. assert. assertequals ( 1, events. size ( ) )
[4]: org. junit. assert. assertequals ( activities, cut. collection )

************

************
tgt: org . junit . assert . assertequals ( "test" , e . getmessage ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( activities ), cut )
[1]: org. junit. assert. assertequals ( activities, cut. collection ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( activities ), events )
[3]: org. junit. assert. assertnotnull ( 4 )
[4]: org. junit. assert. assertnotnull ( test )

************

************
tgt: org . junit . assert . assertequals ( 0 , impl . getmaxage ( entry ) )
[0]: org. junit. assert. assertnotnull ( testcase )
[1]: org. junit. assert. assertnotnull ( testmodule referredprovider )
[2]: org. junit. assert. assertnotnull ( testmodule )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), target )
[4]: org. junit. assert. assertequals ( 1, target. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 123 , _directory . getimageheight ( ) )
[0]: org. junit. assert. assertequals ( 1, source. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), target )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, entryset. size ( ) )
[4]: org. junit. assert. assertequals ( 0, entryset. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( listener . startup ( session ) )
[0]: org. junit. assert. assertequals ( 3, entryset. size ( ) )
[1]: org. junit. assert. assertequals ( new org. joda. time. datetime ( 2014, 2, 4, 9, 0 ), nexttherapyadministrationtime )
[2]: org. junit. assert. assertequals ( new org. joda. time. datetime ( 2014, 2, 4, 8, 0 ), nexttherapyadministrationtime )
[3]: org. junit. assert. assertequals ( new org. joda. time. datetime ( 2014, 2, 4, 5, 0 ), nexttherapyadministrationtime )
[4]: org. junit. assert. assertequals ( new org. joda. time. datetime ( 2014, 2, 4, 20, 0 ), nexttherapyadministrationtime )

************

************
tgt: org . junit . assert . assertequals ( s , r . tostring ( ) )
[0]: org. junit. assert. assertequals ( new org. joda. time. datetime ( 2014, 2, 4, 6, 0 ), nexttherapyadministrationtime )
[1]: org. junit. assert. assertequals ( 1, tags. size ( ) )
[2]: org. junit. assert. assertequals ( 0, tags. size ( ) )
[3]: org. junit. assert. assertequals ( 1, tag. size ( ) )
[4]: org. junit. assert. assertequals ( 3, tags. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , this . chartchangeevents . size ( ) )
[0]: _2. size ( ) )
[1]: org. junit. assert. assertthat ( applymaterieel, org. hamcrest. core. is. is ( false ) )
[2]: org. junit. assert. assertthat ( applymaterieel, org. hamcrest. core. is. is ( true ) )
[3]: org. junit. assert. assertthat ( applymaterieel, org. hamcrest. core. is. is ( peildatumformeel ) )
[4]: org. junit. assert. assertthat ( applymaterieformeel, org. hamcrest. core. is. is ( false ) )

************

************
tgt: org . junit . assert . assertnull ( attribute )
[0]: org. junit. assert. assertthat ( applymaterieel )
[1]: org. junit. assert. assertnotnull ( username )
[2]: org. junit. assert. assertequals ( userlist, username )
[3]: org. junit. assert. assertnull ( username )
[4]: org. junit. assert. assertequals ( userlist, user )

************

************
tgt: org . junit . assert . assertequals ( list , com . feilong . core . util . sortutil . sortlist ( list , ( ( java . util . comparator [ ] ) ( null ) ) ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, nof )
[2]: org. junit. assert. assertequals ( 0, nof )
[3]: org. junit. assert. assertequals ( - 1, nof )
[4]: org. junit. assert. assertequals ( 100, nof )

************

************
tgt: org . junit . assert . assertthat ( table , org . hamcrest . corematchers . is ( com . hotels . bdp . circustrain . avro . testutils . newtable ( ) ) )
[0]: org. junit. assert. assertequals ( ( - 1 ) )
[1]: org. junit. assert. assertequals ( ( ( byte ) ( - 1 ) ), x. value )
[2]: org. junit. assert. assertequals ( ( ( float ) ( 8 ) ), result. getfloatwrappervalue ( ) )
[3]: org. junit. assert. assertequals ( ( ( float ) ( 8 ) ), result. getfloatwrappervalue ( ), 0 )
[4]: org. junit. assert. assertequals ( ( ( float ) ( 8 ) ), ( ( float ) ( result. getfloatwrappervalue ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertfalse ( basecalendardao. exists ( calendar. getid ( ) ) )
[1]: org. junit. assert. asserttrue ( basecalendardao. exists ( calendar. getid ( ) ) )
[2]: org. junit. assert. assertfalse ( basecalendardao. exists ( calendar ) )
[3]: org. junit. assert. asserttrue ( basecalendardao. exists ( calendar ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertsame ( shouldfind , selection . textinput ( com . redhat . darcy . ui . by . id ( "test" ) ) )
[0]: org. junit. assert. assertequals ( isoc, isoc. getmonoisotope ( ) )
[1]: org. junit. assert. assertnotnull ( person )
[2]: org. junit. assert. assertequals ( response, person )
[3]: org. junit. assert. assertequals ( person, request )
[4]: org. junit. assert. assertnotnull ( person. response )

************

************
tgt: org . junit . assert . asserttrue ( set . equals ( qset ) )
[0]: org. junit. assert. assertequals ( request, person )
[1]: org. junit. assert. assertnotnull ( ret )
[2]: org. junit. assert. assertnull ( ret )
[3]: org. junit. assert. assertequals ( null, ret )
[4]: org. junit. assert. assertequals ( string, ret )

************

************
tgt: org . junit . assert . assertequals ( 0l , framenodata . getaveragetimemilis ( ) )
[0]: org. junit. assert. assertequals ( null, ret )
[1]: org. junit. assert. assertequals ( 1, uid. kind ( ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 3 ), uid. kind ( ) )
[3]: org. junit. assert. assertequals ( 3, uid. kind ( ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 3 ), uid. kind ( ) )

************

************
tgt: org . junit . assert . assertfalse ( ( ( docs . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), uid. kind ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), results )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), results )
[3]: org. junit. assert. assertequals ( 1, results. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), results )

************

************
tgt: org . junit . assert . assertfalse ( errors . haserrors ( ) )
[0]: org. junit. assert. assertequals ( 0, results. size ( ) )
[1]: org. junit. assert. asserttrue ( isvalid )
[2]: org. junit. assert. assertfalse ( isvalid )
[3]: org. junit. assert. assertnotnull ( isvalid )
[4]: org. junit. assert. assertequals ( isvalid, false )

************

************
tgt: org . junit . assert . asserttrue ( outany . equal ( inany ) )
[0]: org. junit. assert. asserttrue ( isvalid, false )
[1]: org. junit. assert. assertfalse ( org. apache. commons. collections4. collectionutils. isnotempty ( coll ) )
[2]: org. junit. assert. asserttrue ( org. apache. commons. collections4. collectionutils. isnotempty ( coll ) )
[3]: org. junit. assert. assertequals ( 1, actual. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( associationvalue ), actual )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( set ( associationvalue ), actual )
[1]: org. junit. assert. assertequals ( new java. util. hashset < java. lang. string > ( ), actual )
[2]: ) )
[3]: org. junit. assert. assertequals ( msg. tostring ( ), snap. tostring ( ) )
[4]: org. junit. assert. assertequals ( msg, snap )

************

************
tgt: org . junit . assert . assertequals ( "editor" , this . mocker . getcomponentundertest ( ) . getlabel ( ) )
[0]: org. junit. assert. assertequals ( msg, snap. tostring ( ) )
[1]: org. junit. assert. assertequals ( msg. tostring ( ), snap. getmessage ( ) )
[2]: org. junit. assert. assertfalse ( check. iscompatible ( ) )
[3]: org. junit. assert. asserttrue ( check. iscompatible ( ) )
[4]: org. junit. assert. assertfalse ( checks. iscompatible ( ) )

************

************
tgt: org . junit . assert . assertnull ( normalizedpath )
[0]: org. junit. assert. assertfalse ( checkbox. iscompatible ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, users. size ( ) )
[3]: org. junit. assert. asserttrue ( ( ( users. size ( ) ) == 1 ) )
[4]: org. junit. assert. assertequals ( 3, users. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "bar" , output )
[0]: org. junit. assert. assertequals ( 2, users. size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( users. size ( ) ) > 1 ) )
[2]: org. junit. assert. assertequals ( true, value2 )
[3]: org. junit. assert. assertequals ( null, value2 )
[4]: org. junit. assert. assertequals ( false, value2 )

************

************
tgt: org . junit . assert . assertequals ( 7 , node . getcacheddegrees ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 1, value2 )
[1]: org. junit. assert. assertequals ( 0, value2 )
[2]: org. junit. assert. assertequals ( str, exception. getmessage ( ) )
[3]: org. junit. assert. assertequals ( contextresult, result )
[4]: org. junit. assert. assertequals ( result, filterresult )

************

************
tgt: org . junit . assert . assertequals ( "5678" , portletinstance . getinstanceid ( ) )
[0]: org. junit. assert. assertsame ( result, filterresult )
[1]: org. junit. assert. assertnotnull ( filterresult )
[2]: org. junit. assert. assertsame ( result, filterresult )
[3]: ) )
[4]: org. junit. assert. assertequals ( sampledata, outputdata )

************

************
tgt: org . junit . assert . assertequals ( origtreestr , newtreestr )
[0]: org. junit. assert. assertequals ( samplesdata, outputdata )
[1]: org. junit. assert. assertnotnull ( outputdata )
[2]: org. junit. assert. assertequals ( samplingdata, outputdata )
[3]: org. junit. assert. assertequals ( sampledata, inputdata )
[4]: org. junit. assert. assertnotnull ( echo )

************

************
tgt: org . junit . assert . assertequals ( "" , getter . get ( row ) )
[0]: org. junit. assert. assertequals ( ""test"", echo. echo ( ""test"" ) )
[1]: org. junit. assert. assertnotnull ( echo. echo ( ""test"" ) )
[2]: org. junit. assert. assertnotnull ( echo. echo ( ) )
[3]: org. junit. assert. assertequals ( ""test"", echo. echo ( ""test"" ) )
[4]: org. junit. assert. asserttrue ( a. get ( ) )

************

************
tgt: org . junit . assert . assertthat ( found , is ( true ) )
[0]: org. junit. assert. assertthat ( history. getbegin ( ), org. hamcrest. matchers. equalto ( new org. joda. time. datetime ( 1505241470000l, org. joda. time. datetimezone. utc ) ) )
[1]: org. junit. assert. assertthat ( history. getbegin ( ), org. hamcrest. matchers. is ( new org. joda. time. datetime ( 1505241470000l, org. joda. time. datetimezone. utc ) ) )
[2]: org. junit. assert. assertthat ( history. getbegin ( ), org. hamcrest. matchers. equalto ( java. util. optional. of ( new org. joda. time. datetime ( 1505241470000l ) ) ) )
[3]: org. junit. assert. assertthat ( history. getbegin ( ), org. hamcrest. matchers. equalto ( new org. joda. time. datetime ( 1505241470000l, org. joda. time. datetimezone. utc ) ) ) )
[4]: org. junit. assert. assertthat ( history. getbegin ( ), org. hamcrest. matchers. equalto ( new org. joda. time. datetime ( 1505241470000l, org. joda. time. datetimezone. utc ) ) ) ;

************

************
tgt: org . junit . assert . assertequals ( "11.0.1" , result )
[0]: org. junit. assert. assertequals ( expectedtostring, query. getquery ( ) )
[1]: org. junit. assert. assertequals ( expectedtostring, query. getquery ( ). tostring ( ) )
[2]: org. junit. assert. assertequals ( expectedtostring, query. getquery ( ). trim ( ) )
[3]: org. junit. assert. assertequals ( expectedtostring, q. getquery ( ) )
[4]: org. junit. assert. assertequals ( expectedtostring, query. getquery ( ). get ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( config )
[0]: org. junit. assert. assertequals ( in, out )
[1]: org. junit. assert. assertequals ( null, out )
[2]: org. junit. assert. assertequals ( from, out )
[3]: org. junit. assert. assertequals ( input, out )
[4]: , out )

************

************
tgt: org . junit . assert . assertfalse ( isconsistent )
[0]: org. junit. assert. assertequals ( useddiskbefore, useddiskafter )
[1]: org. junit. assert. assertequals ( ( useddiskbefore + mb ), useddiskafter )
[2]: org. junit. assert. assertequals ( ( useddiskbefore - mb ), useddiskafter )
[3]: org. junit. assert. assertequals ( ident useddiskbefore, useddiskafter )
[4]: org. junit. assert. assertequals ( usediskbefore, useddiskafter )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertarrayequals ( bytes, result )
[1]: org. junit. assert. assertequals ( expected, result )
[2]: org. junit. assert. assertnotnull ( org. apache. commons. lang3. threadutils. findthreadsbyname ( t1. getid ( ) ) )
[3]: org. junit. assert. assertnotnull ( org. apache. commons. lang3. threadutils. findthreadsbyname ( t2. getid ( ) ) )
[4]: org. junit. assert. assertnotnull ( org. apache. commons. lang3. threadutils. findthreadsbyname ( t1. tostring ( ) ) )

************

************
tgt: org . junit . assert . assertthat ( ( ( java . lang . string ) ( c . value ) ) , org . hamcrest . corematchers . is ( "aaa" ) )
[0]: org. junit. assert. assertnotnull ( org. apache. commons. lang3. threadutils. findthreadsbyname ( t1. getname ( ) ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( testoutputtext )
[3]: org. junit. assert. assertequals ( testoutputtext, testoutputtext )
[4]: org. junit. assert. assertequals ( bytearraytowritable ( bytearray, testoutputtext ), testoutputtext )

************

************
tgt: org . junit . assert . assertequals ( validationresult . result . ok , sss . validateconnection ( properties ) . getstatus ( ) )
[0]: org. junit. assert. assertequals ( bytearraytowritable ( bytearray ), testoutputtext )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, response. gettotal ( ) )
[3]: org. junit. assert. assertequals ( annotations, primitive. getannotations ( ). getannotations ( ) )
[4]: org. junit. assert. assertequals ( field, primitive. getannotations ( ). getannotations ( ) )

************

************
tgt: org . junit . assert . assertthat ( message . data ( ) , org . hamcrest . matchers . is ( encoded ) )
[0]: org. junit. assert. assertequals ( 0, primitive. getannotations ( ). size ( ) )
[1]: org. junit. assert. assertequals ( fields, primitive. getannotations ( ). getannotations ( ) )
[2]: org. junit. assert. asserttrue ( hybridcodec. validate ( ( ( byte ) ( 1 ) ), hybridcodec ) )
[3]: org. junit. assert. asserttrue ( hybridcodec. validate ( ( ( byte ) ( 0 ) ), hybridcodec ) )
[4]: org. junit. assert. asserttrue ( hybridcodec. validate ( 0, hybridcodec ) )

************

************
tgt: org . junit . assert . asserttrue ( assetautotaggerentries . isempty ( ) )
[0]: org. junit. assert. asserttrue ( hybridcodec. validate ( null, hybridcodec ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( entitytag, response. getdate ( ) )
[3]: org. junit. assert. assertequals ( entitytag, response. getdate ( ) )
[4]: org. junit. assert. assertnotnull ( response. getdate ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , callcount . get ( ) )
[0]: org. junit. assert. assertequals ( entitytag, response. getdate )
[1]: org. junit. assert. assertequals ( entitytag, response )
[2]: org. junit. assert. assertnotnull ( s )
[3]: org. junit. assert. assertequals ( s, null )
[4]: org. junit. assert. assertequals ( s, s )

************

************
tgt: org . junit . assert . assertequals ( "mytestdata" , decrypteddata )
[0]: org. junit. assert. assertnull ( s )
[1]: type ) { s )
[2]: org. junit. assert. assertequals ( outstr1, outstr2 )
[3]: org. junit. assert. assertequals ( outputstr1, outstr2 )
[4]: org. junit. assert. assertequals ( outstr1, errstr2 )

************

************
tgt: org . junit . assert . assertthat ( view . estimatedduration ( ) , org . hamcrest . core . is . is ( "" ) )
[0]: org. junit. assert. assertequals ( errstr1, outstr2 )
[1]: org. junit. assert. assertequals ( outstr1, outstr2 )
[2]: org. junit. assert. assertnotnull ( type. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, type. tostring ( ) )
[4]: org. junit. assert. assertequals ( ""foo"", type. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( null , out )
[0]: . tostring ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( data. getpspaccounthistory ( ) )
[3]: org. junit. assert. assertequals ( 1, data. getpspaccounthistory ( ) )
[4]: org. junit. assert. assertequals ( null, data. getpspaccounthistory ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( java . lang . double ) ( 67.89 ) ) , coordinate . getlongitude ( ) )
[0]: org. junit. assert. assertequals ( 1, obj. getid ( ) )
[1]: org. junit. assert. assertnotnull ( obj. s )
[2]: org. junit. assert. assertnotnull ( obj. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( obj. getmessage ( ) )
[4]: org. junit. assert. assertequals ( 1, obj. s. length )

************

************
tgt: org . junit . assert . assertequals ( 2 , sum [ 0 ] )
[0]: org. junit. assert. assertnotnull ( imappattributes. creategeocoding ( ) )
[1]: org. junit. assert. assertnotnull ( org. apache. logging. log4j. core. impl. contextdatafactory. createcontextdata ( 2 ) )
[2]: org. junit. assert. assertnotnull ( getresponse. getconfigurations ( ) )
[3]: org. junit. assert. assertnotnull ( getresponse. getconfigurations ( ). getconfigurations ( ) )
[4]: org. junit. assert. assertnull ( getresponse. getconfigurations ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertnotnull ( getresponse. getconfigurations ( ). tostring ( ) )
[1]: org. junit. assert. assertequals ( null, getresponse. getconfigurations ( ) )
[2]: org. junit. assert. assertequals ( 100, actual. size ( ) )
[3]: org. junit. assert. asserttrue ( ( ( actual. size ( ) ) == 100 ) )
[4]: org. junit. assert. assertequals ( 1, actual. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. asserttrue ( ( ( actual. size ( ) ) == 1 ) )
[1]: org. junit. assert. assertequals ( 0, actual. size ( ) )
[2]: org. junit. assert. asserttrue ( newstr. equals ( origin ) )
[3]: org. junit. assert. asserttrue ( newstr. equals ( newstr ) )
[4]: org. junit. assert. asserttrue ( newstr. equals ( originalstr ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , size )
[0]: org. junit. assert. asserttrue ( newstr. equals ( oldstr ) )
[1]: org. junit. assert. asserttrue ( newstr. equals ( origin ) ) ;
[2]: org. junit. assert. assertequals ( expected. tostring ( ), e )
[3]: org. junit. assert. assertequals ( expected. tostring ( ), e. tostring ( ) )
[4]: org. junit. assert. assertequals ( expected. tostring ( ), e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , map2 . addone2all ( map ) . size ( ) )
[0]: org. junit. assert. assertequals ( expected, testline. tostring ( ) )
[1]: org. junit. assert. assertequals ( expected. tostring ( ), e. trim ( ) )
[2]: org. junit. assert. assertnotnull ( savedtenant )
[3]: org. junit. assert. assertequals ( 1, groups. size ( ) )
[4]: org. junit. assert. assertnotnull ( personattributetypeid )

************

************
tgt: org . junit . assert . assertequals ( path , pathholder . getpath ( ) )
[0]: org. junit. assert. assertequals ( uuid, personattributetypeid )
[1]: org. junit. assert. assertequals ( 1, ( ( int ) ( personattributetype ) ) )
[2]: org. junit. assert. assertequals ( uuid, personattributetypeid ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( false, reportprocessor. isquerylimitreached ( ) )

************

************
tgt: org . junit . assert . assertequals ( false , refreplicationdone . isscorable ( ) )
[0]: org. junit. assert. assertfalse ( reportprocessor. isquerylimitreached ( ) )
[1]: org. junit. assert. assertequals ( true, reportprocessor. isquerylimitreached ( ) )
[2]: org. junit. assert. assertequals ( 0, reportprocessor. isquerylimitreached ( ) )
[3]: ) )
[4]: org. junit. assert. assertsame ( map, properties )

************

************
tgt: org . junit . assert . assertequals ( expectedddl , generatedddl )
[0]: org. junit. assert. assertnull ( properties )
[1]: org. junit. assert. assertequals ( map, properties )
[2]: org. junit. assert. assertsame ( properties, map )
[3]: org. junit. assert. assertnotnull ( properties )
[4]: org. junit. assert. assertequals ( 1, instance. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedarg , parsedarg )
[0]: org. junit. assert. assertequals ( 0, instance. size ( ) )
[1]: org. junit. assert. assertequals ( instance. size ( ), 1 )
[2]: org. junit. assert. assertequals ( 3, instance. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertthat ( message, org. hamcrest. core. is. is ( message ) )

************

************
tgt: org . junit . assert . assertequals ( entity . publicvalue , actualvalue )
[0]: org. junit. assert. assertthat ( message, org. hamcrest. core. is. is ( msg ) )
[1]: org. junit. assert. assertthat ( message, org. hamcrest. core. is. is ( index ) )
[2]: org. junit. assert. assertthat ( messages, org. hamcrest. core. is. is ( message ) )
[3]: , message )
[4]: org. junit. assert. assertequals ( 42.0, uvp. getseconddata ( ) )

************

************
tgt: org . junit . assert . assertequals ( existingpollsvote , newpollsvote )
[0]: org. junit. assert. assertequals ( 42.0, uvp. getseconddata ( ), 0.0 )
[1]: org. junit. assert. assertequals ( 42.0, uvp. getseconddata ( ), 0 )
[2]: org. junit. assert. assertequals ( 42.0, uvp. getseconddata ( ), 1.0 )
[3]: org. junit. assert. assertequals ( 42.0, uvpdata ( ) )
[4]: org. junit. assert. assertnotnull ( processedmanifest )

************

************
tgt: org . junit . assert . assertnotnull ( continuityofcaredocument )
[0]: org. junit. assert. assertnotnull ( parsedmanifest )
[1]: org. junit. assert. assertnotnull ( receivedmanifest )
[2]: org. junit. assert. assertnotnull ( processedmanifest )
[3]: org. junit. assert. assertnotnull ( processedmanifest )
[4]: org. junit. assert. assertnotnull ( buf. getarchname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , decoded . getsignatures ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 1, buf. getarchname ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, buf. getarchname ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), buf. getarchname ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, numfiles )

************

************
tgt: org . junit . assert . assertequals ( orig , clone )
[0]: org. junit. assert. assertequals ( numfiles, numfiles )
[1]: org. junit. assert. asserttrue ( ( numfiles == numfiles ) )
[2]: org. junit. assert. asserttrue ( ( numfiles > numfiles ) )
[3]: org. junit. assert. asserttrue ( ( numfiles == numelements ) )
[4]: org. junit. assert. assertequals ( unequalinstances, set )

************

************
tgt: org . junit . assert . assertequals ( inputfilecontent , content )
[0]: org. junit. assert. assertequals ( unequalinstances, sets )
[1]: org. junit. assert. assertequals ( deequalinstances, set )
[2]: org. junit. assert. assertequals ( set, unequalinstances )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, actualelements. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ps1 == ps2 ) )
[0]: org. junit. assert. assertequals ( 1, actualelements. size ( ) )
[1]: org. junit. assert. assertnull ( actualelements )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, client. hasunfulfilledquota ( 2 ) )

************

************
tgt: org . junit . assert . assertequals ( io . robe . convert . samplepojo . class , converter . getdataclass ( ) )
[0]: org. junit. assert. assertequals ( 1, client. hasunfulfilledquota ( 0 ) )
[1]: org. junit. assert. assertequals ( true, client. hasunfulfilledquota ( 2 ) )
[2]: org. junit. assert. assertequals ( true, client. hasunfulfilledquota ( 0 ) )
[3]: org. junit. assert. asserttrue ( client. hasunfulfilledquota ( 2 ) )
[4]: org. junit. assert. assertnotnull ( mappingconfigurationresult )

************

************
tgt: org . junit . assert . assertequals ( 0 , metadata . getmeasures ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( mappingconfigurationresult, mappingconfigurationresult )
[1]: org. junit. assert. assertequals ( mappingconfiguration, mappingconfigurationresult )
[2]: org. junit. assert. assertnull ( mappingconfigurationresult )
[3]: org. junit. assert. assertequals ( mappingconfigurationresult, mappingsconfigurationresult )
[4]: org. junit. assert. assertequals ( rspatialindex. intersects ( r ). size ( ), 1 )

************

************
tgt: org . junit . assert . asserttrue ( transmetaspy . hasloop ( stepmetamain ) )
[0]: org. junit. assert. assertequals ( rspatialindex. intersects ( r ). size ( ), 0 )
[1]: org. junit. assert. assertfalse ( rspatialindex. intersects ( r ). contains ( r ) )
[2]: org. junit. assert. assertfalse ( rspatialindex. intersects ( r ). isempty ( ) )
[3]: org. junit. assert. assertequals ( rspatialindex. intersects ( r ), r )
[4]: org. junit. assert. assertequals ( ( ( float ) ( 1234.56 ) ), floatvalue )

************

************
tgt: org . junit . assert . asserttrue ( fs . isreservedfilename ( candidate ) )
[0]: org. junit. assert. assertequals ( ( ( float ) ( 1234.56 ) ), floatvalue, 0 )
[1]: org. junit. assert. assertequals ( ( ( float ) ( 1034.56 ) ), floatvalue )
[2]: org. junit. assert. assertequals ( ( ( float ) ( floatvalue ) ), floatvalue )
[3]: org. junit. assert. assertequals ( ( ( float ) ( 1234.56 ) ), floatvalue, 0.0 )
[4]: org. junit. assert. asserttrue ( action. getshowweekender ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( newxml, confirmxml )
[1]: org. junit. assert. assertequals ( sourcexml, confirmxml )
[2]: org. junit. assert. assertequals ( sourcejob, confirmxml )
[3]: org. junit. assert. assertequals ( null, confirmxml )
[4]: org. junit. assert. assertequals ( oldxml, confirmxml )

************

************
tgt: org . junit . assert . assertnotnull ( set )
[0]: org. junit. assert. assertequals ( recoverystagedir. tostring ( ), expecteddir )
[1]: org. junit. assert. assertequals ( recoverproviderimplpathj. tostring ( ), expecteddir )
[2]: org. junit. assert. assertequals ( recoverpalagedir. tostring ( ), expecteddir )
[3]: org. junit. assert. assertequals ( recover recoverystagedir. tostring ( ), expecteddir )
[4]: org. junit. assert. assertequals ( recoveradminpathj. tostring ( ), expecteddir )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertnotnull ( classifier )
[1]: org. junit. assert. assertequals ( 1, classifier. getid ( ) )
[2]: org. junit. assert. assertequals ( 1, classifier. size ( ) )
[3]: org. junit. assert. assertequals ( 1, classifier. getvertices ( ). length )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertfalse ( result )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. assertequals ( false, result )
[3]: org. junit. assert. assertequals ( buf. tostring ( ), dta )
[4]: org. junit. assert. assertequals ( buf. tostring ( ), ""a"" )

************

************
tgt: org . junit . assert . assertfalse ( e . iscancelled ( ) )
[0]: org. junit. assert. assertequals ( buf. tostring ( ), ""test"" )
[1]: public void tostring ( ) { }
[2]: . tostring ( ) )
[3]: org. junit. assert. assertequals ( expectedrelationalinputgenerator, actualstoreinputgenerator )
[4]: org. junit. assert. assertequals ( expectedrelationalinputgenerator, actualainputgenerator )

************

************
tgt: org . junit . assert . assertthat ( ids [ i ] , equalto ( objects . get ( i ) ) )
[0]: org. junit. assert. assertequals ( expectedrelationalinputgenerator, actuallpinputgenerator )
[1]: org. junit. assert. assertequals ( expectedrelationalinputgenerator, actualiverseinputgenerator )
[2]: org. junit. assert. assertequals ( expectedrelationalinputgenerator, actualtainputgenerator )
[3]: org. junit. assert. assertfalse ( session. isincomplete ( ) )
[4]: org. junit. assert. asserttrue ( session. isincomplete ( ) )

************

************
tgt: org . junit . assert . assertequals ( c1 , c2 )
[0]: org. junit. assert.false ( session. isincomplete ( ) )
[1]: org. junit. assert. assertfalse ( session. isincomplete ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 3, command. getprojectedsymbols ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, tables. gettablequotatables ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( joining )
[0]: org. junit. assert. assertequals ( 1, table. gettablequotatables ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, mockreportedregions. gettablequotatables ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, tables. gettablequotatables ( ). size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( org. zkoss. zss. engine. impl. togeneraltexttest. val3 [ j ] [ 1 ], result )

************

************
tgt: org . junit . assert . assertfalse ( b )
[0]: org. junit. assert. assertequals ( org. zkoss. zss. engine. impl. togeneraltexttest. val3 [ j ] [ 0 ], result )
[1]: org. junit. assert. assertequals ( org. zkoss. zss. engine. impl. togeneraltexttest. val3 [ j ] [ j ], result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( j ), result )
[4]: org. junit. assert. assertequals ( inetaddress, null )

************

************
tgt: org . junit . assert . assertequals ( ( num_files - 1 ) , imarkers . length )
[0]: org. junit. assert. assertequals ( inetaddress, java. net. inetaddress )
[1]: org. junit. assert. assertequals ( inetaddress, new java. net. inetaddress )
[2]: org. junit. assert. assertequals ( inetaddress, test )
[3]: org. junit. assert. assertthat ( poolfactorybean. getpool ( ), org. hamcrest. matchers. is ( org. hamcrest. matchers. equalto ( poolfactorybean ) ) )
[4]: org. junit. assert. assertthat ( poolfactorybean. getpool ( ), org. hamcrest. matchers. is ( org. hamcrest. matchers. empty ( ) ) )

************

************
tgt: org . junit . assert . assertthat ( allowedtowrite , org . hamcrest . core . is . is ( true ) )
[0]: org. junit. assert. assertequals ( 0, poolfactorybean. getpool ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( poolfactorybean. getpool ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, combo. getselectionindex ( ) )
[4]: org. junit. assert. assertequals ( 1, combobox. getselectionindex ( ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , violations . size ( ) )
[0]: org. junit. assert. assertequals ( 2, hoststack. size ( ) )
[1]: org. junit. assert. assertequals ( 2, hosthome. size ( ) )
[2]: org. junit. assert. assertequals ( 1, hoststack. size ( ) )
[3]: org. junit. assert. assertequals ( 1, host2. size ( ) )
[4]: org. junit. assert. assertequals ( 2, hosthashmap. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "sampleldapidsrealm" , com . ibm . ws . security . wim . adapter . ldap . fat . fattestidswithssltrustonly . servlet . getrealm ( ) )
[0]: org. junit. assert. assertnotnull ( owner. getdisplayname ( ) )
[1]: org. junit. assert. assertequals ( owner, owner. getdisplayname ( ) )
[2]: org. junit. assert. assertnull ( owner. getdisplayname ( ) )
[3]: org. junit. assert. assertequals ( owner. getdisplayname ( ), owner )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , infoflow . getresults ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 7, 8 ), int_field )
[1]: org. junit. assert. assertequals ( beans, int_field. getfromall ( beans ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 7, 8, 7 ), int_field )
[3]: org. junit. assert. assertequals ( beans, int_field )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( value , message . readlong ( ) )
[0]: org. junit. assert. assertequals ( 1, updates. size ( ) )
[1]: org. junit. assert. assertequals ( 0, updates. size ( ) )
[2]: org. junit. assert. assertequals ( 1, sets. size ( ) )
[3]: org. junit. assert. assertequals ( 1, update. size ( ) )
[4]: org. junit. assert. assertequals ( 1, changes. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( instance . istransformable ( ) )
[0]: org. junit. assert. assertarrayequals ( b, archivedata )
[1]: org. junit. assert. assertnotnull ( condition. evaluate ( noderef ) )
[2]: org. junit. assert. assertequals ( 1, condition. evaluate ( noderef ) )
[3]: org. junit. assert. assertequals ( true, condition. evaluate ( noderef ) )
[4]: org. junit. assert. assertequals ( 0, condition. evaluate ( noderef ) )

************

************
tgt: org . junit . assert . assertnotnull ( getorganizationreference ( sourceorganization , targetorganization ) )
[0]: org. junit. assert. assertnull ( condition. evaluate ( noderef ) )
[1]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), result. get ( ) )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( 0 ), result. get ( ) )
[3]: org. junit. assert. assertequals ( new java. lang. integer ( ( - 1 ) ), result. get ( ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), result. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( "document" 0 , expected . getmessage ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, check. apply ( bijhoudingsautorisatie ) )
[2]: org. junit. assert. assertequals ( 0, check. apply ( bijhoudingsautorisatie ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( partijgemeenteb, partijgemeenteb ), check. apply ( bijhoudingsautorisatie ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), check. apply ( bijhoudingsautorisatie ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . core . is . is ( message ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( partijgemeenteb, partijgemeentea ), check. apply ( bijhoudingsautorisatie ) )
[1]: org. junit. assert. assertequals ( list1, list2 )
[2]: org. junit. assert. assertarrayequals ( list1. toarray ( ), list2. toarray ( ) )
[3]: org. junit. assert. assertequals ( lists1, list2 )
[4]: org. junit. assert. assertsame ( list1, list2 )

************

************
tgt: org . junit . assert . assertequals ( value , evaluated )
[0]: org. junit. assert. asserttrue ( list1. equals ( list2 ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), parser. getsupportednumericfunctions ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1l ), parser. getsupportednumericfunctions ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), parser. getsupportednumericfunctions ( ) )
[4]: org. junit. assert. assertequals ( 1, updatedsubscription. getnumberofbillingcycles ( ) )

************

************
tgt: org . junit . assert . assertnull ( tr . findcertinfo ( new java . security . cert . x509certificate [ ] { } ) )
[0]: org. junit. assert. assertequals ( 0, updatedsubscription. getnumberofbillingcycles ( ) )
[1]: org. junit. assert. assertequals ( 2, updatedsubscription. getnumberofbillingcycles ( ) )
[2]: org. junit. assert. assertequals ( 3, updatedsubscription. getnumberofbillingcycles ( ) )
[3]: org. junit. assert. assertnotnull ( updatedsubscription. getnumberofbillingcycles ( ) )
[4]: org. junit. assert. assertequals ( 1, c1l. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( pk . getschedulerstatus ( ) )
[0]: org. junit. assert. assertequals ( 2, c1l. size ( ) )
[1]: org. junit. assert. assertequals ( 0, c1l. size ( ) )
[2]: org. junit. assert. assertnull ( nieuw )
[3]: org. junit. assert. assertequals ( 0, nieuw. size ( ) )
[4]: org. junit. assert. assertnull ( buildrule. getproject ( ) )

************

************
tgt: org . junit . assert . assertequals ( null , sum )
[0]: org. junit. assert. assertnotnull ( buildrule. getproject ( ) )
[1]: org. junit. assert. assertnull ( buildrule. getproject ( ). getproperty ( ) )
[2]: org. junit. assert. assertnotnull ( buildrule. getproject ( ). getproperty ( ""test"" ) )
[3]: org. junit. assert. assertnull ( buildrule. getproject ( ) )
[4]: org. junit. assert. assertequals ( 0, heartbeatread )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( expected , actual ) )
[0]: org. junit. assert. assertnotnull ( heartbeatread )
[1]: org. junit. assert. assertequals ( 1, heartbeatread )
[2]: org. junit. assert. assertnull ( heartbeatread )
[3]: ) )
[4]: org. junit. assert. assertsame ( node, root. getnode ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedmsg , emptyfaultsoap12 )
[0]: org. junit. assert. assertnotnull ( root. getnode ( ) )
[1]: org. junit. assert. assertnotnull ( fixture. readbyte ( ) )
[2]: org. junit. assert. assertequals ( 1, ngrammodel. size ( ) )
[3]: org. junit. assert. assertequals ( 1, results. size ( ) )
[4]: org. junit. assert. assertequals ( 0, results. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( manager . getrules ( ) . isempty ( ) )
[0]: org. junit. assert. assertfalse ( client. isresponse400 ( ) )
[1]: org. junit. assert. assertnull ( client. isresponse400 ( ) )
[2]: org. junit. assert. assertequals ( 0, client. isresponse400 ( ) )
[3]: org. junit. assert. assertequals ( false, client. isresponse400 ( ) )
[4]: org. junit. assert. asserttrue ( equalsignoremetadata ( parsed, crs ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , variables . size ( ) )
[0]: org. junit. assert. asserttrue ( java. util. arrays. equalsignoremetadata ( parsed, crs ) )
[1]: org. junit. assert. asserttrue ( s. equalsignoremetadata ( parsed, crs ) )
[2]: org. junit. assert. asserttrue ( equalsignoremetadata ( parsed, null ) )
[3]: org. junit. assert. asserttrue ( java. util. arrays. equalsignoremetadata ( parsed, null ) )
[4]: org. junit. assert. asserttrue ( result. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( passednamed , actualname )
[0]: org. junit. assert. assertnotnull ( resource. getparameter ( org. nuxeo. ecm. core. io. registry. context. testrenderingcontext. param ) )
[1]: org. junit. assert. assertnotnull ( resource. getparameter ( org. nuxeo. ecm. core. io. registry. context. testrenderingcontext. parameter ) )
[2]: org. junit. assert. assertnull ( resource. getparameter ( org. nuxeo. ecm. core. io. registry. context. testrenderingcontext. param ) )
[3]: org. junit. assert. assertnotnull ( resource. getparameter ( org. nuxeo. ecm. core. io. registry. context. testrenderingcontext. value1 ) )
[4]: org. junit. assert. assertequals ( org. nuxeo. ecm. core. io. registry. context. testrenderingcontext. value1, resource. getparameter ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( element . isdisplayed ( ) )
[0]: org. junit. assert. assertequals ( publishablestatus. auto_draft, org. apache. camel. component. wordpress. api. model. publishablestatus. fromstring ( input4 ) )
[1]: org. junit. assert. assertnull ( org. apache. camel. component. wordpress. api. model. publishablestatus. fromstring ( input4 ) )
[2]: org. junit. assert. assertequals ( publishablestatus. private_draft, org. apache. camel. component. wordpress. api. model. publishablestatus. fromstring ( input4 ) )
[3]: org. junit. assert. assertequals ( input4, org. apache. camel. component. wordpress. api. model. publishablestatus. fromstring ( input4 ) )
[4]: org. junit. assert. assertequals ( publishablestatus. auto_draft, org. apache. camel. component. wordpress. api. model. publishablestatus. fromstring ( input 4 ) )

************

************
tgt: org . junit . assert . assertthat ( pkt . swapsourceanddestinationfields ( orig ) , org . hamcrest . matchers . equalto ( swapped ) )
[0]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { }, roles )
[1]: org. junit. assert. assertarrayequals ( user1, roles )
[2]: org. junit. assert. assertnotnull ( roles )
[3]: , roles )
[4]: )

************

************
tgt: org . junit . assert . assertnull ( existingsharingentry )
[0]: org. junit. assert. assertequals ( 1, read. size ( ) )
[1]: org. junit. assert. assertequals ( 0, read. size ( ) )
[2]: org. junit. assert. assertequals ( 6, read. size ( ) )
[3]: org. junit. assert. assertequals ( 4, read. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "" , org . pentaho . big . data . kettle . plugins . mapreduce . jobentryhadooptransjobexecutortest . exec . getnummaptasks ( ) )
[0]: org. junit. assert. assertequals ( 1, props. getzipfile ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( props. getzipfile ( ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), props. getzipfile ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), props. getzipfile ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), props. getzipfile ( ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedonsave , actualonsave )
[0]: org. junit. assert. assertnotnull ( connectiondefinition. gethostname ( ) )
[1]: org. junit. assert. assertequals ( dataset, connectiondefinition. gethostname ( ) )
[2]: org. junit. assert. assertequals ( null, connectiondefinition. gethostname ( ) )
[3]: org. junit. assert. assertequals ( 1, connectiondefinition. gethostname ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertarrayequals ( teobjectutil . te_lsp_secondary_explicit , org . opendaylight . protocol . util . bytearray . getallbytes ( output ) )
[0]: org. junit. assert. assertequals ( false, result )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( expected, actualquery )
[4]: org. junit. assert. assertequals ( expected, processedquery )

************

************
tgt: org . junit . assert . assertequals ( boolean . true , java . lang . boolean . valueof ( result ) )
[0]: org. junit. assert. assertequals ( expected, materialized )
[1]: org. junit. assert. assertequals ( expected, statements )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. assertnotnull ( assignment. getid ( ) )
[4]: org. junit. assert. assertequals ( 1, assignment. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( expecteds , actuals )
[0]: org. junit. assert. assertequals ( 0, assignment. getid ( ) )
[1]: org. junit. assert. assertequals ( 1, assignment. getid ( ). length )
[2]: org. junit. assert. assertnull ( assignment. getid ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( org. opcfoundation. ua. core. serverstate. running ), sut. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( org. opcfoundation. ua. core. serverstate. running ), sut. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( expecteds , actual )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( org. opcfoundation. ua. core. serverstate. running ), sut. tostring ( ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( org. opcfoundation. ua. core. serverstate. running ), sut. getid ( ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), sut. getid ( ) )
[3]: org. junit. assert. assertnotnull ( minvalue )
[4]: org. junit. assert. assertequals ( 0.0, minvalue )

************

************
tgt: org . junit . assert . assertequals ( 3 , ( thevalue | 2 ) , 0 )
[0]: org. junit. assert. assertequals ( 1.0, minvalue )
[1]: )
[2]: 
[3]: org. junit. assert. assertequals ( 1, com. feilong. core. util. collectionsutil. select ( list, null, ( ( java. lang. string ) ( null ) ) ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, com. feilong. core. util. collectionsutil. select ( list, null, null ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( sizelimit . tolong ( ) ) >= ( cachesize . tolong ( ) ) ) )
[0]: org. junit. assert. assertequals ( java. util. collectionsutil. select ( list, null, null ), com. feilong. core. util. collectionsutil. select ( list, null, null ) )
[1]: org. junit. assert. assertequals ( null, com. feilong. core. util. collectionsutil. select ( list, null, null ) )
[2]: org. junit. assert. assertequals ( 1, com. feilong. core. util. collectionsutil. select ( list, null, ( ( java. lang. string ) ( null ) ) ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, fromjson )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), fromjson )

************

************
tgt: org . junit . assert . asserttrue ( ( ( rman . getcommittedcount ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( null, fromjson )
[1]: type ) )
[2]: type )
[3]: org. junit. assert. asserttrue ( object. contains ( "f ) )
[4]: org. junit. assert. asserttrue ( object. contains ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: org. junit. assert. asserttrue ( object. contains ( 15.0f ) )
[1]: org. junit. assert. asserttrue ( object. contains ( org. apache. hadoop. fs. path.
[2]: ) )
[3]: org. junit. assert. assertnotnull ( spout. closepartition ( testorderedfileinputspout. input_file_name ) )
[4]: org. junit. assert. assertnotnull ( spout. closepartition ( testorderedfileinputsinputspout. class ) )

************

************
tgt: org . junit . assert . assertfalse ( tw . next ( ) )
[0]: org. junit. assert. assertequals ( conf. closepartition ( testorderedfileinputsinputspout. class ), spout. closepartition ( testorderedfileinputspout. class ) )
[1]: org. junit. assert. assertequals ( conf. closepartition ( testorderedfileinputsinputspout. class ), outpartition ( testorderedfileinputspout. input_file_name ) )
[2]: org. junit. assert. assertequals ( conf. closepartition ( testorderedfileinputsinputspout. class ), spout. closepartition ( testorderedfileinputsinputspout. class ) )
[3]: org. junit. assert. assertnotnull ( id. getid ( ) )
[4]: org. junit. assert. assertnotnull ( entity. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( counter , jmxcounter )
[0]: org. junit. assert. assertnotnull ( id )
[1]: org. junit. assert. assertnotnull ( id ( ) )
[2]: org. junit. assert. assertnotnull ( context. getid ( ) )
[3]: org. junit. assert. assertequals ( null, entity. gettimestamp ( ) )
[4]: org. junit. assert. assertequals ( now, entity. gettimestamp ( ) )

************

************
tgt: org . junit . assert . asserttrue ( tp . canread ( ) )
[0]: org. junit. assert. assertequals ( 1, result. calculate ( idval ) )
[1]: org. junit. assert. assertequals ( 1, idval. calculate ( 1 ) )
[2]: org. junit. assert. assertequals ( 1, idval. calculate ( 0 ) )
[3]: org. junit. assert. assertequals ( 0, result. calculate ( idval ) )
[4]: org. junit. assert. assertequals ( 1, ( ( long ) ( partition. calculate ( 0 ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( profile , viewportprofile . mobile_portrait_medium )
[0]: org. junit. assert. assertequals ( description, deserialized )
[1]: org. junit. assert. assertequals ( desc, deserialized )
[2]: org. junit. assert. assertequals ( descriptions, deserialized )
[3]: org. junit. assert. assertequals ( descriptor, deserialized )
[4]: org. junit. assert. assertnotnull ( deserialized )

************

************
tgt: org . junit . assert . assertequals ( new org . codehaus . httpcache4j . cache . headers ( ) , modified )
[0]: org. junit. assert. assertnull ( subject )
[1]: org. junit. assert. assertnotnull ( subject )
[2]: org. junit. assert. assertnull ( subject. controleer ( null, null, null, null ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( 2 , forum . gettotaltopics ( ) )
[0]: org. junit. assert. assertequals ( 1, types. size ( ) )
[1]: org. junit. assert. assertequals ( 0, types. size ( ) )
[2]: org. junit. assert. assertequals ( store2, store2 )
[3]: org. junit. assert. assertequals ( store1, store2 )
[4]: org. junit. assert. assertnotnull ( store2 )

************

************
tgt: org . junit . assert . assertequals ( 6 , role . getpermissions ( node ) . size ( ) )
[0]: org. junit. assert. assertequals ( store2, store1 )
[1]: org. junit. assert. assertequals ( store, store2 )
[2]: org. junit. assert. assertequals ( 1, graph. size ( ) )
[3]: org. junit. assert. assertequals ( 0, graph. size ( ) )
[4]: org. junit. assert. assertequals ( 1, graph. errors. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( this . batchcompiler . compile ( ) )
[0]: org. junit. assert. assertequals ( 1, graph. values ( ). length )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, row. size ( ) )
[3]: org. junit. assert. assertequals ( 0, row. size ( ) )
[4]: org. junit. assert. assertequals ( row. size ( ), 1 )

************

************
tgt: org . junit . assert . assertequals ( 0 , children . size ( ) )
[0]: org. junit. assert. assertnotnull ( com. metamx. metrics. jvmpiddiscoverer. instance ( ) )
[1]: org. junit. assert. assertnotnull ( com. metamx. metrics. jvmpiddiscoverer. instance ( ). get ( getpid ( ) ) )
[2]: org. junit. assert. assertnotnull ( com. metamx. metrics. jvmpiddiscoverer. instance ( ). get ( getpid ( 1 ) ) )
[3]: org. junit. assert. assertequals ( 1, com. metamx. metrics. jvmpiddiscoverer. instance ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( com. metamx. metrics. jvmpiddiscoverer. instance ( ). get ( 1 ) )

************

************
tgt: org . junit . assert . assertnull ( theresult )
[0]: org. junit. assert. assertequals ( value, reader )
[1]: org. junit. assert. assertequals ( value, reader. writemails ( key ) )
[2]: org. junit. assert. assertequals ( null, reader. writemails ( key ) )
[3]: org. junit. assert. assertequals ( value, reader. read ( key ) )
[4]: org. junit. assert. assertequals ( null, reader. read ( key ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , ex . getcauses ( ) . length )
[0]: org. junit. assert. asserttrue ( bcr. dohasnext ( ) )
[1]: org. junit. assert. assertnotnull ( signature )
[2]: org. junit. assert. assertequals ( s, signature )
[3]: org. junit. assert. assertequals ( expected, signature )
[4]: org. junit. assert. assertequals ( null, signature )

************

************
tgt: org . junit . assert . asserttrue ( mt . getadjustedextent ( ) . equals ( extent ) )
[0]: , signature )
[1]: org. junit. assert. assertequals ( bld, versions )
[2]: org. junit. assert. assertequals ( bld, prefix )
[3]: org. junit. assert. assertequals ( bld, versionlist )
[4]: , prefix )

************

************
tgt: org . junit . assert . assertequals ( 8 , bytearrayinputstream . read ( new byte [ 8 ] ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, status1. getliveservermetrics ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, status1. getliveservermetrics ( ). size ( ) )
[3]: org. junit. assert. assertequals ( status1. getliveservermetrics ( ). size ( ), 0 )
[4]: org. junit. assert. assertequals ( 1, status2. getliveservermetrics ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , this . parser . getsubtype ( ) )
[0]: org. junit. assert. asserttrue ( status1. getliveservermetrics ( ). isempty ( ) )
[1]: org. junit. assert. assertthat ( result, is ( true ) )
[2]: org. junit. assert. assertthat ( result, org. hamcrest )
[3]: org. junit. assert. assertequals ( true, result )
[4]: org. junit. assert. assertthat ( result )

************

************
tgt: org . junit . assert . assertnotnull ( propertyeditorpresenter . geteditingpropertyfields ( org . drools . workbench . screens . scenariosimulation . client . collectioneditor . propertypresentertest . item_id , org . drools . workbench . screens . scenariosimulation . client . collectioneditor . propertypresentertest . test_propertyname , org . drools . workbench . screens . scenariosimulation . client . collectioneditor . propertypresentertest . test_propertyvalue ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( found )
[2]: org. junit. assert. assertequals ( treegrammar, found )
[3]: org. junit. assert. assertequals ( tree grammar, found )
[4]: org. junit. assert. assertequals ( s, found )

************

************
tgt: org . junit . assert . assertequals ( "hostname=" 1 , expected , actual )
[0]: , found )
[1]: org. junit. assert. assertnull ( treatmentinterval )
[2]: org. junit. assert. assertnotnull ( treatmentinterval )
[3]: org. junit. assert. assertequals ( null, treatmentinterval )
[4]: org. junit. assert. assertequals ( zero, treatmentinterval )

************

************
tgt: org . junit . assert . assertsame ( color , gc . getbackground ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( this. newwith ( 1, 1, 3 ), integers )
[2]: org. junit. assert. assertequals ( this. newwith ( 1, 1, 2 ), integers )
[3]: org. junit. assert. assertequals ( 1, violations. size ( ) )
[4]: org. junit. assert. asserttrue ( isgarbagecollectionneeded ( 1, 1000 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( modifiedquery, modifiedquery )
[1]: org. junit. assert. assertequals ( modifiedquery, disabledconf )
[2]: org. junit. assert. assertequals ( modifiedquery, createdquery )
[3]: org. junit. assert. assertequals ( modifiedquery, savedquery )
[4]: org. junit. assert. assertequals ( modifiedquery, updatedquery )

************

************
tgt: org . junit . assert . assertfalse ( processor . processdisconnectmessage ( ctxmock , msg ) )
[0]: org. junit. assert. assertequals ( output [ i ], result [ i ] )
[1]: org. junit. assert. assertequals ( result [ i ], output [ i ] )
[2]: org. junit. assert. assertequals ( input [ i ], result [ i ] )
[3]: org. junit. assert. assertarrayequals ( output, result )
[4]: org. junit. assert. assertarrayequals ( output [ i ], result )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( 1, locations. getpeeraddresses ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, locations. getpeeraddresses ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, locations. getpeeraddresses ( ) )
[3]: org. junit. assert. assertnotnull ( locations. getpeeraddresses ( ) )
[4]: org. junit. assert. assertnotnull ( locations )

************

************
tgt: org . junit . assert . assertfalse ( item . getcheckable ( 1 ) )
[0]: org. junit. assert. assertthat ( transformedroute. gettag ( ), org. hamcrest. matchers. equalto ( null ) )
[1]: org. junit. assert. assertthat ( transformedroute. gettag ( ), org. hamcrest. matchers. equalto ( false ) )
[2]: org. junit. assert. assertthat ( transformedroute. gettag ( ), org. hamcrest. matchers. contains ( route ) )
[3]: org. junit. assert. assertthat ( transformedroute. gettag ( ), org. hamcrest. matchers. empty ( ) )
[4]: org. junit. assert. assertthat ( transformedroute )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( expected ) ) )
[0]: org. junit. assert. asserttrue ( m. matches ( null ) )
[1]: org. junit. assert. assertequals ( true, m. matches ( null ) )
[2]: org. junit. assert. assertfalse ( m. matches ( null ) )
[3]: org. junit. assert. assertequals ( false, m. matches ( null ) )
[4]: org. junit. assert. asserttrue ( m. matches ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . asserttrue ( actualdetails . isempty ( ) )
[0]: org. junit. assert. assertthat ( rules, org. hamcrest. corematchers. is ( java. util. collections. < hudson. plugins. cigame. rules. plugins. jacoco. defaultjacocorule > getrules ( ) ) )
[1]: org. junit. assert. assertthat ( rules, org. hamcrest. matchers. contains ( org. hamcrest. matchers. empty ( ) ) )
[2]: org. junit. assert. assertthat ( rules, org. hamcrest. corematchers. is ( java. util. collections. < hudson. plugins. cigame. rules. plugins. jacoco. defaultjacocorule > emptylist ( ) ) )
[3]: org. junit. assert. assertequals ( 1, rules. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, c. getpatterns ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( c. getpatterns ( ) )
[2]: org. junit. assert. assertequals ( 0, c. getpatterns ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 2, c. getpatterns ( ). size ( ) )
[4]: org. junit. assert. assertequals ( "", c. getpatterns ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( servernb == ( i + 1 ) ) )
[0]: org. junit. assert. assertnotnull ( content )
[1]: org. junit. assert. assertequals ( content, content )
[2]: org. junit. assert. assertequals ( string, content )
[3]: org. junit. assert. assertequals ( null, content )
[4]: org. junit. assert. assertequals ( content, null )

************

************
tgt: org . junit . assert . assertfalse ( list . isempty ( ) )
[0]: org. junit. assert. assertequals ( org. openqa. selenium. remote. server. driverfactorytest. driverone. class, result )
[1]: org. junit. assert. assertequals ( org. openqa. selenium. remote. server. driverfactorytest. drivertwo, result )
[2]: org. junit. assert. assertequals ( java. lang. string. class, result )
[3]: org. junit. assert. assertequals ( org. openqa. selenium. remote. server, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( ( ( taskattempt . container ) == ( containerobtainedbycontainerlauncher ) ) )
[0]: org. junit. assert. assertequals ( 1, molecule. stereoelements ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, molecule. stereoelements ( ). size ( ) )
[2]: org. junit. assert. asserttrue ( molecule. stereoelements ( ). isempty ( ) )
[3]: org. junit. assert. assertnotnull ( molecule. stereoelements ( ) )
[4]: org. junit. assert. assertequals ( 1, molecule. stereoelements ( ). size ( )

************

************
tgt: org . junit . assert . assertthat ( interval , org . hamcrest . corematchers . is ( ser ) )
[0]: org. junit. assert. assertequals ( true, result )
[1]: org. junit. assert. asserttrue ( result )
[2]: org. junit. assert. assertequals ( false, result )
[3]: org. junit. assert. assertfalse ( result )
[4]: org. junit. assert. assertequals ( true, result )

************

************
tgt: org . junit . assert . assertsame ( handle . getservice ( ) , cache . checkout ( com . bazaarvoice . ostrich . pool . singlethreadedclientservicecachetest . end_point ) . getservice ( ) )
[0]: org. junit. assert. assertequals ( 1, count )
[1]: org. junit. assert. assertequals ( 0, count )
[2]: org. junit. assert. assertequals ( 1, count, 1 )
[3]: org. junit. assert. assertequals ( 3, count )
[4]: org. junit. assert. assertequals ( 1, count, 0 )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( 1, todos. size ( ) )
[1]: org. junit. assert. assertnotnull ( todos )
[2]: org. junit. assert. assertequals ( 0, todos. size ( ) )
[3]: org. junit. assert. assertequals ( 3, todos. size ( ) )
[4]: org. junit. assert. assertequals ( 5, todos. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( existingratingsstats , newratingsstats )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( result, testassessmentvalues )
[2]: org. junit. assert. assertequals ( 1, result, 1 )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( 1, result, 0 )

************

************
tgt: org . junit . assert . assertequals ( true , check . isrequired ( ) )
[0]: org. junit. assert. assertequals ( expectinggrammarstr, s. tostring ( ) )
[1]: org. junit. assert. assertequals ( sequence1, sequence1 )
[2]: org. junit. assert. assertequals ( sequence1, sequence2 )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), result )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 0 ), result )

************

************
tgt: org . junit . assert . assertequals ( "" , testinterceptor . getexcludemethods ( ) )
[0]: org. junit. assert. assertequals ( 200, retrieveindex )
[1]: org. junit. assert. assertequals ( j, retrievefile ( ) )
[2]: org. junit. assert. assertequals ( j, retrieveutils. tostring ( ) )
[3]: org. junit. assert. assertequals ( null, retrieve ( activeindex, null ) )
[4]: org. junit. assert. assertequals ( null, retrieve ( activeindex, 30 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , errors . size ( ) )
[0]: org. junit. assert. assertequals ( 1, exceptions )
[1]: org. junit. assert. assertequals ( 0, exceptions )
[2]: org. junit. assert. assertequals ( 3, exceptions )
[3]: org. junit. assert. assertnotnull ( s )
[4]: org. junit. assert. assertequals ( s, s )

************

************
tgt: org . junit . assert . asserttrue ( subject . equals ( subject ) )
[0]: org. junit. assert. assertequals ( s, i )
[1]: org. junit. assert. assertequals ( s, null )
[2]: org. junit. assert. assertnull ( s )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( username , xs . geteffectiveusername ( ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: , result )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( keeper. finddefault ( ) )
[4]: org. junit. assert. assertnull ( keeper. finddefault ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , testutils . formattedresult . resultfactory . tostring ( rs ) )
[0]: org. junit. assert. assertequals ( 1, ischecked. invoke ( entity ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), ischecked. invoke ( entity ) )
[2]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), ischecked. invoke ( entity ) )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( key ), ischecked. invoke ( entity ) )
[4]: org. junit. assert. assertequals ( null, ischecked. invoke ( entity ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , setwithoutoptimize . size ( ) )
[0]: org. junit. assert. assertequals ( expected, org. sentilo. agent. alert. utils. alertutils. buildtopictopublishalert ( alertid ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( result, testnoexception )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( found )
[0]: org. junit. assert. assertequals ( result, null )
[1]: org. junit. assert. assertequals ( 0, mdlinput. length ( ) )
[2]: org. junit. assert. assertequals ( 0, mdlinput. size ( ) )
[3]: org. junit. assert. assertequals ( 1, mdlinput. length ( ) )
[4]: org. junit. assert. assertequals ( 1, mdlinput. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 255 , fixture . readint ( ) )
[0]: org. junit. assert. assertequals ( 0, m. size ( ) )
[1]: org. junit. assert. assertnull ( com. openpojo. reflection. java. bytecode. bytecodefactory. getsubclass ( java. lang. string. class ) )
[2]: org. junit. assert. assertnull ( com. openpojo. reflection. java. bytecode. bytecodefactory. getsubclass ( null ) )
[3]: org. junit. assert. assertnull ( com. openpojo. reflection. java. bytecode. bytecodefactory. getsubclass ( ( ( java. lang. object ) ( null ) ) ) )
[4]: org. junit. assert. assertnull ( com. openpojo. reflection. java. bytecode. bytecodefactory. getsubclass ( java. util. arraylist. class ) )

************

************
tgt: org . junit . assert . assertthat ( job . getduedate ( ) , org . hamcrest . core . is . is ( removaltime ) )
[0]: org. junit. assert. assertnull ( com. openpojo. reflection. java. bytecode. bytecodefactory. getsubclass ( java. lang. object. class ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( result, null )
[3]: org. junit. assert. assertequals ( result, props )
[4]: sample result )

************

************
tgt: org . junit . assert . asserttrue ( result . isempty ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( pathresolved. touri ( ) )
[2]: org. junit. assert. assertequals ( 1, pathresolved. touri ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( pathresolved ), pathresolved. touri ( ) )
[4]: org. junit. assert. assertequals ( 0, pathresolved. touri ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( pathresolved ), pathresolved )
[1]: org. junit. assert. assertequals ( n, ringsearch. cyclic ( i ) )
[2]: org. junit. assert. assertnotnull ( ringsearch. cyclic ( i ) )
[3]: org. junit. assert. assertequals ( 1, ringsearch. cyclic ( i ) )
[4]: org. junit. assert. asserttrue ( ringsearch. cyclic ( i ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( loadingcache. getifpresent ( k ) )
[2]: org. junit. assert. assertnull ( loadingcache. getifpresent ( k ) )
[3]: org. junit. assert. assertequals ( 1, loadingcache. getifpresent ( k ) )
[4]: org. junit. assert. assertequals ( 0, loadingcache. getifpresent ( k ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , issues . size ( ) )
[0]: org. junit. assert. assertequals ( null, loadingcache. getifpresent ( k ) )
[1]: org. junit. assert. assertequals ( 1, endtime )
[2]: org. junit. assert. assertequals ( 0, endtime )
[3]: org. junit. assert. assertequals ( 1l, endtime )
[4]: org. junit. assert. assertequals ( endtime, endtime )

************

************
tgt: org . junit . assert . assertequals ( 0 , flow . getoutputvlanid ( ) . intvalue ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, session. isempty ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, session. isempty ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, session. isempty ( ) )
[4]: org. junit. assert. assertequals ( 1, session. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( "<sp>1<sp>|<sp>1<sp>|<sp>0<sp>|<sp>0<sp>|<sp>1<sp>|\n" 0 + sqltext ) + "<sp>1<sp>|<sp>1<sp>|<sp>0<sp>|<sp>0<sp>|<sp>1<sp>|\n" 0 ) , expected , testutils . formattedresult . resultfactory . tostringunsorted ( rs ) )
[0]: org. junit. assert. asserttrue ( session. isempty ( ) )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. null, result )
[4]: org. junit. assert.null ( result )

************

************
tgt: org . junit . assert . assertthat ( a . hashcode ( ) , org . hamcrest . corematchers . is ( b . hashcode ( ) ) )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( str, sb. tostring ( ) )
[2]: org. junit. assert. assertequals ( str, sb. tostring ( ). trim ( ) )
[3]: org. junit. assert. assertequals ( sb. tostring ( ), str )
[4]: org. junit. assert. assertequals ( str, sb. tostring ( ) )

************

************
tgt: org . junit . assert . assertfalse ( trie . delete ( "apple" ) )
[0]: org. junit. assert. assertequals ( str. trim ( ), sb. tostring ( ) )
[1]: org. junit. assert. assertfalse ( fullhalfpair. equals ( str ) )
[2]: org. junit. assert. asserttrue ( fullhalfpair. equals ( str ) )
[3]: org. junit. assert. assertnull ( fullhalfpair. equals ( str ) )
[4]: org. junit. assert. assertequals ( str, fullhalfpair. equals ( str ) )

************

************
tgt: org . junit . assert . assertsame ( user , authenticateduser )
[0]: ) )
[1]: org. junit. assert. assertequals ( occurexception, e )
[2]: org. junit. assert. assertsame ( occurexception, e )
[3]: org. junit. assert. assertthat ( e, is ( occurexception ) )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( parent1 , parent2 ) , instance . getparents ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( webkeys. getjwksuri ( ) )
[2]: org. junit. assert. assertequals ( java. util. optional. empty ( ), webkeys. getjwksuri ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), webkeys. getjwksuri ( ) )
[4]: org. junit. assert. assertequals ( java. util. optional. of ( ), webkeys. getjwksuri ( ) )

************

************
tgt: org . junit . assert . asserttrue ( succcond )
[0]: org. junit. assert. assertequals ( java. util. arraylist. class, webkeys. getjwksuri ( ) )
[1]: org. junit. assert. assertequals ( tsllocation, this. configuration. gettsllocation ( ) )
[2]: org. junit. assert. assertequals ( tsllocation, this. config. gettsllocation ( ) )
[3]: org. junit. assert. assertequals ( tsllocation, this. configuration. gettsllocation ( ) )
[4]: org. junit. assert. assertequals ( tsllocation, the. configuration. gettsllocation ( ) )

************

************
tgt: org . junit . assert . assertequals ( a . hashcode ( ) , b . hashcode ( ) )
[0]: org. junit. assert. assertnotnull ( this. configuration. gettsllocation ( ) )
[1]: org. junit. assert. assertnotnull ( instance )
[2]: org. junit. assert. assertequals ( 0, instance. count )
[3]: org. junit. assert. assertequals ( null, instance. data )
[4]: org. junit. assert. assertnull ( instance )

************

************
tgt: org . junit . assert . assertequals ( 0 , zero . getpartialderivative ( n ) , epsilon [ n ] )
[0]: ) )
[1]: org. junit. assert. assertequals ( len1, length )
[2]: org. junit. assert. assertequals ( length, len1 )
[3]: org. junit. assert. assertequals ( len2, length )
[4]: org. junit. assert. assertequals ( length, len2 )

************

************
tgt: org . junit . assert . asserttrue ( ans . getresult ( ) )
[0]: org. junit. assert. assertequals ( len 1, length )
[1]: org. junit. assert. assertequals ( 1, res. all ( ). size ( ) )
[2]: org. junit. assert. assertarrayequals ( new long [ ] { 5 }, res. all ( ) )
[3]: org. junit. assert. assertequals ( 3, res. all ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 5, res. all ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( org . junit . tests . experimental . rules . methodrulestest . wasrun )
[0]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 5 }, res )
[1]: org. junit. assert. assertnull ( argumenttype )
[2]: org. junit. assert. assertequals ( null, argumenttype )
[3]: org. junit. assert. assert null, argumenttype )
[4]: org. junit. assert. assertnull ( argumenttype )

************

************
tgt: org . junit . assert . assertnotnull ( ontologyentrybyacc )
[0]: org. junit. assert. assertnull ( cpo )
[1]: org. junit. assert. assertequals ( s1. equals ( s2 ), true )
[2]: org. junit. assert. assertfalse ( s1. equals ( s2 ) )
[3]: org. junit. assert. assertnotnull ( e )
[4]: org. junit. assert. assertequals ( msg, marshaller )

************

************
tgt: org . junit . assert . assertarrayequals ( new byte [ ] { 1 , 2 , 5 , 6 , 3 , 4 } , buffer . tobytearray ( ) )
[0]: org. junit. assert. assertnotnull ( marshaller )
[1]: org. junit. assert. assertnull ( marshaller )
[2]: org. junit. assert. assertequals ( message, marshaller )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( ks )

************

************
tgt: org . junit . assert . asserttrue ( ( time > 0 ) )
[0]: org. junit. assert. assertequals ( 0, mi. getparamlist ( ). size ( ) )
[1]: org. junit. assert. assertequals ( mn, mi. getparamlist ( ) )
[2]: org. junit. assert. assertequals ( 1, mi. getparamlist ( ). size ( ) )
[3]: org. junit. assert. assertequals ( null, mi. getparamlist ( ) )
[4]: org. junit. assert. assertequals ( 0, mi. getparamlist ( ). isempty ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result . isempty ( ) )
[0]: org. junit. assert. assertequals ( """", userid )
[1]: org. junit. assert. assertequals ( null, userid )
[2]: org. junit. assert. assertequals ( sql, userid )
[3]: org. junit. assert. assertequals ( empty, userid )
[4]: public void init ( ) { }

************

************
tgt: org . junit . assert . assertfalse ( text . issamenode ( elem ) )
[0]: org. junit. assert. assertarrayequals ( somepropertynames, result )
[1]: org. junit. assert. assertnotnull ( soytemplaterecord. get ( 0 ) )
[2]: org. junit. assert. assertnull ( soytemplaterecord )
[3]: org. junit. assert. assertnotnull ( soytemplaterecord )
[4]: get ( null ) )

************

************
tgt: org . junit . assert . assertfalse ( predicate . test ( record ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( none, pa. getaccesslevel ( ) )
[2]: org. junit. assert. asserttrue ( fields. isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, fields. isempty ( ) )
[4]: org. junit. assert. assertequals ( true, fields. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( extensionconvertermanager , sm . getextensionconverterprovider ( ) )
[0]: org. junit. assert. assertequals ( 2, fields. isempty ( ) )
[1]: org. junit. assert. assertequals ( 3, fields. isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, sink. size ( ) )
[3]: org. junit. assert. assertequals ( 1, sink. size ( ) )
[4]: org. junit. assert. assertfalse ( this. it. hasnext ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , actuals )
[0]: org. junit. assert. assertnull ( this. it. hasnext ( ) )
[1]: org. junit. assert. assertfalse ( the. it. hasnext ( ) )
[2]: org. junit. assert. assertfalse ( it. hasnext ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, facts. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( previous , org . drools . eclipse . editors . completion . completionutil . getinnerexpression ( backtext ) )
[0]: org. junit. assert. assertequals ( 2, facts. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), facts )
[2]: org. junit. assert. assertequals ( 0, facts. size ( ) )
[3]: org. junit. assert. assertnotnull ( facts )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( camelcontext )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. assertequals ( 5, result. size ( ) )
[2]: org. junit. assert. assertequals ( 10, result. size ( ) )
[3]: org. junit. assert. assertequals ( 3, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, org. eclipse. collections. impl. list. primitive. intinterval. oneto ( 1 ). minifempty ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 1, org. eclipse. collections. impl. list. primitive. intinterval. oneto ( 1 ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, org. eclipse. collections. impl. list. primitive. intinterval. oneto ( 1 ). minifempty ( 0 ) )
[2]: org. junit. assert. assertequals ( 1, org. eclipse. collections. impl. list. primitive. intinterval. oneto ( 1 ). get ( ) )
[3]: org. junit. assert. assertequals ( 0, org. eclipse. collections. impl. list. primitive. intinterval. oneto ( 1 ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, connection. getresponsecode ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( old + "x" ) , o1 . getlastname ( ) )
[0]: org. junit. assert. assertequals ( 0, connection. getresponsecode ( ) )
[1]: org. junit. assert. assertequals ( complex. nan, testatani. atan ( ) )
[2]: org. junit. assert. assertnotnull ( complex. nan. atan ( ) )
[3]: org. junit. assert. assertnull ( complex. nan. atan ( ) )
[4]: org. junit. assert. assertnotnull ( complex. nan )

************

************
tgt: org . junit . assert . assertnotnull ( list )
[0]: org. junit. assert. assertnull ( complex. nan )
[1]: org. junit. assert. assertequals ( 1, db3. getid ( ) )
[2]: org. junit. assert. assertequals ( 1, db3. size ( ) )
[3]: org. junit. assert. assertequals ( 1, db3. db. size ( ) )
[4]: org. junit. assert. assertequals ( 1, db3. db ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( shown . isdisplayed ( ) )
[0]: org. junit. assert. assertequals ( 1, db3. db ( ). maxdb )
[1]: org. junit. assert. assertequals ( 1, factoryimpl. createtmetadata ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, factoryimpl. createtmetadata ( ). size ( ) )
[3]: org. junit. assert. assertfalse ( entryset. isempty ( ) )
[4]: org. junit. assert. assertequals ( 0, entryset. isempty ( ) )

************

************
tgt: org . junit . assert . assertthat ( dao . save ( "woo" ) , org . hamcrest . corematchers . is ( "woo" ) )
[0]: org. junit. assert. assertequals ( 1, terms. size ( ) )
[1]: org. junit. assert. assertequals ( collname, coll. getsession ( ) )
[2]: org. junit. assert. assertequals ( collname, this. schema. getsession ( ) )
[3]: org. junit. assert. assertequals ( collname, collection. getsession ( ) )
[4]: org. junit. assert. assertequals ( collname, coll. getsession ( ). name )

************

************
tgt: org . junit . assert . asserttrue ( logs . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( coll. getsession ( ) )
[1]: org. junit. assert. assertequals ( hl7constants. hl7_status_processing, message. getuuid ( ) )
[2]: org. junit. assert. assertequals ( hl7constants. hl7_status_processing, fault. getuuid ( ) )
[3]: org. junit. assert. assertequals ( 0, o. size ( ) )
[4]: org. junit. assert. assertequals ( 1, o. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , effect . getnumberaftereffects ( ) )
[0]: org. junit. assert. assertnotnull ( o )
[1]: org. junit. assert. assertequals ( emptylist ( ), o )
[2]: ) )
[3]: org. junit. assert. assertequals ( query, copy. clause ( ) )
[4]: org. junit. assert. assertequals ( query, copy. materialized ( ) )

************

************
tgt: org . junit . assert . assertequals ( expr , expr . cast ( expr . getclass ( ) ) )
[0]: org. junit. assert. assertequals ( true, redoaction. isenabled ( ) )
[1]: org. junit. assert. assertequals ( false, redoaction. isenabled ( ) )
[2]: org. junit. assert. asserttrue ( redoaction. isenabled ( ) )
[3]: org. junit. assert. assertequals ( 1, redoaction. isenabled ( ) )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. is ( expectedresult ) )

************

************
tgt: org . junit . assert . assertthat ( actual . isempty ( ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( expectedresult ) )
[1]: org. junit. assert. assertthat ( result, is ( expectedresult ) )
[2]: org. junit. assert. assertthat ( result, is ( equalto ( expectedresult ) ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( jobsforparent. isempty ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: org. junit. assert. assertequals ( excelfilefullpath. size ( ), excelfile. size ( ) )
[1]: org. junit. assert. assertequals ( excelfilefullpath. size ( ), data. size ( ) )
[2]: org. junit. assert. assertequals ( excelfilefullpath. tostring ( ), excelfile. tostring ( ) )
[3]: org. junit. assert. assertequals ( excelfilefullpath. getid ( ), excelfile. getid ( ) )
[4]: org. junit. assert. assertequals ( excelfilefullpath. size ( ), excelfile. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( "projectname" 3 , s )
[0]: org. junit. assert. assertequals ( intersect, range1 )
[1]: org. junit. assert. assertequals ( intersect, range2 )
[2]: org. junit. assert. assertequals ( intersect, ranges1 )
[3]: org. junit. assert. assertequals ( intersect, ranges2 )
[4]: org. junit. assert. assertequals ( intersect, range )

************

************
tgt: org . junit . assert . assertequals ( adapter , actual )
[0]: org. junit. assert. assertfalse ( result )
[1]: org. junit. assert. assertequals ( false, result )
[2]: org. junit. assert. asserttrue ( result )
[3]: org. junit. assert. assertthat ( result, org )
[4]: , result )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertnotnull ( resultsq )
[1]: org. junit. assert. assertnull ( resultsq )
[2]: org. junit. assert. assertequals ( 1, resultsq )
[3]: org. junit. assert. assertnotnull ( results q )
[4]: org. junit. assert. assertequals ( 1, resultsq. length )

************

************
tgt: org . junit . assert . assertequals ( javax . el . testbeanelresolver . bean_name , result )
[0]: org. junit. assert. assertequals ( 1, elements. size ( ) )
[1]: org. junit. assert. asserttrue ( filter. isoverwriteifexist ( ) )
[2]: org. junit. assert. assertequals ( true, msg. isoverwriteifexist ( ) )
[3]: org. junit. assert. asserttrue ( isoverwriteifexist ( ) )
[4]: org. junit. assert. assertequals ( true, filter. isoverwriteifexist ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( status == false ) )
[0]: org. junit. assert. assertequals ( true, isoverwriteifexist ( ) )
[1]: org. junit. assert. assertequals ( 1, users. size ( ) )
[2]: org. junit. assert. assertequals ( 0, users. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), users )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), users )

************

************
tgt: org . junit . assert . assertequals ( "1/kg" , u . tostring ( ) )
[0]: org. junit. assert. assertequals ( null, users )
[1]: org. junit. assert. assertequals ( space, e. getontologycollector ( ) )
[2]: org. junit. assert. assertequals ( space. getontologycollector ( ), e )
[3]: org. junit. assert. assertequals ( space, e. getsontologycollector ( ) )
[4]: org. junit. assert. assertnotnull ( e. getontologycollector ( ) )

************

************
tgt: org . junit . assert . assertnull ( license )
[0]: org. junit. assert. assertequals ( space, e )
[1]: org. junit. assert. assertthat ( intorstring, org. hamcrest. matchers. is ( 17 ) )
[2]: org. junit. assert. assertequals ( intorstring, intorstring )
[3]: org. junit. assert. assertthat ( intorstring, org. hamcrest. matchers. is ( 1 ) )
[4]: org. junit. assert. assertnotnull ( intorstring )

************

************
tgt: org . junit . assert . assertequals ( expected , actualquery )
[0]: org. junit. assert. assertequals ( 1, intorstring. guaranteed ( ) )
[1]: org. junit. assert. assertnotnull ( thread. getcontext ( ) )
[2]: org. junit. assert. assertnotnull ( secondcontext. getcontext ( ) )
[3]: org. junit. assert. assertnotnull ( threads. getcontext ( ) )
[4]: org. junit. assert. assertnotnull ( context. getcontext ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , song . getid ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( "", ssloptions. getkeystore ( ) )
[2]: org. junit. assert. assertequals ( "", ssloptions. getkeystore ( ) )
[3]: org. junit. assert. assertnotnull ( ssloptions. getkeystore ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( org . apache . el . lang . testelsupport . testenuma . vala1 , output )
[0]: )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( org. apache. hadoop. yarn. exception. yarnexception. getmessage ( ), e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( org. apache. hadoop. yarn. exceptions. message, e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , size )
[0]: org. junit. assert. assertnull ( e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( placementpriority. high, descriptor. getplacementpriority ( ) )
[2]: org. junit. assert. assertequals ( placementpriority, descriptor. getplacementpriority ( ) )
[3]: org. junit. assert. assertsame ( placementpriority, descriptor. getplacementpriority ( ) )
[4]: org. junit. assert. assertnull ( descriptor. getplacementpriority ( ) )

************

************
tgt: org . junit . assert . assertequals ( projectid , replydao . getprojectid ( dto . getid ( ) ) )
[0]: org. junit. assert. assertequals ( placementpriority. high, descriptor. getplacementpriority ( ) )
[1]: org. junit. assert. assertequals ( com. testwithspring. starter. assertions. task. tasktest. id, task. getid ( ) )
[2]: org. junit. assert. assertequals ( com. testwithspring. starter. assertions. task. taskstest. id, task. getid ( ) )
[3]: org. junit. assert. assertequals ( 1, task. getid ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( task. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( false , test . equals ( other ) )
[0]: org. junit. assert. assertequals ( 1, task. getid ( ) )
[1]: org. junit. assert. assertequals ( 0, cutoffday. getcutoffday ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, cutoffday. getcutoffday ( ). size ( ) )
[3]: org. junit. assert. assertequals ( null, cutoffday. getcutoffday ( ) )
[4]: org. junit. assert. assertequals ( 0, cutoffday. getcutoffday ( ). length )

************

************
tgt: org . junit . assert . assertnotnull ( user . getcreatedat ( ) )
[0]: org. junit. assert. assertequals ( 1, cutoffday. getcutoffday ( ). length )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( row, result. size ( ) )
[3]: org. junit. assert. assertequals ( expected, value. asstring ( ) )
[4]: org. junit. assert. assertequals ( 0, value. asstring ( ). length ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . equalto ( "ismyfield" ) )
[0]: org. junit. assert. assertequals ( null, value. asstring ( ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. tostring ( 1 ), value )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( message )
[4]: org. junit. assert. assertnull ( message )

************

************
tgt: org . junit . assert . assertfalse ( fi . helsinki . cs . tmc . cli . backend . tmcutil . hasconnection ( ctx ) )
[0]: org. junit. assert. assertequals ( message, error )
[1]: , message )
[2]: ) )
[3]: org. junit. assert. assertequals ( root. classname ( ), reachable. classname ( ) )
[4]: org. junit. assert. assertequals ( root, reachable )

************

************
tgt: org . junit . assert . assertequals ( java . lang . integer . valueof ( 1 ) , result )
[0]: org. junit. assert. assertequals ( world, reachable )
[1]: org. junit. assert. assertequals ( root. classname ( ), reachable. classname ( ) )
[2]: org. junit. assert. assertequals ( root. classname ( ), reachable )
[3]: org. junit. assert. asserttrue ( ( ( result. size ( ) ) == 2 ) )
[4]: org. junit. assert. asserttrue ( ( ( result. size ( ) ) == 1 ) )

************

************
tgt: org . junit . assert . assertequals ( "bar" , foo . gets ( ) )
[0]: org. junit. assert. asserttrue ( ( ( result. size ( ) ) == 0 ) )
[1]: org. junit. assert. asserttrue ( true )
[2]: ) )
[3]: org. junit. assert. assertequals ( output [ i ], result [ i ] )
[4]: org. junit. assert. assertarrayequals ( output [ i ], result [ i ] )

************

************
tgt: org . junit . assert . asserttrue ( ( counter > 0 ) )
[0]: org. junit. assert. assertequals ( result [ i ], output [ i ] )
[1]: org. junit. assert. assertarrayequals ( result, output [ i ] )
[2]: org. junit. assert. assertequals ( output [ i ], result [ i ]. length )
[3]: org. junit. assert. assertequals ( null, modelandview. getview ( ) )
[4]: org. junit. assert. assertequals ( view, modelandview. getview ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . oscm . app . ror . lserverconfigurationtest . privateip , lserverconfiguration . getprivateip ( ) )
[0]: org. junit. assert. assertequals ( 0, modelandview. getview ( ). length )
[1]: org. junit. assert. assertequals ( 0, modelandview. getview ( ). size ( )
[2]: ) )
[3]: org. junit. assert. asserttrue ( messages. getlist ( ). isempty ( ) )
[4]: org. junit. assert. assertnotnull ( messages )

************

************
tgt: org . junit . assert . asserttrue ( happened )
[0]: org. junit. assert. assertnotnull ( messages. getlist ( ) )
[1]: org. junit. assert. assertequals ( 1, messages. getlist ( ). length )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( name )
[4]: org. junit. assert. assertequals ( name, en. getname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( violations . isempty ( ) )
[0]: org. junit. assert. assertequals ( name, en. getstring ( ) )
[1]: org. junit. assert. assertequals ( name, en. name )
[2]: org. junit. assert. assertequals ( name, en. tostring ( ) )
[3]: org. junit. assert. assertequals ( 1, write ( 1 ) )
[4]: org. junit. assert. assertnotnull ( write ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( expectedprocessid , processid )
[0]: org. junit. assert. assertequals ( 0, write ( 1 ) )
[1]: org. junit. assert. assertequals ( 1, write ( 1 ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, write ( 1 ). length ( ) )
[3]: org. junit. assert. assertequals ( 1, sum )
[4]: org. junit. assert. assertequals ( 0, sum )

************

************
tgt: org . junit . assert . assertnull ( text )
[0]: org. junit. assert. assertequals ( sum, sum )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( sum ), 1 )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), sum )
[3]: org. junit. assert. assertequals ( location_2, tesths2configmanager. getconnectionproperties ( ) )
[4]: org. junit. assert. assertequals ( location_1, tesths2configmanager. getconnectionproperties ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , toolchains . size ( ) )
[0]: org. junit. assert. assertequals ( location_3, tesths2configmanager. getconnectionproperties ( ) )
[1]: org. junit. assert. assertequals ( location_1, tesths2configmanager. getconnectionproperties ( ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertarrayequals ( correctsplits, splits )
[4]: org. junit. assert. asserttrue ( java. util. arrays. equals ( correctsplits, splits ) )

************

************
tgt: org . junit . assert . assertnull ( propinfo )
[0]: org. junit. assert. assertequals ( correctsplits, splits )
[1]: org. junit. assert. assertarrayequals ( correctsplits, splits )
[2]: , splits )
[3]: org. junit. assert. assertnotnull ( socket. tobytearray ( socket ) )
[4]: org. junit. assert. assertnotnull ( socket. tobytearray ( ) )

************

************
tgt: org . junit . assert . asserttrue ( configurationaliasregistered )
[0]: org. junit. assert. assertnotnull ( socket. tobytearray ( mock ( java. io. inputstream. class ) ) )
[1]: org. junit. assert. assertnotnull ( socket )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, clientcanvas. hasredo ( ) )
[4]: org. junit. assert. assertequals ( 0, clientcanvas. hasredo ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ml . isempty ( ) )
[0]: org. junit. assert. assertnull ( clientcanvas. hasredo ( ) )
[1]: org. junit. assert. asserttrue ( clientcanvas. hasredo ( ) )
[2]: org. junit. assert. assertfalse ( clientcanvas. hasredo ( ). isempty ( ) )
[3]: org. junit. assert. assertnotnull ( e )
[4]: org. junit. assert. assertequals ( null, e )

************

************
tgt: org . junit . assert . assertfalse ( rv . properties ( ) . hasnext ( ) )
[0]: org. junit. assert. assertequals ( tc, e )
[1]: org. junit. assert. assertequals ( java. nio. bytebuffer. extractstoresequence ( serialized. array ( ) ), 1 )
[2]: org. junit. assert. assertequals ( org. apache. kafka. streams. state. internals. windowkeyschema. extractstoresequence ( serialized. get ( ) ), 1 )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), serialized. extractstoresequence ( new byte [ 1 ] ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), serialized. extractstoresequence ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( sentinel , in . readlong ( ) )
[0]: org. junit. assert. assertequals ( org. apache. kafka. streams. state. internals. windowkeyschema. extractstoresequence ( serialized. array ( ) ), 1 )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), metacard. geteffectivedate ( ) )
[2]: org. junit. assert. assertequals ( java. util. optional. empty ( ), metacard. geteffectivedate ( ) )
[3]: org. junit. assert. assertequals ( new java. util. arraylist ( now ), metacard. geteffectivedate ( ) )
[4]: org. junit. assert. assertequals ( null, metacard. geteffectivedate ( ) )

************

************
tgt: org . junit . assert . assertthat ( array . wrappedarray ( ) , equalto ( new boolean [ ] { true , false , true , true } ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( classifier )
[2]: org. junit. assert. assertequals ( 1, classifier. getid ( ) )
[3]: org. junit. assert. assertequals ( 1, classifier. getexitcode ( ) )
[4]: org. junit. assert. assertequals ( 1, classifier. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( poolstats . gettotalbeansdestroyed ( ) , org . hamcrest . corematchers . is ( ( - 1 ) ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, res. join ( ) )
[2]: org. junit. assert. assertequals ( expected, new java. net. url ( url ). extractpath ( url ) )
[3]: org. junit. assert. assertequals ( expected, new java. net. uri ( url ). extractpath ( url ) )
[4]: org. junit. assert. assertequals ( expected, new java. net. file ( url ). extractpath ( url ) )

************

************
tgt: org . junit . assert . asserttrue ( method . equals ( newmethod ) )
[0]: org. junit. assert. assertequals ( expected )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, ctp. eof ( ) )
[3]: org. junit. assert. assertequals ( 1, ctp. eof ( ) )
[4]: org. junit. assert. assertequals ( false, ctp. eof ( ) )

************

************
tgt: org . junit . assert . assertequals ( expecting , t . tostringtree ( ) )
[0]: org. junit. assert. assertequals ( org56138725000103, infoconsultacadastro. getcnpj ( ) )
[1]: org. junit. assert. assertequals ( "56138725000103, infoconsultacadastro. getcnpj ( ) )
[2]: org. junit. assert. assertequals (
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertthat ( query . count ( ) , org . hamcrest . corematchers . is ( 0l ) )
[0]: org. junit. assert. assertequals ( expectedttl, exception. getmessage ( ) )
[1]: org. junit. assert. assertequals ( expectedttl, exception )
[2]: org. junit. assert. assertequals ( expectedttl, result )
[3]: org. junit. assert. assertequals ( expectedttl, actualttl )
[4]: org. junit. assert. assertequals ( expectedttl, errors )

************

************
tgt: org . junit . assert . asserttrue ( descriptors . isempty ( ) )
[0]: org. junit. assert. assertthat ( info. hostconfig ( ). oomscoreadj ( 500 ), org. hamcrest. matchers. is ( 500 ) )
[1]: org. junit. assert. assertthat ( info. hostconfig ( ). oomscoreadj ( 500, true ), org. hamcrest. matchers. is ( 500 ) )
[2]: org. junit. assert. assertthat ( info. hostconfig ( ). oomscoreadj ( 500, 500 ), org. hamcrest. matchers. is ( 500 ) )
[3]: org. junit. assert. assertthat ( info. hostconfig ( ). oomscoreadj )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , counter . get ( ) )
[0]: org. junit. assert. assertequals ( 1, exitstatus. exitstatus ( ) )
[1]: org. junit. assert. assertequals ( 1, ls. size ( ) )
[2]: org. junit. assert. assertequals ( 0, ls. size ( ) )
[3]: org. junit. assert. assertnotnull ( ls )
[4]: org. junit. assert. assertequals ( 3, ls. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( new java. math. bigdecimal ( 1 ), result. getrevenueshare ( ) )
[2]: org. junit. assert. assertequals ( new java. math. bigdecimal ( "10 + 1 ), result. getrevenueshare ( ) )
[3]: org. junit. assert. assertnotnull ( result. getrevenueshare ( ) )
[4]: org. junit. assert. assertequals ( new java. math. bigdecimal ( "109 ), result. getrevenueshare ( ) )

************

************
tgt: org . junit . assert . assertfalse ( monitoringlocationsexists ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( method. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), method. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), method. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), method. tostring ( ) )

************

************
tgt: org . junit . assert . assertnull ( message . getmessageannotations ( ) )
[0]: org. junit. assert. assertequals ( 0, method. tostring ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, map. isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, map. isempty ( ) )
[3]: org. junit. assert. asserttrue ( map. isempty ( ) )
[4]: org. junit. assert. assertequals ( true, map. isempty ( ) )

************

************
tgt: org . junit . assert . assertfalse ( client . hasinitialresponse ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), map )
[1]: org. junit. assert. assertequals ( 1, map. size ( ) )
[2]: org. junit. assert. assertequals ( 0, map. size ( ) )
[3]: org. junit. assert. assertnotnull ( map )
[4]: org. junit. assert. assertequals ( null, map )

************

************
tgt: org . junit . assert . assertnotnull ( characteristics . cdi . tostring ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, latestcreatedusers. size ( ) )
[2]: org. junit. assert. assertnotnull ( representation. getvalue ( ) )
[3]: org. junit. assert. assertequals ( txaction, representation. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, representation. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( t1 , t2 )
[0]: org. junit. assert. assertequals ( null, representation. getvalue ( ) )
[1]: org. junit. assert. assertequals ( txaction. getvalue ( ), representation )
[2]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( ), results ( source ) )
[3]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( new java. lang. object ( ) ), results ( source ) )
[4]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( java. lang. object. class, source ), results ( source ) )

************

************
tgt: org . junit . assert . assertequals ( falseconcept , org . openmrs . module . webservices . rest . web . v1_0 . resource . openmrs1_8 . obsresource1_8 . getvalue ( obs ) )
[0]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( 0 ), results ( source ) )
[1]: org. junit. assert. assertnotnull ( results ( source ) )
[2]: org. junit. assert. assertequals ( generated, fromreflect )
[3]: org. junit. assert. assertequals ( generated, fromreflect. c )
[4]: org. junit. assert. assertequals ( generated, fromreflect. type )

************

************
tgt: org . junit . assert . assertnotnull ( bean )
[0]: org. junit. assert. assertequals ( generated, fromreflect. collection )
[1]: ) )
[2]: org. junit. assert. assertnull ( program_1. getthrowable ( ) )
[3]: org. junit. assert. assertnull ( program_1. getid ( ) )
[4]: org. junit. assert. assertnotnull ( program_1. collection ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ex . isprime ( 7 ) )
[0]: org. junit. assert. assertnull ( program_1. run ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, updated. getmarketplacetoorganizations ( ). size ( ) )
[3]: org. junit. assert. assertequals ( org, updated. getmarketplacetoorganizations ( ) )
[4]: org. junit. assert. assertequals ( 0, updated. getmarketplacetoorganizations ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( closecalled )
[0]: org. junit. assert. assertequals ( 1, updated. getmarketplacetoorganizations ( ). count ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( projectnames. isempty ( ) )
[3]: org. junit. assert. asserttrue ( result. passedvalidation ( ) )
[4]: org. junit. assert. assertthat ( ( createdplayer == defensiveplayerwithdjandjavadevskills ), org. hamcrest. corematchers. is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( "" , style . getsizestarttext ( ) )
[0]: org. junit. assert. assertthat ( ( createdplayer!= defensiveplayerwithdjandjavadevskills ), org. hamcrest. corematchers. is ( true ) )
[1]: org. junit. assert. assertthat ( ( createdplayer == defensiveplayerwithdjandjavadevskills ), org. hamcrest. corematchers. is ( false ) )
[2]: org. junit. assert. assertequals ( defensiveplayerwithdjandjavadevskills, createdplayer )
[3]: org. junit. assert. assertequals ( ( defensiveplayerwithdjandjavadevskills ), createdplayer )
[4]: org. junit. assert. assertequals ( erreventtype, event. geteventtype ( ) )

************

************
tgt: org . junit . assert . assertsame ( cm , org . phenotips . components . componentmanagerregistry . getcontextcomponentmanager ( ) )
[0]: org. junit. assert. assertequals ( me, event. geteventtype ( ) )
[1]: org. junit. assert. assertequals ( meventtype, event. geteventtype ( ) )
[2]: org. junit. assert. assertequals ( me, event )
[3]: org. junit. assert. assertequals ( meventtype, event )
[4]: org. junit. assert. assertequals ( 1, runtime. exitstatus ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new byte [ ] { 1 , 2 } , str . getbytes ( ) )
[0]: org. junit. assert. assertequals ( true, xmlhelpers. validatesignature ( assertion ) )
[1]: org. junit. assert. assertequals ( null, xmlhelpers. validatesignature ( assertion ) )
[2]: org. junit. assert. assertequals ( assertion, xmlhelpers. validatesignature ( assertion ) )
[3]: org. junit. assert. assertnotnull ( xmlhelpers. validatesignature ( assertion ) )
[4]: org. junit. assert. assertequals ( false, xmlhelpers. validatesignature ( assertion ) )

************

************
tgt: org . junit . assert . assertnotnull ( json )
[0]: org. junit. assert. assertnotnull ( hellorolesallowed ( ) )
[1]: org. junit. assert. assertequals ( 1, hellorolesallowed ( ) )
[2]: org. junit. assert. assertequals ( 0, hellorolesallowed ( ) )
[3]: org. junit. assert. assertequals ( null, hellorolesallowed ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( status . isok ( ) )
[0]: org. junit. assert. assertnotnull ( newvalue )
[1]: org. junit. assert. assertnull ( newvalue )
[2]: ) )
[3]: )
[4]: 

************

************
tgt: org . junit . assert . assertthat ( indicaties . size ( ) , org . hamcrest . matchers . is ( 0 ) )
[0]: org. junit. assert. assertfalse ( consumer. isstopped ( ) )
[1]: org. junit. assert. assertnotnull ( nullconverted )
[2]: org. junit. assert. assertequals ( avrostringrecord, nullconverted )
[3]: org. junit. assert. assertequals ( avrobooleanrecord, nullconverted )
[4]: org. junit. assert. assertequals ( avrofloatrecord, nullconverted )

************

************
tgt: org . junit . assert . assertnotnull ( key )
[0]: org. junit. assert. assertequals ( avrointeger, nullconverted )
[1]: org. junit. assert. assertequals ( 1, anaccount. getpoints ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, anaccount. getpoints ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 2, anaccount. getpoints ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 3, anaccount. getpoints ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedimmutablemultimap , selectedmultimap )
[0]: org. junit. assert. assertequals ( 4, anaccount. getpoints ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( bscl )
[2]: org. junit. assert. assertequals ( 1, bscl. count ( ) )
[3]: org. junit. assert. assertequals ( 1, bscl. count )
[4]: org. junit. assert. assertnotnull ( bscl. s )

************

************
tgt: org . junit . assert . assertequals ( httpcontent . getbody ( ) , request . getbody ( ) )
[0]: org. junit. assert. assertnull ( bscl )
[1]: org. junit. assert. assertequals ( 0, checksameanalysis ( jsontwitterinputfile, tokenoutjson, m, java. lang. string. class ) )
[2]: org. junit. assert. assertequals ( tokenoutjson, checksameanalysis ( jsontwitterinputfile, tokenoutjson, m, java. lang. string. class ) )
[3]: org. junit. assert. assertequals ( tokenoutjson, checksameanalysis ( jsontwitterinputfile, tokenoutjson, m, org. openimaj. twitter. api. utils. tokenoutjson ) )
[4]: org. junit. assert. assertequals ( 0, checksameanalysis ( jsontwitterinputfile, tokenoutjson, m, org. openimaj. twitter. generaljsontwittercity. class ) )

************

************
tgt: org . junit . assert . assertequals ( expecting , result )
[0]: org. junit. assert. assertequals ( tokenoutjson, checksameanalysis ( jsontwitterinputfile, tokenoutjson, m, org. openimaj. twitter. generaljsontwittercity. class ) )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( expected, full )
[3]: org. junit. assert. assertequals ( expected, list )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertequals ( java . lang . string . format ( "could<sp>not<sp>find<sp>storage<sp>unit<sp>in<sp>\"%s\"<sp>storage<sp>for<sp>the<sp>business<sp>object<sp>data<sp>{%s}." , org . finra . herd . service . helper . storage_name , org . finra . herd . service . abstractservicetest . business_object_data_key_as_string ) , e . getmessage ( ) )
[0]: org. junit. assert. assertequals ( expected, reviewer )
[1]: org. junit. assert. assertfalse ( asyncgetregions ( tablename ) )
[2]: org. junit. assert. asserttrue ( asyncgetregions ( tablename ) )
[3]: org. junit. assert. assertnull ( asyncgetregions ( tablename ) )
[4]: org. junit. assert. assertequals ( 1, hints. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( server . getpagingmanager ( ) )
[0]: org. junit. assert. assertequals ( 2, hints. size ( ) )
[1]: org. junit. assert. assertequals ( 0, hints. size ( ) )
[2]: org. junit. assert. assertequals ( 3, hints. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertthat ( limboplayer. gettimeouttask ( ), org. hamcrest. matchers. equalto ( 18 ) )

************

************
tgt: org . junit . assert . assertequals ( admvalidator . length_comment , domainobject . getcomment ( ) . length ( ) )
[0]: org. junit. assert. assertthat ( limboplaytask. gettimeouttask ( ), org. hamcrest. matchers. equalto ( 18 ) )
[1]: org. junit. assert. assertthat ( limboplayer. gettimeouttask ( ), org. hamcrest. matchers. is ( 18 ) )
[2]: org. junit. assert. assertthat ( limboplayer. gettimeouttask ( ), org. hamcrest. corematchers. equalto ( 18 ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( clock. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( id , user . getid ( ) )
[0]: org. junit. assert. asserttrue ( ( ( clock. size ( ) ) == 0 ) )
[1]: org. junit. assert. asserttrue ( cb. isempty ( ) )
[2]: org. junit. assert. asserttrue ( java. util. arrays. isempty ( clock ) )
[3]: ) )
[4]: org. junit. assert. assertfalse ( context. isredirect ( ) )

************

************
tgt: org . junit . assert . assertfalse ( com . ctrip . xpipe . utils . objectutils . equals ( endpoint1 , endpoint2 ) )
[0]: org. junit. assert. assertfalse ( collection. isredirect ( ) )
[1]: org. junit. assert. assertfalse ( subject. isredirect ( ) )
[2]: org. junit. assert. assertfalse ( event. isredirect ( ) )
[3]: org. junit. assert. assertfalse ( repository. isredirect ( ) )
[4]: org. junit. assert. assertequals ( true, converteddocument. exists ( ) )

************

************
tgt: org . junit . assert . assertequals ( qa . qcri . aidr . dbmanager . ejb . remote . facade . imp . testnominallabelresourcefacadeimp . nominallabel . getname ( ) , result . getname ( ) )
[0]: org. junit. assert. assertequals ( 1, converteddocument. exists ( ) )
[1]: org. junit. assert. assertequals ( 0, converteddocument. exists ( ) )
[2]: org. junit. assert. assertequals ( null, converteddocument. exists ( ) )
[3]: org. junit. assert. assertequals ( java. util. optional. empty ( ), converteddocument )
[4]: org. junit. assert. assertequals ( 1, ( initial + 1 ) )

************

************
tgt: org . junit . assert . assertequals ( testmessagemock . flow , response )
[0]: org. junit. assert. assertequals ( 0, ( initial + 1 ) )
[1]: org. junit. assert. assertequals ( 1, ( initial + 1 ) ) ;
[2]: org. junit. assert. assertequals ( ( initial + 1 ), criteriondao )
[3]: ) )
[4]: org. junit. assert. assertequals ( "", workspaceproject. getname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( sstid . typecheck ( alphanum , alphanum , ba ) )
[0]: org. junit. assert. assertequals ( "", workspaceproject. getname ( ) )
[1]: org. junit. assert. assertequals ( "". trim ( ), workspaceproject. getname ( ) )
[2]: org. junit. assert. assertequals ( "", workspaceproject. getname ( ). trim ( ) )
[3]: org. junit. assert. assertequals ( "", workspaceproject. getname ( ). tostring ( ) )
[4]: org. junit. assert. assertnotnull ( class1. testoclisinvalid02 ( ) )

************

************
tgt: org . junit . assert . assertthat ( recievedstatus , org . hamcrest . matchers . is ( unauthorized ) )
[0]: org. junit. assert. assertnotnull ( class1 )
[1]: org. junit. assert. assertequals ( 0, class1. testoclisinvalid02 ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), class1 )
[3]: org. junit. assert. assertnotnull ( class1. testoclisinvalid01 ( ) )
[4]: org. junit. assert. asserttrue ( token. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( javax . servlet . http . httpservletresponse . sc_forbidden , response . getstatus ( ) )
[0]: org. junit. assert. assertfalse ( token. isempty ( ) )
[1]: org. junit. assert. asserttrue ( token!= null ) )
[2]: org. junit. assert. asserttrue ( token!= null )
[3]: ) )
[4]: org. junit. assert. assertnull ( lock )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . long ( 1 ) , b . getid ( ) )
[0]: org. junit. assert. assertnotnull ( lock )
[1]: org. junit. assert. assertnull ( lock, lock )
[2]: org. junit. assert. assertnull ( lock, connection )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, map. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( list . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( expresult, result )
[1]: org. junit. assert. assertequals ( expresult, result. trim ( ) )
[2]: org. junit. assert. assertequals ( result, expresult )
[3]: org. junit. assert. assertequals ( 1, result. length ( ) )
[4]: org. junit. assert. assertequals ( expresult, results )

************

************
tgt: org . junit . assert . assertnull ( reversedlinesfilereader . readline ( ) )
[0]: org. junit. assert. assertequals ( ( before + 1 ), after )
[1]: org. junit. assert. assertequals ( before, after )
[2]: org. junit. assert. assertequals ( ( before - 1 ), after )
[3]: org. junit. assert. assertequals ( ( before + 1 ), before )
[4]: org. junit. assert. assertequals ( ( after + 1 ), after )

************

************
tgt: org . junit . assert . assertthat ( target . getpackets ( ) , org . hamcrest . corematchers . is ( packets ) )
[0]: org. junit. assert. assertnull ( instance. formatmessage ( record ) )
[1]: org. junit. assert. assertnotnull ( instance. formatmessage ( record ) )
[2]: org. junit. assert. assertnotnull ( testformatmessagewith formatmessage ( record ) )
[3]: org. junit. assert. assertnotnull ( formatmessage ( record ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( connection , otherconnection )
[0]: org. junit. assert. assertnotnull ( irodsfile. size ( ) )
[1]: org. junit. assert. assertnotnull ( irodsfileforsecondaryuser )
[2]: org. junit. assert. assertnotnull ( irodsfile. get ( ) )
[3]: org. junit. assert. assertnotnull ( irodsfile. isempty ( ) )
[4]: org. junit. assert. assertnotnull ( irodsfileinformation )

************

************
tgt: org . junit . assert . asserttrue ( ddmstructurelinks . isempty ( ) )
[0]: org. junit. assert. assertarrayequals ( slist, slist )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( okio. testutil. segment_size ), segmentsizes )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( size ), segmentsizes )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), segmentsizes )
[4]: org. junit. assert. assertequals ( list ( okio. testutil. segment_size, size ), segmentsizes )

************

************
tgt: org . junit . assert . assertequals ( true , io . indexr . io . byteslice . checkequals ( bb , dp ) )
[0]: org. junit. assert. assertequals ( 1, segmentsizes. size ( ) )
[1]: org. junit. assert. assertnotnull ( modelfactory )
[2]: org. junit. assert. asserttrue ( ( modelfactory == null ) )
[3]: org. junit. assert. assertnull ( modelfactory )
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( jsonmap , marshall )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, new java. net. url ( url ) )
[2]: org. junit. assert. assertequals ( expected, new java. net. uri ( url ) )
[3]: org. junit. assert. assertequals ( expected, new java. net. url ( url ). tostring ( ) )
[4]: org. junit. assert. assertequals ( expected )

************

************
tgt: org . junit . assert . asserttrue ( lease2 . isvalidandcontiguous ( lease1 ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( org. mayocat. addons. util. addonutils. islistwithkeyanddisplayvalues ( properties ) )
[2]: org. junit. assert. assertsame ( properties, org. mayocat. addons. util. addonutils. islistwithkeyanddisplayvalues ( properties ) )
[3]: org. junit. assert. assertequals ( properties, org. mayocat. addons. util. addonutils. islistwithkeyanddisplayvalues ( properties ) )
[4]: org. junit. assert. assertequals ( 1, org. mayocat. addons. util. addonutils. islistwithkeyanddisplayvalues ( properties ) )

************

************
tgt: org . junit . assert . assertequals ( ( prefix + ( expected ) ) , actual )
[0]: ) )
[1]: org. junit. assert. assertfalse ( matcher. matches ( null ) )
[2]: org. junit. assert. assertthat ( com. spotify. apollo. httpservice. httpservicetest. counter. get ( ), org. hamcrest. matchers. is ( 1 ) )
[3]: org. junit. assert. assertequals ( 1, buttons. size ( ) )
[4]: org. junit. assert. assertequals ( 0, buttons. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( s1 == deserialized ) )
[0]: org. junit. assert. assertnotnull ( subject. controleer ( new nl. bzk. migratiebrp. synchronisatie. runtime. service. synchronisatie. verwerker. context. verwerkingscontext ( null, null, null, null ) ) )
[1]: org. junit. assert. assertnull ( org. apache. jackrabbit. oak. osgi. osgiutil. lookup ( context, null ) )
[2]: org. junit. assert. assertnull ( org. apache. jackrabbit. oak. osgi. osgiutil. lookup ( context, ""name"" ) )
[3]: org. junit. assert. assertnull ( org. apache. jackrabbit. oak. osgi. osgiutil. lookup ( context, name ) )
[4]: org. junit. assert. assertnull ( org. apache. jackrabbit. oak. osgi. osgiutil. lookup ( context, context ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: type ) )
[1]: org. junit. assert. assertequals ( 1, payloadconverter. getpayloadconverter ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, payloadconverter. getpayloadconverter ( ) )
[3]: org. junit. assert. assertequals ( new java. util. arraylist ( ), payloadconverter. getpayloadconverter ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), payloadconverter )

************

************
tgt: org . junit . assert . assertthat ( rssizeof ( rs ) , org . hamcrest . matchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), payloadconverter. getpayloadconverter )
[1]: org. junit. assert. assertnotnull ( version. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), version. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), version. tostring ( ) )
[4]: org. junit. assert. assertequals ( expected, version. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( bot . isloggedin ( ) )
[0]: . tostring ( ) )
[1]: org. junit. assert. assertequals ( certificatehash, certificatehash )
[2]: org. junit. assert. assertnotnull ( certificatehash )
[3]: org. junit. assert. assertarrayequals ( certificatehash, certificatehash )
[4]: org. junit. assert. assertarrayequals ( certificateobject, certificatehash )

************

************
tgt: org . junit . assert . assertequals ( name , cons . getname ( ) )
[0]: org. junit. assert. assertarrayequals ( certificatestring, certificatehash )
[1]: org. junit. assert. assertequals ( 1, integer. get ( ) )
[2]: org. junit. assert. assertequals ( 0, integer. get ( ) )
[3]: org. junit. assert. assertequals ( 3, integer. get ( ) )
[4]: org. junit. assert. assertequals ( 2, integer. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , list . size ( ) )
[0]: org. junit. assert. assertequals ( 1, int. get ( ) )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( "", result )
[3]: org. junit. assert. assertequals ( "", result )
[4]: type ) { result )

************

************
tgt: org . junit . assert . assertequals ( testfilename , filenames )
[0]: type ) )
[1]: org. junit. assert. assertarrayequals ( signature, signature2 )
[2]: org. junit. assert. assertnotnull ( signature2 )
[3]: org. junit. assert. assertequals ( signature, signature2 )
[4]: org. junit. assert. assertnotnull ( signature )

************

************
tgt: org . junit . assert . assertnotnull ( barputmod )
[0]: org. junit. assert. assertarrayequals ( signature, signatures2 )
[1]: org. junit. assert. assertequals ( 1, opsservice. getnamesvrlist ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, opsservice. getnamesvrlist ( ). size ( ) )
[3]: org. junit. assert. assertequals ( testchangenamesvraddr, opsservice. getnamesvrlist ( ) )
[4]: org. junit. assert. assertequals ( 3, opsservice. getnamesvrlist ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , json , an . tojson ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, permissions. tostring ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), permissions )
[3]: org. junit. assert. assertequals ( 1, permissions. tostring ( ). size ( ) )
[4]: org. junit. assert. assertequals ( direct, proxied )

************

************
tgt: org . junit . assert . asserttrue ( com . beijunyi . parallelgit . utils . gitfileutils . issymboliclink ( "/test_file.txt" , commit . getname ( ) , repo ) )
[0]: org. junit. assert. assertequals ( direct. length, proxied. length ( ) )
[1]: org. junit. assert. assertfalse ( proxied. exists ( ) )
[2]: org. junit. assert. assertsame ( direct, proxied )
[3]: org. junit. assert. assertequals ( direct. length ( ), proxied. length )
[4]: org. junit. assert. assertfalse ( within. tryadd ( toobig ) )

************

************
tgt: org . junit . assert . assertnotnull ( validator )
[0]: org. junit. assert. asserttrue ( within. tryadd ( toobig ) )
[1]: org. junit. assert. asserttrue ( within. tryadd ( batch ) )
[2]: org. junit. assert. assertfalse ( within. tryadd ( batch ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, projectruleset. getfilecount ( ) )

************

************
tgt: org . junit . assert . assertequals ( 100 , p1 . getport ( ) )
[0]: org. junit. assert. assertequals ( 1, project ruleset. getfilecount ( ) )
[1]: org. junit. assert. assertequals ( 1, projectvia. getfilecount ( ) )
[2]: org. junit. assert. assertequals ( 0, projectruleset. getfilecount ( ) )
[3]: org. junit. assert. assertequals ( 1, projectancel. getfilecount ( ) )
[4]: org. junit. assert. assertnotnull ( str )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertnull ( str )
[1]: org. junit. assert. assertequals ( str, newarraylist ( ) )
[2]: , str )
[3]: ) )
[4]: org. junit. assert. assertequals ( ""test"", msg. gettext ( ) )

************

************
tgt: org . junit . assert . assertequals ( "ateststring" , classundertest . getprefix ( ) )
[0]: org. junit. assert. assertequals ( ""test"", msg. getid ( ) )
[1]: org. junit. assert. assertequals ( ""test"", msg. gettext ( )
[2]: org. junit. assert. assertequals ( ""test"", msg. gettext ( ) )
[3]: org. junit. assert. assertequals ( ""test"", msg. text )
[4]: org. junit. assert. assertequals ( 1, testlist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( 0, testlist. size ( ) )
[1]: org. junit. assert. assertnotnull ( testlist )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), testlist )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( location. getcountry ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , employees . size ( ) )
[0]: org. junit. assert. assertequals ( location. getcountry ( ), null )
[1]: org. junit. assert. assertnull ( location. getcountry ( ) )
[2]: org. junit. assert. assertequals ( location. getcountry ( ), 0 )
[3]: org. junit. assert. assertnotnull ( location )
[4]: org. junit. assert. assertnull ( out )

************

************
tgt: org . junit . assert . assertequals ( numero , importacaoadicao . getnumero ( ) )
[0]: org. junit. assert. assertequals ( 1, session. haspendingchanges ( ) )
[1]: org. junit. assert. assertfalse ( session. haspendingchanges ( ) )
[2]: org. junit. assert. assertfalse ( root. haspendingchanges ( ) )
[3]: org. junit. assert. assertnull ( haspendingchanges ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , markers . length )
[0]: org. junit. assert. assertarrayequals ( data, written )
[1]: org. junit. assert. assertarrayequals ( data, written [ i ] )
[2]: org. junit. assert. assertarrayequals ( data, written [ ( i ++ ) ] )
[3]: org. junit. assert. assertarrayequals ( data, written )
[4]: org. junit. assert. assertarrayequals ( data )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. asserttrue ( isvalid )
[1]: org. junit. assert. assertthat ( a. multiply ( b ), org. hamcrest. corematchers. is ( c ) )
[2]: org. junit. assert. assertthat ( a, org. hamcrest. corematchers. is ( b. multiply ( c ) ) )
[3]: org. junit. assert. assertthat ( a. multiply ( b ), org. hamcrest. corematchers. is ( b ) )
[4]: org. junit. assert. assertthat ( a, org. hamcrest. corematchers. is ( b ) )

************

************
tgt: org . junit . assert . assertequals ( "darwin" , os )
[0]: org. junit. assert. assertthat ( a. multiply ( b ), org. hamcrest. corematchers. is ( 0.0 ) )
[1]: org. junit. assert. assertnull ( testconnectionprovider1 )
[2]: org. junit. assert. assertequals ( 1, docksbars ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( docksbars ( ) )
[4]: org. junit. assert. assertnull ( docksbars ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , errorcount ( bijhouderfiatteringsuitzondering ) )
[0]: org. junit. assert. assertequals ( 0, docksbars. getdocksbars ( ). length )
[1]: org. junit. assert. assertequals ( 1, docksbars. getdocksbars ( ). length )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( java. lang. integer. class, result )

************

************
tgt: org . junit . assert . assertequals ( expecteddate , actualdate )
[0]: )
[1]: 
[2]: org. junit. assert. assertarrayequals ( assertion, msg )
[3]: org. junit. assert. assertarrayequals ( input, ty ty )
[4]: org. junit. assert. assertarrayequals ( input, ty )

************

************
tgt: org . junit . assert . assertfalse ( java . lang . string . format ( "foo-/" 1 , name ) , com . vaadin . flow . internal . customelementnamevalidator . iscustomelementname ( name ) )
[0]: org. junit. assert. assertarrayequals ( expected, ty )
[1]: org. junit. assert. assertarrayequals ( operationnames, ty )
[2]: org. junit. assert. asserttrue ( foundtest1 )
[3]: org. junit. assert. assertnotnull ( foundtest1 )
[4]: org. junit. assert. assertnotnull ( envvars )

************

************
tgt: org . junit . assert . assertfalse ( iterator . hasnext ( ) )
[0]: org. junit. assert. asserttrue ( contains )
[1]: org. junit. assert. assertnotnull ( foundtest )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( ( ks == ks2 ) )
[0]: org. junit. assert. assertequals ( 0, result. length )
[1]: ) )
[2]: org. junit. assert. assertequals ( uuid, getter. get ( uuid ) )
[3]: org. junit. assert. assertnull ( getter. get ( uuid ) )
[4]: org. junit. assert. assertequals ( b, a )

************

************
tgt: org . junit . assert . assertequals ( teststring , sw . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, a. count ( ) )
[1]: org. junit. assert. assertequals ( 1, a. size ( ) )
[2]: org. junit. assert. assertequals ( 1, a. counter )
[3]: org. junit. assert. assertequals ( 1, a. length )
[4]: org. junit. assert. asserttrue ( cause. getclass ( ). equals ( org. eclipse. gef. geometry. planar. integer. class ) )

************

************
tgt: org . junit . assert . assertequals ( true , polyelement . isclosed ( ) )
[0]: org. junit. assert. asserttrue ( cause. getclass ( ). equals ( org. eclipse. gef. geometry. planar. geometry. class ) )
[1]: org. junit. assert. asserttrue ( cause. getclass ( ). equals ( org. eclipse. gef. geometry. planar. classes. class ) )
[2]: org. junit. assert. asserttrue ( cause. equals ( cause ) )
[3]: org. junit. assert. asserttrue ( cause. equals ( null ) )
[4]: org. junit. assert. assertnotnull ( launchpad )

************

************
tgt: org . junit . assert . assertthat ( target . matchexactly ( flow ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( 1, launchpad. count )
[1]: org. junit. assert. assertequals ( 1, launchpad. type )
[2]: org. junit. assert. assertequals ( builder, launchpad )
[3]: _2 ) )
[4]: org. junit. assert. assertequals ( 1, counttracks ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( sink )
[0]: org. junit. assert. assertequals ( 0, counttracks ( ) )
[1]: org. junit. assert. assertequals ( 1l, counttracks ( ) )
[2]: org. junit. assert. assertequals ( 0l, counttracks ( ) )
[3]: org. junit. assert. assertequals ( 1, countstracks ( ) )
[4]: org. junit. assert. assertequals ( 0, period1. compareto ( period2 ) )

************

************
tgt: org . junit . assert . assertnotnull ( options . getsuboptions ( fr . opensagres . xdocreport . converter . converterregistry . class ) )
[0]: org. junit. assert. assertequals ( 1, period1. compareto ( period2 ) )
[1]: org. junit. assert. assertequals ( 0, period2. compareto ( period1 ) )
[2]: org. junit. assert. assertequals ( 1, period2. compareto ( period1 ) )
[3]: org. junit. assert. asserttrue ( ( ( period1. compareto ( period2 ) ) == 0 ) )
[4]: org. junit. assert. assertequals ( id, id. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedmethod , m )
[0]: org. junit. assert. assertnotnull ( id. getvalue ( ) )
[1]: org. junit. assert. assertnull ( id. getvalue ( ) )
[2]: org. junit. assert. assertequals ( id. getvalue ( ), id )
[3]: ) )
[4]: org. junit. assert. assertequals ( true, empty )

************

************
tgt: org . junit . assert . assertequals ( nl . bzk . brp . levering . lo3 . tabel . woonplaatsconversietabeltest . x , subject . converteernaarlo3 ( nl . bzk . brp . levering . lo3 . tabel . woonplaatsconversietabeltest . x ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( 1, context. size ( ) )
[2]: org. junit. assert. assertequals ( 1, environment. size ( ) )
[3]: org. junit. assert. assertequals ( 1, size )
[4]: org. junit. assert. assertequals ( 1, ident_14. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( lis . size ( ) ) == 1 ) )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertnotnull ( collection )
[2]: org. junit. assert. assertnotnull ( s )
[3]: org. junit. assert. assertnotnull ( queue )
[4]: type ) { }

************

************
tgt: org . junit . assert . assertequals ( g1 , g2 )
[0]: org. junit. assert. assertequals ( com. google. cloud. bigquery. tabletest. empty_insert_all_response, response )
[1]: org. junit. assert. assertnotnull ( response )
[2]: org. junit. assert. assertnull ( response )
[3]: org. junit. assert. assertequals ( response, table. getbestmodel ( ) )
[4]: org. junit. assert. assertequals ( response, table )

************

************
tgt: org . junit . assert . assertnull ( token )
[0]: org. junit. assert. assertequals ( org. calrissian. mango. io. serializablestest. testobject, serialized )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), serialized )
[2]: org. junit. assert. assertequals ( 1, serialized. length )
[3]: org. junit. assert. assertequals ( serializer, deserialize ( serialized, null ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( true , true )
[0]: org. junit. assert. assertfalse ( context. isindebugmode ( ) )
[1]: org. junit. assert. assertnull ( context. isindebugmode ( ) )
[2]: org. junit. assert. assertnotnull ( context. isindebugmode ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( ( ! ( dropdown . isdndenabled ( ) ) ) )
[0]: org. junit. assert. assertfalse ( issupported )
[1]: org. junit. assert. assertequals ( exception, e. getcause ( ) )
[2]: org. junit. assert. assertequals ( e. getcause ( ), exception )
[3]: org. junit. assert. assertsame ( exception, e. getcause ( ) )
[4]: org. junit. assert. assertequals ( exceptions, e. getcause ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , posts . size ( ) )
[0]: org. junit. assert. assertequals ( exception, e. getcause ( ) ) )
[1]: org. junit. assert. assertequals ( 1, count )
[2]: org. junit. assert. assertequals ( count, 1 )
[3]: org. junit. assert. assertequals ( 0, count )
[4]: org. junit. assert. assertequals ( 3, count )

************

************
tgt: org . junit . assert . assertequals ( new org . finra . herd . model . api . xml . s3keyprefixinformation ( expecteds3keyprefix ) , results3keyprefixinformation )
[0]: org. junit. assert. assertequals ( count, 2 )
[1]: org. junit. assert. assertnotnull ( stack. gettext ( ) )
[2]: org. junit. assert. assertequals ( null, stack. gettext ( ) )
[3]: org. junit. assert. assertnull ( stack. gettext ( ) )
[4]: org. junit. assert. assertequals ( 0, stack. gettext ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , counter . getbeforefiletreewalkcount ( ) )
[0]: org. junit. assert. assertequals ( 0, stack. gettext ( ). length )
[1]: org. junit. assert. assertequals ( count, completioncount. get ( ) )
[2]: org. junit. assert. assertequals ( 1, completioncount. get ( ) )
[3]: org. junit. assert. assertequals ( 0, completioncount. get ( ) )
[4]: org. junit. assert. assertequals ( 100, completioncount. get ( ) )

************

************
tgt: org . junit . assert . assertnull ( variablevaluefromop )
[0]: . get ( ) )
[1]: org. junit. assert. asserttrue ( constraint. equals ( name ) )
[2]: org. junit. assert. assertfalse ( constraint. equals ( name ) )
[3]: org. junit. assert. asserttrue ( name. equals ( name ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( true , ctx . haslogin ( ) )
[0]: )
[1]: org. junit. assert. asserttrue ( muleconfiguration. iscontainermode ( ) )
[2]: org. junit. assert. assertnotnull ( muleconfiguration. iscontainermode ( ) )
[3]: org. junit. assert. assertequals ( true, muleconfiguration. iscontainermode ( ) )
[4]: org. junit. assert. assertfalse ( muleconfiguration. iscontainermode ( ) )

************

************
tgt: org . junit . assert . assertequals ( date , parsed )
[0]: ) )
[1]: org. junit. assert. assertthat ( target. tostring ( ), org. hamcrest. matchers. is ( expected. tostring ( ) ) )
[2]: org. junit. assert. assertthat ( target. tostring ( ), org. hamcrest. matchers. is ( objcsource. tostring ( ) ) )
[3]: org. junit. assert. assertthat ( target. build ( ), org. hamcrest. matchers. equalto ( expected ) )
[4]: org. junit. assert. assertthat ( target. tostring ( ), org. hamcrest. matchers. is ( expected ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , children . getsize ( ) )
[0]: org. junit. assert. assertthat ( target. tostring ( ), org. hamcrest. matchers. is ( objcsource. getname ( ) ) )
[1]: org. junit. assert. assertequals ( 1, org. openmrs. module. webservices. rest. test. util. getresultssize ( result ) )
[2]: org. junit. assert. assertequals ( 0, org. openmrs. module. webservices. rest. test. util. getresultssize ( result ) )
[3]: org. junit. assert. assertequals ( 4, org. openmrs. module. webservices. rest. test. util. getresultssize ( result ) )
[4]: org. junit. assert. assertequals ( 3, org. openmrs. module. webservices. rest. test. util. getresultssize ( result ) )

************

************
tgt: org . junit . assert . assertequals ( expected , sw . tostring ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. hashcode ( ), other. hashcode ( ) )
[1]: org. junit. assert. assertthat ( other. hashcode ( ), org. hamcrest. core. is. is ( name. hashcode ( ) ) )
[2]: org. junit. assert. assertequals ( java. lang. integer. hashcode ( ), other. hashcode ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. hashcode ( ), other. hashcode ( ) )
[4]: org. junit. assert. assertequals ( 0, other. hashcode ( ) )

************

************
tgt: org . junit . assert . assertfalse ( b )
[0]: org. junit. assert. assertequals ( 0, ball. getradius ( ) )
[1]: org. junit. assert. assertequals ( 0, ball. getradius ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, ball. getradius ( ). length )
[3]: org. junit. assert. assertequals ( 1, ball. getradius ( ) )
[4]: org. junit. assert. assertequals ( 1, hull. getvertices ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( groovydocmojo . groovyversionsupportsaction ( ) )
[0]: org. junit. assert. assertequals ( 1, hull. getvertices ( ). length )
[1]: org. junit. assert. assertequals ( 1, hull. getvertices ( ). count ( ) )
[2]: org. junit. assert. assertequals ( 0, hull. getvertices ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, hull. getvertices ( ). length )
[4]: org. junit. assert. assertthat ( servers. size ( ), org. hamcrest. core. is. is ( 3 ) )

************

************
tgt: org . junit . assert . assertthat ( responsebody , org . hamcrest . corematchers . equalto ( new java . lang . string ( response , "utf-8" ) ) )
[0]: org. junit. assert. assertfalse ( same )
[1]: org. junit. assert. assertequals ( result. tostring ( ), charsets. utf_8 )
[2]: org. junit. assert. assertequals ( result. tostring ( ), encodings. utf_8 )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnotnull ( result. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( matches ( header ) )
[0]: org. junit. assert. assertequals ( result. tostring ( ), expected )
[1]: org. junit. assert. assertequals ( 1, overtreders. size ( ) )
[2]: org. junit. assert. assertequals ( opdefs, keycaptor. getvalue ( ) )
[3]: org. junit. assert. assertequals ( operationdefs, keycaptor. getvalue ( ) )
[4]: org. junit. assert. assertnotnull ( keycaptor. getvalue ( ) )

************

************
tgt: org . junit . assert . assertthat ( sourcedir )
[0]: org. junit. assert. assertequals ( opdefs, keycaptor. getvalue ( ). get ( ) )
[1]: org. junit. assert. assertequals ( opdefs, keycaptor. getvalue ( ). get ( 0 ) )
[2]: org. junit. assert. assertequals ( ref1, object. getstringvalue ( ) )
[3]: org. junit. assert. assertequals ( ref2, object. getstringvalue ( ) )
[4]: org. junit. assert. assertnotnull ( object. getstringvalue ( ) )

************

************
tgt: org . junit . assert . asserttrue ( lastname . equals ( "levin" ) )
[0]: org. junit. assert. assertequals ( ref1. getstringvalue ( ), object )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( schema. istrackingchanges ( ) )
[3]: org. junit. assert. assertnotnull ( failed )
[4]: org. junit. assert. assertnotnull ( schema )

************

************
tgt: org . junit . assert . assertequals ( array [ i ] , buffer . get ( i ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, mcall. gettotalamount ( ) )
[3]: org. junit. assert. assertequals ( 0, methodexecutor. gettotalamount ( ) )
[4]: org. junit. assert. assertequals ( null, mcall. gettotalamount ( ) )

************

************
tgt: org . junit . assert . assertequals ( session1 , pulled )
[0]: org. junit. assert. assertequals ( 1, mcall. gettotalamount ( ) )
[1]: org. junit. assert. assertnull ( mcall. gettotalamount ( ) )
[2]: org. junit. assert. assertequals ( mockedelement, log. tostring ( ) )
[3]: org. junit. assert. assertequals ( mockedelement. tostring ( ), log. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. format ( mockedelement ), log. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , meldingen . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( mockedelement ), log. tostring ( ) )
[1]: ) )
[2]: org. junit. assert. assertsame ( httpresponse. sc_ok, nextbuilder. create ( ) )
[3]: org. junit. assert. assertequals ( httpresponse. sc_ok, nextbuilder. create ( ) )
[4]: org. junit. assert. assertsame ( httpresponse, nextbuilder. create ( ) )

************

************
tgt: org . junit . assert . assertequals ( 8 , somenotsorandomasciiaslist . size ( ) )
[0]: org. junit. assert. assertnull ( nextbuilder. create ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( multilinestring1, multilinestring1 )
[3]: org. junit. assert. assertequals ( line, multilinestring1 )
[4]: org. junit. assert. assertequals ( strings, multilinestring1 )

************

************
tgt: org . junit . assert . assertequals ( org . eclipse . tycho . plugins . p2 . director . profilenametest . general_linux_config . getname ( ) , name )
[0]: org. junit. assert. assertequals ( s, multilinestring1 )
[1]: org. junit. assert. assertequals ( lines1, multilinestring1 )
[2]: org. junit. assert. assertequals ( e1, v2 )
[3]: org. junit. assert. assertequals ( e1, e2 )
[4]: org. junit. assert. assertnotnull ( e1 )

************

************
tgt: org . junit . assert . assertequals ( expectedname , generated )
[0]: org. junit. assert. assertnotnull ( v1 )
[1]: org. junit. assert. assertequals ( e1, e1 )
[2]: org. junit. assert. assertnotnull ( page )
[3]: org. junit. assert. assertnull ( page )
[4]: org. junit. assert. assertnotnull ( page. name )

************

************
tgt: org . junit . assert . assertequals ( ( ( org . apache . metron . writer . hdfs . pathextensionfilenameformattest . path ) + "/" ) , actual )
[0]: org. junit. assert. assertnotnull ( page. context )
[1]: org. junit. assert. assertnotnull ( page. stack )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( set . isempty ( ) )
[0]: org. junit. assert. assertequals ( result, null )
[1]: org. junit. assert. assertequals ( result, 1 )
[2]: org. junit. assert. assertequals ( 0, cut. getattributes ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, cut. getattributes ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, cut. getattributes ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( issue . getclosedat ( ) . gettime ( ) ) != 0 ) )
[0]: org. junit. assert. assertnotnull ( cut. getattributes ( ) )
[1]: type ) )
[2]: org. junit. assert. assertequals ( true, b1 )
[3]: org. junit. assert. asserttrue ( b1 )
[4]: org. junit. assert. assertequals ( false, b1 )

************

************
tgt: org . junit . assert . assertequals ( record . get ( "name" ) . tostring ( ) , decoded . get ( "name" ) . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, b1 )
[1]: org. junit. assert. assertfalse ( b1 )
[2]: org. junit. assert. assertequals ( 200, view. getid ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( 200 ), view. getid ( ) )
[4]: org. junit. assert. assertequals ( 1, view. getid ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( filter . getheadervalue ( ) )
[0]: org. junit. assert. assertequals ( null, view. getid ( ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 200 ), view. getid ( ) )
[2]: org. junit. assert. assertnull ( org. apache. isis. core. metamodel. facets. object. parsetextentry ( null, null ) )
[3]: org. junit. assert. assertnull ( this. parsetextentry ( null, null ) )
[4]: org. junit. assert. assertnull ( t. parsetextentry ( null, null ) )

************

************
tgt: org . junit . assert . assertequals ( "test-format" , container . gettype ( ) )
[0]: org. junit. assert. assertequals ( null, t. parsetextentry ( null, null ) )
[1]: org. junit. assert. assertnull ( org. apache. isis. core. metamodel. facets. statement. parsetextentry ( null, null ) )
[2]: org. junit. assert. assertequals ( m, sm )
[3]: org. junit. assert. assertequals ( ms, sm )
[4]: org. junit. assert. assertnotnull ( sm )

************

************
tgt: org . junit . assert . asserttrue ( promise . hasanswer ( ) )
[0]: org. junit. assert. assertequals ( pd, sm )
[1]: org. junit. assert. assertequals ( m, m )
[2]: org. junit. assert. assertnotnull ( exp. getmessage ( ) )
[3]: org. junit. assert. assertequals ( exp. getmessage ( ), null )
[4]: org. junit. assert. assertequals ( exp. getmessage ( ), test2olinstance )

************

************
tgt: org . junit . assert . assertequals ( "test_branch" , statusprovider . branch ( ) )
[0]: org. junit. assert. assertequals ( exp. getmessage ( ), test2ol )
[1]: org. junit. assert. assertequals ( exp. getmessage ( ), expected )
[2]: org. junit. assert. assertthat ( lspentriestlv. lspentry ( ). size ( ), org. hamcrest. matchers. is ( 1 ) )
[3]: org. junit. assert. assertthat ( lspentriestlv. lspentry ( ), org. hamcrest. corematchers. is ( 1 ) )
[4]: org. junit. assert. assertthat ( lspentriestlv, org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertfalse ( expr . matches ( atom ) )
[0]: org. junit. assert. assertequals ( 1, lspentriestlv. lspentry ( ). size ( ) )
[1]: )
[2]: org. junit. assert. assertequals ( 1, versionservice. getversionbyid ( id ). size ( ) )
[3]: org. junit. assert. assertequals ( null, versionservice. getversionbyid ( id ) )
[4]: org. junit. assert. assertequals ( 0, versionservice. getversionbyid ( id ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( org . jpmml . rapidminer . batchutil . evaluate ( batch ) )
[0]: org. junit. assert. assertequals ( 1, versionservice. getversionbyid ( id ). size ( ), 0 )
[1]: org. junit. assert. assertequals ( 1, versionservice. getversionbyid ( id ). length )
[2]: org. junit. assert. assertequals ( 1, repmat. shape ( ). length )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 4 ), repmat. shape ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 4 ), repmat. shape ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( storage )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), repmat. shape ( ) )
[1]: org. junit. assert. assertequals ( 1, repmat. shape ( ). size ( ) )
[2]: org. junit. assert. assertarrayequals ( csrbytes, dscsr. getencoded ( ) )
[3]: org. junit. assert. assertarrayequals ( csr, dscsr. getencoded ( ) )
[4]: org. junit. assert. assertarrayequals ( csr_, dscsr. getencoded ( ) )

************

************
tgt: org . junit . assert . assertthat ( action . process ( entry , account , portfolio ) . getcode ( ) , org . hamcrest . corematchers . is ( status . code . ok ) )
[0]: org. junit. assert. assertarrayequals ( csrbytes, dscsr )
[1]: org. junit. assert. assertarrayequals ( csr. getencoded ( ), dscsr )
[2]: org. junit. assert. assertnotnull ( row. getcolumns ( ) )
[3]: org. junit. assert. assertequals ( 1, row. getcolumns ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( row. getcolumns ( ) [ 0 ] )

************

************
tgt: org . junit . assert . assertequals ( expected , statement1 . union ( statement2 ) . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, row. getcolumns ( ) [ 0 ] )
[1]: org. junit. assert. assertnotnull ( row )
[2]: org. junit. assert. assertequals ( 1, books. size ( ) )
[3]: org. junit. assert. assertequals ( 0, books. size ( ) )
[4]: org. junit. assert. assertequals ( 1,books. size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( destarray , retarray )
[0]: org. junit. assert. assertequals ( s, expe )
[1]: org. junit. assert. assertnotnull ( expe )
[2]: org. junit. assert. assertequals ( rs, expe )
[3]: , expe )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , bestmatchpos )
[0]: org. junit. assert. assertequals ( "", result )
[1]: org. junit. assert. assertequals ( "", result )
[2]: org. junit. assert. assertequals ( "" "", result )
[3]: org. junit. assert. assertequals ( "", result )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , text . getparagraphs ( ) . size ( ) )
[0]: org. junit. assert. assertnotnull ( uri )
[1]: org. junit. assert. assertnull ( uri )
[2]: org. junit. assert. assertequals ( null, uri )
[3]: org. junit. assert. assertequals ( uri, uri )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "x" , mockfastexcelprinter . getvalueifvisible ( mockelement , "x" ) )
[0]: org. junit. assert.null ( sub )
[1]: org. junit. assert. assertnotnull ( sub )
[2]: org. junit. assert. null, sub )
[3]: , sub )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( mpd . getsongsearcher ( ) )
[0]: org. junit. assert. assertnotnull ( db. arangosearch ( com. arangodb. arangosearchtest. view_name ) )
[1]: org. junit. assert. assertequals ( com. arangodb. arangosearchtest. view_name, db. arangosearch ( com. arangodb. arangosearchtest. view_name ) )
[2]: org. junit. assert. assertequals ( 1, db. arangosearch ( com. arangodb. arangosearchtest. view_name ). size ( ) )
[3]: org. junit. assert. assertthat ( db. arangosearch ( com. arangodb. arangosearchtest. view_name ). size ( ), org. hamcrest. matchers. is ( 1 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( false , p . getvalue ( ) )
[0]: org. junit. assert. assertnotnull ( echo. echo ( ""test"" ) )
[1]: org. junit. assert. assertnotnull ( echo. echo ( 1 ) )
[2]: org. junit. assert. assertnotnull ( echo. echo ( 0 ) )
[3]: org. junit. assert. assertnotnull ( echo. echo ( 10 ) )
[4]: org. junit. assert. assertnotnull ( echo )

************

************
tgt: org . junit . assert . asserttrue ( ( ( list . size ( ) ) == 1 ) )
[0]: org. junit. assert. asserttrue ( alphabet. checkvowelharmonya ( a, b ) )
[1]: org. junit. assert. asserttrue ( alphabet. checkvowelharmonya ( a, b [ i ] ) )
[2]: org. junit. assert. asserttrue ( alphabet. checkvowelharmonya ( a [ i ], b ) )
[3]: org. junit. assert. assertequals ( true, alphabet. checkvowelharmonya ( a [ i ], b ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . float ( 5 ) , preferencevalue )
[0]: org. junit. assert. assertnotnull ( root. getnodepath ( ) )
[1]: org. junit. assert. assertequals ( nodepath_, root. getnodepath ( ) )
[2]: org. junit. assert. assertequals ( root, context. getnodepath ( ) )
[3]: org. junit. assert. assertequals ( root. getnodepath ( ), null )
[4]: org. junit. assert. assertnull ( root. getnodepath ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result . gettrackingrefupdates ( ) . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( mockbasecommands. getwarnmessages ( ) )
[1]: org. junit. assert. assertnotnull ( dao. getwarnmessages ( ) )
[2]: org. junit. assert. assertnotnull ( root. getwarnmessages ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( type , dw . getcharttype ( ) )
[0]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( e. getmessage ( ), e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( e. getmessage ( ), null )
[4]: . getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , lines . size ( ) )
[0]: org. junit. assert. assertnotnull ( urlencodedvaluereturned )
[1]: org. junit. assert. assertnotnull ( urlencodedvaluereturns )
[2]: org. junit. assert. assertnotnull ( urlencodedvaluereturning )
[3]: org. junit. assert. assertnotnull ( urlencodedvaluereturnl )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( msg , n )
[0]: org. junit. assert. assertequals ( iterations, found )
[1]: org. junit. assert. assertequals ( 1, found )
[2]: org. junit. assert. assertequals ( found, iterations )
[3]: org. junit. assert. assertequals ( 0, fields. length )
[4]: org. junit. assert. assertequals ( 1, fields. length )

************

************
tgt: org . junit . assert . assertequals ( count , 1 )
[0]: org. junit. assert. asserttrue ( ( ( fields. length ) == 0 ) )
[1]: org. junit. assert. asserttrue ( ( ( fields. length ) == 1 ) )
[2]: org. junit. assert. assertnull ( fields )
[3]: org. junit. assert. assertequals ( 1, target. count ( ) )
[4]: org. junit. assert. assertnotnull ( target )

************

************
tgt: org . junit . assert . assertequals ( 0 , score ( ) )
[0]: org. junit. assert. assertequals ( 1, target. delete ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 1, graph. get ( 0 ) )
[4]: org. junit. assert. assertequals ( 1, graph. get ( 1 ) )

************

************
tgt: org . junit . assert . assertfalse ( iseditable )
[0]: org. junit. assert. assertequals ( 1, graph. get ( 10 ) )
[1]: get ( graph ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( discriminatorvalue, discriminatorvalue )
[4]: org. junit. assert. assertequals ( null, discriminatorvalue )

************

************
tgt: org . junit . assert . assertthat ( "second<sp>message" , org . hamcrest . core . is . is ( message ) )
[0]: org. junit. assert. assertequals ( userlist, idlist )
[1]: org. junit. assert. assertnotnull ( userlist )
[2]: org. junit. assert. assertequals ( userlist, idlist, userlist )
[3]: org. junit. assert. asserttrue ( userlist. isempty ( ) )
[4]: org. junit. assert. assertequals ( userlist )

************

************
tgt: org . junit . assert . asserttrue ( result . equals ( b2 . build ( ) ) )
[0]: org. junit. assert. assertequals ( am0. getstate ( ), null )
[1]: org. junit. assert. assertequals ( am0. getstate ( ), 0 )
[2]: org. junit. assert. assertequals ( am0. getstate ( ), am0 )
[3]: org. junit. assert. assertequals ( am0. getstate ( ), ag0 )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( acltoset . validateacl ( true ) )
[0]: org. junit. assert. assertnotnull ( line )
[1]: org. junit. assert. assertequals ( line, cdr, line )
[2]: org. junit. assert. assertnull ( line )
[3]: org. junit. assert. assertequals ( line, cdr )
[4]: org. junit. assert. assertequals ( """", line )

************

************
tgt: org . junit . assert . asserttrue ( serializeddevice . contains ( certificateauthoritysigneddeviceauthenticationjson ) )
[0]: org. junit. assert. assertequals ( 1, nodes. length )
[1]: org. junit. assert. assertequals ( 0, nodes. length )
[2]: org. junit. assert. assertequals ( 3, nodes. length )
[3]: org. junit. assert. assertequals ( 4, nodes. length )
[4]: org. junit. assert. assertequals ( 5, nodes. length )

************

************
tgt: org . junit . assert . assertequals ( 7 , extractor . getvectorlength ( ) )
[0]: org. junit. assert. assertequals ( 1, book. getcontents ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, book. getcontents ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 2, book. getcontents ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 4, book. getcontents ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 2, sstablecolumnrecordreader. getcomponentsize ( ) )

************

************
tgt: org . junit . assert . assertsame ( instruction , instructions . get ( 0 ) )
[0]: org. junit. assert. assertequals ( 2, sstablecolumnrecordreader. getcomponent ( ). length )
[1]: org. junit. assert. assertequals ( 2, sstablecolumnrecordreader. getcomponent ( ) )
[2]: org. junit. assert. assertequals ( 2, sstablecolumnrecordreader. getcomponent ( 0 ). length )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( ts )

************

************
tgt: org . junit . assert . assertequals ( instance , entity )
[0]: org. junit. assert. assertequals ( ts, ts )
[1]: org. junit. assert. assertnull ( ts )
[2]: org. junit. assert. assertequals ( 0, ts. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( val, encode )

************

************
tgt: org . junit . assert . asserttrue ( api . isloggedin ( ) )
[0]: org. junit. assert. assertequals ( orig, encode )
[1]: org. junit. assert. assertequals ( val, decode )
[2]: org. junit. assert. assertequals ( val, encoding )
[3]: org. junit. assert. assertequals ( val, encoder )
[4]: org. junit. assert. asserttrue ( result )

************

************
tgt: org . junit . assert . assertequals ( mappername , streaming . getmapper ( ) )
[0]: org. junit. assert. asserttrue ( java. util. arrays. equals ( mails, mails2 ) )
[1]: org. junit. assert. asserttrue ( org. nutz. lang. string. equals ( mails, mails2 ) )
[2]: org. junit. assert. asserttrue ( org. nutz. lang. arrays. equals ( mails, mails2 ) )
[3]: org. junit. assert. asserttrue ( org. nutz. lang. string. equals ( done, mails2. length ) )
[4]: org. junit. assert. asserttrue ( org. nutz. lang. string. equals ( done, mails2 ) )

************

************
tgt: org . junit . assert . assertfalse ( bpinfo1 . equals ( bpinfo2 ) )
[0]: org. junit. assert. assertfalse ( dv2. compareto ( dv1, null, dv2 ) )
[1]: org. junit. assert. assertfalse ( dv1. compareto ( dv2, null, dv2 ) )
[2]: org. junit. assert. assertfalse ( dv1. compareto ( dv2, null, dv1 ) )
[3]: org. junit. assert. assertfalse ( dv2. compareto ( dv1, null, null ) )
[4]: org. junit. assert. asserttrue ( dv2. compareto ( dv1, dv2, dv2 ) )

************

************
tgt: org . junit . assert . assertthat ( com . asakusafw . utils . graph . graphs . transpose ( graph ) , is ( expect ) )
[0]: org. junit. assert. assertequals ( """", firststatus. gettext ( ) )
[1]: org. junit. assert. assertequals ( """", firststatus. gettext ( ) )
[2]: org. junit. assert. assertequals ( 2, firststatus. gettext ( ). length )
[3]: org. junit. assert. assertnotnull ( firststatus. gettext ( ) )
[4]: org. junit. assert. assertequals ( 0, firststatus. gettext ( ). length )

************

************
tgt: org . junit . assert . assertsame ( value , field . in ( object ) )
[0]: org. junit. assert. assertequals ( 1, count )
[1]: org. junit. assert. assertequals ( count, 1 )
[2]: org. junit. assert. assertequals ( 0, count )
[3]: org. junit. assert. assertequals ( 3, count )
[4]: org. junit. assert. assertequals ( count, database. count ( document1, null ) )

************

************
tgt: org . junit . assert . assertthat ( msg , org . hamcrest . corematchers . is ( "message_text" ) )
[0]: org. junit. assert. assertequals ( original, parser. parse ( original ) )
[1]: org. junit. assert. assertequals ( original, xml. parse ( original ) )
[2]: org. junit. assert. assertequals ( original, parse ( original ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( projecttobereturned , project )
[0]: org. junit. assert. assertequals ( 3, streamevents. getlistenercount ( ) )
[1]: org. junit. assert. assertequals ( 1, streamevents. getlistenercount ( ) )
[2]: org. junit. assert. assertequals ( 5, streamevents. getlistenercount ( ) )
[3]: org. junit. assert. assertequals ( 2, streamevents. getlistenercount ( ) )
[4]: org. junit. assert. assertequals ( 4, streamevents. getlistenercount ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( intersect instanceof com . j_spaces . jdbc . builder . range . emptyrange ) )
[0]: org. junit. assert. assertequals ( 1, actualconfiguration. getvertices ( ). length )
[1]: org. junit. assert. assertequals ( 1, actualconfiguration. size ( ) )
[2]: org. junit. assert. assertequals ( 0, actualconfiguration. getvertices ( ). length )
[3]: org. junit. assert. assertequals ( 1, actualconfiguration. actions. size ( ) )
[4]: org. junit. assert. assertequals ( 0, actualconfiguration. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( x )
[0]: org. junit. assert. assertnotnull ( victim. getvalue ( ) )
[1]: org. junit. assert. assertequals ( null, victim. getvalue ( ) )
[2]: org. junit. assert. assertnull ( victim. getvalue ( ) )
[3]: org. junit. assert. assertequals ( 1, victim. getvalue ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( read )
[0]: org. junit. assert. assertequals ( 1, activitylist. size ( ) )
[1]: org. junit. assert. assertequals ( 0, activitylist. size ( ) )
[2]: org. junit. assert. assertequals ( 1, activitieslist. size ( ) )
[3]: org. junit. assert. assertequals ( 1, actlist. size ( ) )
[4]: org. junit. assert. assertequals ( 3, activitylist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( multisearch1 , multisearch1duplicate )
[0]: org. junit. assert. assertequals ( null, property. getvalue ( ) )
[1]: org. junit. assert. assertnotnull ( property. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 0, property. getvalue ( ) )
[3]: org. junit. assert. assertnull ( property. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, property. getvalue ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( connection )
[0]: org. junit. assert. assertequals ( namenodesize, routersize )
[1]: org. junit. assert. assertequals ( messagenodesize, routersize )
[2]: org. junit. assert. assertequals ( namenodesizes, routersize )
[3]: org. junit. assert. assertequals ( namenodesized, routersize )
[4]: org. junit. assert. assertequals ( namenodesize, routersize )

************

************
tgt: org . junit . assert . assertequals ( r1 . getvariables ( ) . size ( ) , 4 )
[0]: org. junit. assert. assertequals ( 1, testmethod. invoke ( paar ) )
[1]: org. junit. assert. assertnotnull ( testmethod. invoke ( paar ) )
[2]: org. junit. assert. assertequals ( 0, testmethod. invoke ( paar ) )
[3]: org. junit. assert. assertequals ( 1, testmethod. invoke ( paar ). length )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, processresponse. length )
[1]: org. junit. assert. assertequals ( 0, processresponse. length )
[2]: org. junit. assert. assertequals ( 2, processresponse. length )
[3]: org. junit. assert. assertequals ( 4, processresponse. length )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( dtvalidresult . hasproblems ( ) )
[0]: org. junit. assert. assertsame ( org. apache. cxf. jaxrs. provider. providerfactory. getinstance ( ), pf )
[1]: org. junit. assert. assertequals ( org. apache. cxf. jaxrs. provider. providerfactory. getinstance ( ), pf )
[2]: org. junit. assert. assertsame ( organizational. getinstance ( ), h2 )
[3]: org. junit. assert. assertsame ( organization, h2 )
[4]: org. junit. assert. assertnull ( h2 )

************

************
tgt: org . junit . assert . assertequals ( "myid" , tested . createtask ( "tasktype" , taskconfig ) )
[0]: org. junit. assert. asserttrue ( humanname. hasprefix ( humanname. getid ( ) ) )
[1]: org. junit. assert. asserttrue ( humanname. hasprefix ( humanname. tostring ( ) ) )
[2]: org. junit. assert. asserttrue ( humanname. hasprefix ( null ) )
[3]: org. junit. assert. asserttrue ( humanname. hasprefix ( ""test"" ) )
[4]: org. junit. assert. asserttrue ( humanname. hasprefix ( string ) )

************

************
tgt: org . junit . assert . assertnotnull ( response )
[0]: org. junit. assert. assertequals ( testuris, result )
[1]: org. junit. assert. assertequals ( result, testuris )
[2]: org. junit. assert. assertequals ( testuris, testuris )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( java . lang . integer . valueof ( 4 ) , map . maxby ( string :: valueof ) )
[0]: org. junit. assert. assertthat ( sum. evalandget ( sumsupplier ), org. hamcrest. matchers. is ( 3 ) )
[1]: org. junit. assert. assertthat ( sum. evalandget ( sumsupplier ), org. hamcrest. matchers. is ( 1 ) )
[2]: org. junit. assert. assertthat ( sum. evalandget ( sumsupplier ), org. hamcrest. matchers. is ( 5 ) )
[3]: org. junit. assert. assertthat ( sum, org. hamcrest. matchers. is ( fiveints ) )
[4]: org. junit. assert. assertthat ( sum )

************

************
tgt: org . junit . assert . assertequals ( result , ( ( short ) ( 10 ) ) )
[0]: org. junit. assert. assertequals ( 0, cr. getentity ( java. lang. string. class ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, cr. getentity ( java. lang. object. class ). size ( ) )
[2]: org. junit. assert. assertequals ( 200, cr. getentity ( java. lang. string. class ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, cr. getentity ( org. sun. jersey. api. client. class ). size ( ) )
[4]: org. junit. assert. assertequals ( 0.0, cr. getentity ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertthat ( score , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert. assertequals ( twoimportsthatareinthbundle, filteredtwomainbundleimports. createmainbundledependency ( ) )
[1]: org. junit. assert. assertequals ( twoimportsthatareinthcolor, filteredtwomainbundleimports. createmainbundledependency ( ) )
[2]: org. junit. assert. assertequals ( twoimportsthatareinthbundle, filteredtwomainbundlebundlebundle. createmainbundledependency ( ) )
[3]: org. junit. assert. assertequals ( twoimportsthatareinthportletbundle. createmainbundledependency ( ), filteredtwomainbundlebundle )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( original_text , new java . lang . string ( value ) )
[0]: org. junit. assert. assertequals ( 1, persons. size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( persons. size ( ) ) == 1 ) )
[2]: org. junit. assert. assertequals ( 0, persons. size ( ) )
[3]: org. junit. assert. assertnotnull ( persons )
[4]: org. junit. assert. asserttrue ( ( ( persons. size ( ) ) == 3 ) )

************

************
tgt: org . junit . assert . assertequals ( expectatedmessage . trim ( ) , e . getmessage ( ) . trim ( ) )
[0]: org. junit. assert. assertequals ( 0, image. getnodemap ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, image. getnodemap ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( image. getnodemap ( ) )
[3]: org. junit. assert. assertequals ( null, image. getnodemap ( ) )
[4]: org. junit. assert. assertequals ( null, image. getnodemap ( ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , tokens . size ( ) )
[0]: org. junit. assert. assertnotnull ( response )
[1]: org. junit. assert. assertnull ( response )
[2]: org. junit. assert.null ( response )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( existingddmdataproviderinstance , newddmdataproviderinstance )
[0]: org. junit. assert. assertnotnull ( analyzer )
[1]: org. junit. assert. assertnotnull ( analyzer. calculate ( ) )
[2]: org. junit. assert. assertnotnull ( analyzer. get ( ) )
[3]: org. junit. assert. assertnotnull ( analyzer. selection )
[4]: org. junit. assert. assertnotnull ( analyzer. output )

************

************
tgt: org . junit . assert . assertfalse ( it . hasnext ( ) )
[0]: org. junit. assert. assertequals ( 1, issues. length )
[1]: org. junit. assert. assertnotnull ( resultofaddcomponents )
[2]: org. junit. assert. assertnull ( resultofaddcomponents )
[3]: org. junit. assert. assertequals ( resultofaddcomponents, outer )
[4]: org. junit. assert. assertequals ( null, resultofaddcomponents )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( """", resultofaddcomponents )
[1]: org. junit. assert. assertequals ( 1, 1 )
[2]: org. junit. assert. assertnotnull ( s )
[3]: org. junit. assert. assertnotnull ( queue )
[4]: org. junit. assert. assertnotnull ( s. collection )

************

************
tgt: org . junit . assert . assertnull ( file )
[0]: type ) { }
[1]: org. junit. assert. assertequals ( reddeerproperties. time_period_factor, parser. getvalue ( ) )
[2]: org. junit. assert. assertequals ( reddeerproperties. time_period_factor, repository. getvalue ( ) )
[3]: org. junit. assert. assertequals ( reddeerproperties. time_period_factor, instance. getvalue ( ) )
[4]: org. junit. assert. assertequals ( reddeerproperties. time_period_factor, collection. getvalue ( ) )

************

************
tgt: org . junit . assert . assertnull ( rw . next ( ) )
[0]: org. junit. assert. assertnotnull ( _ _. getvalue ( ) )
[1]: org. junit. assert. assertequals ( teamname, principalaliasdao. getteamname ( teamname ) )
[2]: org. junit. assert. assertequals ( teamname, principalaliasdao. getteamname ( teamid ) )
[3]: org. junit. assert. assertequals ( 1, tester. testxmlserialization ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 3, tester. testxmlserialization ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( msg . getdouble ( this . name ) ) == 1.5 ) )
[0]: org. junit. assert. assertnotnull ( tester. testxmlserialization ( ) )
[1]: org. junit. assert. assertequals ( 0, tester. testxmlserialization ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 2, tester. testxmlserialization ( ). size ( ) )
[3]: org. junit. assert. assertequals ( object, object )
[4]: org. junit. assert. assertnotnull ( object )

************

************
tgt: org . junit . assert . assertequals ( expectedqueryupdate , testsubject . getpayload ( ) )
[0]: org. junit. assert. assertequals ( null, object )
[1]: org. junit. assert. assertequals ( 0, object. size ( ) )
[2]: org. junit. assert. assertequals ( 0, object. getclass ( ). length )
[3]: org. junit. assert. assertequals ( 0, list. size ( ) )
[4]: org. junit. assert. assertequals ( 1, list. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( initialcount + 1 ) , actualcount )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), list )
[1]: org. junit. assert. assertequals ( null, list )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( readed )
[4]: org. junit. assert. assertnotnull ( readed. getvalue ( ) )

************

************
tgt: org . junit . assert . asserttrue ( qe . execask ( ) )
[0]: org. junit. assert. assertnotnull ( readed. get ( ) )
[1]: org. junit. assert. assertnotnull ( readed. size ( ) )
[2]: org. junit. assert. assertequals ( expectedresult, readed )
[3]: org. junit. assert. assertequals ( 1, items. size ( ) )
[4]: org. junit. assert. assertequals ( 0, items. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , result )
[0]: org. junit. assert. assertequals ( 3, items. size ( ) )
[1]: org. junit. assert. assertequals ( 5, items. size ( ) )
[2]: org. junit. assert. assertequals ( 2, items. size ( ) )
[3]: org. junit. assert. assertequals ( expectedproperties, actualproperties )
[4]: org. junit. assert. assertequals ( expectedproperties, properties. get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( expectedproperties, properties )
[1]: org. junit. assert. assertequals ( expectedproperties, properties. get ( i ) )
[2]: org. junit. assert. assertequals ( expectedproperties, actualproperties. tostring ( ) )
[3]: org. junit. assert. asserttrue ( consumebytes ( windowdelta, initialwindowsize ) )
[4]: org. junit. assert. asserttrue ( consumebytes ( windowdelta, initialwindowsize, initialdelta ) )

************

************
tgt: org . junit . assert . assertequals ( info , libraryservice . getdefaultorganizationalunitrepositoryinfo ( ) )
[0]: org. junit. assert. asserttrue ( consumebytes ( windowdelta, initialwindowsize, completiondelta ) )
[1]: org. junit. assert. asserttrue ( consumebytes ( windowdelta, initialwindowsize. length ) )
[2]: identifies )
[3]: org. junit. assert. assertequals ( org. jboss. test. capedwarf. testsuite. config. test. capedwarfenvironmenttest. admin_email, env. isadmin ( ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), checkedfunction2. collect ( 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( resource . getbatchassignments ( applicationname , userid , context , create , experimentbatch , forceprofilecheck , headers ) )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), checkedfunction2. collect ( 0 ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), checkedfunction2. collect ( ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), checkedfunction2. collect ( 1 ) )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), checkedfunction2. collect ( 1 ). get ( ) )
[4]: org. junit. assert. assertequals ( 1, violations. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( classundertest . hasperiod ( null ) )
[0]: org. junit. assert. assertequals ( 1, testtarget. getcodelists ( ). length )
[1]: org. junit. assert. assertequals ( 0, testtarget. getcodelists ( ). length )
[2]: org. junit. assert. assertnotnull ( testtarget. getcodelists ( ) )
[3]: org. junit. assert. assertequals ( 1, testtarget. getcodelists ( ). size ( )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( expected == ( e . evaluate ( ) ) ) )
[0]: org. junit. assert. assertequals ( e, suspendfuture. isdone ( ) )
[1]: org. junit. assert. asserttrue ( suspendfuture. isdone ( ) )
[2]: org. junit. assert. assertthat ( suspendfuture. isdone ( ), is ( true ) )
[3]: org. junit. assert. assertnotnull ( suspendfuture. isdone ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( org . apache . shindig . common . util . dateutil . parserfc1123date ( expires ) )
[0]: org. junit. assert. assertnotnull ( res )
[1]: org. junit. assert. assertequals ( null, res )
[2]: org. junit. assert. assertequals ( ""bar"", res )
[3]: org. junit. assert. assertequals ( ""a"", res )
[4]: org. junit. assert. assertequals ( ""foo"", res )

************

************
tgt: org . junit . assert . assertthat ( outvalues , empty ( ) )
[0]: org. junit. assert. assertfalse ( host. islocal ( java. net. inetaddress. getbyname ( host ) ) )
[1]: org. junit. assert. asserttrue ( host. islocal ( java. net. inetaddress. getbyname ( host ) ) )
[2]: org. junit. assert. assertfalse ( host. islocal ( java. lang. string. class ) )
[3]: org. junit. assert. assertfalse ( host. islocal ( null ) )
[4]: type ) )

************

************
tgt: org . junit . assert . asserttrue ( exceptionoccured )
[0]: org. junit. assert. assertequals ( 0, resultsetsize ( rs ) )
[1]: org. junit. assert. asserttrue ( fileinfodao. equals ( file ) )
[2]: org. junit. assert. asserttrue ( fileinfodao. equals ( mapgroupidname ) )
[3]: org. junit. assert. asserttrue ( fileinfodao. equals ( zippoutname ) )
[4]: org. junit. assert. asserttrue ( fileinfodao. equals ( collectiongroupidname ) )

************

************
tgt: org . junit . assert . asserttrue ( parameters . discardoutline ( ) )
[0]: ) )
[1]: org. junit. assert. assertarrayequals ( msg. getpayloadbuffer ( ), expectedresponsev1 )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( msg ), expectedresponsev1 )
[3]: org. junit. assert. assertequals ( msg. getpayloadbuffer ( ), expectedresponsev1 )
[4]: org. junit. assert. asserttrue ( java. util. arrays. equals ( msg. getpayloadbuffer ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( p1 , p2 )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( retornoconsultacadastroendereco. getcodigomunicipio ( ) )
[2]: org. junit. assert. assertequals ( null, retornoconsultacadastroendereco. getcodigomunicipio ( ) )
[3]: org. junit. assert. assertequals ( 1, retornoconsultacadastroendereco. getcodigomunicipio ( ) )
[4]: org. junit. assert. assertequals ( 0, retornoconsultacadastroendereco. getcodigomunicipio ( ). length )

************

************
tgt: org . junit . assert . assertequals ( "" , val )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( onelinestringdecorator. toedit ( ) )
[2]: org. junit. assert. assertnotnull ( onelinestringdecorator )
[3]: org. junit. assert. assertequals ( null, onelinestringdecorator. toedit ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , countnodes ( ) )
[0]: )
[1]: org. junit. assert. assertequals ( """", f. tostring ( ) )
[2]: org. junit. assert. assertequals ( 0, f. tostring ( ). length ( ) )
[3]: org. junit. assert. assertequals ( null, f. tostring ( ) )
[4]: org. junit. assert. assertnull ( f. tostring ( ) )

************

************
tgt: org . junit . assert . assertnull ( indexbean )
[0]: org. junit. assert. assertequals ( 0, f. tostring ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( requestcontext. getheaders ( ) )
[2]: org. junit. assert. asserttrue ( requestcontext. getheaders ( ). isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, requestcontext. getheaders ( ). length )
[4]: org. junit. assert. assertequals ( 1, requestcontext. getheaders ( ). size ( )

************

************
tgt: org . junit . assert . assertfalse ( modelinstancetuple01 . equals ( modelinstancetuple02 ) )
[0]: ) )
[1]: org. junit. assert. assertfalse ( manager. deletelookup ( auditinfo, null, null ) )
[2]: org. junit. assert. asserttrue ( manager. deletelookup ( auditinfo, org. apache. druid. server. lookup. cache. lookupcoordinatormanagertest. lookup_tier, ignore ) )
[3]: org. junit. assert. asserttrue ( manager. deletelookup ( auditinfo, org. apache. druid. server. lookup. cache. lookupcoordinatormanagertest. lookup_tier, null ) )
[4]: org. junit. assert. assertfalse ( manager. deletelookup ( auditinfo. getid ( ), null, null ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( expected ) )
[0]: org. junit. assert. assertequals ( auditinfo, manager. deletelookup ( auditinfo. getid ( ), null, null ) )
[1]: org. junit. assert. assertequals ( 1, meldings. size ( ) )
[2]: org. junit. assert. assertequals ( 0, meldings. size ( ) )
[3]: org. junit. assert. assertequals ( 1, meldings. size ( ) )
[4]: org. junit. assert. assertequals ( 1, melding. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( org . junit . tests . experimental . rules . methodrulestest . wasrun )
[0]: org. junit. assert. assertequals ( 1, meldings. size ( ) )
[1]: org. junit. assert. assertthat ( writer. tostring ( ), org. hamcrest. corematchers. is ( probe ) )
[2]: org. junit. assert. assertthat ( writer. tostring ( ), org. hamcrest. corematchers. is ( """" ) )
[3]: org. junit. assert. assertequals ( probe, writer. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( writer. tostring ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( objecttype )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, ( ( int ) ( value. getvalue ( ) ) ) )
[2]: org. junit. assert. assertequals ( 0, ( ( int ) ( value. getvalue ( ) ) ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( null ), value. getvalue ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 4 ), value. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , map . getpollinterval ( ) )
[0]: org. junit. assert. assertequals ( null, value. getvalue ( ) )
[1]: org. junit. assert. assertequals ( 0, decoded. gettimestamp ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), itr )
[3]: org. junit. assert. assertequals ( 0, itr. size ( ) )
[4]: org. junit. assert. assertnotnull ( itr )

************

************
tgt: org . junit . assert . assertequals ( "val" , val )
[0]: , itr )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( expected ) )
[4]: org. junit. assert. assertequals ( result, actual )

************

************
tgt: org . junit . assert . assertequals ( 1 , com . enioka . jqm . test . helpers . testhelpers . getokcount ( this . getnewdbsession ( ) ) )
[0]: org. junit. assert. assertequals ( exp, actual )
[1]: org. junit. assert. assertequals ( expected, actual ) for ( expected )
[2]: org. junit. assert. assertnotnull ( org. apache. taverna. robundle. fs. bundlefilesystemprovider. getinstance ( ) )
[3]: org. junit. assert. assertequals ( java. util. arraylist. class, org. apache. taverna. robundle. fs. bundlefilesystemprovider. getinstance ( ). getclass ( ) )
[4]: org. junit. assert. assertequals ( org. apache. taverna. robundle. fs. bundlefilesystemprovider. getinstance ( ), new org. apache. taverna. robundle. fs. bundlefilesystemprovider ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result , tolerance )
[0]: org. junit. assert. assertnull ( org. apache. taverna. robundle. fs. bundlefilesystemprovider. getinstance ( ) )
[1]: _2. class )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( ""test"", result )
[4]: org. junit. assert. assertequals ( 0, children. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( org . apache . jackrabbit . oak . spi . security . user . util . passwordutil . issame ( pwhash , expected [ ( i ++ ) ] ) )
[0]: org. junit. assert. asserttrue ( manager. isshutdown ( ) )
[1]: org. junit. assert. assertequals ( 1, level )
[2]: org. junit. assert. assertnotnull ( readmetadata )
[3]: org. junit. assert. assertequals ( org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( 123 ) ) )
[4]: org. junit. assert. assertequals ( i_, actual. toint ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedresultset , actualresultset )
[0]: org. junit. assert. assertequals ( 123, actual. toint ( ) )
[1]: org. junit. assert. assertequals ( 1, actual. toint ( ) )
[2]: org. junit. assert. assertequals ( 123, actual. toint ( ), 0 )
[3]: org. junit. assert. assertequals ( 1, genes. size ( ) )
[4]: org. junit. assert. assertequals ( 0, genes. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "foo" , builder . accountname ( ) )
[0]: org. junit. assert. assertequals ( 1, genes. size ( ) )
[1]: org. junit. assert. assertequals ( 3, genes. size ( ) )
[2]: org. junit. assert. assertequals ( 1, gens. size ( ) )
[3]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. join ( ), connectiondefinition. getdatabasetype ( ) )
[4]: org. junit. assert. assertequals ( org. apache. commons. lang3. stringutils. class, connectiondefinition. getdatabasetype ( ) )

************

************
tgt: org . junit . assert . assertthat ( jsonfriendlyrecord , software . amazon . kinesis . multilang . messages . jsonfriendlyrecordtest . equivalentto ( kinesisclientrecord ) )
[0]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. class, connectiondefinition. getdatabasetype ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), connectiondefinition. getdatabasetype ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( expected )
[4]: org. junit. assert. assertnull ( expected )

************

************
tgt: org . junit . assert . assertequals ( true , result )
[0]: org. junit. assert. assertnull ( expected. getmessage ( ) )
[1]: org. junit. assert. assertequals ( 0, expected. errors. length )
[2]: org. junit. assert. assertequals ( 0, expected. errors )
[3]: org. junit. assert. assertequals ( 100, requiredcontainers. size ( ) )
[4]: org. junit. assert. assertequals ( 100, resp. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( text , result . getname ( ) )
[0]: org. junit. assert. assertequals ( 100, results. size ( ) )
[1]: org. junit. assert. assertequals ( 1000, expected. size ( ) )
[2]: org. junit. assert. assertequals ( 100, resources. size ( ) )
[3]: org. junit. assert. asserttrue ( expectedresultsresources. isempty ( ) )
[4]: org. junit. assert. asserttrue ( expectedresultsresources. contains ( file ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , p . gettotalpages ( ) )
[0]: org. junit. assert. asserttrue ( expectedresultsresources. get ( file ). resolve ( file ). equals ( map. get ( file ) ) )
[1]: org. junit. assert. asserttrue ( expectedresultsresources. get ( file. getname ( ) ). equals ( filename ) )
[2]: org. junit. assert. asserttrue ( expectedresultsresources. get ( file. tostring ( ) ). contains ( expectedresultsresources ) )
[3]: org. junit. assert. asserttrue ( r. equals ( r2 ) )
[4]: org. junit. assert. assertnotnull ( runner. getresult ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ed . gettext ( ) . equals ( datatypetestcase . test_text ) )
[0]: org. junit. assert. assertequals ( 1, runner. getresult ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, runner. getresult ( ) )
[2]: org. junit. assert. assertnull ( runner. getresult ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, berichtentiteiten. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 0, berichtentiteiten. size ( ) )
[1]: org. junit. assert. assertequals ( 1, results. size ( ) )
[2]: org. junit. assert. assertequals ( 0, results. size ( ) )
[3]: org. junit. assert. assertequals ( 4, results. size ( ) )
[4]: org. junit. assert. assertequals ( results. size ( ), 4 )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( 5, results. size ( ) )
[1]: org. junit. assert. assertequals ( audit, actualupdates )
[2]: org. junit. assert. assertequals ( actualupdates, actualupdates )
[3]: org. junit. assert. assertequals ( result, actualupdates )
[4]: org. junit. assert. assertequals ( 1, actualupdates. length )

************

************
tgt: org . junit . assert . assertnotnull ( com . cronutils . model . time . executiontime . forcron ( parser . parse ( cronexpression ) ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( response )
[2]: org. junit. assert. assertequals ( 1, classes. length )
[3]: org. junit. assert. assertarrayequals ( com. codeaffine. osgi. testuite. internal. classpathscannertest. footest. class, classes )
[4]: org. junit. assert. assertarrayequals ( new java. lang. class [ ] { java. lang. string. class }, classes )

************

************
tgt: org . junit . assert . assertequals ( exp , s )
[0]: org. junit. assert. assertequals ( 0, classes. length )
[1]: org. junit. assert. assertnotnull ( classes )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. assertequals ( result, expected )
[4]: get the expected ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , meldingen . size ( ) )
[0]: get the expected )
[1]: get expected )
[2]: org. junit. assert. assertequals ( newfilepath, invokeundertest ( ) )
[3]: org. junit. assert. assertequals ( 0, invokeundertest ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, invokeundertest ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( comments . commentlist . contains ( "initial<sp>comment" ) )
[0]: org. junit. assert. assertnotnull ( invokeundertest ( ) )
[1]: org. junit. assert. assertnull ( invokeundertest ( ) )
[2]: org. junit. assert. assertnull ( software. amazon. awssdk. services. dynamodb. document. internal. internalutils. toattributevaluemap ( null ) )
[3]: org. junit. assert. assertnull ( software. amazon. awssdk. services. dynamodb. document. internal. internalutils. toattributevaluemap ( ( ( java. util. collections ) ( null ) ) ) )
[4]: org. junit. assert. assertnull ( software. amazon. awssdk. services. dynamodb. document )

************

************
tgt: org . junit . assert . asserttrue ( content . contains ( expected ) )
[0]: null ) )
[1]: null )
[2]: org. junit. assert. assertnull ( response. readentity ( java. lang. string. class ) )
[3]: org. junit. assert. assertnotnull ( value )
[4]: org. junit. assert. assertnull ( value )

************

************
tgt: org . junit . assert . assertequals ( id , ex . getid ( ) )
[0]: org. junit. assert. assertequals ( 1, value. size ( ) )
[1]: org. junit. assert. assertequals ( null, value )
[2]: ) )
[3]: org. junit. assert. assertnull ( com. liferay. portal. kernel. util. listutil. exists ( list, ( s ) -> true ) )
[4]: org. junit. assert. assertequals ( false, com. liferay. portal. kernel. util. listutil. exists ( list, ( s ) -> true ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , count . get ( ) )
[0]: org. junit. assert. asserttrue ( unionizer. isorthogonal ( ) )
[1]: org. junit. assert. assertequals ( true, unionizer. isorthogonal ( ) )
[2]: org. junit. assert. assertnotnull ( books )
[3]: org. junit. assert. assertfalse ( positiongetter )
[4]: org. junit. assert. assertnull ( positiongetter )

************

************
tgt: org . junit . assert . assertequals ( "belarus" , linetobereplaced . tostring ( ) )
[0]: org. junit. assert. assertequals ( 6, flag )
[1]: org. junit. assert. assertequals ( 7, flag )
[2]: org. junit. assert. assertequals ( 12, flag )
[3]: org. junit. assert. assertequals ( 0, flag )
[4]: org. junit. assert. assertequals ( 5, flag )

************

************
tgt: org . junit . assert . assertequals ( expected , got )
[0]: org. junit. assert. assertnull ( response )
[1]: org. junit. assert. assertnotnull ( response )
[2]: org. junit. assert. assertnull ( protocol )
[3]: org. junit. assert. assertnull ( request )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "comp" , endpointuri )
[0]: org. junit. assert. assertequals ( 1, repository. effectclasses ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, dao. effectclasses ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, this. effectclasses ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, subject. effectclasses ( ). size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , items . size ( ) )
[0]: org. junit. assert. assertnotnull ( group1 )
[1]: org. junit. assert. assertnotnull ( group2 )
[2]: org. junit. assert. assertnotnull ( dbrangeradminconfigtype )
[3]: org. junit. assert. assertnotnull ( resultaat )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( 1 , fcheckpointcollection . size ( ) )
[0]: org. junit. assert. assertequals ( 1, s. x )
[1]: org. junit. assert. assertnotnull ( s )
[2]: org. junit. assert. assertequals ( 1, s. y )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertfalse ( "new<sp>title" . equals ( ob . getpropertyvalue ( "dc:title" ) ) )
[0]: org. junit. assert. assertnotnull ( _subject. getcomponentconfiguration ( ) )
[1]: org. junit. assert. assertequals ( 1, ptgs. length )
[2]: org. junit. assert. assertequals ( 0, ptgs. length )
[3]: org. junit. assert. assertequals ( 3, ptgs. length )
[4]: org. junit. assert. assertequals ( """", firststatus. gettext ( ) )

************

************
tgt: org . junit . assert . assertthat ( actualmonth , org . hamcrest . corematchers . is ( 12 ) )
[0]: org. junit. assert. assertequals ( """", firststatus. gettext ( ) )
[1]: org. junit. assert. assertequals ( 2, firststatus. gettext ( ). length )
[2]: org. junit. assert. assertequals ( 0, firststatus. gettext ( ). length )
[3]: org. junit. assert. assertnotnull ( firststatus. gettext ( ) )
[4]: org. junit. assert. assertnotnull ( config. getrulesdir ( ) )

************

************
tgt: org . junit . assert . assertnull ( missingpollschoice )
[0]: org. junit. assert. assertnull ( config. getrulesdir ( ) )
[1]: org. junit. assert. assertequals ( 1, config. getrulesdir ( ). length )
[2]: org. junit. assert. assertequals ( 1, config. getrulesdir ( ). size ( )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( body )

************

************
tgt: org . junit . assert . assertequals ( "foo" , n . getvariablename ( ) )
[0]: org. junit. assert. assertequals ( chunkedrequest, body )
[1]: org. junit. assert. assertequals ( 1, body. length )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 0, sequence. isclosed ( ) )

************

************
tgt: org . junit . assert . assertequals ( new java . util . hashset < java . lang . string > ( java . util . arrays . aslist ( new java . lang . string [ ] { "hello" , "world" } ) ) , set )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 2, 4, 6, 8 ), sequence. isclosed ( ) )
[1]: org. junit. assert. assertequals ( 1, sequence. isclosed ( ) )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), sequence. isclosed ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, buffer. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( ordersettings , instance . getordersettings ( ) )
[0]: org. junit. assert. assertequals ( 1, buffer. get ( ). length )
[1]: org. junit. assert. assertequals ( 0, buffer. get ( ). length )
[2]: org. junit. assert. assertequals ( 0, buffer. get ( ) )
[3]: get ( ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. assertequals ( 1, index_type. count )
[2]: org. junit. assert. assertequals ( 0, index_type. size ( )
[3]: org. junit. assert. assertequals ( 1, index_type. size ( )
[4]: org. junit. assert. assertequals ( 1, bestplacemarkdescriptor. getplacemarkdescriptor ( first ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( dayintvalue , datejdbcconverter . converttoavro ( rs ) )
[0]: org. junit. assert. assertequals ( 1, bestplacemarkdescriptor. getplacemarkdescriptor ( second ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, bestplacemarkdescriptor. getplacemarkdescriptor ( third ). size ( ) )
[2]: org. junit. assert. assertequals ( 3, bestplacemarkdescriptor. getplacemarkdescriptor ( second ). size ( ) )
[3]: org. junit. assert. assertequals ( 3, bestplacemarkdescriptor. getplacemarkdescriptor ( first ). size ( ) )
[4]: org. junit. assert. assertequals ( 2, violations. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , app . executeapplication ( args ) )
[0]: org. junit. assert. assertequals ( 1, comparepomfiles ( reactorprojects ) )
[1]: org. junit. assert. asserttrue ( java. util. arrays. equals ( values, combination ) )
[2]: org. junit. assert. asserttrue ( edu. cmu. tetrad. util. arrays. equals ( values, combination ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. equals ( values, combination ), true )
[4]: org. junit. assert. assertequals ( java. util. arrays. equals ( values, combination ), equals ( sum, combination ) )

************

************
tgt: org . junit . assert . assertthat ( filterrules . shouldignore ( req ) , is ( false ) )
[0]: org. junit. assert. asserttrue ( instance. equals ( combination, combination ) )
[1]: org. junit. assert. assertnotnull ( uri )
[2]: org. junit. assert. assertequals ( uri, path )
[3]: org. junit. assert. assertequals ( uri, uri )
[4]: org. junit. assert. assertequals ( path, uri )

************

************
tgt: org . junit . assert . assertequals ( 1 , persoon . getnietvervallenmaterielegroepen ( ) . size ( ) )
[0]: org. junit. assert. assertnotnull ( path )
[1]: org. junit. assert. assertequals ( kind. hashcode ( ), k )
[2]: org. junit. assert. assertequals ( kind, k. hashcode ( ) )
[3]: org. junit. assert. assertequals ( s, k. hashcode ( ) )
[4]: org. junit. assert. assertequals ( s. hashcode ( ), k )

************

************
tgt: org . junit . assert . asserttrue ( configurationdeserialized )
[0]: org. junit. assert. assertnotnull ( k. hashcode ( ) )
[1]: org. junit. assert. assertequals ( nthreads, v. getproperty ( ""count"" ) )
[2]: org. junit. assert. assertequals ( nthreads, v. getproperty ( 0 ) )
[3]: org. junit. assert. assertequals ( nthreads, v. getproperty ( nullcount ) )
[4]: org. junit. assert. assertequals ( nthreads )

************

************
tgt: org . junit . assert . assertequals ( "" , query . getcommandtext ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), uit. isvalid ( org. owasp. esapi. reference. validation. basevalidationruletest. str_val, org. owasp. esapi. reference. validation. basevalidationruletest. str_val ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), uit. taskinfo ( org. owasp. esapi. reference. validation. basevalidationruletest. str_val ) )
[3]: org. junit. assert. assertequals ( java. util. optional. empty ( ), uit. isvalid ( org. owasp. esapi. reference. validation. basevalidationruletest. str_val ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( this ), uit. getvalid ( org. owasp. esapi. reference. validation. basevalidationruletest. str_val ) )

************

************
tgt: org . junit . assert . assertequals ( javavalue , value )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), uit. isvalid ( org. owasp. esapi. reference. validation. basevalidationruletest. str_val, org. owasp ) )
[1]: org. junit. assert. assertequals ( comment, e. getmessage ( ) )
[2]: org. junit. assert. asserttrue ( e. getmessage ( ). contains ( comment ) )
[3]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. format ( comment ), e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( 100 , results . size ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. format ( comment, e. getmessage ( ) ), comment )
[1]: org. junit. assert. assertnotnull ( c1. next ( ) )
[2]: org. junit. assert. assertequals ( c1, c2. next ( ) )
[3]: org. junit. assert. assertnotnull ( c2. next ( ) )
[4]: org. junit. assert. assertequals ( c1. next ( ), c2 )

************

************
tgt: org . junit . assert . asserttrue ( adapter . haspreservedvariant ( ) )
[0]: ) )
[1]: org. junit. assert. assertnull ( tokenstring )
[2]: org. junit. assert. assertnotnull ( tokenstring )
[3]: org. junit. assert. assertequals ( tokenstring, strings )
[4]: org. junit. assert. assertequals ( tokenstring, testdelegation )

************

************
tgt: org . junit . assert . assertequals ( somereleases , result )
[0]: org. junit. assert. assertequals ( tokenstring, null )
[1]: org. junit. assert. assertnotnull ( datastore. getapplication ( jid ) )
[2]: org. junit. assert. assertequals ( jid, datastore. getapplication ( jid ) )
[3]: org. junit. assert. assertequals ( 200, response. getstatus ( ) )
[4]: org. junit. assert. assertequals ( "", value. assingle ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , resultstr . length ( ) )
[0]: org. junit. assert. assertequals ( null, value. assingle ( ) )
[1]: org. junit. assert. assertequals ( "", value. assingle ( ) )
[2]: org. junit. assert. assertequals ( "", value. assingle ( ) )
[3]: type ) )
[4]: org. junit. assert. assertnotnull ( e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( "2007-12-03t10:15:30z" , result )
[0]: org. junit. assert. assertequals ( e. getmessage ( ), service. getmessage ( ) )
[1]: org. junit. assert. assertequals ( service. getmessage ( ), e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( e. getmessage ( ), service. tostring ( ) )
[3]: ) )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( new java. lang. object [ 1 ] ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertthat ( result. length, org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertthat ( result )
[2]: , result )
[3]: )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4 ), bfs )

************

************
tgt: org . junit . assert . assertnotnull ( e . getmessage ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), bfs )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), bfs )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 5, 6 ), bfs )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), bfs )
[4]: org. junit. assert. assertequals ( 1, d, 0 )

************

************
tgt: org . junit . assert . assertequals ( deque , container . getcontextstack ( request ) )
[0]: org. junit. assert. assertequals ( 1.0, d, 0 )
[1]: org. junit. assert. assertequals ( 1.0, d, 0.0 )
[2]: org. junit. assert. assertequals ( 1l, d, 0 )
[3]: org. junit. assert. assertequals ( 0, d, 0 )
[4]: org. junit. assert. assertequals ( 1, sm. getstate ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( rpc . failed ( ) )
[0]: org. junit. assert. assertequals ( ""foo"", sm. getstate ( ). name ( ) )
[1]: org. junit. assert. assertequals ( ""name"", sm. getstate ( ). name ( ) )
[2]: org. junit. assert. assertequals ( 0, sm. getstate ( ). size ( ) )
[3]: org. junit. assert. assertequals ( ""foo"", sm. getstate ( ). name ( ) )
[4]: org. junit. assert. assertequals ( description, deserialized )

************

************
tgt: org . junit . assert . assertequals ( "bar" , output )
[0]: org. junit. assert. assertequals ( serialized, deserialized )
[1]: org. junit. assert. assertequals ( descriptions, deserialized )
[2]: org. junit. assert. assertequals ( desc, deserialized )
[3]: org. junit. assert. assertnotnull ( deserialized )
[4]: org. junit. assert. assertequals ( 1, tags. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( runner . getoptions ( ) , org . hamcrest . core . is . is ( runoptions ) )
[0]: org. junit. assert. assertequals ( 0, tags. size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( tags. size ( ) ) == 1 ) )
[2]: org. junit. assert. assertequals ( 3, tags. size ( ) )
[3]: org. junit. assert. asserttrue ( ( ( tags. size ( ) ) == 0 ) )
[4]: org. junit. assert. assertequals ( teststring, eclipseerrorboxwidget. geterrorstring ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( teststring, eclipseerrorbox widget. geterrorstring ( ) )
[1]: org. junit. assert. assertequals ( teststring, eclipseerrorbox. geterrorstring ( ) )
[2]: org. junit. assert. assertequals ( testcasestring, eclipseerrorboxwidget. geterrorstring ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( argofdelete )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertthat ( argofdelete )
[1]: org. junit. assert. assertthat ( argofdelete. getvalue ( ) )
[2]: , argofdelete )
[3]: ) )
[4]: org. junit. assert. asserttrue ( circle. equals ( b ) )

************

************
tgt: org . junit . assert . asserttrue ( inactivitytimeoutoccurred )
[0]: org. junit. assert. asserttrue ( circ. equals ( b ) )
[1]: org. junit. assert. asserttrue ( box. equals ( b ) )
[2]: org. junit. assert. asserttrue ( b. equals ( det ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( ismaster )

************

************
tgt: org . junit . assert . assertthat ( history . getlengthofyear ( historicera . ad , integer . max_value ) , org . hamcrest . corematchers . is ( ( - 1 ) ) )
[0]: org. junit. assert. assertfalse ( ismaster )
[1]: org. junit. assert. assertnotnull ( ismaster )
[2]: org. junit. assert. assertequals ( true, ismaster
[3]: , ismaster )
[4]: org. junit. assert. assertequals ( expectedkettleschema, marshallkettleschema )

************

************
tgt: org . junit . assert . assertequals ( servicekey , sessionbean . getsubscribetoservicekey ( ) )
[0]: org. junit. assert. assertequals ( expectedkettlesschema, marshallkettleschema )
[1]: org. junit. assert. assertequals ( expectedkettleschema, marshallkettlesschema )
[2]: org. junit. assert. assertequals ( expectedkettleschema. tostring ( ), marshallkettleschema )
[3]: org. junit. assert. assertequals ( expectedkettleschema, marshallkettleschema. tostring ( ) )
[4]: org. junit. assert. assertequals ( like1. hashcode ( ), like2. hashcode ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , dao . findbyicd9 ( "250" ) . size ( ) )
[0]: org. junit. assert. asserttrue ( ( ( like1. hashcode ( ) ) == ( like2. hashcode ( ) ) ) )
[1]: org. junit. assert. assertequals ( like0. hashcode ( ), like2. hashcode ( ) )
[2]: org. junit. assert. assertnotnull ( like1. hashcode ( ) )
[3]: org. junit. assert. assertequals ( like1. hashcode ( ), like1. hashcode ( ) )
[4]: org. junit. assert. assertsame ( newtokens, oldtokens )

************

************
tgt: org . junit . assert . assertfalse ( packagename . ispresent ( ) )
[0]: org. junit. assert. assertarrayequals ( newtokens. toarray ( ), oldtokens. toarray ( ) )
[1]: org. junit. assert. assertsame ( oldtokens, oldtokens )
[2]: org. junit. assert. assertequals ( newtokens, oldtokens )
[3]: )
[4]: org. junit. assert. assertequals ( reposcnt, org. apache. zeppelin. dep. dependencyresolvertest. resolver. getrepos ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( rs . next ( ) )
[0]: org. junit. assert. assertequals ( ( reposcnt + 1 ), org. apache. zeppelin. dep. dependencyresolvertest. resolver. getrepos ( ). size ( ) )
[1]: org. junit. assert. assertequals ( repositoryscnt, org. apache. zeppelin. dep. dependencyresolvertest. resolver. getrepos ( ). size ( ) )
[2]: org. junit. assert. assertequals ( i, clock. now ( instant ). size ( ) )
[3]: org. junit. assert. assertequals ( java. time. clock. now ( instant ), clock )
[4]: org. junit. assert. assertequals ( i, clock. now ( instant ) )

************

************
tgt: org . junit . assert . asserttrue ( wellformed )
[0]: org. junit. assert. assertequals ( i, clock. now ( instant ). length ( ) )
[1]: org. junit. assert. assertequals ( instant, clock. now ( instant ) )
[2]: org. junit. assert. assertequals ( 1, map. size ( ) )
[3]: org. junit. assert. assertequals ( 0, map. size ( ) )
[4]: org. junit. assert. assertequals ( null, footer. issticky ( ) )

************

************
tgt: org . junit . assert . asserttrue ( _mbeanserver . isregistered ( objectname ) )
[0]: org. junit. assert. assertequals ( 1, footer. issticky ( ) )
[1]: org. junit. assert. assertnotnull ( footer. issticky ( ) )
[2]: org. junit. assert. assertequals ( 1, footer. issticky ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, footer. issticky ( ). length )
[4]: org. junit. assert. assertequals ( e. getvalue ( ), nums )

************

************
tgt: org . junit . assert . assertequals ( reportoptions . logging_classes , actual . getloggingclasses ( ) )
[0]: org. junit. assert. assertnotnull ( nums )
[1]: org. junit. assert. assertequals ( e. tostring ( ), nums )
[2]: org. junit. assert. assertequals ( e, nums )
[3]: ) )
[4]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )

************

************
tgt: org . junit . assert . assertequals ( org . codegist . crest . deserialization . common . commondeserializationstest . data , val )
[0]: org. junit. assert. assertequals ( expected, java. lang. string. format ( rs. tostringunsorted ( rs ) ) )
[1]: org. junit. assert. assertequals ( expected, java. lang. string. format ( rs. tostringunsorted ( rs ), expected ) )
[2]: ( expected ) )
[3]: ) )
[4]: org. junit. assert. assertarrayequals ( repetitionss, res )

************

************
tgt: org . junit . assert . assertthat ( list . size ( ) , org . hamcrest . core . is . is ( expectedlistlength ) )
[0]: org. junit. assert. assertequals ( repetitionss, res )
[1]: org. junit. assert. assertequals ( res, middle )
[2]: org. junit. assert. assertnotnull ( res )
[3]: org. junit. assert. assertarrayequals ( repetitionss )
[4]: org. junit. assert. assertequals ( com. picocontainer. adapters. instanceadapter. class, componentadapter. getcomponentadaptertype ( ) )

************

************
tgt: org . junit . assert . assertnull ( org . eclipse . swt . widgets . display . finddisplay ( displaythread ) )
[0]: org. junit. assert. assertequals ( com. picocontainer. adapters. instanceadapter. getcomponentadaptertype ( ), componentadapter. getclass ( ) )
[1]: org. junit. assert. assertequals ( com. picocontainer. adapters. instanceadapter. getclass ( ), componentadapter. getcomponentadaptertype ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class, componentadapter. getcomponentadaptertype ( ) )
[3]: org. junit. assert. assertnotnull ( componentadapter. getcomponentadaptertype ( ) )
[4]: org. junit. assert. assertequals ( 1, counter. times )

************

************
tgt: org . junit . assert . assertequals ( order , saleposition . getorder ( ) )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), actual )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 0 ), actual )
[2]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 2 ), actual )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 4 ), actual )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 3 ), actual )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertnotnull ( doc )
[1]: org. junit. assert. assertnotnull ( doc. body ( ) )
[2]: org. junit. assert. assertnull ( doc. body ( ) )
[3]: org. junit. assert. assertnull ( doc )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( schema , newschema )
[0]: org. junit. assert. assertequals ( 1, topitems. size ( ) )
[1]: org. junit. assert. assertequals ( org. neo4j. graphalgo. impl. util. topkconsumertest. item4, topitems )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( org. neo4j. graphalgo. impl. util. topkconsumertest. item4 ), topitems )
[3]: org. junit. assert. assertequals ( org. neo4j. graphalgo. impl. util. topkconsumertest. item4, topitems. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( org. neo4j. graphalgo. impl. util. topkconsumertest. item4 ), topitems )

************

************
tgt: org . junit . assert . asserttrue ( ( ( paralellcalls . get ( ) ) > 5 ) )
[0]: org. junit. assert. assertarrayequals ( expected, totallen )
[1]: org. junit. assert. assertequals ( expected [ p ], totallen )
[2]: org. junit. assert. assertarrayequals ( expected, actual )
[3]: org. junit. assert. assertarrayequals ( expected, totallen, p )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "url" , setting . getjdbcurl ( ) )
[0]: org. junit. assert. assertequals ( 1000, bean. getamount ( ) )
[1]: org. junit. assert. assertequals ( 1000, bean. getamount ( ), 0 )
[2]: org. junit. assert. assertequals ( 1000, beans. getamount ( ) )
[3]: org. junit. assert. assertequals ( 1000, bean. loadall ( ) )
[4]: org. junit. assert. assertnotnull ( bean. getamount ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. asserttrue ( driver. isrunning ( ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( result, null )
[3]: org. junit. assert. assertequals ( result, result )
[4]: , result )

************

************
tgt: org . junit . assert . assertequals ( ( sendcountbefore + 1 ) , com . kakao . hbase . common . util . alertsender . getsendcount ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( java. lang. string. class, org. terasoluna. gfw. web. el. functions. maptoquery ( map, null ) )
[2]: org. junit. assert. assertnull ( org. terasoluna. gfw. web. el. functions. maptoquery ( map, null ) )
[3]: org. junit. assert. assertequals ( org. terasoluna. gfw. web. el. functions. maptoquery ( map, null ), testdeprecated. maptoquery ( map, null ) )
[4]: org. junit. assert. assertthat ( org. terasoluna. gfw. web. el. functions. maptoquery ( map, null ), org. hamcrest. corematchers. is ( string ) )

************

************
tgt: org . junit . assert . assertequals ( true , hasspecialchar )
[0]: org. junit. assert. assertthat ( org. terasoluna. gfw. web. el. functions. maptoquery ( map, null ), org. hamcrest. corematchers. is ( null ) )
[1]: org. junit. assert. assertequals ( new java. lang. double ( 42.7 ), castedelement. getdouble ( ) )
[2]: org. junit. assert. assertequals ( 1, castedelement. getdouble ( ) )
[3]: org. junit. assert. assertequals ( new java. lang. double ( 2 ), castedelement. getdouble ( ) )
[4]: org. junit. assert. assertequals ( 0, castedelement. getdouble ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , events )
[0]: org. junit. assert. assertequals ( new java. lang. double ( 42.7 ), castedelement. getdouble ( ), 0 )
[1]: org. junit. assert. assertnotnull ( url )
[2]: org. junit. assert. assertnull ( url )
[3]: org. junit. assert. assertnotnull ( uri )
[4]: , url )

************

************
tgt: org . junit . assert . assertequals ( in , out )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( term )
[2]: org. junit. assert. assertnotnull ( term. paused ( ) )
[3]: org. junit. assert. assertequals ( 1, term. paused ( ) )
[4]: org. junit. assert. assertequals ( 0, term. paused ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , victim . gettotalusage ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( l, 1 )
[2]: org. junit. assert. assertequals ( l, 2 )
[3]: org. junit. assert. assertequals ( l, 1l )
[4]: org. junit. assert. assertequals ( l, 0l )

************

************
tgt: org . junit . assert . assertequals ( expectedtransactioncount , actualcount )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, pooperationrecords. size ( ) )
[2]: org. junit. assert. assertequals ( 0, pooperationrecords. size ( ) )
[3]: org. junit. assert. assertequals ( 3, pooperationrecords. size ( ) )
[4]: org. junit. assert. assertequals ( int_1, pooperationrecords. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , newestversion . getindex ( ) )
[0]: org. junit. assert. assertequals ( 1, m. getontologyparsers ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, m. getontologyparsers ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( m. getontologyparsers ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), m )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( processor . statement ( "select<sp>*<sp>from<sp>x" ) , org . hamcrest . corematchers . is ( expected ) )
[0]: org. junit. assert. assertequals ( 20, rowcount )
[1]: org. junit. assert. assertequals ( org. deri. tarql. largeinputtest. ex, out. getbyteswritten ( ) )
[2]: org. junit. assert. assertequals ( org. deri. tarql. largeinputtest. message, out. getbyteswritten ( ) )
[3]: org. junit. assert. assertequals ( org. deri. tarql. largeinputtest. expected, out. getbyteswritten ( ) )
[4]: org. junit. assert. assertequals ( org. deri. tarql. largeinputtest. s, out. getbyteswritten ( ) )

************

************
tgt: org . junit . assert . asserttrue ( msg , dynany . equal ( dynany2 ) )
[0]: org. junit. assert. assertequals ( lines, out. getbyteswritten ( ) )
[1]: org. junit. assert. assertequals ( t, type. getname ( ) )
[2]: org. junit. assert. assertnotnull ( type. getname ( ) )
[3]: org. junit. assert. assertequals ( t. getname ( ), type. name )
[4]: org. junit. assert. assertnull ( type. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( ra . getconfigproperties ( ) . tostring ( ) , 0 , ra . getconfigproperties ( ) . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, objects. size ( ) )
[2]: org. junit. assert. assertequals ( 0, objects. size ( ) )
[3]: org. junit. assert. assertequals ( 3, objects. size ( ) )
[4]: org. junit. assert. assertfalse ( obj. equals ( obj ) )

************

************
tgt: org . junit . assert . assertequals ( outputcss , writercaptor . getvalue ( ) )
[0]: org. junit. assert. assertfalse ( obj. equals ( null ) )
[1]: org. junit. assert. assertfalse ( obj. equals ( new java. lang. object ( ) ) )
[2]: org. junit. assert. assertfalse ( obj. equals ( new java. lang. string ( ) ) )
[3]: org. junit. assert. assertfalse ( obj. equals ( new java. util. arraylist ( ) ) )
[4]: org. junit. assert. assertequals ( true, loaded )

************

************
tgt: org . junit . assert . assertsame ( solution2 , org . uma . jmetal . util . solutionlistutils . findbestsolution ( list , comparator ) )
[0]: org. junit. assert. assertequals ( false, loaded )
[1]: org. junit. assert. assertnull ( concept )
[2]: org. junit. assert. assertnotnull ( concept )
[3]: org. junit. assert. assertequals ( null, concept )
[4]: org. junit. assert. assertequals ( label ( ), concept )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( expected ) )
[0]: ) )
[1]: org. junit. assert. assertarrayequals ( expected, actual )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertarrayequals ( actual, expected )
[4]: org. junit. assert. assertarrayequals ( expected, actual )

************

************
tgt: org . junit . assert . assertnotnull ( ncp )
[0]: , actual )
[1]: org. junit. assert. assertsame ( exceptionmessage, exceptioncaptor. getvalue ( ) )
[2]: org. junit. assert. assertnull ( exceptioncaptor. getvalue ( httpresponse ) )
[3]: org. junit. assert. assertsame ( exceptionsmessage, exceptioncaptor. getvalue ( ) )
[4]: org. junit. assert. assertnull ( exceptioncaptor. getvalue ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( expectedurl0 . equals ( actualurl ) ) || ( expectedurl1 . equals ( actualurl ) ) ) )
[0]: org. junit. assert. assertsame ( throwablemessage, exceptioncaptor. getvalue ( ) )
[1]: org. junit. assert. assertequals ( org. drools. chance. distribution. probability. discrete. testdiscretedistperformance. numadd, org. drools. chance. distribution. probability. discrete. testdiscretedistperformance. treeset treesetdistr. size ( ) )
[2]: org. junit. assert. assertequals ( 5, store. store ( ""test"" ) )
[3]: org. junit. assert. assertequals ( ""test"", store. store ( ""test"" ) )
[4]: org. junit. assert. assertequals ( ""bar"", store. store ( ""test"" ) )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , trackable . read ( new byte [ 16 ] , 0 , 8 ) )
[0]: org. junit. assert. assertequals ( 1, store. store ( ""test"" ) )
[1]: org. junit. assert. assertequals ( ""1"", store. store ( ""test"" ) )
[2]: org. junit. assert. assertequals ( 1, c. number ( ) )
[3]: org. junit. assert. assertequals ( 0, c. number ( ) )
[4]: org. junit. assert. assertequals ( str, dtparsed. tostring ( ), time. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( x . equals ( y ) )
[0]: org. junit. assert. assertequals ( str, dtparsed. tostring ( ) )
[1]: org. junit. assert. assertequals ( newlist ( 1, 2, 3, 4 ), drainedto )
[2]: org. junit. assert. assertequals ( newlist ( 1, 2, 3 ), drainedto )
[3]: org. junit. assert. assertequals ( newlist ( 1, 2, 3, 5 ), drainedto )
[4]: org. junit. assert. assertequals ( newlist ( 2, 3, 4 ), drainedto )

************

************
tgt: org . junit . assert . assertnotnull ( entry )
[0]: org. junit. assert. assertequals ( newlist ( 2, 5 ), drainedto )
[1]: org. junit. assert. assertequals ( vxtrxloglistt, expectedvxtrxloglistt )
[2]: org. junit. assert. assertequals ( expectedvxtrxloglistt, expectedvxtrxloglistt )
[3]: org. junit. assert. assertequals ( trip, method. invoke ( calendar ) )
[4]: org. junit. assert. assertequals ( 1, method. invoke ( trip ) )

************

************
tgt: org . junit . assert . assertnotnull ( feedbackbatch )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( trip ), method )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( trip ), method )
[2]: ) )
[3]: org. junit. assert. assertequals ( expectedresult, result )
[4]: org. junit. assert. assertthat ( arenumberseven, org. hamcrest. matchers. contains ( true, false, true ) )

************

************
tgt: org . junit . assert . assertequals ( boolean . false , result )
[0]: org. junit. assert. assertthat ( arenumberseven, org. hamcrest. corematchers. equalto ( arenumberseven ) )
[1]: org. junit. assert. assertequals ( arenumberseven, arenumberseven )
[2]: org. junit. assert. assertequals ( list, arenumberseven )
[3]: org. junit. assert. assertequals ( all, arenumberseven )
[4]: org. junit. assert. assertequals ( true, server. start ( ) )

************

************
tgt: org . junit . assert . asserttrue ( emailaddresses . isempty ( ) )
[0]: org. junit. assert. assertequals ( group, peer )
[1]: org. junit. assert. assertnotnull ( peer )
[2]: org. junit. assert. assertnull ( peer )
[3]: org. junit. assert. assertequals ( null, peer )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( map . containskey ( 123 ) )
[0]: org. junit. assert. assertnotnull ( ds. getschema ( ) )
[1]: org. junit. assert. assertequals ( null, ds. getschema ( ) )
[2]: org. junit. assert. assertequals ( 0, victim. getavailablestrategies ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, victim. getavailablestrategies ( ). size ( ) )
[4]: org. junit. assert. assertfalse ( victim. getavailablestrategies ( ). isempty ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedplaintext , decryptedplaintext )
[0]: org. junit. assert. assertequals ( 0, victim. getavailablestrategies ( ). size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( original, result )
[3]: org. junit. assert. assertthat ( result, is ( original ) )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertthat ( sut . difference ( other ) , org . hamcrest . matchers . is ( expected ) )
[0]: , result )
[1]: ) )
[2]: org. junit. assert. assertnull ( grid. getpreviousvisiblecolumn ( columns [ 0 ] ) )
[3]: org. junit. assert. assertnull ( grid. getpreviousvisiblecolumn ( columns [ 1 ] ) )
[4]: org. junit. assert. assertnull ( grid. getpreviousvisiblecolumn ( columns ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , singlecsvrecord . getvalues ( ) . size ( ) )
[0]: org. junit. assert. assertnull ( grid. getpreviousvisiblecolumn ( columns [ 2 ] ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( bitfield, startelapsedencodingstrategy. prev_equals )
[3]: org. junit. assert. assertequals ( bitfield, setupelapsedencodingstrategy. prev_equals )
[4]: org. junit. assert. assertequals ( bitfield, preelapsedencodingstrategy. prev_equals )

************

************
tgt: org . junit . assert . assertnull ( actie . bepaaltevervallenvoorkomen ( ) )
[0]: org. junit. assert. assertequals ( bitfield, txelapsedencodingstrategy. prev_equals )
[1]: ) )
[2]: org. junit. assert. assertequals ( srstimejacardindex. get ( key ), timejacardindex. get ( key ) )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertthat ( org. slim3. jsp. functions. nbsp ( """" ), org. hamcrest. corematchers. is ( """" ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , getresult ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( "", org. slim3. jsp. functions. nbsp ( """" ) )
[1]: org. junit. assert. assertequals ( ""a"", org. slim3. jsp. functions. nbsp ( """" ) )
[2]: org. junit. assert. assertequals ( """", org. slim3. jsp. functions. nbsp ( """" ) )
[3]: org. junit. assert. assertequals ( ""a"", org. slim3. jsp. functions. nbsp ( """". tostring ( ) ) )
[4]: org. junit. assert. assertfalse ( ismetaregion ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new java . lang . object [ ] { . class , . class } , parametertypes )
[0]: org. junit. assert. assertfalse ( client. ismetaregion ( ) )
[1]: org. junit. assert. assertfalse ( configuration. ismetaregion ( ) )
[2]: org. junit. assert. assertfalse ( org. apache. hadoop. hbase. client. regioninfobuilder. ismetaregion )
[3]: org. junit. assert. assertfalse ( org. apache. hadoop. hbase. client. regioninfobuilder. ismetaregion
[4]: org. junit. assert. assertnotnull ( sdk23. getaaptpath ( ) )

************

************
tgt: org . junit . assert . assertequals ( size , result . getstatesize ( ) )
[0]: org. junit. assert. assertnotnull ( sdk23 )
[1]: type ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnotnull ( data. getfullpath ( ) )

************

************
tgt: org . junit . assert . assertthat ( c . compute ( ) , org . hamcrest . matchers . is ( 23 ) )
[0]: org. junit. assert. assertequals ( null, data. getfullpath ( ) )
[1]: org. junit. assert. assertequals ( 1, data. getfullpath ( ) )
[2]: org. junit. assert. assertnotnull ( data )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, cascaded. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( initial_size < ending_size ) )
[0]: org. junit. assert. assertequals ( 1, cascaded. getvertices ( ). length )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertnotnull ( results )
[3]: org. junit. assert. assertnotnull ( response )
[4]: org. junit. assert. assertnotnull ( resultset )

************

************
tgt: org . junit . assert . assertequals ( "foo" , info . getbodyasstring ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 2, ex. size ( ) )
[2]: org. junit. assert. assertequals ( exp, ex. size ( ) )
[3]: org. junit. assert. assertequals ( expected, ex. size ( ) )
[4]: org. junit. assert. assertequals ( expected, ex. get ( ) )

************

************
tgt: org . junit . assert . assertsame ( this . metadatafactory , this . factory . getmetadatafactory ( ) )
[0]: org. junit. assert. assertequals ( exp, ex. get ( ) )
[1]: org. junit. assert. assertequals ( datamap, concurrentreferencekeyhashmap. putall ( datamap ) )
[2]: org. junit. assert. assertequals ( datamap, concurrentreferencekeyhashmap. get ( datamap ) )
[3]: org. junit. assert. assertequals ( datamap, concurrentreferencekeyhashmap. get ( datamap. tostring ( ) ) )
[4]: org. junit. assert. assertequals ( datamap, concurrentreferencekeyhashmap. put ( datamap ) )

************

************
tgt: org . junit . assert . assertnotnull ( fixture )
[0]: org. junit. assert. assertequals ( datamap, concurrentreferencekeyhashmap. get ( datamap. getid ( ) ) )
[1]: org. junit. assert. assertequals ( one, two )
[2]: org. junit. assert. assertequals ( 1, two )
[3]: org. junit. assert. asserttrue ( two. equals ( one ) )
[4]: org. junit. assert. assertequals ( first, two )

************

************
tgt: org . junit . assert . assertequals ( m1 , m2 )
[0]: org. junit. assert. asserttrue ( two. equals ( 1 ) )
[1]: org. junit. assert. assertequals ( 1, newlist. size ( ) )
[2]: org. junit. assert. assertequals ( 0, newlist. size ( ) )
[3]: org. junit. assert. assertequals ( 2, newlist. size ( ) )
[4]: org. junit. assert. assertequals ( 3, newlist. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( rw . next ( ) )
[0]: org. junit. assert. assertequals ( 1, newlist. size ( ), 1 )
[1]: org. junit. assert. assertequals ( 1, nlink )
[2]: org. junit. assert. assertequals ( nlink, 1 )
[3]: org. junit. assert. assertequals ( 0, nlink )
[4]: org. junit. assert. assertequals ( nlink, 0 )

************

************
tgt: org . junit . assert . assertequals ( 0 , meldingen . size ( ) )
[0]: org. junit. assert. assertequals ( 3, nlink )
[1]: org. junit. assert. assertequals ( 1, getrepositoriesrequest. getrepositorynames ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, getrepositoriesrequest. getrepositorynames ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 2, getrepositoriesrequest. getrepositorynames ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 3, getrepositoriesrequest. getrepositorynames ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( dog , "defaultanimal" )
[0]: ) )
[1]: org. junit. assert. assertequals ( value, ra. normalizetag ( value ). get ( ) )
[2]: org. junit. assert. assertequals ( value, ra. normalizreads ( value ). get ( ) )
[3]: org. junit. assert. assertequals ( value, ra. normalizdomain ( value ). get ( ) )
[4]: org. junit. assert. assertequals ( value, ra. normalizrot ( value ). get ( ) )

************

************
tgt: org . junit . assert . assertsame ( mocksession , session )
[0]: org. junit. assert. assertequals ( value, ra. normalizgeometry ( value ). get ( ) )
[1]: org. junit. assert. asserttrue ( panel. isvisible ( ) )
[2]: org. junit. assert. assertnotnull ( panel. isvisible ( ) )
[3]: org. junit. assert. assertequals ( "", panel. isvisible ( ) )
[4]: org. junit. assert. assertequals ( true, panel. isvisible ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , org . onlab . util . xmlstring . prettifyxml ( input ) . tostring ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, sink. todag ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( sink. todag ( ) )
[3]: org. junit. assert. assertequals ( 0, sink. todag ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, sink. todag ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedmethod , actualmethod )
[0]: org. junit. assert. assertequals ( null, sink. todag ( ). get ( ) )
[1]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( null ) )
[2]: org. junit. assert. asserttrue ( compliance. isstackcompliant ( c, mockserverentitlement, ents ) )
[3]: org. junit. assert. asserttrue ( compliance. isstackcompliant ( c, mockserverentitlement, new java. util. arraylist ( ) ) )
[4]: org. junit. assert. assertequals ( 1, compliance. isstackcompliant ( c, mockserverentitlement, ents ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, compliance. isstackcompliant ( c, mockserverentitlement, ents ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, isstackcompliant ( c, mockserverentitlement, ents ) )
[2]: org. junit. assert. assertfalse ( testresult )
[3]: org. junit. assert. assertequals ( 1, 1 )
[4]: org. junit. assert. assertnotnull ( lintresult )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( 1, stmt. count )
[1]: org. junit. assert. assertequals ( 1, stmt. getissues )
[2]: ) )
[3]: org. junit. assert. assertequals ( gitlabdate, gitlabdate )
[4]: org. junit. assert. assertnotnull ( gitlabdate )

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: org. junit. assert. assertequals ( org. gitlabdate, gitlabdate )
[1]: org. junit. assert. assertequals ( dpcdate, gitlabdate )
[2]: org. junit. assert. assertequals ( em, gitlabdate )
[3]: org. junit. assert. assertequals ( 1, licenses. size ( ) )
[4]: org. junit. assert. asserttrue ( licenses. isempty ( ) )

************

************
tgt: org . junit . assert . assertnull ( com . fincatto . documentofiscal . nfe310 . classes . nfnotainfoimpostotributacaoissqn . valueofcodigo ( "" ) )
[0]: org. junit. assert. assertequals ( 0, licenses. size ( ) )
[1]: org. junit. assert. assertnotnull ( licenses )
[2]: org. junit. assert. asserttrue ( licenses. contains ( licenses ) )
[3]: org. junit. assert. assertequals ( 1, elapsedtime )
[4]: org. junit. assert. assertequals ( 0, elapsedtime )

************

************
tgt: org . junit . assert . asserttrue ( s . isoneaway ( "a" , "b" ) )
[0]: org. junit. assert. asserttrue ( ( elapsedtime > 0 ) )
[1]: org. junit. assert. asserttrue ( ( elapsedtime > retries ) )
[2]: org. junit. assert. asserttrue ( ( elapsedtime > retries )
[3]: org. junit. assert. asserttrue ( a. isbundle ( ) )
[4]: org. junit. assert. assertequals ( true, a. isbundle ( ) )

************

************
tgt: org . junit . assert . assertnull ( compute . deletesnapshot ( com . google . cloud . compute . deprecated . computeimpltest . snapshot_id ) )
[0]: org. junit. assert. assertfalse ( valuemeta. isinteger ( ) )
[1]: org. junit. assert. assertfalse ( valuemeta. isinitialized ( ) )
[2]: org. junit. assert. assertfalse ( valuemeta.0, ( ) )
[3]: org. junit. assert. assertfalse ( valuemeta. controllers ( ) )
[4]: org. junit. assert. assertfalse ( billing. containskey ( null ) )

************

************
tgt: org . junit . assert . assertthat ( thinghandler . device . isinitialized ( ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertfalse ( billing. containskey ( string ) )
[1]: org. junit. assert. assertfalse ( billing. containskey ( 1 ) )
[2]: org. junit. assert. assertfalse ( billing. containskey ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( businessobjectdataentity3, result )

************

************
tgt: org . junit . assert . assertnull ( victim . nextparsedtoken ( ) )
[0]: org. junit. assert. assertequals ( businessobjectdataentity3, businessobjectdataentity2 )
[1]: org. junit. assert. assertequals ( businessobjectdataentity1, businessobjectdataentity2 )
[2]: org. junit. assert. assertequals ( businessobjectdataentity2, businessobjectdataentity2 )
[3]: org. junit. assert. assertequals ( businessobjectdataentity2, result )
[4]: org. junit. assert. assertequals ( true, test. assumecomplete ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , geboorte . valideer ( ) . size ( ) )
[0]: org. junit. assert. asserttrue ( fixture. assumecomplete ( ) )
[1]: org. junit. assert. assertfalse ( fixture. assumecomplete ( ) )
[2]: org. junit. assert. assertfalse ( operation. assumecomplete ( ) )
[3]: org. junit. assert. assertequals ( true, fixture. assumecomplete ( ) )
[4]: org. junit. assert. assertequals ( 1, conceptsearchresultlist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( dedatalayout1 . getdedatadefinitionid ( ) , dedatalayout2 . getdedatadefinitionid ( ) )
[0]: org. junit. assert. assertequals ( thresholdvalue, actualvalue )
[1]: org. junit. assert. assertequals ( new java. lang. long ( thresholdvalue ), actualvalue )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( thresholdvalue ), actualvalue )
[3]: org. junit. assert. assertequals ( new java. lang. long ( inertia ), actualvalue )
[4]: org. junit. assert. assertequals ( null, actualvalue )

************

************
tgt: org . junit . assert . asserttrue ( validator . validate ( entitynames . student_school_association , associations ) . equals ( associations ) )
[0]: org. junit. assert. assertequals ( expected, result )
[1]: org. junit. assert. asserttrue ( strings. contains ( groupid ) )
[2]: org. junit. assert. asserttrue ( strings. contains ( privacy ) )
[3]: org. junit. assert. asserttrue ( strings. contains ( details ) )
[4]: org. junit. assert. asserttrue ( strings. contains ( string ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , placed )
[0]: org. junit. assert. asserttrue ( strings. contains ( list. length )
[1]: org. junit. assert. assertequals ( 1, levels. size ( ) )
[2]: org. junit. assert. assertequals ( 3, levels. size ( ) )
[3]: org. junit. assert. assertequals ( 0, levels. size ( ) )
[4]: org. junit. assert. assertequals ( 1, list. length )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, list. length )
[1]: org. junit. assert. assertequals ( 3, list. length )
[2]: org. junit. assert. assertnotnull ( list )
[3]: org. junit. assert. assertequals ( 1, list. length, 0 )
[4]: org. junit. assert. assertnotnull ( rendered )

************

************
tgt: org . junit . assert . assertequals ( 0 , validationhelper . geteventssize ( ) )
[0]: org. junit. assert. assertequals ( result, rendered )
[1]: , rendered )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertnotnull ( parse )

************

************
tgt: org . junit . assert . assertfalse ( set1 . equals ( set2 ) )
[0]: org. junit. assert. assertequals ( time, parse )
[1]: org. junit. assert. assertnull ( parse )
[2]: org. junit. assert. assertequals ( date, parse )
[3]: ) )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. equalto ( true ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , counter . get ( ) )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. equalto ( 5 ) )
[1]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. equalto ( expected ) )
[2]: org. junit. assert. assertthat ( output, org. hamcrest. matchers. equalto ( expected ) )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. equalto ( false ) )
[4]: org. junit. assert. assertnotnull ( loaded )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertnotnull ( model )
[1]: org. junit. assert. assertequals ( 3, model. size ( ) )
[2]: org. junit. assert. assertnotnull ( md )
[3]: org. junit. assert. assertequals ( 3, ret )
[4]: org. junit. assert. assertequals ( rdfs. label, dialect. getobject ( stmt ) )

************

************
tgt: org . junit . assert . asserttrue ( config . isvalid ( ) )
[0]: org. junit. assert. assertequals ( rdfs. label, dialect. getobject ( stmt ). label )
[1]: org. junit. assert. assertnotnull ( dialect. getobject ( stmt ) )
[2]: org. junit. assert. assertequals ( rdf. label, dialect. getobject ( stmt ) )
[3]: org. junit. assert. assertequals ( stmt, dialect. getobject ( stmt ) )
[4]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( user . getstatuses ( ) )
[0]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( """", e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ). trim ( ) )
[3]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), list )

************

************
tgt: org . junit . assert . asserttrue ( q1 . equals ( cloneq1 ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), list )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 1 ), list )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 0 ), list )
[3]: type ) )
[4]: org. junit. assert. asserttrue ( landcode. isnederlandcode ( ) )

************

************
tgt: org . junit . assert . assertequals ( linha , gerador . geralinhadigitavelpara ( codigodebarras , this . banco ) )
[0]: org. junit. assert. asserttrue ( globaldomainaccesscontrollersubjectcalls. isempty ( ) )
[1]: org. junit. assert. asserttrue ( globaldomainaccesscontrollersubjectcalls. get ( type ). get ( ) )
[2]: org. junit. assert. asserttrue ( globaldomainaccesscontrollersubjectcalls. get ( type ). isempty ( ) )
[3]: org. junit. assert. asserttrue ( globaldomainaccesscontrollersubjectcalls. get ( type ). delete ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertarrayequals ( config, actual )
[1]: org. junit. assert. assertnotnull ( actual )
[2]: , actual )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. asserttrue ( ( ( bean. getsubscriptionslistsize ( ) ) == 3 ) )
[1]: org. junit. assert. asserttrue ( ( ( bean. getsubscriptionslistsize ( ) ) == null ) )
[2]: org. junit. assert. asserttrue ( ( ( bean. getsubscriptionslistsize ( ) ) == 0 ) )
[3]: org. junit. assert. assertequals ( 1, dscaptor. getvalue ( ). size ( ) )
[4]: org. junit. assert. assertequals ( een, een )

************

************
tgt: org . junit . assert . assertarrayequals ( centroidexpected , location . getcentroid ( ) )
[0]: org. junit. assert. assertnotnull ( een )
[1]: org. junit. assert. assertnotnull ( startlevel. getstartlevel ( ) )
[2]: org. junit. assert. assertnull ( startlevel. getstartlevel ( ) )
[3]: org. junit. assert. assertnotnull ( startlevel )
[4]: org. junit. assert. assertnotnull ( beginlevel. getstartlevel ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , count )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, res. size ( ) )
[2]: org. junit. assert. assertequals ( 1, trackupdater. getpairwithlayers ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, configurecalled [ 0 ] )
[4]: org. junit. assert. assertequals ( true, configurecalled [ 0 ] )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, results. size ( ) )
[1]: org. junit. assert. assertequals ( largemap, serialize ( channel, command ) )
[2]: org. junit. assert. assertequals ( largemap, serialize ( channel, extensions ) )
[3]: org. junit. assert. assertequals ( largemap, serialize ( channel, args ) )
[4]: org. junit. assert. assertequals ( largemap, serializer. serialize ( channel, command ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( fields . length ) >= 1 ) )
[0]: org. junit. assert. assertequals ( largemap, serializer. serialize ( channel, extensions ) )
[1]: org. junit. assert. assertnotnull ( meta. containfunction ( meta, null ) )
[2]: org. junit. assert. assertnotnull ( meta. containfunction ( meta, request ) )
[3]: org. junit. assert. assertnotnull ( meta. containfunction ( null, null ) )
[4]: org. junit. assert. assertnotnull ( meta. containfunction ( meta, response ) )

************

************
tgt: org . junit . assert . assertnotnull ( userparam . getvalue ( ) )
[0]: org. junit. assert. assertnotnull ( meta. containfunction ( null, request ) )
[1]: org. junit. assert. assertequals ( n, arg0. getitemcount ( 1 ) )
[2]: org. junit. assert. assertequals ( n, arg0. getitemcount ( 0 ) )
[3]: org. junit. assert. assertequals ( 1, arg0. getitemcount ( n ) )
[4]: org. junit. assert. assertequals ( 1, arg0. getitemcount ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( expectedxmlgregoriancalendar , calendardemo . toxmlgregoriancalendar ( calendaractual ) )
[0]: org. junit. assert. assertequals ( n, arg0. getitemcount ( n ) )
[1]: org. junit. assert. assertequals ( null, jsonobject )
[2]: org. junit. assert. assertequals ( expectedjsonobject ( jsonobject ), jsonobject )
[3]: org. junit. assert. assertequals ( new "< ( ), jsonobject )
[4]: org. junit. assert. assertequals ( 0, jsonobject. list ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( check . equals ( o ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( instance )
[2]: org. junit. assert. assertequals ( 1, instance. count )
[3]: org. junit. assert. assertnotnull ( instance. getid ( ) )
[4]: result ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , controls . size ( ) )
[0]: input )
[1]: org. junit. assert. assertnotnull ( action. getplacetype ( ) )
[2]: org. junit. assert. assertequals ( null, action. getplacetype ( ) )
[3]: org. junit. assert. assertnull ( action. getplacetype ( ) )
[4]: org. junit. assert. assertnotnull ( request. getplacetype ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , table . getcolcount ( ) )
[0]: org. junit. assert. assertequals ( 1, action. getplacetype ( ) )
[1]: org. junit. assert. assertequals ( 0, net. openhft. lang. io. serialization. direct. directserializationfilter. stopatfirstineligiblefield ( field ). size ( ) )
[2]: org. junit. assert. assertequals ( field, net. openhft. lang. io. serialization. direct. directserializationfilter. stopatfirstineligiblefield ( field ) )
[3]: org. junit. assert. assertequals ( 1, net. openhft. lang. io. serialization. direct. directserializationfilter. stopatfirstineligiblefield ( field ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, net. openhft. lang. io. serialization. direct. directserializationfilter. stopatfirstineligiblefield ( field ). length )

************

************
tgt: org . junit . assert . assertnull ( com . datatorrent . stram . util . loggerutil . getlogfileinformation ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected_query, parsedquery. cleanjson ( ) )
[2]: org. junit. assert. assertequals ( expected_query, parsedquery. trim ( ) )
[3]: org. junit. assert. assertequals ( expected_query, parsedquery. cleanjson ( null ) )
[4]: org. junit. assert. assertequals ( expected_query, parsedquery. cleanjson ( string ) )

************

************
tgt: org . junit . assert . assertnull ( existingmdraction )
[0]: ) )
[1]: org. junit. assert. assertequals ( new java. lang. integer ( 3 ), get ( future ) )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), get ( future ) )
[3]: org. junit. assert. assertequals ( new java. lang. integer ( 9 ), get ( future ) )
[4]: org. junit. assert. assertequals ( new java. lang. integer ( 7 ), get ( future ) )

************

************
tgt: org . junit . assert . assertequals ( bigperson , realize )
[0]: get ( future ) )
[1]: org. junit. assert. assertnull ( slice. generatestepabove ( null ) )
[2]: org. junit. assert. assertnotnull ( slice. generatestepabove ( null ) )
[3]: org. junit. assert. assertnotnull ( slice )
[4]: org. junit. assert. assertnull ( slice )

************

************
tgt: org . junit . assert . assertthat ( loggers , org . hamcrest . matchers . equalto ( this . loggers ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( content )
[2]: org. junit. assert. assertequals ( 1, content. size ( ) )
[3]: org. junit. assert. assertequals ( 1, content. getvertices ( ). length )
[4]: org. junit. assert. assertequals ( 0, content. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( runner . runvalidateconfigs ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, content. values ( ). length )
[1]: org. junit. assert. assertnotnull ( ret )
[2]: org. junit. assert. assertequals ( null, ret )
[3]: org. junit. assert. assertnotnull ( ret. getmessage ( ) )
[4]: org. junit. assert. assertequals ( null, ret. values )

************

************
tgt: org . junit . assert . assertnotnull ( reader )
[0]: org. junit. assert. assertnull ( ret )
[1]: org. junit. assert. assertfalse ( result )
[2]: org. junit. assert. assertnotnull ( hello )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( "hello ), hello )
[4]: org. junit. assert. assertequals ( new java. lang. string ( orghellobot ), hello )

************

************
tgt: org . junit . assert . assertequals ( params . dockerforcepullimage ( ) , false )
[0]: org. junit. assert. assertequals ( new java. lang. string ( "hellobot ), hello )
[1]: org. junit. assert. assertequals ( null, hello. get ( ) )
[2]: org. junit. assert. assertnotnull ( s )
[3]: org. junit. assert. assertequals ( s, fromjson )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( dmlscript . runtime_platform . hybrid , o . execmode )
[0]: org. junit. assert. assertequals ( s, result )
[1]: org. junit. assert. assertequals ( s, n )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnotnull ( s )
[4]: org. junit. assert. assertequals ( 1, count )

************

************
tgt: org . junit . assert . assertequals ( "one" , firstelement )
[0]: the test case
[1]: ) )
[2]: org. junit. assert. assertequals ( 0.0, result, 0.0 )
[3]: org. junit. assert. assertequals ( version, expected. version ( ) )
[4]: org. junit. assert. assertequals ( buildversion. version ( ), version )

************

************
tgt: org . junit . assert . assertnotnull ( store . createtokenname ( classannotation , methodannotation ) )
[0]: org. junit. assert. assertequals ( buildversion. version, version )
[1]: org. junit. assert. assertnotnull ( version )
[2]: org. junit. assert. assertequals ( 1, version )
[3]: org. junit. assert. asserttrue ( lock1. trylock ( ) )
[4]: org. junit. assert. assertfalse ( lock1. trylock ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. asserttrue ( lock2. trylock ( ) )
[1]: org. junit. assert. assertequals ( totime, counts )
[2]: org. junit. assert. assertequals ( totime. gettime ( ), counts )
[3]: org. junit. assert. assertequals ( totime, count )
[4]: org. junit. assert. assertequals ( totalime, counts )

************

************
tgt: org . junit . assert . asserttrue ( ( ( futures . size ( ) ) == 1 ) )
[0]: org. junit. assert. assertequals ( totime. gettime ( ), count )
[1]: org. junit. assert. assertthat ( task. getname ( ), org. hamcrest. core. is. is ( nametask1 ) )
[2]: org. junit. assert. assertequals ( 1, decodedconf. tomap ( conf ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, decodedconf. tomap ( conf ). size ( ) )
[4]: org. junit. assert. assertequals ( s, decodedconf. tomap ( conf ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( conf ), decodedconf )
[1]: ) )
[2]: org. junit. assert. asserttrue ( userstab )
[3]: org. junit. assert. assertnotnull ( userstab )
[4]: org. junit. assert. assertequals ( true, userstab )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. asserttrue ( userstab, userconcat )
[1]: ) )
[2]: org. junit. assert. assertequals ( parent. getname ( ), retrievedparent. getname ( ) )
[3]: org. junit. assert. assertequals ( root. getname ( ), retrievedparent. getname ( ) )
[4]: org. junit. assert. assertequals ( null, retrievedparent. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( out . get ( ) , ( ( net . imagej . ops . math . unaryrealtypemathtest . large_num ) - 1 ) )
[0]: org. junit. assert. assertequals ( my. getname ( ), retrievedparent. getname ( ) )
[1]: org. junit. assert. assertequals ( name, retrievedparent. getname ( ) )
[2]: org. junit. assert. assertnotnull ( request. getheader ( null ) )
[3]: org. junit. assert. assertnotnull ( request. getheader ( ""foo"" ) )
[4]: org. junit. assert. assertnotnull ( request. getheader ( name ) )

************

************
tgt: org . junit . assert . assertequals ( d1 , d2 )
[0]: org. junit. assert. assertnotnull ( request. getheader ( ""a"" ) )
[1]: type ) )
[2]: org. junit. assert. assertfalse ( imappattributes. isimappformat ( ) )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( ( initialgroupuserscount + 1 ) , com . liferay . portal . kernel . service . userlocalserviceutil . getgroupuserscount ( requiredgroupids [ 0 ] ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertsame ( expected )
[2]: org. junit. assert. assertequals ( expected, result )
[3]: org. junit. assert. assertequals ( 23, result. getheight ( ) )
[4]: org. junit. assert. assertsame ( result, fontdata. getheight ( ) )

************

************
tgt: org . junit . assert . assertthat ( record2 , org . hamcrest . corematchers . equalto ( record ) )
[0]: org. junit. assert. assertsame ( 23, result. getheight ( ) )
[1]: org. junit. assert. assertsame ( fontdata, result. getheight ( ) )
[2]: org. junit. assert. assertnotnull ( result. getheight ( ) )
[3]: org. junit. assert. assertequals ( pos, returnedarray [ i ] )
[4]: org. junit. assert. assertequals ( position, returnedarray [ i ] )

************

************
tgt: org . junit . assert . assertequals ( 100 , getnumberofrecords ( sample ) )
[0]: org. junit. assert. assertequals ( pos, returnedarray [ i ], 0 )
[1]: org. junit. assert. assertequals ( pos, returnedarray. length )
[2]: i )
[3]: org. junit. assert. assertsame ( function, behaviors )
[4]: org. junit. assert. assertsame ( clientbehavior, behaviors )

************

************
tgt: org . junit . assert . assertequals ( 0 , control . size ( ) )
[0]: org. junit. assert. assertsame ( function, behaviors. size ( ) )
[1]: org. junit. assert. assertsame ( functions, behaviors )
[2]: org. junit. assert. assertsame ( function, behaviors. isempty ( ) )
[3]: org. junit. assert. assertequals ( testcount, all. size ( ) )
[4]: org. junit. assert. assertequals ( testscount, all. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( b2 . isstreamcopyoptimized ( ) )
[0]: org. junit. assert. assertequals ( testcount, every. size ( ) )
[1]: org. junit. assert. assertequals ( testcount, any. size ( ) )
[2]: org. junit. assert. assertequals ( testcount, each. size ( ) )
[3]: org. junit. assert. assertfalse ( isequal ( expectedrange, existingrange ) )
[4]: org. junit. assert. assertequals ( 0, x )

************

************
tgt: org . junit . assert . assertnull ( existingsocialactivitysetting )
[0]: org. junit. assert. assertequals ( 1, x )
[1]: org. junit. assert. asserttrue ( ( x == 0 ) )
[2]: org. junit. assert. asserttrue ( ( x == 1 ) )
[3]: org. junit. assert. assertequals ( 0, x ) ;
[4]: org. junit. assert. assertequals ( null, resultrob )

************

************
tgt: org . junit . assert . asserttrue ( nichandle . equals ( net . ripe . db . whois . update . domain . nichandle . parse ( "dw" , source , countrycodes ) ) )
[0]: org. junit. assert. assertnull ( resultrob )
[1]: org. junit. assert. assertnotnull ( resultrob )
[2]: org. junit. assert. assertequals ( resultrob, onbekenkenenopschorting )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, root. children ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "192.168.1.1" , com . cloud . api . apiservlet . getclientaddress ( request ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), children ( ) )
[1]: org. junit. assert. assertequals ( 0, root. children ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, children ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, collection. children ( ). size ( ) )
[4]: org. junit. assert. asserttrue ( expectinterrupt. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( favoritesresp . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( expectinterrupt. get ( ) )
[1]: org. junit. assert. asserttrue ( expectinterrupt )
[2]: org. junit. assert. assertequals ( true, expectinterrupt )
[3]: get ( ) )
[4]: org. junit. assert. assertequals ( 0, factory. _non_existent ( ). length )

************

************
tgt: org . junit . assert . assertarrayequals ( new int [ ] { 1 , 1 } , stmt . executebatch ( ) )
[0]: org. junit. assert. assertequals ( 1, factory. _non_existent ( ). length )
[1]: org. junit. assert. assertnotnull ( factory. _non_existent ( ) )
[2]: org. junit. assert. assertequals ( 0, factory. _non_existent ( ). size ( )
[3]: org. junit. assert. assertequals ( 1, factory. _non_existent ( ). size ( )
[4]: org. junit. assert. assertequals ( true, sink. getinvalidconfiguration ( ) )

************

************
tgt: org . junit . assert . assertequals ( infoeventoretorno , retorno . getinfoeventoretorno ( ) )
[0]: org. junit. assert. assertequals ( null, sink. getinvalidconfiguration ( ) )
[1]: org. junit. assert. assertequals ( state, sink. getinvalidconfiguration ( ) )
[2]: org. junit. assert. assertequals ( 1, sink. getinvalidconfiguration ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( true, cut. contains ( activity ) )

************

************
tgt: org . junit . assert . assertequals ( expectedmethods , calledmethods )
[0]: org. junit. assert. asserttrue ( cut. contains ( activity ) )
[1]: org. junit. assert. assertequals ( true, cut. contains ( event ) )
[2]: org. junit. assert. assertequals ( true, cut. contains ( activities ) )
[3]: org. junit. assert. assertequals ( false, cut. contains ( activity ) )
[4]: org. junit. assert. assertthat ( net. time4j. range. dateinterval. between ( start, end ). isempty ( ), org. hamcrest. corematchers. is ( true ) )

************

************
tgt: org . junit . assert . assertthat ( foundresources , contains ( p1id . getvalue ( ) ) )
[0]: org. junit. assert. assertthat ( net. time4j. range. dateinterval. between ( start, end ). contains ( end ), org. hamcrest. corematchers. is ( true ) )
[1]: org. junit. assert. assertequals ( 1, content. getparameters ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, content. getparameters ( ). length )
[3]: org. junit. assert. assertequals ( 0, content. getparameters ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, content. getparameters ( ). length )

************

************
tgt: org . junit . assert . assertequals ( rejectedgenes , dataadapter . getrejectedgenes ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, filter. getoperators ( ). length )
[2]: org. junit. assert. assertfalse ( filter. getoperators ( ). isempty ( ) )
[3]: org. junit. assert. assertequals ( s1, s2 )
[4]: org. junit. assert. assertequals ( s2, s1 )

************

************
tgt: org . junit . assert . assertequals ( 1 , com . streamsets . pipeline . stage . origin . http . httpclientsourceit . tokengetcount )
[0]: org. junit. assert. assertequals ( s0, s2 )
[1]: org. junit. assert. asserttrue ( ( s1 == s2 ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( obj )
[4]: org. junit. assert. assertequals ( org. bonitasoft. engine. operation. operation. class, datainstance. getvalue ( ) )

************

************
tgt: org . junit . assert . assertfalse ( props . iterator ( ) . hasnext ( ) )
[0]: org. junit. assert. assertequals ( 1l, datainstance. getvalue ( ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1l ), datainstance. getvalue ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( lastnamedisplay ), datainstance. getvalue ( ) )
[3]: org. junit. assert. assertequals ( 0l, datainstance. getvalue ( ) )
[4]: org. junit. assert. assertfalse ( segment. matchingdescendant ( compare ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , query . where ( filter ) . list ( $ ( n ) ) . size ( ) )
[0]: org. junit. assert. assertfalse ( segments. matchingdescendant ( compare ) )
[1]: org. junit. assert. assertfalse ( filter. matchingdescendant ( compare ) )
[2]: org. junit. assert. assertfalse ( compare. matchingdescendant ( p ) )
[3]: ( compare ) )
[4]: org. junit. assert. asserttrue ( ( plusone >= 1 ) )

************

************
tgt: org . junit . assert . assertequals ( "http://www.bing.com" , builder . tostring ( ) )
[0]: org. junit. assert. asserttrue ( ( plusone == 1 ) )
[1]: org. junit. assert. asserttrue ( ( plusone > 1 ) )
[2]: org. junit. assert. asserttrue ( ( plusone!= 1 ) )
[3]: org. junit. assert. asserttrue ( ( plusone < 1 ) )
[4]: org. junit. assert. assertequals ( 0, gethistory ( user ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( c1 . equals ( c2 ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. apache. jackrabbit. oak. security. user. passwordhistorytest. gethistory ( user ) )
[1]: org. junit. assert. assertequals ( 1, gethistory ( user ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( user ), gethistory ( user ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( actualtranslation. get ( 0 ), actualtranslation. get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( "my<sp>url" , framedata . geturl ( ) )
[0]: org. junit. assert. assertequals ( actualtranslation. get ( ), actualtranslation. get ( ) )
[1]: org. junit. assert. assertequals ( actualtranslation. get ( org. onosproject. pipelines. fabric. pipeliner. port_1 ), actualtranslation. get ( ) )
[2]: org. junit. assert. assertequals ( actualtranslation. read ( ), actualtranslation. read ( ) )
[3]: org. junit. assert. assertequals ( actualtranslation. get ( org. onosproject. pipelines. fabric. pipeliner. port_1 ), actualtranslation. read ( ) )
[4]: org. junit. assert. assertarrayequals ( input, output )

************

************
tgt: org . junit . assert . asserttrue ( this . retry ( callable ) )
[0]: org. junit. assert. assertarrayequals ( output, input )
[1]: org. junit. assert. assertequals ( input, output )
[2]: org. junit. assert. assertarrayequals ( input, input )
[3]: , output )
[4]: org. junit. assert. assertequals ( u, result )

************

************
tgt: org . junit . assert . asserttrue ( exists )
[0]: org. junit. assert. assertequals ( 5, result )
[1]: org. junit. assert. assertequals ( new java. lang. integer ( 5 ), result )
[2]: org. junit. assert. assertequals ( result, 5 )
[3]: org. junit. assert. assertequals ( new java. lang. integer ( 3 ), result )
[4]: org. junit. assert. assertequals ( true, res. isok ( ) )

************

************
tgt: org . junit . assert . assertnull ( dao . getsubscription ( topic , user ) )
[0]: org. junit. assert. assertequals ( false, res. isok ( ) )
[1]: org. junit. assert. assertequals ( 5, res. isok ( ) )
[2]: org. junit. assert. assertequals ( 0, res. isok ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, rhs. getentityversion ( ). size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, lhs. getentityversion ( ) )
[1]: org. junit. assert. assertequals ( 1, rhs. getentityversion ( ) )
[2]: org. junit. assert. assertequals ( 1, lhs. getentityversion ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( lhs ), rhs. getentityversion ( ) )
[4]: org. junit. assert. asserttrue ( listener. haslogged ( customlogger ) )

************

************
tgt: org . junit . assert . assertequals ( new org . apache . hadoop . hive . metastore . api . partition ( ) , exchangedpartition )
[0]: org. junit. assert. asserttrue ( listener. haslogged ( java. util. optional. of ( customlogger ) ) )
[1]: org. junit. assert. asserttrue ( listener. haslogged ( java. util. source. path ( ) ) )
[2]: org. junit. assert. asserttrue ( listener. haslogged ( null ) )
[3]: org. junit. assert. asserttrue ( listener. haslogged ( this. source ) )
[4]: org. junit. assert. assertarrayequals ( expected. getbytes ( ), inferred. getbytes ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . gs . collections . impl . set . mutable . unifiedset . newsetwith ( 1 ) , values )
[0]: org. junit. assert. assertarrayequals ( expected, inferred. gettype ( ). toarray ( ) )
[1]: org. junit. assert. assertequals ( expected, inferred )
[2]: org. junit. assert. assertnotnull ( inferred )
[3]: org. junit. assert. assertarrayequals ( expected, inferred )
[4]: org. junit. assert. assertequals ( 20, newsolution. getunassignedjobs ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , found )
[0]: org. junit. assert. assertequals ( 1, newsolution. getunassignedjobs ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 10, newsolution. getunassignedjobs ( ). size ( ) )
[2]: org. junit. assert. assertequals ( expecteditems, list )
[3]: org. junit. assert. assertequals ( expecteditems, new java. util. arraylist ( list ) )
[4]: org. junit. assert. assertequals ( expecteditems, ident list )

************

************
tgt: org . junit . assert . assertequals ( expectedschema , actualschema )
[0]: , list )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( null, e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( "1.2.3.4" , ip . tostring ( ) )
[0]: org. junit. assert. assertequals ( e. getmessage ( ), null )
[1]: org. junit. assert. assertequals ( java. lang. string. class, e. getmessage ( ) )
[2]: org. junit. assert. assertsame ( config_dir, p. getname ( ) )
[3]: org. junit. assert. assertnull ( p. getname ( ) )
[4]: org. junit. assert. assertequals ( ""a"", p. getname ( ) )

************

************
tgt: org . junit . assert . assertfalse ( ibset . equals ( null ) )
[0]: org. junit. assert. assertsame ( config_dir, p. name ( ) )
[1]: org. junit. assert. assertnotnull ( p. getname ( ) )
[2]: org. junit. assert. assertequals ( 1, entryset. size ( ) )
[3]: org. junit. assert. assertequals ( 3, entryset. size ( ) )
[4]: org. junit. assert. assertequals ( 0, entryset. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , size )
[0]: org. junit. assert. assertequals ( 4, entryset. size ( ) )
[1]: org. junit. assert. assertequals ( 2, entryset. size ( ) )
[2]: org. junit. assert. assertfalse ( target. parse ( ) )
[3]: org. junit. assert. assertnull ( target. parse ( ) )
[4]: org. junit. assert. assertequals ( false, target. parse ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( resultpath )
[0]: org. junit. assert. assertequals ( 0, target. parse ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( f4, mod )
[3]: org. junit. assert. assertequals ( 1, ffilecontroller. getinput ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( databasemetadataresultset. getboolean ( 1 ) )

************

************
tgt: org . junit . assert . assertfalse ( a . equals ( "" ) )
[0]: org. junit. assert. assertequals ( 1, databasemetadataresultset. getboolean ( 1 ) )
[1]: org. junit. assert. assertnull ( databasemetadataresultset. getboolean ( 1 ) )
[2]: org. junit. assert. asserttrue ( databasemetadataresultset. getboolean ( 1 ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, unprocessed. getexpected ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( existing , filteraclentriesbyaclspec ( existing , aclspec ) )
[0]: org. junit. assert. assertequals ( 1234, unprocessed. getexpected ( ). getmessage ( ) )
[1]: org. junit. assert. assertnotnull ( criteria )
[2]: org. junit. assert. assertnotnull ( indexkeys )
[3]: org. junit. assert. assertnotnull ( criteria. data )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . length ( ) )
[0]: )
[1]: org. junit. assert. assertequals ( timestampnamingstrategy. alias, actual )
[2]: org. junit. assert. assertequals ( timestampnamingstrategy. extension, actual )
[3]: org. junit. assert. assertnotnull ( actual )
[4]: org. junit. assert. assertnull ( actual )

************

************
tgt: org . junit . assert . assertnull ( org . springframework . data . gemfire . eviction . evictionactiontype . getevictionaction ( null ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( num1, num2 )
[2]: org. junit. assert. assertequals ( num2, num1 )
[3]: org. junit. assert. assertequals ( num0, num2 )
[4]: org. junit. assert. assertequals ( number1, num2 )

************

************
tgt: org . junit . assert . assertthat ( returnedmode , org . hamcrest . corematchers . is ( avromode . specific ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, kscs. size ( ) )
[2]: org. junit. assert. assertequals ( 1, actual. size ( ) )
[3]: org. junit. assert. assertequals ( 0, actual. size ( ) )
[4]: org. junit. assert. assertequals ( 3, actual. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( tm . map , tmresult . map )
[0]: org. junit. assert. assertequals ( 1, actual. size ( ) )
[1]: org. junit. assert. assertequals ( 2, actual. size ( ) )
[2]: org. junit. assert. assertnull ( compute. getaddress ( com. google. cloud. compute. deprecated. computeimpltest ) )
[3]: org. junit. assert. assertnull ( compute. getaddress ( java. lang. string. class ) )
[4]: org. junit. assert. assertnull ( compute. getaddress ( null ) )

************

************
tgt: org . junit . assert . assertfalse ( exists )
[0]: org. junit. assert. assertnull ( compute )
[1]: ) )
[2]: org. junit. assert. assertequals ( expect, java. util. arrays. aslist ( a ) )
[3]: org. junit. assert. assertequals ( expect, java. lang. string. valueof ( a ) )
[4]: org. junit. assert. assertequals ( true, verstrekkingsbeperkingaanwezig )

************

************
tgt: org . junit . assert . assertequals ( expected , headers )
[0]: org. junit. assert. assertnotnull ( processconfigpresenterview. getview ( ) )
[1]: org. junit. assert. assertnotnull ( processconfigpresenterview )
[2]: org. junit. assert. assertnotnull ( processorconfigpresenterview. getview ( ) )
[3]: org. junit. assert. assertequals ( view, processconfigpresenterview )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( e . getmessage ( ) )
[0]: org. junit. assert. asserttrue ( classes. isempty ( ) )
[1]: org. junit. assert. assertnotnull ( pair. first ( ) )
[2]: org. junit. assert. assertnotnull ( pair )
[3]: org. junit. assert. assertnull ( pair )
[4]: org. junit. assert. assertequals ( null, pair )

************

************
tgt: org . junit . assert . assertequals ( 1 , resultaat . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, sample )
[2]: org. junit. assert. assertequals ( 0, connectormanager. getxlinkregistrations ( toolname ). size ( ) )
[3]: org. junit. assert. assertequals ( connectorid. length, connectormanager. getxlinkregistrations ( toolname ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, connectormanager. getxlinkregistrations ( toolname ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( plugin . isfieldbindingvalid ( ) )
[0]: org. junit. assert. assertthat ( connectormanager. getxlinkregistrations ( toolname ), org. hamcrest. corematchers. is ( false ) )
[1]: org. junit. assert. assertthat ( connectormanager. getxlinkregistrations ( toolname ), org. hamcrest. corematchers. is ( 0 ) )
[2]: org. junit. assert. assertequals ( evalobj, nestedstate )
[3]: org. junit. assert. asserttrue ( value. equals ( value ) )
[4]: org. junit. assert. asserttrue ( ( ( value == ( i ) ) || ( value. equals ( i ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( unsignedprimitivetypeusage . all . size ( ) , exceptions )
[0]: org. junit. assert. asserttrue ( ( ( value == ( i ) ) && ( value. equals ( i ) ) ) )
[1]: org. junit. assert. asserttrue ( ( value == ( value. equals ( i ) ) ) )
[2]: org. junit. assert. asserttrue ( value. equals ( i ) )
[3]: org. junit. assert. assertnotnull ( value )
[4]: org. junit. assert. assertarrayequals ( new java. lang. object [ ] { }, value )

************

************
tgt: org . junit . assert . assertequals ( spec , substring )
[0]: org. junit. assert. assertequals ( 1, value. length )
[1]: org. junit. assert. assertnotnull ( value [ 0 ] )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), value )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( child1 ), instance. getchildren ( ) )
[4]: org. junit. assert. assertequals ( 1, instance. getchildren ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , factor , 0 )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( child1 ), instance. getchildren ( ) )
[1]: org. junit. assert. assertequals ( 0, instance. getchildren ( ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( edu. internet2. middleware. changelogconsumer. googleapps. googleappssdkutils. retrievegroupmembers ( request, edu. internet2. middleware. changelogconsumer. googleapps. googleappssdkutilstest. test_group ) )
[4]: org. junit. assert. assertnotnull ( edu. internet2. middleware. changelogconsumer. googleapps. googleappssdkutils. retrievegroupmembers ( request, null ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . size ( ) )
[0]: org. junit. assert. assertnotnull ( edu. internet2. middleware. changelogconsumer. googleapps. googleappssdkutils. retrievegroupmembers ( request, com. internet2. middleware. changelogconsumer. googleapps. googleappssdkutilstest. test_group ) )
[1]: org. junit. assert. assertnotnull ( edu. internet2. middleware. changelogconsumer. googleapps. googleappssdkutils. retrievegroupmembers ( request, true ) )
[2]: org. junit. assert. assertnotnull ( edu. internet2. middleware. changelogconsumer. googleapps. googleappssdkutils. retrievegroupmembers ( request, string ) )
[3]: org. junit. assert. assertequals ( 1, uk. gov. gchq. gaffer. cache. impl. hazelcastcacheservicetest. service. getfromcache ( uk. gov. gchq. gaffer. cache. impl. hazelcastcacheservicetest. cache_name, null ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, uk. gov. gchq. gaffer. cache. impl. hazelcastcacheservicetest. service. getfromcache ( uk. gov. gchq. gaffer. cache. impl. hazelcastcacheservicetest. cache_name, null ) )

************

************
tgt: org . junit . assert . assertequals ( set . size ( ) , integerset . size ( ) )
[0]: org. junit. assert. assertequals ( 1, uk. gov. gchq. gaffer. cache. impl. hazelcastcacheservicetest. service. getfromcache ( uk. gov. gchq. gaffer. cache. impl. hazelcastcacheservicetest. cache_name, 1 ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, uk. gov. gchq. gaffer. cache. impl. hazelcastcacheservicetest. service. getfromcache ( uk. gov. gchq. gaffer. cache. impl. hazelcastcacheservicetest. cache_name, ( ) -> 1 ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( initialvalue ), arr )
[4]: org. junit. assert. assertequals ( 0, arr. reduce ( callbackfn, initialvalue ) )

************

************
tgt: org . junit . assert . assertequals ( expected , value )
[0]: org. junit. assert. assertequals ( 1, arr. reduce ( callbackfn, initialvalue ) )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( initialvalue ), arr )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( initialvalue ), arr. reduce ( callbackfn ) )
[3]: org. junit. assert. assertequals ( 1, org. apache. commons. crypto. nativecodeloader. getloadingerror ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, org. apache. commons. crypto. nativecodeloader. getloadingerror ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( invalidnetworkaddress )
[0]: org. junit. assert. assertequals ( null, org. apache. commons. crypto. nativecodeloader. getloadingerror ( ) )
[1]: org. junit. assert. assertnotnull ( org. apache. commons. crypto. nativecodeloader. getloadingerror ( ) )
[2]: org. junit. assert. assertequals ( 1, org. apache. commons. crypto. nativecodeloader. getloadingerror ( ). count ( ) )
[3]: org. junit. assert. assertnotnull ( archiver. archive ( org. apache. druid. storage. s3. s3datasegmentarchivertest. source_segment ) )
[4]: org. junit. assert. assertnotnull ( archiver. archive ( new org. apache. druid. storage. s3. s3datasegmentarchivertest. source_segment ) )

************

************
tgt: org . junit . assert . assertsame ( mockuser , u )
[0]: org. junit. assert. assertnotnull ( archiver. archive ( org. apache. druid. storage. s3. s3datasegmentarchivertest. source_segment. class ) )
[1]: org. junit. assert. assertequals ( archivedsegment, archiver. archive ( null ) )
[2]: org. junit. assert. assertnotnull ( archiver. archive ( null ) )
[3]: org. junit. assert. assertequals ( org. eclipse. rap. rwt. internal. rwtproperties. getservicehandlerbaseurl ( ), org. eclipse. rap. rwt. internal. rwtproperties. getservicehandlerbaseurl ( ) )
[4]: org. junit. assert. assertequals ( org. eclipse. rap. rwt. internal. rwtproperties. getservicehandlerbaseurl ( ), org. eclipse. rap. rwt. internal. rwtproperties. service_handler_base_url )

************

************
tgt: org . junit . assert . assertequals ( result , hbaseconnectionwrapper . getcurrentresult ( ) )
[0]: org. junit. assert. assertnotnull ( org. eclipse. rap. rwt. internal. rwtproperties. getservicehandlerbaseurl ( ) )
[1]: org. junit. assert. assertnull ( org. eclipse. rap. rwt. internal. rwtproperties. getservicehandlerbaseurl ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertequals ( 3, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , b . andnotcardinality ( b ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( expected, result. get ( ) )
[2]: org. junit. assert. assertequals ( 5, result. size ( ) )
[3]: org. junit. assert. assertthat ( net. time4j. range. timestampinterval. between ( start, end ). isempty ( ), org. hamcrest. corematchers. is ( true ) )
[4]: org. junit. assert. assertthat ( net. time4j. range. timestampinterval. between ( start, end ). contains ( end ), org. hamcrest. corematchers. is ( true ) )

************

************
tgt: org . junit . assert . assertsame ( mediated . getclass ( ) , service . mediate ( raw , org . apache . aries . async . impl . charsequence . class ) . getclass ( ) )
[0]: org. junit. assert. assertthat ( net. time4j. range. timestampinterval. between ( start, end ). contains ( start ), org. hamcrest. corematchers. is ( true ) )
[1]: org. junit. assert. assertthat ( net. time4j. range. timestampinterval. between ( start, end ). collect ( ), org. hamcrest. corematchers. is ( net. time4j. range. boundary. of ( 2014, 5, 14, 0, 1 ) ) )
[2]: org. junit. assert. assertthat ( net. time4j. range. timestampinterval. between ( start, end ). collect ( ), org. hamcrest. corematchers. is ( net. time4j. range. boundary. of ( 2014, 5, 14, 0, 0 ) ) )
[3]: org. junit. assert. assertequals ( result, before )
[4]: org. junit. assert. assertequals ( result, after )

************

************
tgt: org . junit . assert . assertequals ( data , result )
[0]: org. junit. assert. assertequals ( result, preced )
[1]: result ) )
[2]: result )
[3]: org. junit. assert. assertnotnull ( externalencryptedvalue )
[4]: org. junit. assert. assertequals ( externalencryptedvalue, properties )

************

************
tgt: org . junit . assert . asserttrue ( ( ( points . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertnotnull ( dsmanager. data )
[1]: org. junit. assert. assertnotnull ( dsmanager. tojson ( ) )
[2]: org. junit. assert. assertnotnull ( dsmanager )
[3]: org. junit. assert. assertequals ( true, result )
[4]: org. junit. assert. assertequals ( false, result )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertthat ( converter. towritableobject ( javalist ), org. hamcrest. corematchers. is ( writablelist ) )
[1]: org. junit. assert. assertthat ( converter. towritableobject ( propertyname ), org. hamcrest. corematchers. is ( writablelist ) )
[2]: org. junit. assert. assertthat ( converter. towritableobject ( opencmslist ), org. hamcrest. corematchers. is ( writablelist ) )
[3]: org. junit. assert. assertthat ( converter. towritableobject ( propertynameclass ), org. hamcrest. corematchers. is ( writablelist ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( button )
[0]: org. junit. assert. assertequals ( 2, tasksaftervariableisset. size ( ) )
[1]: org. junit. assert. assertequals ( 1, tasksaftervariableisset. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr )
[3]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), 0, res. length )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr [ 0 ] )

************

************
tgt: org . junit . assert . assertarrayequals ( input , decrypted )
[0]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), strarr, res )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( res ), null )
[2]: org. junit. assert. assertequals ( 0, bb. getbyte ( i ) )
[3]: org. junit. assert. assertequals ( 1, bb. getbyte ( i ) )
[4]: org. junit. assert. assertequals ( i, b. getbyte ( i ) )

************

************
tgt: org . junit . assert . assertthat ( entities . size ( ) , org . hamcrest . corematchers . is ( 4 ) )
[0]: , i )
[1]: ) )
[2]: org. junit. assert. assertequals ( bc. tostring ( ), bc. tostring ( ) )
[3]: org. junit. assert. assertequals ( bug23950servlet. tostring ( ), bc. tostring ( ) )
[4]: org. junit. assert. assertequals ( debug. tostring ( ), bc. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( newlastname , customer . getlastname ( ) )
[0]: org. junit. assert. assertnotnull ( bc. tostring ( ) )
[1]: . tostring ( ) )
[2]: org. junit. assert. assertequals ( sortcolumn, this. state. getsortcolumn ( ) )
[3]: org. junit. assert. assertnull ( this. state. getsortcolumn ( ) )
[4]: org. junit. assert. assertsame ( sortcolumn, this. state. getsortcolumn ( ) )

************

************
tgt: org . junit . assert . assertequals ( bags . mutable . of ( "one" , "two" , "three" , "four" ) , result )
[0]: org. junit. assert. assertnotnull ( this. state. getsortcolumn ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( result )
[3]: org. junit. assert. assertfalse ( result )
[4]: org. junit. assert. assertequals ( true, result )

************

************
tgt: org . junit . assert . asserttrue ( berichtentiteits . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( render )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( expected ), render )
[2]: org. junit. assert. assertequals ( null, render )
[3]: org. junit. assert. assertnull ( render )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), render )

************

************
tgt: org . junit . assert . assertequals ( 0 , countworksdoneonpersonid ( 1 ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( 0, result. size ( ) )
[3]: org. junit. assert. asserttrue ( result. isempty ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( stream . read ( ) )
[0]: org. junit. assert. assertequals ( 1, listpage. getcontacts ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, listpage. getcontacts ( ). size ( ) )
[2]: org. junit. assert. assertequals ( true, listpage. getcontacts ( ). isempty ( ) )
[3]: org. junit. assert. assertequals ( true, listpage. getcontacts ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( listpage. getcontacts ( ) )

************

************
tgt: org . junit . assert . assertnull ( org . apache . servicecomb . foundation . common . utils . jvmutils . findmainclassbystacktrace ( ) )
[0]: org. junit. assert. assertnull ( calendardate1. getcalendareraname ( ) )
[1]: org. junit. assert. assertequals ( result, calendardate1. getcalendareraname ( ) )
[2]: org. junit. assert. assertsame ( result, calendardate1. getcalendareraname ( ) )
[3]: org. junit. assert. assertequals ( null, calendardate1. getcalendareraname ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( form . equals ( formsave ) )
[0]: org. junit. assert. assertequals ( p, checkmatch ( data, numvalues, null, null ) )
[1]: org. junit. assert. assertequals ( p, org. cubedb. utils. testutils. checkmatch ( p, null, null, null ) )
[2]: org. junit. assert. assertequals ( p, org. cubedb. utils. testutils. checkmatch ( data, null, null, null ) )
[3]: org. junit. assert. assertequals ( p, org. cubedb. utils. testutils. checkmatch ( data, probability, null, null ) )
[4]: org. junit. assert. assertequals ( p, checkmatch ( data, null, null, null ) )

************

************
tgt: org . junit . assert . asserttrue ( configmanager . hasconfiguration ( ) )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertnotnull ( s )
[2]: org. junit. assert. assertnotnull ( queue )
[3]: org. junit. assert. assertnotnull ( collection )
[4]: org. junit. assert. assertnotnull ( s. collection )

************

************
tgt: org . junit . assert . assertequals ( 2 , count )
[0]: org. junit. assert. assertequals ( classname, clazz. getshortname ( ) )
[1]: org. junit. assert. assertnotnull ( clazz. getshortname ( ) )
[2]: org. junit. assert. asserttrue ( clazz. getshortname ( ). isempty ( ) )
[3]: testtest1 )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expectedvalue , result )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( 0, result. size ( ) )
[2]: org. junit. assert. assertequals ( 10, result. size ( ) )
[3]: org. junit. assert. assertequals ( 9, result. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( sql , result )
[0]: org. junit. assert. assertequals ( number, scope. getvalue ( number ) )
[1]: org. junit. assert. assertequals ( number, scope. getvalue ( 0 ) )
[2]: org. junit. assert. assertequals ( number, scope. getvalue ( 1 ) )
[3]: org. junit. assert. assertequals ( number, scope. getvalue ( null ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( imgc . equals ( expected ) )
[0]: org. junit. assert. assertnotnull ( getraimflag ( ) )
[1]: org. junit. assert. assertnotnull ( context. getraimflag ( ) )
[2]: org. junit. assert. assertnotnull ( container. getraimflag ( ) )
[3]: org. junit. assert. assertnotnull ( item. getraimflag ( ) )
[4]: org. junit. assert. assertequals ( null, msg. getraimflag ( ) )

************

************
tgt: org . junit . assert . assertequals ( "http://theyknow.whatiswhat.com/text(withparens)" , uri )
[0]: org. junit. assert. assertequals ( 1, containerset. containercount ( ) )
[1]: org. junit. assert. assertequals ( 0, containerset. containercount ( ) )
[2]: org. junit. assert. assertequals ( 3, containerset. containercount ( ) )
[3]: org. junit. assert. assertequals ( 2, containerset. containercount ( ) )
[4]: org. junit. assert. assertequals ( 1, containserset. containercount ( ) )

************

************
tgt: org . junit . assert . assertequals ( val , x . get ( ) )
[0]: org. junit. assert. assertnotnull ( sink )
[1]: org. junit. assert. assertnotnull ( source )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( 1, sink. size ( ) )
[4]: org. junit. assert. assertequals ( 1, source. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertnotnull ( dao )
[1]: org. junit. assert. assertnotnull ( context )
[2]: org. junit. assert. assertnotnull ( builder )
[3]: org. junit. assert. assertnotnull ( configuration )
[4]: org. junit. assert. assertnotnull ( helper )

************

************
tgt: org . junit . assert . assertequals ( 3 , chunkeddata . size ( ) )
[0]: org. junit. assert. assertequals ( 1, doc. getpathasstring ( ). length )
[1]: org. junit. assert. assertnotnull ( doc. getpathasstring ( ) )
[2]: org. junit. assert. assertequals ( null, doc. getpathasstring ( ) )
[3]: org. junit. assert. assertequals ( s, doc. getpathasstring ( ) )
[4]: org. junit. assert. assertequals ( 1, doc. getpathasstring ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( null , p . getname ( ) )
[0]: org. junit. assert. assertequals ( 1, service. getrowcount ( request ) )
[1]: org. junit. assert. assertequals ( 0, service. getrowcount ( request ) )
[2]: org. junit. assert. assertequals ( 2, service. getrowcount ( request ) )
[3]: org. junit. assert. assertequals ( 4, service. getrowcount ( request ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , products . size ( ) )
[0]: org. junit. assert. assertnotnull ( obj. tostring ( ) )
[1]: org. junit. assert. assertnotnull ( obj. s )
[2]: org. junit. assert. assertequals ( 1, obj. getid ( ) )
[3]: org. junit. assert. assertnotnull ( obj. getmessage ( ) )
[4]: org. junit. assert. assertnotnull ( obj )

************

************
tgt: org . junit . assert . asserttrue ( ( ( users . size ( ) ) > 10 ) )
[0]: org. junit. assert. assertequals ( i, jsat. math. fastmath. pow ( i, ( i + 1 ) ) )
[1]: org. junit. assert. assertequals ( i, jsat. math. fastmath. pow ( i, 0 ) )
[2]: org. junit. assert. assertequals ( i, jsat. math. fastmath. pow ( ( i + 1 ), ( i + 1 ) ) )
[3]: org. junit. assert. assertequals ( i, jsat. math. fastmath. pow ( ( i + 1 ), 0 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( existinglayoutpagetemplatestructurerel )
[0]: org. junit. assert. assertequals ( caresetting, order. getorderid ( ) )
[1]: org. junit. assert. assertequals ( caresetting, encounter. getorderid ( ) )
[2]: org. junit. assert. assertequals ( caresetting, encounter )
[3]: org. junit. assert. assertequals ( caresetting, orders. getorderid ( ) )
[4]: org. junit. assert. assertequals ( caresetting. getorderid ( ), encounter )

************

************
tgt: org . junit . assert . assertequals ( expected , bs . get ( ) )
[0]: org. junit. assert. assertarrayequals ( array, org. fest. util. arrays. array ( array ) )
[1]: org. junit. assert. assertsame ( array, org. fest. util. arrays. array ( array ) )
[2]: org. junit. assert. assertarrayequals ( array, org. fest. util. collections. array ( array ) )
[3]: org. junit. assert. assertarrayequals ( array, org. fest. util. preconditions. array ( array ) )
[4]: )

************

************
tgt: org . junit . assert . assertnotnull ( bean )
[0]: org. junit. assert. assertequals ( 0, buffer. readlong ( 10 ) )
[1]: org. junit. assert. assertequals ( 1, buffer. readlong ( 10 ) )
[2]: org. junit. assert. assertequals ( 10, buffer. readlong ( 10 ) )
[3]: org. junit. assert. assertequals ( 12, buffer. readlong ( 10 ) )
[4]: org. junit. assert. assertequals ( 20, buffer. readlong ( 10 ) )

************

************
tgt: org . junit . assert . assertthat ( authenticatedresource , org . hamcrest . corematchers . is ( impersonatedresource ) )
[0]: org. junit. assert. assertequals ( s, expected )
[1]: org. junit. assert. assertequals ( expected, s )
[2]: org. junit. assert. assertequals ( result, expected )
[3]: org. junit. assert. assertequals ( s, expected }
[4]: sample s )

************

************
tgt: org . junit . assert . assertequals ( expectedcssclass , actualcssclass )
[0]: org. junit. assert. assertequals ( holder, read )
[1]: org. junit. assert. assertequals ( map, read )
[2]: org. junit. assert. assertnotnull ( read )
[3]: org. junit. assert. assertnotnull ( contents )
[4]: org. junit. assert. assertnotnull ( content )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertnull ( contents )
[1]: org. junit. assert. assertnotnull ( contents ) )
[2]: , contents )
[3]: org. junit. assert. assertequals ( 1, dao. getallconceptsources ( true ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, dao. getallconceptsources ( false ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ips . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( dao. getallconceptsources ( true ) )
[1]: org. junit. assert. assertequals ( 0, dao. getallconceptsources ( true ). size ( ) )
[2]: org. junit. assert. assertnotnull ( dao. getallconceptsources ( false ) )
[3]: org. junit. assert. assertnotnull ( schema. getclass ( classname ) )
[4]: org. junit. assert. assertnotnull ( schema. getclass ( classname ). tostring ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( bytebuffer . array ( ) , serializerbytebuffer . array ( ) )
[0]: org. junit. assert. assertnotnull ( schema. getclass ( classname ). getclassloader ( ) )
[1]: org. junit. assert. assertnotnull ( schema. getclass ( classname ). getid ( ) )
[2]: org. junit. assert. assertnotnull ( schema. getclass ( classname ). getname ( ) )
[3]: org. junit. assert. assertthat ( prepareupload, contains ( prepareupload ) )
[4]: org. junit. assert. assertthat ( prepareupload, is ( empty ( ) ) )

************

************
tgt: org . junit . assert . assertthat ( emptyrows , org . hamcrest . corematchers . is ( 0l ) )
[0]: org. junit. assert. assertnotnull ( prepareupload )
[1]: org. junit. assert. assertthat ( prepareupload )
[2]: ) )
[3]: org. junit. assert. assertequals ( original, replaced )
[4]: org. junit. assert. assertequals ( original, replaced )

************

************
tgt: org . junit . assert . assertnotnull ( table )
[0]: org. junit. assert. assertequals ( orig, replaced )
[1]: org. junit. assert. assertequals ( old, replaced )
[2]: org. junit. assert. assertequals ( original, replaced )
[3]: org. junit. assert. assertequals ( 0, cutoffday. getcutoffday ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, cutoffday. getcutoffday ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( keyfactory )
[0]: org. junit. assert. assertequals ( 1, cutoffday. getcutoffday ( ) )
[1]: org. junit. assert. assertequals ( 0, cutoffday. getcutoffday ( ). length )
[2]: org. junit. assert. assertequals ( 0, cutoffday. getcutoffday ( ). size ( ), 28 )
[3]: org. junit. assert. assertnotnull ( cache )
[4]: org. junit. assert. assertnull ( cache )

************

************
tgt: org . junit . assert . assertequals ( "string" , stringvalue )
[0]: org. junit. assert. assertsame ( cache, cachemanager )
[1]: org. junit. assert. assertsame ( cache )
[2]: ) )
[3]: org. junit. assert. assertequals ( expected, output )
[4]: org. junit. assert. assertnotnull ( output )

************

************
tgt: org . junit . assert . asserttrue ( ( testresult == ( resultprovided . get ( ) ) ) )
[0]: org. junit. assert. assertequals ( mybounds, output )
[1]: org. junit. assert. assertequals ( expect, output )
[2]: org. junit. assert. assertsame ( expected, output )
[3]: org. junit. assert. assertnotnull ( employeesearchmap. getemployee ( ) )
[4]: org. junit. assert. assertequals ( employeesearchmap, employeesearchmap. getemployee ( ) )

************

************
tgt: org . junit . assert . asserttrue ( opts . isthrowonerror ( ) )
[0]: org. junit. assert. assertequals ( employeesearchmap, sw. getemployee ( ) )
[1]: org. junit. assert. assertnotnull ( employeelist. getemployee ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, categoryset. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), categoryset )

************

************
tgt: org . junit . assert . asserttrue ( authz . issuccessauthorization ( res ) )
[0]: org. junit. assert. assertequals ( new java. lang. long ( 1 ), categoryset )
[1]: org. junit. assert. assertequals ( 1, categoryset. size ( ) )
[2]: org. junit. assert. assertnotnull ( categoryset )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertnull ( m . getbrokerrevenueshare ( ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( pc1, result )
[2]: org. junit. assert. assertequals ( result, pc1 )
[3]: org. junit. assert. assertnotnull ( modifications. tostring ( ) )
[4]: org. junit. assert. assertequals ( null, modifications. tostring ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedindexmap , actualindexmap )
[0]: org. junit. assert. assertnull ( modifications. tostring ( ) )
[1]: org. junit. assert. assertequals ( 0, modifications. tostring ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, clonedrecs. length )
[4]: org. junit. assert. assertarrayequals ( new org. apache. poi. hssf. record. record [ ] { }, clonedrecs )

************

************
tgt: org . junit . assert . assertequals ( value . tostring ( ) , wrapper . getstring ( ) )
[0]: org. junit. assert. assertequals ( 0, clonedrecs. length )
[1]: org. junit. assert. assertequals ( 5, clonedrecs. length )
[2]: org. junit. assert. assertequals ( 3, clonedrecs. length )
[3]: org. junit. assert. assertequals ( 1, actual. size ( ) )
[4]: org. junit. assert. assertequals ( 0, actual. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( output )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( book. twju. chapter_5. listing_1_mockitorunner_timelinetest. second_item ), actual )
[1]: org. junit. assert. assertequals ( new book. twju. chapter_5. item [ ] { book. twju. chapter_5. listing_1_mockitorunner_timelinetest. second_item }, actual )
[2]: org. junit. assert. assertequals ( new book. twju. chapter_5. item ( ). size ( ), actual. size ( ) )
[3]: org. junit. assert. asserttrue ( original. equals ( retrieved ) )
[4]: org. junit. assert. asserttrue ( cloned. equals ( retrieved ) )

************

************
tgt: org . junit . assert . assertfalse ( ps . isempty ( ) )
[0]: org. junit. assert. asserttrue ( expected. equals ( retrieved ) )
[1]: org. junit. assert. asserttrue ( actual. equals ( retrieved ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( htmlcontent, document. html ( htmlcontent ). body ( ) )
[4]: org. junit. assert. assertequals ( htmlcontent, document. html ( htmlcontent ). trim ( ) )

************

************
tgt: org . junit . assert . assertfalse ( s . ispresent ( ) )
[0]: org. junit. assert. assertequals ( htmlcontent, document. html ( null ). body ( ) )
[1]: org. junit. assert. assertequals ( htmlcontent, document. html ( htmlcontent ). tostring ( ) )
[2]: org. junit. assert. assertnotnull ( document. html ( htmlcontent ) )
[3]: org. junit. assert. assertequals ( 1, myspace. read ( mytaker, 0, lease. forever ) )
[4]: org. junit. assert. assertequals ( 1, myspace. read ( mytaker, 1, lease. forever ) )

************

************
tgt: org . junit . assert . assertnotnull ( injector )
[0]: org. junit. assert. assertequals ( 0, myspace. read ( mytaker, 0, lease. forever ) )
[1]: org. junit. assert. assertequals ( 1, myspace. read ( mytemplate, 0, lease. forever ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( mediatype. application_atom_xml, type )
[4]: org. junit. assert. assertnotnull ( type )

************

************
tgt: org . junit . assert . assertnull ( env . getreplicationmanagerlocalsite ( ) )
[0]: org. junit. assert. assertnull ( type )
[1]: org. junit. assert. assertequals ( mediatype, type )
[2]: ) )
[3]: org. junit. assert. assertequals ( n1, n2 )
[4]: org. junit. assert. assertequals ( n2, n1 )

************

************
tgt: org . junit . assert . asserttrue ( ( n > 0 ) )
[0]: org. junit. assert. assertequals ( n2, n2 )
[1]: org. junit. assert. assertequals ( n0, n2 )
[2]: org. junit. assert. assertequals ( n11, n2 )
[3]: org. junit. assert. assertnull ( utcstring )
[4]: org. junit. assert. assertequals ( null, utcstring )

************

************
tgt: org . junit . assert . assertthat ( thingstatusinfo , org . hamcrest . corematchers . is ( expected ) )
[0]: org. junit. assert. assertequals ( """", utcstring )
[1]: type ) )
[2]: null )
[3]: org. junit. assert. assertequals ( source, writer. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( source ), writer. tostring ( ) )

************

************
tgt: org . junit . assert . assertnull ( edu . harvard . iq . dataverse . privateurl . privateurlutil . getdraftdatasetversionfromroleassignment ( null ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. tostring ( source ), writer. tostring ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( source ), writer. tostring ( ) )
[2]: org. junit. assert. assertequals ( source, writer. tostring ( ). trim ( ) )
[3]: org. junit. assert. asserttrue ( ddmexpression. evaluate ( ) )
[4]: org. junit. assert. assertequals ( null, infoeventomanifestacaodestinatario. getorgao ( ) )

************

************
tgt: org . junit . assert . assertequals ( mockinput , outstream1 . getbuffer ( ) )
[0]: org. junit. assert. assertnotnull ( infoeventomanifestacaodestinatario. getorgao ( ) )
[1]: org. junit. assert. assertequals ( 1, infoeventomanifestacaodestinatario. getorgao ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, infoeventomanifestacaodestinatario. getorgao ( ). length )
[3]: type ) )
[4]: org. junit. assert. assertequals ( 1, jobmetatest. getvariable ( const. internal_variable_entry_current_directory ) )

************

************
tgt: org . junit . assert . assertequals ( ( i * 32 ) , reader . readinteger ( ) )
[0]: org. junit. assert. assertequals ( 0, jobmetatest. getvariable ( const. internal_variable_entry_current_directory ) )
[1]: org. junit. assert. assertequals ( constants, jobmetatest. getvariable ( const. internal_variable_entry_current_directory ) )
[2]: org. junit. assert. assertnotnull ( jobmetatest. getvariable ( const. internal_variable_entry_current_directory ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( apprepository. findappsummaries ( 2l ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertnull ( apprepository. findappsummaries ( 2l ) )
[1]: org. junit. assert. assertequals ( 1, apprepository. findappsummaries ( 2l ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 200, response. getcode ( ) )

************

************
tgt: org . junit . assert . assertfalse ( relationshipquery . getresultlist ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, response. getcode ( ) )
[1]: org. junit. assert. assertequals ( 1, grid. gettopindex ( ) )
[2]: org. junit. assert. assertequals ( 0, grid. gettopindex ( ) )
[3]: org. junit. assert. assertequals ( 1, instance. iscacheenabled ( ) )
[4]: org. junit. assert. assertequals ( 0, instance. iscacheenabled ( ) )

************

************
tgt: org . junit . assert . assertequals ( retme , buildjoboperator ( mockjoboperator , mocktranmgr ) . restart ( 0 , null ) )
[0]: org. junit. assert. assertequals ( true, instance. iscacheenabled ( ) )
[1]: org. junit. assert. assertequals ( 1, instance. iscacheenabled ( ). size ( )
[2]: org. junit. assert. assertequals ( 1, instance. iscacheenabled ( ). length )
[3]: org. junit. assert. assertnotnull ( img1. getlocation ( ) )
[4]: org. junit. assert. assertequals ( img1, img2. getlocation ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnull ( img1. getlocation ( ) )
[1]: org. junit. assert. assertnotnull ( img2. getlocation ( ) )
[2]: org. junit. assert. assertequals ( img1. getlocation ( ), img2 )
[3]: org. junit. assert. assertnotnull ( targetfile )
[4]: org. junit. assert. assertnotnull ( targetfile. exists ( ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . matchers . is ( expected ) )
[0]: org. junit. assert. assertequals ( 1, targetfile. exists ( ) )
[1]: org. junit. assert. assertequals ( 1, targetfile. size ( ) )
[2]: org. junit. assert. assertequals ( 1, targetfile. length ( ) )
[3]: org. junit. assert. assertequals ( com. liferay. dynamic. data. mapping. form. web. internal. display. context. ddmformadmindisplaycontexttest. getsharedformurl ( ), formurl )
[4]: org. junit. assert. assertequals ( formurl, _ddmformadmindisplaycontext. getsharedformurl ( ) )

************

************
tgt: org . junit . assert . assertsame ( cell , actualcell )
[0]: org. junit. assert. assertequals ( formurl, com. liferay. dynamic. data. mapping. form. web. internal. display. context. ddmformadmindisplaycontexttest. getsharedformurl ( ) )
[1]: org. junit. assert. assertequals ( java. lang. string. format ( com. liferay. dynamic. data. mapping. form. web. internal. display. context. ddmformadmindisplaycontexttest. getsharedformurl ( ), formurl )
[2]: org. junit. assert. assertequals ( formurl, formurl )
[3]: org. junit. assert. assertequals ( true, cleansessionsonshutdown ( ) )
[4]: org. junit. assert. assertfalse ( cleansessionsonshutdown ( ) )

************

************
tgt: org . junit . assert . asserttrue ( r . contains ( v ) )
[0]: org. junit. assert. assertequals ( false, cleansessionsonshutdown ( ) )
[1]: org. junit. assert. assertequals ( true, cleanupsessionsonshutdown ( ) )
[2]: org. junit. assert. asserttrue ( cleansessionsonshutdown ( ) )
[3]: org. junit. assert. assertequals ( 0, results. size ( ) )
[4]: org. junit. assert. assertequals ( 0, result. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( expected , result )
[0]: org. junit. assert. assertequals ( 0, res )
[1]: org. junit. assert. assertequals ( 0, errors. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( v )
[4]: org. junit. assert. assertequals ( v, parser )

************

************
tgt: org . junit . assert . assertequals ( 2 , doquery ( query , i ) )
[0]: org. junit. assert. assertequals ( v, null )
[1]: org. junit. assert. assertequals ( v, this )
[2]: org. junit. assert. assertnull ( v )
[3]: org. junit. assert. assertequals ( ( - 1 ), adapter. gettabindex ( ) )
[4]: org. junit. assert. assertequals ( 1, adapter. gettabindex ( ) )

************

************
tgt: org . junit . assert . assertfalse ( compositekey . equals ( anothercompositekey ) )
[0]: org. junit. assert. assertequals ( 0, adapter. gettabindex ( ) )
[1]: org. junit. assert. assertequals ( ( - 1 ), adapter. gettabindex ( ), 0 )
[2]: org. junit. assert. assertequals ( ( - 1 ), adapter. gettabindex ( ). length )
[3]: org. junit. assert. assertequals ( t0, e. getrefreshedtime ( ) )
[4]: org. junit. assert. assertequals ( 1, e. getrefreshedtime ( ) )

************

************
tgt: org . junit . assert . asserttrue ( binary . exists ( ) )
[0]: org. junit. assert. assertequals ( 0, e. getrefreshedtime ( ) )
[1]: org. junit. assert. assertequals ( 3, e. getrefreshedtime ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( null, listener. getmessage ( ) )
[4]: org. junit. assert. asserttrue ( listener. getmessage ( ). contains ( 15 ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( pubconnection. getmessage ( ), result. getmessage ( ) )
[1]: org. junit. assert. asserttrue ( listener. getmessage ( ). contains ( 1l ) )
[2]: org. junit. assert. assertequals ( completed, listener. getmessage ( ) )
[3]: org. junit. assert. assertequals ( typedpayload1, typedpayload2. mediatype ( ) )
[4]: org. junit. assert. assertequals ( typedpayload1, typedpayload2 )

************

************
tgt: org . junit . assert . assertthat ( contextmap . entryset ( ) , org . hamcrest . matchers . is ( org . hamcrest . matchers . empty ( ) ) )
[0]: org. junit. assert. assertequals ( typedpayload1. mediatype ( ), typedpayload2 )
[1]: org. junit. assert. assertsame ( typedpayload1, typedpayload2 )
[2]: ) )
[3]: org. junit. assert. assertequals ( 10, cursor. next ( ) )
[4]: org. junit. assert. asserttrue ( cursor. next ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result . isarray ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( string, result )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( captor . getvalue ( ) . get ( "testkey_0_12" ) , org . hamcrest . matchers . equalto ( "secret" ) )
[0]: org. junit. assert. assertnotnull ( flow )
[1]: org. junit. assert. assertnotnull ( queue )
[2]: org. junit. assert. assertequals ( 1, 1 )
[3]: )
[4]: 

************

************
tgt: org . junit . assert . assertequals ( 4 , branch_conditions . size ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), a. zip ( b ) )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( b ), a. zip ( b ) )
[2]: org. junit. assert. assertequals ( 1, a. zip ( b ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( a ), a. zip ( b ) )
[4]: org. junit. assert. assertnotnull ( a. zip ( b ) )

************

************
tgt: org . junit . assert . asserttrue ( equal )
[0]: org. junit. assert. assertequals ( spdconstants. notificationtype. non_receipt, optionalsubject. tospdstring ( ) )
[1]: org. junit. assert. assertequals ( ""1"", optionalsubject. tospdstring ( ) )
[2]: org. junit. assert. assertequals ( ""a"", optionalsubject. tospdstring ( ) )
[3]: org. junit. assert. assertnotnull ( optionalsubject. tospdstring ( ) )
[4]: org. junit. assert. assertequals ( spdconstants. notificationtype. non_receipt, optionalsubject )

************

************
tgt: org . junit . assert . assertnull ( missingfragmententrylink )
[0]: org. junit. assert. assertnotnull ( line1 )
[1]: org. junit. assert. assertnotnull ( line1, line2 )
[2]: org. junit. assert. assertequals ( xmlesperado, getnfprotocolo ( ) )
[3]: org. junit. assert. assertequals ( xmlesperado, getnfprotocolo ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( xmlesperado, deveprotocolo ( ) )

************

************
tgt: org . junit . assert . assertnull ( backend . get ( "random<sp>key" ) )
[0]: org. junit. assert. assertequals ( xmlesperado, getnfprotocolo ( ). get ( 0 ) )
[1]: org. junit. assert. assertequals ( xmlesperado, getnfprotocolo ( ). size ( ) )
[2]: org. junit. assert. assertequals ( const. internal_variable_job_repository_directory, jobmetatest. getvariable ( const. internal_variable_directory ) )
[3]: org. junit. assert. assertequals ( constant. internal_variable_job_repository_directory, jobmetatest. getvariable ( const. internal_variable_directory ) )
[4]: org. junit. assert. assertequals ( 1, jobmetatest. getvariable ( const. internal_variable_entry_current_directory ) )

************

************
tgt: org . junit . assert . assertfalse ( presenter . removeitem ( keytoremove ) )
[0]: org. junit. assert. assertequals ( const. internal_variable_job_repository_directory, jobmetatest. getvariable ( const. internal_variable_entry_current_directory ) )
[1]: org. junit. assert. assertequals ( constant. internal_variable_job_repository_directory, jobmetatest. getvariable ( const. internal_variable_entry_current_directory ) )
[2]: org. junit. assert. assertnotnull ( secondtx. hasthrownexception ( ) )
[3]: org. junit. assert. assertnotnull ( firsttx. hasthrownexception ( ) )
[4]: org. junit. assert. assertequals ( org. neo4j. index. impl. lucene. hasthrownexception. hasthrownexception ( ), secondtx )

************

************
tgt: org . junit . assert . assertfalse ( lm . login ( ) )
[0]: org. junit. assert. assertequals ( org. neo4j. index. impl. lucene. hasthrownexception. hasthrownexception ( ), firsttx )
[1]: org. junit. assert. assertthat ( secondtx. hasthrownexception ( ), org. hamcrest. corematchers. is ( true ) )
[2]: org. junit. assert. assertequals ( ostype. unknown, actualtype )
[3]: org. junit. assert. assertequals ( ostype. unknown, actualtype )
[4]: org. junit. assert. assertequals ( ostype. unknown, actualtype )

************

************
tgt: org . junit . assert . asserttrue ( ( ( querymodel . getobject ( ) . size ( ) ) == 2 ) )
[0]: org. junit. assert. assertequals ( operationstype. unknown, actualtype )
[1]: org. junit. assert. assertequals ( ostype. unknown, actualtype )
[2]: org. junit. assert. asserttrue ( evaluator. shouldproxyhost ( org2001:0db8:85a3:0000:0000:8a2e:0370:7334 ) )
[3]: org. junit. assert. asserttrue ( evaluator. shouldproxyhost ( "2001:0db8:85a3:0000:0000:8a2e:0370:7334 ) )
[4]: org. junit. assert. asserttrue ( evaluator. shouldproxyhost ( org. mockito. mockito. mock ( java. lang. string. class ) ) )

************

************
tgt: org . junit . assert . assertequals ( writtenlogposition , readlogposition )
[0]: org. junit. assert. asserttrue ( evaluator. shouldproxyhost ( org. mockito. mockito. mock ( org. json. simple. class. getname ( ) ) ) )
[1]: org. junit. assert. asserttrue ( evaluator. shouldproxyhost ( ""test"" ) )
[2]: org. junit. assert. assertnotnull ( container. getname ( ) )
[3]: org. junit. assert. assertequals ( name, container. getname ( ) )
[4]: org. junit. assert. assertequals ( null, container. getname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( propertymap . equals ( expectedevent ) )
[0]: type ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, org. apache. drill. exec. expr. fn. impl. bytefunctionhelpers. compare ( left. buffer, left. start, left. end, right. buffer, right. start, right. end ) )
[3]: org. junit. assert. assertequals ( 1, org. apache. drill. exec. expr. fn. impl. bytefunctionhelpers. compare ( left. buffer, left. start, left. end, right. buffer, right. start, right. end ) )
[4]: org. junit. assert. assertequals ( org. apache. drill. exec. expr. fn. impl. bytefunctionhelpers. compare ( left. buffer, left. start, left. end, right. buffer, right. start, right. end ), 0 )

************

************
tgt: org . junit . assert . assertequals ( same . sum ( 1 ) , sum )
[0]: org. junit. assert. assertequals ( java. util. collections. < org. apache. drill. exec. expr. fn. impl. bytefunctionhelpers. compare ( left. buffer, left. start, left. end, right. buffer, right. start, right. end ), 0 )
[1]: org. junit. assert. assertequals ( java. util. collections. < org. apache. drill. exec. expr. fn. impl. bytefunctionhelpers. compare ( left. buffer, left. start, left. end, right. buffer, right. start, right. end ), result )
[2]: org. junit. assert. assertnotnull ( cookie )
[3]: org. junit. assert. assertequals ( null, cookie )
[4]: org. junit. assert. assertnull ( cookie )

************

************
tgt: org . junit . assert . assertnotnull ( token )
[0]: org. junit. assert. assertequals ( assertnotnull, cookie )
[1]: org. junit. assert. assertequals ( null, cookie. name )
[2]: org. junit. assert. assertequals ( false, result )
[3]: org. junit. assert. asserttrue ( tester. testcounts ( 1, 10000 ) )
[4]: org. junit. assert. assertfalse ( tester. testcounts ( 1, 10000 ) )

************

************
tgt: org . junit . assert . assertnotnull ( fs )
[0]: org. junit. assert. asserttrue ( tester. testcounts ( 1l, 10000 ) )
[1]: org. junit. assert. asserttrue ( tester. testcounts ( 0, 10000 ) )
[2]: org. junit. assert. asserttrue ( tester. testscounts ( 1, 10000 ) )
[3]: org. junit. assert. assertnotnull ( plot. getdomainmarkers ( 99, layer. foreground ) )
[4]: org. junit. assert. assertnotnull ( renderer. getdomainmarkers ( 99, layer. foreground ) )

************

************
tgt: org . junit . assert . assertthat ( target . equals ( obj ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertnotnull ( plot. getdomainmarkers ( 99, layer2 ) )
[1]: org. junit. assert. assertequals ( xmarker1, plot. getdomainmarkers ( 99, layer ) )
[2]: )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( sortedentries , entries )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( 0, result )
[2]: , result )
[3]: org. junit. assert. asserttrue ( view. onruntimedataserror ( throwable ) )
[4]: org. junit. assert. asserttrue ( view. onruntimedefault ( throwable ) )

************

************
tgt: org . junit . assert . assertarrayequals ( array , message . getcompleteresultingmessage ( ) . getvalue ( ) )
[0]: org. junit. assert. assertfalse ( view. onruntimedataserror ( throwable ) )
[1]: org. junit. assert. asserttrue ( view. onruntimoderodererror ( throwable ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( getdocumentid ( ) )
[4]: org. junit. assert. assertnotnull ( testtaskassignment )

************

************
tgt: org . junit . assert . assertnotnull ( search )
[0]: org. junit. assert. assertnotnull ( tassignment )
[1]: org. junit. assert. assertnotnull ( testtaskassignment. getdocumentid ( ) )
[2]: org. junit. assert. assertnotnull ( g )
[3]: org. junit. assert. assertequals ( 1, size. get ( ) )
[4]: org. junit. assert. assertequals ( 1, result. get ( ) )

************

************
tgt: org . junit . assert . assertnull ( missingkaleoinstancetoken )
[0]: org. junit. assert. assertequals ( 0, size. get ( ) )
[1]: org. junit. assert. assertequals ( 0, result. get ( ) )
[2]: org. junit. assert. assertequals ( 1, count. get ( ) )
[3]: org. junit. assert. assertequals ( count, modulehelper. count )
[4]: org. junit. assert. assertequals ( 1, count )

************

************
tgt: org . junit . assert . assertequals ( expectedstring , writtenstring )
[0]: org. junit. assert. assertequals ( count, 1 )
[1]: org. junit. assert. assertequals ( 0, count )
[2]: org. junit. assert. assertequals ( count, modulehelper. max )
[3]: org. junit. assert. assertequals ( outputexpedted, outputexpedted )
[4]: org. junit. assert. assertequals ( outputfile, outputexpedted )

************

************
tgt: org . junit . assert . asserttrue ( set . equals ( qset ) )
[0]: org. junit. assert. assertequals ( """", outputexpedted )
[1]: org. junit. assert. assertequals ( outputexpedted, outputexpeded )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, lines. length )
[4]: org. junit. assert. assertequals ( 1, lines [ 0 ]. length )

************

************
tgt: org . junit . assert . assertequals ( src , mappedsrc )
[0]: org. junit. assert. assertequals ( 1, lines [ 0 ]. count )
[1]: org. junit. assert. assertequals ( 1, lines [ 1 ]. length )
[2]: org. junit. assert. assertequals ( 0, lines. length )
[3]: org. junit. assert. assertequals ( confdata, readconf )
[4]: org. junit. assert. assertnotnull ( baos. tobytearray ( ) )

************

************
tgt: org . junit . assert . asserttrue ( equals ( attributeservice . getalltrackedentityattributes ( ) , attributea , attributeb ) )
[0]: org. junit. assert. assertnotnull ( baos. tostring ( ) )
[1]: , readconf )
[2]: ) )
[3]: org. junit. assert. assertequals ( s, h2 )
[4]: org. junit. assert. assertequals ( s, h2. gettype ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( report )
[0]: org. junit. assert. assertequals ( s, h1. gettype ( ) )
[1]: org. junit. assert. assertnotnull ( h2. gettype ( ) )
[2]: org. junit. assert. assertequals ( s, h1 )
[3]: org. junit. assert. assertequals ( s1, mdcpropertymap. get ( 0 ) )
[4]: org. junit. assert. assertequals ( s1, mdcpropertymap. get ( s1 ) )

************

************
tgt: org . junit . assert . asserttrue ( reader . ready ( ) )
[0]: org. junit. assert. assertequals ( s1, mdcpropertymap. get ( 1 ) )
[1]: org. junit. assert. assertequals ( s1, mdcpropertymap. get ( string. length ( ) ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( lines. getlines ( ) )
[4]: org. junit. assert. assertequals ( 1, lines. getlines ( ). length )

************

************
tgt: org . junit . assert . assertfalse ( last . equals ( container . lastitemid ( ) ) )
[0]: org. junit. assert. assertequals ( 1, lines. getlines ( ) )
[1]: org. junit. assert. assertequals ( 1, lines. getlines ( ). size ( )
[2]: ) )
[3]: org. junit. assert. assertequals ( nodedifference. new_node, node. diff ( newnode, null, null ) )
[4]: org. junit. assert. assertequals ( nodedifference. new_node, node. diff ( newnode, node, null ) )

************

************
tgt: org . junit . assert . assertequals ( result , true )
[0]: org. junit. assert. assertequals ( nodedifference. new_node, node. diff ( newnode, null, 0 ) )
[1]: org. junit. assert. assertequals ( nodedifference. new_node, node. diff ( newnode, null, new java. util. arraylist ( ) ) )
[2]: org. junit. assert. assertequals ( nodedifference. new_node, node. diff ( newnode, null, new java. util. comparator ( ) ) )
[3]: org. junit. assert. assertnotnull ( ex. get ( ) )
[4]: org. junit. assert. assertnull ( actual. getmethod ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1000 , rowcount )
[0]: org. junit. assert. assertequals ( 0, actual. getmethod ( ) )
[1]: org. junit. assert. assertequals ( 1, actual. getmethod ( ) )
[2]: org. junit. assert. assertequals ( null, actual. getmethod ( ) )
[3]: ) )
[4]: org. junit. assert. assertnull ( e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , standard )
[0]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( 0, e. getmessage ( ). length ( ) )
[3]: org. junit. assert. asserttrue ( e. getmessage ( ). isempty ( ) )
[4]: org. junit. assert. assertequals ( 0, response. addcookie ( cookie ). getvalue ( ) )

************

************
tgt: org . junit . assert . asserttrue ( subjecthelper . isunauthenticated ( subject ) )
[0]: org. junit. assert. assertequals ( 1, response. addcookie ( cookie ). getvalue ( ) )
[1]: org. junit. assert. assertequals ( 0, response. addcookie ( cookie ). count ( ) )
[2]: org. junit. assert. assertequals ( 0, cookieheader. getvalue ( ). count ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), new java. lang. string ( cookieheader ) )
[4]: org. junit. assert. assertequals ( 1, leaffields. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( sampledvalue . getunit ( ) , org . hamcrest . corematchers . equalto ( unitofmeasure ) )
[0]: org. junit. assert. assertequals ( 0, leaffields. size ( ) )
[1]: org. junit. assert. assertequals ( org. pentaho. di. trans. steps. avroinput. avroinputtest. s_schematoplevelrecord, leaffields. size ( ) )
[2]: org. junit. assert. assertequals ( 2, leaffields. size ( ) )
[3]: org. junit. assert. assertequals ( 1, leavesfields. size ( ) )
[4]: org. junit. assert. assertnotnull ( parser. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( sitenavigationconstants . type_secondary , updatedsitenavigationmenu . gettype ( ) )
[0]: org. junit. assert. assertequals ( null, parser. getname ( ) )
[1]: org. junit. assert. assertequals ( name, parser. getname ( ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertthat ( diff, org. hamcrest. matchers. equalto ( org. javersion. core. difftest. sorted ( java. lang. object. class ) ) )

************

************
tgt: org . junit . assert . assertnotnull ( in )
[0]: org. junit. assert. assertthat ( diff, org. hamcrest. matchers. equalto ( org. javersion. core. difftest. sorted ( 1, null, 2, null ) ) )
[1]: org. junit. assert. assertthat ( diff, org. hamcrest. matchers. equalto ( java. util. optional. empty ( ) ) )
[2]: org. junit. assert. assertthat ( diff, org. hamcrest. matchers. equalto ( java. util. optional. of ( java. lang. object. class ) ) )
[3]: org. junit. assert. assertthat ( diff, org. hamcrest. matchers. equalto ( org. javersion. core. difftest. sorted ( java. util. map. class ) ) )
[4]: org. junit. assert. assertnull ( treewalk. next ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( address . getid ( ) ) != null ) )
[0]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[1]: org. junit. assert. assertnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. class, e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( queueview )
[0]: org. junit. assert. assertequals ( value, config. gettransportoptions ( ). get ( 0 ) )
[1]: org. junit. assert. assertsame ( value, config. gettransportoptions ( ) )
[2]: org. junit. assert. assertsame ( value, config. gettransportoptions ( ). get ( ) )
[3]: org. junit. assert. assertequals ( value, config. gettransportoptions ( ). get ( ) )
[4]: org. junit. assert. assertequals ( value, config. gettransportoptions ( ) )

************

************
tgt: org . junit . assert . assertsame ( expected , result )
[0]: org. junit. assert. assertequals ( vsystemname, result )
[1]: org. junit. assert. assertequals ( vsystem name, result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( vsystemname, result )

************

************
tgt: org . junit . assert . assertequals ( expected , builder . buildget ( uri ) )
[0]: org. junit. assert. assertnotnull ( actualexceptioncode )
[1]: org. junit. assert. assertnull ( actualexceptioncode )
[2]: org. junit. assert. assertequals ( exceptionmappings, actualexceptioncode )
[3]: org. junit. assert. assertequals ( exceptionmappings, actualexception code )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( taskid , taskinfo . gettaskid ( ) . getvalue ( ) )
[0]: org. junit. assert. assertequals ( true, result )
[1]: org. junit. assert. assertequals ( false, result )
[2]: org. junit. assert. assertequals ( result, true )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( i, 1 )

************

************
tgt: org . junit . assert . assertequals ( 0 , matches . size ( ) )
[0]: org. junit. assert. assertequals ( 1, i )
[1]: org. junit. assert. assertequals ( i, 0 )
[2]: org. junit. assert. assertequals ( 0, i )
[3]: org. junit. assert. assertequals ( i, 2 )
[4]: org. junit. assert. assertnotnull ( eventcategory )

************

************
tgt: org . junit . assert . assertequals ( "" , password )
[0]: org. junit. assert. assertnull ( eventcategory )
[1]: , eventcategory )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertarrayequals ( packet, fieldserializer. getpayload ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( check . getsize ( ) ) > 0 ) )
[0]: org. junit. assert. assertarrayequals ( packet, serializer. getpayload ( ) )
[1]: org. junit. assert. assertequals ( packet. length, serializer. getpayload ( ). size ( ) )
[2]: org. junit. assert. assertequals ( packet [ 1 ], fieldserializer. getpayload ( ) )
[3]: org. junit. assert. assertequals ( packet [ 1 ], fieldserializer. getpayload ( ). length )
[4]: org. junit. assert. assertequals ( 1, frames. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( splits . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, frames. size ( ) )
[1]: org. junit. assert. assertequals ( 2, frames. size ( ) )
[2]: org. junit. assert. assertequals ( 6, frames. size ( ) )
[3]: org. junit. assert. assertequals ( 10, frames. size ( ) )
[4]: org. junit. assert. asserttrue ( target. validate ( ) )

************

************
tgt: org . junit . assert . assertfalse ( success )
[0]: org. junit. assert. assertfalse ( target. validate ( ) )
[1]: org. junit. assert. assertequals ( true, target. validate ( ) )
[2]: org. junit. assert. assertequals ( false, target. validate ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( resultmessage ( result, httprequesttype. post ), result. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( conn , tx . getconnection ( ) )
[0]: org. junit. assert. assertequals ( resultmessage ( result, httprequesttype. post ), result. size ( ) )
[1]: org. junit. assert. assertequals ( resultmessage ( result, httprequesttype. post ), result. getid ( ) )
[2]: org. junit. assert. assertequals ( resultmessage ( result, httprequesttype. post ), result. msg ( ) )
[3]: org. junit. assert. assertnotnull ( resultmessage ( result, httprequesttype. post ) )
[4]: org. junit. assert. assertnotnull ( d )

************

************
tgt: org . junit . assert . asserttrue ( connection . hadvalidshutdown ( ) )
[0]: org. junit. assert.null ( d )
[1]: null, d )
[2]: null ) )
[3]: null )
[4]: org. junit. assert. asserttrue ( ans. getresult ( ) )

************

************
tgt: org . junit . assert . asserttrue ( union . isdistinct ( ) )
[0]: org. junit. assert. assertarrayequals ( new int [ ] { 1, 1 }, visitfilecalled )
[1]: org. junit. assert. assertarrayequals ( new int [ ] { 1 }, visitfilecalled )
[2]: org. junit. assert. assertarrayequals ( new int [ ] { 1, 0 }, visitfilecalled )
[3]: org. junit. assert. assertequals ( font, column. getheaderfont ( ) )
[4]: org. junit. assert. assertequals ( custommaxconcurrency, customflow. getmaxconcurrency ( ) )

************

************
tgt: org . junit . assert . asserttrue ( localfilesys . mkdirs ( dir ) )
[0]: org. junit. assert. assertthat ( customflow. getmaxconcurrency ( ), org. hamcrest. matchers. is ( custommaxconcurrency ) )
[1]: org. junit. assert. assertthat ( customflow, org. hamcrest. corematchers. is ( custommaxconcurrency ) )
[2]: org. junit. assert. assertnotnull ( customflow. getmaxconcurrency ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( n2. get ( n2. getpath ( ) ), paths. get ( n2. getpath ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( flowstate . vsdisk_detached , newstate )
[0]: org. junit. assert. assertequals ( s. get ( n2 ), paths. get ( n2. getpath ( ) ) )
[1]: org. junit. assert. assertequals ( n. get ( n2 ), paths. get ( n2. getpath ( ) ) )
[2]: org. junit. assert. assertequals ( n2. get ( n2. getid ( ) ), paths. get ( n2. getid ( ) ) )
[3]: org. junit. assert. assertequals ( s. get ( n2. getid ( ) ), paths. get ( n2. getid ( ) ) )
[4]: org. junit. assert. assertnotnull ( producer. getresources ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , reportresults . size ( ) )
[0]: org. junit. assert. assertnotnull ( producer. getproperties ( ) )
[1]: org. junit. assert. assertnotnull ( producer. getcount ( ) )
[2]: org. junit. assert. assertnotnull ( producer. calculat ( ) )
[3]: org. junit. assert. assertnotnull ( producer. mlist ( ) )
[4]: org. junit. assert. assertequals ( 0, resulta. compareto ( resultb ) )

************

************
tgt: org . junit . assert . assertfalse ( checker . iszipinputstream ( bufferedinputstream ) )
[0]: org. junit. assert. assertequals ( 1, resulta. compareto ( resultb ) )
[1]: org. junit. assert. assertequals ( true, ( ( resulta. compareto ( resultb ) ) == 0 ) )
[2]: org. junit. assert. assertequals ( 0, filteredehrars. size ( ) )
[3]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. file. fat. basictests. servlet. getusersecurityname ( user ) )
[4]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. file. fat. basictests. servlet. getusersecurityname ( uniqueuserid ) )

************

************
tgt: org . junit . assert . assertnull ( usergrouphistory )
[0]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. file. fat. basictests. servlet. getusersecurityname ( identuserid ) )
[1]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. file. fat. basictests. servlet. getusersecurityname ( uiduserid ) )
[2]: ) )
[3]: org. junit. assert. assertnull ( t )
[4]: org. junit. assert. assertnotnull ( t )

************

************
tgt: org . junit . assert . assertnotnull ( responsebody . getnetworks ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( t, test_2007_07_15_12_30_40_987654321 )
[1]: org. junit. assert. assertsame ( t, test_2007_07_15_12_30_40 end )
[2]: org. junit. assert. assertsame ( t, test_2007_07_15_10 )
[3]: org. junit. assert. assertequals ( 1, response. getalldatatagvalueobjects ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, response. getalldatatagvalueobjects ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expecteds , actuals )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), response. getalldatatagvalueobjects ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), response. getalldatatagvalueobjects ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. < java. lang. string > emptylist ( ), response. getalldatatagvalueobjects ( ) )
[3]: org. junit. assert. assertequals ( 1, berichtentiteiten. size ( ) )
[4]: org. junit. assert. assertnull ( mdc. get ( ""foo"" ) )

************

************
tgt: org . junit . assert . assertnull ( mxbeanmapping2 )
[0]: org. junit. assert. assertnotnull ( mdc. get ( ""foo"" ) )
[1]: org. junit. assert. assertnull ( mdc. get ( org. mockito. mockito. mock ( org. apache. lifecycle.
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( endtime, resolution. getindexcontaining ( date ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , crh2 . getcount ( ) )
[0]: org. junit. assert. assertequals ( ( endtime + 1 ), resolution. getindexcontaining ( date ) )
[1]: org. junit. assert. assertequals ( instant, resolution. getindexcontaining ( date ) )
[2]: org. junit. assert. assertequals ( duration, resolution. getindexcontaining ( date ) )
[3]: org. junit. assert. assertequals ( ( endtime * 1000 ), resolution. getindexcontaining ( date ) )
[4]: org. junit. assert. asserttrue ( map. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. asserttrue ( maps. isempty ( ) )
[1]: org. junit. assert. asserttrue ( mapping. isempty ( ) )
[2]: _1 ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, page. length ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , historicincidents )
[0]: org. junit. assert. assertequals ( 0, page. length ( ) )
[1]: org. junit. assert. assertequals ( 3, page. length ( ) )
[2]: org. junit. assert. assertequals ( 4, page. length ( ) )
[3]: org. junit. assert. assertequals ( 5, page. length ( ) )
[4]: org. junit. assert. assertequals ( 1, roler2rml )

************

************
tgt: org . junit . assert . assertequals ( 1 , cnt )
[0]: org. junit. assert. assertequals ( 0, roler2rml )
[1]: org. junit. assert. assertequals ( one, roler2rml )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, valueops. size ( key1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( poolstats . currentthreadswaitingproperty ( ) )
[0]: org. junit. assert. assertequals ( 0, valueops. size ( key1 ) )
[1]: org. junit. assert. assertequals ( 1, valueops. size ( key 1 ) )
[2]: org. junit. assert. assertequals ( 1, valueops. size ( key2 ) )
[3]: org. junit. assert. assertequals ( 1, valueops. size ( key0 ) )
[4]: org. junit. assert. assertnotnull ( clone )

************

************
tgt: org . junit . assert . assertequals ( count . getkey ( ) , 0 , count . getvalue ( ) . intvalue ( ) )
[0]: org. junit. assert. assertnull ( clone )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), clone )
[2]: org. junit. assert. assertequals ( java. util. optional. empty ( ), clone )
[3]: org. junit. assert. assertequals ( null, clone )
[4]: org. junit. assert. assertnull ( content )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( """", content )
[1]: org. junit. assert. assertequals ( null, content )
[2]: org. junit. assert. assertnotnull ( content )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( connector )

************

************
tgt: org . junit . assert . assertthat ( actualmodel )
[0]: org. junit. assert. assertnull ( connector )
[1]: org. junit. assert. assertnotnull ( connector. name )
[2]: org. junit. assert. assertnotnull ( connector. data )
[3]: ) )
[4]: org. junit. assert. assertequals ( oldamount, inventory. getmaxstacksize ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , dk . alexandra . fresco . framework . util . modulusfinder . findsuitablemodulus ( 16 ) )
[0]: org. junit. assert. assertequals ( oldamount, inventory. getmax getmaxstacksize ( ) )
[1]: org. junit. assert. assertequals ( oldamount, inventory. getmaxetokens ( ) )
[2]: org. junit. assert. assertequals ( oldamount, inventory. getmaxanswers ( ) )
[3]: org. junit. assert. assertequals ( oldamount, inventory. getmaxgeneric ( ) )
[4]: org. junit. assert. assertnotnull ( alldruginfo )

************

************
tgt: org . junit . assert . asserttrue ( ( ( ( java . lang . long ) ( results . get ( 2 ) ) ) > ( - 1 ) ) )
[0]: org. junit. assert. assertnull ( alldruginfo )
[1]: org. junit. assert. assertequals ( 0, alldruginfo. length )
[2]: org. junit. assert. assertequals ( 0, alldruginfo )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, victim. hasoutline ( ) )

************

************
tgt: org . junit . assert . asserttrue ( acceptalert . get ( ) )
[0]: org. junit. assert. assertequals ( true, victim. hasoutline ( ) )
[1]: org. junit. assert. assertequals ( 0, victim. hasoutline ( ) )
[2]: org. junit. assert. assertequals ( null, victim. hasoutline ( ) )
[3]: org. junit. assert. assertequals ( 1, victim. hasoutline ( ). length )
[4]: org. junit. assert. assertequals ( 1, b. getlocaisdepagamento ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , exists )
[0]: org. junit. assert. assertequals ( 0, b. getlocaisdepagamento ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, b. getlocaisdepagamento ( ) )
[2]: org. junit. assert. assertequals ( 1, b. getlocaisdepagamento ( ). length )
[3]: org. junit. assert. assertequals ( 1, b. getlocaisdepagamento ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( appender )

************

************
tgt: org . junit . assert . assertsame ( query , actualquery )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert.null ( result )
[2]: null, result )
[3]: null ) )
[4]: null )

************

************
tgt: org . junit . assert . asserttrue ( wjah . isuserinrole ( role , ier , subject ) )
[0]: org. junit. assert. assertnotnull ( person )
[1]: org. junit. assert. assertequals ( person, person. name )
[2]: org. junit. assert. assertequals ( person, person )
[3]: org. junit. assert. assertnotnull ( person. name )
[4]: org. junit. assert. assertequals ( person, person. class )

************

************
tgt: org . junit . assert . assertequals ( 9 , io . github . data4all . model . data . tags . getallnodetags ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( sh, txt. gettextparagraphs ( ) )
[1]: org. junit. assert. assertequals ( sh, txt. gettextparagraphs ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, empty. rowcount ( ) )
[3]: org. junit. assert. assertequals ( 0, files. size ( ) )
[4]: org. junit. assert. assertequals ( 0, read ( path3 ) )

************

************
tgt: org . junit . assert . assertequals ( newdate , instance . getobject ( "theday" , java . util . date . class ) )
[0]: org. junit. assert. assertequals ( 0, list. size ( ) )
[1]: org. junit. assert. assertequals ( 0, readen. size ( ) )
[2]: org. junit. assert. assertequals ( 0, size ( path2 ) )
[3]: org. junit. assert. assertfalse ( fileentries ( _group. getgroupid ( ) ) )
[4]: org. junit. assert. assertfalse ( fileentries. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( result . stop , and . apply ( pathdata , ( - 1 ) ) )
[0]: org. junit. assert. assertequals ( 0, fileentries. size ( ) )
[1]: org. junit. assert. assertfalse ( resultfileentries ( _group. getgroupid ( ) ) )
[2]: org. junit. assert. assertfalse ( resultfileentries ( _group. getgroupid ( ), folder ) )
[3]: org. junit. assert. asserttrue ( smallidx. hascrc32support ( ) )
[4]: org. junit. assert. assertnotnull ( server. getconfig ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( 1, server. getconfig ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, server. getconfig ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, server. getconfig ( ) )
[3]: org. junit. assert. assertnull ( server. getconfig ( ) )
[4]: org. junit. assert. assertnotnull ( actual )

************

************
tgt: org . junit . assert . assertthat ( comparison1 , org . hamcrest . matchers . is ( 0 ) )
[0]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. join ( ), e. getmessage ( ) )
[2]: org. junit. assert. assertnull ( e. getmessage ( ) )
[3]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[4]: . getmessage ( ) )

************

************
tgt: org . junit . assert . assertnull ( existinguseridmapper )
[0]: org. junit. assert. assertequals ( true, fcs1. equals ( fcs2 ) )
[1]: org. junit. assert. assertequals ( 1, collection. size ( ) )
[2]: org. junit. assert. assertequals ( 1, size ( ) )
[3]: org. junit. assert. assertequals ( 1, repository. size ( ) )
[4]: org. junit. assert. assertequals ( 1, map. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , ( ( a . compareto ( b ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( 1, count ( map ) )
[1]: org. junit. assert. assertequals ( 1, io. cdap. cdap. internal. app. store. defaultstoretest. store. getrun ( programid ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, io. cdap. cdap. internal. app. store. defaultstoretest. store. getrun ( programid ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), io. cdap. cdap. internal. app. store. defaultstoretest. store. getrun ( programid ) )
[4]: org. junit. assert. assertnotnull ( io. cdap. cdap. internal. app. store. defaultstoretest. store. getrun ( programid ) )

************

************
tgt: org . junit . assert . assertequals ( upperboundforprinicipal , upperbound )
[0]: org. junit. assert. assertequals ( 1, io. cdap. cdap. internal. app. store. defaultstoretest. store. getrun ( programid. run ( ) ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, victim. position ( ) )
[2]: org. junit. assert. assertequals ( 0, victim. position ( ) )
[3]: org. junit. assert. assertequals ( 3, victim. position ( ) )
[4]: org. junit. assert. assertequals ( 5, victim. position ( ) )

************

************
tgt: org . junit . assert . assertfalse ( config . isinheritparent ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( builder. getdpdklatestportnumberused ( ) )
[2]: org. junit. assert. assertnotnull ( dao. getdpdklatestportnumberused ( ) )
[3]: org. junit. assert. assertnotnull ( materialized. getdpdklatestportnumberused ( ) )
[4]: org. junit. assert. assertnotnull ( handler. getdpdklatestportnumberused ( ) )

************

************
tgt: org . junit . assert . assertequals ( measures . get ( 0 ) . getname ( ) , measure . getname ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( kbase )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( 1, scheduler. run ( ) )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . assertthat ( new java . lang . string ( baos . tobytearray ( ) ) , org . hamcrest . corematchers . equalto ( data ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( 1, todos2. size ( ) )
[2]: org. junit. assert. assertthat ( bidirectionaltraces, org. hamcrest. matchers. contains ( org. batfish. question. traceroute. bidirectionaltracerouteanswerertest. forward_flow, forwardtrace ) )
[3]: org. junit. assert. assertthat ( bidirectionaltraces, org. hamcrest. matchers. contains ( org. batfish. question. traceroute. bidirectionaltracerouteanswerertest. forward_flow, reversetrace ) )
[4]: org. junit. assert. assertthat ( bidirectionaltraces, org. hamcrest. matchers. empty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( deadlockdetector . victims ( ) . isempty ( ) )
[0]: org. junit. assert. assertthat ( bidirectionaltraces, empty ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( iban. getbranchcode ( ) )
[3]: org. junit. assert. assertequals ( 1, iban. getbranchcode ( ) )
[4]: org. junit. assert. assertnotnull ( iban )

************

************
tgt: org . junit . assert . asserttrue ( res . gettablenames ( ) . contains ( name ) )
[0]: org. junit. assert. assertnotnull ( iban. getbranchstring ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, commandlineoptions. isprintusage ( ) )
[3]: org. junit. assert. assertequals ( 0, commandlineoptions. isprintusage ( ) )
[4]: org. junit. assert. assertequals ( 1, commandlineoptions. isprintusage ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( false, haurlselector. checkurl ( null ) )
[1]: org. junit. assert. assertequals ( true, haurlselector. checkurl ( null ) )
[2]: org. junit. assert. assertfalse ( haurlselector. checkurl ( null ) )
[3]: org. junit. assert. asserttrue ( haurlselector. checkurl ( null ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), parsed )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), parsed )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), parsed )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 0 ), parsed )
[4]: org. junit. assert. assertequals ( java. lang. object. valueof ( 1 ), parsed )

************

************
tgt: org . junit . assert . assertthat ( valuesources . size ( ) , org . hamcrest . corematchers . is ( 2 ) )
[0]: org. junit. assert. asserttrue ( services. isvalidobjectflowstart ( node ) )
[1]: org. junit. assert. asserttrue ( handler. isvalidobjectflowstart ( node ) )
[2]: org. junit. assert. asserttrue ( org. eclipse. uml2. uml. flow. isvalidobjectflowstart ( node ) )
[3]: org. junit. assert. asserttrue ( org. eclipse. uml2. uml. persistence. isequivalent ( flow, node ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expectquery , actualquery )
[0]: org. junit. assert. assertnotnull ( existentfile. exists ( ) )
[1]: org. junit. assert. assertnotnull ( readmap )
[2]: org. junit. assert. asserttrue ( readmap. isempty ( ) )
[3]: org. junit. assert. assertequals ( org. apache. ibatis. reflection. system. aware. runtimeexception. class, meta. getvalue ( "richlist. tostring ( ) ). getclass ( ) )
[4]: org. junit. assert. assertequals ( ""foo"", meta. getvalue ( ""bar"" ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , meldingen . size ( ) )
[0]: org. junit. assert. assertequals ( org. apache. ibatis. reflection. system. aware. java. lang. string. class, meta. getvalue ( "richlist. tostring ( ) ) )
[1]: org. junit. assert. assertequals ( org. apache. ibatis. reflection. system. aware. runtimeexception. class, meta. getvalue ( org. apache. ibatis. reflection. system. runtimeexception. class ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, endereco. getnumero ( ) )
[4]: org. junit. assert. assertequals ( 0, endereco. getnumero ( ) )

************

************
tgt: org . junit . assert . asserttrue ( preview . isempty ( ) )
[0]: org. junit. assert. assertequals ( 3, endereco. getnumero ( ) )
[1]: org. junit. assert. assertequals ( 2, endereco. getnumero ( ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( fd. equals ( fd2 ) )
[4]: org. junit. assert. asserttrue ( fd1. equals ( fd2 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , flexgrid )
[0]: org. junit. assert. asserttrue ( fd2. equals ( fd2 ) )
[1]: org. junit. assert. asserttrue ( fd == fd2 )
[2]: org. junit. assert. asserttrue ( fd == fd2 ) )
[3]: org. junit. assert. assertnotnull ( plugin. isnooutput ( ) )
[4]: org. junit. assert. asserttrue ( plugin. isnooutput ( ) )

************

************
tgt: org . junit . assert . assertequals ( null , docssparkapp . getdocumentationhtml ( ) )
[0]: org. junit. assert. assertequals ( 1, plugin. isnooutput ( ) )
[1]: org. junit. assert. assertequals ( 0, plugin. isnooutput ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, vh. geteventssize ( ) )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( expected. size ( ), result. size ( ) )
[1]: org. junit. assert. assertequals ( expected. get ( ), result )
[2]: org. junit. assert. assertequals ( expected. get ( s ), result )
[3]: org. junit. assert. assertequals ( expected, actual )
[4]: org. junit. assert. assertequals ( 5, testlist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , patterns . size ( ) )
[0]: org. junit. assert. assertequals ( 1, testlist. size ( ) )
[1]: org. junit. assert. assertequals ( 0, testlist. size ( ) )
[2]: org. junit. assert. assertequals ( 3, testlist. size ( ) )
[3]: org. junit. assert. assertequals ( 4, testlist. size ( ) )
[4]: org. junit. assert. asserttrue ( output )

************

************
tgt: org . junit . assert . assertnotnull ( crystal )
[0]: org. junit. assert. assertequals ( true, output )
[1]: org. junit. assert. assertfalse ( output )
[2]: org. junit. assert. assertequals ( false, output )
[3]: org. junit. assert. assertthat ( output, org )
[4]: org. junit. assert. assertequals ( match, matchecounts [ 1 ] )

************

************
tgt: org . junit . assert . assertequals ( 2 , map . size ( ) )
[0]: org. junit. assert. assertequals ( match, matchecounts [ 2 ] )
[1]: org. junit. assert. assertequals ( match, matchecounts [ ( matchecounts. length ) ] )
[2]: org. junit. assert. assertthat ( result. isallowed ( ), org. hamcrest. matchers. is ( false ) )
[3]: org. junit. assert. assertthat ( result. isallowed ( ), org. hamcrest. matchers. equalto ( false ) )
[4]: org. junit. assert. assertthat ( result. isallowed ( ), org. hamcrest. matchers. empty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , ( ( int ) ( d . remove ( ) ) ) )
[0]: org. junit. assert. assertthat ( result, isallowed ( ) )
[1]: org. junit. assert. assertthat ( result. isallowed ( ), org. hamcrest. corematchers. is ( false )
[2]: org. junit. assert. assertequals ( 1, 1 )
[3]: org. junit. assert. assertnotnull ( collection )
[4]: org. junit. assert. assertnotnull ( s )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . contains ( 30 , 55 , 88 , 12 ) )
[0]: org. junit. assert. assertnotnull ( queue )
[1]: type ) { }
[2]: org. junit. assert. assertequals ( 1, pe. getmaxiterations ( ) )
[3]: org. junit. assert. assertnotnull ( pe. getmaxiterations ( ) )
[4]: org. junit. assert. assertequals ( 0, pe. getmaxiterations ( ) )

************

************
tgt: org . junit . assert . assertequals ( firsttest , secondtest )
[0]: org. junit. assert. assertnull ( pe. getmaxiterations ( ) )
[1]: org. junit. assert. assertequals ( 1l, pe. getmaxiterations ( ) )
[2]: org. junit. assert. assertequals ( 0, problems. size ( ) )
[3]: org. junit. assert. assertequals ( 1, problems. size ( ) )
[4]: org. junit. assert. assertequals ( 3, problems. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . iwave . ext . netapp . luntest . lun_id , result )
[0]: public void size ( ) { }
[1]: public void error ( ) { }
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4, 5, 6 ), returnedports )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4, 5 ), returnedports )
[4]: org. junit. assert. assertequals ( list ( 1, 2, 3, 4, 5, 6, 7, 8, 9 ), returnedports )

************

************
tgt: org . junit . assert . assertequals ( count . get ( ) , messagecount )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4 ), returnedports )
[1]: org. junit. assert. assertequals ( list ( 1, 2, 3, 4, 5, 6 ), returnedports )
[2]: org. junit. assert. assertequals ( 1, records. length )
[3]: org. junit. assert. assertequals ( 0, records. length )
[4]: org. junit. assert. assertequals ( 2, records. length )

************

************
tgt: org . junit . assert . assertequals ( null , filterresult )
[0]: org. junit. assert. assertequals ( 3, records. length )
[1]: org. junit. assert. assertequals ( 4, records. length )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), c )
[3]: org. junit. assert. assertequals ( 0, c. printf ( ) )
[4]: org. junit. assert. assertequals ( 1, c. printf ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( viewaction . project . visiblefiletry ( project . getname ( ) ) )
[0]: , c )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( clientmessage. gettype ( ) )
[3]: org. junit. assert. assertnull ( clientmessage. gettype ( ) )
[4]: org. junit. assert. assertequals ( 1, clientmessage. gettype ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( assertion , rest )
[0]: org. junit. assert. assertequals ( 1, clientmessage. gettype ( ) )
[1]: org. junit. assert. assertequals ( 1, clientmessage. gettype ( ). length )
[2]: org. junit. assert. assertequals ( value, actual )
[3]: org. junit. assert. assertnull ( actual )
[4]: org. junit. assert. assertnotnull ( actual )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: , actual )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, result )
[3]: org. junit. assert. assertequals ( 0, result )
[4]: org. junit. assert. assertequals ( result, 0 )

************

************
tgt: org . junit . assert . assertnotnull ( fieldproperty )
[0]: org. junit. assert. assertequals ( result, 2 )
[1]: org. junit. assert. assertequals ( 2, result )
[2]: org. junit. assert. assertfalse ( check. isrequired ( ) )
[3]: org. junit. assert. assertequals ( 0, check. isrequired ( ) )
[4]: org. junit. assert. assertnotnull ( berichtgegevens. isleegbericht ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , nodes . size ( ) )
[0]: org. junit. assert. assertnotnull ( entity )
[1]: org. junit. assert. asserttrue ( bpinfo1. equals ( bpinfo2 ) )
[2]: org. junit. assert. asserttrue ( java. util. arrays. startswithprefix ( prefix ) )
[3]: org. junit. assert. asserttrue ( s. startswithprefix ( prefix ) )
[4]: org. junit. assert. asserttrue ( java. util. arrays. equals ( prefix, oid. getbytes ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , subscriptionhistories . size ( ) )
[0]: org. junit. assert. assertequals ( t. get ( ), v )
[1]: org. junit. assert. assertequals ( t, t. get ( ) )
[2]: org. junit. assert. assertequals ( t, v )
[3]: org. junit. assert. assertequals ( t, ( ( long ) ( t. get ( ) ) ) )
[4]: org. junit. assert. assertnotnull ( t. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( cs . advance ( ) )
[0]: org. junit. assert. assertequals ( 1l, loaded. getpopularity ( ) )
[1]: org. junit. assert. assertequals ( new java. util. optional ( 1l ), loaded. getpopularity ( ) )
[2]: org. junit. assert. assertequals ( 1, loaded. getpopularity ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. optional. of ( toinsert ), loaded )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , out )
[0]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( exception, e. getmessage ( ) )
[2]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( exception. getmessage ( ), e )
[4]: . getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( "1" , printcircular . printcircular ( array ) )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertequals ( 0, list. size ( ) )
[2]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) == 1 ) )
[3]: org. junit. assert. assertequals ( 3, list. size ( ) )
[4]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) == 0 ) )

************

************
tgt: org . junit . assert . assertthat ( subject . reverseget ( value ) , org . hamcrest . corematchers . is ( key ) )
[0]: org. junit. assert. assertequals ( true, isvalid )
[1]: org. junit. assert. asserttrue ( isvalid )
[2]: org. junit. assert. assertequals ( 1, isvalid )
[3]: org. junit. assert. assertfalse ( isvalid )
[4]: org. junit. assert. assertequals ( true, isvalid )

************

************
tgt: org . junit . assert . asserttrue ( r . ismatch ( request ) )
[0]: org. junit. assert. assertequals ( 1, index )
[1]: org. junit. assert. assertequals ( 0, index )
[2]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), index )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), index )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), index )

************

************
tgt: org . junit . assert . assertequals ( xmlesperado , lacre . tostring ( ) )
[0]: org. junit. assert. assertfalse ( result. isfailed ( ) )
[1]: org. junit. assert. asserttrue ( result. isfailed ( ) )
[2]: org. junit. assert. assertnull ( result. isfailed ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertnotnull ( jpaentity )
[0]: org. junit. assert. assertnotnull ( constraint. getclass ( ) )
[1]: org. junit. assert. assertnotnull ( wb. getclass ( ) )
[2]: org. junit. assert. assertnotnull ( constraint )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnotnull ( wb )

************

************
tgt: org . junit . assert . assertequals ( false , presenter . isusingquery ( ) )
[0]: org. junit. assert. assertequals ( customicons. geticons ( ). size ( ), 1 )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( customiconone ), customicons. geticons ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( customiconone, customtd ), customicons. geticons ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( customiconone ), customicons. geticons ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( customiconone, customiconone ), customicons. geticons ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( 0 ) )
[1]: org. junit. assert. assertequals ( 0, result )
[2]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( 1 ) )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( ( - 1 ), result )

************

************
tgt: org . junit . assert . assertthat ( outputstream . tobytearray ( ) , org . hamcrest . corematchers . is ( input ) )
[0]: org. junit. assert. assertequals ( path, relativepath )
[1]: org. junit. assert. assertequals ( path, relativepath. tostring ( ) )
[2]: org. junit. assert. assertequals ( path, relativepath. trim ( ) )
[3]: org. junit. assert. assertequals ( path, relativepath. getmessage ( ) )
[4]: org. junit. assert. assertequals ( path, relativepath. getabsolutepath ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( roles . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertnull ( config. getcontextdir ( ) )
[1]: org. junit. assert. assertequals ( logger, config. getcontextdir ( ) )
[2]: org. junit. assert. assertnotnull ( config. getcontextdir ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( ( ( msg . getbyte ( this . name ) ) == ( ( byte ) ( 1 ) ) ) )
[0]: org. junit. assert. assertequals ( 1, result1. size ( ) )
[1]: org. junit. assert. assertequals ( result1. size ( ), 1 )
[2]: org. junit. assert. assertequals ( result1. size ( ), 0 )
[3]: org. junit. assert. assertequals ( result1. size ( ), 3 )
[4]: org. junit. assert. assertequals ( result1. size ( ), 2 )

************

************
tgt: org . junit . assert . asserttrue ( details . hascancel ( ) )
[0]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, got )
[1]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, instance )
[2]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, get )
[3]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, instance. got )
[4]: org. junit. assert. assertequals ( edu. washington. cs. knowitall. extractor. reverbextractortest. expected, instance. my )

************

************
tgt: org . junit . assert . assertequals ( "operation<sp>failed.<sp>please<sp>try<sp>again<sp>later." , com . hextremelabs . ussd . ui . manager . uimanagertest . uimanager . geterrormessage ( ) )
[0]: org. junit. assert. asserttrue ( isexpecteddata )
[1]: org. junit. assert. assertfalse ( isexpecteddata )
[2]: org. junit. assert. assertequals ( true, isexpecteddata )
[3]: org. junit. assert. assertthat ( isexpecteddata, is )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , time . minutes ( ) )
[0]: org. junit. assert. assertnotnull ( queue )
[1]: org. junit. assert. assertnotnull ( collection )
[2]: org. junit. assert. assertnotnull ( s )
[3]: org. junit. assert. assertnotnull ( context )
[4]: type ) { }

************

************
tgt: org . junit . assert . assertnull ( p )
[0]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( null, e. getmessage ( ) )
[2]: org. junit. assert. assertnull ( e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( ""test"", e. getmessage ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expectedprivatedatapersisted , actualprivatedatapersisted )
[0]: org. junit. assert. assertequals ( ""test"", echo. echo ( ""test"" ) )
[1]: org. junit. assert. assertequals ( ""test"", echo. echo ( ""test"" ) )
[2]: org. junit. assert. assertequals ( echo. echo ( ""test"" ), 0 )
[3]: org. junit. assert. assertequals ( echo, echo )
[4]: public void init ( ) { }

************

************
tgt: org . junit . assert . assertequals ( "keanu<sp>reeves" , reeves . getproperty ( "name" ) )
[0]: org. junit. assert. assertnotnull ( message. getmessageannotations ( ) )
[1]: org. junit. assert. assertequals ( ibond. order. unset, container. getmaximumbondorder ( a2 ) )
[2]: org. junit. assert. assertnotnull ( container. getmaximumbondorder ( a2 ) )
[3]: org. junit. assert. assertnull ( container. getmaximumbondorder ( a2 ) )
[4]: org. junit. assert. assertequals ( ibond. order. unset, container. getmaximumbondorder ( a1 ) )

************

************
tgt: org . junit . assert . assertequals ( importdate , em . getexported ( ) )
[0]: org. junit. assert. assertthat ( container. getmaximumbondorder ( a2 ), is ( ibond. order. unset ) )
[1]: org. junit. assert. assertequals ( 1, obj. getid ( ) )
[2]: org. junit. assert. assertnotnull ( obj. s )
[3]: org. junit. assert. assertnotnull ( obj. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( obj. getmessage ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( employee )
[0]: org. junit. assert. assertequals ( 1, obj. s. length )
[1]: org. junit. assert. assertequals ( true, of. isempty ( ) )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( null, expected. next ( key, value ) )
[4]: org. junit. assert. assertequals ( null, rows. next ( ) )

************

************
tgt: org . junit . assert . assertequals ( errocode , result . geterrcode ( ) )
[0]: org. junit. assert. assertequals ( null, sb. next ( ) )
[1]: org. junit. assert. assertequals ( null, sb. next ( key, value ) )
[2]: org. junit. assert. assertthat ( status. get ( ), org. hamcrest. matchers. is ( 1 ) )
[3]: org. junit. assert. assertthat ( status. get ( ), org. hamcrest. matchers. is ( 0 ) )
[4]: org. junit. assert. assertequals ( 1, status. get ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( coeffs , actual )
[0]: _1. get ( ) )
[1]: _2. get ( ) )
[2]: org. junit. assert. asserttrue ( checkpassword ( originalhash, salt, salt ) )
[3]: org. junit. assert. asserttrue ( checkpassword ( originalhash, salt, null ) )
[4]: org. junit. assert. asserttrue ( checkpassword ( originalhash, originalhash, salt ) )

************

************
tgt: org . junit . assert . assertequals ( testname , requestcaptor . getvalue ( ) . getname ( ) )
[0]: org. junit. assert. asserttrue ( checkpassword ( originalhash, salt, originalhash ) )
[1]: org. junit. assert. asserttrue ( checkpassword ( originalhash, salt, secret ) )
[2]: org. junit. assert. assertnotnull ( definition )
[3]: org. junit. assert. asserttrue ( peeracceptanceutil. ispeerinterestedonremoteworker ( rwpstub. getserviceid ( ) ) )
[4]: org. junit. assert. assertequals ( 1, meldingen. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( resources . contains ( "/register" ) )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertequals ( 1, count )
[2]: org. junit. assert. assertequals ( 0, 1 )
[3]: org. junit. assert. assertequals ( 1, events. length )
[4]: org. junit. assert. assertequals ( 1, events. count )

************

************
tgt: org . junit . assert . assertequals ( java . lang . system . identityhashcode ( requestadapter ) , java . lang . system . identityhashcode ( entry ) )
[0]: org. junit. assert. assertequals ( true, com. github. kostyasha. yad. dockerprovisioningstrategy. notallowedstrategy ( mocktemplate ) )
[1]: org. junit. assert. assertequals ( false, com. github. kostyasha. yad. dockerprovisioningstrategy. notallowedstrategy ( mocktemplate ) )
[2]: org. junit. assert. asserttrue ( com. github. kostyasha. yad. dockerprovisioningstrategy. notallowedstrategy ( mocktemplate ) )
[3]: org. junit. assert. assertequals ( true, com. github. kostyasha. yad. dockerprovisioningstrategy. notallowedstrategy ( mocktemplate. getnumexecutors ( ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( undertest . matches ( parser ) )
[0]: org. junit. assert. assertequals ( 1, entities. size ( ) )
[1]: org. junit. assert. assertnotnull ( tr. getnode ( ) )
[2]: org. junit. assert. assertnotnull ( prstask. getnode ( ) )
[3]: org. junit. assert. assertnotnull ( prstask )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( ans [ i ] , count )
[0]: )
[1]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( expectedtype ) )
[2]: org. junit. assert. assertequals ( expectedtype, actual )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( expected ) )
[4]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. equalto ( expectedtype ) )

************

************
tgt: org . junit . assert . assertequals ( false , result . isfailed ( ) )
[0]: org. junit. assert. assertthat ( actual, is ( expectedtype ) )
[1]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )
[2]: org. junit. assert. assertnotnull ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )
[3]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ). size ( ) )
[4]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. getmessage ( ) )

************

************
tgt: org . junit . assert . asserttrue ( org . jbasics . arrays . bytearraycomparator . islessthan ( twocomplementproblemlesser , twocomplementproblemgreater ) )
[0]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. content ( ) )
[1]: org. junit. assert. assertnotnull ( landcode. isonbekend ( ) )
[2]: org. junit. assert. assertarrayequals ( testbyte, convertedbytes )
[3]: org. junit. assert. assertarrayequals ( new byte [ ] { testbyte }, convertedbytes )
[4]: org. junit. assert. assertarrayequals ( new byte [ ] { }, convertedbytes )

************

************
tgt: org . junit . assert . assertfalse ( path . dfsnextchild ( ) )
[0]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 2, 3 }, convertedbytes )
[1]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 1, 0 }, convertedbytes )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1l ), result )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 12l ), result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( firstresource . equals ( secondresource ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 0l ), result )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), result )
[2]: org. junit. assert. assertequals ( 1, symbols. size ( ) )
[3]: org. junit. assert. assertequals ( 0, symbols. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), symbols )

************

************
tgt: org . junit . assert . assertequals ( 1 , dataset . getseriescount ( ) )
[0]: org. junit. assert. assertequals ( 1, logging. getregels ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, logging. getregels ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, logger. getregels ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, log. getregels ( ). size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( prev , current )
[0]: org. junit. assert. assertequals ( result. fail, handler. apply ( item ) )
[1]: org. junit. assert. assertequals ( result. fail, parser. apply ( item ) )
[2]: org. junit. assert. assertequals ( result. fail, instance. apply ( item ) )
[3]: org. junit. assert. assertequals ( result. fail, builder. apply ( item ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. asserttrue ( original. tostring ( ). contains ( serial ) )
[1]: org. junit. assert. assertnotnull ( expanded. tostring ( ) )
[2]: org. junit. assert. assertnotnull ( original. tostring ( ) )
[3]: org. junit. assert. assertequals ( original. tostring ( ), expanded )
[4]: . tostring ( ) )

************

************
tgt: org . junit . assert . assertfalse ( opennlp . tools . namefind . namefindersequencevalidatortest . validator . validsequence ( 2 , inputsequence , outcomessequence , outcome ) )
[0]: org. junit. assert. assertthat ( shard. builder ( ). build ( ), org. hamcrest. corematchers. equalto ( shardid ) )
[1]: org. junit. assert. assertthat ( shard, org. hamcrest. corematchers. equalto ( shard. builder ( ). build ( ) ) )
[2]: org. junit. assert. assertthat ( shard. builder ( ), org. hamcrest. corematchers. equalto ( shardid ) )
[3]: org. junit. assert. assertthat ( shard, org. hamcrest. corematchers. equalto ( shard ) )
[4]: org. junit. assert. assertthat ( shard, org. hamcrest. corematchers. equalto ( shard. builder ( ). list ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( exceptionoccured )
[0]: org. junit. assert. assertfalse ( org. apache. commons. collections4. maputils. isnotempty ( map ) )
[1]: org. junit. assert. asserttrue ( org. apache. commons. collections4. maputils. isnotempty ( map ) )
[2]: org. junit. assert. assertnotnull ( adapter )
[3]: org. junit. assert. assertequals ( componentadapter, adapter )
[4]: org. junit. assert. assertsame ( componentadapter, adapter )

************

************
tgt: org . junit . assert . assertnull ( c . key ( ) )
[0]: org. junit. assert. assertequals ( componentadapter, adapter. getcomponentkey ( ) )
[1]: )
[2]: org. junit. assert. assertarrayequals ( code [ 0 ], rulemanager. get ( id [ 0 ] ) )
[3]: org. junit. assert. assertequals ( expectedparent, actualconstructor )
[4]: org. junit. assert. assertequals ( expectedparent, result )

************

************
tgt: org . junit . assert . assertthat ( result1 , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( expectedparent, node. getvalue ( ) )
[1]: org. junit. assert. assertequals ( expectedparent, foundconstructor )
[2]: org. junit. assert. assertequals ( expectedparent, node. tostring ( ) )
[3]: org. junit. assert. assertequals ( status. statuscommitted, sc. getsynchronization ( ) )
[4]: org. junit. assert. assertequals ( status. statuscommitted, sync. getsynchronization ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( video . get ( 0 ) )
[0]: org. junit. assert. assertnotnull ( sc. getsynchronization ( ) )
[1]: org. junit. assert. assertequals ( 0, sc. getsynchronization ( ) )
[2]: org. junit. assert. assertequals ( status. statuscommitted, sc. getsynchronization )
[3]: org. junit. assert. assertequals ( 1, org. apache. crunch. io. sourcetargethelper. getpathsize ( fs, tmppath ) )
[4]: org. junit. assert. assertequals ( 0, org. apache. crunch. io. sourcetargethelper. getpathsize ( fs, tmppath ) )

************

************
tgt: org . junit . assert . assertequals ( true , check . isrequired ( ) )
[0]: org. junit. assert. assertequals ( null, org. apache. crunch. io. sourcetargethelper. getpathsize ( fs, tmppath ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. apache. crunch. io. sourcetargethelper. getpathsize ( fs ) )
[2]: org. junit. assert. assertequals ( org. apache. crunch. io. sourcetargethelper. getpathsize ( fs, tmppath ), fs. getpath ( tmppath ) )
[3]: org. junit. assert. assertnotnull ( entryrelationship )
[4]: org. junit. assert. asserttrue ( exist ( listoffeatures ) )

************

************
tgt: org . junit . assert . assertnotnull ( cache )
[0]: org. junit. assert. asserttrue ( listoffeatures )
[1]: org. junit. assert. asserttrue ( to )
[2]: , listoffeatures )
[3]: ) )
[4]: org. junit. assert. assertequals ( java. util. uuid. valueof ( 1 ), res. getprimitive ( ) )

************

************
tgt: org . junit . assert . assertthat ( published ( ) , org . hamcrest . core . is . is ( java . util . arrays . aslist ( first , last ) ) )
[0]: org. junit. assert. assertequals ( java. util. uuid. class, res. getprimitive ( ) )
[1]: org. junit. assert. assertequals ( java. util. uuid. valueof ( 2 ), res. getprimitive ( ) )
[2]: org. junit. assert. assertequals ( null, res. getprimitive ( ) )
[3]: org. junit. assert. assertequals ( java. util. uuid. valueof ( 1 ), res. getprimitive ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( 1, fs. verifyreadrandomfile ( path1, path2, ( seed + 1 ) ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "value" , m . getobject ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( path1, path2 ), fs. verifyreadrandomfile ( path1, path2, ( seed + 1 ) ) )
[1]: org. junit. assert. assertequals ( 1, fs. verifyreadrandomfile ( path1, 0, ( seed + 1 ) ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, fs. verifyreadrandomfile ( path1, org. apache. hadoop. hdfs. server. datanode. fsdataset. impl. block_size, 1 ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( null, msg. gettag ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , remaining )
[0]: org. junit. assert. assertequals ( null, event. gettag ( ) )
[1]: org. junit. assert. assertequals ( null, builder. gettag ( ) )
[2]: org. junit. assert. assertequals ( tag, event. gettag ( ) )
[3]: org. junit. assert. assertequals ( tag, context. gettag ( ) )
[4]: org. junit. assert. assertnotnull ( response )

************

************
tgt: org . junit . assert . assertthat ( entry . store ( ) , org . hamcrest . matchers . equalto ( false ) )
[0]: org. junit. assert. assertnotnull ( response. body ( ) )
[1]: org. junit. assert. assertnotnull ( response. response )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), integers. get ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( ref , tokens )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), integers. get ( 0 ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), integers. values ( ) )
[2]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), integers. getvalue ( ) )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), integers. values ( ) [ 1 ] )
[4]: org. junit. assert. assertnotnull ( reaction1 )

************

************
tgt: org . junit . assert . assertnotnull ( strategy )
[0]: org. junit. assert. assertnotnull ( structure )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertnotnull ( reaction2 )
[3]: org. junit. assert. assertnotnull ( domain )
[4]: org. junit. assert. assertequals ( 1, projecta. getbuilds ( ). toarray ( ). length )

************

************
tgt: org . junit . assert . assertfalse ( org . openqa . selenium . server . browserlaunchers . browseroptions . issinglewindow ( caps ) )
[0]: org. junit. assert. assertequals ( 0, projecta. getbuilds ( ). toarray ( ). length )
[1]: org. junit. assert. assertequals ( 0, projectb. getbuilds ( ). toarray ( ). length )
[2]: org. junit. assert. assertequals ( 1, projectb. getbuilds ( ). toarray ( ). length )
[3]: org. junit. assert. assertequals ( 0, projecta. getbuilds ( ). length )
[4]: org. junit. assert. assertnotnull ( this. mockmvc )

************

************
tgt: org . junit . assert . assertequals ( "hello,<sp>world" , new java . lang . string ( buffer ) )
[0]: org. junit. assert. assertnotnull ( this. mockmvc )
[1]: org. junit. assert. assertnotnull ( bean )
[2]: org. junit. assert. assertnotnull ( mockmvc )
[3]: ) )
[4]: org. junit. assert. asserttrue ( checkcontainssame ( names1, names2 ) )

************

************
tgt: org . junit . assert . assertthat ( coll , equalto ( reference ) )
[0]: org. junit. assert. asserttrue ( checkcontainssame ( names2, names1 ) )
[1]: org. junit. assert. asserttrue ( checkcontainssame ( names, names2 ) )
[2]: org. junit. assert. asserttrue ( checkscontainssame ( names1, names2 ) )
[3]: org. junit. assert. asserttrue ( checkcontainssame ( names1, names2 ) )
[4]: org. junit. assert. assertthat ( restored, is ( restored ) )

************

************
tgt: org . junit . assert . assertequals ( 314 , in . readvint ( ) )
[0]: org. junit. assert. assertequals ( new java. util. hashset ( fields ), customfields )
[1]: org. junit. assert. assertequals ( 1, customfields. size ( ) )
[2]: org. junit. assert. assertequals ( new java. util. arraylist ( fields ), customfields )
[3]: org. junit. assert. assertequals ( 0, customfields. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( mikera . matrixx . matrix . create ( new double [ ] [ ] { new double [ ] { 1 , 1 } , new double [ ] { 3 , 2 } } ) , m )
[0]: org. junit. assert. assertequals ( 10, count )
[1]: org. junit. assert. assertequals ( 10, size )
[2]: org. junit. assert. assertequals ( 10, counter )
[3]: org. junit. assert. assertnotnull ( count )
[4]: org. junit. assert. assertequals ( 10, count. length )

************

************
tgt: org . junit . assert . assertfalse ( object . isempty ( ) )
[0]: org. junit. assert. assertarrayequals ( heapunboxed, heapunboxed )
[1]: org. junit. assert. assertarrayequals ( heap, heapunboxed )
[2]: org. junit. assert. assertarrayequals ( heap_boxed, heapunboxed )
[3]: , heapunboxed )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , actual . getmanifestfiles ( ) . size ( ) )
[0]: org. junit. assert. assertthat ( values. gettargetnamespaces ( ), org. hamcrest. matchers. equalto ( null ) )
[1]: org. junit. assert. assertthat ( values. gettargetnamespaces ( ), org. hamcrest. matchers. equalto ( java. util. optional. empty ( ) ) )
[2]: org. junit. assert. assertthat ( values. gettargetnamespaces ( ), org. hamcrest. matchers. equalto ( 0 ) )
[3]: org. junit. assert. assertthat ( values )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( result . getfile ( ) )
[0]: org. junit. assert. assertequals ( sequence1, sequence2. getelements ( ) )
[1]: org. junit. assert. assertequals ( sequence1, sequence2 )
[2]: org. junit. assert. assertequals ( sequence1. getelements ( ), sequence2. getelements ( ) )
[3]: org. junit. assert. assertequals ( seq1, sequence2. getelements ( ) )
[4]: org. junit. assert. assertequals ( sequences1, sequence2. getelements ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( schedulerretryaction. retry, action )
[1]: org. junit. assert. assertequals ( schedulerretryaction. retry_later )
[2]: org. junit. assert. assertequals ( schedulerretryaction. retry )
[3]: org. junit. assert. assertequals ( schedulerretryaction, action )
[4]: org. junit. assert. assertnotnull ( action )

************

************
tgt: org . junit . assert . assertequals ( ( - 10l ) , ( ( java . lang . long ) ( result . getvalue ( null ) ) ) , 0l )
[0]: org. junit. assert. assertequals ( finalquery, createhibernatequery ( session, query ) )
[1]: org. junit. assert. assertnotnull ( createhibernatequery ( session, query ) )
[2]: org. junit. assert. assertequals ( finalquery, createhibernatequery ( session, definition ) )
[3]: org. junit. assert. assertequals ( 1, createhibernatequery ( session, query ). size (
[4]: org. junit. assert. assertequals ( 1, createhibernatequery ( session, definition ). size (

************

************
tgt: org . junit . assert . asserttrue ( ringsearch . cyclic ( i ) )
[0]: org. junit. assert. assertequals ( unittesttablepojoread. getbinarydata ( ), null )
[1]: org. junit. assert. assertequals ( unittesttablepojoread. getbinarydata ( ), 2 )
[2]: org. junit. assert. assertequals ( unittesttablepojoread. getbinarydata ( ), false )
[3]: org. junit. assert. assertequals ( unittesttablepojoread, null )
[4]: org. junit. assert. assertequals ( unittesttablepojoread, ident_13 )

************

************
tgt: org . junit . assert . assertnull ( org . eclipse . kapua . commons . util . kapuadateutils . parsedate ( listoffalsestrings [ i ] ) )
[0]: org. junit. assert. assertnotnull ( op )
[1]: org. junit. assert. assertequals ( op, options )
[2]: org. junit. assert. assertequals ( op, op )
[3]: org. junit. assert. assertequals ( op, null )
[4]: org. junit. assert. assertequals ( op, m )

************

************
tgt: org . junit . assert . assertequals ( mailcount , mailcounter )
[0]: org. junit. assert. assertequals ( sourcelanguage, languageversion )
[1]: org. junit. assert. assertequals ( sourcelanguage. getversion ( ), languageversion )
[2]: org. junit. assert. assertnotnull ( languageversion )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnull ( err )
[1]: org. junit. assert. assertnull ( err, err )
[2]: org. junit. assert. assertequals ( null, err )
[3]: org. junit. assert. assertnull ( err, errors )
[4]: org. junit. assert. assertnull ( err, out )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { usage }, root. getusage ( ) )
[1]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { usage }, handler. getusage ( ) )
[2]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { usage }, expression. getusage ( ) )
[3]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { usage }, buffer. getusage ( ) )
[4]: org. junit. assert. assertsame ( usage, builder. getusage ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( baos )
[0]: org. junit. assert. assertequals ( 0, collection. size ( ) )
[1]: org. junit. assert. assertequals ( 1, collection. size ( ) )
[2]: org. junit. assert. assertequals ( 0, list. size ( ) )
[3]: org. junit. assert. assertequals ( 1, list. size ( ) )
[4]: org. junit. assert. assertequals ( 0, array. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( file . exists ( ) )
[0]: org. junit. assert. asserttrue ( namedcluster. ishdfshostempty ( variablespace ) )
[1]: org. junit. assert. asserttrue ( namedcluster. ishdfshostempty ( null ) )
[2]: org. junit. assert. asserttrue ( namedcluster. ishdfshostempty ( any ) )
[3]: org. junit. assert. asserttrue ( namedcluster. ishdfshostempty ( variablespace ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( random . nextint ( ) , in . readint ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( exp, result )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( problem )
[0]: org. junit. assert. asserttrue ( loggingevents. isempty ( ) )
[1]: org. junit. assert. assertnotnull ( beer. getid ( ) )
[2]: org. junit. assert. assertequals ( 1, beer. getid ( ) )
[3]: org. junit. assert. assertequals ( 1l, beer. getid ( ) )
[4]: org. junit. assert. assertequals ( 0, beer. getid ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedsuffixes , language . getfilesuffixes ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, project. createtempproject ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), project. createtempproject ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. class, project. createtempproject ( ). getclass ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. class, project. createtempproject ( ) )

************

************
tgt: org . junit . assert . assertequals ( "accurev" , descriptor . getdisplayname ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. class, project. createtempproject ( ). get ( 0 ) )
[1]: org. junit. assert. assertequals ( true, msg. iscomposed ( ) )
[2]: org. junit. assert. assertequals ( false, msg. iscomposed ( ) )
[3]: org. junit. assert. assertequals ( true, this. iscomposed ( ) )
[4]: org. junit. assert. assertequals ( false, this. iscomposed ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , list . size ( ) )
[0]: org. junit. assert. assertfalse ( builder. iscomposed ( ) )
[1]: org. junit. assert. assertequals ( 1, victim. getstep ( ) )
[2]: org. junit. assert. assertnotnull ( victim. getstep ( ) )
[3]: org. junit. assert. assertequals ( 0, victim. getstep ( ) )
[4]: org. junit. assert. assertequals ( null, victim. getstep ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new java . lang . long [ ] { 1l } , res . getlist ( ) )
[0]: ) )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertnull ( response )
[3]: org. junit. assert. assertnull ( resp )
[4]: org. junit. assert. assertnull ( err )

************

************
tgt: org . junit . assert . assertequals ( result . getvalue ( ) , result . getvalue ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( rbs. getattribute ( ""test"" ) )
[2]: org. junit. assert. assertnull ( rbs. getattribute ( ""test"" ) )
[3]: org. junit. assert. assertnull ( rbs. getattribute ( ""value"" ) )
[4]: org. junit. assert. assertnotnull ( rbs. getattribute ( ""value"" ) )

************

************
tgt: org . junit . assert . assertthat ( result , is ( canonicalize ( ) ) )
[0]: org. junit. assert. assertnull ( rbs. getattribute ( null ) )
[1]: org. junit. assert. assertarrayequals ( com. sun. mail. util. logging. collectorformatter. tostring ( declared ), declared )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( declared ), 1, declared. length )
[3]: org. junit. assert. assertequals ( com. sun. mail. util. logging. arrays. tostring ( declared ), 1, declared. length )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( declared ), 0, declared. length )

************

************
tgt: org . junit . assert . assertequals ( true , result )
[0]: org. junit. assert. assertarrayequals ( com. sun. mail. util. logging. arrays. tostring ( declared ), 1, declared )
[1]: org. junit. assert. assertnotnull ( sut. getmessage ( ) )
[2]: org. junit. assert. assertnull ( sut. getmessage ( ) )
[3]: org. junit. assert. assertequals ( null, sut. getmessage ( ) )
[4]: org. junit. assert. assertequals ( ""foo"", sut. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( "the<sp>reason" , voidable . getvoidreason ( ) )
[0]: org. junit. assert. assertequals ( ""a"", sut. getmessage ( ) )
[1]: org. junit. assert. asserttrue ( authorizer. isauthorized ( context, profiles ) )
[2]: org. junit. assert. assertequals ( hudson. maven. mavenutil. mavenversion. maven_2, hudson. maven. mavenutil. getmavenversion ( null ) )
[3]: org. junit. assert. assertequals ( mavenversion. maven_2, hudson. maven. mavenutil. getmavenversion ( null ) )
[4]: org. junit. assert. assertequals ( mavenversion. maven_2, hudson. maven. mavenutil. getmavenversion ( maven3_2_0 ) )

************

************
tgt: org . junit . assert . asserttrue ( result . isempty ( ) )
[0]: org. junit. assert. assertequals ( mavenversion. maven_2, hudson. maven. mavenutil. getmavenversion ( ""foo"" ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( bundlerecords. containsinanyorder ( referencerecords. toarray ( ) ) )
[3]: org. junit. assert. assertthat ( bundlerecords, org. hamcrest. matchers. containsinanyorder ( referencerecords ) )
[4]: org. junit. assert. assertthat ( bundlerecords, containsinanyorder ( referencerecords. toarray ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( ( slabtime < pojotime ) )
[0]: org. junit. assert. assertequals ( bundlerecords, referencerecords. containsinanyorder ( referencerecords. toarray ( ) ) )
[1]: org. junit. assert. asserttrue ( bundlerecords. containsinanyorder ( referencerecords ) )
[2]: org. junit. assert. assertthat ( errorentries. isempty ( ), org. hamcrest. matchers. is ( true ) )
[3]: org. junit. assert. asserttrue ( errorentries. isempty ( ) )
[4]: org. junit. assert. assertthat ( errorentries. isempty ( ), is ( true ) )

************

************
tgt: org . junit . assert . assertnotnull ( foo )
[0]: org. junit. assert. assertfalse ( errorentries. isempty ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( last, first )
[3]: org. junit. assert. assertequals ( last, last )
[4]: org. junit. assert. assertequals ( last, top )

************

************
tgt: org . junit . assert . assertfalse ( bs . get ( index ) )
[0]: org. junit. assert. assertnotnull ( last )
[1]: org. junit. assert. assertequals ( last, previous )
[2]: org. junit. assert. assertnull ( cz. zcu. kiv. jop. util. arrayutils. toobjectarray ( ( ( boolean [ ] ) ( null ) ) ) )
[3]: org. junit. assert. assertnull ( cz. zcu. kiv. jop. util. arrayutils. toobjectarray ( ( ( long [ ] ) ( null ) ) ) )
[4]: org. junit. assert. assertnull ( cz. zcu. kiv. jop. util. arrayutils. toobjectarray ( ( ( short [ ] ) ( null ) ) ) )

************

************
tgt: org . junit . assert . assertthat ( decryptedtext , org . hamcrest . matchers . is ( plaintext ) )
[0]: org. junit. assert. assertnull ( cz. zcu. kiv. jop. util. arrayutils. toobjectarray ( ( ( char [ ] ) ( null ) ) ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( text. getselectiontext ( ) )
[3]: org. junit. assert. assertnull ( text. getselectiontext ( ) )
[4]: org. junit. assert. assertequals ( 0, text. getselectiontext ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , java . util . arrays . aslist ( path . list ( ) ) )
[0]: org. junit. assert. assertequals ( 0, text. getselectiontext ( ). length )
[1]: ) )
[2]: org. junit. assert. assertequals ( ( - 2.0 ), fixture. readhalf ( ), 0.0 )
[3]: org. junit. assert. assertequals ( ( - 1.0 ), fixture. readhalf ( ), 0.0 )
[4]: org. junit. assert. assertequals ( 0.0, fixture. readhalf ( ), 0.0 )

************

************
tgt: org . junit . assert . assertequals ( 0 , products . size ( ) )
[0]: org. junit. assert. assertequals ( 0, fixture. readhalf ( ), 0.0 )
[1]: org. junit. assert. assertequals ( ( - 1 ), fixture. readhalf ( ), 0.0 )
[2]: org. junit. assert. assertequals ( 1, builder. getmaxcount ( ) )
[3]: org. junit. assert. assertequals ( 1, model. getmaxcount ( ) )
[4]: org. junit. assert. assertequals ( 1, event. getmaxcount ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( false ) )
[0]: org. junit. assert. assertequals ( 1, context. getmaxcount ( ) )
[1]: org. junit. assert. assertequals ( 1, dataset. getmaxcount ( ) )
[2]: org. junit. assert. assertequals ( bytes, deserialisedbytes )
[3]: org. junit. assert. assertnotnull ( deserialisedbytes )
[4]: org. junit. assert. assertsame ( bytes, deserialisedbytes )

************

************
tgt: org . junit . assert . assertequals ( 1 , ( newsize - initialsize ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnotnull ( nc )
[3]: org. junit. assert. assertnull ( nc )
[4]: org. junit. assert. assertequals ( 1, posts. find ( id ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( pattern . matches ( "1" ) )
[0]: org. junit. assert. assertnotnull ( posts. find ( id ) )
[1]: org. junit. assert. null, token )
[2]: null ), token )
[3]: null, token )
[4]: null ) )

************

************
tgt: org . junit . assert . assertequals ( obj1 . hashcode ( ) , obj2 . hashcode ( ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( legend. isoverlay ( ) )
[2]: org. junit. assert. assertequals ( 1, legend. isoverlay ( ) )
[3]: org. junit. assert. asserttrue ( datawave. query. jexl. visitors. hastoplevelnegationvisitor. hastoplevelnegation ( script ) )
[4]: org. junit. assert. asserttrue ( result )

************

************
tgt: org . junit . assert . assertequals ( "<sp>" , p . format ( new java . util . date ( ) ) )
[0]: org. junit. assert. assertnotnull ( report. getname ( ) )
[1]: org. junit. assert. assertequals ( report. getname ( ), null )
[2]: org. junit. assert. assertequals ( report. getname ( ), 1 )
[3]: org. junit. assert. assertequals ( report. getname ( ), 0 )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( persoonslijst , result )
[0]: org. junit. assert. assertequals ( 1, tarfiles. size ( ) )
[1]: org. junit. assert. assertequals ( 0, tarfiles. size ( ) )
[2]: org. junit. assert. assertequals ( 1, tarfiles. data. size ( ) )
[3]: org. junit. assert. assertequals ( 1, tarfiles. values ( ). length )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( interceptor )
[0]: org. junit. assert. assertequals ( 1, instance. reusebrowsersessions ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, root. reusebrowsersessions ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, repository. reusebrowsersessions ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, executor. reusebrowsersessions ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, subject. reusebrowsersessions ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( ( idx + 1 ), testresults. counts. size ( ) )
[1]: org. junit. assert. assertequals ( testresults. counts. size ( ), testresults. counts. size ( ) )
[2]: org. junit. assert. assertequals ( testresults. counts. get ( idx ), testresults. counts. get ( ) )
[3]: org. junit. assert. assertequals ( 1, testresults. counts. size ( ) )
[4]: org. junit. assert. assertequals ( testresults. counts. size ( ), testresults. counts. get ( idx ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 15, properties. getnodeproperties ( nodeid ). size ( ) )
[1]: org. junit. assert. assertequals ( properties, org. neo4j. server. rest. web. restfulgraphdatabasetest. service. getnodeproperties ( nodeid ) )
[2]: org. junit. assert. assertequals ( 10, properties. getnodeproperties ( nodeid ). size ( ) )
[3]: org. junit. assert. assertequals ( 15, org. neo4j. server. rest. web. restfulgraphdatabasetest. service. getnodeproperties ( nodeid ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( response )
[0]: org. junit. assert. asserttrue ( edu. cmu. tetrad. util. matrixutils. equals ( concat, concat ) )
[1]: org. junit. assert. assertequals ( 0, safe. tostring ( ). length )
[2]: org. junit. assert. assertnotnull ( safe. tostring ( ) )
[3]: org. junit. assert. assertequals ( 0, safe. tostring ( ). length ( ) )
[4]: . tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( maxdeltaperc < toleranceperc ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( idfrommovieinfo )
[2]: org. junit. assert. assertnull ( idfrommovieinfo )
[3]: org. junit. assert. assertequals ( java. lang. string. class, idfrommovieinfo )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), idfrommovieinfo )

************

************
tgt: org . junit . assert . asserttrue ( httprequestmapper . matches ( null , httprequest ) )
[0]: org. junit. assert. assertequals ( null, idfrommovieinfo )
[1]: org. junit. assert. assertequals ( result, s )
[2]: org. junit. assert. assertequals ( s, result )
[3]: org. junit. assert. assertequals ( results, s )
[4]: org. junit. assert. assertnotnull ( s )

************

************
tgt: org . junit . assert . assertequals ( org . neo4j . cineasts . movieimport . moviedblocalstoragetest . data , storage . loadmovie ( org . neo4j . cineasts . movieimport . moviedblocalstoragetest . id ) )
[0]: result ) )
[1]: org. junit. assert. assertthat ( def. getmodelclass ( ), is ( java. lang. object. class ) )
[2]: org. junit. assert. assertthat ( def. getmodelclass ( ), is ( java. lang. string. class ) )
[3]: org. junit. assert. assertthat ( def. getmodelclass ( ), is ( type ) )
[4]: type ) { }

************

************
tgt: org . junit . assert . assertnotnull ( base )
[0]: type ) )
[1]: org. junit. assert. assertthat ( option, is ( true ) )
[2]: org. junit. assert. assertthat ( option, is ( java. lang. long. valueof ( true ) ) )
[3]: org. junit. assert. assertthat ( option, is ( java. lang. boolean. valueof ( true ) ) )
[4]: org. junit. assert. assertthat ( option, is ( options ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , intcounter . decrementandget ( ) )
[0]: org. junit. assert. assertthat ( option, is ( option ) )
[1]: org. junit. assert. assertnotnull ( auths )
[2]: org. junit. assert. assertequals ( new org. apache. accumulo. core. security. authorizations ( ), auths )
[3]: org. junit. assert. assertnull ( auths )
[4]: org. junit. assert. assertequals ( null, auths )

************

************
tgt: org . junit . assert . assertfalse ( ischecked )
[0]: org. junit. assert. assertequals ( new org. apache. accumulo. core )
[1]: org. junit. assert. assertequals ( 1, result )
[2]: org. junit. assert. assertequals ( metricclassname, config. gethclassname ( ) )
[3]: org. junit. assert. assertequals ( metricclassname, config )
[4]: org. junit. assert. assertequals ( metricclassname, config. stringifyclassname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( description . isempty ( ) )
[0]: org. junit. assert. assertequals ( metricclassname, config. dpcclassname ( ) )
[1]: org. junit. assert. assertequals ( metricclassname, config. getpropertiesclassname ( ostype. java_8, null, null ) )
[2]: org. junit. assert. assertnull ( de. escalon. hypermedia. spring. uber. uberaction. forrequestmethod ( null ) )
[3]: org. junit. assert. assertnull ( de. escalon. hypermedia. spring. uber. uberaction. forrequestmethod ( null ). getmessage ( ) )
[4]: org. junit. assert.null ( de. escalon. hypermedia. spring. uber. uberaction. forrequestmethod ( null ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , meldingen . size ( ) )
[0]: org. junit. assert. assertnull ( de. escalons. hypermedia. spring. uber. uberaction. forrequestmethod ( null ) )
[1]: ) )
[2]: org. junit. assert. assertnull ( response. getstatuscode ( ) )
[3]: org. junit. assert. assertnotnull ( response. response ( ) )
[4]: org. junit. assert. assertnotnull ( response. getstatuscode ( ) )

************

************
tgt: org . junit . assert . assertnull ( cache . get ( "id1" ) )
[0]: org. junit. assert. assertnotnull ( response )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( credentials )
[3]: org. junit. assert. assertequals ( null, credentials )
[4]: org. junit. assert. assertnotnull ( request. get ( 0 ) )

************

************
tgt: org . junit . assert . assertfalse ( traversal . hasnext ( ) )
[0]: org. junit. assert. assertnotnull ( get ( 0 ) )
[1]: org. junit. assert. assertequals ( 1, get ( 0 ). length )
[2]: get ( 0 ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( csvimportresult. geterrormap ( ). size ( ), 1 )

************

************
tgt: org . junit . assert . assertfalse ( deal . isaccepted ( ) )
[0]: org. junit. assert. assertnotnull ( csvimportresult. geterrormap ( ) )
[1]: org. junit. assert. assertequals ( 0, csvimportresult. geterrormap ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, csvimportresult. geterrormap ( ). size ( ) )
[3]: org. junit. assert. assertequals ( csvimportresult. geterrormap ( ). size ( ), 0 )
[4]: org. junit. assert. assertequals ( 1, sessionconfig. getprocessinstancemanagerfactory ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( refint [ i ] , mt . nextint ( ) )
[0]: org. junit. assert. assertnotnull ( sessionconfig )
[1]: org. junit. assert. assertequals ( 0, sessionconfig. getprocessinstancemanagerfactory ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( sessionconfig. getprocessinstancemanagerfactory ( ) )
[3]: ) )
[4]: org. junit. assert. asserttrue ( org. opendaylight. yangtools. yang. model. util. type. numberutil. israngecovered ( min, supermin, supermax, supermax ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . length ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( result, persoonid )
[2]: org. junit. assert. assertequals ( const. validation. current, com. groupon. lex. metrics. history. xdr. const. validateheader ( hdr ) )
[3]: org. junit. assert. assertequals ( const. validation. old_minor, com. groupon. lex. metrics. history. xdr. const. validateheader ( hdr ) )
[4]: org. junit. assert. assertequals ( const. validation. current, validateheader ( hdr ) )

************

************
tgt: org . junit . assert . assertequals ( true , result [ 0 ] )
[0]: org. junit. assert. assertequals ( const. validation. validation. old_minor, com. groupon. lex. metrics. history. xdr. const. validateheader ( hdr ) )
[1]: org. junit. assert. assertequals ( const. validation. validation. name, com. groupon. lex. metrics. history. xdr. const. validateheader ( hdr ) )
[2]: org. junit. assert. assertequals ( 1, tree. columncount ( ) )
[3]: org. junit. assert. assertequals ( 0, objects. size ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), total [ i ] )

************

************
tgt: org . junit . assert . asserttrue ( xmldburi1 . iscontextabsolute ( ) )
[0]: org. junit. assert. assertequals ( i, total [ i ] )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), total [ j ] )
[2]: org. junit. assert. assertequals ( i, total [ j ] )
[3]: org. junit. assert. assertequals ( array. get ( i ), total [ i ] )
[4]: org. junit. assert. assertequals ( b. tostring ( ), i. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , ksession . fireallrules ( ) )
[0]: org. junit. assert. assertequals ( s. tostring ( ), b. tostring ( ) )
[1]: org. junit. assert. assertequals ( b. tostring ( ), java. lang. string. valueof ( i ) )
[2]: org. junit. assert. assertequals ( s, b. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), b. tostring ( ) )
[4]: org. junit. assert. assertequals ( 1, branch_conditions. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( service . getdetailsparameter ( request ) )
[0]: org. junit. assert. assertequals ( expectedrowcontent, innerlevelmap )
[1]: org. junit. assert. assertequals ( expectedrowcontent, innerlevelmap1 )
[2]: org. junit. assert. assertequals ( expectedrowcontent, innerlevelmap. get ( ) )
[3]: org. junit. assert. assertequals ( expectedrowcontent, innerlevelmap2 )
[4]: org. junit. assert. assertequals ( expectedrowcontent, result )

************

************
tgt: org . junit . assert . assertthat ( profile . getmaxprocesses ( ) , is ( 10 ) )
[0]: org. junit. assert. assertequals ( pos, actualufs. pos ( ) )
[1]: org. junit. assert. assertequals ( position, actualufs. pos ( ) )
[2]: org. junit. assert. assertequals ( pos, actualufs. pos ( ), 0 )
[3]: org. junit. assert. assertnotnull ( actualufs. pos ( ) )
[4]: org. junit. assert. assertnull ( actualufs. pos ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( glyphview )
[0]: org. junit. assert. asserttrue ( verifytable. next ( ) )
[1]: org. junit. assert. assertequals ( 1, verifytable. next ( ) )
[2]: org. junit. assert. assertnotnull ( verifytable. next ( ) )
[3]: org. junit. assert. assertequals ( true, verifytable. next ( ) )
[4]: org. junit. assert. assertnull ( verifytable. next ( ) )

************

************
tgt: org . junit . assert . asserttrue ( node . equals ( node2 ) )
[0]: org. junit. assert. assertequals ( hotelstable. name, record. getstring ( hotelstable. name ) )
[1]: org. junit. assert. assertequals ( ""test"", record. getstring ( hotelstable. name ) )
[2]: org. junit. assert. assertequals ( hotelstable. name, record. getstring ( hotelstable. name ) )
[3]: org. junit. assert. assertequals ( ""bar"", record. getstring ( hotelstable. name ) )
[4]: org. junit. assert. assertnotnull ( record. getstring ( hotelstable. name ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertnotnull ( response )
[1]: org. junit. assert. asserttrue ( ( response == 200 ) )
[2]: org. junit. assert. asserttrue ( ( response!= null ) )
[3]: org. junit. assert. asserttrue ( ( response == null ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( s . issubtree ( a , b ) )
[0]: org. junit. assert. assertequals ( 1, admin. hascalledback ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, admin. hascalledback ( ) )
[2]: org. junit. assert. assertnotnull ( admin. hascalledback ( ) )
[3]: org. junit. assert. assertequals ( 1, org. apache. hadoop. hbase. client. replication. testreplicationadminwithclusters. testmillis. hascalledback ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( o1 . getid ( ) , o2 . getid ( ) )
[0]: org. junit. assert. assertnotnull ( ciphertextheaders. getheadertag ( ) )
[1]: org. junit. assert. assertnull ( ciphertextheaders. getheadertag ( ) )
[2]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( org. hamcrest. corematchers. equalto ( expected ) ) )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( expected ) )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertequals ( 0.0 , zero . getpartialderivative ( n ) , epsilon [ n ] )
[0]: org. junit. assert. assertthat ( actual, is ( org. hamcrest. corematchers. equalto ( expected ) ) )
[1]: org. junit. assert. assertthat ( expected, org. hamcrest. corematchers. is ( actual ) )
[2]: org. junit. assert. asserttrue ( namespace. hastable ( name ) )
[3]: org. junit. assert. asserttrue ( namespace. hastable ( java. lang. string. class ) )
[4]: org. junit. assert. asserttrue ( namespace. hastable ( null ) )

************

************
tgt: org . junit . assert . assertthat ( messagefragments . length , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. asserttrue ( namespace. hastable ( ""test"" ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( longline, ref. getdbrefs ( ) )
[3]: org. junit. assert. assertequals ( longline, ref. getdbrefs ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( longline, ref. getdbrefs ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertnotnull ( ref. getdbrefs ( ) )
[1]: org. junit. assert. assertequals ( s, ref. getdbrefs ( ) )
[2]: org. junit. assert. asserttrue ( org. apache. jena. tdb2. setup. storeparams. samevalues ( p, null ) )
[3]: org. junit. assert. asserttrue ( org. apache. jena. tdb2. setup. storeparams. samevalues ( p, org. apache. jena. tdb2. setup ) )
[4]: org. junit. assert. asserttrue ( org. apache. jena. tdb2. setup. storeparams. samevalues ( p, true ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , notebook . getallnotes ( ) . size ( ) )
[0]: org. junit. assert. asserttrue ( org. apache. jena. tdb2. setup. storeparams. samevalues ( p, org. apache. jena ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( stap. voerverwerkingsstapuitvoorbericht ( berichtcommand ) )
[3]: org. junit. assert. assertnotnull ( taskid )
[4]: org. junit. assert. assertequals ( 1, taskid. createtaskquery ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( query . isreturningirt ( ) )
[0]: org. junit. assert. assertequals ( 0, taskid. createtaskquery ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, ksession. createtaskquery ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, ee. createtaskquery ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, books. size ( ) )
[4]: org. junit. assert. assertnotnull ( books )

************

************
tgt: org . junit . assert . assertnull ( io . atlasmap . core . atlasutil . geturischeme ( null ) )
[0]: org. junit. assert. assertequals ( 0, books. size ( ) )
[1]: org. junit. assert. assertequals ( 3, books. size ( ) )
[2]: org. junit. assert. assertequals ( 5, books. size ( ) )
[3]: org. junit. assert. assertequals ( str, exception. getmessage ( ) )
[4]: org. junit. assert. assertequals ( 0, itr1. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( java . lang . double ) ( double . nan ) ) , thevalue )
[0]: org. junit. assert. assertequals ( 1, itr1. size ( ) )
[1]: org. junit. assert. assertequals ( zero, itr1. size ( ) )
[2]: org. junit. assert. assertequals ( 0, itr0. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( diff, e )

************

************
tgt: org . junit . assert . assertequals ( first , second )
[0]: org. junit. assert. assertequals ( diff, e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( diff, currentswagger )
[2]: org. junit. assert. assertequals ( diff. next ( ), e )
[3]: ) )
[4]: org. junit. assert. asserttrue ( t1. equals ( t1 ) )

************

************
tgt: org . junit . assert . assertnull ( p )
[0]: org. junit. assert. assertfalse ( t1. equals ( null ) )
[1]: org. junit. assert. assertequals ( true, t1. equals ( t1 ) )
[2]: org. junit. assert. assertfalse ( t1. equals ( t1 ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( val, m. apply ( m ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( val, m. apply ( val ) )
[1]: org. junit. assert. assertthat ( criticalpath, org. hamcrest. corematchers. equalto ( java. util. arrays. aslist ( diagramgraphexample ) ) )
[2]: org. junit. assert. assertthat ( criticalpath. size ( ), org. hamcrest. corematchers. equalto ( 1 ) )
[3]: org. junit. assert. assertthat ( criticalpath. size ( ), org. hamcrest. corematchers. equalto ( 0 ) )
[4]: org. junit. assert. assertthat ( criticalpath )

************

************
tgt: org . junit . assert . asserttrue ( datawave . query . jexl . functions . contentfunctionstest . expect ( o , false ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( issignedwiththatkey )
[2]: org. junit. assert. assertequals ( true, issignedwiththatkey )
[3]: org. junit. assert. assertnotnull ( issignedwiththatkey )
[4]: org. junit. assert. assertequals ( false, issignedwiththatkey )

************

************
tgt: org . junit . assert . assertequals ( smil , response . getsmil ( ) )
[0]: org. junit. assert. assertthat ( issignedwiththatkey, org
[1]: org. junit. assert. assertequals ( 1l, a. get ( ) )
[2]: org. junit. assert. assertequals ( 0, a. get ( ) )
[3]: org. junit. assert. assertequals ( 0l, a. get ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), xvalues )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( expected , da ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 499 ), xvalues )
[1]: org. junit. assert. assertequals ( java. util. collections. < java. lang. object > emptylist ( ), xvalues )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), xvalues )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), xvalues )
[4]: org. junit. assert. assertequals ( 1, test. isempty ( ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( expected ) ) )
[0]: org. junit. assert. assertequals ( 0, test. isempty ( ) )
[1]: org. junit. assert. assertequals ( okio. testutil. segment_size, out )
[2]: org. junit. assert. assertequals ( ""a', out )
[3]: org. junit. assert. assertequals ( ""test"", out )
[4]: org. junit. assert. assertnull ( out )

************

************
tgt: org . junit . assert . assertfalse ( validation . isvalid ( null ) )
[0]: ) )
[1]: org. junit. assert. assertarrayequals ( results, letters )
[2]: org. junit. assert. assertequals ( results, letters )
[3]: org. junit. assert. assertequals ( results. length, 0 )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . integer . valueof ( i ) , fq . get ( ) )
[0]: )
[1]: org. junit. assert. assertequals ( states, grid )
[2]: org. junit. assert. assertequals ( state. disabled, grid. state )
[3]: org. junit. assert. assertequals ( states, grid. state )
[4]: org. junit. assert. assertequals ( state. disabled, grid )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: ) )
[1]: org. junit. assert. asserttrue ( emptylist. possiblyincludesclassname ( null ) )
[2]: org. junit. assert. asserttrue ( emptylist. possiblyincludesclassname ( java. lang. string. class ) )
[3]: org. junit. assert. asserttrue ( emptylist. possiblyincludesclassname ( ) )
[4]: org. junit. assert. asserttrue ( emptylist. possiblyincludesclassname ( string ) )

************

************
tgt: org . junit . assert . assertequals ( a . hashcode ( ) , b . hashcode ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( 0, result )
[4]: type ) { } }

************

************
tgt: org . junit . assert . asserttrue ( ( ( files . length ) > 0 ) )
[0]: type ) )
[1]: org. junit. assert. assertthat ( retrievesize, org. hamcrest. matchers. is ( numberofpipelines ) )
[2]: org. junit. assert. assertequals ( numberofpipelines, retrievesize )
[3]: org. junit. assert. assertthat ( retrievesize, is ( numberofpipelines ) )
[4]: org. junit. assert. assertthat ( retrievesize )

************

************
tgt: org . junit . assert . assertequals ( obj , value )
[0]: ) )
[1]: org. junit. assert. assertequals ( true, regex. phonenumbervalidator. valid ( test ) )
[2]: org. junit. assert. assertequals ( test, regex. phonenumbervalidator. valid ( test ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( test ), regex. phonenumbervalidator. valid ( test ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( test ), regex. phonenumbervalidator. valid ( test ) )

************

************
tgt: org . junit . assert . asserttrue ( b )
[0]: org. junit. assert. assertequals ( expected, regex. phonenumbervalidator. valid ( test ) )
[1]: org. junit. assert. assertequals ( new java. math. bigdecimal ( 5 ), result )
[2]: org. junit. assert. assertequals ( new java. math. bigdecimal ( 4 ), result )
[3]: org. junit. assert. assertequals ( new java. math. bigdecimal ( 6 ), result )
[4]: org. junit. assert. assertequals ( new java. math. bigdecimal ( 1 ), result )

************

************
tgt: org . junit . assert . assertequals ( ( - 2 ) , ex . getmax ( ( - 2 ) , ( - 4 ) ) )
[0]: org. junit. assert. assertequals ( new java. math. bigdecimal ( 8 ), result )
[1]: org. junit. assert. assertequals ( 1, tuple. getlatencyrecs ( ) )
[2]: org. junit. assert. assertnotnull ( tuple. getlatencyrecs ( ) )
[3]: org. junit. assert. assertequals ( 0, tuple. getlatencyrecs ( ) )
[4]: org. junit. assert. assertequals ( conn2, conn4 )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertnotnull ( conn4 )
[1]: org. junit. assert. assertequals ( conn3, conn4 )
[2]: org. junit. assert. assertequals ( conn1, conn4 )
[3]: org. junit. assert. assertequals ( conn2, connection4 )
[4]: org. junit. assert. assertarrayequals ( strings, serializedjson )

************

************
tgt: org . junit . assert . assertequals ( interfacenames . tostring ( ) , 2 , interfacenames . size ( ) )
[0]: org. junit. assert. assertarrayequals ( names, serializedjson )
[1]: org. junit. assert. assertarrayequals ( expectedjson, serializedjson )
[2]: org. junit. assert. assertarrayequals ( bytes, serializedjson )
[3]: org. junit. assert. assertarrayequals ( numbers, serializedjson )
[4]: org. junit. assert. assertequals ( 0, tree. getitemcount ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedmesage , exceptioncaptor . getvalue ( ) . getmessage ( ) )
[0]: org. junit. assert. assertequals ( 0, test. getitemcount ( ) )
[1]: org. junit. assert. assertequals ( 0, table. getitemcount ( ) )
[2]: org. junit. assert. assertequals ( zero, tree. getitemcount ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, findjobrunningstatistics ( null ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( result1 . get ( x , y ) , result2 . get ( x , y ) )
[0]: org. junit. assert. assertnull ( findjobrunningstatistics ( null ) )
[1]: org. junit. assert. assertnotnull ( findjobrunningstatistics ( null ) )
[2]: org. junit. assert. asserttrue ( findjobrunningstatistics ( null ). isempty ( ) )
[3]: org. junit. assert. assertthat ( findjobrunningstatistics ( null ). size ( ), is ( 0 ) )
[4]: org. junit. assert. assertequals ( 1, abrevs. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( bc . ixor ( bc3 ) . getcardinality ( ) ) == 0 ) )
[0]: org. junit. assert. assertequals ( 0, abrevs. size ( ) )
[1]: org. junit. assert. assertequals ( 1, abrevs. size ( ) )
[2]: org. junit. assert. assertequals ( 2, abrevs. size ( ) )
[3]: org. junit. assert. assertequals ( 1, abrevs. size ( ) )
[4]: org. junit. assert. asserttrue ( principals!= null ) )

************

************
tgt: org . junit . assert . assertnull ( brpinhoud )
[0]: org. junit. assert. asserttrue ( principals == null ) )
[1]: org. junit. assert. asserttrue ( principals!= null )
[2]: . isempty ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, org. kaazing. gateway. client. util. arrays. equals ( codecbytes, inbytes ) )

************

************
tgt: org . junit . assert . assertequals ( expected , value )
[0]: org. junit. assert. assertequals ( 1, org. kaazing. gateway. client. util. base64util. calculatewith ( codecbytes ). length )
[1]: org. junit. assert. assertarrayequals ( inbytes, codecbytes )
[2]: org. junit. assert. assertequals ( 1, java. util. arrays. length )
[3]: org. junit. assert. assertequals ( 1, ( ( codecbytes. length ) == 0 ) )
[4]: org. junit. assert. assertequals ( 1, threadgroup. getfailurecount ( ) )

************

************
tgt: org . junit . assert . asserttrue ( layout . isvalid ( ) )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertsame ( expected, actual )
[2]: org. junit. assert. assertnull ( actual )
[3]: org. junit. assert. assertequals ( expected, actual, 0.0 )
[4]: org. junit. assert. assertequals ( expected, actual, null )

************

************
tgt: org . junit . assert . assertnull ( error )
[0]: org. junit. assert. assertequals ( 3, count )
[1]: org. junit. assert. assertthat ( channel. islongstring ( ), equalto ( datasource ) )
[2]: org. junit. assert. assertthat ( channel. islongstring ( ), equalto ( datasource. length ( ) ) )
[3]: org. junit. assert. assertthat ( channel. islongstring ( ), equalto ( datasource. trim ( ) ) )
[4]: org. junit. assert. assertthat ( channel. islongstring ( ), equalto ( datasource. tostring ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertthat ( channel. islongstring ( ), equalto ( datasource. name ( ) ) )
[1]: org. junit. assert. assertnull ( s. get ( java. lang. object. class ) )
[2]: org. junit. assert. assertequals ( s, s. get ( java. lang. object. class ) )
[3]: type ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( cl . isempty ( ) , org . hamcrest . corematchers . is ( true ) )
[0]: type )
[1]: org. junit. assert. assertequals ( 0, first. compareto ( second ) )
[2]: org. junit. assert. assertequals ( 1, first. compareto ( second ) )
[3]: org. junit. assert. assertequals ( 1, status. isavailable ( ) )
[4]: org. junit. assert. assertequals ( true, status. isavailable ( ) )

************

************
tgt: org . junit . assert . asserttrue ( msg , dynany . equal ( dynany2 ) )
[0]: org. junit. assert. assertequals ( 0, status. isavailable ( ) )
[1]: org. junit. assert. assertequals ( false, status. isavailable ( ) )
[2]: org. junit. assert. assertequals ( 1, status. isavailable ( ). length )
[3]: org. junit. assert. asserttrue ( actual )
[4]: org. junit. assert. assertequals ( true, actual )

************

************
tgt: org . junit . assert . assertequals ( valordesconto , fatura . getvalordesconto ( ) )
[0]: org. junit. assert. assertfalse ( actual )
[1]: org. junit. assert. assertequals ( false, actual )
[2]: , actual )
[3]: org. junit. assert. asserttrue ( ( ( info. getappinfos ( ). length ) == 0 ) )
[4]: org. junit. assert. assertequals ( 0, info. getappinfos ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( success1 )
[0]: org. junit. assert. assertnotnull ( info. getappinfos ( ) )
[1]: org. junit. assert. assertequals ( 1, info. getappinfos ( ). size ( ) )
[2]: org. junit. assert. assertequals ( info. getappinfos ( ). size ( ), 0 )
[3]: org. junit. assert. assertequals ( 1, instance. getallalertpatches ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, instance. getallalertpatches ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( transformedinput )
[0]: org. junit. assert. assertequals ( purge, instance. getallalertpatches ( ) )
[1]: org. junit. assert. assertequals ( list ( ), instance. getallalertpatches ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertequals ( new java. lang. string ( 13 ), result )

************

************
tgt: org . junit . assert . assertequals ( signatureprofile . lt_tm , signature . getprofile ( ) )
[0]: org. junit. assert. assertequals ( result, 13 )
[1]: org. junit. assert. assertequals ( r, result )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( cookie. getname ( ) )
[4]: org. junit. assert. assertequals ( null, cookie. getname ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( connectorinstanceto )
[0]: org. junit. assert. assertnull ( cookie. getname ( ) )
[1]: org. junit. assert. assertequals ( 0, cookie. getname ( ). length )
[2]: org. junit. assert. assertequals ( 0, cookie. getname ( ) )
[3]: org. junit. assert. assertequals ( currentsize, scenariocommandregistry. undonecommands. size ( ) )
[4]: org. junit. assert. assertequals ( currentsize, scenarioscommandregistry. undonecommands. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , rec . size ( ) )
[0]: org. junit. assert. assertequals ( currentsize, scenariosimulationcontextlocal. size ( ) )
[1]: org. junit. assert. assertequals ( currentsize, scenariosiconregistry. undonecommands. size ( ) )
[2]: org. junit. assert. assertequals ( currentsize )
[3]: org. junit. assert. asserttrue ( testnode. hastag ( io. github. data4all. model. data. tags. gettagwithid ( 10 ), org. hamcrest. corematchers. is ( true ) )
[4]: org. junit. assert. asserttrue ( testnode. hastag ( io. github. data4all. model. data. tags. gettagwithid ( 10 ), org. hamcrest. corematchers. is ( false ) )

************

************
tgt: org . junit . assert . assertnotnull ( segment )
[0]: org. junit. assert. asserttrue ( testnode. hastag ( io. github. data4all. model. data. tags. gettagwithid ( 10 ), null ) )
[1]: org. junit. assert. asserttrue ( testnode. hastag ( io. github. data4all. model. data. tags. gettagwithid ( 10 ), org. apache. commons. lang. string. class ) )
[2]: org. junit. assert. asserttrue ( testnode. hastag ( io. github. data4all. model. data. tags. gettagwithid ( 10 ), "motorway. tostring ( ) ) )
[3]: org. junit. assert. assertequals ( storagebackend. getcheckpointbackend ( ), storagebackend. getcheckpointbackend ( ) )
[4]: org. junit. assert. assertequals ( 1, targets. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, targets. size ( ) )
[1]: org. junit. assert. assertequals ( true, hooks )
[2]: org. junit. assert. assertfalse ( hooks )
[3]: org. junit. assert. assertequals ( 1, hooks )
[4]: org. junit. assert. assertequals ( 1, dao. count ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , truecount )
[0]: org. junit. assert. assertequals ( 0, dao. count ( ) )
[1]: org. junit. assert. assertequals ( 1, persistence. count ( ) )
[2]: org. junit. assert. assertequals ( 0, persistence. count ( ) )
[3]: count ( ) )
[4]: org. junit. assert. assertequals ( 1, entity. gethostgroupname ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( exceptionreport . gethttpstatuscode ( ) ) == ( javax . servlet . http . httpservletresponse . sc_bad_request ) ) )
[0]: org. junit. assert. assertequals ( 0, entity. gethostgroupname ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), entity. gethostgroupname ( ) )
[2]: org. junit. assert. assertequals ( "foo, entity. gethostgroupname ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( fullzone )

************

************
tgt: org . junit . assert . assertthat ( bundles . size ( ) , org . hamcrest . matchers . equalto ( 1 ) )
[0]: org. junit. assert. asserttrue ( ( ( fullzone. length ( ) ) == 0 ) )
[1]: org. junit. assert. asserttrue ( ( ( fullzone. length ( ) ) == 1 ) )
[2]: org. junit. assert. assertnotnull ( com. google. cloud. bigtable. grpc. bigtableclusterutilities )
[3]: ) )
[4]: org. junit. assert. assertequals ( containerid, actualcontainerid )

************

************
tgt: org . junit . assert . asserttrue ( ( ( result . size ( ) ) < moves ) )
[0]: org. junit. assert. assertnotnull ( containerid )
[1]: org. junit. assert. assertequals ( containerid, actualcontaineridwith )
[2]: org. junit. assert. assertequals ( containerid, testcontaineridwith )
[3]: ) )
[4]: org. junit. assert. assertsame ( expected, result )

************

************
tgt: org . junit . assert . assertequals ( outboundpayloadcontent , result )
[0]: org. junit. assert. assertsame ( expected, actual )
[1]: org. junit. assert. assertarrayequals ( expected, result )
[2]: org. junit. assert. assertsame ( dataset, result )
[3]: org. junit. assert. assertsame ( input, result )
[4]: org. junit. assert. assertequals ( comparator, youngestcustomer )

************

************
tgt: org . junit . assert . asserttrue ( ( expected == ( e . evaluate ( ) ) ) )
[0]: org. junit. assert. assertequals ( comparator, youngestcustomer. get ( ) )
[1]: org. junit. assert. assertequals ( comparator. get ( ), youngestcustomer )
[2]: org. junit. assert. assertnotnull ( youngestcustomer )
[3]: ) )
[4]: org. junit. assert. assertequals ( 25, container. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 25, results. size ( ) )
[1]: org. junit. assert. assertequals ( 25, containers. size ( ) )
[2]: org. junit. assert. assertequals ( 25, result. size ( ) )
[3]: org. junit. assert. assertequals ( 25, container. getlast ( ) )
[4]: org. junit. assert. assertthat ( single, org. hamcrest. matchers. equalto ( org. batfish. datamodel. routing_policy. expr. booleanexprs. call_expr_context ) )

************

************
tgt: org . junit . assert . assertequals ( "fuzzy" , result . getname ( ) )
[0]: org. junit. assert. assertthat ( single, org. hamcrest. matchers. equalto ( org. batfish. datamodel. routing_policy. expr. booleanexprs. class ) )
[1]: org. junit. assert. assertthat ( single, org. hamcrest. matchers. equalto ( 1 ) )
[2]: org. junit. assert. assertthat ( single )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( value )

************

************
tgt: org . junit . assert . assertnull ( vxpuseract )
[0]: org. junit. assert. assertequals ( null, value )
[1]: org. junit. assert. assertnull ( value )
[2]: org. junit. assert. assertequals ( string, value )
[3]: , value )
[4]: org. junit. assert. assertequals ( null, metadata. getfilename ( ) )

************

************
tgt: org . junit . assert . assertequals ( "ok" , stringresponse )
[0]: org. junit. assert. assertequals ( name, metadata. getfilename ( ) )
[1]: org. junit. assert. assertequals ( dataset, metadata. getfilename ( ) )
[2]: org. junit. assert. assertequals ( root, metadata. getfilename ( ) )
[3]: org. junit. assert. assertequals ( dataset. getfilename ( ), metadata. name )
[4]: org. junit. assert. assertequals ( contestwinners, contestwinners )

************

************
tgt: org . junit . assert . assertequals ( expectedscheduling , foundscheduling )
[0]: org. junit. assert. assertequals ( contestwinners. size ( ), 1 )
[1]: org. junit. assert. assertequals ( new java. util. arraylist ( 1 ), contestwinners )
[2]: org. junit. assert. assertequals ( contestwinners. toarray ( ), contestwinners )
[3]: org. junit. assert. assertequals ( contestwinners. size ( ), 1l )
[4]: org. junit. assert. assertnotnull ( signature )

************

************
tgt: org . junit . assert . assertequals ( field . getname ( ) , newfield . getname ( ) )
[0]: org. junit. assert. assertnotnull ( csr )
[1]: org. junit. assert. assertnotnull ( signing )
[2]: org. junit. assert. assertnotnull ( signer )
[3]: org. junit. assert. assertnotnull ( message )
[4]: org. junit. assert. asserttrue ( emailalertstype. isenabled ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedemptytopics , doctopictokenfreqtable . getemptytopics ( ) )
[0]: org. junit. assert. assertequals ( true, emailalertstype. isenabled ( ) )
[1]: org. junit. assert. asserttrue ( messagehistorydao. housekeepablesexist ( ) )
[2]: org. junit. assert. assertequals ( 1, fields. length )
[3]: org. junit. assert. assertequals ( 0, fields. length )
[4]: org. junit. assert. assertarrayequals ( 1, fields. length )

************

************
tgt: org . junit . assert . asserttrue ( ( null != cid ) )
[0]: org. junit. assert. assertnotnull ( fields )
[1]: [ 0 ] )
[2]: org. junit. assert. assertequals ( m1, m2 )
[3]: org. junit. assert. assertequals ( m1. materialized ( ), m2. tostring ( ) )
[4]: org. junit. assert. assertequals ( m1, m2. clause ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . collections . singletonlist ( subelement ) , element . getelements ( ) )
[0]: org. junit. assert. assertequals ( m1, m2. materialized ( ) )
[1]: org. junit. assert. assertequals ( m1. materialized ( ), m2. materialized ( ) )
[2]: org. junit. assert. assertequals ( 1, appcontext. getpriority ( ). getpriority ( ) )
[3]: org. junit. assert. assertequals ( 0, appcontext. getpriority ( ). getpriority ( ) )
[4]: org. junit. assert. assertequals ( 3, appcontext. getpriority ( ). getpriority ( ) )

************

************
tgt: org . junit . assert . asserttrue ( isroleallowed )
[0]: org. junit. assert. assertequals ( 5, appcontext. getpriority ( ). getpriority ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( iae )
[3]: org. junit. assert. assertequals ( message, iae )
[4]: org. junit. assert. assertnotnull ( iae. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . string . class . getname ( ) , propertytype . getname ( ) )
[0]: org. junit. assert. assertequals ( message, iae. message )
[1]: ) )
[2]: org. junit. assert. assertnull ( selector. isinclusive ( ) )
[3]: org. junit. assert. assertequals ( inclusive, selector. isinclusive ( ) )
[4]: org. junit. assert. assertequals ( 1, applicant. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedscriptnode , actualscriptnode )
[0]: org. junit. assert. assertequals ( 0, applicant. size ( ) )
[1]: org. junit. assert. assertequals ( 10, applicant. size ( ) )
[2]: org. junit. assert. assertequals ( 9, applicant. size ( ) )
[3]: org. junit. assert. assertequals ( 5, applicant. size ( ) )
[4]: org. junit. assert. assertequals ( str, ln. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , gallerydtolist . size ( ) )
[0]: org. junit. assert. assertequals ( msg, ln. tostring ( ) )
[1]: org. junit. assert. assertequals ( string, ln. tostring ( ) )
[2]: org. junit. assert. assertequals ( n, ln. tostring ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( ex. getmessage ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( "test" , tools )
[0]: org. junit. assert. assertequals ( java. lang. string. class, ex. getmessage ( ) )
[1]: org. junit. assert. assertequals ( 1, ex. getmessage ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, ex. getmessage ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( json ), parse ( builder. build ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , parent . getallocatedmemory ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), parse ( builder. build ( ) ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), parse ( builder. serialize ( ) ) )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( json ), parse ( builder. build ( ) ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( r )

************

************
tgt: org . junit . assert . asserttrue ( stopped )
[0]: org. junit. assert. assertequals ( java. lang. string. class, r )
[1]: org. junit. assert. assertnotnull ( r. tostring ( ) )
[2]: org. junit. assert. assertnull ( r )
[3]: ) )
[4]: org. junit. assert. assertequals ( orgateststring_2, classundertest. getcatalog ( ) )

************

************
tgt: org . junit . assert . assertequals ( "hardware" , settings . getbackend ( ) )
[0]: org. junit. assert. assertequals ( orgateststring, classundertest. getcatalog ( ) )
[1]: org. junit. assert. assertequals ( orgateststring_1, classundertest. getcatalog ( ) )
[2]: org. junit. assert. assertequals ( orgateststring1, classundertest. getcatalog ( ) )
[3]: org. junit. assert. assertequals ( orgateststring. schema, classundertest. getcatalog ( ) )
[4]: org. junit. assert. assertnotnull ( list )

************

************
tgt: org . junit . assert . asserttrue ( ( ( configs . length ) > 0 ) )
[0]: org. junit. assert. assertnotnull ( lists )
[1]: org. junit. assert. assertnotnull (list )
[2]: org. junit. assert. assertnotnull ( list )
[3]: ) )
[4]: org. junit. assert. assertequals ( unit_type. package_declaration, compilationunit. getunittype ( ) )

************

************
tgt: org . junit . assert . assertequals ( "bucket" , bucketinfo . getname ( ) )
[0]: org. junit. assert. assertequals ( 1, compilationunit. getunittype ( ) )
[1]: org. junit. assert. assertequals ( unit_type. type_declaration, compilationunit. getunittype ( ) )
[2]: org. junit. assert. assertequals ( statement. getunittype ( ), compilationunit. getunittype ( ) )
[3]: org. junit. assert. assertequals ( unit_type. unknown, compilationunit. getunittype ( ) )
[4]: org. junit. assert. asserttrue ( result. contains ( expectedrows ) )

************

************
tgt: org . junit . assert . assertarrayequals ( values , resultingvalues )
[0]: org. junit. assert. asserttrue ( ( ( result. size ( ) ) == 1 ) )
[1]: org. junit. assert. asserttrue ( testleftouter. contains ( expectedrows ) )
[2]: org. junit. assert. asserttrue ( ( ( expectedrows. size ( ) ) == 1 ) )
[3]: org. junit. assert. asserttrue ( java. util. arrays. equals ( expectedrows, result ) )
[4]: org. junit. assert. assertequals ( expectednewlayout, infowithrecommendations )

************

************
tgt: org . junit . assert . assertequals ( "whoa<sp>there<sp>cowboy" , errortext )
[0]: org. junit. assert. assertequals ( null, actualerrortype )
[1]: org. junit. assert. assertnull ( actualerrortype )
[2]: org. junit. assert. assertequals ( """", actualerrortype )
[3]: org. junit. assert. assertequals ( false, actualerrortype )
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , results . size ( ) )
[0]: org. junit. assert. assertarrayequals ( expected, received. tobytearray ( ) )
[1]: org. junit. assert. assertarrayequals ( expected. tobytearray ( ), received )
[2]: org. junit. assert. assertequals ( expected, received )
[3]: org. junit. assert. assertarrayequals ( expected, received )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , org . openkilda . persistence . repositories . impl . neo4jbfdportrepositorytest . repository . findall ( ) . size ( ) )
[0]: org. junit. assert. assertfalse ( provider. isavailable ( ) )
[1]: org. junit. assert. asserttrue ( provider. isavailable ( ) )
[2]: org. junit. assert. assertfalse ( session. isavailable ( ) )
[3]: org. junit. assert. assertequals ( false, provider. isavailable ( ) )
[4]: org. junit. assert. assertequals ( true, provider. isavailable ( ) )

************

************
tgt: org . junit . assert . assertfalse ( iter . hasnext ( ) )
[0]: org. junit. assert. assertequals ( null, classundertest. getsqlstatementseparator ( ) )
[1]: org. junit. assert. assertnotnull ( classundertest. getsqlstatementseparator ( ) )
[2]: org. junit. assert. assertequals ( 0, classundertest. getsqlstatementseparator ( ). size ( ) )
[3]: org. junit. assert. assertequals ( guaranteed, classundertest. getsqlstatementseparator ( ) )
[4]: org. junit. assert. assertequals ( org. apache. commons. lang3. stringutils. join ( ), classundertest. getsqlstatementseparator ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ! valid ) )
[0]: org. junit. assert. assertnotnull ( currentdataset )
[1]: org. junit. assert. assertarrayequals ( expectedresults, result )
[2]: org. junit. assert. assertarrayequals ( expectedresults, results )
[3]: org. junit. assert. assertarrayequals ( expectedresults, segment )
[4]: org. junit. assert. assertarrayequals ( expectedresults, serializedresults )

************

************
tgt: org . junit . assert . assertequals ( 0 , vertices . size ( ) )
[0]: org. junit. assert. assertarrayequals ( expectedresults, data )
[1]: org. junit. assert. assertequals ( 1, list. size ( ) )
[2]: org. junit. assert. assertequals ( 0, list. size ( ) )
[3]: org. junit. assert. asserttrue ( ( result instanceof org. jboss. as. test. integration. ee. injection. resource. infinispanbean ) )
[4]: org. junit. assert. assertequals ( firstproxy, secondproxy )

************

************
tgt: org . junit . assert . assertequals ( custom . getgap ( ) , ( ( org . jdesktop . swingx . verticallayout ) ( container . getlayout ( ) ) ) . getgap ( ) )
[0]: org. junit. assert. assertsame ( firstproxy, secondproxy )
[1]: org. junit. assert. assertnotnull ( secondproxy )
[2]: org. junit. assert. asserttrue ( ( firstproxy == secondproxy ) )
[3]: org. junit. assert. assertnull ( secondproxy )
[4]: org. junit. assert. assertequals ( requeststring, response. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedsource , instrumentedsource )
[0]: org. junit. assert. assertequals ( java. util. arrays. tostring ( requeststring ), response. tostring ( ) )
[1]: org. junit. assert. assertequals ( requeststring, response. tostring ( request ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( requeststring ), response. getmessage ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. tostring ( requeststring ), response )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertnotnull ( menu )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertequals ( expected, response )
[2]: org. junit. assert. assertequals ( expected )
[3]: get the expected )
[4]: org. junit. assert. assertequals ( java. util. collections. < java. lang. string > emptylist ( ), map. clone ( ) )

************

************
tgt: org . junit . assert . assertequals ( bset . length ( ) , ibset . length ( ) )
[0]: org. junit. assert. assertnotnull ( designednetwork )
[1]: org. junit. assert. assertnull ( designednetwork )
[2]: org. junit. assert. assertequals ( 1, beans. size ( ) )
[3]: org. junit. assert. assertequals ( 0, beans. size ( ) )
[4]: org. junit. assert. assertequals ( 1, bean. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( givenendperiod , billingendperiod )
[0]: org. junit. assert. assertequals ( 3, beans. size ( ) )
[1]: org. junit. assert. assertequals ( 2, beans. size ( ) )
[2]: org. junit. assert. assertequals ( columnname, com. stratio. connector. elasticsearch. core. engine. utils. selectorutils. getselectorfieldname ( selector ) )
[3]: org. junit. assert. assertnotnull ( com. stratio. connector. elasticsearch. core. engine. utils. selectorutils. getselectorfieldname ( selector ) )
[4]: org. junit. assert. assertequals ( columnname, com. stratio. connector. elasticsearch. core. engine. utils. selectorutils. getselectorfieldname ( supplied ) )

************

************
tgt: org . junit . assert . assertnotnull ( location )
[0]: org. junit. assert. assertequals ( columnname, com. stratio. connector. elasticsearch. core. engine. utils. selectorutils. getselectorfieldname ( null ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, runs. size ( ) )
[3]: org. junit. assert. asserttrue ( exception. iscausedbyhttpexception ( ) )
[4]: org. junit. assert. assertnotnull ( exception. iscausedbyhttpexception ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedblob , blob )
[0]: org. junit. assert. asserttrue ( exceptions. iscausedbyhttpexception ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 1, obj. getid ( ) )
[4]: org. junit. assert. assertnotnull ( obj. tostring ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( action )
[0]: org. junit. assert. assertnotnull ( obj. s )
[1]: org. junit. assert. assertnotnull ( obj )
[2]: org. junit. assert. assertnotnull ( obj. getmessage ( ) )
[3]: org. junit. assert. assertequals ( 1, presentationobject. isallowedtowritereview ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, presentationobject. isallowedtowritereview ( ) )

************

************
tgt: org . junit . assert . assertequals ( args [ 0 ] , ctx . getargument ( person . class ) . name )
[0]: org. junit. assert. assertequals ( null, presentationobject. isallowedtowritereview ( ) )
[1]: org. junit. assert. assertequals ( 1, presentationobject. isallowedtowritereview ( ). length ( ) )
[2]: org. junit. assert. assertequals ( 1, presentationobject. isallowedtowritereview ( ). length )
[3]: org. junit. assert. assertequals ( null, shell1. gettext ( ) )
[4]: org. junit. assert. assertnotnull ( shell1. gettext ( ) )

************

************
tgt: org . junit . assert . assertsame ( value , object . getvalue ( fieldname ) )
[0]: org. junit. assert. assertequals ( 0, shell1. gettext ( ). length )
[1]: org. junit. assert. assertequals ( 1, shell1. gettext ( ). length )
[2]: type ) )
[3]: org. junit. assert. assertequals ( expected, new java. lang. string ( result ) )
[4]: org. junit. assert. assertequals ( expected, new java. lang. string ( result, contentstring ) )

************

************
tgt: org . junit . assert . assertnull ( org . eclipse . kapua . commons . util . kapuadateutils . formatdate ( falsedate ) )
[0]: org. junit. assert. assertequals ( expected, new java. lang. string ( result, mime ) )
[1]: org. junit. assert. assertequals ( expected, new java. lang. string ( result, content ) )
[2]: org. junit. assert. assertarrayequals ( expected, result )
[3]: org. junit. assert. assertnotnull ( writer. getresult ( ) )
[4]: org. junit. assert. assertequals ( list, writer. getresult ( ) )

************

************
tgt: org . junit . assert . assertsame ( input . getvertex ( ) , output )
[0]: org. junit. assert. assertequals ( 1, writer. getresult ( ). length )
[1]: org. junit. assert. assertequals ( 1, writer. getresult ( ). size ( )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( conf )
[4]: org. junit. assert. assertequals ( 1, org. apache. hadoop. hdfs. server. balancer. testbalancer. testbalancer. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( value , org . hamcrest . matchers . is ( "xpathwithdefaults" ) )
[0]: org. junit. assert. assertequals ( org. apache. hadoop. hdfs. server. balancer. testbalancerwithhanamenodes. test_capacities, conf )
[1]: org. junit. assert. assertequals ( 1, org. apache. hadoop. hdfs. server. balancer. testbalancer. testbalancer. size ( conf ) )
[2]: org. junit. assert. assertequals ( 1, conf. count )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( 0, result. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( cidr1 . matches ( cidr2 ) )
[0]: org. junit. assert. assertequals ( 1, org. pentaho. di. trans. steps. userdefinedjavaclass. fieldhelper. getnativedatatypesimplename ( v ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, org. pentaho. di. trans. steps. userdefinedjavaclass. fieldhelper. getnativedatatypesimplename ( v ). size ( ) )
[2]: org. junit. assert. assertsame ( log, org. pentaho. di. trans. steps. userdefinedjavaclass. fieldhelper. getnativedatatypesimplename ( v ) )
[3]: org. junit. assert. assertnull ( org. pentaho. di. trans. steps. userdefinedjavaclass. fieldhelper. getnativedatatypesimplename ( v ) )
[4]: org. junit. assert. assertequals ( org. pentaho. di. trans. steps. userdefinedjavaclass. fieldhelper. getnativedatatypesimplename ( v ), e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertfalse ( verifier . verify ( "foo" , sslsession ) )
[0]: org. junit. assert. assertequals ( 1, res. arraysize ( ) )
[1]: org. junit. assert. assertequals ( 0, res. arraysize ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( left, right, right, right ), res. arraysize ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( left, right, right ), res. arraysize ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( left, right, left, right ), res. arraysize ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( 1, resultaat. size ( ) )
[1]: org. junit. assert. assertnotnull ( inputfile )
[2]: org. junit. assert. assertequals ( 1, inputfile. length )
[3]: org. junit. assert. assertequals ( results [ i ], results [ i ] )
[4]: org. junit. assert. assertequals ( results [ i ], results [ ( i + 1 ) ] )

************

************
tgt: org . junit . assert . assertequals ( "bbbbdfgdfg" , props . getreplyto ( ) )
[0]: org. junit. assert. assertequals ( results [ i ], results [ i ]. get ( ) )
[1]: org. junit. assert. assertequals ( results [ i ]. get ( ), results [ i ] )
[2]: org. junit. assert. assertequals ( i, results [ i ]. get ( ) )
[3]: org. junit. assert. assertequals ( 1, branch_conditions. size ( ) )
[4]: org. junit. assert. assertequals ( 1, list. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expecting , a . render ( 4 ) )
[0]: org. junit. assert. assertequals ( 0, list. size ( ) )
[1]: org. junit. assert. assertequals ( 2, list. size ( ) )
[2]: org. junit. assert. assertequals ( 3, list. size ( ) )
[3]: org. junit. assert. assertnotnull ( io. lavagna. service. helper. createuser ( userrepository, null, io. lavagna. service. userrepositorytest. test_user_name ) )
[4]: org. junit. assert. assertnotnull ( io. lavagna. service. helper. createuser ( userrepository, ""test"", io. lavagna. service. userrepositorytest. test_user_name ) )

************

************
tgt: org . junit . assert . asserttrue ( complex . nan . sin ( ) . isnan ( ) )
[0]: org. junit. assert. assertnotnull ( io. lavagna. service. helper. createuser ( userrepository, name, io. lavagna. service. userrepositorytest. test_user_name ) )
[1]: org. junit. assert. assertnotnull ( io. lavagna. service. helper. createuser ( userrepository, userrepository, io. lavagna. service. userrepositorytest. test_user_name ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( replacesentencedecorator. todisplay ( ) )
[4]: org. junit. assert. assertnotnull ( replacesentencedecorator )

************

************
tgt: org . junit . assert . assertequals ( "anne" , myteamleader )
[0]: org. junit. assert. assertequals ( null, replacesentencedecorator. todisplay ( ) )
[1]: org. junit. assert. assertequals ( 1, replacesentencedecorator. todisplay ( ) )
[2]: ) )
[3]: org. junit. assert. assertarrayequals ( new int [ ] { size }, current )
[4]: org. junit. assert. assertarrayequals ( current, current )

************

************
tgt: org . junit . assert . assertequals ( manageditem , item . getdienstbundel ( ) )
[0]: org. junit. assert. assertequals ( size, current. length )
[1]: org. junit. assert. assertequals ( 1, current. length )
[2]: org. junit. assert. assertnotnull ( current )
[3]: org. junit. assert. assertequals ( 200, usuario. count ( ) )
[4]: org. junit. assert. assertequals ( 200, usuario. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , header . getmajorversion ( ) )
[0]: org. junit. assert. assertequals ( 200, usuario. result )
[1]: org. junit. assert. assertequals ( 200, usuario. criaautenticacao ( ""foo"", ""bar"" ). size ( ) )
[2]: org. junit. assert. assertequals ( 200, usuario. criaautenticacao ( ""foo"", null ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, array. length ( ) )
[4]: org. junit. assert. assertequals ( 1, array. length ( ) )

************

************
tgt: org . junit . assert . assertequals ( dedatarecordcollections . tostring ( ) , 5 , dedatarecordcollections . size ( ) )
[0]: org. junit. assert. assertequals ( 1, features. size ( ) )
[1]: org. junit. assert. assertequals ( 0, features. size ( ) )
[2]: org. junit. assert. asserttrue ( ( ( features. size ( ) ) == 1 ) )
[3]: org. junit. assert. assertequals ( 1, features. size ( ) )
[4]: org. junit. assert. assertequals ( 1l, features. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , factor , 0 )
[0]: org. junit. assert. assertnotnull ( dec3 )
[1]: org. junit. assert. assertequals ( org. apache. hadoop. hive. serde2. typeinfo )
[2]: org. junit. assert. assertequals ( null, dec3 )
[3]: org. junit. assert. assertequals ( true, accepted )
[4]: org. junit. assert. assertequals ( false, accepted )

************

************
tgt: org . junit . assert . asserttrue ( item . iscached ( ) )
[0]: org. junit. assert. assertfalse ( accepted )
[1]: org. junit. assert. assertnull ( accepted )
[2]: org. junit. assert. asserttrue ( links. isempty ( ) )
[3]: org. junit. assert. assertequals ( rulestring, irodsrulefileasfile. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( irodsrulefileasfile )

************

************
tgt: org . junit . assert . asserttrue ( ( ( list . size ( ) ) == 2 ) )
[0]: org. junit. assert. assertnotnull ( irodsrulefile )
[1]: org. junit. assert. assertequals ( rulestring, irodsrulefile. tostring ( ) )
[2]: org. junit. assert. assertequals ( ( ( rulestring + rulefile ) + rulestring ), result )
[3]: org. junit. assert. assertequals ( 1, inbox. size ( ) )
[4]: org. junit. assert. assertnotnull ( inbox )

************

************
tgt: org . junit . assert . assertequals ( 1 , map . size ( ) )
[0]: org. junit. assert. assertequals ( 4, inbox. size ( ) )
[1]: org. junit. assert. assertequals ( 0, inbox. size ( ) )
[2]: org. junit. assert. assertequals ( 3, inbox. size ( ) )
[3]: org. junit. assert. assertequals ( referenceresult, result )
[4]: org. junit. assert. assertsame ( referenceresult, result )

************

************
tgt: org . junit . assert . assertequals ( object , result )
[0]: org. junit. assert. assertnull ( referenceresult )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( referenceresult, referenceresult )
[3]: org. junit. assert. assertequals ( 0, p. getid ( ) )
[4]: org. junit. assert. assertequals ( 1, p. getid ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( modifiedfacetcalendardisplaycontext )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( nodeconfiguration ), p. getid ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), p. getid ( ) )
[2]: org. junit. assert. assertequals ( org. openqa. grid. internal. long. class, p. getid ( ) )
[3]: org. junit. assert. assertequals ( str, trimstr )
[4]: org. junit. assert. assertequals ( str. x, trimstr. x )

************

************
tgt: org . junit . assert . assertnull ( custompaneldef . getparent ( ) )
[0]: org. junit. assert. assertequals ( str. x, trimstr. y )
[1]: org. junit. assert. assertequals ( str. y, trimstr. y )
[2]: org. junit. assert. assertsame ( str, trimstr )
[3]: org. junit. assert. assertequals ( 1, position )
[4]: org. junit. assert. assertequals ( 0, position )

************

************
tgt: org . junit . assert . assertequals ( players [ i ] , bs . getplayers ( ) [ i ] )
[0]: org. junit. assert. assertequals ( 3, position )
[1]: org. junit. assert. assertnotnull ( ex. getmessage ( ) )
[2]: org. junit. assert. assertnotnull ( ex. getmessage ( ). tostring ( ) )
[3]: org. junit. assert. assertequals ( null, ex. getmessage ( ) )
[4]: org. junit. assert. assertnotnull ( ex. getmessage ( ). length ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedv10match . build ( ) , emptyv10match . build ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( nums, results )
[2]: org. junit. assert. assertequals ( results, nums )
[3]: org. junit. assert. assertequals ( result, results )
[4]: org. junit. assert. assertnotnull ( results )

************

************
tgt: org . junit . assert . asserttrue ( groepenvanelement . isempty ( ) )
[0]: , results )
[1]: org. junit. assert. assertnotnull ( processor )
[2]: org. junit. assert. assertnotnull ( processor. process ( ) )
[3]: org. junit. assert. assertnotnull ( handler )
[4]: org. junit. assert. assertnotnull ( processor. process )

************

************
tgt: org . junit . assert . assertnotnull ( iimgr . getii ( "new<sp>ii" ) )
[0]: org. junit. assert. assertequals ( 1, bean. name )
[1]: org. junit. assert. assertequals ( 1, height )
[2]: org. junit. assert. assertequals ( 2, height )
[3]: org. junit. assert. assertequals ( 3, height )
[4]: org. junit. assert. assertequals ( ( height + 1 ), 1 )

************

************
tgt: org . junit . assert . assertthat ( taxa . size ( ) , org . hamcrest . core . is . is ( 1 ) )
[0]: org. junit. assert. assertequals ( ( 1 + 1 ), height )
[1]: org. junit. assert. assertequals ( 1, com. liferay. portal. test. mail. mailservicetestutil. getinboxsize ( ) )
[2]: org. junit. assert. assertnull ( reply )
[3]: org. junit. assert. assertequals ( null, reply )
[4]: org. junit. assert. assertnotnull ( reply )

************

************
tgt: org . junit . assert . assertarrayequals ( a , copyof ( a ) )
[0]: org. junit. assert. assertequals ( null, reply )
[1]: org. junit. assert. assertequals ( """", reply )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( sampletext, failedtests )
[4]: org. junit. assert. assertthat ( failedtests )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( 1 , 2 , 3 , 4 , 5 , 6 ) , contentoffile )
[0]: org. junit. assert. assertequals ( samplet ext, failedtests )
[1]: org. junit. assert. assertnull ( failedtests )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, clusters. size ( ) )
[4]: org. junit. assert. assertequals ( 0, clusters. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( hivemall . utils . hadoop . writableutils . val ( "s1" ) , udf . evaluate ( args ) )
[0]: org. junit. assert. assertequals ( 3, clusters. size ( ) )
[1]: org. junit. assert. assertequals ( 2, clusters. size ( ) )
[2]: org. junit. assert. assertequals ( 4, clusters. size ( ) )
[3]: org. junit. assert. assertnotnull ( tagcache )
[4]: org. junit. assert. assertnull ( tagcache )

************

************
tgt: org . junit . assert . assertequals ( writer . syncinterval , ( 20 * 100 ) )
[0]: org. junit. assert. assertequals ( null, tagcache )
[1]: org. junit. assert. assertnotnull ( tagcache. get ( ) )
[2]: org. junit. assert. assertnotnull ( tagcache. next ( ) )
[3]: org. junit. assert. assertequals ( 1, actualdeviceclientlist. size ( ) )
[4]: org. junit. assert. assertequals ( 0, actualdeviceclientlist. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( jobconfiguration . hasnonconfigurablejobchanges ( jc ) )
[0]: org. junit. assert. assertequals ( 3, actualdeviceclientlist. size ( ) )
[1]: org. junit. assert. assertequals ( 5, actualdeviceclientlist. size ( ) )
[2]: org. junit. assert. assertequals ( 2, actualdeviceclientlist. size ( ) )
[3]: org. junit. assert. assertnotnull ( configurable. getenabledciphersuites ( ) )
[4]: org. junit. assert. assertequals ( 1, configurable. getenabledciphersuites ( ). length )

************

************
tgt: org . junit . assert . assertnotnull ( name , expression )
[0]: org. junit. assert. assertequals ( 1, configurable. getenabledciphersuites ( ). size ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. asserttrue ( ok. get ( ) )
[4]: org. junit. assert. assertnotnull ( ok. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( result , str )
[0]: org. junit. assert. assertfalse ( ok. get ( ) )
[1]: get ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertfalse ( this . user . exists ( ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( 1, result )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, columndifference. execute ( ) )
[4]: org. junit. assert. assertnotnull ( columndifference. execute ( ) )

************

************
tgt: org . junit . assert . assertequals ( c1 , c2 )
[0]: org. junit. assert. assertequals ( null, columndifference. execute ( ) )
[1]: org. junit. assert. assertequals ( org. infinispan. server. test. client. memcached. abstractmemcachedlocalit. key_a, mc. readln ( ) )
[2]: org. junit. assert. assertequals ( ( ( org. infinispan. server. test. client. memcached. abstractmemcachedlocalit. key_a ) + 1 ), mc. readln ( ) )
[3]: org. junit. assert. assertequals ( 10, mc. readln ( ) )
[4]: org. junit. assert. assertequals ( expected, mc. readln ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . size ( ) )
[0]: org. junit. assert. assertequals ( ( ( org. infinispan. server. test. client. memcached. abstractmemcachedlocalit. key_a ) * 1 ), mc. readln ( ) )
[1]: org. junit. assert. asserttrue ( validation, reverse )
[2]: org. junit. assert. asserttrue ( validation. contains ( reverse ) )
[3]: org. junit. assert. asserttrue ( validation. contains ( forward ) )
[4]: , validation )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( requirednotretired , notrequirednotretireda , notrequirednotretiredb , requiredretired1a , requiredretired2a , notrequiredretired ) , list )
[0]: ) )
[1]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( equalto ( expected ) ) )
[2]: org. junit. assert. assertthat ( actual, is ( equalto ( expected ) ) )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( ( expected - 1 ) ) )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( s )
[2]: org. junit. assert. assertequals ( s, s )
[3]: org. junit. assert. assertequals ( s, null )
[4]: org. junit. assert. assertequals ( s, prepared )

************

************
tgt: org . junit . assert . assertequals ( actual , expected )
[0]: )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), message. getalloperationsfor ( null ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), message. getalloperationsfor ( 0 ) )
[3]: org. junit. assert. assertequals ( 0, message. getalloperationsfor ( null ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, message. getalloperationsfor ( null ). size ( ) )

************

************
tgt: org . junit . assert . assertsame ( t , test_2007_07_15_12_30_40_987654321 )
[0]: ) )
[1]: org. junit. assert. assertequals ( true, new nl. moderniseringgba. migratie. conversie. proces. brpnaarlo3. groep. brpouder1gezaginhoud ( true ). isleeg ( ) )
[2]: org. junit. assert. assertequals ( 1, definitions. size ( ) )
[3]: org. junit. assert. assertarrayequals ( sourcebytes, sourcebytes )
[4]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 2, 3, 4 }, sourcebytes )

************

************
tgt: org . junit . assert . assertfalse ( handler . respond ( ) )
[0]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 2, 3 }, sourcebytes )
[1]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 1, 2, 3 }, sourcebytes )
[2]: org. junit. assert. assertarrayequals ( new byte [ ] { }, sourcebytes )
[3]: org. junit. assert. assertnotnull ( r. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, r. getvalue ( ) )

************

************
tgt: org . junit . assert . asserttrue ( complies )
[0]: org. junit. assert. assertequals ( 0, r. getvalue ( ) )
[1]: org. junit. assert. assertnull ( r. getvalue ( ) )
[2]: org. junit. assert. assertequals ( r, r. getvalue ( ) )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( 0, result )

************

************
tgt: org . junit . assert . assertequals ( expectedtuple , actualtuple )
[0]: org. junit. assert. assertequals ( 3, result )
[1]: org. junit. assert. assertequals ( 5, result )
[2]: org. junit. assert. assertequals ( 4, result )
[3]: org. junit. assert. assertequals ( 0, foobean. observations. get ( ) )
[4]: org. junit. assert. assertequals ( 1, foobean. observations. get ( ) )

************

************
tgt: org . junit . assert . assertnull ( brpinhoud )
[0]: org. junit. assert. assertequals ( 0, foobean. observations. get ( ). length )
[1]: org. junit. assert. assertnull ( foobean. observations. get ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( ( count + 2 ), session. from ( restriction ). list ( restriction ). size ( ) )
[4]: org. junit. assert. asserttrue ( fs. exists ( path1 ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , ( ( int ) ( value ) ) )
[0]: org. junit. assert. assertfalse ( result )
[1]: org. junit. assert. assertequals ( false, result )
[2]: org. junit. assert. assertequals ( true, result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertequals ( false, result )

************

************
tgt: org . junit . assert . assertequals ( mockentity1 , mockentity2 )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 13 ), bc. intersects ( ac ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 13, 5 ), bc. intersects ( ac ) )
[2]: org. junit. assert. assertequals ( 1, bc. intersects ( ac ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 13, 10 ), bc. intersects ( ac ) )
[4]: org. junit. assert. assertequals ( null, bc. intersects ( ac ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , aslist . size ( ) )
[0]: org. junit. assert. assertnotnull ( datafolder )
[1]: org. junit. assert. assertequals ( com. baeldung. java9. reactive. baeldungsubscriberimplintegrationtest. item_size, count )
[2]: org. junit. assert. assertequals ( ( com. baeldung. java9. reactive. baeldungsubscriberimplintegrationtest. item_size ), count )
[3]: org. junit. assert. assertequals ( com. baeldung. java9. reactive. baeldungsubscriberimplintegrationtest. items_size, count )
[4]: org. junit. assert. assertequals ( com. baeldung. java9. reactive. baeldungsubscriberimplintegrationtest. item_size, count ) ;

************

************
tgt: org . junit . assert . assertnotnull ( "er<sp>zou<sp>een<sp>fout<sp>op<sp>moeten<sp>treden." , e )
[0]: org. junit. assert. assertequals ( 1, count )
[1]: org. junit. assert. assertthat ( document. size ( ), is ( 1 ) )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( ""foo"" ), document )
[3]: org. junit. assert. assertequals ( document, new org. bson. document ( ) )
[4]: org. junit. assert. assertthat ( document. get ( java. lang. string. class ), is ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( ( composite != null ) )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), document )
[1]: org. junit. assert. asserttrue ( fb. hasannotationfeature ( features ) )
[2]: org. junit. assert. assertfalse ( fb. hasannotationfeature ( features ) )
[3]: org. junit. assert. asserttrue ( server. hasannotationfeature ( features ) )
[4]: org. junit. assert. asserttrue ( handler. hasannotationfeature ( features ) )

************

************
tgt: org . junit . assert . assertequals ( "tuser/myproject" , repo . generateid ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( mediators, actualmediator )
[2]: org. junit. assert. assertequals ( ssi, yield )
[3]: org. junit. assert. assertequals ( smi, yield )
[4]: org. junit. assert. assertnotnull ( ssi )

************

************
tgt: org . junit . assert . assertnull ( array )
[0]: org. junit. assert. assertnotnull ( smi )
[1]: org. junit. assert. assertequals ( ssi, result )
[2]: org. junit. assert. assertequals ( thresholdvalue, actualvalue )
[3]: org. junit. assert. assertequals ( thresholdvalue, actualvalue, 0 )
[4]: org. junit. assert. assertequals ( null, actualvalue )

************

************
tgt: org . junit . assert . asserttrue ( datachanged )
[0]: org. junit. assert. assertnotnull ( actualvalue )
[1]: org. junit. assert. assertequals ( code, actualvalue )
[2]: org. junit. assert. assertequals ( ln. tostring ( ), ln. tostring ( ) )
[3]: org. junit. assert. assertequals ( ln, ln. tostring ( ) )
[4]: org. junit. assert. assertequals ( toadd, ln. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( initialorganizationuserscount + 1 ) , com . liferay . portal . kernel . service . userlocalserviceutil . getorganizationuserscount ( requiredorganizationids [ 0 ] ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( toadd ), ln )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( header )
[3]: org. junit. assert. assertequals ( label2ref, leakedmap )
[4]: org. junit. assert. assertequals ( label2ref, leakedmap. next ( ) )

************

************
tgt: org . junit . assert . assertfalse ( p . equals ( pp ) )
[0]: org. junit. assert. assertequals ( label1ref, leakedmap )
[1]: org. junit. assert. assertnotnull ( label2ref )
[2]: org. junit. assert. assertequals ( label, leakedmap )
[3]: org. junit. assert. assertnotnull ( dog )
[4]: org. junit. assert. assertnull ( dog )

************

************
tgt: org . junit . assert . assertequals ( number , com . liferay . portal . kernel . security . randomutil . nextint ( 10 ) )
[0]: org. junit. assert. assertequals ( null, dog )
[1]: org. junit. assert. assertequals ( 0, dog. length )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( proc. process ( record ) )
[4]: org. junit. assert. assertnotnull ( proc. process ( records ) )

************

************
tgt: org . junit . assert . assertthat ( listener . getpartitionspecfilter ( ) , org . hamcrest . corematchers . is ( "" ) )
[0]: org. junit. assert. assertnotnull ( proc. processes ( record ) )
[1]: org. junit. assert. assertnotnull ( process ( record ) )
[2]: org. junit. assert. assertnotnull ( proc )
[3]: org. junit. assert. assertequals ( expected, migratecommandsworker0 )
[4]: org. junit. assert. assertequals ( expected, migratecommandsworker1 )

************

************
tgt: org . junit . assert . assertnotnull ( file )
[0]: org. junit. assert. assertequals ( expected, migratecommandsworker2 )
[1]: org. junit. assert. assertequals ( expected, migrationcommandsworker0 )
[2]: ) )
[3]: org. junit. assert. assertthat ( manifest. lookup ( filehashcache, key, com. facebook. buck. core. build. engine. manifest. manifesttest. resolver ), org. hamcrest. matchers. equalto ( java. util. optional. of ( key ) ) )
[4]: org. junit. assert. assertthat ( manifest. lookup ( filehashcache, key, com. facebook. buck. core. build. engine. manifest. manifesttest. resolver ), org. hamcrest. matchers. equalto ( java. util. optional. empty ( ) ) )

************

************
tgt: org . junit . assert . assertnull ( err )
[0]: org. junit. assert. assertthat ( manifest. lookup ( filehashcache, null, com. facebook. buck. core. build. engine. manifest. manifesttest. resolver ), org. hamcrest. matchers. equalto ( java. util. optional. of ( key ) ) )
[1]: org. junit. assert. assertthat ( manifest. lookup ( filehashcache, key, com. google. common. collect. immutableset. of ( input ) ), org. hamcrest. matchers. equalto ( java. util. optional. of ( key ) ) )
[2]: ) )
[3]: org. junit. assert. assertarrayequals ( new double [ ] { 1, 1 }, result, 0 )
[4]: org. junit. assert. assertarrayequals ( new double [ ] { }, result, 0 )

************

************
tgt: org . junit . assert . assertequals ( 0 , mark1 )
[0]: org. junit. assert. assertarrayequals ( new double [ ] { 1 }, result, 0 )
[1]: org. junit. assert. assertequals ( 1, authenticatorstate. size ( ) )
[2]: org. junit. assert. assertequals ( 1, authenticatorstate. authentication ( ) )
[3]: org. junit. assert. assertequals ( 1, authenticatorstate. authenticate ( ) )
[4]: org. junit. assert. assertequals ( 1, authenticatorstate. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( "en_text" , result )
[0]: org. junit. assert. assertequals ( 1, authenticatorstate. timeout )
[1]: org. junit. assert. assertequals ( businessobjectdata, resultbusinessobjectdata )
[2]: org. junit. assert. assertnotnull ( factortoprimitive ( poly ) )
[3]: org. junit. assert. assertequals ( poly, factortoprimitive ( poly ) )
[4]: org. junit. assert. assertnotnull ( poly. factortoprimitive ( point ) )

************

************
tgt: org . junit . assert . assertequals ( hcrs , g . getuserdata ( ) )
[0]: org. junit. assert. assertnotnull ( factortoprimitive ( poly. point ( ) ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( log )
[3]: org. junit. assert. assertnull ( log )
[4]: org. junit. assert. assertnotnull ( logfile )

************

************
tgt: org . junit . assert . assertequals ( buf2 [ n ] , buf1 [ n ] )
[0]: ) )
[1]: )
[2]: org. junit. assert. asserttrue ( album1. equals ( album2 ) )
[3]: org. junit. assert. asserttrue ( album0. equals ( album2 ) )
[4]: org. junit. assert. asserttrue ( album2. equals ( album2 ) )

************

************
tgt: org . junit . assert . assertequals ( org . eclipse . collections . impl . string . immutable . codepointadaptertest . unicode_string . subsequence ( 1 , 3 ) , sequence )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 1, commandnames. size ( ) )
[3]: org. junit. assert. assertequals ( 0, commandnames. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), commandnames )

************

************
tgt: org . junit . assert . assertequals ( somevalue , bean . getnestedproperty ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), commandnames )
[1]: org. junit. assert. assertnotnull ( commandnames )
[2]: org. junit. assert. assertnull ( target )
[3]: org. junit. assert. assertsame ( com. documents4j. job. mockresult. classes, target )
[4]: org. junit. assert. assertsame ( target, target )

************

************
tgt: org . junit . assert . assertequals ( entry . getkey ( ) , entry . getvalue ( ) . formatname ( ) )
[0]: org. junit. assert. assertnull ( target. exists ( ) )
[1]: org. junit. assert. assertnull ( target. fake ( ) )
[2]: org. junit. assert. assertequals ( 1, hyperlinks. length )
[3]: org. junit. assert. assertequals ( 0, hyperlinks. length )
[4]: org. junit. assert. assertequals ( 3, hyperlinks. length )

************

************
tgt: org . junit . assert . assertequals ( si1 . gettkey ( ) , siretrieved . gettkey ( ) )
[0]: org. junit. assert. assertarrayequals ( org. eclipse. egit, hyperlinks )
[1]: ) )
[2]: org. junit. assert. assertequals ( child, parent. getparent ( ) )
[3]: org. junit. assert. assertequals ( child, child. getparent ( ) )
[4]: org. junit. assert. assertequals ( parent, child. getparent ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result . isvalid ( ) )
[0]: org. junit. assert. assertnotnull ( child. getparent ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( aclass )
[3]: org. junit. assert. assertnotnull ( aclass. getmethod ( null, null ) )
[4]: org. junit. assert. assertnotnull ( aclass. getmethod ( 0, null ) )

************

************
tgt: org . junit . assert . assertequals ( resourcefilecontent . length , org . bonitasoft . engine . commons . io . ioutil . getallcontentfrom ( resourcestream ) . length )
[0]: org. junit. assert. assertnotnull ( aclass, getmethod ( null, null ) )
[1]: org. junit. assert. assertnotnull ( aclass. getmethod ( 1, null ) )
[2]: org. junit. assert. assertequals ( 1, msgcount. get ( ) )
[3]: org. junit. assert. assertequals ( 1, ( c + 1 ) )
[4]: org. junit. assert. assertequals ( 0, msgcount. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , truststore . size ( ) )
[0]: org. junit. assert. assertequals ( 1, msgcount. get ( ). length )
[1]: get ( ) )
[2]: org. junit. assert. assertequals ( 1, metriccollector. gettimer ( ). getcount ( ) )
[3]: org. junit. assert. assertequals ( 1, metriccollector. getcounter ( ) )
[4]: org. junit. assert. assertequals ( 1, metriccollector. getcounter ( ). getcount ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , rs . getcurrentrecord ( ) )
[0]: org. junit. assert. assertequals ( 1, metriccollector. gettimer ( ) )
[1]: org. junit. assert. assertequals ( 1, metriccollector. getmeter ( ) )
[2]: org. junit. assert. assertnotnull ( echo )
[3]: org. junit. assert. assertnotnull ( echo. echo ( ""test"" ) )
[4]: org. junit. assert. assertequals ( ""test"", echo. echo ( ""test"" ) )

************

************
tgt: org . junit . assert . asserttrue ( providerstubs . contains ( new org . openmrs . module . htmlformentry . element . providerstub ( provider ) ) )
[0]: org. junit. assert. assertnotnull ( echo. echo ( ) )
[1]: org. junit. assert. assertequals ( ""test"", echo. echo ( ""test"" ) )
[2]: org. junit. assert. assertequals ( 1, 1 )
[3]: org. junit. assert. assertequals ( 1, this. list. size ( ) )
[4]: org. junit. assert. assertequals ( 1, list. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( ka . renderkeyswapmatrix ( k ) )
[0]: org. junit. assert. assertequals ( 1, java. util. arrays. aslist ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( result, actual )
[4]: org. junit. assert. assertequals ( actual, expected )

************

************
tgt: org . junit . assert . assertequals ( e , ae )
[0]: org. junit. assert. assertequals ( exp, actual )
[1]: org. junit. assert. assertequals ( expected, actual ) for ( actual )
[2]: org. junit. assert. assertnotnull ( target. getname ( ) )
[3]: org. junit. assert. assertequals ( null, target. getname ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. class. getname ( ), target. getname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( datawave . query . jexl . functions . contentfunctionstest . expect ( o , true ) )
[0]: org. junit. assert. assertequals ( java. lang. string. class, target. getname ( ) )
[1]: org. junit. assert. assertequals ( name, target. getname ( ) )
[2]: org. junit. assert. assertequals ( status, validstring )
[3]: org. junit. assert. assertnotnull ( status )
[4]: org. junit. assert. assertequals ( 0, status )

************

************
tgt: org . junit . assert . asserttrue ( b )
[0]: org. junit. assert. assertequals ( null, status )
[1]: org. junit. assert. assertequals ( 1, status )
[2]: org. junit. assert. assertequals ( 1, currentclientcount )
[3]: org. junit. assert. assertequals ( java. lang. string. class, e. getclass ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertthat ( actualcounters , org . hamcrest . matchers . equalto ( expectedcounters ) )
[0]: org. junit. assert. assertequals ( 1, ( currentclientcount + 1 ) )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( currentclientcount ), e )
[2]: org. junit. assert. assertequals ( 1, networks. length )
[3]: org. junit. assert. assertequals ( 0, networks. length )
[4]: org. junit. assert. assertequals ( 3, networks. length )

************

************
tgt: org . junit . assert . assertequals ( url1 , com . deepsky . database . ora . dburlutil . parse ( url1 . serialize ( ) ) )
[0]: org. junit. assert. assertequals ( 5, networks. length )
[1]: org. junit. assert. asserttrue ( optionalsubject. validate ( ) )
[2]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. vips_post ), result. getmessage ( ) )
[3]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. vips_post ), result. passedvalidation ( ) )
[4]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. vips_post ), result. result ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( manager )
[0]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. vips_post ), result. body ( ) )
[1]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. vips_post ), result. msg ( ) )
[2]: org. junit. assert. assertequals ( 3, i )
[3]: org. junit. assert. assertequals ( 1, i )
[4]: org. junit. assert. assertequals ( 4, i )

************

************
tgt: org . junit . assert . asserttrue ( res . next ( ) )
[0]: org. junit. assert. assertequals ( 9, i )
[1]: org. junit. assert. assertequals ( 7, i )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( 0, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( result , true )
[0]: org. junit. assert. assertequals ( java. util. map. size ( ), result. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( defaultbranch ), result )
[2]: org. junit. assert. assertequals ( 0, config. getcachemaxsizerecords ( ) )
[3]: org. junit. assert. assertequals ( 0, config. getcachemaxsizerecords ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, config. getcachemaxsizerecords ( ) )

************

************
tgt: org . junit . assert . asserttrue ( max . equals ( answer ) )
[0]: org. junit. assert. assertequals ( 0l, config. getcachemaxsizerecords ( ) )
[1]: org. junit. assert. assertequals ( 0, config. getcachemaxsizerecords ( ). length )
[2]: org. junit. assert. assertequals ( 1, result. length )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( 0, result. length )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: , result )
[1]: ) )
[2]: org. junit. assert. assertequals ( nacl. sodium. crypto_secretbox_xsalsa20poly1305_keybytes, key )
[3]: org. junit. assert. assertequals ( test [ 1 ], rendered )
[4]: org. junit. assert. assertequals ( rendered, test [ 1 ] )

************

************
tgt: org . junit . assert . asserttrue ( reader . marksupported ( ) )
[0]: org. junit. assert. assertnotnull ( rendered )
[1]: , rendered )
[2]: ) )
[3]: org. junit. assert. assertequals ( 5, result )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . assertnotnull ( testset )
[0]: org. junit. assert. assertequals ( 4, result )
[1]: org. junit. assert. assertequals ( 0, result )
[2]: org. junit. assert. assertequals ( 3, result )
[3]: org. junit. assert. assertnotnull ( requestparammap )
[4]: org. junit. assert. asserttrue ( orderid. equals ( exp ) )

************

************
tgt: org . junit . assert . assertequals ( size , actualsize )
[0]: org. junit. assert. assertnotnull ( requestparam )
[1]: org. junit. assert. assertnotnull ( requestparaminfo )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( type )
[4]: org. junit. assert. asserttrue ( type. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( or . isdefined ( ) )
[0]: ) )
[1]: )
[2]: 
[3]: org. junit. assert. assertequals ( expected, parser. gettimestampinseconds ( ) )
[4]: org. junit. assert. assertequals ( expected, ws. gettimestampinseconds ( ) )

************

************
tgt: org . junit . assert . assertequals ( "sunldaprealm" , com . ibm . ws . security . wim . adapter . ldap . fat . urapis_sunldap_defaultconfigtest . servlet . getrealm ( ) )
[0]: org. junit. assert. assertequals ( expected, s. gettimestampinseconds ( ) )
[1]: org. junit. assert. assertequals ( """", logfilter. verify ( new org. mockserver. verify. verificationsequence ( ) ) )
[2]: org. junit. assert. assertequals ( """", logfilter. verify ( ( ( org. mockserver. verify. verificationsequence ) ( null ) ) ) )
[3]: org. junit. assert. assertequals ( null, logfilter. verify ( new org. mockserver. verify. verificationsequence ( ) ) )
[4]: org. junit. assert. assertequals ( null, logfilter. verify ( ( ( org. mockserver. verify. verificationsequence ) ( null ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , list . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertthat ( violations, org. hamcrest. corematchers. is ( 0 ) )
[2]: org. junit. assert. assertthat ( violations, org. hamcrest. corematchers. is ( 1 ) )
[3]: org. junit. assert. assertthat ( violations )
[4]: , violations. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( array , array . add ( true ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( ( initialsize + 5 ), finalsize )
[2]: org. junit. assert. assertequals ( ( initialsize + 1 ), finalsize )
[3]: org. junit. assert. assertequals ( ( initialsize - 5 ), finalsize )
[4]: org. junit. assert. assertequals ( initialsize, finalsize )

************

************
tgt: org . junit . assert . asserttrue ( a . equals ( b ) )
[0]: org. junit. assert. assertequals ( ( initialsize + 3 ), finalsize )
[1]: org. junit. assert. assertequals ( 0, fragmententrylink. getposition ( ) )
[2]: org. junit. assert. assertequals ( 2, fragmententrylink. getposition ( ) )
[3]: org. junit. assert. assertequals ( teststateupdated, provider )
[4]: org. junit. assert. assertequals ( 4, ex. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( glyphsaftergsub , result )
[0]: org. junit. assert. assertequals ( teststateupdated. get ( ), provider )
[1]: teststateupdated )
[2]: ) )
[3]: org. junit. assert. assertequals ( structure. getstructureid ( ), attributes )
[4]: org. junit. assert. assertequals ( structures. getstructureid ( ), attributes )

************

************
tgt: org . junit . assert . asserttrue ( cclass . existsproperty ( "property" ) )
[0]: org. junit. assert. assertequals ( format. getstructureid ( ), attributes )
[1]: org. junit. assert. assertequals ( structure, attributes )
[2]: org. junit. assert. assertequals ( data1, data2 )
[3]: org. junit. assert. assertequals ( data2, data1 )
[4]: org. junit. assert. assertequals ( data2, data2 )

************

************
tgt: org . junit . assert . asserttrue ( cn . hutool . core . collection . collutil . isnotempty ( all ) )
[0]: org. junit. assert. assertequals ( data0, data2 )
[1]: org. junit. assert. assertequals ( data1, result )
[2]: org. junit. assert. assertnotnull ( sheets. getdata ( ) )
[3]: org. junit. assert. asserttrue ( sheets. getdata ( ). isempty ( ) )
[4]: org. junit. assert. assertequals ( 1, sheets. getdata ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 0 , cfis . available ( ) )
[0]: org. junit. assert. assertequals ( 1, sheets. getdata ( ). size ( )
[1]: ) )
[2]: org. junit. assert. assertequals ( emailtype. bulk_user_import_success, report. buildmailtype ( ) )
[3]: org. junit. assert. assertnotnull ( report. buildmailtype ( ) )
[4]: org. junit. assert. assertequals ( emailtype. bulk_user_import_success, reports. buildmailtype ( ) )

************

************
tgt: org . junit . assert . assertequals ( ver , ver2 )
[0]: org. junit. assert. assertequals ( email type. bulk_user_import_success, report. buildmailtype ( ) )
[1]: org. junit. assert. assertequals ( emailtype. bulk_user_import_success, report. buildsmailtype ( ) )
[2]: org. junit. assert. assertequals ( com. google. common. collect. immutablelist. of ( pathresolver ), tool. getcommandprefix ( path ) )
[3]: org. junit. assert. assertequals ( com. google. common. collect. immutablelist. of ( ), tool. getcommandprefix ( pathresolver ) )
[4]: org. junit. assert. assertequals ( com. google. common. collect. immutablelist. of ( pathresolver ), tool. getcommandprefix ( resolver ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 1, tool. getcommandprefix ( pathresolver ). size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, builder. getversion ( ) )
[3]: org. junit. assert. assertequals ( 1, configuration. getversion ( ) )
[4]: org. junit. assert. assertequals ( 1, metadata. getversion ( ) )

************

************
tgt: org . junit . assert . assertequals ( datarequestexpected , datarequestresult )
[0]: org. junit. assert. assertequals ( 1, instance. getversion ( ) )
[1]: org. junit. assert. assertequals ( 1.0f, builder. getversion ( ) )
[2]: org. junit. assert. assertfalse ( repository. exists ( null, null, null, null, false ) )
[3]: org. junit. assert. assertfalse ( exists ( null, null, null, null, false ) )
[4]: org. junit. assert. assertfalse ( exists ( 1, null, null, null, false ) )

************

************
tgt: org . junit . assert . assertequals ( parameters , deserializedparams )
[0]: org. junit. assert. assertfalse ( exists ( 1l, null, null, null, false ) )
[1]: org. junit. assert. asserttrue ( exists ( 1, null, null, null, false ) )
[2]: org. junit. assert. asserttrue ( ( e instanceof java. lang. illegalargumentexception ) )
[3]: org. junit. assert. assertnull ( e )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertequals ( t , n . normalizeurl ( s ) )
[0]: org. junit. assert. asserttrue ( ( e instanceof java. lang. illegalstateexception ) )
[1]: org. junit. assert. asserttrue ( ( e instanceof java. io. ioexception ) )
[2]: org. junit. assert. assertequals ( 0, golden. size ( ) )
[3]: org. junit. assert. asserttrue ( golden. isempty ( ) )
[4]: org. junit. assert. assertequals ( 1, golden. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( expected , result )
[0]: , golden )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, containers. size ( ) )
[3]: org. junit. assert. assertequals ( 0, containers. size ( ) )
[4]: org. junit. assert. assertnotnull ( containers )

************

************
tgt: org . junit . assert . assertnotnull ( at . gettokenkey ( ) )
[0]: org. junit. assert. assertequals ( 5, containers. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( i, 1 )
[3]: org. junit. assert. assertequals ( 1, i )
[4]: org. junit. assert. assertequals ( i, n )

************

************
tgt: org . junit . assert . assertnull ( p )
[0]: org. junit. assert. assertequals ( i, s. loadall )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, milliseconds )
[3]: org. junit. assert. assertequals ( 0l, milliseconds )
[4]: org. junit. assert. assertequals ( 0, millis )

************

************
tgt: org . junit . assert . assertequals ( 1 , deserializedcoolbar . getitemcount ( ) )
[0]: org. junit. assert. assertthat ( milliseconds, is ( 0 ) )
[1]: org. junit. assert. assertthat ( milliseconds, is ( zero ) )
[2]: org. junit. assert. assertequals ( text. substring ( 1, firstpart ), firstpart )
[3]: org. junit. assert. assertequals ( text. substring ( 1 ), firstpart )
[4]: org. junit. assert. assertequals ( text. substring ( 1, firstpart. trim ( ) ), firstpart )

************

************
tgt: org . junit . assert . assertequals ( expected , output )
[0]: org. junit. assert. assertequals ( text. substring ( 1, firstpart. tostring ( ) ), firstpart )
[1]: org. junit. assert. assertequals ( text. substring ( 1 ), firstpart. trim ( ) )
[2]: org. junit. assert. assertequals ( incident, incident )
[3]: org. junit. assert. assertequals ( incident, runtimeservice )
[4]: org. junit. assert. assertnotnull ( incident )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , blob . getencoded ( ) )
[0]: org. junit. assert. assertequals ( incident, instanc )
[1]: org. junit. assert. assertequals ( incident, runtimeservice )
[2]: org. junit. assert. assertequals ( 1, resources. size ( ) )
[3]: org. junit. assert. assertequals ( 0, resources. size ( ) )
[4]: org. junit. assert. assertequals ( emptylist ( ), resources )

************

************
tgt: org . junit . assert . assertnull ( next )
[0]: org. junit. assert. assertnotnull ( resources )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected, computed )
[3]: org. junit. assert. assertequals ( expected, computed. size ( ) )
[4]: org. junit. assert. assertnotnull ( computed )

************

************
tgt: org . junit . assert . assertequals ( users , 2 )
[0]: org. junit. assert. assertequals ( expected, computed )
[1]: org. junit. assert. assertequals ( expected, computed. tostring ( ) )
[2]: org. junit. assert. assertequals ( 1, count )
[3]: org. junit. assert. assertequals ( 1, size )
[4]: org. junit. assert. assertequals ( 1, size ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . gs . collections . impl . list . mutable . fastlist . newlistwith ( 2 , 2 , 2 , 1 ) , sizes )
[0]: org. junit. assert. assertequals ( 1, size ( results ) )
[1]: org. junit. assert. assertequals ( 1, size ( result ) )
[2]: org. junit. assert. assertequals ( 1, newid )
[3]: org. junit. assert. assertequals ( newid, 0 )
[4]: org. junit. assert. assertequals ( 0, newid )

************

************
tgt: org . junit . assert . assertequals ( vertices . size ( ) , i )
[0]: org. junit. assert. assertnotnull ( newid )
[1]: org. junit. assert. assertequals ( newid, 1 )
[2]: org. junit. assert. assertequals ( 1, res. getstatuscode ( ) )
[3]: org. junit. assert. assertequals ( 200, res. getstatuscode ( ) )
[4]: org. junit. assert. assertnotnull ( servermanager. getstubhttpserverport ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , allsubtypes . size ( ) )
[0]: org. junit. assert. assertnotnull ( servermanager. getstub ssl sslport ( ) )
[1]: org. junit. assert. assertnotnull ( servermanager. getstub ssl ssl port ( ) )
[2]: org. junit. assert. assertnotnull ( servermanager. getstublowlowport ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( s )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( s, bytes. length )
[1]: org. junit. assert. assertequals ( s, bytes )
[2]: , s )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, result. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( service , holder . getservice ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 1, fakerepository. getvalue ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, fakerepository. getvalue ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, partitions. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, partitions. size ( ) )
[1]: org. junit. assert. assertequals ( zero, partitions. size ( ) )
[2]: org. junit. assert. assertequals ( newsubtitles, newsubtitles )
[3]: org. junit. assert. assertnotnull ( newsubtitles )
[4]: org. junit. assert. assertequals ( null, newsubtitles )

************

************
tgt: org . junit . assert . asserttrue ( m . isstopped ( ) )
[0]: org. junit. assert. assertequals ( 1, newsubtitles )
[1]: ) )
[2]: org. junit. assert. assertthat ( ser. equals ( ser ), org. hamcrest. corematchers. is ( true ) )
[3]: org. junit. assert. asserttrue ( zdt. equals ( ser ) )
[4]: org. junit. assert. assertthat ( ser. equals ( null ), org. hamcrest. corematchers. is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , graph . size ( ) )
[0]: org. junit. assert. assertthat ( ser. equals ( ser ), org. hamcrest. corematchers. is ( false ) )
[1]: org. junit. assert. asserttrue ( ser. equals ( ser ) )
[2]: org. junit. assert. assertequals ( 1, pagelist. tryflushlock ( pageref ) )
[3]: org. junit. assert. assertequals ( 0, pagelist. tryflushlock ( pageref ) )
[4]: org. junit. assert. assertequals ( s, pagelist. tryflushlock ( pageref ) )

************

************
tgt: org . junit . assert . assertequals ( expectedids , actualids )
[0]: org. junit. assert. assertequals ( 3, pagelist. tryflushlock ( pageref ) )
[1]: org. junit. assert. assertequals ( pagelist. tryflushlock ( pageref ), 0 )
[2]: org. junit. assert. assertequals ( msg, dynany. get_string ( ) )
[3]: org. junit. assert. assertequals ( msg, dynamany. get_string ( ) )
[4]: org. junit. assert. assertequals ( msg, dynamicany. get_string ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedgeojson , geojson )
[0]: org. junit. assert. assertequals ( msg, dt )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, version )
[3]: org. junit. assert. assertequals ( 1, version )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), version )

************

************
tgt: org . junit . assert . assertequals ( 0 , annotatedtypes . size ( ) )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 0 ), version )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 5 ), version )
[2]: org. junit. assert. assertequals ( 0, tree. indexof ( item8 ) )
[3]: org. junit. assert. assertequals ( 7, tree. indexof ( item8 ) )
[4]: org. junit. assert. assertequals ( 1, tree. indexof ( item8 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( ( - 1 ), tree. indexof ( item8 ) )
[1]: org. junit. assert. assertequals ( ( - 1 ), tree. indexof ( item 8 ) )
[2]: org. junit. assert. assertnull ( uisession. getconnectionid ( ) )
[3]: org. junit. assert. assertsame ( null, uisession. getconnectionid ( ) )
[4]: org. junit. assert. assertequals ( null, uisession. getconnectionid ( ) )

************

************
tgt: org . junit . assert . asserttrue ( isvalid )
[0]: org. junit. assert. assertequals ( 1, uisession. getconnectionid ( ) )
[1]: )
[2]: org. junit. assert. assertequals ( rows, 1 )
[3]: org. junit. assert. assertequals ( rows, 0 )
[4]: org. junit. assert. assertequals ( row, 1 )

************

************
tgt: org . junit . assert . asserttrue ( queueresponse . isok ( ) )
[0]: org. junit. assert. assertnotnull ( inputfile )
[1]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( true ) )
[2]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. default ) )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( true ) )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. assertthat ( true ) )

************

************
tgt: org . junit . assert . assertnotnull ( tlspolicy )
[0]: org. junit. assert. assertequals ( true, result )
[1]: org. junit. assert. asserttrue ( ribcontent. isequalto ( outfilecontent ) )
[2]: org. junit. assert. asserttrue ( ribtest. isequalto ( outfilecontent ) )
[3]: org. junit. assert. asserttrue ( ribcontent. matches ( outfilecontent ) )
[4]: org. junit. assert. asserttrue ( ribtest ( outfilecontent ) )

************

************
tgt: org . junit . assert . assertequals ( "test" , echo . echo ( "test" ) )
[0]: org. junit. assert. asserttrue ( ribvalue. isequalto ( outfilecontent ) )
[1]: org. junit. assert. assertequals ( 1, partitioncontext. asmap ( ). size ( ) )
[2]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( ), partitioncontext. asmap ( ) )
[3]: org. junit. assert. assertequals ( com. google. common. collect. immutablemap. of ( ), partitioncontext. asmap ( ) )
[4]: org. junit. assert. assertequals ( 0, partitioncontext. asmap ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( wallet , state . getminecraftwallet ( ) , 0 )
[0]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( ), partitioncontext )
[1]: org. junit. assert. asserttrue ( java. util. arrays. equals ( value1. tostring ( ), value2. tostring ( ) ) )
[2]: org. junit. assert. asserttrue ( java. util. arrays. equals ( value1. equals ( value2. serialize ( ), value1 ) ) )
[3]: org. junit. assert. asserttrue ( java. util. arrays. equals ( value1, value2 ) )
[4]: org. junit. assert. asserttrue ( equals ( value1, value2 ) )

************

************
tgt: org . junit . assert . assertequals ( "" , pico . getcomponent ( java . lang . string . class ) )
[0]: ) )
[1]: org. junit. assert. assertnull ( shouldnotexist )
[2]: org. junit. assert. assertequals ( null, shouldnotexist )
[3]: org. junit. assert. assertnotnull ( shouldnotexist )
[4]: get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ex instanceof org . talend . esb . auxiliary . storage . common . exception . objectnotfoundexception ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, result )
[2]: org. junit. assert. assertnull ( this. component. removecollaborator ( this. entity, collaborator ) )
[3]: org. junit. assert. assertequals ( 0, this. component. removecollaborator ( this. entity, collaborator ) )
[4]: org. junit. assert. asserttrue ( this. component. removecollaborator ( this. entity, collaborator ) )

************

************
tgt: org . junit . assert . assertequals ( setexpected [ x ] , setactual . contains ( x ) )
[0]: org. junit. assert. assertnotnull ( this. component. removecollaborator ( this. entity, collaborator ) )
[1]: org. junit. assert. assertequals ( 1, this. component. removecollaborator ( this. entity, collaborator ) )
[2]: org. junit. assert. assertnotnull ( config )
[3]: org. junit. assert. assertequals ( properties, config )
[4]: org. junit. assert. assertnotnull ( properties )

************

************
tgt: org . junit . assert . assertarrayequals ( new byte [ 0 ] , result . build ( ) . tobytearray ( ) )
[0]: org. junit. assert. assertnotnull ( config. get ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( activetestsessions. findsessionbyinternalkey ( testsession. getid ( ) ) )
[3]: org. junit. assert. assertnull ( activetestsessions. findsessionbyinternalkey ( testsession. getid ( ) ) )
[4]: org. junit. assert. assertnull ( activetestsessions. findsessionbyinternalkey ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( allergypage . getallergen ( ) . contains ( org . openmrs . reference . addnewallergytest . drug_name ) )
[0]: org. junit. assert. assertnotnull ( activetestsessions. findsessionbyinternalkey ( testsession. tostring ( ) ) )
[1]: org. junit. assert. assertnotnull ( activetestsessions. findsessionbyinternalkey ( null ) )
[2]: org. junit. assert. assertequals ( true, failedasexpected )
[3]: org. junit. assert. assertequals ( samlprop1, samlprop2 )
[4]: org. junit. assert. assertequals ( copprop1, samlprop2 )

************

************
tgt: org . junit . assert . assertequals ( 5 , a . getnumberoffields ( ) )
[0]: org. junit. assert. assertequals ( samlprop1, orgprop2 )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertnotnull ( ex. completed ( ) )
[4]: org. junit. assert. assertequals ( 1, ex. completed ( ) )

************

************
tgt: org . junit . assert . assertequals ( packet , p )
[0]: org. junit. assert. assertnull ( ex. completed ( ) )
[1]: org. junit. assert. assertnotnull ( result. completed ( ) )
[2]: org. junit. assert. assertequals ( 1, result. completed ( ) )
[3]: org. junit. assert. asserttrue ( value. equals ( value ) )
[4]: org. junit. assert. asserttrue ( ( ( value == ( i ) ) || ( value. equals ( i ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( true , ( ( resulta . compareto ( resultb ) ) < 0 ) )
[0]: org. junit. assert. asserttrue ( ( ( value == ( i ) ) && ( value. equals ( i ) ) ) )
[1]: org. junit. assert. asserttrue ( ( value == ( value. equals ( i ) ) ) )
[2]: org. junit. assert. asserttrue ( value. equals ( i ) )
[3]: org. junit. assert. assertequals ( itemnames, result )
[4]: org. junit. assert. assertequals ( itemnames, processed )

************

************
tgt: org . junit . assert . assertequals ( java . util . collections . singletonmap ( "hello" , "world" ) , target )
[0]: org. junit. assert. assertequals ( itemnames, expected )
[1]: org. junit. assert. assertequals ( itemnames, state )
[2]: org. junit. assert. assertequals ( itemnames, list )
[3]: org. junit. assert. assertarrayequals ( expectednames, list. toarray ( new java. lang. string [ 0 ] ) )
[4]: org. junit. assert. assertarrayequals ( expectednames, list. toarray ( java. lang. string [ 0 ] ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , messagelatch . getcount ( ) )
[0]: org. junit. assert. assertarrayequals ( expectednames, list. toarray ( expectednames ) )
[1]: org. junit. assert. assertarrayequals ( expectednames, list. toarray ( ) )
[2]: org. junit. assert. assertarrayequals ( expectednames )
[3]: org. junit. assert. assertequals ( 1, compare )
[4]: org. junit. assert. assertequals ( 1, clusternodelabels. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , tree . calculatedepth ( ) )
[0]: org. junit. assert. assertequals ( 1, nodelabelfsstore. resolve ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, nodelabelfsstore. size ( ) )
[2]: org. junit. assert. assertequals ( 1, nodeslabelfsstore. size ( ) )
[3]: org. junit. assert. assertequals ( 1, nodelabelfsstore. resolve ( ). length )
[4]: org. junit. assert. assertequals ( 1, getpageindex ( ) )

************

************
tgt: org . junit . assert . assertequals ( url , urlstring )
[0]: org. junit. assert. assertequals ( 1, obj. getpageindex ( ) )
[1]: org. junit. assert. assertequals ( 1, empty. getpageindex ( ) )
[2]: org. junit. assert. assertequals ( 1, dao. getpageindex ( ) )
[3]: org. junit. assert. assertequals ( 1, l. getpageindex ( ) )
[4]: org. junit. assert. assertequals ( 0, result. numfindings ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, result. numfindings ( ) )
[1]: org. junit. assert. asserttrue ( ( ls == 1.0 ) )
[2]: org. junit. assert. asserttrue ( ( e == 1.0 ) )
[3]: org. junit. assert. asserttrue ( ( ( _aa ) == 1.0 ) )
[4]: org. junit. assert. asserttrue ( ( e instanceof java. lang. double ) )

************

************
tgt: org . junit . assert . assertfalse ( validator . supports ( java . util . hashmap . class ) )
[0]: org. junit. assert. asserttrue ( ( e instanceof java. lang. integer ) )
[1]: org. junit. assert. assertequals ( 1, result. getsize ( ) )
[2]: org. junit. assert. assertequals ( 0, result. getsize ( ) )
[3]: org. junit. assert. assertequals ( 1l, result. getsize ( ) )
[4]: org. junit. assert. assertequals ( 1, results. getsize ( ) )

************

************
tgt: org . junit . assert . assertequals ( featurestate . disabled , featuredescriptor . getstate ( ) )
[0]: org. junit. assert. assertequals ( 3, result. getsize ( ) )
[1]: org. junit. assert. assertequals ( expected, oblong. getarea ( ). tostring ( ) )
[2]: org. junit. assert. assertequals ( expected, oblong. getarea ( ) )
[3]: org. junit. assert. assertequals ( expected, oblong. getarea ( ). getarea ( ) )
[4]: org. junit. assert. assertequals ( expected, oblong. getarea ( ). trim ( ) )

************

************
tgt: org . junit . assert . assertthat ( generatedjson , org . hamcrest . corematchers . is ( expectedjson ) )
[0]: org. junit. assert. assertnotnull ( oblong. getarea ( ) )
[1]: org. junit. assert. assertequals ( eventcount, count )
[2]: org. junit. assert. assertequals ( eventcount, results. size ( ) )
[3]: org. junit. assert. assertequals ( eventcount, retcount )
[4]: org. junit. assert. assertequals ( eventcount, testcount )

************

************
tgt: org . junit . assert . assertsame ( com . liferay . portal . kernel . nio . intraband . nonblocking . selectorintraband . class , intraband . getclass ( ) )
[0]: ( eventcount ) )
[1]: org. junit. assert. assertnotnull ( results )
[2]: org. junit. assert. assertequals ( 1, sortedset. getmutators ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), sortedset. getmutators ( ) )
[4]: org. junit. assert. assertequals ( 0, sortedset. getmutators ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expect , normcase )
[0]: org. junit. assert. assertnotnull ( sortedset. getmutators ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), sortedset. getmuters ( ) )
[2]: org. junit. assert. assertequals ( 1, numdimensions )
[3]: org. junit. assert. assertequals ( 0, numdimensions )
[4]: org. junit. assert. assertequals ( 1, linkstatemanager. getlinkstates ( ). size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new int [ ] { 0 , 0 , 3 , 3 } , f )
[0]: org. junit. assert. assertequals ( input, linkstatemanager. getlinkstates ( ) )
[1]: org. junit. assert. assertequals ( input, linkstatemanager. getlinkstates ( ). size ( ) )
[2]: org. junit. assert. assertequals ( input, linkstatemanager. getlinkstates ( ). get ( ) )
[3]: org. junit. assert. assertequals ( 0, linkstatemanager. getlinkstates ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . assertequals ( 1337 , this . configuration . gettslcacheexpirationtime ( ) )
[0]: org. junit. assert. assertequals ( modulehelper. projectid, result )
[1]: org. junit. assert. assertequals ( 0, result )
[2]: org. junit. assert. assertequals ( result, modulehelper. projectid )
[3]: org. junit. assert. assertequals ( result, modulehelper. count )
[4]: org. junit. assert. assertequals ( 1, store. schemaexists ( ) )

************

************
tgt: org . junit . assert . assertthat ( shapes . size ( ) , org . hamcrest . corematchers . is ( 2 ) )
[0]: org. junit. assert. assertequals ( 0, store. schemaexists ( ) )
[1]: org. junit. assert. assertequals ( null, store. schemaexists ( ) )
[2]: org. junit. assert. assertequals ( true, store. schemaexists ( ) )
[3]: org. junit. assert. assertequals ( false, store. schemaexists ( ) )
[4]: org. junit. assert. assertnull ( resultaat )

************

************
tgt: org . junit . assert . asserttrue ( ( ( dim1 . hashcode ( ) ) != ( dim2 . hashcode ( ) ) ) )
[0]: org. junit. assert. asserttrue ( resultaat. getmeldingen ( ). isempty ( ) )
[1]: org. junit. assert. assertsame ( resultaat, resultaat )
[2]: org. junit. assert. assertsame ( null, resultaat )
[3]: ) )
[4]: org. junit. assert. asserttrue ( parcelnumberwithcheckdigit. equals ( parcelnumberwithcheckdigit ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , files . length )
[0]: org. junit. assert. assertnull ( e. getmessage ( ) )
[1]: org. junit. assert. assertnull ( e )
[2]: org. junit. assert. assertnotnull ( e )
[3]: org. junit. assert. assertequals ( null, e )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( iframepage . enteriframe ( ) )
[0]: org. junit. assert. assertthat ( retrieved, org. hamcrest. matchers. is ( java. util. optional. empty ( ) ) )
[1]: org. junit. assert. assertthat ( retrieved, org. hamcrest. matchers. is ( workflow ) )
[2]: org. junit. assert. assertthat ( retrieved, org. hamcrest. matchers. is ( true ) )
[3]: org. junit. assert. assertthat ( retrieved )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 20 , f2 . getfield ( ) )
[0]: org. junit. assert. assertequals ( 1, namespaces. size ( ) )
[1]: org. junit. assert. assertequals ( 0, namespaces. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), namespaces )
[3]: org. junit. assert. assertequals ( 3, namespaces. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( handler instanceof com . kylenicholls . stash . parameterizedbuilds . eventhandlers . pushhandler ) )
[0]: org. junit. assert. assertnotnull ( v )
[1]: org. junit. assert. assertequals ( view, v )
[2]: org. junit. assert. assertnotnull ( v, v )
[3]: org. junit. assert. assertnotnull (v )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , lines . size ( ) )
[0]: org. junit. assert. assertequals ( inputstream, viewurlstreamprovider. readfrom ( null, ( ( java. lang. string ) ( null ) ), headers ) )
[1]: org. junit. assert. assertequals ( inputstream, viewurlstreamprovider. readfrom ( null, ( ( ( java. lang. string ) ( null ) ), headers ) )
[2]: org. junit. assert. assertequals ( inputstream, viewurlstreamprovider. readfrom ( ( ( java. lang. string ) ( null ) ), headers ) )
[3]: org. junit. assert. assertequals ( inputstream, viewurlstreamprovider. readfrom ( ""foo"", ( ( java. lang. string ) ( null ) ), headers ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . long . valueof ( 0 ) , account . getentityid ( ) )
[0]: org. junit. assert. assertequals ( true, retval )
[1]: org. junit. assert. assertequals ( interfacenames. tostring ( ), 2, interfacenames. size ( ) )
[2]: org. junit. assert. assertequals ( 0, boxes. isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, boxes. isempty ( ) )
[4]: org. junit. assert. assertequals ( true, boxes. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( entries , iterated )
[0]: org. junit. assert. assertequals ( false, boxes. isempty ( ) )
[1]: org. junit. assert. asserttrue ( boxes. isempty ( ) )
[2]: org. junit. assert. assertarrayequals ( expected, array )
[3]: org. junit. assert. assertequals ( expected, array )
[4]: org. junit. assert. assertarrayequals ( expected )

************

************
tgt: org . junit . assert . assertequals ( gpgconfig . gpgformat . openpgp , new org . eclipse . jgit . lib . gpgconfig ( c ) . getkeyformat ( ) )
[0]: org. junit. assert. assertarrayequals ( expected, arraylist )
[1]: 
[2]: org. junit. assert. assertequals ( 1, e. getnetworkviews ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, e. getnetworkviews ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, e. getnetworkviews ( ). length )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , actualresult )
[0]: org. junit. assert. assertequals ( 0, e. getnetworkviews ( ). length )
[1]: org. junit. assert. assertequals ( 1, e. getnetworkviews ( ). size ( )
[2]: org. junit. assert. assertequals ( o, cache. checknotnull ( o ) )
[3]: org. junit. assert. assertequals ( o, container. checknotnull ( o ) )
[4]: org. junit. assert. assertequals ( o, impl. checknotnull ( o ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertnotnull ( o. checknotnull ( o ) )
[1]: org. junit. assert. assertequals ( o, cache. checknotnull ( o. getclass ( ) ) )
[2]: org. junit. assert. assertequals ( 1, itc. size ( ) )
[3]: org. junit. assert. assertequals ( 0, itc. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( itc, triple1, triple2 ), itc. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 3, itc. size ( ) )
[1]: org. junit. assert. assertequals ( 1, itc2. size ( ) )
[2]: org. junit. assert. assertequals ( np. getnumberofmulticastdemands ( lowerlayer ), 1 )
[3]: org. junit. assert. assertequals ( np. getnumberofmulticastmulticastmulticastdemands ( lowerlayer ), 1 )
[4]: org. junit. assert. assertequals ( np. getnumberofmulticastmulticastmulticastmulticastdemands ( lowerlayer ), 1 )

************

************
tgt: org . junit . assert . asserttrue ( ( ( m1 . score ) > ( m2 . score ) ) )
[0]: org. junit. assert. assertequals ( np. getnumberofmulticastmulticastmulticastmulticastmulticastdemands ( lowerlayer ), 1 )
[1]: ) )
[2]: org. junit. assert. assertequals ( src, src2 )
[3]: org. junit. assert. assertequals ( source, src2 )
[4]: org. junit. assert. assertequals ( src, source2 )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( src. tostring ( ), src2 )
[1]: ) )
[2]: org. junit. assert. assertequals ( sos, cos )
[3]: org. junit. assert. assertnotnull ( cos )
[4]: org. junit. assert. assertnull ( cos )

************

************
tgt: org . junit . assert . asserttrue ( stores . contains ( gfs . getfilestore ( ) ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertfalse ( failed )
[3]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )
[4]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , inputstream . read ( new byte [ 1 ] , 0 , 1 ) )
[0]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. content ( ) )
[1]: org. junit. assert. assertnull ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )
[2]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. getid ( ) )
[3]: org. junit. assert. assertequals ( null, context. getremoteaddr ( ) )
[4]: org. junit. assert. assertequals ( true, context. getremoteaddr ( ) )

************

************
tgt: org . junit . assert . assertnull ( array )
[0]: org. junit. assert. assertequals ( false, context. getremoteaddr ( ) )
[1]: org. junit. assert. assertequals ( 1, context. getremoteaddr ( ) )
[2]: org. junit. assert. assertequals ( nil, context. getremoteaddr ( ) )
[3]: org. junit. assert. assertequals ( 1, policies. length )
[4]: org. junit. assert. assertarrayequals ( expected, inferred. gettype ( ). toarray ( ) )

************

************
tgt: org . junit . assert . assertequals ( actual , expected )
[0]: org. junit. assert. assertarrayequals ( expected. getbytes ( ), inferred. getbytes ( ) )
[1]: org. junit. assert. assertarrayequals ( expected, inferred. gettype ( ). getbytes ( ) )
[2]: org. junit. assert. assertequals ( expected, inferred )
[3]: org. junit. assert. assertarrayequals ( expected, inferred )
[4]: org. junit. assert. asserttrue ( policy. isresponsecacheable ( request, response ) )

************

************
tgt: org . junit . assert . assertthat ( pdxreaderpropertyaccessor . instance . canwrite ( null , null , null ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. asserttrue ( isresponsecacheable ( request, response ) )
[1]: org. junit. assert. asserttrue ( policy. isresponsecacheable ( response, response ) )
[2]: org. junit. assert. asserttrue ( isresponsecacheable ( response, response ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertnull ( bericht )
[0]: org. junit. assert. assertequals ( null, e )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. asserttrue ( ( e == null ) )
[3]: org. junit. assert. assertequals ( 1, fetchcount ( ) )
[4]: org. junit. assert. assertequals ( 0, fetchcount ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, credit. fetchcount ( )
[1]: org. junit. assert. assertequals ( 0, credit. fetchcount ( )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, query. evaluate ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, query. evaluate ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( e . getcause ( ) ) instanceof java . lang . unsupportedoperationexception ) )
[0]: org. junit. assert. assertequals ( 100, query. evaluate ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 100, query. evaluate ( ) )
[2]: org. junit. assert. assertequals ( 0, query. evaluate ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, objects. size ( ) )
[4]: org. junit. assert. assertequals ( 0, objects. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( rs . next ( ) )
[0]: org. junit. assert. assertequals ( null, shell1. gettext ( ) )
[1]: org. junit. assert. assertnotnull ( shell1. gettext ( ) )
[2]: org. junit. assert. assertequals ( 1, shell1. gettext ( ). length )
[3]: org. junit. assert. assertequals ( 0, shell1. gettext ( ). length )
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( worldname , result )
[0]: org. junit. assert. asserttrue ( redis. clientlist ( ). contains ( java. util. collections. emptylist ( ) ) )
[1]: org. junit. assert. asserttrue ( redis. clientlist ( ). contains ( org. mockito. mockito. mock ( ) ) )
[2]: org. junit. assert. asserttrue ( redis. clientlist ( ). contains ( org. junit. assert. assertnotnull ( clientlist ( ) )
[3]: org. junit. assert. assertnotnull ( clientlist ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( ( - 1.0 ) , e . evaluate ( ) , 0.0 )
[0]: org. junit. assert. asserttrue ( eventbusservice. isallowlateregistration ( ) )
[1]: org. junit. assert. assertequals ( true, eventbusservice. isallowlateregistration ( ) )
[2]: org. junit. assert. assertnotnull ( eventbusservice. isallowlateregistration ( ) )
[3]: org. junit. assert. assertequals ( 1, eventbusservice. isallowlateregistration ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( new nl. jqno. equalsverifier. internal. prefabvalues. typetag ( java. lang. string. class ), actual )
[1]: org. junit. assert. assertequals ( new nl. jqno. equalsverifier. internal. prefabvalues. typetag ( java. lang. string [ ]. class ), actual )
[2]: org. junit. assert. assertnotnull ( actual )
[3]: org. junit. assert. assertnull ( actual )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . long ( long . max_value ) , request . gettimetolivems ( ) )
[0]: org. junit. assert. assertequals ( css2, csscopy )
[1]: org. junit. assert. assertnotnull ( modulenewname )
[2]: org. junit. assert. assertequals ( module, modulenewname )
[3]: org. junit. assert. assertequals ( modulenewname, modulenewname )
[4]: org. junit. assert. assertequals ( guice guiceenewname, modulenewname )

************

************
tgt: org . junit . assert . assertequals ( expected . tostring ( ) , actual . tostring ( ) )
[0]: org. junit. assert. assertequals ( guicestate, modulenewname )
[1]: org. junit. assert. assertnotnull ( toggle. getcollapsibletoggle ( ) )
[2]: org. junit. assert. assertequals ( group, toggle. getcollapsibletoggle ( ) )
[3]: org. junit. assert. assertsame ( group, toggle. getcollapsibletoggle ( ) )
[4]: org. junit. assert. assertnull ( toggle. getcollapsibletoggle ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , count )
[0]: org. junit. assert. asserttrue ( toggle. getcollapsibletoggle ( ). isempty ( ) )
[1]: org. junit. assert. assertequals ( 0, mr. read ( ) )
[2]: org. junit. assert. assertequals ( 1, mr. read ( ) )
[3]: org. junit. assert. assertequals ( 5, mr. read ( ) )
[4]: org. junit. assert. assertnotnull ( mr. read ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( result instanceof org . w3c . dom . nodelist ) )
[0]: ) )
[1]: org. junit. assert. assertfalse ( hook. isrunning ( ) )
[2]: org. junit. assert. asserttrue ( hook. isrunning ( ) )
[3]: org. junit. assert. assertfalse ( listener. isrunning ( ) )
[4]: org. junit. assert. assertfalse ( repo. isrunning ( ) )

************

************
tgt: org . junit . assert . assertequals ( expect , expect , actual )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( directory )
[2]: org. junit. assert. assertequals ( 1, directory. length ( ) )
[3]: org. junit. assert. assertnull ( route )
[4]: org. junit. assert. assertnotnull ( json )

************

************
tgt: org . junit . assert . assertequals ( expected , params )
[0]: org. junit. assert. asserttrue ( true )
[1]: org. junit. assert. assertnotnull ( url )
[2]: org. junit. assert. assertnotnull ( true )
[3]: )
[4]: org. junit. assert. assertequals ( 1, tuples. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( 0, tuples. size ( ) )
[1]: org. junit. assert. assertequals ( 3, tuples. size ( ) )
[2]: org. junit. assert. assertequals ( 2, tuples. size ( ) )
[3]: org. junit. assert. assertequals ( expectedmatchableentity, actualmatchableentity )
[4]: org. junit. assert. assertequals ( actualmatchableentity, expectedmatchableentity )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . size ( ) )
[0]: org. junit. assert. assertequals ( expectedmatchableentity, actualmatchbleentity )
[1]: org. junit. assert. assertequals ( expectedmatchableentity, actualmatcherentity )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, endpointlistener. getnumremoves ( ) )
[4]: org. junit. assert. assertnotnull ( a. getguaranteeterms ( ) )

************

************
tgt: org . junit . assert . assertequals ( 21 , counter . counter )
[0]: org. junit. assert. assertequals ( now, a. getguaranteeterms ( ) )
[1]: org. junit. assert. assertnotnull ( a. getentryaranteeterms ( ) )
[2]: org. junit. assert. assertnotnull ( a. data. getguaranteeterms ( ) )
[3]: org. junit. assert. assertnotnull ( a. xmaranteeterms ( ) )
[4]: org. junit. assert. assertequals ( 1, ase. geterrorcode ( ) )

************

************
tgt: org . junit . assert . asserttrue ( future . isdone ( ) )
[0]: org. junit. assert. assertequals ( 0, ase. geterrorcode ( ) )
[1]: org. junit. assert. assertnotnull ( ase. geterrorcode ( ) )
[2]: org. junit. assert. assertequals ( 5, ase. geterrorcode ( ) )
[3]: org. junit. assert. assertequals ( 3, ase. geterrorcode ( ) )
[4]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml. storageunitnotificationregistration ( resultstorageunitnotificationregistration. getid ( ), notificationregistrationkey, notificationeventtypeentity. eventtypesstorageunit. strge_unit_stts_chg. name ( ), new org. finra. herd. model. api. xml. storageunitnotificationfilter ( bdef_namespace_2, bdef_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( org. finra. herd. model. jpa. notificationregistrationstatusentity. enabled ), resultstorageunitnotificationregistration )

************

************
tgt: org . junit . assert . assertfalse ( iter . hasnext ( ) )
[0]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml. storageunitnotificationregistration ( resultstorageunitnotificationregistration. getid ( ), notificationregistrationkey, notificationeventtypeentity. eventtypesstorageunit. strge_unit_stts_chg. name ( ), new org. finra. herd. model. api. xml. storageunitnotificationfilter ( bdef_namespace_2, bdef_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, storage_name_2 ) ), org. finra. herd. model. jpa. notificationregistrationstatusentity. enabled ), resultstorageunitnotificationregistration )
[1]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml. storageunitnotificationregistration ( resultstorageunitnotificationregistration. getid ( ), notificationregistrationkey, notificationeventtypeentity. eventtypesstorageunit. strge_unit_stts_chg. name ( ), new org. finra. herd. model. api. xml. storageunitnotificationfilter ( bdef_namespace_2, bdef_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_
[2]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml. storageunitnotificationregistration ( resultstorageunitnotificationregistration. getid ( ), notificationregistrationkey, notificationeventtypeentity. eventtypesstorageunit. strge_unit_stts_chg. name ( ), new org. finra. herd. model. api. xml. storageunitnotificationfilter ( bdef_namespace_2, bdef_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, format_usage_code_2, format_file_type_code
[3]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml. storageunitnotificationregistration ( resultstorageunitnotificationregistration. getid ( ), notificationregistrationkey, notificationeventtypeentity. eventtypesstorageunit. strge_unit_stts_chg. name ( ), new org. finra. herd. model. api. xml. storageunitnotificationfilter ( bdef_namespace_2, bdef_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, format_usage_code_2, format_file_type_code_2, format_version_2, storage_name_2, storage_unit_status_3, no_storage_unit_status ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( job_namespace_2, job_name_2, storage_name_2, storage_unit_status_3, no_
[4]: org. junit. assert. asserttrue ( fs. deleteonexit ( path ) )

************

************
tgt: org . junit . assert . assertequals ( comp , array )
[0]: org. junit. assert. assertnotnull ( exception. getmessage ( ) )
[1]: org. junit. assert. assertequals ( exception. getmessage ( ), null )
[2]: org. junit. assert. assertequals ( exception. getmessage ( ), exception. getmessage ( ) )
[3]: org. junit. assert. assertequals ( null, exception. getmessage ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( new org . finra . herd . model . api . xml . relationaltableregistrationcreaterequest ( bdef_namespace , bdef_name , bdef_display_name , format_usage_code , data_provider_name , relational_schema_name , relational_table_name , storage_name ) , relationaltableregistrationcreaterequest )
[0]: org. junit. assert. assertnotnull ( users )
[1]: org. junit. assert. assertnull ( users )
[2]: org. junit. assert. assertequals ( 1, users. length )
[3]: org. junit. assert. assertequals ( 1, users. size ( )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( keyexists )
[0]: org. junit. assert. asserttrue ( internalexecutableimpltest. canrunintransaction ( ) )
[1]: org. junit. assert. assertequals ( 0, changednodes. get ( ) )
[2]: org. junit. assert. assertequals ( com. google. common. collect. immutablelist. of ( ), createqualifieddayofweek ( mock ( org. pentaho. platform. plugin. services. importexport. exportmanifest. bindings. qualifieddayofweek. class ) ) )
[3]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( ), createqualifieddayofweek ( mock ( org. pentaho. platform. plugin. services. importexport. exportmanifest. bindings. qualifieddayofweek. class ) ) )
[4]: org. junit. assert. assertequals ( 1, createqualifieddayofweek ( mock ( org. pentaho. platform. plugin. services. importexport. exportmanifest. bindings. qualifieddayofweek. class ) ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( custompaneldef . getparts ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, createqualifieddayofweek ( mock ( org. pentaho. platform. plugin. services. importexport. exportmanifest. bindings. qualifieddayofweek. class ) ). size ( ) )
[1]: org. junit. assert. assertequals ( com. google. common. collect. immutablelist. of ( ), createqualifieddayofweek ( mock ( org. pentaho. platform. plugin. services. importexport. exportmanifest. bindings. qualifieddayofweek ) ) )
[2]: org. junit. assert. assertthat ( results. next ( ), is ( true ) )
[3]: org. junit. assert. assertthat ( allkeysin ( result ). isempty ( ), org. hamcrest. corematchers. is ( true ) )
[4]: org. junit. assert. assertthat ( allkeysin ( result ), org. hamcrest. corematchers. is ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , messagelatch . getcount ( ) )
[0]: org. junit. assert. assertthat ( allkeysin ( subject ). isempty ( ), org. hamcrest. corematchers. is ( true ) )
[1]: org. junit. assert. assertthat ( allkeysin ( result ), org. hamcrest. corematchers. is ( 0l ) )
[2]: org. junit. assert. assertthat ( allkeysin ( result ). isempty ( ), org. hamcrest. corematchers. is ( false ) )
[3]: org. junit. assert. assertnotnull ( element )
[4]: org. junit. assert. assertequals ( 1, merchantaccounts. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . google . common . collect . immutablemap . of ( "x" , "x_val" , "y" , "x_val" ) , d )
[0]: org. junit. assert. assertequals ( 0, merchantaccounts. size ( ) )
[1]: org. junit. assert. assertequals ( 2, merchantaccounts. size ( ) )
[2]: org. junit. assert. assertequals ( 8, merchantaccounts. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( paramvalue, info. novatec. testit. livingdoc. confluence. utils. macroparametersutils. extractparameter ( commerc, paramvalue ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , ret_val )
[0]: org. junit. assert. assertnotnull ( info. novatec. testit. livingdoc. confluence. utils. macroparametersutils. extractparameter ( paramvalue, parameters ) )
[1]: org. junit. assert. assertequals ( paramvalue, info. novatec. testit. livingdoc. confluence. utils. macroparametersutils. extractparameter ( paramvalue, parameters ) )
[2]: org. junit. assert. assertequals ( paramvalue, info. novatec. testit. livingdoc. confluence. utils. macroparametersutils. extractparameter ( commerc, param ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( aeprovider )

************

************
tgt: org . junit . assert . assertequals ( change , updatedchange )
[0]: org. junit. assert. assertequals ( aeprovider, org. apache. lucene. analysis. uima. ae. aeproviderfactory. getinstance ( ) )
[1]: org. junit. assert. asserttrue ( ( aeprovider == ( org. apache. lucene. analysis. uima. ae. aeproviderfactory. getinstance ( ) ) ) )
[2]: org. junit. assert. asserttrue ( ( aeprovider instanceof org. apache. lucene. analysis. uima. ae. aeproviderfactory ) )
[3]: org. junit. assert. assertnotnull ( aeprovider. getinstance ( ) )
[4]: org. junit. assert. assertthat ( f2. tostring ( ), is ( f3. tostring ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( docs . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertthat ( f2. tostring ( ), f3. exists ( ), is ( true ) )
[1]: org. junit. assert. assertthat ( f1. tostring ( ), is ( f2. tostring ( ) ) )
[2]: .. tostring ( ) )
[3]: . tostring ( ) )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( "retry<sp>this<sp>operation" , ex . getmessage ( ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: , result )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, dto. getwarehouseid ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , doc . title ( ) )
[0]: org. junit. assert. assertequals ( 1, dto. getwarehouseid ( ) )
[1]: org. junit. assert. assertequals ( 0, dto. getwarehouseid ( ). size ( ) )
[2]: org. junit. assert. assertequals ( org. gs. collections. impl. list. mutable. fastlist. newlist ( ), e )
[3]: org. junit. assert. assertnotnull ( e )
[4]: org. junit. assert. assertequals ( org. gs. collections. impl. list. mutable. fastlist. emptylist ( ), e )

************

************
tgt: org . junit . assert . asserttrue ( cm1 . equals ( cm2 ) )
[0]: org. junit. assert. assertequals ( org. gs. collections. impl. parallel. fastlist. class, e. getclass ( ) )
[1]: org. junit. assert. assertequals ( org. gs. collections. impl. list. mutable. fastlist. empty ( ), e )
[2]: org. junit. assert. assertequals ( 1, andoraffectrow )
[3]: org. junit. assert. assertequals ( 0, andoraffectrow )
[4]: org. junit. assert. assertequals ( mysqlaffectrow )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( mysqlaffectrow + 1 )
[1]: org. junit. assert. assertequals ( mysqlaffectrow + 1l )
[2]: org. junit. assert. asserttrue ( result )
[3]: org. junit. assert. assertequals ( true, result )
[4]: org. junit. assert. assertthat ( migrationzipfile. isvalidchecksum ( ), org. hamcrest. matchers. is ( false ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 1, org. apache. commons. collections4. functors. nullisexceptionpredicate. nullisexceptionpredicate ( org. apache. commons. collections4. truepredicate. class ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, org. apache. commons. collections4. functors. nullisexceptionpredicate. nullisexceptionpredicate ( null ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, org. apache. commons. collections4. functors. nullisexceptionpredicate. nullisexceptionpredicate ( org. apache. commons. collections4. truepredicate. null ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, org. apache. commons. collections4. functors. nullisexceptionpredicate. nullisexceptionpredicate ( null ). size ( ) )
[4]: type ) )

************

************
tgt: org . junit . assert . assertfalse ( this . processor . addreceivedline ( line1 ) )
[0]: org. junit. assert. assertnotnull ( server )
[1]: org. junit. assert. assertequals ( 1, server. pick ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( server. pick ( ) )
[3]: org. junit. assert. assertequals ( 1, server. select ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, server. list ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . long . valueof ( 1l ) , java . lang . long . valueof ( count ) )
[0]: org. junit. assert. assertequals ( expected, bytes. parselong ( expected ) )
[1]: org. junit. assert. assertequals ( expected, bytes. parselong ( bytes ) )
[2]: org. junit. assert. assertequals ( expected, java. lang. string. parselong ( bytes ) )
[3]: org. junit. assert. assertequals ( expected, bytes. parselong ( test ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , fs . getcurrentindex ( ) )
[0]: org. junit. assert. asserttrue ( computer. isacceptingtasks ( ) )
[1]: org. junit. assert. asserttrue ( allevents. isempty ( ) )
[2]: org. junit. assert. assertfalse ( allevents. isempty ( ) )
[3]: org. junit. assert. assertequals ( true, allevents. isempty ( ) )
[4]: org. junit. assert. assertequals ( allevents. isempty ( ), true )

************

************
tgt: org . junit . assert . assertequals ( 1 , ksession . fireallrules ( ) )
[0]: org. junit. assert. assertequals ( allevents. isempty ( ), false )
[1]: org. junit. assert. assertequals ( 1, person. getitems ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, person. getitems ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), writer. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), writer. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( null , subject . execute ( parameters ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), output. tostring ( ) )
[1]: org. junit. assert. assertequals ( null, writer. tostring ( ) )
[2]: output ( ) )
[3]: org. junit. assert. assertequals ( 0, list. size ( ) )
[4]: org. junit. assert. assertnotnull ( list )

************

************
tgt: org . junit . assert . assertthat ( newset , org . hamcrest . corematchers . is ( set ) )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertthat ( event. getmdc ( ), org. hamcrest. core. is. is ( mdc ) )
[4]: org. junit. assert. assertthat ( event. getmdc ( ), org. hamcrest. core. is. is ( mdc. get ( ) ) )

************

************
tgt: org . junit . assert . assertfalse ( connectfuture . isconnected ( ) )
[0]: org. junit. assert. assertthat ( event. getmdc ( ), org. hamcrest. core. is. is ( mdc. size ( ) ) )
[1]: org. junit. assert. assertequals ( mdc, event. getmdc ( ) )
[2]: org. junit. assert. assertequals ( mdc. getmdc ( ), event. getmdc ( ) )
[3]: org. junit. assert. assertequals ( 1, observer. getnews ( ) )
[4]: org. junit. assert. assertequals ( 0, observer. getnews ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( hashcode == ( firstentity . hashcode ( ) ) ) )
[0]: org. junit. assert. assertequals ( null, observer. getnews ( ) )
[1]: org. junit. assert. assertequals ( 1, observer. getnews ( ). length )
[2]: org. junit. assert. assertequals ( 0, observer. getnews ( ). length )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( region . global , region )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( result, null )
[2]: org. junit. assert. assertequals ( result, 1 )
[3]: org. junit. assert. assertequals ( 1, header. getauthlength ( ) )
[4]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { }, cols )

************

************
tgt: org . junit . assert . assertequals ( pubmessageatbroker . getmessageid ( ) , pubackatbroker . getmessageid ( ) )
[0]: org. junit. assert. assertarrayequals ( cols, defaultcase )
[1]: org. junit. assert. assertarrayequals ( cols, defaultcase. length )
[2]: org. junit. assert. assertarrayequals ( cols, defaultcase. getbytes ( ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, cfis. available ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , actual )
[0]: org. junit. assert. assertequals ( testdata, cfis. available ( ) )
[1]: org. junit. assert. assertequals ( 0, cfis. available ( ) )
[2]: org. junit. assert. assertequals ( testdata. length, cfis. available ( )
[3]: ) )
[4]: org. junit. assert. assertsame ( result, calendarera1. getname ( ) )

************

************
tgt: org . junit . assert . assertfalse ( r . ismatch ( request ) )
[0]: org. junit. assert. assertnull ( calendarera1. getname ( ) )
[1]: org. junit. assert. assertequals ( result, calendarera1. getname ( ) )
[2]: org. junit. assert. asserttrue ( calendarera1. getname ( ). equals ( result ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertequals ( 22 , sumipv4prefixes ( ipvxprefixes ) )
[0]: org. junit. assert. assertequals ( result, 0 )
[1]: org. junit. assert. assertequals ( result, 1 )
[2]: org. junit. assert. assertequals ( 0, result )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: , result )

************

************
tgt: org . junit . assert . assertequals ( org . opendaylight . protocol . bgp . rib . spi . ribsupporttest . path_id_qname , this . ribsupporttestimp . pathidqname ( ) )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. is ( callable ) )
[1]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. is ( string ) )
[2]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. is ( null ) )
[3]: org. junit. assert. assertthat ( result, is ( string ) )
[4]: org. junit. assert. assertthat ( result, is ( null ) )

************

************
tgt: org . junit . assert . assertfalse ( policy . isresponsecacheable ( request , response ) )
[0]: org. junit. assert. assertequals ( expected, got )
[1]: org. junit. assert. assertequals ( expected, got, null )
[2]: org. junit. assert. assertequals ( expected, got, expected )
[3]: org. junit. assert. assertequals ( expected, got )
[4]: org. junit. assert. assertequals ( expected, got, 0 )

************

************
tgt: org . junit . assert . assertthat ( count ( ) , org . hamcrest . corematchers . is ( ( before + 1 ) ) )
[0]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( java. util. collections. emptylist ( ) ) )
[1]: org. junit. assert. assertthat ( result. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[2]: org. junit. assert. assertthat ( result. isempty ( ), org. hamcrest. corematchers. is ( true ) )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. contains ( start, end ) )
[4]: org. junit. assert. assertthat ( result )

************

************
tgt: org . junit . assert . assertthat ( b , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( ( ( byte ) ( - 1 ) ) ) ) )
[0]: org. junit. assert. assertequals ( 1, testvalue. value ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( testvalue. value ( ) )
[2]: org. junit. assert. assertequals ( 1, testvalue. value ( ) )
[3]: org. junit. assert. assertequals ( 0, testvalue. value ( ). size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( host )
[0]: org. junit. assert. assertequals ( id1, org. eclipse. jgit. lfs. lib. longobjectid. fromraw ( buf, 0 ) )
[1]: org. junit. assert. assertequals ( id1, org. eclipse. jgit. lfs. lib. longobjectid. fromraw ( buf, 1 ) )
[2]: org. junit. assert. assertequals ( id1, org. eclipse. jgit. lfs. lib. longobjectid. fromraw ( buf, 8 ) )
[3]: org. junit. assert. assertequals ( id1, org. eclipse. jgit. lfs. lib. longobjectid. fromraw ( buf, 16 ) )
[4]: org. junit. assert. assertnotnull ( id1. fromraw ( buf, 0 ) )

************

************
tgt: org . junit . assert . assertequals ( "palhoça" , retornoconsultacadastroendereco . getdescricaomunicipio ( ) )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertequals ( 1, events. size ( ) )
[2]: org. junit. assert. assertnotnull ( onflow )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, onflow. length )

************

************
tgt: org . junit . assert . assertequals ( 10 , overlay . getinset ( ) )
[0]: org. junit. assert. assertequals ( 1, cache. size ( ) )
[1]: org. junit. assert. assertfalse ( wrapper. getboolean ( ) )
[2]: org. junit. assert. assertequals ( url, result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertthat ( query . count ( ) , org . hamcrest . corematchers . is ( 0l ) )
[0]: org. junit. assert. assertequals ( base, result )
[1]: org. junit. assert. assertequals ( result, url )
[2]: org. junit. assert. assertfalse ( builder. isinbufferactive ( null ) )
[3]: org. junit. assert. assertfalse ( builder. isinbufferactive ( new java. lang. object ( ) ) )
[4]: org. junit. assert. asserttrue ( builder. isinbufferactive ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( success )
[0]: org. junit. assert. assertfalse ( builder. isinbufferactive ( 0 ) )
[1]: org. junit. assert. assertfalse ( builder. isinbufferactive ( new "<. lang. object ( ) ) )
[2]: org. junit. assert. assertequals ( 1, response. getheaders ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, entity. getversion ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, entity. getversion ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( expected ) )
[0]: org. junit. assert. assertequals ( 0, entity. getversion ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, entity. getversion ( ). length )
[2]: org. junit. assert. assertnotnull ( entity. getversion ( ) )
[3]: org. junit. assert. assertequals ( 1, counter. getnow ( ) )
[4]: org. junit. assert. assertequals ( 3, counter. getnow ( ) )

************

************
tgt: org . junit . assert . asserttrue ( pojo . getbooleanattr ( ) )
[0]: org. junit. assert. assertequals ( 0, counter. getnow ( ) )
[1]: org. junit. assert. assertequals ( 2, counter. getnow ( ) )
[2]: org. junit. assert. asserttrue ( counter. getnow ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), result )

************

************
tgt: org . junit . assert . assertequals ( expected . tostring ( ) , result . tostring ( ) . trim ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), result )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( expected ), result )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( results ), result )
[3]: org. junit. assert. assertnotnull ( uritools. endswith ( uuidpath ) )
[4]: org. junit. assert. assertnotnull ( uuidpath )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( uripath )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 1, avg, 0 )
[4]: org. junit. assert. assertequals ( 0.0, avg, 0.0 )

************

************
tgt: org . junit . assert . assertequals ( val , data [ i ] )
[0]: org. junit. assert. assertequals ( 0, avg, 0.0 )
[1]: org. junit. assert. assertequals ( 1, avg, 0.0 )
[2]: org. junit. assert. assertequals ( 0, avg, 0 )
[3]: org. junit. assert. assertequals ( 1, doc. title ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, doc. title ( ) )

************

************
tgt: org . junit . assert . assertfalse ( ss . validate ( ) )
[0]: org. junit. assert. assertequals ( 1, doc. title ( ). length )
[1]: org. junit. assert. assertequals ( 1, doc. title ( ). length ( ) )
[2]: org. junit. assert. assertequals ( 0, doc. title ( ). size ( ) )
[3]: org. junit. assert. asserttrue ( equeue. isempty ( ) )
[4]: org. junit. assert. assertfalse ( equeue. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , allclasses . size ( ) )
[0]: org. junit. assert. assertequals ( 1, equeue. isempty ( ) )
[1]: org. junit. assert. assertequals ( true, equeue. isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, equeue. isempty ( ) )
[3]: org. junit. assert. assertnotnull ( object )
[4]: org. junit. assert. assertequals ( 3, object )

************

************
tgt: org . junit . assert . assertequals ( trackedones . tostring ( ) , 1 , trackedones . size ( ) )
[0]: org. junit. assert. assertequals ( new java. lang. integer ( 3 ), object )
[1]: org. junit. assert. assertequals ( 3, ( ( int ) ( object ) ) )
[2]: org. junit. assert. assertequals ( object, 3 )
[3]: org. junit. assert. assertequals ( vxlong, vxlong1. getvalue ( ) )
[4]: org. junit. assert. assertnotnull ( vxlong1. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedvalue , actualvalue )
[0]: org. junit. assert. assertequals ( vxlong. getvalue ( ), vxlong1 )
[1]: org. junit. assert. assertequals ( vxlong, vxlong1 )
[2]: ) )
[3]: org. junit. assert. assertequals ( configuration, binding. getconfiguration ( ) )
[4]: org. junit. assert. assertequals ( nrun, j )

************

************
tgt: org . junit . assert . assertequals ( c1 , c2 )
[0]: org. junit. assert. assertequals ( nrun, j.offers ( ) )
[1]: org. junit. assert. assertequals ( nrun, j. size ( ) )
[2]: org. junit. assert. assertequals ( nrun, j. getid ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertequals ( "" , out . tostring ( ) )
[0]: org. junit. assert. assertequals ( 3, results. getresultsize ( ), 10 )
[1]: org. junit. assert. assertequals ( 4, results. getresultsize ( ), 10 )
[2]: org. junit. assert. assertequals ( 4, results. getresultsize ( ) )
[3]: org. junit. assert. assertequals ( 3, results. getresultsize ( ) )
[4]: org. junit. assert. assertequals ( 200, results. getresultsize ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected . next ( ) , testing . next ( ) )
[0]: org. junit. assert. assertequals ( 1, hits. size ( ) )
[1]: org. junit. assert. asserttrue ( s. contains ( s ) )
[2]: org. junit. assert. asserttrue ( s. contains ( s. tostring ( ) ) )
[3]: org. junit. assert. asserttrue ( s. contains ( s. size ( ) ) )
[4]: org. junit. assert. asserttrue ( s. contains ( s. iterator ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( libraryids . isempty ( ) )
[0]: org. junit. assert. asserttrue ( s )
[1]: org. junit. assert. assertnotnull ( samejob )
[2]: org. junit. assert. assertequals ( job, samejob )
[3]: org. junit. assert. assertequals ( null, samejob )
[4]: org. junit. assert. assertequals ( 1, samejob. getjobdetails ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( messageprocessingsequence . next ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( iterable. comparator ( ) )
[2]: org. junit. assert. assertequals ( 0, iterable. comparator ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 123, method. getinteger ( ) )
[4]: org. junit. assert. assertthat ( method. getinteger ( ), org. hamcrest. matchers. equalto ( 123 ) )

************

************
tgt: org . junit . assert . asserttrue ( whenisassetablebasemodel . isassetentryvisible ( basemodel , getassetclasspk ( basemodel ) ) )
[0]: org. junit. assert. assertthat ( method. getinteger ( ), org. hamcrest. matchers. is ( 123 ) )
[1]: org. junit. assert. assertthat ( method. getinteger ( ), org. hamcrest. matchers. equalto ( 124 ) )
[2]: org. junit. assert. assertthat ( method. getinteger ( ), org. hamcrest. matchers. equalto ( 144 ) )
[3]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. tabs. console. panel. messagetype. detect ( content ), messagetype. docker )
[4]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. tabs. console. panel. messagetype. detect ( content ), messagetype. docker. undefined )

************

************
tgt: org . junit . assert . assertequals ( expectedstring , jsonstring )
[0]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. tabs. console. panel. messagetype. detect ( content ), messagetype. docker )
[1]: org. junit. assert. assertequals ( null, org. eclipse. che. ide. ext. runner. client. tabs. console. panel. messagetype. detect ( content ) )
[2]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. tabs. console. panel. messagetype. detect ( content ), messagetype. docker. unknown )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertfalse ( presenter. isactivedecisiontableeditable ( ) )

************

************
tgt: org . junit . assert . asserttrue ( boundthings . isempty ( ) )
[0]: org. junit. assert. assertequals ( expectedreturnvalue, testsubject. gethomecommunityid ( ) )
[1]: org. junit. assert. assertsame ( expectedreturnvalue, testsubject. gethomecommunityid ( ) )
[2]: org. junit. assert. assertequals ( expectedreturnvalue, testsubject. gethomecommunid ( ) )
[3]: org. junit. assert. assertequals ( expectedreturnvalue, testssubject. gethomecommunityid ( ) )
[4]: org. junit. assert. assertequals ( expectedreturnvalue, testsubject )

************

************
tgt: org . junit . assert . assertequals ( 5 , optionallong , 0 )
[0]: org. junit. assert. assertequals ( 15, result )
[1]: org. junit. assert. assertnotnull ( timeinstant )
[2]: org. junit. assert. assertequals ( metadatasstr, timeinstant )
[3]: org. junit. assert. assertequals ( metadataasstr, timeinstant )
[4]: org. junit. assert. assertequals ( timeinstant, timeinstant )

************

************
tgt: org . junit . assert . assertequals ( expectedpayload , actualpayload )
[0]: ) )
[1]: org. junit. assert. assertequals ( result, null )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertthat ( representation . getname ( ) , org . hamcrest . corematchers . is ( "amount" ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( id ), simplified. tostring ( ) )
[2]: org. junit. assert. assertequals ( com. metabroadcast. atlas. glycerin. java. lang. string. valueof ( id ), simplified. get ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( simplified ), java. util. collections. singletonlist ( eventresolver ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( id ), simplified. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( testpublicid , resultpublicid )
[0]: org. junit. assert. assertequals ( com. metabroadcast. atlas. glycerin. java. lang. long. valueof ( id ), simplified. get ( ) )
[1]: org. junit. assert. assertnotnull ( cf. getfieldalias ( ) )
[2]: org. junit. assert. assertequals ( 1, cf. getfieldalias ( ) )
[3]: org. junit. assert. assertnull ( cf. getfieldalias ( ) )
[4]: type ) )

************

************
tgt: org . junit . assert . assertnotnull ( customer )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( trace. getdescription ( ) )
[2]: org. junit. assert. assertequals ( description, trace. getdescription ( ) )
[3]: org. junit. assert. assertequals ( null, trace. getdescription ( ) )
[4]: org. junit. assert. assertequals ( desc, trace. getdescription ( ) )

************

************
tgt: org . junit . assert . asserttrue ( obj2 . isvoid ( ) )
[0]: org. junit. assert. assertequals ( string, trace. getdescription ( ) )
[1]: org. junit. assert. assertfalse ( e. isetcderror ( 1 ) )
[2]: org. junit. assert. assertfalse ( e. isetcderror ( 0 ) )
[3]: org. junit. assert. assertfalse ( e. isetcderror ( key ) )
[4]: org. junit. assert. assertfalse ( e. isetcderror ( 100 ) )

************

************
tgt: org . junit . assert . assertequals ( padding , mroundedbitmapdrawable . getpadding ( ) , 0 )
[0]: ) )
[1]: org. junit. assert. assertfalse ( com. cedarsoftware. util. urlutilities. isnotexpired ( null ) )
[2]: org. junit. assert. asserttrue ( com. cedarsoftware. util. urlutilities. isnotexpired ( null ) )
[3]: org. junit. assert. assertnull ( com. cedarsoftware. util. urlutilities. isnotexpired ( null ) )
[4]: org. junit. assert. assertfalse ( com. cedarsoftware. util. urlsutilities. isnotexpired ( null ) )

************

************
tgt: org . junit . assert . assertequals ( "/genpath" , path )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 1, results. size ( ) )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( 1, result. length )

************

************
tgt: org . junit . assert . assertequals ( ( ( "\n" + sqltext ) + "\n" ) , expected , testutils . formattedresult . resultfactory . tostringunsorted ( rs ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( afterupdate ( null, null, null, null, null ) )
[2]: org. junit. assert. asserttrue ( afterupdate ( cache, null, null, null, null ) )
[3]: org. junit. assert. asserttrue ( afterupdate ( result, null, null, null, null ) )
[4]: _1 ) )

************

************
tgt: org . junit . assert . assertnull ( image . delete ( ) )
[0]: type ) )
[1]: org. junit. assert. assertequals ( expected, rotatetranslate )
[2]: org. junit. assert. assertequals ( expected, rotationatetranslate )
[3]: org. junit. assert. assertequals ( expected, rotateatetranslate )
[4]: org. junit. assert. assertequals ( rotateatetranslate, expected )

************

************
tgt: org . junit . assert . asserttrue ( org . openkilda . persistence . repositories . impl . neo4jflowrepositorytest . flowrepository . exists ( org . openkilda . persistence . repositories . impl . neo4jflowrepositorytest . test_flow_id ) )
[0]: org. junit. assert. assertequals ( expected, rotatetransinvert )
[1]: org. junit. assert. assertnotnull ( feed. gettargetclusteraction ( ) )
[2]: org. junit. assert. assertequals ( props, feed. gettargetclusteraction ( ) )
[3]: org. junit. assert. assertnull ( feed. gettargetclusteraction ( ) )
[4]: org. junit. assert. assertnotnull ( feed )

************

************
tgt: org . junit . assert . assertequals ( new com . flextrade . jfixture . nospecimen ( ) , result )
[0]: org. junit. assert. assertequals ( 1, feed. gettargetclusteraction ( ) )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. asserttrue ( repository. deletechannel ( ) )
[3]: org. junit. assert. asserttrue ( deletechannel ( ) )
[4]: org. junit. assert. asserttrue ( subject. deletechannel ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , new org . apache . logging . log4j . core . config . plugins . util . resolverutil ( ) . extractpath ( url ) )
[0]: org. junit. assert. asserttrue ( dao. deletechannel ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, v. getknownpaths ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), v. getknownpaths ( ) )
[4]: org. junit. assert. assertequals ( 0, v. getknownpaths ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( com. google. common. collect. sets. newhashset ( ), v )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, factors. size ( ) )
[3]: org. junit. assert. assertequals ( 0, factors. size ( ) )
[4]: org. junit. assert. assertequals ( i, factors. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( txchain )
[0]: org. junit. assert. assertequals ( 3, factors. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( groups. tostring ( ), 1, groups. size ( ) )
[3]: org. junit. assert. assertequals ( groups. tostring ( ), 2, groups. size ( ) )
[4]: org. junit. assert. assertequals ( groupparams. tostring ( ), groups. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( co . cask . coopr . test . client . rest . reactor_cluster_template , result )
[0]: org. junit. assert. assertequals ( java. util. arrays. tostring ( groupparams ), 2, groups. length )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, innerclass. value )
[3]: org. junit. assert. assertequals ( innerclass. value, innerclass. value )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 4 ), innerclass. value )

************

************
tgt: org . junit . assert . assertequals ( "foo" , e . getmessage ( ) )
[0]: org. junit. assert. assertnotnull ( iterator )
[1]: org. junit. assert. assertequals ( null, iterator. next ( ) )
[2]: org. junit. assert. assertnull ( iterator )
[3]: org. junit. assert. assertequals ( null, iterator )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( org . junit . tests . experimental . rules . tempfolderruletest . createdfiles [ 0 ] . exists ( ) )
[0]: org. junit. assert. assertnotnull ( msg. getlongproperty ( name ) )
[1]: org. junit. assert. asserttrue ( msg. getlongproperty ( name ) )
[2]: org. junit. assert. assertequals ( 1, msg. getlongproperty ( name ) )
[3]: org. junit. assert. asserttrue ( msg. getlongproperty ( name ). isempty ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( exit , is ( 0 ) )
[0]: org. junit. assert. assertequals ( securitycontext, auth. getprincipal ( ) )
[1]: org. junit. assert. assertnotnull ( auth )
[2]: org. junit. assert. assertequals ( securitycontext. getprincipal ( ), auth )
[3]: org. junit. assert. assertnotnull ( auth. getprincipal ( ) )
[4]: org. junit. assert. assertequals ( securitycontext, auth )

************

************
tgt: org . junit . assert . assertequals ( row , null )
[0]: org. junit. assert. asserttrue ( ( ( s. size ( ) ) < ( searchdist. size ( ) ) ) )
[1]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) > ( list. size ( ) ) ) )
[2]: org. junit. assert. asserttrue ( ( ( s. size ( ) ) > ( searchdist. size ( ) ) ) )
[3]: org. junit. assert. asserttrue ( ( ( s1 - numagree ) < 50 ) )
[4]: org. junit. assert. asserttrue ( ( ( s. size ( ) ) > 0 ) )

************

************
tgt: org . junit . assert . assertequals ( "vmmgroup1" , com . ibm . ws . security . wim . adapter . ldap . fat . urapis_sunldap_defaultconfigtest . servlet . getgroupdisplayname ( group ) )
[0]: org. junit. assert. assertnotnull ( paraprop )
[1]: org. junit. assert. assertequals ( paragraph1, paraprop )
[2]: org. junit. assert. assertnotnull ( paramaprop )
[3]: org. junit. assert. assertnotnull ( paraprop ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( generator . buildaddressfromopenstreetmap ( null ) )
[0]: org. junit. assert. assertequals ( ( - 1 ), this. mocker. getcomponentundertest ( ). getpermissiveness ( ) )
[1]: org. junit. assert. assertequals ( 0, this. mocker. getcomponentundertest ( ). getpermissiveness ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( e )
[3]: org. junit. assert. assertnotnull ( m )
[4]: org. junit. assert. assertequals ( m, m2 )

************

************
tgt: org . junit . assert . asserttrue ( ( ( ( ( entities2 . get ( 0 ) ) == null ) && ( ( entities2 . get ( 1 ) ) != null ) ) && ( ( entities2 . get ( 3 ) ) == null ) ) )
[0]: org. junit. assert. assertequals ( m, m )
[1]: org. junit. assert. assertequals ( m, m1 )
[2]: org. junit. assert. assertequals ( m, m4 )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( group, group2 ), result )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( group ), result )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( group, group2, group ), result )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, iterator. size ( ) )
[4]: org. junit. assert. assertequals ( 0, iterator. hasnext ( ) )

************

************
tgt: org . junit . assert . assertfalse ( strategy . isactive ( state , user ) )
[0]: org. junit. assert. assertnull ( iterator )
[1]: org. junit. assert. assertnotnull ( iterator )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, list. size ( ) )
[4]: org. junit. assert. assertequals ( 0, list. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( cholesky . isspd ( ) )
[0]: org. junit. assert. assertequals ( 2, list. size ( ) )
[1]: org. junit. assert. assertequals ( 3, list. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertnull ( person )
[4]: org. junit. assert. assertequals ( null, person )

************

************
tgt: org . junit . assert . asserttrue ( ( ( p . g ( 4 ) ) == 8 ) )
[0]: org. junit. assert. assertnull ( patient )
[1]: org. junit. assert. assertequals ( 0, net. sf. qualitycheck. check. nonullelements ( iterable ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, net. sf. qualitycheck. check. nonullelements ( iterable ). length )
[3]: org. junit. assert. assertequals ( null, net. sf. qualitycheck. check. nonullelements ( iterable ) )
[4]: org. junit. assert. assertnull ( net. sf. qualitycheck. check. nonullelements ( iterable ) )

************

************
tgt: org . junit . assert . asserttrue ( usage . issuccessful ( ) )
[0]: org. junit. assert. assertequals ( 0, net. sf. qualitycheck. check. nonullelements ( iterable ). isempty ( ) )
[1]: org. junit. assert. assertequals ( org. freedesktop. gstreamer. clocktime. values ( ). length, val )
[2]: org. junit. assert. assertequals ( org. freedesktop. gstreamer. clocktime. tomicros ( val ), val )
[3]: org. junit. assert. assertequals ( org. freedesktop. gstreamer. clocktime. tomicros ( val ), 0 )
[4]: org. junit. assert. assertequals ( 2006008, val )

************

************
tgt: org . junit . assert . assertequals ( problem . getnumberofbits ( i ) , solution . getnumberofbits ( i ) )
[0]: org. junit. assert. assertequals ( 0, val )
[1]: org. junit. assert. assertarrayequals ( encoded, actual )
[2]: org. junit. assert. assertnotnull ( actual )
[3]: org. junit. assert. assertarrayequals ( expected, actual )
[4]: org. junit. assert. assertequals ( 0, actual. length )

************

************
tgt: org . junit . assert . asserttrue ( ( i > 0 ) )
[0]: , actual )
[1]: org. junit. assert. assertnotnull ( child )
[2]: org. junit. assert. assertequals ( category, child )
[3]: org. junit. assert. assertnull ( child )
[4]: org. junit. assert. assertequals ( child, category )

************

************
tgt: org . junit . assert . asserttrue ( condition . eval ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( false, isvalid )
[2]: org. junit. assert. assertfalse ( isvalid )
[3]: org. junit. assert. assertequals ( true, isvalid )
[4]: org. junit. assert. asserttrue ( isvalid )

************

************
tgt: org . junit . assert . assertequals ( admintimeout , getfieldvalue ( "propertyform:propertysheet:propertsectiontextfield:admintimeoutprop:admintimeout" ) )
[0]: org. junit. assert. assertequals ( false, isvalid )
[1]: org. junit. assert. assertequals ( assertion, linspace. slice ( 0 ) )
[2]: org. junit. assert. assertequals ( assertion, linspace. slice ( i ) )
[3]: org. junit. assert. assertequals ( assertion, linspace )
[4]: org. junit. assert. assertequals ( assertion )

************

************
tgt: org . junit . assert . assertfalse ( access . isvalidtoexecute ( user ) )
[0]: ) )
[1]: org. junit. assert. assertsame ( element, values. set ( element, null ) )
[2]: org. junit. assert. assertsame ( object, values. set ( null, null ) )
[3]: org. junit. assert. assertsame ( object, values. set ( 1, null ) )
[4]: org. junit. assert. assertsame ( object, values. set ( name, null ) )

************

************
tgt: org . junit . assert . assertequals ( "http://pdfbox.apache.org/" , actionuri . geturi ( ) )
[0]: org. junit. assert. assertsame ( object, values. set ( object, null ) )
[1]: org. junit. assert. assertequals ( 0, org. opendaylight. protocol. bgp. parser. impl. message. update. extended. communities. four. octect. as. specific. sourceas4octecthandler. getsubtype ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, org. opendaylight. protocol. bgp. parser. impl. message. update. extended. communities. four. octect. as. specific. sourceas4octecthandler. getsubtype ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( org. opendaylight. protocol. bgp. parser. impl. message. update. extended. communities. four. octect. as. specific. sourceas4octecthandler. getsubtype ( ) )
[4]: org. junit. assert. assertequals ( 0, org. opendaylight. protocol. bgp. parser. impl. message. update. extended. communities. four. octect. as. specific. sourceas4octecthandler. getsubtype ( ). length )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( org. opendaylight. protocol. bgp. parser. impl. message. update. extended. communities. four. octect. as. specific. sourceas4octecthandler. getsubtype ( ), sourceas4octecthandler )
[1]: org. junit. assert. asserttrue ( service. hasproperty ( ""test"" ) )
[2]: org. junit. assert. assertfalse ( service. hasproperty ( null ) )
[3]: org. junit. assert. asserttrue ( service. hasproperty ( null ) )
[4]: org. junit. assert. asserttrue ( service. hasproperty ( debug. in ) )

************

************
tgt: org . junit . assert . assertthat ( chargingschedule . getstartschedule ( ) , org . hamcrest . corematchers . equalto ( now ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( actual, expectedoauthinterface )
[2]: org. junit. assert. assertequals ( expectedoauthinterface, actual )
[3]: org. junit. assert. assertequals ( 1, response )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), response )

************

************
tgt: org . junit . assert . assertequals ( expectedsource , instrumentedsource )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), response )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), response )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 200 ), response )
[3]: org. junit. assert. assertequals ( 0, info. size ( ) )
[4]: org. junit. assert. assertnotnull ( id )

************

************
tgt: org . junit . assert . assertequals ( rec , response )
[0]: org. junit. assert. assertequals ( new java. lang. long ( 1 ), id )
[1]: org. junit. assert. assertequals ( id, new java. lang. long ( 1 ) )
[2]: org. junit. assert. assertequals ( 0, id )
[3]: ) )
[4]: org. junit. assert. assertequals ( expected, joined. materialize ( ) )

************

************
tgt: org . junit . assert . asserttrue ( org . eclipse . hono . service . registration . registrationmessagefilter . verify ( linktarget , msg ) )
[0]: org. junit. assert. assertequals ( expected, joined )
[1]: org. junit. assert. assertequals ( expected, join. materialize ( ) )
[2]: org. junit. assert. assertequals ( expected, joined. get ( 0 ) )
[3]: org. junit. assert. assertequals ( expected, new java. util. hashset ( joined ) )
[4]: org. junit. assert. assertequals ( org. uberfire. ext. plugin. client. validation. namevalidatortest. valid_name, namevalidator. getvalidationerror ( ). getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , model . istrue ( kbs ) )
[0]: org. junit. assert. assertequals ( org. uberfire. ext. plugin. client. validation. namevalidatortest. valid_name, namevalidator. getvalidationerror ( ). tostring ( ) )
[1]: org. junit. assert. assertequals ( org. uberfire. ext. plugin. client. validation. namevalidatortest. valid_name, namevalidator. getvalidationerror ( ). get ( ) )
[2]: org. junit. assert. assertequals ( org. uberfire. ext. plugin. client. validation. namevalidatortest. valid_name, namevalidator. getvalidationerror ( ) )
[3]: org. junit. assert. assertequals ( java. lang. string. class, namevalidator. getvalidationerror ( ). getclass ( ) )
[4]: org. junit. assert. assertnotnull ( com. redhat. lightblue. util. modifydoctest. doc. get ( new com. redhat. lightblue. util. path ( "arr ) ) )

************

************
tgt: org . junit . assert . assertequals ( pricemodel , result )
[0]: org. junit. assert. assertnotnull ( com. redhat. lightblue. util. modifydoctest. doc. get ( new com. redhat. lightblue. util. path ( ) ) )
[1]: org. junit. assert. assertnotnull ( com. redhat. lightblue. util. modifydoctest. doc. get ( new com. redhat. lightblue. util. path ( orgarr ) ) )
[2]: org. junit. assert. assertnotnull ( com. redhat. lightblue. util. modifydoctest. doc. get ( new java. lang. string [ ] { } ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( value, credentials. gettoken ( ) )

************

************
tgt: org . junit . assert . asserttrue ( buildableentity . isbuilding ( ) )
[0]: org. junit. assert. assertsame ( value, credentials. gettoken ( ) )
[1]: org. junit. assert. assertequals ( getvalue, credentials. gettoken ( ) )
[2]: org. junit. assert. assertnotnull ( credentials. gettoken ( ) )
[3]: org. junit. assert. assertequals ( value, credentials. gettoken ( ). length )
[4]: org. junit. assert. assertthat ( converter. read ( org. bson. document. class, target ), is ( ( ( java. lang. object ) ( target ) ) ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , com . github . mpjct . jmpjct . mysql . proto . proto . build_filler ( 1 ) )
[0]: org. junit. assert. assertthat ( converter. read ( org. bson. document. class, ""foo"" ), org. hamcrest. corematchers. is ( ""foo"" ) )
[1]: org. junit. assert. assertthat ( converter. read ( org. bson. document. class, ""foo"" ), org. hamcrest. corematchers. is ( 1 ) )
[2]: org. junit. assert. assertthat ( converter. read ( org. bson. document. class, target ), is ( 1 ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( org . camunda . bpm . spring . boot . starter . webapp . filter . lazyinitregistration . getinithook ( ) )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. assertnotnull ( user. getpassword ( ) )
[2]: org. junit. assert. assertnull ( user. getpassword ( ) )
[3]: org. junit. assert. assertequals ( user. getpassword ( ), 1 )
[4]: org. junit. assert. assertequals ( null, user. getpassword ( ) )

************

************
tgt: org . junit . assert . assertequals ( "move-me" , back . getkeynew ( ) )
[0]: org. junit. assert. assertequals ( user, user. getpassword ( ) )
[1]: org. junit. assert. assertequals ( com. facebook. buck. eden. edenprojectfilesystemdelegatetest. dummy_sha1, edendelegate. computesha1 ( target ) )
[2]: org. junit. assert. assertthat ( edendelegate. computesha1 ( target ), org. hamcrest. matchers. is ( com. facebook. buck. eden. edenprojectfilesystemdelegatetest. dummy_sha1 ) )
[3]: org. junit. assert. assertthat ( edendelegate. computesha1 ( target ), org. hamcrest. matchers. contains ( com. facebook. buck. eden. edenprojectfilesystemdelegatetest. dummy_sha1 ) )
[4]: org. junit. assert. assertsame ( com. facebook. buck. eden. edenprojectfilesystemdelegatetest. dummy_sha1, edendelegate. computesha1 ( target ) )

************

************
tgt: org . junit . assert . assertequals ( "text" , result . text . tostring ( ) )
[0]: org. junit. assert. assertsame ( com. facebook. buck. eden. edenprojectfilesystemdelegatetest. dummy_sha1, edendelegate. computesha1 ( target ). get ( ) )
[1]: org. junit. assert. assertequals ( expected. size ( ), bytes. size ( ) )
[2]: org. junit. assert. assertequals ( expected. size ( ), actual. size ( ) )
[3]: org. junit. assert. assertequals ( expected. size ( ), result. size ( ) )
[4]: org. junit. assert. assertequals ( expected. size ( ), expected. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( clazz , mth . getdeclaringclass ( ) )
[0]: org. junit. assert. assertequals ( expected. size ( ),
[1]: org. junit. assert. assertequals ( 1, localfilesys. mkdirs ( dir ) )
[2]: org. junit. assert. assertequals ( 1, localfilesys. mkdirs ( dir ). length )
[3]: org. junit. assert. assertequals ( 0, localfilesys. mkdirs ( dir ). length )
[4]: org. junit. assert. assertequals ( 0, localfilesys. mkdirs ( dir ) )

************

************
tgt: org . junit . assert . assertequals ( expectedip , net . roboconf . agent . internal . misc . agentutils . findipaddress ( agentconstants . default_network_interface ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, m. gradientcheck ( ) )
[2]: org. junit. assert. assertequals ( null, m. gradientcheck ( ) )
[3]: org. junit. assert. assertequals ( response. status. bad_request, resp )
[4]: org. junit. assert. assertequals ( response. status ( ), resp )

************

************
tgt: org . junit . assert . assertarrayequals ( expected . tobytearray ( ) , received . tobytearray ( ) )
[0]: org. junit. assert. assertnotnull ( resp )
[1]: org. junit. assert. assertnull ( resp )
[2]: ) )
[3]: org. junit. assert. asserttrue ( solver. issatisfiable ( new int [ ] { 4 } ) )
[4]: org. junit. assert. assertfalse ( solver. issatisfiable ( new int [ ] { 4 } ) )

************

************
tgt: org . junit . assert . assertthat ( entry . restore ( true ) , org . hamcrest . corematchers . equalto ( false ) )
[0]: org. junit. assert. assertnotnull ( solver )
[1]: org. junit. assert. assertequals ( solver, solver )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( info )
[4]: org. junit. assert. assertequals ( null, info )

************

************
tgt: org . junit . assert . assertequals ( user1 . compareto ( user2 ) , 0 )
[0]: org. junit. assert. assertnotnull ( information )
[1]: org. junit. assert. assertnotnull ( info. name )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( string )
[4]: org. junit. assert. assertequals ( null, string )

************

************
tgt: org . junit . assert . assertequals ( xmlesperado , com . fincatto . documentofiscal . nfe310 . fabricadeobjetosfake . getnfnotainfoitemimpostoipi ( ) . tostring ( ) )
[0]: org. junit. assert. assertnull ( string )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 1, errors. haserrors ( ) )
[4]: org. junit. assert. assertequals ( 0, errors. haserrors ( ) )

************

************
tgt: org . junit . assert . assertthat ( parent . getchild ( 0 ) , org . hamcrest . core . is . is ( originalchild ) )
[0]: org. junit. assert. assertequals ( true, errors. haserrors ( ) )
[1]: org. junit. assert. assertnotnull ( errors. haserrors ( ) )
[2]: org. junit. assert. assertequals ( null, errors. haserrors ( ) )
[3]: org. junit. assert. assertequals ( 1, probe )
[4]: org. junit. assert. assertequals ( 0, probe )

************

************
tgt: org . junit . assert . assertequals ( "datanode" 1 , updatedval )
[0]: org. junit. assert. assertequals ( 200, probe )
[1]: org. junit. assert. assertequals ( 2, probe )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( obj. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( obj )

************

************
tgt: org . junit . assert . assertequals ( 10 , theidentifier . hashcode ( ) )
[0]: org. junit. assert. assertnotnull ( obj. getmessage ( ) )
[1]: org. junit. assert. assertequals ( 1, obj. getid ( ) )
[2]: org. junit. assert. assertnotnull ( obj. getid ( ) )
[3]: org. junit. assert. assertequals ( expected, actual )
[4]: org. junit. assert. assertequals ( expected. trim ( ), actual )

************

************
tgt: org . junit . assert . assertequals ( 2 , keyresults . getkeys ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( result, actual )
[1]: org. junit. assert. assertequals ( exp, actual )
[2]: org. junit. assert. assertequals ( expected. trim ( ), actual )
[3]: org. junit. assert. assertnotnull ( mappingconfigurationresult )
[4]: org. junit. assert. assertnotnull ( mappingconfigurationresult. gettargetcontext ( ) )

************

************
tgt: org . junit . assert . assertequals ( "41" , cf . getsegmentquals ( ) [ 0 ] )
[0]: org. junit. assert. assertnull ( mappingconfigurationresult. gettargetcontext ( ) )
[1]: org. junit. assert. assertnull ( mappingconfigurationresult )
[2]: org. junit. assert. assertequals ( mappingconfiguration, mappingconfigurationresult )
[3]: org. junit. assert. assertequals ( null, bp. get ( 0 ) )
[4]: org. junit. assert. assertequals ( null, bp. get ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( failing . tostring ( ) , 0 , failing . size ( ) )
[0]: org. junit. assert. assertnotnull ( bp. get ( 0 ) )
[1]: org. junit. assert. assertnull ( bp. get ( 1 ) )
[2]: org. junit. assert. assertequals ( 0, bp. get ( 1 ) )
[3]: org. junit. assert. assertnotnull ( eventsresult. value ( ). id ( ) )
[4]: org. junit. assert. assertnotnull ( eventsresult. value ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( resultid , org . hamcrest . core . is . is ( "1" ) )
[0]: org. junit. assert. assertnotnull ( eventsresult. value ( ). getid ( ) )
[1]: org. junit. assert. assertnotnull ( eventsresult. value ( ) )
[2]: org. junit. assert. assertnotnull ( eventsresult )
[3]: org. junit. assert. asserttrue ( config. isempty ( ) )
[4]: org. junit. assert. asserttrue ( configuration. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( page . compareto ( cmppage ) ) < 0 ) )
[0]: org. junit. assert. assertfalse ( config. isempty ( ) )
[1]: org. junit. assert. asserttrue ( config. isempty ( ) ) and
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, root. haspendingchanges ( ) )
[4]: org. junit. assert. assertnull ( root. haspendingchanges ( ) )

************

************
tgt: org . junit . assert . asserttrue ( compatresult . isincompatible ( ) )
[0]: org. junit. assert. assertequals ( 1, studies. size ( ) )
[1]: org. junit. assert. assertequals ( 0, studies. size ( ) )
[2]: org. junit. assert. asserttrue ( ( ( studies. size ( ) ) == 1 ) )
[3]: org. junit. assert. assertequals ( 3, studies. size ( ) )
[4]: org. junit. assert. asserttrue ( ( ( studies. size ( ) ) > 1 ) )

************

************
tgt: org . junit . assert . assertequals ( "" , string )
[0]: org. junit. assert. assertequals ( 1, p. test ( null, null ) )
[1]: org. junit. assert. assertequals ( true, p. test ( 1, null ) )
[2]: org. junit. assert. assertequals ( true, p. test ( null, null ) )
[3]: org. junit. assert. assertequals ( 1, p. test ( 1, null ) )
[4]: org. junit. assert. assertequals ( p. union ( p, null ), org. apache. commons. functor. core. constant. test ( p, null ) )

************

************
tgt: org . junit . assert . assertthat ( emptysession . getend ( ) , org . hamcrest . corematchers . equalto ( date ) )
[0]: org. junit. assert. assertequals ( 1, query. getcaps ( ). length )
[1]: org. junit. assert. assertequals ( 1, query. getcaps ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( query. getcaps ( ) )
[3]: org. junit. assert. assertequals ( 0, query. getcaps ( ). length )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( polar > 0 ) )
[0]: org. junit. assert. assertequals ( 0, errormessages. size ( ) )
[1]: org. junit. assert. assertequals ( 1, errormessages. size ( ) )
[2]: org. junit. assert. assertequals ( zero, errormessages. size ( ) )
[3]: org. junit. assert. assertequals ( 1, lines. size ( ) )
[4]: org. junit. assert. assertequals ( 0, lines. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "hello" , poll ( ) )
[0]: org. junit. assert. assertequals ( 5, lines. size ( ) )
[1]: , lines )
[2]: ) )
[3]: org. junit. assert. assertthat ( result. array ( ), is ( input ) )
[4]: org. junit. assert. assertthat ( result, is ( empty ( ) ) )

************

************
tgt: org . junit . assert . assertthat ( sut . difference ( other ) , org . hamcrest . matchers . is ( expected ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: , result )
[2]: ) )
[3]: org. junit. assert. assertnull ( res )
[4]: org. junit. assert. assertequals ( 0, res. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( inputset )
[0]: org. junit. assert. assertequals ( 0, res. length )
[1]: org. junit. assert. assertequals ( 0, res. length ( ) )
[2]: org. junit. assert. assertequals ( null, res )
[3]: org. junit. assert. asserttrue ( rs. next ( ) )
[4]: org. junit. assert. assertequals ( turtlea, turtleb )

************

************
tgt: org . junit . assert . asserttrue ( didruleapply )
[0]: org. junit. assert. assertequals ( turtleb, turtleb )
[1]: org. junit. assert. assertnotnull ( turtlea )
[2]: org. junit. assert. assertnotnull ( turtleb )
[3]: org. junit. assert. assertequals ( turtle1, turtleb )
[4]: org. junit. assert. assertequals ( 0, migrations. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . boolean . valueof ( false ) , parsed )
[0]: org. junit. assert. assertequals ( 1, migrations. size ( ) )
[1]: org. junit. assert. assertequals ( 0, migrations. size ( ) )
[2]: org. junit. assert. assertequals ( zero, migrations. size ( ) )
[3]: org. junit. assert. assertequals ( 0, migrations. size ( ) )
[4]: org. junit. assert. assertequals ( opened, domainobjectsizes ( openedaftertransform ) )

************

************
tgt: org . junit . assert . assertequals ( "foo" , stb . getname ( ) )
[0]: org. junit. assert. assertequals ( opened. domainobjectsizes ( node ). size ( ), 1 )
[1]: org. junit. assert. assertequals ( opened, domainobjectsizes ( openedaftertransform ). size ( ) )
[2]: org. junit. assert. assertequals ( opened, domainobjectsizes ( node ) )
[3]: org. junit. assert. assertequals ( opened. domainobjectsizes ( node ). size ( ), 0 )
[4]: org. junit. assert. assertequals ( 1, x. value )

************

************
tgt: org . junit . assert . assertequals ( createetag , getetag )
[0]: org. junit. assert. assertequals ( 0, x. value )
[1]: org. junit. assert. assertequals ( 5, x. value )
[2]: org. junit. assert. assertequals ( 3, x. value )
[3]: org. junit. assert. assertequals ( ( - 1 ), x )
[4]: org. junit. assert. assertequals ( 1, vertices. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( node )
[0]: org. junit. assert. assertequals ( 0, vertices. size ( ) )
[1]: org. junit. assert. assertequals ( true, as2. iscomposition ( ) )
[2]: org. junit. assert. asserttrue ( as2. iscomposition ( ) )
[3]: org. junit. assert. asserttrue ( as1. iscomposition ( ) )
[4]: org. junit. assert. assertequals ( as1, as2. iscomposition ( ) )

************

************
tgt: org . junit . assert . asserttrue ( found )
[0]: org. junit. assert. assertequals ( as1. iscomposition ( ), as2 )
[1]: org. junit. assert. assertarrayequals ( correctstringset, randompurmutationset )
[2]: org. junit. assert. assertarrayequals ( correctstringset, randomlypurmutationset )
[3]: org. junit. assert. assertequals ( correctstringset, randompurmutationset )
[4]: org. junit. assert. assertequals ( correctstringset, randomlypurmutationset )

************

************
tgt: org . junit . assert . asserttrue ( handler . transform ( ctclass , cp ) )
[0]: org. junit. assert. assertarrayequals ( correctstringset, randompurmutationlist )
[1]: org. junit. assert. asserttrue ( exceptioncaught )
[2]: org. junit. assert. assertfalse ( exceptioncaught )
[3]: org. junit. assert. assertnotnull ( exceptioncaught )
[4]: org. junit. assert. assertfalse ( exceptioncaught )

************

************
tgt: org . junit . assert . assertequals ( expected , config . tostring ( ) )
[0]: , exceptioncaught )
[1]: org. junit. assert. assertequals ( address, addresstrytes. tostring ( ) )
[2]: org. junit. assert. assertequals ( address. tostring ( ), addresstrytes. tostring ( ) )
[3]: org. junit. assert. assertequals ( address [ i ]. tostring ( ), addresstrytes. tostring ( ) )
[4]: org. junit. assert. assertequals ( address [ ( i + 1 ) ], addresstrytes. tostring ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( reqmsg )
[0]: org. junit. assert. assertequals ( addresses. tostring ( ), addresstrytes. tostring ( ) )
[1]: org. junit. assert. assertequals ( null, getlastauthenticated )
[2]: org. junit. assert. assertequals ( errorreason, bestmessage )
[3]: org. junit. assert. assertnotnull ( bestmessage )
[4]: org. junit. assert. assertequals ( errreason, bestmessage )

************

************
tgt: org . junit . assert . assertequals ( 1 , hikes . size ( ) )
[0]: org. junit. assert. assertequals ( exceptionreason, bestmessage )
[1]: org. junit. assert. assertequals ( errorreason, bestmessage )
[2]: org. junit. assert. assertequals ( 1, m2. size ( ) )
[3]: org. junit. assert. assertequals ( 1, m1. size ( ) )
[4]: org. junit. assert. assertequals ( 0, m2. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( ret . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, m3. size ( ) )
[1]: org. junit. assert. assertequals ( 3, m2. size ( ) )
[2]: org. junit. assert. assertequals ( 0, p. getcontent ( ). size ( ) )
[3]: org. junit. assert. assertequals ( p. getcontent ( ). getroles ( ). size ( ), 2 )
[4]: org. junit. assert. assertequals ( 1, p. getcontent ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( extractor . supports ( sheet ) , is ( true ) )
[0]: org. junit. assert. assertequals ( p. getcontent ( ). getroles ( ). size ( ), 1 )
[1]: org. junit. assert. assertequals ( p. getcontent ( ). size ( ), 1 )
[2]: org. junit. assert. assertnotnull ( unencryptedkey. getencryptedprivatekey ( ) )
[3]: org. junit. assert. assertnotnull ( unencryptedkey )
[4]: org. junit. assert. assertequals ( null, unencryptedkey. getencryptedprivatekey ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( "\n" + sqltext ) + "\n" ) , expected , testutils . formattedresult . resultfactory . tostringunsorted ( rs ) )
[0]: org. junit. assert. assertnotnull ( unencryptedkey. getsencryptedprivatekey ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( de )
[3]: org. junit. assert. assertequals ( de, de )
[4]: org. junit. assert. assertnotnull ( berichtentiteit. getcommunicatieidvoorelement ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . integer ( 2 ) , request . getcurrentminute ( ) )
[0]: org. junit. assert. assertnotnull ( berichtentiteit. getcommunicatieidvoorelement ( java. lang. object. class ) )
[1]: org. junit. assert. assertnotnull ( berichtentiteit. getcommunicatieidvoorelement ( m. processing ( ) ) )
[2]: org. junit. assert. assertnotnull ( berichtentiteit )
[3]: ) )
[4]: org. junit. assert. assertequals ( term, instance. asterm ( ) )

************

************
tgt: org . junit . assert . assertequals ( "value_to_test" , headertotest . getvalue ( ) )
[0]: org. junit. assert. assertnotnull ( instance. asterm ( ) )
[1]: org. junit. assert. assertnotnull ( token )
[2]: org. junit. assert. assertequals ( null, token )
[3]: org. junit. assert. assertnotnull ( this. context. getcontext ( ) )
[4]: org. junit. assert. assertnotnull ( subject. getcontext ( ) )

************

************
tgt: org . junit . assert . assertequals ( exp , res )
[0]: org. junit. assert. assertnotnull ( context. getcontext ( ) )
[1]: org. junit. assert. assertnotnull ( this. getcontext ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( invesc1, invesc1 )
[4]: org. junit. assert. assertequals ( invesc1, escaped )

************

************
tgt: org . junit . assert . asserttrue ( indexexists )
[0]: org. junit. assert. assertequals ( escaped, invesc1 )
[1]: org. junit. assert. assertequals ( exp, invesc1 )
[2]: org. junit. assert. assertequals ( invesc1, expesc1 )
[3]: org. junit. assert. assertequals ( 0, entry. gettimings ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, entry. gettimings ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , archivedprocessinstancelist . size ( ) )
[0]: org. junit. assert. assertequals ( null, entry. gettimings ( ) )
[1]: org. junit. assert. assertthat ( filenames, org. hamcrest. matchers. contains ( name. getbytes ( ). length ) )
[2]: org. junit. assert. assertequals ( 1, filenames. size ( ) )
[3]: , filenames )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( null , _c . convert ( null ) )
[0]: )
[1]: org. junit. assert. assertnotnull ( event )
[2]: org. junit. assert. assertnotnull ( reactor )
[3]: org. junit. assert. assertnotnull ( events )
[4]: org. junit. assert. assertnotnull ( handler )

************

************
tgt: org . junit . assert . assertthat ( result . getname ( ) , org . hamcrest . matchers . is ( "mircosoft" ) )
[0]: , event )
[1]: org. junit. assert. assertnotnull ( logger1 )
[2]: org. junit. assert. assertequals ( logger1, logger2 )
[3]: org. junit. assert. assertnotnull ( logger2 )
[4]: org. junit. assert. assertequals ( logger1, log2 )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( logger1, logging2 )
[1]: org. junit. assert. asserttrue ( isrefused )
[2]: org. junit. assert. assertthat ( model2. getmytext ( ), org. hamcrest. corematchers. is ( new com. google. appengine. api. datastore. text ( ) ) )
[3]: org. junit. assert. assertthat ( model2. getmytext ( ), org. hamcrest. corematchers. is ( java. util. collections. singletonlist ( entity2 ) ) )
[4]: org. junit. assert. assertthat ( model2. getmytext ( ), org. hamcrest. corematchers. is ( java. util. collections. singletonlist ( entity ) ) )

************

************
tgt: org . junit . assert . assertnull ( facet )
[0]: org. junit. assert. assertthat ( model2. getmytext ( ), org. hamcrest. corematchers. is ( entity ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected, processed )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertequals ( expected, outputmanager )

************

************
tgt: org . junit . assert . asserttrue ( showownerwarning )
[0]: org. junit. assert. assertnotnull ( configuration. getdirectorysuffix ( ) )
[1]: org. junit. assert. assertequals ( 1, berichtentiteiten. size ( ) )
[2]: org. junit. assert. assertequals ( 0, berichtentiteiten. size ( ) )
[3]: org. junit. assert. assertequals ( 1, totalwait )
[4]: org. junit. assert. assertequals ( 1l, totalwait )

************

************
tgt: org . junit . assert . assertequals ( existingexpandocolumn , newexpandocolumn )
[0]: org. junit. assert. assertequals ( 3, totalwait )
[1]: org. junit. assert. assertequals ( 2, totalwait )
[2]: org. junit. assert. assertequals ( 1, totalwait, 1 )
[3]: org. junit. assert. assertthat ( rawmatcher. matches ( typedescription, classloader, module, net. bytebuddy. agent. builder. agentbuilderrawmatcherdisjunctiontest. foo. class ), org. hamcrest. corematchers. is ( true ) )
[4]: org. junit. assert. assertthat ( rawmatcher. matches ( typedescription, classloader, module, net. bytebuddy. agent. builder. agentbuilderrawmatcherdisjunctiontest. foo. class, protectiondomain ), is ( true ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertthat ( rawmatcher. matches ( typedescription, classloader, module, net. bytebuddy. agent. builder. agentbuilderrawmatcherdisjunctiontest. foo. class, protectiondomain ), org. hamcrest. matchers. is ( true ) )
[1]: org. junit. assert. assertthat ( rawmatcher. matches ( typedescription ), org. hamcrest. corematchers. is ( true ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, lines. length )
[4]: org. junit. assert. assertequals ( 0, lines. length )

************

************
tgt: org . junit . assert . assertequals ( 1 , com . liferay . portal . test . mail . mailservicetestutil . getinboxsize ( ) )
[0]: org. junit. assert. assertequals ( 3, lines. length )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), com. feilong. taglib. display. sensitive. sensitiveutil. parse ( null, java. lang. string. class ) )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), com. feilong. taglib. display. sensitive. sensitiveutil. parse ( null, java. util. collections. emptylist ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), com. feilong. taglib. display. sensitive. sensitiveutil. parse ( null, null ) )
[1]: org. junit. assert. assertnull ( com. feilong. taglib. display. sensitive. sensitiveutil. parse ( null, null ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: , result. length )

************

************
tgt: org . junit . assert . assertthat ( actual . isempty ( ) , org . hamcrest . corematchers . is ( true ) )
[0]: , result )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( expectedrows, o )
[4]: org. junit. assert. assertequals ( expectedrows, object )

************

************
tgt: org . junit . assert . asserttrue ( ( ix != null ) )
[0]: org. junit. assert. assertequals ( expectedrows, result )
[1]: org. junit. assert. assertequals ( expectedrows, oquery )
[2]: org. junit. assert. assertequals ( expectedrows, actualrows )
[3]: org. junit. assert. assertequals ( 1, lines. size ( ) )
[4]: org. junit. assert. assertequals ( 0, lines. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( data [ i ] ) * i ) , m . getentry ( i , i ) , 0.0 )
[0]: org. junit. assert. assertequals ( 2, lines. size ( ) )
[1]: org. junit. assert. assertequals ( 8, lines. size ( ) )
[2]: , lines )
[3]: org. junit. assert. assertequals ( strand, clone )
[4]: org. junit. assert. assertfalse ( success )

************

************
tgt: org . junit . assert . asserttrue ( reader . start ( ) )
[0]: org. junit. assert. assertequals ( true, success )
[1]: org. junit. assert. assertequals ( 3, som. getatomcontainercount ( ) )
[2]: org. junit. assert. assertequals ( 1, som. getatomcontainercount ( ) )
[3]: org. junit. assert. assertequals ( 0, som. getatomcontainercount ( ) )
[4]: org. junit. assert. assertequals ( 12, som. getatomcontainercount ( ) )

************

************
tgt: org . junit . assert . assertthat ( factory . getconnection ( ) . getclientname ( ) , equalto ( "clientname" ) )
[0]: org. junit. assert. asserttrue ( ( e instanceof java. lang. object ) )
[1]: org. junit. assert. asserttrue ( ( result == false ) )
[2]: org. junit. assert. asserttrue ( ( result == null ) )
[3]: org. junit. assert. asserttrue ( ( result == true ) )
[4]: org. junit. assert. asserttrue ( ( e instanceof java. lang. long ) )

************

************
tgt: org . junit . assert . assertnull ( aux )
[0]: org. junit. assert. assertequals ( 1, formats. size ( ) )
[1]: org. junit. assert. assertequals ( 0, formats. size ( ) )
[2]: org. junit. assert. assertnotnull ( formats )
[3]: org. junit. assert. assertequals ( 2, formats. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( proto )
[0]: org. junit. assert. assertnotnull ( onms )
[1]: org. junit. assert. assertnotnull ( onmsnode )
[2]: org. junit. assert. assertnotnull ( on )
[3]: org. junit. assert. assertnotnull ( queue )
[4]: org. junit. assert. assertnotnull ( on1 )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), res. getprimitive ( ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 10 ), res. getprimitive ( ) )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), res. getprimitive ( ) )
[3]: org. junit. assert. assertthat ( get ( ), org. hamcrest. corematchers. is ( transactiontype. xa ) )
[4]: org. junit. assert. assertthat ( get ( ). size ( ), org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , target . position ( ) )
[0]: org. junit. assert. assertthat ( list. get ( ), org. hamcrest. corematchers. is ( transactiontype. xa ) )
[1]: org. junit. assert. assertthat ( get ( ). size ( ), org. hamcrest. corematchers. is ( 0 ) )
[2]: org. junit. assert. assertnull ( get ( ) )
[3]: org. junit. assert. assertnotnull ( environmentalinfoao )
[4]: org. junit. assert. assertnotnull ( test1 )

************

************
tgt: org . junit . assert . asserttrue ( com . microsoft . azure . management . appservice . samples . managelinuxwebappwithdomainssl . runsample ( azure ) )
[0]: org. junit. assert. assertnotnull ( envalinfoao )
[1]: org. junit. assert. assertnotnull ( environmentalconfigao )
[2]: org. junit. assert. assertnotnull ( storage )
[3]: org. junit. assert. assertequals ( 0, truncatedchain. length )
[4]: org. junit. assert. assertequals ( 1, truncatedchain. length )

************

************
tgt: org . junit . assert . assertequals ( 4 , hcw . getcharacterlength ( ) )
[0]: org. junit. assert. assertnull ( truncatedchain )
[1]: org. junit. assert. assertnotnull ( truncatedchain )
[2]: org. junit. assert. assertequals ( null, truncatedchain )
[3]: org. junit. assert. assertequals ( 1, poolstats. totalbeansdestroyedproperty ( ) )
[4]: org. junit. assert. assertequals ( 0, poolstats. totalbeansdestroyedproperty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , ids . size ( ) )
[0]: org. junit. assert. assertequals ( value, value )
[1]: org. junit. assert. assertequals ( null, value )
[2]: org. junit. assert. assertequals ( valued, value )
[3]: type ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( dv , dvcopy )
[0]: org. junit. assert. assertequals ( 1, vowelcount )
[1]: org. junit. assert. assertequals ( 0, vowelcount )
[2]: org. junit. assert. assertequals ( 3, vowelcount )
[3]: org. junit. assert. asserttrue ( clientbase. isdone ( ) )
[4]: org. junit. assert. assertnotnull ( target )

************

************
tgt: org . junit . assert . assertequals ( dt . toepochsecond ( ) , 0 )
[0]: org. junit. assert. assertnotnull ( target. getconnectorposition ( null, null ) )
[1]: org. junit. assert. assertnotnull ( target. getconnectorposition ( null, target ) )
[2]: org. junit. assert. assertnotnull ( target. getconnectorposition ( target, null ) )
[3]: org. junit. assert. assertequals ( null, target )
[4]: org. junit. assert. assertnotnull ( s )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . long ( "9223372036854775807" ) , testval )
[0]: org. junit. assert. assertnotnull ( collection )
[1]: org. junit. assert. assertnotnull ( context )
[2]: org. junit. assert. assertnotnull ( dataset )
[3]: type ) { }
[4]: org. junit. assert. assertequals ( 1, dst. length )

************

************
tgt: org . junit . assert . assertequals ( "" , patternname )
[0]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 2, 3 }, dst )
[1]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 2 }, dst )
[2]: org. junit. assert. assertequals ( 0, dst. length )
[3]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 1, 2 }, dst )
[4]: org. junit. assert. assertequals ( 1, pools. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , actualresult )
[0]: org. junit. assert. assertequals ( 0, pools. size ( ) )
[1]: org. junit. assert. assertequals ( 3, pools. size ( ) )
[2]: org. junit. assert. assertequals ( 1, list. size ( ) )
[3]: org. junit. assert. assertequals ( 10, list. size ( ) )
[4]: org. junit. assert. asserttrue ( connection. isvalid ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( ( result != expected ) )
[0]: org. junit. assert. assertfalse ( connection. isvalid ( 0 ) )
[1]: org. junit. assert. assertfalse ( connection. isvalid ( 1 ) )
[2]: org. junit. assert. asserttrue ( connection. isvalid ( 1 ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( taglist )

************

************
tgt: org . junit . assert . assertequals ( lastdayinmonth , fieldvaluegenerator . generatepreviousvalue ( ( ( lastdayinmonth ) + 1 ) ) )
[0]: org. junit. assert. assertequals ( 0, taglist. size ( ) )
[1]: org. junit. assert. assertequals ( 1, taglist. size ( ) )
[2]: org. junit. assert. assertequals ( 2, taglist. size ( ) )
[3]: org. junit. assert. assertequals ( 3, taglist. size ( ) )
[4]: org. junit. assert. assertequals ( 1, results. getresultsize ( ), 10 )

************

************
tgt: org . junit . assert . assertequals ( org . apache . shindig . gadgets . render . proxyrenderertest . proxied_html_content , content )
[0]: org. junit. assert. assertequals ( 3, results. getresultsize ( ), 10 )
[1]: org. junit. assert. assertequals ( 4, results. getresultsize ( ), 10 )
[2]: org. junit. assert. assertequals ( 200, results. getresultsize ( ), 10 )
[3]: org. junit. assert. assertequals ( 1, results. getresultsize ( ) )
[4]: org. junit. assert. assertequals ( c. gethex ( ), c2. gethex ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , ( ( int ) ( order . getorderid ( ) ) ) )
[0]: org. junit. assert. assertequals ( c, c2. gethex ( ) )
[1]: org. junit. assert. assertequals ( cc. gethex ( ), c2. gethex ( ) )
[2]: org. junit. assert. assertequals ( 1, c2. gethex ( ) )
[3]: org. junit. assert. assertequals ( 0, c2. gethex ( ) )
[4]: org. junit. assert. asserttrue ( berichtgegevens. isleegbericht ( ) )

************

************
tgt: org . junit . assert . assertequals ( intransaction . tojson ( ) , receivemsg )
[0]: org. junit. assert. assertequals ( 1, maximalrectangle ( matrix ) )
[1]: org. junit. assert. assertequals ( 0, maximalrectangle ( matrix ) )
[2]: org. junit. assert. assertequals ( 1, maximalrectangle ( matrix ) )
[3]: org. junit. assert. assertequals ( 4, maximalrectangle ( matrix ) )
[4]: org. junit. assert. assertequals ( 3, maximalrectangle ( matrix ) )

************

************
tgt: org . junit . assert . asserttrue ( sitenavigationmenus . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[1]: org. junit. assert. asserttrue ( e. getmessage ( ). contains ( 1 ) )
[2]: org. junit. assert. assertequals ( 1, e. getmessage ( ) )
[3]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( ""1"", e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , retval )
[0]: org. junit. assert. assertequals ( dedatarecordcollections. tostring ( ), 1, dedatarecordcollections. size ( ) )
[1]: org. junit. assert. assertequals ( assertions, returned )
[2]: org. junit. assert. assertequals ( flowstate. vserver_starting, newstate )
[3]: org. junit. assert. assertequals ( numregions, numregions )
[4]: org. junit. assert. assertequals ( ( numregions + 1 ), numregions )

************

************
tgt: org . junit . assert . assertequals ( artwork1 , artwork2 )
[0]: org. junit. assert. assertequals ( ( numregions - 1 ), numregions )
[1]: org. junit. assert. assertequals ( numregions, numregions. size ( ) )
[2]: org. junit. assert. assertequals ( 1, numregions )
[3]: org. junit. assert. assertequals ( 1, ar. initialize ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, ar. initialize ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( integer . min_value , result )
[0]: org. junit. assert. assertnotnull ( ar. initialize ( ) )
[1]: org. junit. assert. assertequals ( ar. initialize ( ). size ( ), 0 )
[2]: org. junit. assert. assertequals ( null, ar. initialize ( ) )
[3]: org. junit. assert. assertnotnull ( repo. generateid ( ) )
[4]: org. junit. assert. assertnotnull ( repo )

************

************
tgt: org . junit . assert . asserttrue ( actual . contains ( expecteditem ) )
[0]: org. junit. assert. assertnull ( repo )
[1]: org. junit. assert. assertnotnull ( repo. generateid )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( response )
[4]: org. junit. assert. assertequals ( response, client )

************

************
tgt: org . junit . assert . assertequals ( g1 , g2 )
[0]: org. junit. assert. assertnull ( response )
[1]: org. junit. assert. assertequals ( response, newest )
[2]: ) )
[3]: org. junit. assert. assertequals ( true, msg. iscomposed ( ) )
[4]: org. junit. assert. assertequals ( true, this. iscomposed ( ) )

************

************
tgt: org . junit . assert . assertthat ( sorted , is ( java . util . arrays . aslist ( 5 , 4 , 3 , 2 , 1 ) ) )
[0]: org. junit. assert. assertequals ( true, filter. iscomposed ( ) )
[1]: org. junit. assert. assertequals ( false, msg. iscomposed ( ) )
[2]: org. junit. assert. assertfalse ( configuration. iscomposed ( ) )
[3]: org. junit. assert. assertnotnull ( classundertest ( ) )
[4]: org. junit. assert. assertnotnull ( classundertest ( ). notempty ( ) )

************

************
tgt: org . junit . assert . assertnull ( properties . put ( null , "value" ) )
[0]: org. junit. assert. assertnull ( classundertest ( ). notempty ( ) )
[1]: org. junit. assert. assertnull ( classundertest ( ) )
[2]: ) )
[3]: org. junit. assert. assertnull ( object. getobject ( null ) )
[4]: org. junit. assert. assertnotnull ( object. getobject ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( fieldaccessor . fieldisfinal ( ) )
[0]: org. junit. assert. assertnull ( object. getobject ( 0 ) )
[1]: org. junit. assert. assertnotnull ( object. getobject ( 0 ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( page. add ( page ) )
[4]: org. junit. assert. assertnotnull ( page. add ( page ) )

************

************
tgt: org . junit . assert . assertarrayequals ( result , authed )
[0]: org. junit. assert. asserttrue ( page. add ( null ) )
[1]: add ( page ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( expected_value, buff. read ( ) )
[4]: org. junit. assert. assertequals ( expected_value, buff. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( expected_value, buff. tostring ( ) )
[1]: org. junit. assert. assertequals ( expected_value, buff. read ( channel ) )
[2]: org. junit. assert. assertequals ( expected_value, buff. read ( 0 ) )
[3]: org. junit. assert. assertequals ( connectioninfo, incomingstatus )
[4]: org. junit. assert. assertnotnull ( incomingstatus )

************

************
tgt: org . junit . assert . assertnull ( org . sagebionetworks . table . query . util . facetrequestcolumnmodel . createenumerationsearchcondition ( null ) )
[0]: org. junit. assert. assertequals ( connectioninfo, outgoingstatus )
[1]: org. junit. assert. assertequals ( connectioninfo, incomingstatus )
[2]: org. junit. assert. assertequals ( connectioninfo, receivedstatus )
[3]: org. junit. assert. asserttrue ( nu1. equals ( nu1 ) )
[4]: org. junit. assert. assertequals ( r. get ( java. lang. string. class ), initparams )

************

************
tgt: org . junit . assert . asserttrue ( entity . equals ( entity2 ) )
[0]: org. junit. assert. assertequals ( r. get ( java. lang. string. class ), ""bar"" )
[1]: org. junit. assert. assertequals ( r. get ( java. lang. string. class ), """" )
[2]: org. junit. assert. assertequals ( r. get ( java. lang. string. class ), ""foo"" )
[3]: org. junit. assert. assertequals ( r. get ( java. lang. string. class ), ""test"" )
[4]: org. junit. assert. assertequals ( 1, videos. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedinstructions , prefixedinstructions )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( video ), videos )
[1]: org. junit. assert. assertequals ( 0, videos. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), videos )
[3]: org. junit. assert. assertnotnull ( videos )
[4]: org. junit. assert. assertnotnull ( com. liferay. layout. page. template. service. layoutpagetemplatecollectionserviceutil. fetchlayoutpagetemplatecollection ( layoutpagetemplatecollection. getlayoutpagetemplatecollectionid ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( diff , org . batfish . common . util . batfishobjectmapper . clone ( diff , org . batfish . datamodel . bgproutediff . class ) )
[0]: org. junit. assert. assertequals ( null, entity. getarea ( ) )
[1]: org. junit. assert. assertnull ( entity. getarea ( ) )
[2]: org. junit. assert. assertnotnull ( entity. getarea ( ) )
[3]: org. junit. assert. assertequals ( 0, entity. getarea ( ). length )
[4]: getarea ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedtraits , mapstore . gettraits ( ) )
[0]: org. junit. assert. assertarrayequals ( new int [ ] { 1, 5 }, outofrangeindexes )
[1]: org. junit. assert. assertequals ( 1, outofrangeindexes. length )
[2]: org. junit. assert. assertarrayequals ( new int [ ] { 1, 1 }, outofrangeindexes )
[3]: org. junit. assert. assertnotnull ( certs )
[4]: org. junit. assert. assertequals ( null, certs. getrecipient ( ) )

************

************
tgt: org . junit . assert . assertnull ( output )
[0]: org. junit. assert. assertequals ( null, certs )
[1]: org. junit. assert. assertequals ( goodidentifier, certs )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( headers )
[4]: org. junit. assert. assertequals ( 0, headers. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( result , "default" )
[0]: org. junit. assert. assertequals ( 1, headers. size ( ) )
[1]: org. junit. assert. assertnull ( headers )
[2]: ) )
[3]: org. junit. assert. assertequals ( s, c. parse ( s ) )
[4]: org. junit. assert. assertequals ( s, parser. parse ( s ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( s, parse ( s ) )
[1]: org. junit. assert. assertequals ( s, decode ( s ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, reduceresults. size ( ) )
[4]: org. junit. assert. assertequals ( 0, reduceresults. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , objects . lastindexof ( 2 ) )
[0]: org. junit. assert. assertequals ( 3, reduceresults. size ( ) )
[1]: org. junit. assert. assertequals ( 1l, reduceresults. size ( ) )
[2]: org. junit. assert. assertequals ( 5, reduceresults. size ( ) )
[3]: org. junit. assert. assertequals ( expected, properties )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertequals ( null , mock . getoptionalparameter ( request , io . lumify . web . baserequesthandlertest . test_param ) )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertequals ( expected, data )
[2]: org. junit. assert. assertequals ( expected, config )
[3]: org. junit. assert. assertequals ( java. util. arrays. tostring ( newres ), newres. tostring ( is ) )
[4]: org. junit. assert. assertequals ( str_my_new_test, org. geoserver. util. ioutils. tostring ( is ) )

************

************
tgt: org . junit . assert . asserttrue ( net . ripe . rpki . commons . provisioning . payload . relaxngschemavalidator . validateagainstrelaxng ( actualxml ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. tostring ( newres ), java. util. arrays. tostring ( is ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( newres ), org. geoserver. rest. restbasecontroller. root_path )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( newres ), org. geoserver. rest. restbasecontroller. root_path, is )
[3]: org. junit. assert. assertnotnull ( atom. geticode ( ) )
[4]: org. junit. assert. assertequals ( 1, atom. geticode ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result . success ( ) )
[0]: org. junit. assert. assertequals ( null, atom. geticode ( ) )
[1]: org. junit. assert. assertequals ( 0, atom. geticode ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, stapelvoorkomen. getdocumentomschrijving ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), stapelvoorkomen. getdocumentomschrijving ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( initial_size < ending_size ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), stapelvoorkomen. getdocumentomschrijving ( ) )
[1]: org. junit. assert. assertequals ( java. util. optional. empty ( ), stapelvoorkomen. getdocumentomschrijving ( ) )
[2]: org. junit. assert. assertequals ( org. dkpro. tc. ml. experiment. builder. learning_curve, builder. tostring ( ) )
[3]: org. junit. assert. assertequals ( builder. tostring ( ), org. dkpro. tc. ml. experiment. builder. learning_curve )
[4]: org. junit. assert. assertequals ( builder. tostring ( ), org. dkpro. tc. ml. experiment. builder. learning_curve. tostring ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( org. dkpro. tc. ml. experiment. builder. learning_curve. tostring ( ), builder. tostring ( ) )
[1]: org. junit. assert. assertequals ( org. dkpro. tc. ml. experiment. builder. learning_curve. tostring ( ), builder. build ( ) )
[2]: org. junit. assert. assertequals ( null, mapping2 )
[3]: org. junit. assert. assertnull ( mapping2 )
[4]: org. junit. assert. assertnotnull ( mapping2 )

************

************
tgt: org . junit . assert . assertequals ( 0 , result )
[0]: org. junit. assert. assertequals ( mapping, mapping2 )
[1]: org. junit. assert. assertequals ( null, mapping1 )
[2]: org. junit. assert. assertnotnull ( customers )
[3]: org. junit. assert. assertequals ( 1, customers. size ( ) )
[4]: org. junit. assert. assertequals ( 0, customers. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( viewaction . project . visiblefiletry ( com . liferay . ide . ui . module . tests . newmoduleprojectwizardliferayworkspacemaventests . liferayworkspace . getmodulefiles ( project . getname ( ) ) ) )
[0]: org. junit. assert. assertnotnull ( customers. get ( 0 ) )
[1]: org. junit. assert. assertnotnull ( customers. get ( 1 ) )
[2]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( 1, 2, 3 ), givenlist )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), givenlist )
[4]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( 1, 1, 2, 3 ), givenlist )

************

************
tgt: org . junit . assert . asserttrue ( ( res == true ) )
[0]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( 1, 2, 3, 4 ), givenlist )
[1]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( 1, 2, 3, 3 ), givenlist )
[2]: org. junit. assert. assertequals ( value, ra. copy ( value ). get ( ) )
[3]: org. junit. assert. assertequals ( value, ra. copy ( val ). get ( ) )
[4]: org. junit. assert. assertequals ( value, ra. get ( ). get ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( runner )
[0]: org. junit. assert. assertequals ( value, ra. copy ( value ) )
[1]: org. junit. assert. assertnotnull ( ra. copy ( value ) )
[2]: org. junit. assert. assertequals ( 1, ratings. size ( ) )
[3]: org. junit. assert. assertequals ( 0, ratings. size ( ) )
[4]: org. junit. assert. assertequals ( 5, ratings. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( servletname , _servletdefinition . getname ( ) )
[0]: org. junit. assert. assertequals ( 4, ratings. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( com. groupon. lex. metrics. history. xdr. support. reader. segmentreadertest. expected, reader. decode ( ) )
[3]: org. junit. assert. assertequals ( new java. lang. integer ( 0 ), reader. decode ( ) )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 0 ), reader. decode ( ) )

************

************
tgt: org . junit . assert . asserttrue ( netstoragecmsv35signer . validate ( httpurlconnection ) )
[0]: org. junit. assert. assertequals ( com. groupon. lex. metrics. history. xdr. support. reader. segmentreadertest. expected, writer. decode ( ) )
[1]: ) )
[2]: org. junit. assert. assertarrayequals ( expectedresult, result. data )
[3]: org. junit. assert. assertarrayequals ( expectedresult, result. result )
[4]: org. junit. assert. assertarrayequals ( expectedresult, result. value )

************

************
tgt: org . junit . assert . assertequals ( 7 , min )
[0]: org. junit. assert. assertarrayequals ( expectedresult, result. args )
[1]: org. junit. assert. assertarrayequals ( expectedresult, result. val )
[2]: org. junit. assert. assertnotnull ( emptyresp. getserviceresponsetype ( ) )
[3]: org. junit. assert. assertequals ( null, emptyresp. getserviceresponsetype ( ) )
[4]: org. junit. assert. assertequals ( 1, emptyresp. getserviceresponsetype ( ) )

************

************
tgt: org . junit . assert . assertnull ( address )
[0]: org. junit. assert. assertequals ( 0, emptyresp. getserviceresponsetype ( ). length )
[1]: org. junit. assert. assertequals ( 1, emptyresp. getserviceresponsetype ( ). length )
[2]: org. junit. assert. assertequals ( 1, teaser. getimageresource ( ). length )
[3]: org. junit. assert. assertnotnull ( teaser. getimageresource ( ) )
[4]: org. junit. assert. assertequals ( null, teaser. getimageresource ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , s2 )
[0]: org. junit. assert. assertequals ( 0, teaser. getimageresource ( ). length )
[1]: ) )
[2]: org. junit. assert. assertequals ( scope, result. getname ( ) )
[3]: org. junit. assert. assertnotnull ( result. getname ( ) )
[4]: org. junit. assert. assertnull ( result. getname ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( theresult )
[0]: org. junit. assert. assertequals ( ""foo"", result. getname ( ) )
[1]: org. junit. assert. assertsame ( scope, result. getname ( ) )
[2]: org. junit. assert. assertequals ( true, i1. equals ( i2 ) )
[3]: org. junit. assert. assertequals ( false, i1. equals ( i2 ) )
[4]: org. junit. assert. asserttrue ( i1. equals ( i2 ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , c . next ( ) . get ( ) )
[0]: org. junit. assert. assertequals ( i1. equals ( i2 ), true )
[1]: org. junit. assert. assertequals ( i1. equals ( i2 ), i2 )
[2]: org. junit. assert. assertnotnull ( incrementpoolontimeoutconnectionacquiringstrategy. getconnection ( connectionrequestcontext ) )
[3]: org. junit. assert. assertnotnull ( incrementpoolontimeoutconnectionacquiringstrategy )
[4]: org. junit. assert. assertsame ( connection, incrementpoolontimeoutconnectionacquiringstrategy )

************

************
tgt: org . junit . assert . assertequals ( expected , fetchedresults )
[0]: org. junit. assert. assertnull ( incrementpoolontimeoutconnectionacquiringstrategy )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( 1, filtered )
[4]: org. junit. assert. assertequals ( 3, filtered )

************

************
tgt: org . junit . assert . assertthat ( value , org . hamcrest . matchers . is ( "xpathwithdefaultnode" ) )
[0]: org. junit. assert. assertequals ( 0, filtered )
[1]: org. junit. assert. assertequals ( 5, filtered )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, persoon. getobjecten ( getobjectelement ( element. persoon_partner ) ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, persoon. getobjecten ( getobjectelement ( element. persoon_partner ) ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( resolvers . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, persoon. getobjecten ( element. persoon_partner ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, persoon. getobjecten ( null ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, persoon. getobjecten ( getobjectelement ( element. persoon_partner. getid ( ) ) ). length )
[3]: org. junit. assert. assertequals ( v1, id. get ( ) )
[4]: org. junit. assert. assertequals ( v1, id )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . double ( 15.5 ) , result )
[0]: org. junit. assert. assertequals ( null, id. get ( ) )
[1]: org. junit. assert. assertequals ( v1. getid ( ), id )
[2]: ) )
[3]: org. junit. assert. assertequals ( expected, actualquery )
[4]: org. junit. assert. assertequals ( expected, materialized )

************

************
tgt: org . junit . assert . assertequals ( 0 , sb . index ( ) )
[0]: org. junit. assert. assertequals ( expected, result )
[1]: org. junit. assert. assertequals ( s, expectedquery )
[2]: org. junit. assert. assertequals ( expected, actualquery )
[3]: org. junit. assert. assertnotnull ( profile )
[4]: org. junit. assert. assertnull ( profile )

************

************
tgt: org . junit . assert . assertequals ( 1 , createsocketcalled . get ( ) )
[0]: org. junit. assert. assertequals ( profile, viewportprofile )
[1]: org. junit. assert. assertequals ( profile, view )
[2]: )
[3]: org. junit. assert. assertequals ( 1, ingredients. size ( ) )
[4]: org. junit. assert. asserttrue ( arebonded ( aminon, carboxylc ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , size )
[0]: org. junit. assert. asserttrue ( arebonded ( aminon, residue1 ) )
[1]: org. junit. assert. asserttrue ( arebonded ( aminon, residue2 ) )
[2]: org. junit. assert. assertfalse ( arebonded ( aminon, residue1 ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, statistics. getupdatescount ( ) )

************

************
tgt: org . junit . assert . assertfalse ( jaccservice . loadclasses ( ) )
[0]: org. junit. assert. assertfalse ( profiler. isrunning ( ) )
[1]: org. junit. assert. asserttrue ( ic. imageequaltoreference ( screenshotimage, referenceimage, referenceimage, 0 ) )
[2]: org. junit. assert. asserttrue ( ic. imageequaltoreference ( screenshotimage, referenceimage, ""name"", 0 ) )
[3]: org. junit. assert. asserttrue ( ic. imageequaltoreference ( screenshotimage, referenceimage, ""foo"", 0 ) )
[4]: org. junit. assert. asserttrue ( ic. imageequaltoreference ( screenshotimage, referenceimage, referenceimage, 1 ) )

************

************
tgt: org . junit . assert . assertthat ( rootlevelresources , org . hamcrest . corematchers . is ( acollectionwithsize ( 2 ) ) )
[0]: org. junit. assert. asserttrue ( ic. imageequaltoreference ( screenshotimage, referenceimage, 1, 0 ) )
[1]: org. junit. assert. assertequals ( guaranteed, ut. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 1, ut. getvalue ( ) )
[3]: org. junit. assert. assertsame ( eu, ut. getvalue ( ) )
[4]: org. junit. assert. assertsame ( pomfile, ut. getvalue ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( sessionkey )
[0]: org. junit. assert. assertnotnull ( ut. getvalue ( ) )
[1]: org. junit. assert. assertequals ( 1, c. poolmaxwaiters ( poolmaxwaiters ). size ( ) )
[2]: org. junit. assert. assertequals ( poolmaxwaiters, c. poolmaxwaiters ( poolmaxwaiters ). get ( ) )
[3]: org. junit. assert. assertequals ( java. util. optional. of ( poolmaxwaiters ), c. poolmaxwaiters ( poolmaxwaiters ) )
[4]: org. junit. assert. assertequals ( 0, c. poolmaxwaiters ( poolmaxwaiters ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "aaa" , e . gettablename ( ) )
[0]: org. junit. assert. assertequals ( 1, c. poolmaxwaiters ( poolmaxwaiters ). get ( ) )
[1]: org. junit. assert. assertnotnull ( gotname )
[2]: org. junit. assert. assertequals ( null, gotname )
[3]: org. junit. assert. assertequals ( 5, gotname )
[4]: org. junit. assert. assertequals ( string, gotname )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, results. size ( ) )
[2]: org. junit. assert. assertequals ( instance, copy )
[3]: org. junit. assert. assertequals ( instance, copy. guaranteed ( ) )
[4]: org. junit. assert. assertequals ( instance, copy. materialized ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( prevdate . compareto ( revision . getdate ( ) ) ) >= 0 ) )
[0]: org. junit. assert. assertequals ( instance, copy. getthrowable ( ) )
[1]: org. junit. assert. assertequals ( instance, copy. aggregate ( ) )
[2]: org. junit. assert. assertequals ( ( ( ""\n"" + sqltext ) + ""\n"" ), expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[3]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[4]: org. junit. assert. assertequals ( ( ( sqltext + sqltext ) + expected ), expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )

************

************
tgt: org . junit . assert . assertthat ( testbody , org . hamcrest . corematchers . is ( expectedbody ) )
[0]: org. junit. assert. assertequals ( formatted, expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[1]: org. junit. assert. assertequals ( ( ( sqltext + expected ) + sqltext ), expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[2]: org. junit. assert. assertnull ( tvar. aselement ( ) )
[3]: org. junit. assert. assertsame ( tvar, tvar )
[4]: org. junit. assert. assertnotnull ( tvar. aselement ( ) )

************

************
tgt: org . junit . assert . asserttrue ( details1 . isoverlappinginput ( details2 ) )
[0]: org. junit. assert. assertequals ( tvar. aselement ( ), tvar )
[1]: ) )
[2]: org. junit. assert. assertequals ( sprofileentry, result )
[3]: org. junit. assert. assertequals ( 1, buffer. length ( ) )
[4]: org. junit. assert. assertequals ( 0, buffer. length ( ) )

************

************
tgt: org . junit . assert . asserttrue ( pm . matches ( pattern , test ) )
[0]: org. junit. assert. assertequals ( 3, buffer. length ( ) )
[1]: org. junit. assert. assertarrayequals ( value, v1. tostring ( ) )
[2]: org. junit. assert. assertequals ( value, v1. tostring ( ) )
[3]: org. junit. assert. assertequals ( value. tostring ( ), v1. tostring ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. tostring ( value ), v1 )

************

************
tgt: org . junit . assert . assertequals ( entry . getkey ( ) , util . general . systemhelper . hexstringtoargb ( entry . getvalue ( ) ) )
[0]: org. junit. assert. assertequals ( value [ 1 ], v1. tostring ( ) )
[1]: org. junit. assert. assertnotnull ( target. get ( 0 ) )
[2]: org. junit. assert. assertnotnull ( target. get ( 1 ) )
[3]: org. junit. assert. assertnotnull ( target )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( control , test )
[0]: )
[1]: org. junit. assert. assertnotnull ( othertextxmlcontenttype )
[2]: org. junit. assert. assertequals ( textxmlcontenttype, othertextxmlcontenttype )
[3]: org. junit. assert. assertnull ( othertextxmlcontenttype )
[4]: org. junit. assert. assertthat ( othertextxmlcontenttype, is ( textxmlcontenttype ) )

************

************
tgt: org . junit . assert . assertequals ( expected , json )
[0]: org. junit. assert. assertequals ( textxmlcontenttype, othertextxmlcontenttype )
[1]: org. junit. assert. assertequals ( 0, result. getchildren ( null ). length )
[2]: org. junit. assert. assertequals ( 1, result. getchildren ( null ). length )
[3]: org. junit. assert. assertequals ( 0, result. getchildren ( ""test"" ). length )
[4]: org. junit. assert. assertequals ( 1, result. getchildren ( ""test"" ). length )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( 0, result. getchildren ( 0 ). length )
[1]: org. junit. assert. assertequals ( 1, performquery ( query ) )
[2]: org. junit. assert. assertnotnull ( performquery ( query ) )
[3]: org. junit. assert. assertequals ( 1, performsquery ( query ) )
[4]: org. junit. assert. asserttrue ( performquery ( query ) )

************

************
tgt: org . junit . assert . assertequals ( bus , actual )
[0]: org. junit. assert. assertequals ( 0, performquery ( query ) )
[1]: org. junit. assert. assertequals ( 1, bytes. parsedouble ( ) )
[2]: org. junit. assert. assertequals ( 1, bytes. parsedouble ( ), 0 )
[3]: org. junit. assert. assertequals ( 1, bytes. parsedouble ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( bytes. parsedouble ( ) )

************

************
tgt: org . junit . assert . assertequals ( provider , boot . getprovider ( ) )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), bytes )
[1]: org. junit. assert. assertequals ( null, conf. get ( propertykey. master_hostname ) )
[2]: org. junit. assert. assertequals ( 1, conf. get ( propertykey. master_hostname ) )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( statement ), conf. get ( propertykey ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), conf. get ( propertykey ) )

************

************
tgt: org . junit . assert . asserttrue ( exceptionmatches )
[0]: get ( statement ) )
[1]: org. junit. assert. assertequals ( """", locationformatter. format ( context ) )
[2]: org. junit. assert. assertnull ( locationformatter. format ( context ) )
[3]: org. junit. assert. assertequals ( 0, locationformatter. format ( context ) )
[4]: org. junit. assert. assertequals ( null, locationformatter. format ( context ) )

************

************
tgt: org . junit . assert . assertthat ( org . eol . globi . server . util . resultobject . forfield ( resultfield . source_taxon_name ) , org . hamcrest . corematchers . is ( resultobject . source_taxon ) )
[0]: org. junit. assert. assertnull ( locationformatter. format ( null ) )
[1]: org. junit. assert. assertequals ( true, listsareequal ( costs, costs ) )
[2]: org. junit. assert. assertequals ( false, listsareequal ( costs, costs ) )
[3]: org. junit. assert. assertequals ( majorversionproxy, majorversionproxy )
[4]: org. junit. assert. assertequals ( 1, resources. get ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , group . syncwrite ( request ) )
[0]: org. junit. assert. assertequals ( 1, resources. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), resources )
[2]: org. junit. assert. assertequals ( 1, resources. get ( ). length )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), resources )
[4]: org. junit. assert. assertequals ( 1, jobs. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 123l , usercount )
[0]: org. junit. assert. assertequals ( 2, jobs. size ( ) )
[1]: org. junit. assert. assertequals ( 0, jobs. size ( ) )
[2]: org. junit. assert. assertequals ( 1, jobs )
[3]: org. junit. assert. assertequals ( 1, job. size ( ) )
[4]: org. junit. assert. assertnotnull ( ml )

************

************
tgt: org . junit . assert . asserttrue ( messages . isempty ( ) )
[0]: org. junit. assert. assertequals ( ml, classundertest )
[1]: org. junit. assert. assertequals ( ml, classloaderundertest )
[2]: , ml )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, allpulses. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( net . openhft . chronicle . queue . threadedqueuetest . required_count , counter . get ( ) )
[0]: org. junit. assert. assertequals ( 0, allpulses. size ( ) )
[1]: org. junit. assert. assertnotnull ( allpulses )
[2]: org. junit. assert. assertnull ( allpulses )
[3]: org. junit. assert. assertequals ( 1, allpuls. size ( ) )
[4]: org. junit. assert. assertequals ( true, resultaatstap )

************

************
tgt: org . junit . assert . assertequals ( nodelist . getlength ( ) , 0 )
[0]: org. junit. assert. assertequals ( false, resultaatstap )
[1]: org. junit. assert. assertequals ( 1, resultaatstap )
[2]: org. junit. assert. assertnotnull ( checksameanalysis ( rawfewertwitterinputfile, stemoutraw, m ) )
[3]: org. junit. assert. assertequals ( 1, checksameanalysis ( rawfewertwitterinputfile, stemoutraw, m ) )
[4]: org. junit. assert. assertequals ( true, checksameanalysis ( rawfewertwitterinputfile, stemoutraw, m ) )

************

************
tgt: org . junit . assert . assertfalse ( datawave . query . jexl . visitors . hastoplevelnegationvisitor . hastoplevelnegation ( script ) )
[0]: org. junit. assert. assertequals ( 0, checksameanalysis ( rawfewertwitterinputfile, stemoutraw, m ). length )
[1]: org. junit. assert. assertequals ( 1, checksameanalysis ( rawfewertwitterinputfile, stemoutraw, m ). length )
[2]: org. junit. assert. assertnotnull ( instances )
[3]: org. junit. assert. assertequals ( instances, expander. getocurrences ( calendar, calendar ) )
[4]: org. junit. assert. assertequals ( instances. size ( ), 1 )

************

************
tgt: org . junit . assert . asserttrue ( ( ( leavesgraph . size ( ) ) == 7 ) )
[0]: org. junit. assert. assertequals ( instances, expander )
[1]: ) )
[2]: org. junit. assert. assertnull ( com. splicemachine. derby. utils. splicedatefunctions. to_timestamp ( source ) )
[3]: org. junit. assert. assertequals ( status, confirmation. getstatus ( ) )
[4]: org. junit. assert. assertequals ( status, confirmation. getstatus ( ). getcode ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , result )
[0]: org. junit. assert. assertequals ( status, confirmation. getstatus ( ). get ( ) )
[1]: org. junit. assert. assertequals ( state, confirmation. getstatus ( ) )
[2]: org. junit. assert. assertequals ( result, confirmation. getstatus ( ) )
[3]: org. junit. assert. assertequals ( text, driver. getclipboardtext ( ) )
[4]: org. junit. assert. assertequals ( string, driver. getclipboardtext ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , results )
[0]: org. junit. assert. assertnotnull ( driver. getclipboardtext ( ) )
[1]: org. junit. assert. assertequals ( text, driver. getclipboardtext ( ) )
[2]: ) )
[3]: org. junit. assert. assertthat ( fullcontent, org. hamcrest. matchers. is ( fullsuffix ) )
[4]: org. junit. assert. assertequals ( 4, mutationcounter. count ( ) )

************

************
tgt: org . junit . assert . assertthat ( currentval , org . hamcrest . corematchers . equalto ( tgenerator . fromint ( 0 ) ) )
[0]: org. junit. assert. assertequals ( 4, mutationcounter. size ( ) )
[1]: org. junit. assert. assertequals ( 1, mutationcounter. count ( ) )
[2]: org. junit. assert. assertequals ( orderedcounter. count ( ), resultcounter. size ( ) )
[3]: org. junit. assert. assertequals ( orderedcounter. count ( ), resultcounter. count ( ) )
[4]: org. junit. assert. assertequals ( org. apache. commons. lang3. builder. tostringstyle. no_field_names_style, org. apache. commons. lang3. builder. tostringbuilder. getdefaultstyle ( ) )

************

************
tgt: org . junit . assert . assertequals ( "unhandledexception" , e . getmessage ( ) )
[0]: org. junit. assert. assertequals ( org. apache. commons. lang3. builder. tostringstyle. default_field_names_style, org. apache. commons. lang3. builder. tostringbuilder. getdefaultstyle ( ) )
[1]: org. junit. assert. assertequals ( org. apache. commons. lang3. builder. tostringstyle. default_style, org. apache. commons. lang3. builder. tostringbuilder. getdefaultstyle ( ) )
[2]: org. junit. assert. assertequals ( org. apache. commons. lang3. builder. tostringstyle. not_field_names_style, org. apache. commons. lang3. builder. tostringbuilder. getdefaultstyle ( ) )
[3]: org. junit. assert. assertequals ( org. apache. commons. lang3. builder. tostringstyle. default_style, org. apache. commons. lang3. builder. tostringstyle. getdefaultstyle ( ) )
[4]: org. junit. assert. assertthat ( net. time4j. range. clockinterval. between ( start, end ). isempty ( ), org. hamcrest. corematchers. is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( ro . isdc . wro . maven . plugin . support . testbuildcontextholder . value , victim . getvalue ( ro . isdc . wro . maven . plugin . support . testbuildcontextholder . key ) )
[0]: org. junit. assert. assertthat ( net. time4j. range. clockinterval. between ( start, end ). collect ( ), org. hamcrest. corematchers. is ( true ) )
[1]: org. junit. assert. asserttrue ( validationresult )
[2]: org. junit. assert. assertequals ( true, validationresult )
[3]: org. junit. assert. assertequals ( false, validationresult )
[4]: org. junit. assert. assertthat ( response. status ( ), org. hamcrest. corematchers. is ( status. conflict ) )

************

************
tgt: org . junit . assert . assertnull ( prozessor . gethostname ( ) )
[0]: org. junit. assert. assertthat ( response, org. hamcrest. corematchers. is ( status. conflict ) )
[1]: org. junit. assert. assertthat ( response. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[2]: org. junit. assert. assertthat ( response. state ( ), org. hamcrest. corematchers. is ( status. conflict ) )
[3]: org. junit. assert. assertthat ( response. status ( ), org. hamcrest. corematchers. is ( status. conflicting ) )
[4]: org. junit. assert. assertnotnull ( concept )

************

************
tgt: org . junit . assert . asserttrue ( org . threadly . concurrent . containerhelper . iscontained ( tr , tr ) )
[0]: org. junit. assert. assertequals ( label, concept. label ( ) )
[1]: org. junit. assert. assertequals ( label ( ), concept )
[2]: org. junit. assert. assertequals ( 1, concept. label ( ) )
[3]: org. junit. assert. assertequals ( label, concept )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), binary. eval ( null ) )

************

************
tgt: org . junit . assert . assertequals ( message , 2 , ( 1 + 1 ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), binary. eval ( null ) )
[1]: org. junit. assert. assertequals ( org. araqne. logdb. query. command. comp. eval ( binary ), true )
[2]: org. junit. assert. assertnotnull ( binary. eval ( null ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( sortandtest ( sortedarray ) )

************

************
tgt: org . junit . assert . assertequals ( previous , size )
[0]: org. junit. assert. assertequals ( 1, sortandtest ( sortedarray ) )
[1]: org. junit. assert. assertequals ( true, sortandtest ( sortedarray ) )
[2]: org. junit. assert. assertequals ( orderedarray, sortandtest ( sortedarray ) )
[3]: org. junit. assert. assertequals ( 1, sortandtest ( sortedarray ). length )
[4]: org. junit. assert. assertnotnull ( ctx. getparameter ( org. nuxeo. ecm. core. io. registry. context. testrenderingcontext. value1 ) )

************

************
tgt: org . junit . assert . assertfalse ( metachild . isassignablefrom ( metauncle ) )
[0]: org. junit. assert. assertnull ( ctx. getparameter ( org. nuxeo. ecm. core. io. registry. context. testrenderingcontext. value1 ) )
[1]: org. junit. assert. assertnotnull ( ctx. getparameter ( org. nuxeo. ecm. core. io. registry. context. testrenderingcontext. values ( ) ) )
[2]: org. junit. assert. assertequals ( org. nuxeo. ecm. core. io. registry. context. testrenderingcontext. value1, ctx. getparameter ( ""a"" ) )
[3]: org. junit. assert. assertequals ( org. nuxeo. ecm. core. io. registry. context. testrenderingcontext. value1, ctx. getparameter ( ""foo"" ) )
[4]: org. junit. assert. assertthat ( java. util. arrays. aslist ( model. getvalue ( row, col ) ), org. hamcrest. matchers. is ( expected [ row ] [ col ] ) )

************

************
tgt: org . junit . assert . assertnotnull ( recent )
[0]: org. junit. assert. assertthat ( java. util. arrays. tostring ( model. getvalue ( row, col ) ), org. hamcrest. matchers. is ( expected [ row ] [ col ] ) )
[1]: org. junit. assert. assertthat ( java. lang. string. valueof ( model. getvalue ( row, col ) ), org. hamcrest. matchers. is ( expected [ row ] [ col ] ) )
[2]: org. junit. assert. assertthat ( java. util. arrays. aslist ( model. getvalue ( row, col ) ), org. hamcrest. matchers. is ( expected [ row ] ) )
[3]: org. junit. assert. assertthat ( model. getvalue ( row, col ), org. hamcrest. matchers. is ( expected [ row ] [ col ] ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( header )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. assertthat ( result, empty ( ) )
[2]: org. junit. assert. assertequals ( 1, result. size ( )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( signatureverifier. verify ( signdata, signeddata, true, signatureatureresult ) )

************

************
tgt: org . junit . assert . assertnull ( facet )
[0]: org. junit. assert. assertnotnull ( signatureverifier. verify ( signatureresult, signeddata, true, signaturehead ) )
[1]: org. junit. assert. assertnotnull ( signatureverifier. verify ( signatureresult, signeddata, true, signaturebucketbucketeresult ) )
[2]: org. junit. assert. assertarrayequals ( signeddata, signatureverifier. verify ( signatureresult, signeddata, true, null ) )
[3]: org. junit. assert. assertnotnull ( signatureverifier )
[4]: org. junit. assert. assertequals ( 1, iothubtransportmessage. getbytes ( ). length )

************

************
tgt: org . junit . assert . assertequals ( existingddmforminstancerecord , newddmforminstancerecord )
[0]: org. junit. assert. assertequals ( 0, iothubtransportmessage. getbytes ( ). length )
[1]: org. junit. assert. assertequals ( null, iothubtransportmessage. getbytes ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( data ), iothubtransportmessage. getbytes ( ) )
[3]: org. junit. assert. assertequals ( data, iothubtransportmessage. getbytes ( ) )
[4]: org. junit. assert. assertnotnull ( camelcontextnames )

************

************
tgt: org . junit . assert . assertequals ( s , parsed )
[0]: org. junit. assert. asserttrue ( camelcontextnames. isempty ( ) )
[1]: org. junit. assert. assertnull ( camelcontextnames )
[2]: org. junit. assert. assertequals ( 1, camelcontextnames. length )
[3]: ) )
[4]: org. junit. assert. assertequals ( stepexecution. step, mattermostsendstep. getcolor ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , buffer )
[0]: org. junit. assert. assertequals ( stepexecution. step, stepexecution. getcolor ( ) )
[1]: org. junit. assert. assertequals ( stepexecution. step, cycle. getcolor ( ) )
[2]: org. junit. assert. assertequals ( stepexecution. step. getcolor ( ), 12 )
[3]: org. junit. assert. assertequals ( stepexecution. step. getcolor ( ), mattermostsendstep )
[4]: org. junit. assert. assertequals ( post, topic. getsubject ( ) )

************

************
tgt: org . junit . assert . assertequals ( javatime , d . asint8 ( ) )
[0]: org. junit. assert. assertequals ( post. getsubject ( ), topic )
[1]: org. junit. assert. assertnotnull ( post. getsubject ( ) )
[2]: org. junit. assert. assertequals ( null, post. getsubject ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, 1 )

************

************
tgt: org . junit . assert . assertthat ( copyphase , org . hamcrest . matchers . equalto ( buildphasetotest ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), s )
[1]: org. junit. assert. assertequals ( 1, s. size ( ) )
[2]: org. junit. assert. assertequals ( 0, 1 )
[3]: org. junit. assert. assertequals ( 1, instance. size ( ) )
[4]: org. junit. assert. assertnull ( jaccproviderservice )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( json , expected ) )
[0]: org. junit. assert. assertnull ( jaccproviderservice. isauthorized ( ws, null, scl, null ) )
[1]: org. junit. assert. assertnull ( jaccproviderservice. isauthorized ( wsacproviderservice, scl, null ) )
[2]: org. junit. assert. assertfalse ( jaccproviderservice. isauthorized ( ws, null, scl, null ) )
[3]: org. junit. assert. assertnull ( jaccproviderservice. isauthorized ( ) )
[4]: org. junit. assert. assertequals ( n, result )

************

************
tgt: org . junit . assert . assertfalse ( invalid . valid ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( result, n )
[3]: org. junit. assert. assertequals ( s, result )
[4]: org. junit. assert. asserttrue ( org. guvnor. m2repo. backend. server. m2mavenrepositoryserviceimpltest. containsartifact ( org. guvnor. m2repo. backend. server. m2mavenrepositoryserviceimpltest. gavbackend ) )

************

************
tgt: org . junit . assert . assertfalse ( ribmanager . getroutes4 ( ) . contains ( routeentry ) )
[0]: org. junit. assert. asserttrue ( org. guvnor. m2repo. backend. server. m2mavenrepositoryserviceimpltest. containartifact ( org. guvnor. m2repo. backend. server. m2mavenrepositoryserviceimpltest. gavbackend ) )
[1]: org. junit. assert. assertequals ( true, containsartifact ( org. guvnor. m2repo. backend. server. m2mavenrepositoryserviceimpltest. gavbackend ) )
[2]: org. junit. assert. asserttrue ( org. guvnor. m2repo. backend. server. m2mavenrepositoryserviceimpltest. containsartifact ( org. guvnor. m2repo. backend. server. m2mavenrepositoryserviceimpltest ) )
[3]: org. junit. assert. asserttrue ( org. guvnor. m2repo. backend. server. m2mavenrepositoryserviceimpltest. containsartifact ( org. guvnor. m2repo ) )
[4]: org. junit. assert. assertequals ( value, source. mapto ( value, target ) )

************

************
tgt: org . junit . assert . assertequals ( "user.ab\\.cd" , link . tostring ( ) )
[0]: org. junit. assert. assertequals ( value, set mapto ( value, target ) )
[1]: org. junit. assert. assertequals ( value, read. mapto ( value, target ) )
[2]: org. junit. assert. assertequals ( value, splitter. mapto ( value, target ) )
[3]: org. junit. assert. assertequals ( value, transform. mapto ( value, target ) )
[4]: org. junit. assert. assertequals ( intersection, intersection )

************

************
tgt: org . junit . assert . assertequals ( assertion , eval [ 0 ] )
[0]: org. junit. assert. assertnotnull ( intersection )
[1]: org. junit. assert. assertequals ( l1, intersection )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( 0, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, response. getobjects ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( samplemodel . getnumbands ( ) , org . hamcrest . corematchers . is ( 5 ) )
[0]: org. junit. assert. assertequals ( 0, response. getobjects ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 2, response. getobjects ( ). size ( ) )
[2]: org. junit. assert. assertequals ( numobjects, response. getobjects ( ) )
[3]: org. junit. assert. assertequals ( 1, response. getobjects ( ). size ( )
[4]: org. junit. assert. assertequals ( frequencies, actualfrequencies )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( freequencies, actualfrequencies )
[1]: org. junit. assert. assertequals ( frequencies, actualfreevents )
[2]: org. junit. assert. assertequals ( destquencies, actualfrequencies )
[3]: org. junit. assert. assertequals ( frequencies, actualfrefiles )
[4]: org. junit. assert. assertnotnull ( r. geturl ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( requestid )
[0]: org. junit. assert. assertnull ( r. geturl ( ) )
[1]: org. junit. assert. assertequals ( r. geturl ( ), r )
[2]: org. junit. assert. assertequals ( r, r. geturl ( ) )
[3]: org. junit. assert. assertequals ( null, r. geturl ( ) )
[4]: org. junit. assert. assertequals ( attributeset1, attributeset2 )

************

************
tgt: org . junit . assert . assertequals ( targetelement , button . getelement ( ) )
[0]: org. junit. assert. assertequals ( attributeset1. get ( ), attributeset2. get ( ) )
[1]: org. junit. assert. assertequals ( attributeset1. getvalue ( ), attributeset2. getvalue ( ) )
[2]: org. junit. assert. assertequals ( attributeset1. tostring ( ), attributeset2. tostring ( ) )
[3]: org. junit. assert. assertequals ( attributeset1, attributeset1 )
[4]: org. junit. assert. assertequals ( output, readmarshaller )

************

************
tgt: org . junit . assert . assertequals ( 1 , tasks . size ( ) )
[0]: org. junit. assert. assertequals ( output, readmarshaller. get ( ) )
[1]: org. junit. assert. assertequals ( buildstack ( out ), readmarshaller )
[2]: org. junit. assert. assertequals ( builddd )
[3]: org. junit. assert. assertequals ( buildmarshaller, readmarshaller )
[4]: org. junit. assert. assertequals ( null, tokenverifier. getlasttokenstring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , categoriesandthreadscount )
[0]: org. junit. assert. assertnull ( tokenverifier. getlasttokenstring ( ) )
[1]: org. junit. assert. assertequals ( """", tokenverifier. getlasttokenstring ( ) )
[2]: org. junit. assert. assertnotnull ( tokenverifier. getlasttokenstring ( ) )
[3]: org. junit. assert. assertequals ( 0, tokenverifier. getlasttokenstring ( ) )
[4]: org. junit. assert. assertequals ( 0, org. apache. jackrabbit. oak. index. indexer. document. nodestateentry. getentries ( tree ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected . tobag ( ) , actual )
[0]: org. junit. assert. assertequals ( 1, org. apache. jackrabbit. oak. index. indexer. document. nodestateentry. getentries ( tree ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, dao. getentries ( tree ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, dao. getentries ( tree ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, org. apache. jackrabbit. oak. index. indexer. document. tree. getentries ( tree ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, comparepomfiles ( reactorprojects ) )

************

************
tgt: org . junit . assert . assertequals ( releaseentity , release )
[0]: org. junit. assert. assertequals ( 0, comparepomfiles ( reactorprojects ) )
[1]: org. junit. assert. assertequals ( comparepomfiles ( reactorprojects ), 1 )
[2]: org. junit. assert. assertequals ( 3, rules. size ( ) )
[3]: org. junit. assert. asserttrue ( containerspec. matches ( containertlv ) )
[4]: org. junit. assert. assertnotnull ( one )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. asserttrue ( entry. hasproperties ( ) )
[1]: org. junit. assert. assertfalse ( entry. hasproperties ( ) )
[2]: org. junit. assert. assertequals ( true, entry. hasproperties ( ) )
[3]: org. junit. assert. asserttrue ( entries. hasproperties ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , target . tostring ( ) )
[0]: org. junit. assert. assertthat ( state. isenabled ( ), org. hamcrest. corematchers. equalto ( false ) )
[1]: org. junit. assert. assertnull ( cache. getdata ( ) )
[2]: org. junit. assert. assertnotnull ( cache. getdata ( ) )
[3]: org. junit. assert. assertequals ( 0, cache. getdata ( ). length )
[4]: org. junit. assert. assertnotnull ( cache. getdata ( ). isempty ( ) )

************

************
tgt: org . junit . assert . assertfalse ( problem )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( child )
[2]: org. junit. assert. assertequals ( root, child )
[3]: org. junit. assert. assertnull ( child )
[4]: org. junit. assert. assertequals ( child, root )

************

************
tgt: org . junit . assert . assertthat ( generatedjson , org . hamcrest . corematchers . is ( expectedjson ) )
[0]: org. junit. assert. assertequals ( child, null )
[1]: org. junit. assert. assertequals ( org. jacoco. core. analysis. nodecomparator. second ( c1 ), c2 )
[2]: org. junit. assert. assertequals ( org. jacoco. core. analysis. nodecomparator. second ( c2 ), c1 )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( d1, d2 ), c2. second ( c1 ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( d1, d2 ), c1. second ( c2 ) )

************

************
tgt: org . junit . assert . asserttrue ( cleanup . get ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( d1, d2 ), c1. second ( c1 ) )
[1]: org. junit. assert. assertequals ( openshiftapiversion. v1beta3, registry. getmaxsupportedopenshiftversion ( serverversions ) )
[2]: org. junit. assert. assertequals ( openshiftapiversion. v1beta3, service. getmaxsupportedopenshiftversion ( serverversions ) )
[3]: org. junit. assert. assertequals ( openshiftapiversion. v1beta3, serverversions. getmaxsupportedopenshiftversion ( serverversions ) )
[4]: org. junit. assert. assertequals ( openshiftapiversion. v1beta3, instance. getmaxsupportedopenshiftversion ( serverversions ) )

************

************
tgt: org . junit . assert . assertequals ( expected , ex . getmessage ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( null, jsonobject )
[2]: org. junit. assert. assertequals ( valid, jsonobject )
[3]: org. junit. assert. assertequals ( 0, jsonobject. length )
[4]: org. junit. assert. assertnotnull ( jsonobject )

************

************
tgt: org . junit . assert . asserttrue ( stub . notoverridden ( false ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( property. getvalue ( ) )
[2]: org. junit. assert. assertequals ( pd, property. getvalue ( ) )
[3]: org. junit. assert. assertnull ( property. getvalue ( ) )
[4]: org. junit. assert. assertsame ( pd, property. getvalue ( ) )

************

************
tgt: org . junit . assert . asserttrue ( com . hp . mwtests . ts . arjuna . recovery . actiontestserver . test_setup ( ) )
[0]: ) )
[1]: org. junit. assert. assertnull ( found )
[2]: org. junit. assert. assertequals ( expected, found )
[3]: org. junit. assert. assertnull ( found )
[4]: org. junit. assert. assertequals ( true, mapper. hasmap ( hexane ) )

************

************
tgt: org . junit . assert . assertthat ( target . exists ( ) , is ( true ) )
[0]: org. junit. assert. assertequals ( false, mapper. hasmap ( hexane ) )
[1]: org. junit. assert. assertequals ( true, mapper. hasmap ( hexane. isempty ( ) ) )
[2]: org. junit. assert. assertequals ( o, serializedeserialize ( mapper, o, java. lang. object. class ) )
[3]: org. junit. assert. assertequals ( o, serializedeserialize ( mapper, o, com. google. common. collect. immutablemap. of ( ) ) )
[4]: org. junit. assert. assertequals ( o, serializedeserialize ( mapper, o, com. google. common. collect. immutablemap. class ) )

************

************
tgt: org . junit . assert . assertequals ( rc4fundings1 , rc4fundings2 )
[0]: org. junit. assert. assertequals ( o, serializedeserialize ( mapper, o, java. util. function. lambda. class ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[3]: org. junit. assert. assertequals ( expected, testutils. formattedresult. outputfactory. tostringunsorted ( rs ) )
[4]: org. junit. assert. assertequals ( expected, java. lang. string. valueof ( rs. tostringunsorted ( rs ) )

************

************
tgt: org . junit . assert . assertequals ( "test" , item . getname ( ) )
[0]: ( expected ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, iterationresult. getputintoplay ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, iterationresult. getputintoplay ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, iterationresult. getputintoplay ( ). length )

************

************
tgt: org . junit . assert . assertequals ( entityclass , instance . getentityclass ( ) )
[0]: org. junit. assert. assertequals ( 3, iterationresult. getputintoplay ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, iterationresult. getputintoplay ( ) )
[2]: org. junit. assert. assertequals ( expecting )
[3]: java. util. arrays. aslist ( expecting ) )
[4]: org. junit. assertequals ( expecting, result )

************

************
tgt: org . junit . assert . assertnotnull ( tagids )
[0]: assertequals assertequals expecting, result )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( profile. getaccesstoken ( ) )
[3]: org. junit. assert. assertequals ( accesstoken, profile. getaccesstoken ( ) )
[4]: org. junit. assert. assertnull ( profile. getaccesstoken ( ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , result . getproperties ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( profile. getaccesstoken ( ), accesstoken )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( externalid )
[3]: org. junit. assert. assertequals ( 1, externalid )
[4]: org. junit. assert. assertequals ( 0, externalid )

************

************
tgt: org . junit . assert . assertfalse ( value )
[0]: org. junit. assert. assertequals ( 1, externalid, 0 )
[1]: org. junit. assert. assertequals ( 1, externalid, 1 )
[2]: org. junit. assert. assertequals ( expectedtable, foundtable )
[3]: org. junit. assert. assertequals ( expectedtable, foundtable, foundtable )
[4]: org. junit. assert. assertequals ( expectedtable, foundtable == ( foundtable ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , p . gettargetoffset ( ) )
[0]: org. junit. assert. assertequals ( expectedtable, foundtable
[1]: ) )
[2]: org. junit. assert. assertequals ( null, value )
[3]: org. junit. assert. assertnull ( value )
[4]: org. junit. assert. assertnotnull ( value )

************

************
tgt: org . junit . assert . assertfalse ( ischecked )
[0]: org. junit. assert. assertequals ( value, null )
[1]: org. junit. assert. assertequals ( null, valu )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), result )

************

************
tgt: org . junit . assert . assertequals ( api . size ( ) , itemsets . size ( ) )
[0]: org. junit. assert. assertequals ( expected, private )
[1]: org. junit. assert. assertequals ( s, result )
[2]: org. junit. assert. assertnull ( response. getlocation ( ) )
[3]: org. junit. assert. assertequals ( org. everrest. core. impl. location, response. getlocation ( ) )
[4]: org. junit. assert. assertnotnull ( response. getlocation ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( instance . getparentartifactid ( ) )
[0]: org. junit. assert. assertsame ( response, response. getlocation ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( ( ( okio. testutil. segment_size ) * 3 ), sink. size ( ) )
[3]: org. junit. assert. assertnotnull ( optionsbytype. get ( java. lang. string. class ) )
[4]: org. junit. assert. assertnotnull ( optionsbytype. get ( java. lang. object. class ) )

************

************
tgt: org . junit . assert . asserttrue ( flownodetransitionswrapper . hasmultipleincomingtransitions ( ) )
[0]: org. junit. assert. assertnull ( optionsbytype. get ( java. lang. string. class ) )
[1]: org. junit. assert. assertnull ( optionsbytype. get ( java. lang. object. class ) )
[2]: org. junit. assert. assertnotnull ( optionsbytype. get ( 0 ) )
[3]: org. junit. assert. assertequals ( message, responsemap. response )
[4]: org. junit. assert. assertequals ( msg, responsemap. response )

************

************
tgt: org . junit . assert . assertnull ( connection . getwarnings ( ) )
[0]: org. junit. assert. assertequals ( responsemap. response, message )
[1]: org. junit. assert. assertequals ( msg, message )
[2]: org. junit. assert. assertequals ( message, msg )
[3]: org. junit. assert. assertequals ( 0, mlife. get ( entityid ) )
[4]: org. junit. assert. assertequals ( 1, mlife. get ( entityid ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( null, mlife. get ( entityid ) )
[1]: org. junit. assert. asserttrue ( result. hasfailures ( ) )
[2]: org. junit. assert. assertequals ( 0, regression. getn ( ) )
[3]: org. junit. assert. assertequals ( 0l, regression. getn ( ) )
[4]: org. junit. assert. assertequals ( 1, regression. getn ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( java . lang . integer ) ( 255 ) ) , color . getlowgreen ( ) )
[0]: org. junit. assert. assertequals ( zero, regression. getn ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( content, importedcontent )
[3]: org. junit. assert. assertnull ( importedcontent )
[4]: , importedcontent )

************

************
tgt: org . junit . assert . assertequals ( 5 , operation . operations . size )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 0, nrows )
[3]: org. junit. assert. assertequals ( 15, nrows )
[4]: org. junit. assert. assertequals ( 1, nrows )

************

************
tgt: org . junit . assert . assertequals ( idalternatives . get ( ( ( idalternatives . size ( ) ) - 1 ) ) . tostring ( ) , userhashes . get ( idx ) )
[0]: org. junit. assert. assertequals ( startsize, secondsize )
[1]: org. junit. assert. assertequals ( firstsize, secondsize )
[2]: org. junit. assert. assertequals ( startssize, secondsize )
[3]: org. junit. assert. assertnotnull ( secondsize )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( filethatdoesntexist . exists ( ) )
[0]: org. junit. assert. assertequals ( expected, codes [ 0 ] )
[1]: org. junit. assert. assertequals ( expected, codes [ 1 ] )
[2]: org. junit. assert. assertequals ( expected, codes. length )
[3]: org. junit. assert. assertequals ( expected, codes [ 8 ] )
[4]: org. junit. assert. assertequals ( expected, codes )

************

************
tgt: org . junit . assert . assertequals ( de . akquinet . jbosscc . needle . db . operation . hsql . hsqldeleteoperation . class , dbdialectclass )
[0]: org. junit. assert. asserttrue ( metastore. getsysteminfobyproperty ( newsysteminfo. getid ( ) ). equals ( newsysteminfo ) )
[1]: org. junit. assert. asserttrue ( metastore. getsysteminfobyproperty ( newsysteminfo. tostring ( ) ). equals ( newsysteminfo ) )
[2]: org. junit. assert. asserttrue ( metastore. getsysteminfobyproperty ( newsysteminfo ). equals ( newsysteminfo ) )
[3]: org. junit. assert. asserttrue ( metastore. getsysteminfobyproperty ( newsysteminfo. getid ( ) ). equals ( systeminfo ) )
[4]: org. junit. assert. asserttrue ( metastore. getsysteminfobyproperty ( newsysteminfo. getname ( ) ). equals ( newsysteminfo ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new long [ ] { 1 , 2 } , arr )
[0]: org. junit. assert. assertnotnull ( instance. ctx )
[1]: org. junit. assert. assertequals ( org. la4j. vector. frommatrixmarket ( is ), result )
[2]: org. junit. assert. assertequals ( org. la4j. vector. frommatrixmarket ( is ), java. util. zero ( 0 ) )
[3]: org. junit. assert. assertequals ( org. la4j. vector. frommatrixmarket ( is ), 0 )
[4]: org. junit. assert. assertequals ( result, org. la4j. vector. frommatrixmarket ( is ) )

************

************
tgt: org . junit . assert . assertequals ( result . size ( ) , testcount )
[0]: org. junit. assert. assertequals ( org. la4j. vector. frommatrixmarket ( is ), java. util. zero ( zero ) )
[1]: org. junit. assert. assertequals ( string. class, accessor. getname ( ) )
[2]: org. junit. assert. assertnotnull ( accessor. getname ( ) )
[3]: org. junit. assert. assertequals ( string, accessor. getname ( ) )
[4]: org. junit. assert. assertequals ( string_1, accessor. getname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( resultsq ) == null ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( e )
[2]: org. junit. assert. assertequals ( exception, e )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( ( before + 1 ) , nodecount )
[0]: 
[1]: org. junit. assert. assertnotnull ( builder )
[2]: org. junit. assert. assertnotnull ( builder. tostring ( ) )
[3]: org. junit. assert. assertequals ( expected, result )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertequals ( build , gf . getbuildscript ( ) )
[0]: org. junit. assert. assertequals ( 1, result. length )
[1]: org. junit. assert. assertequals ( key1, key2 )
[2]: org. junit. assert. assertnotnull ( key2 )
[3]: org. junit. assert. assertnotnull ( key1 )
[4]: org. junit. assert. assertequals ( key1, keys2 )

************

************
tgt: org . junit . assert . asserttrue ( classundertest . removedocuments ( "document<sp>1" ) )
[0]: )
[1]: org. junit. assert. assertequals ( 1.0, instance. gettruenegativesrate ( ), eps )
[2]: org. junit. assert. assertequals ( 0.0, instance. gettruenegativesrate ( ), eps )
[3]: org. junit. assert. assertequals ( 1, instance. gettruenegativesrate ( ), eps )
[4]: org. junit. assert. assertequals ( java. lang. double. valueof ( fp ), instance. gettruenegativesrate ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedelementlist . toarray ( ) , sel . toarray ( ) )
[0]: org. junit. assert. assertequals ( ( fp / ( fp + tn ) ), instance. gettruenegativesrate ( ) )
[1]: org. junit. assert. assertequals ( 206, result. getstatuscode ( ) )
[2]: org. junit. assert. assertequals ( 206, ( ( int ) ( result. getstatuscode ( ) ) ) )
[3]: org. junit. assert. assertequals ( 206. getstatuscode ( ), result. getstatuscode ( ) )
[4]: org. junit. assert. assertthat ( result. getstatuscode ( ), org. hamcrest. matchers. is ( 206 ) )

************

************
tgt: org . junit . assert . assertequals ( resolver , factory . createvariable ( "myname" , "myvalue" ) )
[0]: org. junit. assert. assertequals ( 2006, result. getstatuscode ( ) )
[1]: org. junit. assert. assertarrayequals ( bytesfrom, wrap ( bbto. array ( ) ) )
[2]: org. junit. assert. assertarrayequals ( bytesfrom, wrap ( bbto ) )
[3]: org. junit. assert. assertarrayequals ( bytesfrom, wrap ( bbto. stream ( ) ) )
[4]: org. junit. assert. assertarrayequals ( bytesfrom, wrapper ( bbto. array ( ) ) )

************

************
tgt: org . junit . assert . assertnull ( test )
[0]: org. junit. assert. assertarrayequals ( bytesfrom, wrap ( bbto. tobytearray ( ) ) )
[1]: org. junit. assert. assertnotnull ( currentsource )
[2]: org. junit. assert. assertequals ( null, currentsource )
[3]: org. junit. assert. assertnull ( currentsource )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( null , service . cleanuptext ( "" ) )
[0]: )
[1]: org. junit. assert. assertequals ( null, canvascommand )
[2]: org. junit. assert. assertequals ( tested, canvascommand )
[3]: org. junit. assert. assertthat ( query. askeylist ( ), org. hamcrest. corematchers. is ( java. util. collections. emptylist ( ) ) )
[4]: org. junit. assert. assertthat ( query. askeylist ( ). isempty ( ), org. hamcrest. corematchers. is ( true ) )

************

************
tgt: org . junit . assert . assertthat ( text ( contents ) , is ( "};" 1 ) )
[0]: org. junit. assert. assertthat ( query. askeylist ( ), org. hamcrest. corematchers. is ( list ( ) ) )
[1]: org. junit. assert. assertthat ( query. askeylist ( ), org. hamcrest. corematchers. is ( true ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, org. nutz. ioc. aop. config. impl. simple. oneobject. count )
[4]: org. junit. assert. assertequals ( 0, org. nutz. ioc. aop. config. impl. simple. oneobject. count )

************

************
tgt: org . junit . assert . asserttrue ( isvalid )
[0]: org. junit. assert. assertequals ( 3, org. nutz. ioc. aop. config. impl. simple. oneobject. count )
[1]: org. junit. assert. assertequals ( 2, org. nutz. ioc. aop. config. impl. simple. oneobject. count )
[2]: org. junit. assert. assertequals ( 1, org. nutz. ioc. aop. config. impl. simple. oneobject. count ) to
[3]: org. junit. assert. asserttrue ( ( e instanceof java. lang. runtimeexception ) )
[4]: org. junit. assert. asserttrue ( ( e instanceof org. apache. hadoop. util. runtimeexception ) )

************

************
tgt: org . junit . assert . asserttrue ( overlap )
[0]: org. junit. assert. asserttrue ( ( e instanceof org. apache. hadoop. util. stringutilsexception ) )
[1]: org. junit. assert. asserttrue ( ( e instanceof org. apache. hadoop. util. stringutils ) )
[2]: org. junit. assert. asserttrue ( ( e instanceof java. util. runtimeexception ) )
[3]: org. junit. assert. assertequals ( 1, legend. getposition ( ) )
[4]: org. junit. assert. assertequals ( 0, legend. getposition ( ) )

************

************
tgt: org . junit . assert . asserttrue ( success )
[0]: org. junit. assert. assertequals ( legendposition, legend. getposition ( ) )
[1]: org. junit. assert. assertequals ( legendposition. top_right, legend )
[2]: org. junit. assert. assertequals ( legendposition. top_right, legend, legend )
[3]: org. junit. assert. assertfalse ( ret )
[4]: org. junit. assert. assertequals ( 0, nodelist. getnodelist ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( mediaqueries . tostring ( ) , 0 , mediaqueries . size ( ) )
[0]: org. junit. assert. assertsame ( 0, nodelist. getnodelist ( ). size ( ) )
[1]: org. junit. assert. assertarrayequals ( 0, nodelist. getnodelist ( ). toarray ( ) )
[2]: org. junit. assert. assertnull ( nodelist. getnodelist ( ) )
[3]: org. junit. assert. assertarrayequals ( null, nodelist. getnodelist ( ). toarray ( ) )
[4]: org. junit. assert. assertnotnull ( actualexceptioncode )

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertnull ( actualexceptioncode )
[1]: org. junit. assert. assertequals ( exceptionmappings, actualexceptioncode )
[2]: org. junit. assert. assertequals ( exceptionmappings, actualexception code )
[3]: ) )
[4]: org. junit. assert. assertequals ( com. spotify. helios. testing. hostpickingstrategiestest. hosts, chosenhosts )

************

************
tgt: org . junit . assert . assertthat ( com . spotify . hamcrest . jackson . isjsonnumbertest . nf . numbernode ( 1 ) , org . hamcrest . core . is . is ( sut ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( com. spotify. helios. testing. hostpickingstrategiestest. hosts ), chosenhosts )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( com. spotify. helios. testing. hostpickingstrategiestest. hosts ), chosenhosts )
[2]: org. junit. assert. assertequals ( com. spotify. helios. testing. hostpickingstrategiestest. hosts, chosenhosts. size ( ) )
[3]: org. junit. assert. assertnotnull ( processedsql )
[4]: org. junit. assert. assertnull ( processedsql )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( sql, processedsql )
[1]: org. junit. assert. assertequals ( null, processedsql )
[2]: org. junit. assert. assertequals ( expected, processedsql )
[3]: org. junit. assert. assertequals ( newmultimapwithkeyvalue ( 1, 2 ), selectedmultimap )
[4]: org. junit. assert. assertequals ( newmultimapwithkeyvalue ( 3, 1 ), selectedmultimap )

************

************
tgt: org . junit . assert . assertequals ( 0 , achievementtracker . getunlockedcount ( ) )
[0]: org. junit. assert. assertequals ( newmultimapwithkeyvalue ( 2, 1 ), selectedmultimap )
[1]: org. junit. assert. assertequals ( newmultimapwithkeyvalue ( 2, 3 ), selectedmultimap )
[2]: org. junit. assert. assertequals ( newmultimapwithkeyvalue ( 3, 2 ), selectedmultimap )
[3]: org. junit. assert. assertnotnull ( f. getname ( ) )
[4]: org. junit. assert. assertequals ( name, f. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( null, f. getname ( ) )
[1]: org. junit. assert. assertequals ( string, f. getname ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( java. math. bigdecimal. valueof ( 1 ), tax )
[4]: org. junit. assert. assertequals ( 1, 1 )

************

************
tgt: org . junit . assert . asserttrue ( validator . validate ( context , entity , root ) . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( collection )
[1]: org. junit. assert. assertnotnull ( queue )
[2]: org. junit. assert. assertnotnull ( context )
[3]: org. junit. assert. assertnotnull ( s )
[4]: org. junit. assert. asserttrue ( result )

************

************
tgt: org . junit . assert . assertequals ( expecting , result )
[0]: org. junit. assert. assertequals ( 1, sut. getkeyfingerprintcalculator ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( updatedval )
[2]: org. junit. assert. assertequals ( 1, updatedval )
[3]: org. junit. assert. assertnull ( updatedval )
[4]: org. junit. assert. assertequals ( 3, updatedval )

************

************
tgt: org . junit . assert . assertequals ( 3 , pathes . size ( ) )
[0]: org. junit. assert. assertnotnull ( updatedversion )
[1]: org. junit. assert. assertnotnull ( defaultvalue )
[2]: org. junit. assert. assertequals ( resultset, defaultvalue )
[3]: org. junit. assert. assertnull ( defaultvalue )
[4]: org. junit. assert. assertthat ( defaultvalue )

************

************
tgt: org . junit . assert . assertfalse ( event . iscancelled ( ) )
[0]: org. junit. assert. assertthat ( defaultvalue, org )
[1]: org. junit. assert. assertthat ( result ( ), org. hamcrest. matchers. is ( expectedresult ) )
[2]: org. junit. assert. assertthat ( result ( ), org. hamcrest. matchers. contains ( expectedresult ) )
[3]: org. junit. assert. assertequals ( expectedresult, result ( ) )
[4]: org. junit. assert. assertthat ( result ( ), is ( expectedresult ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , c . number ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 123456l, multikey. reducecompoundkey ( multikey ) )
[2]: org. junit. assert. assertnotnull ( multikey. reducecompoundkey ( multikey ) )
[3]: org. junit. assert. assertequals ( 123456l, reducecompoundkey ( multikey ) )
[4]: org. junit. assert. assertequals ( 123456l, gen. reducecompoundkey ( multikey ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , overtreders . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, errors. size ( ) )
[2]: org. junit. assert. assertequals ( 0, errors. size ( ) )
[3]: org. junit. assert. asserttrue ( found )
[4]: org. junit. assert. assertequals ( 1, client. getidleconnections ( ) )

************

************
tgt: org . junit . assert . asserttrue ( org . apache . zeppelin . server . corsfiltertest . headers [ 0 ] . equals ( "http://localhost:8080" ) )
[0]: org. junit. assert. assertnotnull ( client. getidleconnections ( ) )
[1]: org. junit. assert. assertequals ( 1, contexts. size ( ) )
[2]: org. junit. assert. assertnotnull ( response )
[3]: org. junit. assert. assertnull ( response )
[4]: org. junit. assert. assertequals ( 200, response )

************

************
tgt: org . junit . assert . assertequals ( 1 , violations . size ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 1, massmap. size ( ) )
[3]: org. junit. assert. assertequals ( 1, args. size ( ) )
[4]: org. junit. assert. assertnotnull ( args )

************

************
tgt: org . junit . assert . assertequals ( "foo" , meta . getvalue ( "richtype.richfield" ) )
[0]: org. junit. assert. assertequals ( 1, masshashmap. size ( ) )
[1]: org. junit. assert. assertequals ( 0, args. size ( ) )
[2]: org. junit. assert. assertthat ( conn. getserver ( ), org. hamcrest. matchers. is ( mockconnection ) )
[3]: org. junit. assert. assertnotnull ( conn. getserver ( ) )
[4]: org. junit. assert. assertnull ( conn. getserver ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ! ( iterator . hasnext ( ) ) ) )
[0]: org. junit. assert. assertequals ( server, conn. getserver ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( mytitle )
[3]: org. junit. assert. assertequals ( expected, mytitle )
[4]: org. junit. assert. assertequals ( null, mytitle )

************

************
tgt: org . junit . assert . assertequals ( message , receivedbody )
[0]: org. junit. assert. assertequals ( xml, mytitle )
[1]: ) )
[2]: org. junit. assert. assertthat ( com. asakusafw. runtime. io. json. jsonformattest. read ( in ), contains ( null ) )
[3]: org. junit. assert. assertthat ( com. asakusafw. runtime. io. json. jsonformattest. read ( in ), contains ( format ) )
[4]: org. junit. assert. assertthat ( com. asakusafw. runtime. io. json. jsonformattest. read ( in ), contains ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( true , false )
[0]: org. junit. assert. assertthat ( com. asakusafw. runtime. io. json. jsonformattest. read ( in ), contains ( new java. lang. object ( ) ) )
[1]: org. junit. assert. assertthat ( com. asakusafw. runtime. io. json. jsonformattest. read ( in ), contains ( new java. lang. string ( ) ) )
[2]: org. junit. assert. assertequals ( true, ( cloneduribuilder!= null ) )
[3]: org. junit. assert. assertequals ( true, ( cloneduribuilder == null ) )
[4]: org. junit. assert. assertequals ( 1, cloneduribuilder. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( rows , org . hamcrest . matchers . equalto ( expected ) )
[0]: org. junit. assert. assertequals ( false, ( cloneduribuilder!= null ) )
[1]: org. junit. assert. assertequals ( null, cloneduribuilder )
[2]: org. junit. assert. assertarrayequals ( bytes, acquiredtasks )
[3]: org. junit. assert. assertarrayequals ( bytes, bytes )
[4]: org. junit. assert. assertequals ( bytes. length, acquiredtasks )

************

************
tgt: org . junit . assert . asserttrue ( ( ( mcolumn3 [ 0 ] ) != ( m . getcolumn ( 1 ) [ 0 ] ) ) )
[0]: org. junit. assert. assertequals ( maxtasks, bytes. length )
[1]: org. junit. assert. assertarrayequals ( bytes, expectedtasks )
[2]: org. junit. assert. assertequals ( 1, count )
[3]: org. junit. assert. assertequals ( 0, count )
[4]: org. junit. assert. assertequals ( 2, count )

************

************
tgt: org . junit . assert . assertequals ( 4 , d )
[0]: org. junit. assert. assertequals ( 1, this. component. getproxyconnector ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arraylist. class, this. getproxyconnector ( ). getclass ( ) )
[2]: org. junit. assert. assertequals ( 1, this. context. getproxyconnector ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arraylist. class, impl. getproxyconnector ( ). getclass ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), n. getproxyconnector ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( contentsenttoclient . get ( ) )
[0]: org. junit. assert. assertthat ( postprocessor, org. hamcrest. corematchers. is ( ordered. highest_precedence ) )
[1]: org. junit. assert. assertequals ( ordered. highest_precedence, postprocessor. getorder ( ) )
[2]: org. junit. assert. assertthat ( postprocessor. getorder ( ), org. hamcrest. matchers. is ( ordered. highest_precedence ) )
[3]: org. junit. assert. assertthat ( postprocessor, org. hamcrest. core. is. is ( ordered. highest_precedence ) )
[4]: org. junit. assert. assertthat ( postprocessor )

************

************
tgt: org . junit . assert . assertequals ( 4 , numberoffriends )
[0]: org. junit. assert. assertequals ( 1, mappings. size ( ) )
[1]: org. junit. assert. assertequals ( 0, mappings. size ( ) )
[2]: org. junit. assert. assertequals ( 2, mappings. size ( ) )
[3]: org. junit. assert. assertequals ( 3, mappings. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( r . equals ( r . geometry ( ) ) )
[0]: org. junit. assert. assertequals ( marytts. unitselection. data. timelinetest. origdatagrams [ ( testidx + 1 ) ], d )
[1]: org. junit. assert. assertequals ( marytts. unitselection. data. timelinetest. origdatagrams [ ( testidx - 1 ) ], d )
[2]: org. junit. assert. assertequals ( marytts. unitselection. data. timelinetest. origdatagrams [ ( midtime + 1 ) ], d )
[3]: org. junit. assert. assertnotnull ( d )
[4]: org. junit. assert. assertequals ( marytts. unitselection. data, d )

************

************
tgt: org . junit . assert . assertequals ( 200 , resp . getstatus ( ) )
[0]: org. junit. assert. assertequals ( timeunit. hours. tomillis ( ( tohour - currenthour ) ), result )
[1]: org. junit. assert. assertequals ( timeunit. hours. tomillis ( ( tohour + currenthour ) ), result )
[2]: org. junit. assert. assertequals ( timeunit. hours. tomillis ( ( tohour / currenthour ) ), result )
[3]: org. junit. assert. assertequals ( timeunit. hours. tomillis ( ( tohour * currenthour ) ), result )
[4]: org. junit. assert. assertequals ( timeunit. hours. tomillis ( ( tohour - currenthour ), result )

************

************
tgt: org . junit . assert . asserttrue ( testrepprop . contains ( test ) )
[0]: org. junit. assert. asserttrue ( p1. equals ( p2 ) )
[1]: org. junit. assert. assertequals ( 1, unique. size ( ) )
[2]: org. junit. assert. assertequals ( 0, unique. size ( ) )
[3]: org. junit. assert. assertequals ( 3, unique. size ( ) )
[4]: org. junit. assert. assertequals ( 2, unique. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( resourceprofile . unknown . ismatching ( resourceprofile . unknown ) )
[0]: org. junit. assert. assertequals ( 1, uid. size ( ) )
[1]: org. junit. assert. assertnotnull ( parametersmap. getelementid ( ) )
[2]: org. junit. assert. assertnotnull ( paramsmap. getelementid ( ) )
[3]: org. junit. assert. assertnull ( parametersmap. getelementid ( ) )
[4]: org. junit. assert. assertnotnull ( parametermap. getelementid ( ) )

************

************
tgt: org . junit . assert . assertequals ( reference , comparisonexpression . ascnf ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( userroletypes, result )
[2]: org. junit. assert. assertequals ( userroletype. unit_administrator, result )
[3]: org. junit. assert. assertequals ( java. util. concurrent. runtimeexception. class, result. getclass ( ) )
[4]: org. junit. assert. assertequals ( userroletype. unit_administrator, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertequals ( plainbytes, com. matthewmitchell. peercoin_android_wallet. util. cryptotest. plain_bytes )
[2]: org. junit. assert. assertnotnull ( plainbytes )
[3]: org. junit. assert. assertequals ( plainbytes. length, 0 )
[4]: , plainbytes )

************

************
tgt: org . junit . assert . assertthat ( move , is ( result ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( expected, test )
[3]: org. junit. assert. assertequals ( expected, testresult )
[4]: org. junit. assert. assertequals ( expected, testvec )

************

************
tgt: org . junit . assert . assertnotnull ( tr )
[0]: org. junit. assert. assertequals ( norm, sugar )
[1]: org. junit. assert. assertequals ( 1, bin. getindex ( ) )
[2]: org. junit. assert. assertequals ( 5, bin. getindex ( ) )
[3]: org. junit. assert. assertequals ( 6, bin. getindex ( ) )
[4]: org. junit. assert. assertequals ( idx, bin. getindex ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , decoded . content ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, mismatchconfigurabletypeproblems. size ( ) )
[2]: org. junit. assert. assertequals ( 1, mismatchconfigurabletypeabletypeproblems. size ( ) )
[3]: org. junit. assert. assertarrayequals ( values2, values2 )
[4]: org. junit. assert. assertnotnull ( foundposts )

************

************
tgt: org . junit . assert . assertequals ( ( ( byte ) ( 0 ) ) , buffer . readbyte ( ) )
[0]: org. junit. assert. asserttrue ( foundposts. isempty ( ) )
[1]: org. junit. assert. assertnull ( foundposts )
[2]: org. junit. assert. assertequals ( 0, foundposts. length )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1l, manager. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( 1l, progress )
[1]: org. junit. assert. assertequals ( 1l, filepath )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( 1l, filepath1. size ( ) )
[4]: org. junit. assert. assertthat ( optimizedleftdatasource. getleftdatasource ( ), is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( foo , generic . get ( ) )
[0]: org. junit. assert. assertthat ( optimizedleftdatasource. getleftdatasource ( ), is ( false ) )
[1]: org. junit. assert. assertthat ( optimizedleftdatasource. getleftdatasource ( ), is ( 0 ) )
[2]: org. junit. assert. assertthat ( optimizedleftdatasource, is ( 1 ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( zk. exists ( ), true )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertequals ( 0, zk. exists ( ) )
[1]: org. junit. assert. assertequals ( glo. exists ( ), zk. exists ( ) )
[2]: org. junit. assert. assertequals ( zk. exists ( ), false )
[3]: org. junit. assert. assertequals ( glo. exists ( ), zk. getpath ( ) )
[4]: org. junit. assert. assertequals ( p, got. getmap ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( jsonlist . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( p. getmap ( ), got )
[1]: org. junit. assert. assertequals ( p, got )
[2]: org. junit. assert. assertnull ( got. getmap ( ) )
[3]: org. junit. assert. assertnotnull ( got. getmap ( ) )
[4]: org. junit. assert. assertequals ( 2, uut. gettargetdirectory ( ) )

************

************
tgt: org . junit . assert . assertequals ( entry . getstatus ( ) , response . getcode ( ) )
[0]: org. junit. assert. assertequals ( 200, uut. gettargetdirectory ( ) )
[1]: org. junit. assert. assertthat ( uut, org. hamcrest. corematchers. equalto ( 0 ) )
[2]: org. junit. assert. assertnotnull ( uut. gettargetdirectory ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( cachedatasource, result )

************

************
tgt: org . junit . assert . assertequals ( "8080" , result )
[0]: org. junit. assert. assertequals ( cachedatasource. union ( ), result )
[1]: org. junit. assert. assertsame ( cachedatasource, result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( 1, events. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( bounds . y ) >= ( tree . getheaderheight ( ) ) ) )
[0]: org. junit. assert. assertnotnull ( attributeslist )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertnotnull ( collection )
[3]: )
[4]: org. junit. assert. assertequals ( portletkeys. social_activity, portletinstance. getportletname ( ) )

************

************
tgt: org . junit . assert . assertfalse ( command . isvalidoperation ( ) )
[0]: org. junit. assert. assertnull ( grid. getnextvisiblecolumn ( columns ) )
[1]: org. junit. assert. assertnull ( grid. getnextvisiblecolumn ( columns [ 0 ] ) )
[2]: org. junit. assert. assertnull ( grid. getnextvisiblecolumn ( columns [ 1 ] ) )
[3]: org. junit. assert. assertnull ( grid. getnextvisiblecolumn ( columns [ 2 ] ) )
[4]: org. junit. assert. assertnull ( grid. getnextvisiblecolumn ( columns [ 3 ] ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , countnodes ( database ) )
[0]: org. junit. assert. assertequals ( 1, branch_conditions. size ( ) )
[1]: org. junit. assert. assertequals ( 0, branch_conditions. size ( ) )
[2]: org. junit. assert. assertequals ( 3, branch_conditions. size ( ) )
[3]: org. junit. assert. assertequals ( 1, branch.conditions. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , mylist . size ( ) )
[0]: org. junit. assert. assertequals ( propertyvalue, propertyvalue )
[1]: org. junit. assert. assertnotnull ( propertyvalue )
[2]: org. junit. assert. assertnull ( propertyvalue )
[3]: org. junit. assert. assertequals ( propertyvalue, propertyvalue )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( new com . zsmartsystems . zigbee . ieeeaddress ( "17880100dc880b" ) , node . getieeeaddress ( ) )
[0]: org. junit. assert. asserttrue ( path. contains ( component. name ( ) ) )
[1]: org. junit. assert. asserttrue ( path. contains ( asset. name ( ) ) )
[2]: org. junit. assert. asserttrue ( path. contains ( component ) )
[3]: org. junit. assert. asserttrue ( path. contains ( component. getname ( ) ) )
[4]: org. junit. assert. asserttrue ( path. contains ( asset ) )

************

************
tgt: org . junit . assert . asserttrue ( instance . haseffect ( fullsize , oplist ) )
[0]: org. junit. assert. asserttrue ( b )
[1]: org. junit. assert. assertnotnull ( b )
[2]: org. junit. assert. assertequals ( true, b
[3]: , b )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( exceptionoccured )
[0]: org. junit. assert. assertequals ( response, converter. convertmarkdown ( result, request ) )
[1]: org. junit. assert. assertequals ( response, util. convertmarkdown ( result, request ) )
[2]: org. junit. assert. assertequals ( response, converter. convertmarkdown ( result, null ) )
[3]: org. junit. assert. assertequals ( response, dao. convertmarkdown ( result, request ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( mavencoordinates . getclassifier ( ) )
[0]: org. junit. assert. assertequals ( 0, table. indexof ( item ) )
[1]: org. junit. assert. assertequals ( 0, fixture. indexof ( item ) )
[2]: org. junit. assert. assertequals ( 0, table. indexof ( null ) )
[3]: org. junit. assert. assertequals ( 0, table. indexof ( new java. lang. object ( ) ) )
[4]: org. junit. assert. assertequals ( 0, table. indexof ( new java. lang. string ( ) ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedarray , argarray )
[0]: org. junit. assert. assertnotnull ( load. getcep ( ) )
[1]: org. junit. assert. assertequals ( id, load. getcep ( ) )
[2]: org. junit. assert. assertequals ( null, load. getcep ( ) )
[3]: org. junit. assert. assertequals ( 1, load. getcep ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , out )
[0]: org. junit. assert. assertequals ( 0, target. getpacketbytes ( ). length )
[1]: org. junit. assert. assertequals ( packetbytes, target. getpacketbytes ( ) )
[2]: org. junit. assert. assertequals ( 1, target. getpacketbytes ( ). length )
[3]: org. junit. assert. assertequals ( 1, target. getpacketbytes ( ). size ( )
[4]: org. junit. assert. assertequals ( 0, target. getpacketbytes ( ). size ( )

************

************
tgt: org . junit . assert . asserttrue ( result . isempty ( ) )
[0]: org. junit. assert. assertequals ( logrecords. tostring ( ), 1, logrecords. size ( ) )
[1]: org. junit. assert. assertequals ( logrecords. tostring ( ), 2, logrecords. size ( ) )
[2]: org. junit. assert. assertequals ( logrecords. tostring ( ), 3, logrecords. size ( ) )
[3]: org. junit. assert. assertequals ( logrecords. tostring ( ), 0, logrecords. size ( ) )
[4]: org. junit. assert. assertequals ( logrecords. tostring ( ), 4, logrecords. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( composed , com . spotify . futures . completablefuturestest . completesto ( "hello" ) )
[0]: org. junit. assert. assertequals ( inputvalues2, dataquanta1 )
[1]: org. junit. assert. assertequals ( inputvalues1, dataquanta1 )
[2]: org. junit. assert. assertequals ( expectedvalues, dataquanta1 )
[3]: org. junit. assert. assertequals ( inputvalues, dataquanta1 )
[4]: org. junit. assert. assertequals ( outputvalues, dataquanta1 )

************

************
tgt: org . junit . assert . asserttrue ( protocolleringopdracht . isvalide ( ) )
[0]: org. junit. assert. assertequals ( 1, metrics. size ( ) )
[1]: org. junit. assert. assertequals ( 2, metrics. size ( ) )
[2]: org. junit. assert. assertequals ( 0, metrics. size ( ) )
[3]: org. junit. assert. assertnotnull ( metrics )
[4]: org. junit. assert. assertequals ( 4, metrics. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . jacoco . core . internal . analysis . counterimpl . getinstance ( 0 , 3 ) , complexity )
[0]: org. junit. assert. assertequals ( nixpath, actual )
[1]: org. junit. assert. assertequals ( nsixpath, actual )
[2]: org. junit. assert. assertequals ( schemaandvalue. null, avrodata. toconnectdata ( avroschema, avrorecord ) )
[3]: org. junit. assert. assertequals ( 1, avrodata. toconnectdata ( avroschema, avrorecord ). size ( ) )
[4]: org. junit. assert. assertequals ( serializer. toconnectdata ( avroschema, avrorecord ), struct )

************

************
tgt: org . junit . assert . asserttrue ( conn . isclosed ( ) )
[0]: org. junit. assert. assertequals ( new org. apache. kafka. connect. data. schemaandvalue ( schema, struct ), avrodata )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( org. ebayopensource. turmeric. runtime. sif. service. invokerutil. poll ( java. util. arrays. aslist ( poller ), true, 0 ) )
[3]: org. junit. assert. assertnotnull ( org. ebayopensource. turmeric. runtime. sif. service. invokerutil. poll ( java. util. arrays. aslist ( poller ), true, 1 ) )
[4]: org. junit. assert. assertnotnull ( org. ebayopensource. turmeric. runtime. sif. service. invokerutil. poll ( java. util. arrays. aslist ( poller ), false, 1 ) )

************

************
tgt: org . junit . assert . assertequals ( 9 , framedata . getendoffset ( ) )
[0]: org. junit. assert. assertnotnull ( org. ebayopensource. turmeric. runtime. sif. service. invokerutil. poll ( java. util. arrays. aslist ( poller ), false, 0 ) )
[1]: org. junit. assert. assertnotnull ( poll ( java. util. arrays. aslist ( poller ), true, 0 ) )
[2]: org. junit. assert. assertnull ( classundertest. gettableframexmlbean ( ) )
[3]: org. junit. assert. assertequals ( expected, list )
[4]: org. junit. assert. assertequals ( expected, list. longer ( java. util. arrays. aslist ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( thread . isalive ( ) )
[0]: org. junit. assert. assertequals ( expected, com. google. common. collect. lists. newarraylist ( list ) )
[1]: org. junit. assert. assertequals ( expected, list. longer ( null ) )
[2]: org. junit. assert. assertequals ( expected, list. longer ( 1 ) )
[3]: org. junit. assert. assertequals ( 0, obj. processparams ( args ) )
[4]: org. junit. assert. assertequals ( 0, unit. getnumloads ( ) )

************

************
tgt: org . junit . assert . assertequals ( val , results . getbyte ( coln ) )
[0]: org. junit. assert. assertequals ( 1, unit. getnumloads ( ) )
[1]: org. junit. assert. assertnull ( unit. getnumloads ( ) )
[2]: org. junit. assert. assertequals ( null, unit. getnumloads ( ) )
[3]: org. junit. assert. assertequals ( 0, units. getnumloads ( ) )
[4]: org. junit. assert. assertequals ( 1, deviceregistrationstate. s. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( bytes [ ( i - 8 ) ] , i )
[0]: org. junit. assert. assertequals ( 1, deviceregistrationstate. components. size ( ) )
[1]: org. junit. assert. assertequals ( 1, deviceregistrationstate. s. length )
[2]: org. junit. assert. assertnotnull ( deviceregistrationstate. s )
[3]: org. junit. assert. assertequals ( 1, deviceregistrationstate. getvertices ( ). length )
[4]: org. junit. assert. assertequals ( 1, strategies. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( failed . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, strategies. size ( ) )
[1]: org. junit. assert. assertequals ( 3, strategies. size ( ) )
[2]: org. junit. assert. assertequals ( 2, strategies. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, orders. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( resmap . getresreader ( ) ) != null ) )
[0]: org. junit. assert. assertequals ( 0, orders. size ( ) )
[1]: org. junit. assert. assertequals ( 3, orders. size ( ) )
[2]: org. junit. assert. assertequals ( 2, orders. size ( ) )
[3]: org. junit. assert. assertequals ( 4, orders. size ( ) )
[4]: org. junit. assert. asserttrue ( element. valideerinhoud ( ). isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , expressie . aantalelementen ( ) )
[0]: org. junit. assert. assertequals ( emptylist ( ), element. valideerinhoud ( ) )
[1]: org. junit. assert. assertequals ( 1, element. valideerinhoud ( ). size ( )
[2]: org. junit. assert. assertequals ( 0, element. valideerinhoud ( ). size ( )
[3]: ) )
[4]: org. junit. assert. assertequals ( str, exception. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedtime , actualdate . gettime ( ) )
[0]: org. junit. assert. assertnotnull ( response )
[1]: org. junit. assert. assertnotnull ( response. getmessage ( ) )
[2]: org. junit. assert. assertnull ( response )
[3]: org. junit. assert. assertnotnull ( response. body ( ) )
[4]: org. junit. assert. assertnotnull ( response. body )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( mikera. matrixx. matrix. create ( 1, 1, 1, 1 ), m )
[1]: org. junit. assert. assertequals ( mikera. matrixx. matrix. create ( null, null, null, null ), m )
[2]: org. junit. assert. assertequals ( mikera. matrixx. matrix, m )
[3]: org. junit. assert. assertnotnull ( m )
[4]: org. junit. assert. assertequals ( m, m )

************

************
tgt: org . junit . assert . assertfalse ( bpinfo1 . equals ( null ) )
[0]: org. junit. assert. assertnotnull ( status. get ( 0 ) )
[1]: org. junit. assert. assertequals ( record. get ( 0 ), status. get ( 0 ) )
[2]: org. junit. assert. assertequals ( record. get ( 0 ), status. get ( 1 ) )
[3]: org. junit. assert. assertequals ( record. get ( 1 ), status. get ( 0 ) )
[4]: org. junit. assert. assertequals ( record. get ( 0 ), status. tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( form . get ( "hello" ) , is ( equalto ( "world" ) ) )
[0]: org. junit. assert. assertequals ( fromclass, typestofind )
[1]: org. junit. assert. assertequals ( fromclass, typestofind. size ( ) )
[2]: org. junit. assert. assertequals ( fromclass, typestofind, true )
[3]: org. junit. assert. assertequals ( fromclass, typestofind, typestofind )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( gerechtelijkevaststellingvaderschapverzoekbericht . getbrppersoonslijst ( ) )
[0]: org. junit. assert. assertequals ( undertest, undertest. buildresponse ( ) )
[1]: org. junit. assert. assertequals ( undertest. buildresponse ( ). size ( ), 0 )
[2]: org. junit. assert. assertequals ( undertest. buildresponse ( ). isempty ( ), false )
[3]: org. junit. assert. assertnull ( undertest. buildresponse ( ) )
[4]: org. junit. assert. assertequals ( undertest, undertest )

************

************
tgt: org . junit . assert . assertnull ( jobartifactid )
[0]: org. junit. assert. assertnull ( rowset. numrows ( ) )
[1]: org. junit. assert. assertequals ( 0, rowset. numrows ( ) )
[2]: org. junit. assert. assertequals ( 2, rowset. numrows ( ) )
[3]: org. junit. assert. assertfalse ( rowset. numrows ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( category . getphoto ( ) )
[0]: org. junit. assert. assertnotnull ( getreplicacount ( ""foo"" ) )
[1]: org. junit. assert. assertequals ( 5, getreplicacount ( ""foo"" ) )
[2]: org. junit. assert. assertnotnull ( getreplicacount ( domain. tostring ( ) ) )
[3]: type ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( another . getjgiteventsbroadcast ( ) )
[0]: org. junit. assert. assertequals ( twodollar, onedollars. multiply ( 1 ) )
[1]: org. junit. assert. assertequals ( twodollar, onedollars. multiply ( 0 ) )
[2]: org. junit. assert. assertequals ( twodollar, onedollars )
[3]: org. junit. assert. assertequals ( twodollar. multiply ( 1 ), onedollars )
[4]: org. junit. assert. assertequals ( twodollar, onedollars. multiply ( 3 ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( templates. tostring ( ), 1, templates. size ( ) )
[1]: org. junit. assert. assertequals ( templates. tostring ( ), 2, templates. size ( ) )
[2]: org. junit. assert. assertequals ( templates. tostring ( ), 3, templates. size ( ) )
[3]: org. junit. assert. assertequals ( templates. tostring ( ), 4, templates. size ( ) )
[4]: org. junit. assert. assertequals ( templates. tostring ( ), 0, templates. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( docs . size ( ) , org . hamcrest . matchers . equalto ( 1 ) )
[0]: org. junit. assert. assertnotnull ( result. get ( 0 ) )
[1]: org. junit. assert. assertequals ( payload, result )
[2]: get ( 0 ) )
[3]: get ( payload ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, his. size ( ) )
[1]: org. junit. assert. assertequals ( 0, his. size ( ) )
[2]: org. junit. assert. assertequals ( 1, my. size ( ) )
[3]: org. junit. assert. assertequals ( 1, all. size ( ) )
[4]: org. junit. assert. assertequals ( 1, num. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedmessage , result )
[0]: org. junit. assert. assertequals ( 1, p. h ( 1, 1 ) )
[1]: org. junit. assert. assertequals ( 0, p. h ( 1, 1 ) )
[2]: org. junit. assert. assertequals ( 1, p. h ( 1, 3 ) )
[3]: org. junit. assert. assertequals ( 1, p. h ( 1, 0 ) )
[4]: org. junit. assert. assertequals ( 1, p. h ( 0, 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( role )
[0]: org. junit. assert. assertnotnull ( envvars )
[1]: org. junit. assert. assertnotnull ( envvars. get ( 1 ) )
[2]: org. junit. assert. assertnotnull ( envvars. get ( 0 ) )
[3]: org. junit. assert. assertnotnull ( envvars. get ( ) )
[4]: org. junit. assert. assertnotnull ( envvars. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( in . tostring ( ) , out . tostring ( ) )
[0]: org. junit. assert. assertnotnull ( bsnlocker. getlocks ( 1l, java. util. collections. < java. lang. long > emptylist ( ), java. util. collections. < java. lang. long > emptylist ( ) ) )
[1]: org. junit. assert. assertnotnull ( bsnlocker. getlocks ( 1l, java. util. collections. < java. lang. string > emptylist ( ), java. util. collections. < java. lang. long > emptylist ( ) ) )
[2]: org. junit. assert. assertnotnull ( bsnlocker. getlocks ( 1l, java. util. collections. < java. lang. long > emptylist ( ), java. util. arrays. aslist ( 1l ) ) )
[3]: org. junit. assert. assertnotnull ( bsnlocker. getlocks ( 1l, java. util. collections. < java. lang. string > emptylist ( ), java. util. arrays. aslist ( 1l ) ) )
[4]: org. junit. assert. assertnotnull ( bsnlocker. getlocks ( 1l, java. util. collections. < java. lang. string > emptylist ( ), java. util. collections. < java. lang. string > emptylist ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( lemmatiserdatadirectory . exists ( ) )
[0]: org. junit. assert. assertequals ( 1, queriescount )
[1]: org. junit. assert. assertequals ( 0, queriescount )
[2]: org. junit. assert. assertequals ( ( - 1 ), queriescount )
[3]: org. junit. assert. assertequals ( true, touchview. hasenoughnodes ( ) )
[4]: org. junit. assert. assertequals ( false, touchview. hasenoughnodes ( ) )

************

************
tgt: org . junit . assert . assertsame ( rows , actual )
[0]: org. junit. assert. assertfalse ( touchview. hasenoughnodes ( ) )
[1]: org. junit. assert. asserttrue ( touchview. hasenoughnodes ( ) )
[2]: org. junit. assert. assertequals ( true, touchview. hasenoughnodes ( ). false )
[3]: org. junit. assert. assertequals ( java. lang. string. class, f. getdefaultvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, f. getdefaultvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , path . tostring ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), f. getdefaultvalue ( ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), f. getdefaultvalue ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( true ), f. getdefaultvalue ( ) )
[3]: org. junit. assert. assertequals ( path, relativepath )
[4]: org. junit. assert. assertnotnull ( path )

************

************
tgt: org . junit . assert . assertfalse ( org . nmdp . ngs . align . alignments . ismismatchsymbol ( null ) )
[0]: path ) )
[1]: path )
[2]: ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), diag. shape ( ) )
[4]: org. junit. assert. assertequals ( 1, diag. shape ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 3, 4 ), diag. shape ( ) )
[1]: org. junit. assert. assertequals ( 1, diag. shape ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, diag. shape ( ) )
[3]: org. junit. assert. assertequals ( sample, result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( count , metric . count ( ) )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( samples, result )
[2]: org. junit. assert. assertequals ( sample, returned )
[3]: org. junit. assert. assertequals ( expected, location )
[4]: org. junit. assert. assertequals ( expected, location. getlocation ( ) )

************

************
tgt: org . junit . assert . asserttrue ( file . exists ( ) )
[0]: org. junit. assert. assertequals ( expected, locations )
[1]: org. junit. assert. assertsame ( expected, location )
[2]: org. junit. assert. assertequals ( expected, location
[3]: org. junit. assert. assertarrayequals ( input, bytebuffer. array ( ) )
[4]: org. junit. assert. assertarrayequals ( new byte [ ] { 0, 1, 2 }, bytebuffer. array ( ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . byte ( ( ( byte ) ( 10 ) ) ) . hashcode ( ) , 10 , 0 )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( input ), bytebuffer. array ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( input ), bytebuffer. read ( ) )
[2]: org. junit. assert. assertarrayequals ( new byte [ ] { 0, 1, 1 }, bytebuffer. array ( ) )
[3]: org. junit. assert. assertequals ( 1, pds. length )
[4]: org. junit. assert. assertequals ( 0, pds. length )

************

************
tgt: org . junit . assert . assertnotnull ( responselist )
[0]: org. junit. assert. assertequals ( 5, pds. length )
[1]: org. junit. assert. assertnotnull ( pds )
[2]: org. junit. assert. assertequals ( 3, pds. length )
[3]: org. junit. assert. assertthat ( memoaccount. getbalance ( ), org. hamcrest. corematchers. equalto ( 10l ) )
[4]: org. junit. assert. assertnotnull ( request. getdescription ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( name ) + "none" ) , t1 . tostring ( ) )
[0]: org. junit. assert. assertequals ( description, request. getdescription ( ) )
[1]: org. junit. assert. assertequals ( dataset, request. getdescription ( ) )
[2]: org. junit. assert. assertequals ( template, request. getdescription ( ) )
[3]: org. junit. assert. assertequals ( null, request. getdescription ( ) )
[4]: org. junit. assert. assertequals ( null, millis )

************

************
tgt: org . junit . assert . asserttrue ( wallet . isconsistent ( ) )
[0]: org. junit. assert. assertequals ( 200, builder. getstatuscode ( ) )
[1]: org. junit. assert. assertequals ( 200, metadata. getstatuscode ( ) )
[2]: org. junit. assert. assertequals ( 200, msg. getstatuscode ( ) )
[3]: org. junit. assert. assertequals ( 200, ws. getstatuscode ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( i , org . apache . openjpa . lib . util . svn . svnutils . svninfotointeger ( ( i + "" ) ) )
[0]: org. junit. assert. assertnotnull ( result. gethtmloutput ( ) )
[1]: org. junit. assert. assertnotnull ( result. gethtmloutput ( ). isempty ( ) )
[2]: org. junit. assert. assertnotnull ( result. gethtmloutput ( ). tostring ( ) )
[3]: org. junit. assert. assertnull ( result. gethtmloutput ( ) )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( actual , expected )
[0]: org. junit. assert. assertequals ( org. fcrepo. kernel. modeshape. services. batchserviceimpltest. is_a_tx, tx )
[1]: org. junit. assert. assertsame ( org. fcrepo. kernel. modeshape. services. batchserviceimpltest. is_a_tx, tx )
[2]: org. junit. assert. assertequals ( org. fcrepo. kernel. modeshape. services. batchserviceimpltest. is_a_tx, tx. name )
[3]: org. junit. assert. assertequals ( org. fcrepo. kernel. modeshape. services. batchserviceimpltest. is_a_tx, tx. id )
[4]: org. junit. assert. assertequals ( org. fcrepo. kernel. modeshape. services. batchserviceimpltest. is_a_tx, tx. context )

************

************
tgt: org . junit . assert . assertequals ( size , u2 . size ( ) )
[0]: org. junit. assert. assertequals ( 1, c. getcolumncount ( ) )
[1]: org. junit. assert. assertequals ( 0, c. getcolumncount ( ) )
[2]: org. junit. assert. assertequals ( 1l, c. getcolumncount ( ) )
[3]: org. junit. assert. assertequals ( c. getcolumncount ( ), 1 )
[4]: org. junit. assert. assertequals ( 1, c. getcolumncount ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 1 , terms . size ( ) )
[0]: org. junit. assert. assertthat ( model. getpath ( parent, grandson ), org. hamcrest. corematchers. equalto ( null ) )
[1]: org. junit. assert. assertthat ( model. getpath ( parent, grandson ), org. hamcrest. corematchers. equalto ( 0 ) )
[2]: org. junit. assert. assertthat ( model. getpath ( parent, grandson ), org. hamcrest. corematchers. equalto ( new int [ 0 ] ) )
[3]: org. junit. assert. assertthat ( model. getpath ( parent ), org. hamcrest. corematchers. equalto ( null ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( u , uri )
[0]: org. junit. assert. assertequals ( true, res. hasnext ( ) )
[1]: org. junit. assert. assertequals ( false, res. hasnext ( ) )
[2]: org. junit. assert. assertfalse ( res. hasnext ( ) )
[3]: org. junit. assert. assertequals ( 1, res. hasnext ( ) )
[4]: org. junit. assert. assertnotnull ( test )

************

************
tgt: org . junit . assert . assertthat ( response . status ( ) , org . hamcrest . matchers . is ( status . im_a_teapot ) )
[0]: org. junit. assert. assertfalse ( id1. equals ( id2 ) )
[1]: org. junit. assert. asserttrue ( id1. equals ( id2 ) )
[2]: org. junit. assert. assertfalse ( ident id1. equals ( id2 ) )
[3]: org. junit. assert. assertequals ( id1. equals ( id2 ), id2 )
[4]: org. junit. assert. assertequals ( id1. equals ( id2 ), id1 )

************

************
tgt: org . junit . assert . assertequals ( 1 , victim . getrecentlyusedworkspaces ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( x, y )
[1]: org. junit. assert. assertequals ( x, y, 0 )
[2]: org. junit. assert. assertequals ( x, y, 0l )
[3]: org. junit. assert. assertequals ( x, x, y )
[4]: org. junit. assert. assertequals ( x, y

************

************
tgt: org . junit . assert . asserttrue ( column . getmoveable ( ) )
[0]: org. junit. assert. assertequals ( p. getname ( ), syspermission. getname ( ) )
[1]: org. junit. assert. assertnotnull ( syspermission. getname ( ) )
[2]: org. junit. assert. assertequals ( p, syspermission. getname ( ) )
[3]: org. junit. assert. assertequals ( p. getname ( ), syspermission. tostring ( ) )
[4]: org. junit. assert. assertequals ( p. getname ( ), systempermission. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( deliverypipelineview . default_theme , view . gettheme ( ) )
[0]: org. junit. assert. assertequals ( 1, terms. size ( ) )
[1]: org. junit. assert. assertnotnull ( service. getscalingrules ( ) )
[2]: org. junit. assert. assertequals ( 1, service. getscalingrules ( ) )
[3]: org. junit. assert. assertequals ( 1, service. getscalingrules ( ). length )
[4]: org. junit. assert. assertequals ( 1, service. getscalingrules ( ). size ( )

************

************
tgt: org . junit . assert . assertequals ( true , classundertest . isfileopeninspecifieddir ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( string. class, aclass )
[2]: org. junit. assert. assertnotnull ( aclass )
[3]: org. junit. assert. assertequals ( ""test"", aclass )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( status == 0 ) )
[0]: )
[1]: org. junit. assert. assertequals ( 2, average. size ( ) )
[2]: org. junit. assert. assertequals ( 1, average. size ( ) )
[3]: org. junit. assert. assertequals ( 0, average. size ( ) )
[4]: org. junit. assert. assertequals ( 3, average. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , testsubject . getpayload ( ) )
[0]: org. junit. assert. assertequals ( 4, average. size ( ) )
[1]: org. junit. assert. assertnotnull ( telephonymanager. getsimoperatorname ( ) )
[2]: org. junit. assert. assertequals ( 1, telephonymanager. getsimoperatorname ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, telephonymanager. getsimoperatorname ( ). size ( ) )
[4]: org. junit. assert. assertequals ( org. robolectric. shadows. collect. lists. newarraylist ( ), telephonymanager )

************

************
tgt: org . junit . assert . assertequals ( expected , mod )
[0]: ) )
[1]: org. junit. assert. asserttrue ( org. apache. commons. lang3. exception. exceptionutils. hascause ( t, java. lang. illegalargumentexception. class ) )
[2]: org. junit. assert. asserttrue ( org. apache. commons. lang3. exception. exceptionutils. hascause ( t, java. lang. throwable. class ) )
[3]: org. junit. assert. asserttrue ( org. apache. commons. lang3. exception. exceptionutils. hascause ( t, java. io. ioexception. class ) )
[4]: org. junit. assert. assertnotnull ( org. apache. commons. lang3. exception. exceptionutils. hascause ( t, java. lang. illegalargumentexception. class ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. asserttrue ( org. apache. commons. lang3. exception. exceptionutils. hascause ( t, java. util. throwable. class ) )
[1]: org. junit. assert. assertequals ( 1, validator. validate ( assoc, edorgassociationids ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, validator. validate ( entitynames. staff_ed_org_association, edorgassociationids ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, validator. validate ( assoc, edorgassociationids ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, validator. validate ( assoc. staff_ed_org_association, edorgassociationids ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( result . size ( ) , org . hamcrest . corematchers . is ( 2 ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( ret )
[2]: org. junit. assert.null ( ret )
[3]: org. junit. assert. null, ret )
[4]: null ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( com. webpagebytes. cms. utility. cmsconfigurationfactory. getconfigpath ( ) )
[2]: org. junit. assert. assertequals ( mock, contexteventmock. getconfigpath ( ) )
[3]: org. junit. assert. assertnotnull ( contexteventmock. getconfigpath ( ) )
[4]: org. junit. assert. assertequals ( mock. getconfigpath ( ), mock. getconfigpath ( ) )

************

************
tgt: org . junit . assert . assertequals ( id1 , org . eclipse . jgit . lfs . lib . longobjectid . fromstring ( os . tobytearray ( ) , 0 ) )
[0]: org. junit. assert. assertnotnull ( com. webpagebytes. cms. utility. cmsconfiguration factory. getconfigpath ( ) )
[1]: org. junit. assert. assertequals ( loadednz, nz )
[2]: org. junit. assert. assertequals ( nz, loadednz )
[3]: org. junit. assert. assertnotnull ( nz )
[4]: org. junit. assert. assertnotnull ( loadednz )

************

************
tgt: org . junit . assert . assertnotnull ( entity )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( com. eclipsesource. v8. v8value. getstringrepresentation ( 1 ) )
[2]: org. junit. assert. assertequals ( v8value. getstringrepresentation ( 1 ), java. lang. long. valueof ( 1 ) )
[3]: org. junit. assert. assertequals ( v8value. getstringrepresentation ( 1 ), null )
[4]: org. junit. assert. assertequals ( v8value. getstringrepresentation ( 1 ), java. util. collections. singletonlist ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( versaoaplicacao , protocoloinfo . getversaoaplicacao ( ) )
[0]: org. junit. assert. assertequals ( v8value. getstringrepresentation ( 1 ), java. lang. long. tostring ( result ) )
[1]: org. junit. assert. assertequals ( 1, n. weight ( ) )
[2]: org. junit. assert. assertequals ( 3, n. weight ( ) )
[3]: org. junit. assert. assertequals ( n. weight ( ), 3 )
[4]: org. junit. assert. assertequals ( 0, n. weight ( ) )

************

************
tgt: org . junit . assert . assertequals ( "hello" , contents )
[0]: org. junit. assert. assertequals ( n. weight ( ), 1 )
[1]: org. junit. assert. assertnotnull ( widget )
[2]: org. junit. assert. assertequals ( null, widget )
[3]: org. junit. assert. assertnull ( widget )
[4]: type ) )

************

************
tgt: org . junit . assert . assertequals ( "" , json , notification . tojson ( ) )
[0]: type )
[1]: org. junit. assert. assertequals ( 1, sum )
[2]: org. junit. assert. assertequals ( 1, ( sum + sum ) )
[3]: org. junit. assert. assertequals ( 0, sum )
[4]: org. junit. assert. assertthat ( record. getdownloadedpaths ( ), org. hamcrest. corematchers. equalto ( name ) )

************

************
tgt: org . junit . assert . assertnull ( score . get ( ) )
[0]: org. junit. assert. assertequals ( 1, record. getdownloadedpaths ( ). size ( ) )
[1]: org. junit. assert. assertthat ( record. getdownloadedpaths ( ), org. hamcrest. corematchers. equalto ( names ) )
[2]: org. junit. assert. assertequals ( name, record. getdownloadedpaths ( ). tostring ( ) )
[3]: org. junit. assert. assertthat ( record. getdownloadedpaths ( ), org. hamcrest. corematchers. equalto ( 1 ) )
[4]: org. junit. assert. assertequals ( 1, countreceived )

************

************
tgt: org . junit . assert . assertequals ( com . psddev . dari . util . arrays . aslist ( "b" ) , resolver . resolve ( ) )
[0]: org. junit. assert. assertequals ( 1, theobjectrecipient )
[1]: org. junit. assert. assertequals ( 1, countreceived ( ) )
[2]: org. junit. assert. assertequals ( 1, theuserrecipient )
[3]: org. junit. assert. assertequals ( 1, countreceived ( the ) )
[4]: org. junit. assert. assertequals ( orgateststring, classundertest. gettablename1 ( ) )

************

************
tgt: org . junit . assert . assertthat ( e , org . hamcrest . corematchers . is ( cause ) )
[0]: org. junit. assert. assertequals ( orgateststring1, classundertest. gettablename1 ( ) )
[1]: org. junit. assert. assertequals ( orgateststring. size ( ), classundertest. gettablename1 ( ) )
[2]: org. junit. assert. assertequals ( orgateststring. length, classundertest. gettablename1 ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( testcardlist, testcard )

************

************
tgt: org . junit . assert . assertequals ( witnesslist , partlist )
[0]: org. junit. assert. assertequals ( 1, testcardlist. size ( ) )
[1]: org. junit. assert. assertequals ( testcardlist. size ( ), 1 )
[2]: org. junit. assert. assertequals ( testcardlist. size ( ), testcard )
[3]: ) )
[4]: org. junit. assert. assertequals ( expected, getmailcontent ( html ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( result . array ( ) , createtestdata ( ) ) )
[0]: org. junit. assert. assertequals ( expected, getmailcontent ( content ) )
[1]: org. junit. assert. assertequals ( expected, getmailcontent ( text ) )
[2]: org. junit. assert. assertequals ( expected, getmailcontent ( gettext ) )
[3]: org. junit. assert. assertequals ( expected, getmailcontent ( string ) )
[4]: org. junit. assert. assertnotnull ( results )

************

************
tgt: org . junit . assert . asserttrue ( st . isclosed ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( new java. lang. integer ( 456 ), workstationcount )
[2]: org. junit. assert. assertequals ( work3, workstationcount )
[3]: org. junit. assert. assertequals ( new java. lang. integer ( 556 ), workstationcount )
[4]: org. junit. assert. assertequals ( new java. lang. integer ( 3 ), workstationcount )

************

************
tgt: org . junit . assert . asserttrue ( suffix1 . equals ( suffix2 ) )
[0]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), workstationcount )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 0, result. size ( ) )
[3]: org. junit. assert. assertthat ( date, org. hamcrest. corematchers. is ( null ) )
[4]: org. junit. assert. assertthat ( date, org. hamcrest. corematchers. is ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( state , edge . getstate ( ) )
[0]: org. junit. assert. assertthat ( date, org. hamcrest. corematchers. is ( time ) )
[1]: org. junit. assert. assertnotnull ( date )
[2]: org. junit. assert. assertnull ( date )
[3]: org. junit. assert. assertnotnull ( response )
[4]: org. junit. assert. asserttrue ( testistableavailable ( newtablename ) )

************

************
tgt: org . junit . assert . assertequals ( "render" , content )
[0]: org. junit. assert. assertfalse ( testistableavailable ( newtablename ) )
[1]: org. junit. assert. assertequals ( true, testistableavailable ( newtablename ) )
[2]: org. junit. assert. asserttrue ( newtablename. istableavailable ( newtablename ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, store. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( adapter , actual )
[0]: org. junit. assert. assertfalse ( x. hasmethod ( supermethod ) )
[1]: org. junit. assert. asserttrue ( result. isfailed ( ) )
[2]: org. junit. assert. assertfalse ( result. isfailed ( ) )
[3]: org. junit. assert. assertnotnull ( result. isfailed ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 4 , count . get ( ) )
[0]: )
[1]: org. junit. assert. assertequals ( 1, dummybean. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 0, dummybean. getvalue ( ) )
[3]: org. junit. assert. assertnotnull ( dummybean. getvalue ( ) )
[4]: org. junit. assert. assertequals ( 1, dummybean. getvalue ( ). length )

************

************
tgt: org . junit . assert . assertequals ( toxml ( expected ) , toxml ( actual ) )
[0]: org. junit. assert. assertequals ( 0, dummybean. getvalue ( ). length )
[1]: org. junit. assert. assertnotnull ( resultaat )
[2]: org. junit. assert.null ( resultaat )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( p . contains ( 1 , 2 ) )
[0]: 
[1]: org. junit. assert. assertequals ( expectedoutput, stripnewlines ( actualoutput ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( expectedoutput ), stripnewlines ( actualoutput ) )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( expectedoutput ), stripnewlines ( actualoutput ) )
[4]: org. junit. assert. assertnotnull ( user2 )

************

************
tgt: org . junit . assert . assertthat ( subclassextendssuperclasswithfield . isbinarycompatible ( ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertnotnull ( user1 )
[1]: org. junit. assert. assertequals ( user1, user2 )
[2]: org. junit. assert. assertnotnull ( user1. getid ( ) )
[3]: org. junit. assert. assertnotnull ( user1. build ( ) )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . asserttrue ( ( exp instanceof org . apache . cayenne . exp . parser . astcurrenttimestamp ) )
[0]: org. junit. assert. assertequals ( java. lang. string. class, result. getclass ( ) )
[1]: org. junit. assert. assertequals ( java. lang. string. class, result )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. is ( request ) )
[4]: org. junit. assert. assertequals ( mocktableinfo, classundertest. getdatasetdefinition ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedinnerbound , found )
[0]: org. junit. assert. assertnotnull ( iothubauthenticationprovider )
[1]: org. junit. assert. assertnull ( iothubauthenticationprovider )
[2]: org. junit. assert. assertequals ( mockediothubauthenticationprovider )
[3]: , iothubauthenticationprovider )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( victim . get ( 1 ) )
[0]: org. junit. assert. assertequals ( 1, slices. slices ( ). size ( ) )
[1]: org. junit. assert. assertequals ( i, slices )
[2]: org. junit. assert. assertequals ( array, slices )
[3]: org. junit. assert. assertequals ( 1, slices. size ( ) )
[4]: org. junit. assert. assertequals ( 1, slices )

************

************
tgt: org . junit . assert . assertfalse ( jsonobject . equals ( jsonparam ) )
[0]: org. junit. assert. assertequals ( jmstype, result )
[1]: org. junit. assert. assertequals ( jmstype, result ( ) )
[2]: org. junit. assert. assertequals ( jmstype, result, null )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( jmstype )

************

************
tgt: org . junit . assert . assertfalse ( building )
[0]: org. junit. assert. asserttrue ( fetch. hasnext ( ) )
[1]: org. junit. assert. assertequals ( true, fetch. hasnext ( ) )
[2]: org. junit. assert. assertequals ( false, fetch. hasnext ( ) )
[3]: org. junit. assert. assertthat ( document. isempty ( ), is ( true ) )
[4]: org. junit. assert. assertthat ( document. isempty ( ), is ( false ) )

************

************
tgt: org . junit . assert . assertnull ( removed )
[0]: org. junit. assert. assertthat ( document. isempty ( ), org. hamcrest. corematchers. is ( true ) )
[1]: org. junit. assert. assertthat ( document. isempty ( ), org. hamcrest. corematchers. is ( false ) )
[2]: org. junit. assert. assertthat ( document. size ( ), org. hamcrest. corematchers. is ( 0 ) )
[3]: org. junit. assert. assertnotnull ( responsemessage )
[4]: org. junit. assert. assertequals ( responsemessage,

************

************
tgt: org . junit . assert . assertequals ( user_long , credentials . getusername ( ) )
[0]: org. junit. assert. assertequals ( responsemessage, null )
[1]: org. junit. assert. assertequals ( responsemessage, objectargument )
[2]: )
[3]: org. junit. assert. assertarrayequals ( new java. util. calendar [ ] { january, september, july }, properties. get ( 0, july ) )
[4]: org. junit. assert. assertarrayequals ( new java. util. calendar [ ] { january, september }, properties. get ( 0, july ) )

************

************
tgt: org . junit . assert . assertequals ( "password" , password )
[0]: org. junit. assert. assertarrayequals ( new java. util. calendar [ ] { january, september, july }, properties. get ( 0, july. size ( ) ) )
[1]: org. junit. assert. assertarrayequals ( january, properties. get ( 0, july ) )
[2]: org. junit. assert. assertarrayequals ( new java. util. calendar [ ] { january, september )
[3]: org. junit. assert. assertequals ( 1, newmap. size ( ) )
[4]: org. junit. assert. assertequals ( 0, newmap. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( cli . isconnected ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), newmap )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), newmap )
[2]: org. junit. assert. assertequals ( java. util. optional. empty ( ), newmap )
[3]: org. junit. assert. assertnotnull ( dao. validatelogin ( user. getid ( ), null ) )
[4]: org. junit. assert. assertnotnull ( dao. validatelogin ( user. tostring ( ), null ) )

************

************
tgt: org . junit . assert . assertequals ( "b" , rootel . getnodename ( ) )
[0]: org. junit. assert. assertnotnull ( dao. validatelogin ( user. name, null ) )
[1]: org. junit. assert. assertnotnull ( dao. validatelogin ( user, null ) )
[2]: org. junit. assert. assertnotnull ( dao. validatelogin ( user. getname ( ), null ) )
[3]: org. junit. assert. assertequals ( "", ssloptions. getprotocol ( ) )
[4]: org. junit. assert. assertequals ( "", ssloptions. getprotocol ( ) )

************

************
tgt: org . junit . assert . asserttrue ( expected . issame ( actual ) )
[0]: org. junit. assert. assertequals ( "" ), ssloptions. getprotocol ( ) )
[1]: org. junit. assert. assertequals ( "" }, ssloptions. getprotocol ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( org. mozilla. universalchardet. bug20latindetectedcharset ( ), detector. getdetectedcharset ( ) )
[4]: org. junit. assert. assertequals ( org. mozilla. universalchardet. bug20latindetected2maccyrillictest. test_string, detector. getdetectedcharset ( ) )

************

************
tgt: org . junit . assert . assertequals ( bm3 , bm2 )
[0]: org. junit. assert. assertequals ( org. mozilla. universalchardet. bug20latindetected1maccyrillictest. test_string, detector. getdetectedcharset ( ) )
[1]: org. junit. assert. assertequals ( org. mozilla. universalchardet. bug20latindetectedchildmaccyrillictest. test_string, detector. getdetectedcharset ( ) )
[2]: org. junit. assert. assertnotnull ( detector. getdetectedcharset ( ) )
[3]: org. junit. assert. assertthat ( x, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( expected ) ) )
[4]: org. junit. assert. assertthat ( x, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( null ) ) )

************

************
tgt: org . junit . assert . assertequals ( allowedattributevaluesinformation , response )
[0]: org. junit. assert. assertthat ( x, org. hamcrest. corematchers. is ( expected ) )
[1]: org. junit. assert. assertthat ( x, org. hamcrest. corematchers. is ( name ) )
[2]: public void init ( ) { }
[3]: org. junit. assert. assertnotnull ( field. getautocomplete ( ) )
[4]: org. junit. assert. assertequals ( null, field. getautocomplete ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( org . simmetrics . metrics . stringmetrics . smithwatermangotoh ( ) )
[0]: org. junit. assert. assertequals ( 1, next. get ( 0 ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( sequence ), next )
[2]: org. junit. assert. assertequals ( com. salesforce. dva. argus. service.queries. abstracttsdbservicetest. threads, matchedqueries. size ( ) )
[3]: org. junit. assert. assertequals ( com. salesforce. dva. argus. service.queries. abstracttsdbservicetest. threads, matchediteration. size ( ) )
[4]: org. junit. assert. assertequals ( com. salesforce. dva. argus. service.queries. abstracttsdbservicetest. threads, matchediteration. get ( ) )

************

************
tgt: org . junit . assert . assertnull ( next )
[0]: org. junit. assert. assertequals ( 1, matchedqueries. size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( matchedqueries. size ( ) ) == 1 ) )
[2]: org. junit. assert. assertequals ( status, validstring )
[3]: org. junit. assert. assertequals ( 0, status )
[4]: org. junit. assert. asserttrue ( status. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected_node_id , selectednodeid )
[0]: org. junit. assert. assertnotnull ( status )
[1]: org. junit. assert. asserttrue ( status )
[2]: org. junit. assert. assertfalse ( faceted. install ( facet ) )
[3]: org. junit. assert. assertnull ( faceted. install ( facet ) )
[4]: org. junit. assert. assertequals ( 0, faceted. install ( facet ) )

************

************
tgt: org . junit . assert . assertfalse ( expr . matches ( atom ) )
[0]: org. junit. assert. assertequals ( 0, faceted. install ( facet ). length )
[1]: org. junit. assert. assertequals ( 0, faceted. install ( facet ), 0 )
[2]: org. junit. assert. assertarrayequals ( expected, result )
[3]: org. junit. assert. assertthat ( result, org. hamcrest. corematchers. is ( expected ) )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . asserttrue ( new java . io . file ( "target/export12" ) . exists ( ) )
[0]: org. junit. assert. assertarrayequals ( result, expected )
[1]: org. junit. assert. assertarrayequals ( actual, result )
[2]: org. junit. assert. assertequals ( vocabularies. tostring ( ), 0, vocabularies. size ( ) )
[3]: org. junit. assert. assertnotnull ( wsv )
[4]: org. junit. assert. assertequals ( wsv, ws )

************

************
tgt: org . junit . assert . assertequals ( 0 , methods . size ( ) )
[0]: org. junit. assert. assertequals ( wsv, ws, null )
[1]: org. junit. assert. assertequals ( wsv, ws, tx )
[2]: org. junit. assert. assertnull ( wsv )
[3]: org. junit. assert. assertequals ( org. apache. hadoop. security. authentication. server. testjwtredirectauthenticationhandler. service_url, token. getusername ( ) )
[4]: org. junit. assert. assertequals ( org. apache. hadoop. security. authentication. server. testjwtredirectauthenticationhandler. services_url, token. getusername ( ) )

************

************
tgt: org . junit . assert . assertthat ( applecoresimulatorservicecontroller . killsimulatorprocesses ( ) , org . hamcrest . matchers . is ( true ) )
[0]: org. junit. assert. assertequals ( org. apache. hadoop. security. authentication. server. testjwtredirectauthenticationhandler. service_url, tokens. getusername ( ) )
[1]: org. junit. assert. assertequals ( org. apache. hadoop. security. authentication. server. testjwtredirectauthenticationhandler. service_url, token. getusername ( ) )
[2]: org. junit. assert. assertequals ( request. getusername ( ), token. getusername ( ) )
[3]: org. junit. assert. assertequals ( 1, fixture. readbyte ( ) )
[4]: org. junit. assert. assertequals ( 3, fixture. readbyte ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , uri . tostring ( ) )
[0]: org. junit. assert. assertequals ( 2, fixture. readbyte ( ) )
[1]: org. junit. assert. assertequals ( expected, shortticker )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertnotnull ( shortticker )
[4]: org. junit. assert. assertequals ( expected, s )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedresultsecond , suggestions . toarray ( ) )
[0]: org. junit. assert. assertequals ( expected, sn )
[1]: org. junit. assert. assertthat ( accumulator. getchunks ( ), org. hamcrest. matchers. empty ( ) )
[2]: org. junit. assert. assertequals ( 1, accumulator. getchunks ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, accumulator. getchunks ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( accumulator. getchunks ( ) )

************

************
tgt: org . junit . assert . assertsame ( expected , totest . getentity ( ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( ( sum > 0 ) )
[2]: org. junit. assert. asserttrue ( ( sum == 0 ) )
[3]: org. junit. assert. asserttrue ( ( sum == 1 ) )
[4]: org. junit. assert. assertequals ( 1, sum )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, sum )
[1]: org. junit. assert. asserttrue ( rule. isversionvalid ( null ) )
[2]: org. junit. assert. asserttrue ( rule. isversionvalid ( java. lang. string. class ) )
[3]: org. junit. assert. asserttrue ( rule. isversionvalid ( name ) )
[4]: org. junit. assert. asserttrue ( rule. isversionvalid ( ""a"" ) )

************

************
tgt: org . junit . assert . assertequals ( p , p2 )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, doc. text ( ) )
[2]: org. junit. assert. assertequals ( expected, doc. text ( ). trim ( ) )
[3]: org. junit. assert. assertequals ( expected, doc. text ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( expected, doc. body ( ). text ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( value , res )
[0]: org. junit. assert. assertequals ( expected, document. text ( ) )
[1]: org. junit. assert. assertnotnull ( transformer )
[2]: org. junit. assert. assertnotnull ( transformer. getcompleted ( ) )
[3]: org. junit. assert. assertnotnull ( transformer. method_5 ( ) )
[4]: org. junit. assert. assertnotnull ( transformer. method_4 ( ) )

************

************
tgt: org . junit . assert . asserttrue ( item . isresolved ( ) )
[0]: org. junit. assert. assertnotnull ( transformer. document )
[1]: org. junit. assert. assertnotnull ( collection )
[2]: org. junit. assert. assertnotnull ( repository )
[3]: org. junit. assert. assertequals ( 1, 1 )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( id , templates . gettemplateid ( ) )
[0]: 
[1]: org. junit. assert. asserttrue ( csb. isserviceprovider ( ) )
[2]: org. junit. assert. assertequals ( false, csb. isserviceprovider ( ) )
[3]: org. junit. assert. asserttrue ( ( ( stoptimemillis - starttimemillis ) >= ( failtimemillis ) ) )
[4]: org. junit. assert. asserttrue ( ( ( stoptimemillis - starttimemillis ) >= ( starttimemillis ) ) )

************

************
tgt: org . junit . assert . assertthat ( _andbuilder . build ( ) , org . hamcrest . matchers . equalto ( org . batfish . datamodel . acl . explanation . conjunctsbuildertest . dst_ip ) )
[0]: org. junit. assert. asserttrue ( ( ( stoptimemillis - starttimemillis ) >= ( stoptimemillis ) ) )
[1]: org. junit. assert. asserttrue ( ( ( stoptimemillis - starttimemillis ) >= ( failimemillis + 1 ) ) )
[2]: org. junit. assert. asserttrue ( ( ( stoptimemillis - starttimemillis ) >= ( stoptimemillis - starttimemillis ) )
[3]: org. junit. assert. assertfalse ( testresult )
[4]: org. junit. assert. asserttrue ( testresult )

************

************
tgt: org . junit . assert . asserttrue ( controller . makeinjectedduckswim ( ) )
[0]: org. junit. assert. assertequals ( testresult, false )
[1]: org. junit. assert. assertfalse ( testresult, false )
[2]: org. junit. assert. assertfalse ( testresult, true )
[3]: org. junit. assert. assertequals ( message, title )
[4]: org. junit. assert. assertnotnull ( title )

************

************
tgt: org . junit . assert . assertequals ( scope , scopeprovider . scopefor ( rule ) )
[0]: org. junit. assert. assertequals ( msg, title )
[1]: org. junit. assert. assertequals ( title, message )
[2]: org. junit. assert. assertnull ( title )
[3]: org. junit. assert. assertnotnull ( properties. getfocuscontrol ( ) )
[4]: org. junit. assert. assertnotnull ( org. eclipse. swt. widgets. shell. getfocuscontrol ( ) )

************

************
tgt: org . junit . assert . assertequals ( p1 , person )
[0]: org. junit. assert. assertnotnull ( data. getfocuscontrol ( ) )
[1]: org. junit. assert. assertnotnull ( shell. getfocuscontrol ( ) )
[2]: org. junit. assert. assertnotnull ( org. eclipse. swt. widgets. composite. getfocuscontrol ( ) )
[3]: org. junit. assert. assertequals ( message, decrypted )
[4]: org. junit. assert. assertequals ( msg, decrypted )

************

************
tgt: org . junit . assert . assertfalse ( isadmin )
[0]: org. junit. assert. assertequals ( messages, decrypted )
[1]: org. junit. assert. assertequals ( messag, decrypted )
[2]: org. junit. assert. assertnotnull ( decrypted )
[3]: org. junit. assert. assertnotnull ( mock )
[4]: org. junit. assert. assertequals ( 1, mock. count )

************

************
tgt: org . junit . assert . assertthat ( esssr . size ( ) , org . hamcrest . corematchers . is ( 3 ) )
[0]: org. junit. assert. assertequals ( 0, mock. count )
[1]: org. junit. assert. assertnull ( mock )
[2]: ) )
[3]: org. junit. assert. assertequals ( deadline, deadline2. getvalue ( ) )
[4]: org. junit. assert. asserttrue ( assertedonlyreasoning. reason ( ) )

************

************
tgt: org . junit . assert . assertequals ( false , messagingqos . getencrypt ( ) )
[0]: org. junit. assert. assertnotnull ( listener )
[1]: org. junit. assert. assertequals ( 1, listener. context )
[2]: org. junit. assert. assertequals ( 1, listener. count )
[3]: org. junit. assert. assertequals ( 1, listener. id )
[4]: org. junit. assert. assertequals ( null, listener )

************

************
tgt: org . junit . assert . assertnull ( resolver )
[0]: org. junit. assert. assertnotnull ( diff )
[1]: org. junit. assert. assertequals ( diff, null )
[2]: org. junit. assert. assertnull ( diff )
[3]: , diff )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . matchers . is ( errors ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( 0, result. size ( ) )
[2]: org. junit. assert. assertequals ( 3, result. size ( ) )
[3]: org. junit. assert. assertequals ( 1, results. size ( ) )
[4]: org. junit. assert. assertequals ( 1, result. values ( ). length )

************

************
tgt: org . junit . assert . assertequals ( result , vol )
[0]: org. junit. assert. assertsame ( httpsession, deserializeduisession. getapplicationcontext ( ) )
[1]: org. junit. assert. assertsame ( httpsession, deserializeduisession )
[2]: org. junit. assert. assertnull ( deserializeduisession. getapplicationcontext ( ) )
[3]: org. junit. assert. assertequals ( httpsession, deserializeduisession. getapplicationcontext ( ) )
[4]: org. junit. assert. assertnotnull ( deserializeduisession. getapplicationcontext ( ) )

************

************
tgt: org . junit . assert . asserttrue ( exists )
[0]: org. junit. assert. assertarrayequals ( plaintext, hybridencrypt. decrypt ( ciphertext, contextinfo ) )
[1]: org. junit. assert. assertequals ( 1, objectundertest_. getlong ( ) )
[2]: org. junit. assert. assertequals ( 0, objectundertest_. getlong ( ) )
[3]: org. junit. assert. assertequals ( 1, objectundertest.. getlong ( ) )
[4]: org. junit. assert. assertequals ( 1, objectundertest. getlong ( ) )

************

************
tgt: org . junit . assert . assertequals ( objects , row . values )
[0]: ) )
[1]: org. junit. assert. assertequals ( path, newgraph )
[2]: org. junit. assert. assertnotnull ( newgraph )
[3]: org. junit. assert. assertequals ( null, newgraph )
[4]: org. junit. assert. assertequals ( file, newgraph )

************

************
tgt: org . junit . assert . assertequals ( 123 , i )
[0]: ) )
[1]: org. junit. assert. assertequals ( true, org. apache. jackrabbit. oak. plugins. document. persistentcache. datatypeutil. booleanfrombuffer ( rb ) )
[2]: org. junit. assert. assertequals ( true,frombuffer ( rb ) )
[3]: org. junit. assert. assertequals ( false, org. apache. jackrabbit. oak. plugins. document. persistentcache. datatypeutil. booleanfrombuffer ( rb ) )
[4]: org. junit. assert. assertequals ( 1, org. apache. jackrabbit. oak. plugins. document. persistentcache. datatypeutil. booleanfrombuffer ( rb ) )

************

************
tgt: org . junit . assert . asserttrue ( errors . isempty ( ) )
[0]: org. junit. assert. assertequals ( null, org. apache. jackrabbit. oak. plugins. document. persistentcache. datatypeutil. booleanfrombuffer ( rb ) )
[1]: org. junit. assert. assertequals ( 1, goals. size ( ) )
[2]: org. junit. assert. assertequals ( 0, goals. size ( ) )
[3]: org. junit. assert. assertequals ( 9, goals. size ( ) )
[4]: org. junit. assert. assertequals ( 3, goals. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( com . puresoltechnologies . ductiledb . core . graph . schema . ductiledbschemamanagerit . schemamanager . getpropertydefinition ( elementtype . vertex , "property" ) )
[0]: org. junit. assert. assertequals ( 2, goals. size ( ) )
[1]: org. junit. assert. assertequals ( createddocs, 1 )
[2]: org. junit. assert. assertnotnull ( parsedstatsreportsmsg )
[3]: org. junit. assert. assertnotnull ( parsedstatsreportsmsg. createstatsreportmsg ( ) )
[4]: org. junit. assert. assertnotnull ( parsedstatsreportsmsg. createsstatsreportmsg ( ) )

************

************
tgt: org . junit . assert . assertsame ( color , gc . getforeground ( ) )
[0]: org. junit. assert. assertnotnull ( parsedstatsreportsmsg ( ) )
[1]: org. junit. assert. assertnotnull ( parsedstatsreportsmsg. buildstatsreportmsg ( ) )
[2]: org. junit. assert. assertequals ( url, deferred. getjmxconnectionurl ( ) )
[3]: org. junit. assert. assertnotnull ( deferred. getjmxconnectionurl ( ) )
[4]: org. junit. assert. assertnull ( deferred. getjmxconnectionurl ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( com . vmware . xenon . common . queryresultsprocessor . create ( new com . vmware . xenon . services . common . querytask ( ) ) . documentlinks ( ) )
[0]: org. junit. assert. assertequals ( url, defer. getjmxconnectionurl ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( fileconfig. getpath ( ) )
[3]: org. junit. assert. assertnull ( fileconfig. getpath ( ) )
[4]: org. junit. assert. assertequals ( path, fileconfig. getpath ( ) )

************

************
tgt: org . junit . assert . asserttrue ( stapresultaat )
[0]: org. junit. assert. assertequals ( root, fileconfig. getpath ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), fileconfig )
[2]: org. junit. assert. assertequals ( session, obtainedsession )
[3]: org. junit. assert. assertnotnull ( obtainedsession )
[4]: org. junit. assert. assertequals ( result, obtainedsession )

************

************
tgt: org . junit . assert . assertnotnull ( comment )
[0]: org. junit. assert. assertequals ( session, obtained session )
[1]: ) )
[2]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. validation. validators. put ), result. passedvalidation ( ) )
[3]: org. junit. assert. assertnotnull ( b. openoutputstream ( 0, true ) )
[4]: org. junit. assert. assertequals ( expectedconnection, actualconnection )

************

************
tgt: org . junit . assert . assertequals ( 4 , result . size ( ) )
[0]: org. junit. assert. assertequals ( ident expectedconnection, actualconnection )
[1]: org. junit. assert. assertequals ( expected connection, actualconnection )
[2]: org. junit. assert. assertequals ( resultconnection, actualconnection )
[3]: org. junit. assert. assertequals ( actualconnection, expectedconnection )
[4]: org. junit. assert. assertequals ( expected, result, 1.0 )

************

************
tgt: org . junit . assert . asserttrue ( shouldbeempty . isempty ( ) )
[0]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. tabs. properties. panel. system, view. getscope ( ) )
[1]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. tabs. properties. panel. system. getscope ( ), view. getscope ( ) )
[2]: org. junit. assert. assertequals ( org. eclipse. che. ide. ext. runner. client. tabs. properties. panel. system. getscope ( ), view. scope )
[3]: org. junit. assert. assertnotnull ( view. getscope ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertnotnull ( ra )
[1]: org. junit. assert. assertnull ( ra. collection )
[2]: org. junit. assert. assertnull ( ra. name )
[3]: org. junit. assert. assertnotnull ( ra. collection )
[4]: org. junit. assert. assertnull ( ra. values )

************

************
tgt: org . junit . assert . assertarrayequals ( message , decrypted )
[0]: org. junit. assert. assertequals ( java. util. collections. empty ( ), errors )
[1]: org. junit. assert. assertequals ( java. util. arrays. empty ( ), errors )
[2]: org. junit. assert. assertequals ( java. util. optional. empty ( ), errors )
[3]: , errors )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( jsonreaders. length, classes. length )
[1]: org. junit. assert. assertequals ( jsonreaders, classes )
[2]: org. junit. assert. assertequals ( 1, n )
[3]: org. junit. assert. assertequals ( 0, n )
[4]: org. junit. assert. assertequals ( 2, n )

************

************
tgt: org . junit . assert . assertequals ( "org.talend.test" , bundlesymbolicname )
[0]: org. junit. assert. assertequals ( 4, n )
[1]: org. junit. assert. assertequals ( 6, n )
[2]: org. junit. assert. assertequals ( 0, problems. size ( ) )
[3]: org. junit. assert. assertequals ( 1, problems. size ( ) )
[4]: public void action ( ) { }

************

************
tgt: org . junit . assert . assertequals ( 127 , fixture . readvarint ( ) )
[0]: public void size ( ) { }
[1]: public void error ( ) { }
[2]: org. junit. assert. assertthat ( classloadermodel. isincludetestdependencies ( ), org. hamcrest. corematchers. is ( false ) )
[3]: org. junit. assert. assertthat ( classloadermodel. isincludetestdependencies ( ), org. hamcrest. corematchers. is ( true ) )
[4]: org. junit. assert. assertthat ( classloadermodel. isincludetestdependencies ( ), org. hamcrest. matchers. is ( true ) )

************

************
tgt: org . junit . assert . assertsame ( map , map . insert ( key , value ) )
[0]: org. junit. assert. assertthat ( classloadermodel, org. hamcrest. corematchers. is ( false ) )
[1]: org. junit. assert. asserttrue ( classloadermodel. isincludetestdependencies ( ) )
[2]: org. junit. assert. assertequals ( 1, response. size ( ) )
[3]: org. junit. assert. assertequals ( 1, response. length ( ) )
[4]: org. junit. assert. assertequals ( 1, response )

************

************
tgt: org . junit . assert . assertequals ( testdn , actual . getuserdn ( ) )
[0]: org. junit. assert. assertequals ( 0, response. length ( ) )
[1]: org. junit. assert. assertequals ( 0, response. size ( ) )
[2]: org. junit. assert. assertequals ( list. size ( ), j )
[3]: org. junit. assert. assertequals ( list. size ( ), ( j + 1 ) )
[4]: org. junit. assert. assertequals ( ( j + 1 ), list. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( list. size ( ), ( j - 1 ) )
[1]: org. junit. assert. assertequals ( 1, list. size ( ) )
[2]: org. junit. assert. assertnotnull ( invalidgauge. getsamplevalue ( null ) )
[3]: org. junit. assert. assertnotnull ( invalidgauge. getsamplevalue ( samplebuilder. name ) )
[4]: org. junit. assert. assertnotnull ( invalidgauge. getsamplevalue ( ""name"" ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . string . format ( "storage<sp>unit<sp>status<sp>\"%s\"<sp>is<sp>not<sp>supported<sp>by<sp>the<sp>business<sp>object<sp>data<sp>destroy<sp>feature.<sp>storage:<sp>{%s},<sp>business<sp>object<sp>data:<sp>{%s}" , org . finra . herd . service . impl . invalid_value , org . finra . herd . service . impl . storage_name , org . finra . herd . service . impl . business_object_data_key_as_string ) , e . getmessage ( ) )
[0]: org. junit. assert. assertnotnull ( invalidgauge. getsamplevalue ( samplebuilder ) )
[1]: org. junit. assert. assertequals ( samplebuilder, invalidgauge. getsamplevalue ( null ) )
[2]: org. junit. assert. assertequals ( fixture. tuple, assignments )
[3]: org. junit. assert. assertequals ( 1, assignments. size ( ) )
[4]: org. junit. assert. assertnotnull ( assignments )

************

************
tgt: org . junit . assert . assertequals ( filesys . makequalified ( path ) , status . getpath ( ) )
[0]: org. junit. assert. assertequals ( 0, assignments. size ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( isiaethrown ( ) )
[3]: org. junit. assert. assertfalse ( isiaethrown ( ) )
[4]: org. junit. assert. assertequals ( isiaethrown ( ), 0 )

************

************
tgt: org . junit . assert . assertequals ( "alert(1);" , sw . tostring ( ) )
[0]: org. junit. assert. assertequals ( 0, isiaethrown ( ) )
[1]: org. junit. assert. assertequals ( isiaethrown ( ), true )
[2]: org. junit. assert. assertequals ( false, picker. isenabled ( ) )
[3]: org. junit. assert. assertequals ( command, deserialized )
[4]: org. junit. assert. assertequals ( command, deserialized )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( cmd, deserialized )
[1]: org. junit. assert. assertnotnull ( deserialized )
[2]: , deserialized )
[3]: org. junit. assert. assertnotnull ( schemawithqueries. isaggregationenabled ( ) )
[4]: org. junit. assert. asserttrue ( schemawithqueries. isaggregationenabled ( ) )

************

************
tgt: org . junit . assert . assertequals ( "22:34:01" , s )
[0]: org. junit. assert. assertequals ( 1, schemawithqueries. isaggregationenabled ( ) )
[1]: org. junit. assert. assertnotnull ( schemawithaggregators. isaggregationenabled ( ) )
[2]: org. junit. assert. assertequals ( true, schemawithqueries. isaggregationenabled ( ) )
[3]: org. junit. assert. assertequals ( sub, manager. get ( subscriptionid, userid ) )
[4]: org. junit. assert. assertequals ( sub, manager. get ( subscriptionid, userid. tostring ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( com . vaadin . flow . server . communication . rpc . mapsyncrpchandlertest . new_value , element . getpropertyraw ( com . vaadin . flow . server . communication . rpc . mapsyncrpchandlertest . test_property ) )
[0]: org. junit. assert. assertequals ( sub, manager. get ( subscriptionid, null ) )
[1]: org. junit. assert. assertequals ( sub, manager. get ( subscriptionid, e ) )
[2]: org. junit. assert. assertequals ( sub, manager. get ( subscriptionid, reason ) )
[3]: org. junit. assert. assertfalse ( validatestrokeandfill ( sta, null ) )
[4]: org. junit. assert. asserttrue ( validatestrokeandfill ( sta, null ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( names ) )
[0]: org. junit. assert. assertfalse ( sta. validatestrokeandfill ( null, null ) )
[1]: org. junit. assert. asserttrue ( validatestrokeandfill ( sta, sta ) )
[2]: ) )
[3]: org. junit. assert. assertnull ( facet )
[4]: org. junit. assert. asserttrue ( isequal ( mockstoppoint, dataset ) )

************

************
tgt: org . junit . assert . asserttrue ( value . equals ( list . get ( ( idx ++ ) ) ) )
[0]: org. junit. assert. assertnotnull ( actualstoppoint )
[1]: org. junit. assert. asserttrue ( isequal ( mockstoppoint ) )
[2]: org. junit. assert. assertnotnull ( actualstoppointsbyroute )
[3]: org. junit. assert. assertnotnull ( teststoppoint )
[4]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml. businessobjectdataddl ( namespace, bdef_name, format_usage_code, org. finra. herd. model. jpa. filetypeentity. txt_file_type, format_version, java. util. arrays. aslist ( new org. finra. herd. model. api. xml. partitionvaluefilter ( first_partition_column_name, no_partition_values, no_partition_value_range, new org. finra. herd. model. api. xml. latestbeforepartitionvalue ( upperboundpartitionvalue ), no_latest_after_partition_value ) ), no_standalone_partition_value_filter, data_version, no_storage_names, no_storage_name, org. finra. herd. model. api. xml. businessobjectdataddloutputformatenum. hive_13_ddl, table_name, no_custom_ddl_name, businessobjectdataservicetesthelper. getexpectedbusinessobjectdataddl ( java. lang. string. class ) ), resultbusinessobjectdataddl )

************

************
tgt: org . junit . assert . assertequals ( scale , durationscale . getvalue ( ) )
[0]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml. businessobjectdataddl ( namespace, bdef_name, format_usage_code, org. finra. herd. model. jpa. filetypeentity. txt_file_type, format_version, java. util. arrays. aslist ( new org. finra. herd. model. api. xml. partitionvaluefilter ( first_partition_column_name, no_partition_values, no_partition_value_range, new org. finra. herd. model. api. xml. latestbeforepartitionvalue ( upperboundpartitionvalue ), no_latest_after_partition_value ) ), no_standalone_partition_value_filter, data_version, no_storage_names, no_storage_name, org. finra. herd. model. api. xml. businessobjectdataddloutputformatenum. hive_13_ddl, table_name, no_custom_ddl_name, businessobjectdataservicetesthelper. getexpectedbusinessobjectdataddl ( ), resultbusinessobjectdataddl ), resultbusinessobjectdataddl )
[1]: org. junit. assert. assertnotnull ( resultbusinessobjectdataddl )
[2]: org. junit. assert. assertequals ( new java. util. hashset ( ), resultbusinessobjectdataddl )
[3]: org. junit. assert. assertnull ( resultbusinessobjectdataddl )
[4]: org. junit. assert. assertequals ( 1, set. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 0, set. size ( ) )
[1]: org. junit. assert. asserttrue ( result )
[2]: org. junit. assert. asserttrue ( isforallusers ( ) )
[3]: org. junit. assert. asserttrue ( result. get ( ) )
[4]: org. junit. assert. asserttrue ( changes )

************

************
tgt: org . junit . assert . assertthat ( normalize ( expr ) , org . hamcrest . matchers . equalto ( nf ) )
[0]: org. junit. assert. asserttrue ( status )
[1]: org. junit. assert. assertarrayequals ( msg. getpayloadbuffer ( ), expectedresponsev1 )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( msg ), expectedresponsev1 )
[3]: org. junit. assert. asserttrue ( java. util. arrays. equals ( msg. getpayloadbuffer ( ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( false , start )
[0]: )
[1]: org. junit. assert. assertequals ( 1, metric. getnumberofletexpressions ( ) )
[2]: org. junit. assert. assertequals ( 0, metric. getnumberofletexpressions ( ) )
[3]: org. junit. assert. assertequals ( 1, metric. getnumberofletsexpressions ( ) )
[4]: org. junit. assert. assertequals ( true, button. isenabled ( ) )

************

************
tgt: org . junit . assert . asserttrue ( foundit )
[0]: org. junit. assert. asserttrue ( button. isenabled ( ) )
[1]: org. junit. assert. assertequals ( 1, listavailableentitlementpools ( consumer, owner, null, null, activeon ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, listavailableentitlementpools ( consumer, owner, null, new java. util. arraylist ( ), activeon ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, listavailableentitlementpools ( consumer, owner. getid ( ), null, null, activeon ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, listavailableentitlementpools ( consumer, null, null, activeon ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( s . execute ( "select<sp>*<sp>from<sp>sys.tables<sp>order<sp>by<sp>name" ) )
[0]: org. junit. assert. assertequals ( 1, listavailableentitlementpools ( null, owner, null, null ). size ( ) )
[1]: org. junit. assert. assertnotnull ( tmpex )
[2]: org. junit. assert. assertnotnull ( tmpex, tmpex )
[3]: org. junit. assert. assertnotnull ( tmpex )
[4]: org. junit. assert. assertnotnull ( tmpex )

************

************
tgt: org . junit . assert . assertequals ( "" , s . tostring ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, source. getestimatedsizebytes ( null ) )
[2]: org. junit. assert. assertequals ( 0, getestimatedsizebytes ( null ) )
[3]: org. junit. assert. assertequals ( 1, source. getestimatedsizebytes ( null ) )
[4]: org. junit. assert. assertequals ( 0l, getestimatedsizebytes ( null ) )

************

************
tgt: org . junit . assert . assertequals ( m1 . get ( "n" 1 ) , m2 )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, vars. getconfigindexofsubset ( w3 ) )
[2]: org. junit. assert. assertequals ( 1, vars. getconfigindexofsubset ( w1 ) )
[3]: org. junit. assert. assertequals ( 1, vars. getconfigindexofsubset ( w4 ) )
[4]: org. junit. assert. assertequals ( 1, vars. getconfigindexofsubset ( config ) )

************

************
tgt: org . junit . assert . asserttrue ( rs . next ( ) )
[0]: org. junit. assert. assertequals ( 1, vars. getconfigindexofsubset ( w0 ) )
[1]: org. junit. assert. assertnotnull ( env )
[2]: org. junit. assert. assertequals ( null, env )
[3]: org. junit. assert. assertequals ( 50, env )
[4]: org. junit. assert. assertequals ( existing, env )

************

************
tgt: org . junit . assert . asserttrue ( isvalid )
[0]: , env )
[1]: org. junit. assert. assertnotnull ( authsettings. getsigningkeystorepass ( ) )
[2]: org. junit. assert. assertequals ( org. oscm. ui. filter. authenticationsettingstest. idp )
[3]: org. junit. assert. assertnotnull ( authsettings )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( null , org . apache . karaf . bundle . core . internal . mavenconfigservice . getlocalrepofromconfig ( config ) )
[0]: )
[1]: org. junit. assert. assertnotnull ( model )
[2]: org. junit. assert. assertequals ( new java. lang. string ( bytetowrite ), actualresult )
[3]: org. junit. assert. assertequals ( new java. lang. string ( bytetowrite ), actualresult. getmessage ( ) )
[4]: org. junit. assert. assertequals ( new java. nio. bytebuffer ( bytetowrite ), actualresult )

************

************
tgt: org . junit . assert . assertequals ( a1 , a2 )
[0]: org. junit. assert. assertequals ( new java. util. arraylist ( bytetowrite ), actualresult )
[1]: org. junit. assert. assertequals ( new java. lang. string ( bytetowrite ), actualresult. get ( ) )
[2]: org. junit. assert. asserttrue ( instance. issatisfiedby ( fact ) )
[3]: org. junit. assert. asserttrue ( fact. issatisfiedby ( fact ) )
[4]: org. junit. assert. asserttrue ( facts. issatisfiedby ( fact ) )

************

************
tgt: org . junit . assert . assertfalse ( instance . isproprietary ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnotnull ( config. getstring ( dremioconfig. db_path_string ) )
[3]: org. junit. assert. assertequals ( path, config. getstring ( path ) )
[4]: org. junit. assert. assertnotnull ( config. getstring ( path ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , list . size ( ) )
[0]: org. junit. assert. assertequals ( path, config. getstring ( ""a"" ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, errors. haserrors ( ) )
[3]: org. junit. assert. assertnotnull ( errors. haserrors ( ) )
[4]: org. junit. assert. asserttrue ( errors. haserrors ( ) )

************

************
tgt: org . junit . assert . asserttrue ( dropdown . isdndenabled ( ) )
[0]: org. junit. assert. assertequals ( 0, errors. haserrors ( ) )
[1]: org. junit. assert. assertequals ( obj, template )
[2]: org. junit. assert. assertequals ( obj, obj )
[3]: org. junit. assert. assertequals ( obj, result )
[4]: org. junit. assert. assertequals ( obj, java. util. arrays. aslist ( template ) )

************

************
tgt: org . junit . assert . asserttrue ( result . haserrors ( ) )
[0]: org. junit. assert. assertequals ( obj, java. util. collections. singletonlist ( template ) )
[1]: org. junit. assert. assertequals ( 1, result. geterrors ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, result. geterrors ( ). size ( ) )
[3]: org. junit. assert. asserttrue ( result. geterrors ( ). isempty ( ) )
[4]: org. junit. assert. assertequals ( 1, result. geterrors ( ). get ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( instance . trylock ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, classundertest. getoldzoom ( ) )
[2]: org. junit. assert. assertequals ( 1, classundertest. getoldzoom ( ) )
[3]: org. junit. assert. assertequals ( new java. lang. long ( 10 ), classundertest. getoldzoom ( ) )
[4]: org. junit. assert. assertequals ( 10, classundertest. getoldzoom ( ) )

************

************
tgt: org . junit . assert . assertsame ( 2 , responseitem . gettotalresults ( ) )
[0]: org. junit. assert. assertequals ( new java. lang. long ( 10 ), classesundertest. getoldzoom ( ) )
[1]: org. junit. assert. assertnotnull ( suggested )
[2]: org. junit. assert. assertnotnull ( suggested. getsuggested ( ) )
[3]: org. junit. assert. assertequals ( 1, suggested. getsuggested ( ) )
[4]: org. junit. assert. assertequals ( 0, suggested. getsuggested ( ) )

************

************
tgt: org . junit . assert . assertequals ( null , ri . getname ( ) )
[0]: org. junit. assert. assertequals ( new java. lang. long ( 1 ), suggested )
[1]: org. junit. assert. assertnotnull ( hbmeta )
[2]: org. junit. assert. assertnotnull ( hbmeta. getid ( ) )
[3]: org. junit. assert. assertnotnull ( hbmeta )
[4]: org. junit. assert. assertnotnull ( hibernatemeta )

************

************
tgt: org . junit . assert . assertthat ( classloader )
[0]: ) )
[1]: org. junit. assert. assertequals ( 0, com. liferay. site. navigation. service. sitenavigationmenuitemlocalserviceutil. getsitenavigationmenuitemscount ( ) )
[2]: org. junit. assert. assertequals ( org. pentaho. reporting. engine. classic. corematchers. issticky ( ), true )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), header. issticky ( ) )
[4]: org. junit. assert. assertequals ( org. pentaho. reporting. engine. classic. corematchers. issticky ( ), false )

************

************
tgt: org . junit . assert . asserttrue ( requestok )
[0]: org. junit. assert. assertequals ( null, header. issticky ( ) )
[1]: org. junit. assert. assertequals ( 1, header. issticky ( ) )
[2]: org. junit. assert. assertequals ( in, out )
[3]: org. junit. assert. assertequals ( out, in )
[4]: org. junit. assert. assertequals ( err, in )

************

************
tgt: org . junit . assert . assertequals ( new com . github . rinde . rinsim . geom . point ( 4 , 6 ) , result )
[0]: org. junit. assert. assertequals ( null, out )
[1]: org. junit. assert. assertequals ( msg, in )
[2]: org. junit. assert. assertequals ( 1, parameterlist. size ( ) )
[3]: org. junit. assert. assertequals ( 3, parameterlist. size ( ) )
[4]: org. junit. assert. assertequals ( null, updatedop )

************

************
tgt: org . junit . assert . assertfalse ( obj . getclass ( ) . equals ( java . lang . object . class ) )
[0]: org. junit. assert. assertnotnull ( updatedop )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), updatedop )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), updatedop )
[3]: org. junit. assert. asserttrue ( tp. canread ( ) )
[4]: org. junit. assert. assertequals ( org. apache. oozie. fluentjob. api. action. testsubworkflowbuilder. default, action. getconfiguration ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , response . getvalue ( ) )
[0]: org. junit. assert. assertequals ( org. apache. oozie. fluentjob. api. action. testsubworkflowbuilder. default, action. getconfiguration ( ). get ( ) )
[1]: org. junit. assert. assertequals ( 1, action. getconfiguration ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. optional. empty ( ), action. getconfiguration ( ) )
[3]: org. junit. assert. assertequals ( java. util. optional. empty ( ), action. getconfiguration ( ). get ( ) )
[4]: org. junit. assert. assertequals ( 1, tagsselector. select ( mediapackage, true ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( voornamen . hashcode ( ) , voornamen2 . hashcode ( ) )
[0]: org. junit. assert. assertequals ( 1, tagsselector. select ( mediapackage, false ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, tagsselector. select ( mediapackage, true ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, tagsselector. select ( mediapackage, false ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, tagselector. select ( mediapackage, true ). size ( ) )
[4]: org. junit. assert. assertnotnull ( fixture. getfilename ( ) )

************

************
tgt: org . junit . assert . assertthat ( response , org . hamcrest . matchers . is ( "hello<sp>from<sp>something" ) )
[0]: org. junit. assert. assertequals ( null, fixture. getfilename ( ) )
[1]: org. junit. assert. assertequals ( 0, fixture. getfilename ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, fixture. getfilename ( ). size ( ) )
[3]: org. junit. assert. assertequals ( row. getfilename ( ), row. getfilename ( ) )
[4]: org. junit. assert. assertnotnull ( e. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( javax . el . testbeanelresolver . bean_name , result )
[0]: org. junit. assert. assertequals ( org. springframework. data. jpa. repository. support. illegalargumentexception. class. getname ( ), e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( org. springframework. data. jpa. repository. support. dfshelper. class. getname ( ), e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( ""foo"", e. getname ( ) )
[3]: org. junit. assert. assertnotnull ( e. getclass ( ). getname ( ) )
[4]: org. junit. assert. assertequals ( null, properties. get ( ""a"" ) )

************

************
tgt: org . junit . assert . assertthat ( geoauthorsforgeocriteria . size ( ) , is ( 3 ) )
[0]: org. junit. assert. assertequals ( 1, properties. get ( ""a"" ) )
[1]: org. junit. assert. assertequals ( null, properties. get ( ""foo"" ) )
[2]: org. junit. assert. assertequals ( null, properties. get ( ""name"" ) )
[3]: org. junit. assert. assertnotnull ( properties. get ( ""a"" ) )
[4]: org. junit. assert. assertnotnull ( previous )

************

************
tgt: org . junit . assert . assertnotnull ( registration1 )
[0]: org. junit. assert. assertnotnull ( prev )
[1]: org. junit. assert. assertequals ( previous, previous )
[2]: org. junit. assert. assertnotnull ( org. teiid )
[3]: ) )
[4]: org. junit. assert. assertequals ( 127.0, message. getdoubleproperty ( 0 ), 0 )

************

************
tgt: org . junit . assert . assertequals ( partialannotationresourceimpl . bar_response , proxy . bar ( ) )
[0]: org. junit. assert. assertequals ( 127.0, message. getdoubleproperty ( 0 ), 0.0 )
[1]: org. junit. assert. assertequals ( 127.0, message. getdoubleproperty ( 0 ), 1.0 )
[2]: org. junit. assert. assertequals ( 127.0, ( ( double ) ( message. getdoubleproperty ( 0 ) ) ), 0 )
[3]: org. junit. assert. assertequals ( 127.0, ( ( double ) ( message. getdoubleproperty ( 0 ) ) ), 0.0 )
[4]: org. junit. assert. assertequals ( 0, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedpoolcount , info . getenabledconsumertypecountbypool ( ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( 0, results. size ( ) )
[2]: org. junit. assert. assertequals ( 0l, result. size ( ) )
[3]: org. junit. assert. assertequals ( zero, result. size ( ) )
[4]: org. junit. assert. assertequals ( 0, result. length )

************

************
tgt: org . junit . assert . assertequals ( expectedresults , mergedtemplate )
[0]: org. junit. assert. assertequals ( 1, result. length )
[1]: org. junit. assert. assertequals ( 0, results. length )
[2]: org. junit. assert. assertequals ( zero, result. length )
[3]: org. junit. assert. assertequals ( 0, result. length
[4]: org. junit. assert. assertequals ( 1, position )

************

************
tgt: org . junit . assert . assertarrayequals ( msg , new long [ ] { 10 , 1 } , out . shape ( ) )
[0]: org. junit. assert. assertnotnull ( flowinvocationmetric )
[1]: org. junit. assert. assertnotnull ( events )
[2]: org. junit. assert. assertnotnull ( results )
[3]: org. junit. assert. assertnotnull ( event )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( module . login ( ) )
[0]: org. junit. assert. assertequals ( 1, ids. size ( ) )
[1]: org. junit. assert. assertequals ( org. gradoop. common. model. impl. pojo. calls_real_methods, graphelementmock. getgraphids ( ) )
[2]: org. junit. assert. assertequals ( org. gradoop. common. model. impl. pojo. calls_real_methods, idset. getgraphids ( ) )
[3]: org. junit. assert. assertequals ( 1, graphelementmock. getgraphids ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, graphelementmock. getgraphids ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , list . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( operation )
[2]: org. junit. assert. assertequals ( 1, operation. size ( ) )
[3]: org. junit. assert. assertequals ( 1, ( ( long ) ( offest ) ) )
[4]: org. junit. assert. assertequals ( 0, ( ( long ) ( offest ) ) )

************

************
tgt: org . junit . assert . asserttrue ( entity . equals ( entity2 ) )
[0]: org. junit. assert. assertequals ( cosumer. fail, ( last + last ) )
[1]: org. junit. assert. assertequals ( 1l, offest )
[2]: ) )
[3]: org. junit. assert. assertequals ( list. get ( i ), list. get ( i ) )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), list. get ( i ) )

************

************
tgt: org . junit . assert . assertequals ( edgedirection . directed_reversed , direction )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), list. getdata ( ). get ( i ) )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), list. getdata ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), list. get ( i ). trim ( ) )
[3]: org. junit. assert. assertarrayequals ( new long [ ] { minibatch, i == 0? 4 : in1 }, labels1. shape ( ) )
[4]: org. junit. assert. asserttrue ( msg, gradok )

************

************
tgt: org . junit . assert . asserttrue ( oncehelper . getsubscribedlisteners ( ) . contains ( tr ) )
[0]: org. junit. assert. assertarrayequals ( new long [ ] { minibatch, i == 0? 4 : in1 }, out. shape ( ) )
[1]: org. junit. assert. assertarrayequals ( msg, out1, out2 )
[2]: org. junit. assert. assertarrayequals ( msg, out1, msg2 )
[3]: org. junit. assert. assertfalse ( corepersonstreamingeneralposttest ( true, true ) )
[4]: org. junit. assert. assertfalse ( corepersonstreamingeneralposttest ( true, false ) )

************

************
tgt: org . junit . assert . asserttrue ( ch . execute ( user , "" , java . util . collections . emptylist ( ) ) )
[0]: org. junit. assert. assertfalse ( corepersonstreamingeneralposttest ( false, true ) )
[1]: org. junit. assert. assertequals ( true, corepersonstreamingeneralposttest ( true, false ) )
[2]: org. junit. assert. assertequals ( true, corepersonstreamingeneralposttest ( true, true ) )
[3]: org. junit. assert. assertequals ( 8, bnode. getsize ( ) )
[4]: org. junit. assert. assertequals ( 8, bnode. getsize ( ). size ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( packet , com . openddal . server . mysql . proto . proto . arraylist_to_array ( payload ) )
[0]: org. junit. assert. assertequals ( 1, bnode. getsize ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 10, bnode. getsize ( ) )
[2]: org. junit. assert. assertequals ( 1, bnode. getsize ( ) )
[3]: org. junit. assert. assertnotnull ( a. tagname ( ) )
[4]: org. junit. assert. assertequals ( 1, a. tagname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , thelong . get ( ) , 0 )
[0]: org. junit. assert. assertequals ( null, a. tagname ( ) )
[1]: org. junit. assert. assertequals ( 1, a. tagname ( ). length )
[2]: ) )
[3]: org. junit. assert. assertequals ( null, cache. get ( null ) )
[4]: org. junit. assert. assertnotnull ( org. apache. tika. io. filenameutils. normalize ( test_name ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedvalues , columnvalues )
[0]: org. junit. assert. assertequals ( input, output )
[1]: org. junit. assert. assertequals ( output, input )
[2]: org. junit. assert. assertnotnull ( output )
[3]: ) )
[4]: 

************

************
tgt: org . junit . assert . assertnotnull ( child . getcomponent ( com . picocontainer . testmodel . dependsontouchable . class ) )
[0]: org. junit. assert. assertequals ( true, result )
[1]: org. junit. assert. assertthat ( result, is ( true ) )
[2]: org. junit. assert. asserttrue ( result )
[3]: org. junit. assert. assertthat ( result )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expectedddl , generatedddl )
[0]: org. junit. assert. assertfalse ( provider. iskeyword ( null ) )
[1]: org. junit. assert. asserttrue ( provider. iskeyword ( null ) )
[2]: org. junit. assert. assertequals ( true, provider. iskeyword ( null ) )
[3]: org. junit. assert. assertequals ( false, provider. iskeyword ( null ) )
[4]: org. junit. assert. assertfalse ( provider. iskeyword ( name ) )

************

************
tgt: org . junit . assert . asserttrue ( msg , dynany . equal ( dynany2 ) )
[0]: org. junit. assert. assertnotnull ( conn2 )
[1]: org. junit. assert. assertnull ( conn2 )
[2]: org. junit. assert. assertnotnull ( conn2. name )
[3]: org. junit. assert. assertnotnull ( conn1 )
[4]: org. junit. assert. assertequals ( conn2, connection )

************

************
tgt: org . junit . assert . assertequals ( expected , out )
[0]: org. junit. assert. assertnotnull ( file )
[1]: org. junit. assert. assertnull ( file )
[2]: org. junit. assert. assertequals ( file, null )
[3]: org. junit. assert. assertequals ( file, expected )
[4]: org. junit. assert. asserttrue ( file. exists (

************

************
tgt: org . junit . assert . assertarrayequals ( newvalue , bytes )
[0]: org. junit. assert. assertequals ( spec1. getcachekey ( ), spec2. getcachekey ( ) )
[1]: org. junit. assert. assertnotnull ( spec1. getcachekey ( ) )
[2]: org. junit. assert. assertnull ( spec1. getcachekey ( ) )
[3]: org. junit. assert. assertfalse ( spec1. getcachekey ( ). isempty ( ) )
[4]: org. junit. assert. assertfalse ( spec1. getcachekey ( ). hasnext ( ) )

************

************
tgt: org . junit . assert . asserttrue ( valid )
[0]: org. junit. assert. assertequals ( themessage, result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( itessage, result )
[3]: org. junit. assert. assertequals ( theyessage, result )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . asserttrue ( lru . exists ( ( 100 + i ) ) )
[0]: org. junit. assert. assertequals ( 1, timer. time ( ) )
[1]: org. junit. assert. assertequals ( 1l, timer. time ( ) )
[2]: org. junit. assert. assertequals ( 0, timer. time ( ) )
[3]: org. junit. assert. assertequals ( 0l, timer. time ( ) )
[4]: org. junit. assert. assertequals ( 3, timer. time ( ) )

************

************
tgt: org . junit . assert . assertequals ( codigostatusreposta , eventoretorno . getcodigostatusreposta ( ) , 0 )
[0]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 5 }, out. shape ( ) )
[1]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 1 }, out. shape ( ) )
[2]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 2, 3 }, out. shape ( ) )
[3]: org. junit. assert. assertequals ( last, ar. getid ( ) )
[4]: org. junit. assert. assertequals ( ( last + 1 ), ar. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , position )
[0]: org. junit. assert. assertequals ( g2, groups. get ( i ) )
[1]: org. junit. assert. assertnotnull ( groups. get ( i ) )
[2]: org. junit. assert. assertequals ( g2, groups. get ( 0 ) )
[3]: org. junit. assert. assertnotnull ( groups. get ( 0 ) )
[4]: org. junit. assert. assertequals ( g1, groups. get ( i ) )

************

************
tgt: org . junit . assert . assertequals ( testcollector . tostring ( ) , 0 , testcollector . errors . size ( ) )
[0]: org. junit. assert. assertequals ( 1, medicationidswithingredientrule. size ( ) )
[1]: org. junit. assert. assertequals ( 0, medicationidswithingredientrule. size ( ) )
[2]: org. junit. assert. assertnotnull ( medicationidswithingredientrule )
[3]: org. junit. assert. assertequals ( 1, medicationidswithingredientrule )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( 0, list. size ( ) )
[1]: org. junit. assert. assertequals ( 1, list. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 10 ), list )
[3]: org. junit. assert. assertequals ( java. util. collections. size ( ), list. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( loadimage )
[0]: org. junit. assert. assertnotnull ( onconnectionchangedaddedpre ( msg ) )
[1]: org. junit. assert. assertequals ( 1, onconnectionchangedaddedpre ( msg ) )
[2]: org. junit. assert. assertequals ( 1, onconnectionchangedaddedpre ( msg ). length )
[3]: org. junit. assert. assertequals ( 1, onconnectionchangedaddedpre ( msg ). size ( )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( ( before + 1 ) , orderrepository . count ( ) )
[0]: org. junit. assert. assertequals ( expected, temp )
[1]: org. junit. assert. assertequals ( expected, temporary )
[2]: org. junit. assert. assertequals ( result, expected )
[3]: org. junit. assert. assertequals ( actual, temp )
[4]: org. junit. assert. assertequals ( exp, temp )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. asserttrue ( interpreter. isactive ( ) )
[1]: org. junit. assert. assertfalse ( interpreter. isactive ( ) )
[2]: org. junit. assert. assertequals ( true, interpreter. isactive ( ) )
[3]: org. junit. assert. assertequals ( false, interpreter. isactive ( ) )
[4]: org. junit. assert. asserttrue ( decoder. isactive ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , n )
[0]: org. junit. assert. assertarrayequals ( expected, actual. toarray ( ) )
[1]: org. junit. assert. assertarrayequals ( expected. toarray ( ), actual )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertarrayequals ( expected. toarray ( ) )
[4]: org. junit. assert. assertarrayequals ( expected, actual )

************

************
tgt: org . junit . assert . assertequals ( 0 , spyresolver . resolve ( staff , entitytoextract ) . size ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnotnull ( s )
[2]: org. junit. assert. assertnotnull ( modelnode )
[3]: org. junit. assert. assertequals ( expected, actual )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . asserttrue ( ( repeatability == 1 ) )
[0]: org. junit. assert. assertequals ( s, bcv. buffersize ( ) )
[1]: org. junit. assert. assertequals ( s. length, bcv. buffersize ( ) )
[2]: org. junit. assert. assertequals ( s, bcv. buffersize ( ), initialbuffersize )
[3]: org. junit. assert. assertequals ( s, bcv. buffersize ( ), 0 )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( r1 . getcardinality ( ) ) == 10 ) )
[0]: org. junit. assert. asserttrue ( ( su1 && su2 ) )
[1]: org. junit. assert. assertequals ( su1, noothersus )
[2]: org. junit. assert. asserttrue ( noothersus )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( failed )
[0]: org. junit. assert. assertequals ( name ( ), types [ 0 ] )
[1]: org. junit. assert. assertequals ( read, types. name ( ) )
[2]: org. junit. assert. assertequals ( name ( ), types [ 1 ] )
[3]: org. junit. assert. assertequals ( new java. lang. string ( types ), read )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , graph . edgesof ( "b" ) )
[0]: org. junit. assert. assertfalse ( isconnected )
[1]: org. junit. assert. assertnull ( isconnected )
[2]: org. junit. assert. assertequals ( expecteddelayinseconds, report. calculatedelayinseconds )
[3]: org. junit. assert. asserttrue ( ( expecteddelayinseconds > 0 ) )
[4]: org. junit. assert. assertequals ( expecteddelayinseconds, report )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( expecteddelayinseconds, report. calculatedeslayinseconds )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( list )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), list )
[4]: org. junit. assert. assertequals ( list, list )

************

************
tgt: org . junit . assert . asserttrue ( ( ( resultfromjpql . size ( ) ) == 1 ) )
[0]: org. junit. assert. assertequals ( true, list. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 5, todayjobs )
[3]: org. junit. assert. assertequals ( 5, todayjobs )
[4]: org. junit. assert. assertequals ( 4, todayjobs )

************

************
tgt: org . junit . assert . assertequals ( 1 , contours . size ( ) )
[0]: the defaultversion, todayjobs )
[1]: the defaultversion )
[2]: org. junit. assert. assertnotnull ( comparator )
[3]: org. junit. assert. assertequals ( comparator, job. name )
[4]: org. junit. assert. assertequals ( 1, comparator. length )

************

************
tgt: org . junit . assert . assertequals ( new com . flextrade . jfixture . nospecimen ( ) , result )
[0]: org. junit. assert. assertequals ( null, comparator )
[1]: , comparator )
[2]: org. junit. assert. assertnotnull ( azurepath )
[3]: org. junit. assert. assertequals ( storagedir, azurepath )
[4]: org. junit. assert. assertnull ( azurepath )

************

************
tgt: org . junit . assert . assertthat ( response . getstatuscode ( ) , org . hamcrest . matchers . is ( 404 ) )
[0]: org. junit. assert. assertequals ( storagedir, azurepath )
[1]: org. junit. assert. assertequals ( storagedir, azure path )
[2]: org. junit. assert. assertequals ( 1, v. value ( ) )
[3]: org. junit. assert. assertequals ( 1, v. value ( 0 ) )
[4]: org. junit. assert. assertequals ( 1, v. value ( 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( converter )
[0]: org. junit. assert. assertequals ( 1, v. value ( null ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, iter. getendpos ( ) )
[3]: org. junit. assert. assertequals ( 0, iter. getendpos ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( origin ), iter. getendpos ( ) )

************

************
tgt: org . junit . assert . assertthat ( container . createreaderforviews ( org . apache . beam . vendor . guava . v20_0 . com . google . common . collect . immutablelist . of ( iterableview ) ) . get ( iterableview , org . apache . beam . runners . direct . sideinputcontainertest . first_window ) , org . hamcrest . matchers . contains ( 44 , 44 ) )
[0]: org. junit. assert. assertequals ( expected, iter. getendpos ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( origin, origin ), iter. getendpos ( ) )
[2]: org. junit. assert. assertequals ( null, out )
[3]: org. junit. assert. assertequals ( expected, out )
[4]: org. junit. assert. assertnotnull ( out )

************

************
tgt: org . junit . assert . assertnotnull ( expected )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( this. sg. getnetworkelementid ( ), null )
[3]: org. junit. assert. assertequals ( this. sg. getnetworkelementid ( ), "protectedprotected. getnetworkelementid ( ) )
[4]: org. junit. assert. assertequals ( this. sg. getnetworkelementid ( ), "publicpublic. getnetworkelementid ( ) )

************

************
tgt: org . junit . assert . assertequals ( xmlesperado , com . fincatto . documentofiscal . nfe310 . fabricadeobjetosfake . getnfnotainfoinformacoesadicionais ( ) . tostring ( ) )
[0]: org. junit. assert. assertequals ( this. sg, this. sg )
[1]: type ) )
[2]: org. junit. assert. assertequals ( expected, sb. tostring ( ) )
[3]: org. junit. assert. assertequals ( s, sb. tostring ( ) )
[4]: org. junit. assert. assertequals ( s, names )

************

************
tgt: org . junit . assert . asserttrue ( dic . match ( "" ) )
[0]: org. junit. assert. assertequals ( expecteds, sb )
[1]: )
[2]: org. junit. assert. assertequals ( true, column. isvisible ( ) )
[3]: org. junit. assert. assertfalse ( column. isvisible ( ) )
[4]: org. junit. assert. assertequals ( false, column. isvisible ( ) )

************

************
tgt: org . junit . assert . assertequals ( originalsize , currentelements . size ( ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( 0, result. size ( ) )
[2]: org. junit. assert. assertequals ( 3, result. size ( ) )
[3]: org. junit. assert. assertequals ( 2, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, results. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , result . size ( ) , 0 )
[0]: org. junit. assert. assertnotnull ( unnamed. webviewlocation ( ) )
[1]: org. junit. assert. assertnotnull ( unnamed )
[2]: org. junit. assert. assertnotnull ( file )
[3]: _1 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , counter )
[0]: org. junit. assert. asserttrue ( target. validate ( ) )
[1]: org. junit. assert. asserttrue ( target. validate ( ). isempty ( ) )
[2]: org. junit. assert. asserttrue ( match1. validate ( ) )
[3]: org. junit. assert. assertequals ( 1, target. validate ( ) )
[4]: org. junit. assert. assertequals ( 1, target. validate ( ). length )

************

************
tgt: org . junit . assert . assertthat ( query . isbriefabusecontact ( ) , org . hamcrest . matchers . is ( false ) )
[0]: org. junit. assert. asserttrue ( period1. contains ( test ) )
[1]: org. junit. assert. assertnotnull ( objectelement )
[2]: org. junit. assert. assertnotnull ( caller. getloginname ( ) )
[3]: org. junit. assert. assertequals ( orgme, caller. getloginname ( ) )
[4]: org. junit. assert. assertequals ( "me, caller. getloginname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , list . size ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 1, requests. size ( ) )
[3]: org. junit. assert. assertequals ( 0, requests. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), requests )

************

************
tgt: org . junit . assert . assertequals ( next , g . distributed ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( response ), requests )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( response ), requests )
[2]: org. junit. assert. assertequals ( 1, 1 )
[3]: org. junit. assert. assertnotnull ( collection )
[4]: org. junit. assert. assertnotnull ( queue )

************

************
tgt: org . junit . assert . assertnotnull ( e . getmessage ( ) )
[0]: org. junit. assert. assertnotnull ( context )
[1]: org. junit. assert. assertnotnull ( s )
[2]: org. junit. assert. assertnotnull ( coll )
[3]: org. junit. assert. assertequals ( 1, collection. size ( ) )
[4]: org. junit. assert. assertequals ( 1, count )

************

************
tgt: org . junit . assert . assertequals ( accountfromdatastorelist . size ( ) , acountlisttopersist . size ( ) )
[0]: org. junit. assert. assertequals ( 1, entity. size ( ) )
[1]: org. junit. assert. assertequals ( 1, size )
[2]: org. junit. assert. assertequals ( 1, archetypefile. get ( 0 ). size ( ) )
[3]: org. junit. assert. assertequals ( null, archetypefile. get ( 0 ) )
[4]: org. junit. assert. assertnotnull ( archetypefile. get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( localdate , localdate1 )
[0]: org. junit. assert. assertequals ( 1, archetypefile. get ( 0 ). getid ( ) )
[1]: org. junit. assert. assertequals ( 1, archetypefile. get ( 0 ) )
[2]: org. junit. assert. assertnotnull ( promoter_sa. getcomponent ( ) )
[3]: org. junit. assert. assertequals ( id, instance. getid ( ) )
[4]: org. junit. assert. assertequals ( id, entity. getid ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new char [ ] { 'v' , 'a' , 'l' } , value )
[0]: org. junit. assert. assertequals ( id, impl. getid ( ) )
[1]: org. junit. assert. assertequals ( id, s. getid ( ) )
[2]: identifies the id )
[3]: org. junit. assert. assertequals ( match, matchecounts [ 1 ] )
[4]: org. junit. assert. assertequals ( match, matchecounts [ 2 ] )

************

************
tgt: org . junit . assert . asserttrue ( ( ( productdtos . size ( ) ) == 4 ) )
[0]: org. junit. assert. assertequals ( match, matchecounts [ 0 ] )
[1]: org. junit. assert. assertequals ( match, matchecounts [ ( matchecounts. length ) ] )
[2]: org. junit. assert. assertequals ( match, matchecounts [ ( matchecounts [ 0 ] ) )
[3]: org. junit. assert. assertnull ( presenter. getselectedservertemplate ( ) )
[4]: org. junit. assert. assertequals ( null, presenter. getselectedservertemplate ( ) )

************

************
tgt: org . junit . assert . assertequals ( seccion1 . getid ( ) , seccion . getid ( ) )
[0]: org. junit. assert. assertnotnull ( presenter. getselectedservertemplate ( ) )
[1]: org. junit. assert. assertequals ( """", presenter. getselectedservertemplate ( ) )
[2]: org. junit. assert. assertequals ( ""foo"", presenter. getselectedservertemplate ( ) )
[3]: org. junit. assert. assertarrayequals ( actual, expected )
[4]: org. junit. assert. assertnotnull ( errmsglist )

************

************
tgt: org . junit . assert . assertfalse ( endpointnode . islive ( ) )
[0]: org. junit. assert. assertequals ( errmsglist, errmsglist )
[1]: org. junit. assert. assertnotnull ( errmsglist )
[2]: org. junit. assert. assertequals ( result, new java. util. hashset < java. lang. object > ( ) )
[3]: org. junit. assert. assertequals ( result, new java. util. hashset < org. apache. hadoop. fs. path > ( ) )
[4]: org. junit. assert. assertequals ( result, new java. util. hashset <? > ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( clazz )
[0]: org. junit. assert. assertequals ( result )
[1]: add ( result ) )
[2]: org. junit. assert. assertequals ( true, i. isavailable ( ) )
[3]: org. junit. assert. assertequals ( false, i. isavailable ( ) )
[4]: org. junit. assert. assertfalse ( i. isavailable ( ) )

************

************
tgt: org . junit . assert . assertequals ( schema , actualschema )
[0]: org. junit. assert. assertequals ( module_2, project. getname ( ) )
[1]: org. junit. assert. assertequals ( module_2, result. getname ( ) )
[2]: org. junit. assert. assertequals ( module_2, module )
[3]: org. junit. assert. assertequals ( module_2, project1 )
[4]: the module_2, module_1 )

************

************
tgt: org . junit . assert . assertnotnull ( report )
[0]: org. junit. assert. assertnotnull ( d2 )
[1]: org. junit. assert. assertequals ( d, d2 )
[2]: org. junit. assert. assertequals ( d2, d2 )
[3]: org. junit. assert. assertequals ( d1, d2 )
[4]: org. junit. assert. assertequals ( d2, d1 )

************

************
tgt: org . junit . assert . assertnull ( missingdlsyncevent )
[0]: org. junit. assert. assertequals ( 3, subject. getdroppedmessagescount ( ). getserializedmessage ( ) )
[1]: org. junit. assert. assertnotnull ( subject. getdroppedmessagescount ( ). getserializedmessage ( ) )
[2]: org. junit. assert. assertequals ( 1, subject. getdroppedmessagescount ( ). getserializedmessage ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( getnoerrormsg ( ) , result )
[0]: org. junit. assert. assertnull ( deserializeddate )
[1]: org. junit. assert. assertequals ( """", """", notification. tojson ( ) )
[2]: org. junit. assert. assertequals ( """", ""1"", notification. tojson ( ) )
[3]: org. junit. assert. assertequals ( """", "", notification. tojson ( ) )
[4]: public void method_1 ( ) { }

************

************
tgt: org . junit . assert . assertnotnull ( matcher )
[0]: public void extract ( ) { }
[1]: org. junit. assert. assertthat ( clusterschema1. isdynamic ( ), org. hamcrest. corematchers. equalto ( false ) )
[2]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( org. hamcrest. corematchers. equalto ( expected ) ) )
[3]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( org. hamcrest. matchers. equalto ( expected ) ) )
[4]: org. junit. assert. assertthat ( actual, is ( org. hamcrest. corematchers. equalto ( expected ) ) )

************

************
tgt: org . junit . assert . assertfalse ( b )
[0]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( expected ) )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: org. junit. assert. assertequals ( query, query )
[3]: org. junit. assert. assertequals ( query, null )
[4]: org. junit. assert. assertnotnull ( query )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertnull ( query )
[1]: org. junit. assert. assertequals ( query, string )
[2]: org. junit. assert. asserttrue ( bundles. isempty ( ) )
[3]: org. junit. assert. assertequals ( 0, bundles. length )
[4]: org. junit. assert. assertequals ( 0, bundles. size ( )

************

************
tgt: org . junit . assert . assertequals ( 10 , p0 . distance ( p1 ) , 0 )
[0]: org. junit. assert. assertnotnull ( bundles )
[1]: ) )
[2]: org. junit. assert. assertequals ( expectedresult, result ( ) )
[3]: org. junit. assert. assertthat ( result ( ), is ( equalto ( expectedresult ) ) )
[4]: org. junit. assert. assertthat ( result ( ), is ( expectedresult ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new double [ ] { 0 , 0 , 0 } , instance . getreferencepoint ( ) , 0 )
[0]: org. junit. assert. assertequals ( expectedresult, result ( ). trim ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, collection. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), collection )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), collection )

************

************
tgt: org . junit . assert . assertsame ( ret , projectitem )
[0]: org. junit. assert. assertnull ( collection )
[1]: ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( platformpks ), testplatformpks )
[3]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), testplatformpks )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 5 ), testplatformpks )

************

************
tgt: org . junit . assert . assertequals ( 50 , symbols . size ( ) )
[0]: org. junit. assert. assertequals ( testplatformpks, testplatformpks )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( value )
[3]: org. junit. assert. assertnotnull ( ( value )
[4]: org. junit. assert. assertnull ( value )

************

************
tgt: org . junit . assert . assertequals ( name , title )
[0]: org. junit. assert. assertnotnull ( values )
[1]: ) )
[2]: org. junit. assert. assertarrayequals ( resolvers, getresolvers ( testresolver ) )
[3]: org. junit. assert. assertarrayequals ( resolvers, getresolvers ( context ) )
[4]: org. junit. assert. assertarrayequals ( resolvers, getresolvers ( null ) )

************

************
tgt: org . junit . assert . assertequals ( openejbconfiguration , factory . getopenejbconfiguration ( ) )
[0]: org. junit. assert. assertarrayequals ( resolvers, getresolvers ( getresolvers ( null ) ) )
[1]: org. junit. assert. assertarrayequals ( resolvers, getresolvers ( getresolvers ( context ) ) )
[2]: org. junit. assert. assertequals ( expected, nextexecution. get ( ) )
[3]: org. junit. assert. assertequals ( expected, nextexecution. get ( ). get ( ) )
[4]: org. junit. assert. assertequals ( expected, nextexecution. get ( ). token ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , message . getmessageid ( ) )
[0]: org. junit. assert. assertequals ( expected, nextexecution. get ( ). getmessage ( ) )
[1]: org. junit. assert. assertequals ( expected, nextexecution. get ( ). name )
[2]: org. junit. assert. assertthat ( c. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[3]: org. junit. assert. assertthat ( c. count, org. hamcrest. corematchers. is ( 1 ) )
[4]: org. junit. assert. assertthat ( c. values, org. hamcrest. corematchers. is ( meta. mystring ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , index )
[0]: org. junit. assert. assertthat ( c. count ( ), org. hamcrest. corematchers. is ( 1l ) )
[1]: )
[2]: org. junit. assert. assertequals ( services. tostring ( ), 2, services. size ( ) )
[3]: org. junit. assert. assertequals ( expected, matchedqueries )
[4]: org. junit. assert. assertequals ( expected, matchedqueries. get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( page1 , context . popcanvas ( ) )
[0]: org. junit. assert. asserttrue ( matchedqueries. hastop ( ). isempty ( ) )
[1]: org. junit. assert. asserttrue ( matchedqueries. hastop ( ) )
[2]: org. junit. assert. assertequals ( expected, queries )
[3]: org. junit. assert. assertequals ( true, supported )
[4]: org. junit. assert. asserttrue ( supported )

************

************
tgt: org . junit . assert . assertequals ( "/" , result )
[0]: org. junit. assert. assertfalse ( supported )
[1]: , supported )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, n )
[4]: org. junit. assert. assertequals ( 0, n )

************

************
tgt: org . junit . assert . assertequals ( 100 , getnumberofrecords ( sample ) )
[0]: org. junit. assert. assertequals ( 2, n )
[1]: org. junit. assert. assertequals ( 4, n )
[2]: org. junit. assert. assertequals ( 3, n )
[3]: org. junit. assert. asserttrue ( it. hasnext ( ) )
[4]: org. junit. assert. assertnotnull ( runtimeinfo. getruntimeclassname ( ) )

************

************
tgt: org . junit . assert . assertequals ( output , outcome )
[0]: org. junit. assert. assertequals ( org. talend. components. salesforce. runtime. salesforcesourceorsink. class, runtimeinfo. getruntimeclassname ( ) )
[1]: org. junit. assert. assertnull ( runtimeinfo. getruntimeclassname ( ) )
[2]: org. junit. assert. assertequals ( ""test"", runtimeinfo. getruntimeclassname ( ) )
[3]: org. junit. assert. assertequals ( ""foo"", runtimeinfo. getruntimeclassname ( ) )
[4]: org. junit. assert. assertnull ( container. getcontainerproperty ( last, name ). getvalue ( ) )

************

************
tgt: org . junit . assert . assertnull ( missingmbdiscussion )
[0]: org. junit. assert. assertnotnull ( container. getcontainerproperty ( last, name ) )
[1]: org. junit. assert. assertnotnull ( container. getcontainerproperty ( last, name ). getvalue ( ) )
[2]: org. junit. assert. assertnull ( container. getcontainerproperty ( last, name ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( fr. norad. visuwall. plugin. bamboo. bambooconnection. class, fixture. getconnectionclass ( ) )

************

************
tgt: org . junit . assert . asserttrue ( finder . find ( clients , context , org . pac4j . core . client . finder . client_name ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( fr. norad. visuwall. plugin. bamboo. bambooconnection. class, getconnectionclass ( ) )
[1]: org. junit. assert. assertequals ( fr. norad. visuwall. plugin. bamboo. bambooconnection. class, f. getconnectionclass ( ) )
[2]: org. junit. assert. assertequals ( fr. norad. visuwall. plugin. bamboo. bambooconnection. class, me. getconnectionclass ( ) )
[3]: org. junit. assert. assertequals ( fr. norad. visuwall. plugin. bamboo. bambooconnection. class, cf. getconnectionclass ( ) )
[4]: org. junit. assert. assertequals ( unpacked, unpacked )

************

************
tgt: org . junit . assert . assertthat ( top . isspinning ( ) , org . hamcrest . core . is . is ( true ) )
[0]: org. junit. assert. assertequals ( unpacked, unpacked. s )
[1]: org. junit. assert. assertnotnull ( unpacked )
[2]: org. junit. assert. assertequals ( null, unpacked )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( path )

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: org. junit. assert. assertthat ( storage, org. hamcrest. core. is. is ( storage ) )
[1]: org. junit. assert. assertthat ( storage. count, org. hamcrest. core. is. is ( 1 ) )
[2]: org. junit. assert. assertthat ( storage, org. hamcrest. matchers. is ( storage ) )
[3]: org. junit. assert. assertequals ( msg, dynany. get_wstring ( ) )
[4]: org. junit. assert. assertequals ( msg, dynamany. get_wstring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , vals . size ( ) )
[0]: org. junit. assert. assertequals ( msg, miany. get_wstring ( ) )
[1]: org. junit. assert. assertequals ( msg, tmpany. get_wstring ( ) )
[2]: org. junit. assert. assertequals ( msg, dt )
[3]: org. junit. assert. assertequals ( doublevalue, d, 0 )
[4]: org. junit. assert. assertequals ( doublevalue, d, 1.0 )

************

************
tgt: org . junit . assert . assertequals ( new org . finra . herd . model . api . xml . businessobjectdefinitionsubjectmatterexpert ( resultbusinessobjectdefinitionsubjectmatterexpert . getid ( ) , new org . finra . herd . model . api . xml . businessobjectdefinitionsubjectmatterexpertkey ( bdef_namespace , bdef_name , org . finra . herd . service . user_id . touppercase ( ) ) ) , resultbusinessobjectdefinitionsubjectmatterexpert )
[0]: org. junit. assert. assertequals ( doublevalue, d, 0.0 )
[1]: org. junit. assert. assertequals ( doublevalue. length, d, 0 )
[2]: org. junit. assert. assertequals ( doublevalue, d, 1 )
[3]: org. junit. assert. assertequals ( numericlinecharsnonshifted, element. gettext ( ) )
[4]: org. junit. assert. assertequals ( numericlinecharsnonshifted, elements. gettext ( ) )

************

************
tgt: org . junit . assert . assertequals ( "hello<sp>world" , deferredmatch . getlastusedmatchvalue ( ) )
[0]: org. junit. assert. assertequals ( numericlinecharsnonshifted, elem. gettext ( ) )
[1]: org. junit. assert. assertnotnull ( element. gettext ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, accountnode. size ( ) )
[4]: org. junit. assert. assertequals ( 1, "contacts. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( modulehelper . id , ( ( int ) ( retbug . getid ( ) ) ) )
[0]: org. junit. assert. assertequals ( 1, root. size ( ) )
[1]: org. junit. assert. assertequals ( 1, collection. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( format, headeruserachievements. getbronzebadgescount ( ) )
[4]: org. junit. assert. assertequals ( 0, headeruserachievements. getbronzebadgescount ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( jbosscontext )
[0]: org. junit. assert. assertequals ( 1, headeruserachievements. getbronzebadgescount ( ) )
[1]: org. junit. assert. assertequals ( 3, headeruserachievements. getbronzebadgescount ( ) )
[2]: org. junit. assert. assertequals ( 4, headeruserachievements. getbronzebadgescount ( ) )
[3]: org. junit. assert. assertnotnull ( qbe )
[4]: org. junit. assert. assertequals ( qbe, entity )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( null, qbe )
[1]: org. junit. assert. assertequals ( 1, qbe. length )
[2]: type ) )
[3]: org. junit. assert. assertequals ( 0, events. size ( ) )
[4]: org. junit. assert. assertnotnull ( eventbus. process ( event ) )

************

************
tgt: org . junit . assert . assertequals ( in , out )
[0]: org. junit. assert. assertnotnull ( eventbus. event )
[1]: org. junit. assert. assertequals ( 0, handler. events. size )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, spy. iscomplete ( null ) )
[4]: org. junit. assert. assertnull ( spy. iscomplete ( null ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , fixture . getserveraddresses ( ) )
[0]: org. junit. assert. assertfalse ( spy. iscomplete ( null ) )
[1]: org. junit. assert. assertequals ( 1, spy. iscomplete ( null ) )
[2]: org. junit. assert. assertequals ( 0, spy. iscomplete ( true ) )
[3]: org. junit. assert. assertequals ( 0, store. get ( ) )
[4]: org. junit. assert. assertnull ( log. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( jarxml . exists ( ) )
[0]: org. junit. assert. assertequals ( 0, dao. get ( ). length )
[1]: get ( ) )
[2]: ) )
[3]: org. junit. assert. assertthat ( rawmatcher. matches ( typedescription, classloader, module, net. bytebuddy. agent. builder. agentbuilderrawmatcherconjunctiontest. foo. class ), org. hamcrest. corematchers. is ( true ) )
[4]: org. junit. assert. assertthat ( rawmatcher. matches ( typedescription, classloader, module, net. bytebuddy. agent. builder. agentbuilderrawmatcherconjunctiontest. foo ), org. hamcrest. corematchers. is ( true ) )

************

************
tgt: org . junit . assert . assertnull ( context . getnodebyid ( "c-a" ) )
[0]: org. junit. assert. assertthat ( rawmatcher. matches ( typedescription ), org. hamcrest. corematchers. is ( true ) )
[1]: org. junit. assert. assertthat ( rawmatcher. matches ( typedescription ), is ( true ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( stringlength50, request. getfirmwareversion ( ) )
[4]: org. junit. assert. assertequals ( stringlength50, request. getfirmwareversion ( ). tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( hostaddobj . gethostname ( ) ) != null ) )
[0]: org. junit. assert. assertnull ( request. getfirmwareversion ( ) )
[1]: org. junit. assert. assertnotnull ( request. getfirmwareversion ( ) )
[2]: org. junit. assert. assertequals ( stringlength50, request. getfirmwareversion ( ). trim ( ) )
[3]: org. junit. assert. assertnotnull ( pix )
[4]: org. junit. assert. assertequals ( pix, pix )

************

************
tgt: org . junit . assert . assertequals ( ( numberofprojects - 1 ) , projectdao . getall ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( pix, pix. getdominantcolorname ( image1 ) )
[1]: org. junit. assert. assertequals ( image1, pix )
[2]: org. junit. assert. assertequals ( colorname. red, pix )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )

************

************
tgt: org . junit . assert . assertequals ( null , upload . getimage ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: ) )
[2]: 
[3]: org. junit. assert. assertequals ( 1, options. getvertices ( ). length )
[4]: org. junit. assert. assertequals ( 1, options. list ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnull ( person . getfirstname ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( args ), options. values )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), options. values )
[2]: org. junit. assert. assertequals ( 0, options. getvertices ( ). length )
[3]: org. junit. assert. assertnotnull ( multiplexed )
[4]: org. junit. assert. assertequals ( null, multiplexed )

************

************
tgt: org . junit . assert . assertequals ( 1 , allsignatures . size ( ) )
[0]: org. junit. assert. assertequals ( output, multiplexed )
[1]: org. junit. assert. assertequals ( 0, multiplexed. stdout ( ). length )
[2]: org. junit. assert. assertequals ( 0, multiplexed. stdout ( ). size ( )
[3]: org. junit. assert. assertequals ( 1, listtest4. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), listtest4 )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 0, listtest4. size ( ) )
[1]: org. junit. assert. assertnotnull ( listtest4 )
[2]: type ) )
[3]: org. junit. assert. assertnotnull ( browser. tostring ( ) )
[4]: org. junit. assert. assertequals ( browser. tostring ( ), retrievedidvalues. get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( "a" , value )
[0]: org. junit. assert. assertnull ( browser. tostring ( ), retrievedidvalues. get ( 0 ) )
[1]: org. junit. assert. assertnotnull ( browser. tostring ( ), retrievedidvalues. get ( 0 ) )
[2]: org. junit. assert. assertequals ( browser. tostring ( ), retrievedidvalues )
[3]: org. junit. assert. assertnotnull ( methodname )
[4]: org. junit. assert. assertfalse ( method. issslrequired ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , map . size ( ) )
[0]: org. junit. assert. assertequals ( true, method. issslrequired ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( expected, contents )
[4]: org. junit. assert. assertequals ( 1, contents. length )

************

************
tgt: org . junit . assert . assertequals ( 1 , impl . selectivity ( null ) )
[0]: org. junit. assert. assertequals ( expected, contents [ 0 ] )
[1]: org. junit. assert. assertnull ( contents )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnull ( matcher )

************

************
tgt: org . junit . assert . assertequals ( framedata1 , framedata2 )
[0]: org. junit. assert. assertequals ( 1, hihovalue. getisold ( ) )
[1]: org. junit. assert. assertequals ( 0, hihovalue. getisold ( ) )
[2]: org. junit. assert. assertequals ( null, hihovalue. getisold ( ) )
[3]: org. junit. assert. assertnull ( hihovalue. getisold ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , node . getnbchildren ( ) )
[0]: org. junit. assert. assertequals ( true, com. liferay. portal. security. membershippolicy. sitemembershippolicyfactoryimpltest. _atomicstate. isset ( ) )
[1]: org. junit. assert. assertthat ( readmessage ( status ), org. hamcrest. matchers. is ( status ) )
[2]: org. junit. assert. assertthat ( readmessage ( status ), org. hamcrest. matchers. is ( false ) )
[3]: org. junit. assert. assertthat ( readmessage ( status ), org. hamcrest. matchers. is ( true ) )
[4]: org. junit. assert. assertequals ( 0, readmessage ( status ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertnotnull ( readmessage ( status ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), s )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), s )
[3]: org. junit. assert. assertequals ( 1, s. size ( ) )
[4]: org. junit. assert. assertequals ( s. union ( 1, 2, 3 ), s )

************

************
tgt: org . junit . assert . assertequals ( "testversion" , result )
[0]: org. junit. assert. assertequals ( s. union ( 1, 2, 3 ), s. union ( ) )
[1]: org. junit. assert. assertequals ( ppe. getentries ( ), allentries )
[2]: org. junit. assert. assertnotnull ( fixture. getretrytimeoutinseconds ( ) )
[3]: org. junit. assert. assertequals ( 3, rule. getretrytimeoutinseconds ( ) )
[4]: org. junit. assert. assertnotnull ( parser. getretrytimeoutinseconds ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( moved )
[0]: org. junit. assert. assertequals ( 0, rule. getretrytimeoutinseconds ( ) )
[1]: org. junit. assert. assertequals ( 0, service. getretrytimeoutinseconds ( ) )
[2]: org. junit. assert. assertequals ( topath ( ""a"", ""b"" ), topath ( ""a"" ) )
[3]: org. junit. assert. assertequals ( topath ( ""a"", ""b"" ), topath ( ""a"", ""b"" ) )
[4]: org. junit. assert. assertequals ( topath ( ""a"", ""b"" ), topath ( ""a"" ) )

************

************
tgt: org . junit . assert . assertthat ( factorybean . getimports ( ) [ 0 ] , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( expectedsnapshotmetadata ) ) )
[0]: org. junit. assert. assertequals ( topath ( ""a"", ""b"" ), topath ( ""a"", ""b"" ) )
[1]: org. junit. assert. assertequals ( topath ( ""a"", ""a"" ), topath ( ""a"" ) )
[2]: org. junit. assert. asserttrue ( isconnected )
[3]: org. junit. assert. assertnotnull ( validateconstraints ( generic ) )
[4]: org. junit. assert. assertequals ( 0, validateconstraints ( generic ) )

************

************
tgt: org . junit . assert . assertnotnull ( value )
[0]: org. junit. assert. assertnull ( validateconstraints ( generic ) )
[1]: org. junit. assert. assertequals ( 1, validateconstraints ( generic ) )
[2]: org. junit. assert. asserttrue ( validateconstraints ( generic ) )
[3]: org. junit. assert. assertequals ( 1, remoteprovidedsources. size ( ) )
[4]: org. junit. assert. assertequals ( 0, remoteprovidedsources. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( deadlockdetector . victims ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( null, remoteprovidedsources )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), remoteprovidedsources )
[2]: org. junit. assert. assertnotnull ( remoteprovidedsources )
[3]: org. junit. assert. assertnotnull ( runtime. getchannel ( ) )
[4]: org. junit. assert. assertequals ( 1, runtime. getchannel ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( action . isexecuted ( ) )
[0]: org. junit. assert. assertequals ( 1, runtime. getchannel ( ) )
[1]: org. junit. assert. assertequals ( 0, runtime. getchannel ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, runtime. getchannel ( ) )
[3]: org. junit. assert. assertequals ( 1, saved. getslides ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, saved. getslides ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( connection ) ) )
[0]: org. junit. assert. assertequals ( 3, saved. getslides ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 2, saved. getslides ( ). size ( ) )
[2]: org. junit. assert. assertequals ( ppt, saved. getslides ( ) )
[3]: org. junit. assert. assertequals ( message, result )
[4]: org. junit. assert. assertthat ( result, org. hamcrest. matchers. is ( message ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new byte [ ] { 1 , 2 , 3 } , read )
[0]: org. junit. assert. assertthat ( message, org. hamcrest. matchers. is ( result ) )
[1]: , result )
[2]: ) )
[3]: org. junit. assert. assertequals ( ""pass"", envvars. get ( ""a"" ) )
[4]: org. junit. assert. assertequals ( ""pass"", envvars. get ( ""test"" ) )

************

************
tgt: org . junit . assert . assertthat ( added , org . hamcrest . core . is . is ( 1 ) )
[0]: org. junit. assert. assertequals ( ""pass"", envvars. get ( 0 ) )
[1]: org. junit. assert. assertequals ( ""pass"", envvars. get ( ""name"" ) )
[2]: org. junit. assert. assertequals ( ""pass"", envvars. get ( ""foo"" ) )
[3]: org. junit. assert. assertequals ( calendar. gettimeinmillis ( ), result. gettimeinmillis ( ) )
[4]: org. junit. assert. assertequals ( calendar. gettimeinmillis ( ), result )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( expected , result ) )
[0]: org. junit. assert. assertequals ( new java. sql. date ( millis ), result )
[1]: org. junit. assert. assertequals ( date. gettimeinmillis ( ), result. gettimeinmillis ( ) )
[2]: org. junit. assert. assertequals ( value, result )
[3]: org. junit. assert. assertnotnull ( getbound ( ) )
[4]: org. junit. assert. assertequals ( 1, instance. getbound ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , ur . getrc ( ) )
[0]: org. junit. assert. assertequals ( 1, msg. getbound ( ) )
[1]: org. junit. assert. assertequals ( 1, event. getbound ( ) )
[2]: org. junit. assert. assertequals ( 1, impl. getbound ( ) )
[3]: org. junit. assert. assertnotnull ( thin )
[4]: org. junit. assert. asserttrue ( thin. exists ( ) )

************

************
tgt: org . junit . assert . assertequals ( symmetrickeyparser , parser . getsymmetrickey ( ) )
[0]: org. junit. assert. assertequals ( thin, thin )
[1]: org. junit. assert. assertequals ( thin, saved )
[2]: org. junit. assert. assertequals ( thin, boot )
[3]: org. junit. assert. assertnotnull ( smsd1. getallatommapping ( ) )
[4]: org. junit. assert. assertnotnull ( remainingbuffer )

************

************
tgt: org . junit . assert . assertequals ( g , unwrapped )
[0]: org. junit. assert. assertequals ( null, remainingbuffer )
[1]: org. junit. assert. assertequals ( input, remainingbuffer )
[2]: org. junit. assert. assertequals ( remainingbuffer, decoder )
[3]: ) )
[4]: org. junit. assert. asserttrue ( quorumfunction. apply ( splitcluster ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. asserttrue ( quorumfunction. apply ( members ) )
[1]: org. junit. assert. assertequals ( 1, zrangebyscore. iterator ( ). next ( ) )
[2]: org. junit. assert. assertequals ( 3, zrangebyscore. iterator ( ). next ( ) )
[3]: org. junit. assert. assertequals ( 2, zrangebyscore. iterator ( ). size ( ) )
[4]: org. junit. assert. assertequals ( true, zrangebyscore. iterator ( ). hasnext ( ) )

************

************
tgt: org . junit . assert . assertsame ( service , gremlinexecutor . getexecutorservice ( ) )
[0]: org. junit. assert. assertequals ( 3, zrangebyscore. iterator ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( requestcontext )
[2]: org. junit. assert. assertnotnull ( requestcontext )
[3]: org. junit. assert. assertequals ( expected, e. setvariable ( name, x ). evaluate ( ) )
[4]: org. junit. assert. assertequals ( expected, e. setvariable ( name, x ). evaluate ( ), 0.0 )

************

************
tgt: org . junit . assert . assertequals ( expectedstep , generatebuildconfigstep )
[0]: org. junit. assert. assertequals ( expected, e. setvariable ( x, x ). evaluate ( ) )
[1]: org. junit. assert. assertequals ( expected, e. setvariable ( x, x ). evaluate ( ), 0.0 )
[2]: org. junit. assert. assertequals ( expected, e. setvariable ( name, x ) )
[3]: org. junit. assert. assertequals ( results, list )
[4]: org. junit. assert. assertequals ( list, result )

************

************
tgt: org . junit . assert . assertequals ( java . lang . system . getproperty ( "user.name" ) , getstdoutcontents ( ) )
[0]: org. junit. assert. assertequals ( 2, list. size ( ) )
[1]: org. junit. assert. assertequals ( 2, result. size ( ) )
[2]: org. junit. assert. assertequals ( 5, result. size ( ) )
[3]: org. junit. assert. assertequals ( regexp, factory. company ( ) )
[4]: org. junit. assert. assertequals ( regexp, new java. lang. string ( testurl ) )

************

************
tgt: org . junit . assert . assertequals ( rowstowrite , allresults )
[0]: org. junit. assert. assertequals ( regexp, instance. company ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. asserttrue ( isvalid )
[4]: org. junit. assert. assertequals ( 0, coeff. epsilonequals ( 0, 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , fetchedacl . getaces ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 0, coeff. epsilonequals ( 0, 1 ) )
[1]: org. junit. assert. assertequals ( 1, coeff. epsilonequals ( 0, 1 ) )
[2]: org. junit. assert. assertequals ( 0, coeff. epsilonequals ( 0, 0 ). length )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( x, y ), coeff )
[4]: org. junit. assert. assertfalse ( speccompareresult )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, sync. tokens ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, pk. gettype ( ) )
[2]: org. junit. assert. assertequals ( 0, pk. gettype ( ) )
[3]: org. junit. assert. assertnotnull ( pk. gettype ( ) )
[4]: org. junit. assert. assertequals ( null, pk. gettype ( ) )

************

************
tgt: org . junit . assert . assertequals ( document , webxml . getdocument ( ) )
[0]: org. junit. assert. assertequals ( pk. gettype ( ), null )
[1]: org. junit. assert. assertequals ( 0, pixels )
[2]: org. junit. assert. assertequals ( 1, pixels )
[3]: org. junit. assert. asserttrue ( ( pixels > 10 ) )
[4]: org. junit. assert. asserttrue ( ( pixels > 0 ) )

************

************
tgt: org . junit . assert . assertthat ( text , org . hamcrest . matchers . is ( "" ) )
[0]: org. junit. assert. assertequals ( pixels, 10 )
[1]: org. junit. assert. assertequals ( 1, total )
[2]: org. junit. assert. assertequals ( 0, total )
[3]: org. junit. assert. assertequals ( 5, total )
[4]: org. junit. assert. assertequals ( 3, total )

************

************
tgt: org . junit . assert . assertnotnull ( e . getmessage ( ) )
[0]: org. junit. assert. assertequals ( 2, total )
[1]: org. junit. assert. assertequals ( 0, request. size ( ) )
[2]: org. junit. assert. assertequals ( 0, request. sizes ( ) )
[3]: org. junit. assert. assertequals ( 1, request. size ( ) )
[4]: org. junit. assert. assertequals ( 0, requests. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actualquery )
[0]: ) )
[1]: org. junit. assert. assertequals ( expected, path )
[2]: org. junit. assert. assertequals ( expected, paths )
[3]: org. junit. assert. assertequals ( expected,path )
[4]: org. junit. assert. assertequals ( expected, pathname )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( "failure" ) )
[0]: org. junit. assert. assertequals ( expected, path ) )
[1]: org. junit. assert. asserttrue ( socket. isconnected ( ) )
[2]: org. junit. assert. assertfalse ( socket. isconnected ( ) )
[3]: org. junit. assert. assertequals ( true, socket. isconnected ( ) )
[4]: org. junit. assert. assertequals ( false, socket. isconnected ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , result . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expecteditem, actual )
[2]: org. junit. assert. assertarrayequals ( socketscreated, socketscreated )
[3]: org. junit. assert. assertarrayequals ( socketscreated, socketscreated. length )
[4]: org. junit. assert. assertnotnull ( socketscreated [ 0 ] )

************

************
tgt: org . junit . assert . assertequals ( expected , actualpaths )
[0]: org. junit. assert. assertnull ( socketscreated [ 0 ] )
[1]: org. junit. assert. assertarrayequals ( socketscreated )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( 1, map. size ( ) )
[4]: org. junit. assert. assertequals ( 0, map. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( pollsquestions . isempty ( ) )
[0]: org. junit. assert. assertequals ( 3, map. size ( ) )
[1]: org. junit. assert. assertequals ( 5, map. size ( ) )
[2]: org. junit. assert. assertequals ( 10, map. size ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. hashcode ( ), filter. hashcode ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. hashcode ( ), objects. hashcode ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( out )
[0]: org. junit. assert. assertequals ( java. lang. long. hashcode ( 1 ), name. hashcode ( ) )
[1]: org. junit. assert. assertequals ( 0, list. hashcode ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. hashcode ( ), java. util. arrays. hashcode ( ) )
[3]: org. junit. assert. assertequals ( 1, s. asinteger ( ). size ( ) )
[4]: org. junit. assert. assertequals ( s. asinteger ( ). size ( ), 42 )

************

************
tgt: org . junit . assert . assertfalse ( shown . isdisplayed ( ) )
[0]: org. junit. assert. assertequals ( s. asinteger ( ). tostring ( ), 42 )
[1]: org. junit. assert. assertequals ( s. asinteger ( ), 42 )
[2]: org. junit. assert. assertequals ( s, s. asinteger ( ). get ( ) )
[3]: org. junit. assert. asserttrue ( ( rooted == false ) )
[4]: org. junit. assert. assertequals ( title, doc. gettitle ( ) )

************

************
tgt: org . junit . assert . asserttrue ( input . isempty ( ) )
[0]: org. junit. assert. assertequals ( title, document. gettitle ( ) )
[1]: org. junit. assert. assertequals ( titles, doc. gettitle ( ) )
[2]: org. junit. assert. assertnull ( doc. gettitle ( ) )
[3]: org. junit. assert. assertnotnull ( doc. gettitle ( ) )
[4]: org. junit. assert. assertnotnull ( format1 )

************

************
tgt: org . junit . assert . assertequals ( 0 , res . size ( ) )
[0]: org. junit. assert. assertequals ( format1, format1 )
[1]: org. junit. assert. assertnotnull ( testheader )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnotnull ( ident_19 )
[4]: org. junit. assert. assertnotnull ( xmlfilter )

************

************
tgt: org . junit . assert . assertequals ( 26 , items . size ( ) )
[0]: org. junit. assert. assertnotnull ( testheader ( ) )
[1]: org. junit. assert. assertequals ( java. util. optional. empty ( ), result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( java. util. optional. of ( ), result )
[4]: org. junit. assert. assertequals ( 1, result. get ( ) )

************

************
tgt: org . junit . assert . assertfalse ( res )
[0]: ) )
[1]: org. junit. assert. assertequals ( ids, embedding. getidlist ( java. util. arrays. aslist ( ids ) ) )
[2]: org. junit. assert. assertequals ( ids, embedding. getidlist ( java. util. arrays. aslist ( snapshots ) ) )
[3]: org. junit. assert. assertequals ( ids, embedding. getidlist ( 0 ) )
[4]: org. junit. assert. assertequals ( ids, embedding. getidlist ( java. util. arrays. aslist ( 0 ) ) )

************

************
tgt: org . junit . assert . assertnotnull ( file . tostring ( ) )
[0]: org. junit. assert. assertequals ( ids, embedding. getidlist ( java. util. arrays. aslist ( names ) ) )
[1]: org. junit. assert. assertequals ( sb. tostring ( ), sb. tostring ( ) )
[2]: org. junit. assert. assertequals ( sb. tostring ( ), java. util. arrays. aslist ( sb. tostring ( ) ) )
[3]: org. junit. assert. assertequals ( sb. tostring ( ), java. util. collections. singletonlist ( sb. tostring ( ) ) )
[4]: org. junit. assert. assertequals ( sb. tostring ( ), result. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( result . error , source . validate ( container ) . getstatus ( ) )
[0]: . tostring ( ) )
[1]: org. junit. assert. assertequals ( echo. echo ( ""test"" ), 1 )
[2]: org. junit. assert. assertequals ( echo. echo ( ""test"" ), 0 )
[3]: org. junit. assert. assertequals ( echo. echo ( ), 1 )
[4]: org. junit. assert. assertequals ( echo, result )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . equals ( beforeconvstr . getbytes ( ) , afterconvbytearr ) , true )
[0]: org. junit. assert. assertnotnull ( echo )
[1]: org. junit. assert. assertequals ( 1, getvalue ( ) )
[2]: org. junit. assert. assertnotnull ( getvalue ( ) )
[3]: org. junit. assert. assertequals ( 0, getvalue ( ) )
[4]: org. junit. assert. assertequals ( getvalue ( ), 1 )

************

************
tgt: org . junit . assert . assertnotnull ( url )
[0]: , getvalue ( ) )
[1]: org. junit. assert. assertequals ( 1, fetchcount ( ) )
[2]: org. junit. assert. assertequals ( 0, fetchcount ( ) )
[3]: org. junit. assert. assertequals ( 1l, fetchcount ( ) )
[4]: org. junit. assert. assertequals ( 0l, fetchcount ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( immunosuppressiontreatment . getid ( ) )
[0]: org. junit. assert. assertequals ( 1l, fetchcount ( ), 0l )
[1]: org. junit. assert. assertnull ( columnheaders )
[2]: org. junit. assert. assertequals ( 0, result. size ( ) )
[3]: org. junit. assert. assertnotnull ( columnheaders )
[4]: org. junit. assert. assertequals ( 0, columns. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "value" , victim . getinformation ( "key" ) )
[0]: org. junit. assert. assertequals ( 0, columnheaders )
[1]: org. junit. assert. assertequals ( expectedrootkey, indexkey )
[2]: org. junit. assert. assertequals ( expectedrootkey, indiceskey )
[3]: org. junit. assert. assertequals ( expectedrootkey, actualkey )
[4]: org. junit. assert. assertequals ( expectedrootkey, nkey )

************

************
tgt: org . junit . assert . assertequals ( node , ensurednode )
[0]: org. junit. assert. assertequals ( expectedrootkey, indexkey ) )
[1]: org. junit. assert. assertequals ( 0, formatunrounded ( new java. util. arraylist < org. ocpsoft. prettytime. duration > ( ) ) )
[2]: org. junit. assert. assertequals ( 1, formatunrounded ( new java. util. arraylist < org. ocpsoft. prettytime. duration > ( ) ) )
[3]: org. junit. assert. assertequals ( expected, formatunrounded ( new java. util. arraylist < org. ocpsoft. prettytime. duration > ( ) ) )
[4]: org. junit. assert. assertequals ( 0, testapimisuse5. formatunrounded ( new java. util. date ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( person . tostring ( ) , msg . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, testapimisuse5. formatunrounded ( new java. util. date ( ) ) )
[1]: org. junit. assert. assertequals ( arr, lengthperslice )
[2]: org. junit. assert. assertnotnull ( lengthperslice )
[3]: org. junit. assert. assertequals ( 1, lengthperslice )
[4]: org. junit. assert. assertequals ( 0, lengthperslice )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . aslist ( expected ) , java . util . arrays . aslist ( actual ) )
[0]: org. junit. assert. assertequals ( null, lengthperslice )
[1]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[2]: org. junit. assert. assertequals ( expected, java. util. arrays. tostringunsorted ( rs ) )
[3]: org. junit. assert. assertequals ( expected, java. lang. string. valueof ( testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[4]: org. junit. assert. assertequals ( expected, tostringunsorted ( rs ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: ) )
[1]: org. junit. assert. assertequals ( new java. sql. date ( value ), result )
[2]: org. junit. assert. assertequals ( new java. sql. date ( 1 ), result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( new java. sql. date ( 0 ), result )

************

************
tgt: org . junit . assert . assertequals ( 0.25f , slider . getvalue ( ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( true, com. psddev. dari. util. dateutils. issameday ( first, second ) )
[2]: org. junit. assert. asserttrue ( com. psddev. dari. util. dateutils. issameday ( first, second ) )
[3]: org. junit. assert. assertequals ( dedatarecords. tostring ( ), 1, dedatarecords. size ( ) )
[4]: org. junit. assert. assertequals ( 1, position )

************

************
tgt: org . junit . assert . assertequals ( "dir/file3.txt,alias1.txt,file1.txt,alias2.txt" , actuallink )
[0]: org. junit. assert. assertequals ( 0, position )
[1]: org. junit. assert. asserttrue ( timer. stop ( ). isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, timer. stop ( ). size ( )
[3]: . stop ( ) )
[4]: stop ( ) )

************

************
tgt: org . junit . assert . asserttrue ( equals )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( m. getcterminus ( ) )
[2]: org. junit. assert. assertarrayequals ( pemcertificate, generatedpemcertchain )
[3]: org. junit. assert. assertequals ( pemcertificate, generatedpemcertchain )
[4]: org. junit. assert. assertarrayequals ( pemcertificate, generatedpempemcertchain )

************

************
tgt: org . junit . assert . assertequals ( 2 , entry . getentrycollection ( ) . size ( ) )
[0]: org. junit. assert. assertarrayequals ( pemcertificate, generatedpemcertchain )
[1]: org. junit. assert. assertnotnull ( generatedpemcertchain )
[2]: org. junit. assert. assertequals ( bigdecimaltype. type, promote ( doubletype. type, doubletype. type ) )
[3]: org. junit. assert. assertequals ( bigdecimaltype. type, promote ( double. class, doubletype. type ) )
[4]: org. junit. assert. assertequals ( bigdecimaltype. type, promote ( currencytype. type, doubletype. type ) )

************

************
tgt: org . junit . assert . assertfalse ( modelinstanceenumerationliteral01 . isundefined ( ) )
[0]: org. junit. assert. assertequals ( bigdecimaltype. type, promote ( null, doubletype. type ) )
[1]: org. junit. assert. assertequals ( bigdecimaltype. type, promote ( doubletype. type, doubletype. class ) )
[2]: org. junit. assert. assertequals ( 1, ai. get ( ) )
[3]: org. junit. assert. assertequals ( 0, ai. get ( ) )
[4]: org. junit. assert. assertequals ( 2, ai. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( dlfileentrytypes . isempty ( ) )
[0]: org. junit. assert. assertequals ( 4, ai. get ( ) )
[1]: org. junit. assert. assertequals ( 1, ai. size ( ) )
[2]: org. junit. assert. assertequals ( c1, c2 )
[3]: org. junit. assert. assertequals ( c1. hashcode ( ), c2 )
[4]: org. junit. assert. assertequals ( c0, c2 )

************

************
tgt: org . junit . assert . asserttrue ( testsuccess )
[0]: org. junit. assert. assertnotnull ( c1 )
[1]: )
[2]: org. junit. assert. assertthat ( activeclientsingroup, org. hamcrest. corematchers. is ( 1 ) )
[3]: org. junit. assert. assertthat ( activeclientsingroup, org. hamcrest. corematchers. is ( 0 ) )
[4]: org. junit. assert. assertthat ( activeclientsingroup, org. hamcrest. corematchers. is ( 1l ) )

************

************
tgt: org . junit . assert . asserttrue ( ( thrown == e ) )
[0]: org. junit. assert. assertthat ( activeclientsingroup )
[1]: ) )
[2]: org. junit. assert. assertthat ( entities, org. hamcrest. corematchers. is ( 1l ) )
[3]: org. junit. assert. assertthat ( entities, org. hamcrest. core. is. is ( 1l ) )
[4]: org. junit. assert. assertthat ( entities, org. hamcrest. corematchers. is ( size ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( expected , java . util . arrays . aslist ( path . list ( ) ) )
[0]: org. junit. assert. assertthat ( entities )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, result. gethasticket ( ) )
[3]: org. junit. assert. assertnotnull ( result. gethasticket ( ) )
[4]: org. junit. assert. assertequals ( 0, result. gethasticket ( ) )

************

************
tgt: org . junit . assert . assertequals ( basebean . outcome_success , organizationbean . addsuppliersfortechnicalservice ( ) )
[0]: org. junit. assert. assertequals ( null, result. gethasticket ( ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertequals ( 1, query. fetchcount ( ) )
[3]: org. junit. assert. assertequals ( 1, dao. fetchcount ( ) )
[4]: org. junit. assert. assertequals ( 0, query. fetchcount ( ) )

************

************
tgt: org . junit . assert . assertnull ( missingannouncementsdelivery )
[0]: org. junit. assert. assertequals ( 1, service. fetchcount ( ) )
[1]: org. junit. assert. assertequals ( 1, q. fetchcount ( ) )
[2]: org. junit. assert. assertthat ( factory. findotherbyownerandtype ( party, exclude, null ), org. hamcrest. matchers. is ( false ) )
[3]: org. junit. assert. assertthat ( factory. findotherbyownerandtype ( party, exclude, null ), org. hamcrest. matchers. is ( happy ) )
[4]: org. junit. assert. assertthat ( factory. findotherbyownerandtype ( party, exclude, exclude ), org. hamcrest. matchers. is ( happy ) )

************

************
tgt: org . junit . assert . assertnull ( missingrelease )
[0]: org. junit. assert. assertthat ( factory. findotherbyownerandtype ( party, exclude, null ), org. hamcrest. matchers. is ( true ) )
[1]: org. junit. assert. assertthat ( factory. findotherbyownerandtype ( party, exclude, exclude ), org. hamcrest. matchers. is ( true ) )
[2]: org. junit. assert. assertfalse ( org. dcache. util. subnet. isvalid ( "2001::00ff:ff00 ) )
[3]: org. junit. assert. assertfalse ( org. dcache. util. subnet. isvalid ( ""2001::00ff:ff00 ) )
[4]: org. junit. assert. assertfalse ( org. dcache. util. subnet. isvalid ( "2001::00ff ) )

************

************
tgt: org . junit . assert . assertequals ( new org . eclipse . rap . rwt . theme . boxdimensions ( 1 , 1 , 1 , 1 ) , actual )
[0]: org. junit. assert. assertfalse ( org. dcache. util. subnet. isvalid ( """" ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( type, context. gettype ( ) )
[3]: org. junit. assert. assertnotnull ( context. gettype ( ) )
[4]: org. junit. assert. assertequals ( java. util. collection. class, object. gettype ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( java. lang. string. class, converter. gettype ( ) )
[1]: org. junit. assert. assertequals ( java. lang. string. class, class. gettype ( ) )
[2]: org. junit. assert. assertequals ( httpstatus. sc_ok, responsebody )
[3]: org. junit. assert. assertequals ( httpstatus. sc_created, responsebody )
[4]: org. junit. assert. assertequals ( httpstatus. sc_ok, responsebody )

************

************
tgt: org . junit . assert . assertequals ( n1 , n2 )
[0]: org. junit. assert. assertequals ( httpstatus. sc_empty, responsebody )
[1]: org. junit. assert. assertnotnull ( responsebody )
[2]: org. junit. assert. assertequals ( au. edu. wehi. idsv. sam. samrecordutil. unclipexactreferencematches ( r, r ), r )
[3]: org. junit. assert. assertequals ( au. edu. wehi. idsv. sam. samrecordutil. unclipexactreferencematches ( r, null ), r )
[4]: org. junit. assert. assertequals ( au. edu. wehi. idsv. sam. samrecordutil. unclipexactreferencematches ( r, r ), r. length )

************

************
tgt: org . junit . assert . assertnotnull ( descresult )
[0]: org. junit. assert. asserttrue ( ( ( r. length ) == 0 ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( trans, transret )
[3]: org. junit. assert. assertequals ( transform, transret )
[4]: org. junit. assert. assertequals ( trans )

************

************
tgt: org . junit . assert . asserttrue ( evt . gettags ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( trans, transformret )
[1]: org. junit. assert. assertequals ( trans } transret )
[2]: org. junit. assert. assertequals ( 1, 1 )
[3]: org. junit. assert. assertnotnull ( queue )
[4]: org. junit. assert. assertnotnull ( collection )

************

************
tgt: org . junit . assert . assertequals ( results , maximum )
[0]: org. junit. assert. assertnotnull ( context )
[1]: type ) { }
[2]: org. junit. assert. assertequals ( concat, concat ( a, b ), concat ( b ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( a, b ), concat )
[4]: org. junit. assert. assertequals ( arithmetic, concat ( a, b ) )

************

************
tgt: org . junit . assert . assertnull ( message . getcontent ( ) )
[0]: org. junit. assert. assertequals ( concat, concat ( a, b ) )
[1]: org. junit. assert. assertequals ( union, concat, b )
[2]: org. junit. assert. assertequals ( 0, roles. size ( ) )
[3]: org. junit. assert. assertequals ( 1, roles. size ( ) )
[4]: org. junit. assert. assertnotnull ( roles )

************

************
tgt: org . junit . assert . assertequals ( 2 , issues . size ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertnotnull ( m. group ( 1 ) )
[3]: org. junit. assert. assertnull ( m. group ( 1 ) )
[4]: org. junit. assert. assertnotnull ( m )

************

************
tgt: org . junit . assert . assertnotnull ( classlogger )
[0]: org. junit. assert. assertnotnull ( m. group ( 0 ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( cert )
[3]: org. junit. assert. assertnotnull ( cert. getx509certificate ( ) )
[4]: org. junit. assert. assertnotnull ( cert. getx509certificate ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( pse )
[0]: org. junit. assert. assertnotnull ( certificate )
[1]: type ) )
[2]: org. junit. assert. assertnotnull ( resultbinding )
[3]: org. junit. assert. assertnotnull ( date. getclass ( ) )
[4]: org. junit. assert. assertnotnull ( value )

************

************
tgt: org . junit . assert . assertnotnull ( routesid )
[0]: org. junit. assert. assertnotnull ( date )
[1]: org. junit. assert. assertnotnull ( date. size ( ) )
[2]: org. junit. assert. assertequals ( combinationfilter, childproject1. getcombinationfilter ( ) )
[3]: org. junit. assert. assertequals ( 1, childproject1. getcombinationfilter ( ). size ( ) )
[4]: org. junit. assert. assertequals ( list ( ), childproject1. getcombinationfilter ( ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , getdecisionresult ( processinstance ) )
[0]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( combinationfilter ), childproject1 )
[1]: ) )
[2]: org. junit. assert. assertequals ( 2, cache. getrootdirectory ( ) )
[3]: org. junit. assert. assertequals ( foo, cache. getrootdirectory ( ) )
[4]: org. junit. assert. assertequals ( 200, cache. getrootdirectory ( ) )

************

************
tgt: org . junit . assert . assertequals ( "/genpath" , path )
[0]: org. junit. assert. assertnotnull ( cache. getrootdirectory ( ) )
[1]: org. junit. assert. assertequals ( 2, foo )
[2]: org. junit. assert. assertthat ( com. facebook. buck. cxx. elffile. getsoname ( elf ), org. hamcrest. matchers. equalto ( null ) )
[3]: org. junit. assert. assertthat ( com. facebook. buck. cxx. elffile. getsoname ( elf ), org. hamcrest. matchers. equalto ( expected ) )
[4]: org. junit. assert. assertnotnull ( com. facebook. buck. cxx. elffile. getsoname ( elf ) )

************

************
tgt: org . junit . assert . assertsame ( cause , org . codegist . crest . crestexception . handle ( e ) )
[0]: org. junit. assert. assertthat ( elf. getsoname ( elf ), org. hamcrest. matchers. equalto ( null ) )
[1]: ) )
[2]: org. junit. assert. assertnull ( e )
[3]: org. junit. assert. assertequals ( null, e )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertthat ( count . count , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert. assertnull ( e. getmessage )
[1]: ) )
[2]: org. junit. assert. assertequals ( contenttype. p2, mandatorysubject. tospdstring ( ) )
[3]: org. junit. assert. assertequals ( ""1"", mandatorysubject. tospdstring ( ) )
[4]: org. junit. assert. assertnotnull ( mandatorysubject. tospdstring ( ) )

************

************
tgt: org . junit . assert . assertthat ( ref . get ( ) . getdestination ( ) )
[0]: org. junit. assert. assertequals ( ""foo"", mandatorysubject. tospdstring ( ) )
[1]: org. junit. assert. assertequals ( contenttype. p1, mandatorysubject. tospdstring ( ) )
[2]: org. junit. assert. asserttrue ( encounter. getorders ( ). isempty ( ) )
[3]: org. junit. assert. assertnotnull ( encounter. getorders ( ) )
[4]: org. junit. assert. assertequals ( 0, encounter. getorders ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( month . equals ( month ) )
[0]: org. junit. assert. assertequals ( 0, encounter. getorders ( ). size ( )
[1]: ) )
[2]: org. junit. assert. assertequals ( portletkeys. test, portletinstance )
[3]: org. junit. assert. assertnotnull ( portletinstance. getportletname ( ) )
[4]: org. junit. assert. assertnull ( portletinstance. getportletname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , res . size ( ) )
[0]: org. junit. assert. assertnotnull ( portletinstance )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( allprojects. getresult ( ) )
[3]: org. junit. assert. assertnotnull ( allprojects )
[4]: org. junit. assert. assertnotnull ( allprojects. getresult ( ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , map . size ( ) )
[0]: org. junit. assert. assertnotnull ( allprojects. getresult ( ). isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, allprojects )
[2]: org. junit. assert. assertnotnull ( target. getscope ( ) )
[3]: org. junit. assert. assertequals ( 0, target. getscope ( ). size ( ) )
[4]: org. junit. assert. assertequals ( org. junit. assert. assertnotnull ( target. getscope ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( 42 ) ) )
[0]: org. junit. assert. assertequals ( null, target. getscope ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, rowmeta. getvaluemetalist ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), rowmeta. getvaluemetalist ( ) )
[4]: org. junit. assert. assertequals ( 0, rowmeta. getvaluemetalist ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( queueview )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( charly ), rowmeta. getvaluemetalist )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), rowmeta. getvaluemetalist )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( ( ! ( driverimpl . isstarted ( ) ) ) )
[0]: ) )
[1]: 
[2]: org. junit. assert. asserttrue ( value )
[3]: org. junit. assert. assertequals ( true, value )
[4]: org. junit. assert. assertfalse ( value )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertnotnull ( value )
[1]: org. junit. assert. assertequals ( true, values )
[2]: org. junit. assert. assertequals ( 1, projection. getvertices ( ). length )
[3]: org. junit. assert. assertequals ( 1, projection. getvertices ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, view. getvertices ( ). length )

************

************
tgt: org . junit . assert . assertequals ( _divide , _divide_1 )
[0]: org. junit. assert. assertequals ( 1, view. getvertices ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, frustum. getvertices ( ). length )
[2]: org. junit. assert. assertequals ( 1, this. testee. getkillingtestdescription ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, this. testee. getkillingtestdescription ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( this. testee. getkillingtestdescription ( ) )

************

************
tgt: org . junit . assert . assertequals ( "hello" , actual )
[0]: org. junit. assert. assertequals ( 1, this. testee. getkillingtestdescription ( ) )
[1]: org. junit. assert. assertequals ( 1, this. testee. getkillingtestdescription ( ). count ( ) )
[2]: org. junit. assert. assertequals ( ml, expectedmove )
[3]: org. junit. assert. assertequals ( ml. tostring ( ), expectedmove )
[4]: org. junit. assert. assertequals ( ml. contains ( expectedmove ), expectedmove )

************

************
tgt: org . junit . assert . assertthat ( configuration . getbucket ( ) , org . hamcrest . corematchers . is ( "gs://bucket" ) )
[0]: org. junit. assert. assertequals ( ml. tostring ( ), expectedmove, ml )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( foundconfig )
[3]: org. junit. assert. assertequals ( httpcacheconfig. filterscope. request, foundconfig )
[4]: org. junit. assert. assertequals ( httpcacheconfig. filterscope._1, foundconfig )

************

************
tgt: org . junit . assert . asserttrue ( onmsclient . requisitionremove ( foreign_source , true ) )
[0]: org. junit. assert. assertequals ( httpcacheconfig. filterscope. guaranteed, foundconfig )
[1]: org. junit. assert. assertnull ( foundconfig )
[2]: org. junit. assert. assertequals ( 1, results. size ( ) )
[3]: org. junit. assert. assertequals ( arguments, result )
[4]: org. junit. assert. assertequals ( arguments, o_acompb )

************

************
tgt: org . junit . assert . assertnull ( lookup )
[0]: org. junit. assert. assertequals ( 1, arguments. length ( ) )
[1]: org. junit. assert. assertequals ( 1, arguments )
[2]: org. junit. assert. assertequals ( provisioningservice. getmessagesprocessed ( ), messages )
[3]: org. junit. assert. assertequals ( 1, topics. size ( ) )
[4]: org. junit. assert. assertequals ( 0, topics. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( fi . helsinki . cs . tmc . cli . backend . tmcutil . submitexercise ( ctx , exercise ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), topics )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), topics )
[2]: , topics )
[3]: org. junit. assert. asserttrue ( com. huawei. streaming. config. streamingconfigtest. config. getbooleanvalue ( com. huawei. streaming. config. streamingconfigtest. conf_var ) )
[4]: org. junit. assert. assertnull ( com. huawei. streaming. config. streamingconfigtest. config. getbooleanvalue ( com. huawei. streaming. config. streamingconfigtest. conf_var ) )

************

************
tgt: org . junit . assert . assertequals ( expected , accumulator . gethistogram ( ) )
[0]: org. junit. assert. assertfalse ( com. huawei. streaming. config. streamingconfigtest. config. getbooleanvalue ( com. huawei. streaming. config. streamingconfigtest. conf_var ) )
[1]: org. junit. assert. assertequals ( 0, com. huawei. streaming. config. streamingconfigtest. config. getbooleanvalue ( com. huawei. streaming. config. streamingconfigtest. conf_var ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, cost. getperformancecost ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, cost. getperformancecost ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( new edu . illinois . library . cantaloupe . image . dimension ( 400 , 200 ) , instance . getresultingsize ( fullsize , rf , sc ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), cost. getperformancecost ( ) )
[1]: org. junit. assert. assertequals ( null, cost. getperformancecost ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), cost. getperformancecost ( ). trim ( ) )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertnotnull ( x12. getsegment ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( exists )
[0]: org. junit. assert. assertnotnull ( x12. getsegment ( 0 ) )
[1]: org. junit. assert. assertnotnull ( x12. getsegment ( 2 ) )
[2]: org. junit. assert. assertnotnull ( x12 )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, events. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( valid . isvalid ( ) )
[0]: org. junit. assert. assertequals ( 0, events. size ( ) )
[1]: org. junit. assert. assertequals ( events. size ( ), 3 )
[2]: org. junit. assert. assertequals ( 3, events. size ( ) )
[3]: org. junit. assert. assertnotnull ( events )
[4]: org. junit. assert. assertequals ( expr. accept ( visitor ), visitresult )

************

************
tgt: org . junit . assert . assertarrayequals ( new com . devexperts . dxlab . lincheck . result [ ] { com . devexperts . dxlab . lincheck . result . createvalueresult ( true ) , com . devexperts . dxlab . lincheck . result . createvalueresult ( true ) , com . devexperts . dxlab . lincheck . result . createvalueresult ( 1 ) , com . devexperts . dxlab . lincheck . result . createvalueresult ( 2 ) , com . devexperts . dxlab . lincheck . result . createvalueresult ( 2 ) } , ex . call ( ) )
[0]: org. junit. assert. assertequals ( expression. accept ( visitor ), visitresult )
[1]: org. junit. assert. assertequals ( expression, expr. accept ( visitor ) )
[2]: org. junit. assert. assertequals ( null, expr. accept ( visitor ) )
[3]: org. junit. assert. assertequals ( expr. accept ( visitor ), visitresult )
[4]: org. junit. assert. assertequals ( 1, listurisettings. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( inferred . isabstract ( ) )
[0]: org. junit. assert. assertequals ( 0, listurisettings. size ( ) )
[1]: org. junit. assert. assertequals ( 3, listurisettings. size ( ) )
[2]: org. junit. assert. assertequals ( 2, listurisettings. size ( ) )
[3]: org. junit. assert. assertequals ( 4, listurisettings. size ( ) )
[4]: org. junit. assert. assertequals ( is, adapter. getservlet ( ""test"" ) )

************

************
tgt: org . junit . assert . assertnotnull ( projects )
[0]: org. junit. assert. assertequals ( is, adapter. getservlet ( ""foo"" ) )
[1]: org. junit. assert. assertequals ( is, adapter. getservlet ( string ) )
[2]: org. junit. assert. assertequals ( is, adapter. getservlet ( ""a"" ) )
[3]: org. junit. assert. assertequals ( is, adapter. getservlet ( null ) )
[4]: org. junit. assert. assertequals ( 1, result. count )

************

************
tgt: org . junit . assert . assertequals ( 1 , count )
[0]: org. junit. assert. assertequals ( 1, result. type )
[1]: org. junit. assert. assertequals ( 1, result. errors )
[2]: org. junit. assert. assertnotnull ( result )
[3]: _1 )
[4]: org. junit. assert. asserttrue ( net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )

************

************
tgt: org . junit . assert . asserttrue ( hash1 . equals ( hash2 ) )
[0]: org. junit. assert. assertnotnull ( net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )
[1]: org. junit. assert. assertfalse ( net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )
[2]: org. junit. assert. assertequals ( 1, net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )
[3]: org. junit. assert. assertequals ( true, net. alpenblock. bungeeperms. permissionsresolver. has ( perms, perm ) )
[4]: org. junit. assert. asserttrue ( checker. isauthorized ( profile, profiles, defaultauthorizers. is_managed, testisremembered ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. asserttrue ( checker. isauthorized ( profile, profiles, defaultauthorizers. is_managed, null ) )
[1]: org. junit. assert. asserttrue ( checker. isauthorized ( profile, profiles, defaultauthorizers. is_artifact, testisremembered ) )
[2]: org. junit. assert. asserttrue ( checker. isauthorized ( profile, profiles, defaultauthorizers. is_server, testisremembered ) )
[3]: org. junit. assert. asserttrue ( checker. isauthorized ( profile, profiles, defaultauthorizers. is_server, testisremember ) )
[4]: org. junit. assert. assertequals ( artifactversion, new org. codehaus. mojo. versions. requiredmavenversionfinder ( mavenproject ) )

************

************
tgt: org . junit . assert . asserttrue ( exceptionthrown )
[0]: org. junit. assert. assertthat ( artifactversion, org. hamcrest. matchers. is ( artifactversion ) )
[1]: org. junit. assert. assertequals ( artifactversion. find ( ), minimumversion )
[2]: org. junit. assert. assertnotnull ( artifactversion )
[3]: ) )
[4]: org. junit. assert. asserttrue ( cookiespec. match ( cookie, origin ) )

************

************
tgt: org . junit . assert . assertequals ( bre , actual )
[0]: org. junit. assert. assertnotnull ( result. getresponse ( ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertnotnull ( result. getresponse ( ). getstatus ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertsame ( o , ts . clone ( o ) )
[0]: org. junit. assert. assertequals ( 200, linecount )
[1]: org. junit. assert. assertequals ( 3, linecount )
[2]: org. junit. assert. assertequals ( 0, linecount )
[3]: org. junit. assert. assertfalse ( okay )
[4]: , okay )

************

************
tgt: org . junit . assert . assertequals ( true , result )
[0]: org. junit. assert. assertnotnull ( getarchimateconcept ( ) )
[1]: org. junit. assert. assertequals ( 1, getarchimateconcept ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, getarchimateconcept ( ). size ( ) )
[3]: org. junit. assert. assertequals ( null, getarchimateconcept ( ) )
[4]: org. junit. assert. assertnull ( getarchimateconcept ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertfalse ( com. google. cloud. tools. eclipse. sdk. internal. cloudsdkpreferences. isautomanaging ( null ) )
[1]: org. junit. assert. asserttrue ( com. google. cloud. tools. eclipse. sdk. internal. cloudsdkpreferences. isautomanaging ( null ) )
[2]: org. junit. assert. assertfalse ( com. google. cloud. tools. eclipse. sdk. internal. cloudsdkpreferences. isautomanaging ( result ) )
[3]: org. junit. assert. assertfalse ( com. google. cloud. tools. eclipse. sdk. internal. cloudsdkpreferences. isautomanaging ( java. util. collections. singletonlist ( 1 ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( conversationid > 1 ) )
[0]: org. junit. assert. assertthat ( restored. get ( ), is ( option. get ( ) ) )
[1]: org. junit. assert. assertthat ( restored. get ( ), is ( options. get ( ) ) )
[2]: org. junit. assert. assertthat ( restored. get ( ). size ( ), is ( 1 ) )
[3]: org. junit. assert. assertthat ( restored. get ( ), is ( option ) )
[4]: get ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. asserttrue ( field. isempty ( ) )
[1]: org. junit. assert. assertfalse ( field. isempty ( ) )
[2]: org. junit. assert. assertequals ( false, field. isempty ( ) )
[3]: org. junit. assert. asserttrue ( objmap. isempty ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( valide , true )
[0]: org. junit. assert. assertequals ( result, result ( resultfuture ) )
[1]: org. junit. assert. assertequals ( result, resultfuture. get ( ) )
[2]: org. junit. assert. assertequals ( result, resultfuture. result ( ) )
[3]: org. junit. assert. assertequals ( result, java. util. collections. result ( resultfuture ) )
[4]: org. junit. assert. assertequals ( result, java. util. collections. singletonlist ( resultfuture ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( principals . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_federation_2ldaps_2realmstest. servlet. getrealm ( ) )
[1]: org. junit. assert. assertequals ( null, com. ibm. ws. security. wim. adapter. ldap. fat. urapis_federation_2ldaps_2realmstest. servlet. getrealm ( ) )
[2]: org. junit. assert. assertnotnull ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_federation_2ldaps_2realmstest. servlet )
[3]: org. junit. assert. assertequals ( com. ibm. ws. security. wim. adapter. ldap. fat. urapis_federation_2ldaps_2realmstest. servlet. getrealm ( ), null )
[4]: org. junit. assert. assertequals ( null, com. ibm. ws. security. wim. adapter. ldap. fat. urapis_federation_2ldaps_2realmstest. servlet )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , d )
[0]: org. junit. assert. assertequals ( in, out )
[1]: org. junit. assert. assertequals ( input, out )
[2]: org. junit. assert. assertequals ( out, in )
[3]: , out )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , prepare . getshortcuts ( ) )
[0]: org. junit. assert. assertequals ( true, rollup. hasdata ( ) )
[1]: org. junit. assert. assertnotnull ( dbdialectclass )
[2]: org. junit. assert. asserttrue ( determines ( z, x ) )
[3]: org. junit. assert. asserttrue ( checks. determines ( z, x ) )
[4]: org. junit. assert. asserttrue ( test. determines ( z, x ) )

************

************
tgt: org . junit . assert . assertequals ( i , buffer . readlong ( ) )
[0]: org. junit. assert. assertequals ( true, determines ( z, x ) )
[1]: ) )
[2]: org. junit. assert. assertarrayequals ( org. apache. shindig. gadgets. servlet. etagfiltertest. response_body_bytes, response. getbuffer ( ) )
[3]: org. junit. assert. assertnotnull ( actual )
[4]: org. junit. assert. assertequals ( null, actual )

************

************
tgt: org . junit . assert . assertfalse ( map . containskey ( 123 ) )
[0]: org. junit. assert. assertequals ( java. lang. string. class, actual )
[1]: org. junit. assert. assertequals ( expected, actual )
[2]: ) )
[3]: org. junit. assert. assertequals ( e2, com. baeldung. enums. values. element2. valueoflabel ( e2. label ) )
[4]: org. junit. assert. assertnotnull ( com. baeldung. enums. values. element2. valueoflabel ( e2. label ) )

************

************
tgt: org . junit . assert . assertthat ( array . getindexids ( ) , org . hamcrest . core . is . is ( new java . lang . integer [ ] { } ) )
[0]: org. junit. assert. assertnotnull ( com. baeldung. enums. values. element2. valueoflabel ( e2. tostring ( ) ) )
[1]: org. junit. assert. assertnotnull ( com. baeldung. enums. values. element2. valueoflabel ( e2. getid ( ) ) )
[2]: org. junit. assert. assertnull ( com. baeldung. enums. values. element2. valueoflabel ( e2. label ) )
[3]: org. junit. assert. assertnull ( mockaction. getmethod ( ) )
[4]: org. junit. assert. assertnotnull ( mockaction. getmethod ( ) )

************

************
tgt: org . junit . assert . assertequals ( 6 , nodelist . getlength ( ) )
[0]: org. junit. assert. assertequals ( null, mockaction. getmethod ( ) )
[1]: org. junit. assert. assertsame ( null, mockaction. getmethod ( ) )
[2]: type ) )
[3]: org. junit. assert. assertequals ( m, oneway2 )
[4]: org. junit. assert. assertequals ( ft, oneway2 )

************

************
tgt: org . junit . assert . assertequals ( attributename , wadlattributename . getlocalname ( ) )
[0]: org. junit. assert. assertequals ( gen, oneway2 )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( localparallelism, transformof ( stage ). size ( ) )
[4]: org. junit. assert. assertequals ( localparallelism, transformof ( stage ). get ( ) )

************

************
tgt: org . junit . assert . assertnull ( decchar )
[0]: org. junit. assert. assertequals ( localparallelism, transformof ( stage ). length ( ) )
[1]: org. junit. assert. assertequals ( localparallelism, transformof ( stage ). count ( ) )
[2]: org. junit. assert. assertequals ( null, transformof ( stage ) )
[3]: org. junit. assert. asserttrue ( formupdate. equals ( formupdate ) )
[4]: org. junit. assert. assertfalse ( formupdate. equals ( formupdate ) )

************

************
tgt: org . junit . assert . asserttrue ( result . equals ( org . threadly . concurrent . collections . concurrentarraylistdatasettest . makedataset ( expectedresult , 0 , expectedresult . length ) ) )
[0]: org. junit. assert. asserttrue ( forms. equals ( formupdate ) )
[1]: org. junit. assert. asserttrue ( formupdate. equals ( formupdate ) ) ;
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( resultedquery , org . hamcrest . corematchers . is ( expectedquery ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: , result )
[3]: org. junit. assert. assertequals ( 1, ruleevents. size ( ) )
[4]: org. junit. assert. assertequals ( 0, ruleevents. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( future . issuccess ( ) )
[0]: org. junit. assert. assertequals ( 3, ruleevents. size ( ) )
[1]: org. junit. assert. assertequals ( 2, ruleevents. size ( ) )
[2]: org. junit. assert. assertequals ( 1, rulesevents. size ( ) )
[3]: org. junit. assert. assertequals ( 1, terms. size ( ) )
[4]: org. junit. assert. assertnotnull ( foo )

************

************
tgt: org . junit . assert . assertequals ( 19 , value )
[0]: org. junit. assert. assertequals ( foo, type )
[1]: org. junit. assert. assertequals ( null, foo )
[2]: org. junit. assert. assertequals ( foo, null )
[3]: org. junit. assert. assertequals ( assertnotnull, foo )
[4]: org. junit. assert. assertequals ( 1, as. length )

************

************
tgt: org . junit . assert . assertequals ( expected , ds )
[0]: org. junit. assert. assertequals ( sb. tostring ( ), tagout )
[1]: org. junit. assert. assertequals ( sb. tostring ( ), tagout )
[2]: org. junit. assert. assertequals ( sb. tostring ( ), tagsout )
[3]: org. junit. assert. assertequals ( sb. tostring ( ), tagoutput )
[4]: org. junit. assert. assertequals ( sb, tagout )

************

************
tgt: org . junit . assert . assertarrayequals ( new book . twju . chapter_3 . item [ ] { book . twju . chapter_3 . timelinetest . fourth_item , book . twju . chapter_3 . timelinetest . third_item } , actual . toarray ( new book . twju . chapter_3 . item [ 2 ] ) )
[0]: org. junit. assert. assertequals ( 1, results. size ( ) )
[1]: org. junit. assert. assertequals ( 0, results. size ( ) )
[2]: org. junit. assert. assertequals ( 3, results. size ( ) )
[3]: org. junit. assert. assertthat ( handled, is ( false ) )
[4]: org. junit. assert. assertthat ( handled, is ( true ) )

************

************
tgt: org . junit . assert . assertnotnull ( parse )
[0]: org. junit. assert. assertthat ( handled )
[1]: org. junit. assert. assertfalse ( handled )
[2]: , handled )
[3]: org. junit. assert. assertfalse ( x. equals ( null ) )
[4]: org. junit. assert. asserttrue ( x. equals ( x ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( true, x. equals ( x ) )
[1]: org. junit. assert. assertthat ( x. equals ( x ), is ( true ) )
[2]: org. junit. assert. assertthat ( x. equals ( x ), is ( false ) )
[3]: org. junit. assert. assertequals ( s3a, seta )
[4]: org. junit. assert. assertequals ( 1, seta. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , o . get ( ) )
[0]: org. junit. assert. assertequals ( s3a, seta. size ( ) )
[1]: org. junit. assert. assertequals ( 0, seta. size ( ) )
[2]: org. junit. assert. assertequals ( s3a, seta. get ( ) )
[3]: org. junit. assert. asserttrue ( ( ( componentset. size ( ) ) == ( componentlist. size ( ) ) ) )
[4]: org. junit. assert. assertequals ( true, ( ( componentset. size ( ) ) == ( componentlist. size ( ) ) ) )

************

************
tgt: org . junit . assert . assertthat ( this . mgr . getserver ( serverid ) , org . hamcrest . core . is . is ( server1 ) )
[0]: org. junit. assert. asserttrue ( ( ( componentset. size ( ) ) == ( componentslist. size ( ) ) ) )
[1]: org. junit. assert. assertequals ( ( ( componentset. size ( ) ) + 1 ), componentlist. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( null, outputintent )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( mockintent ), outputintent )

************

************
tgt: org . junit . assert . assertnotnull ( this . store . getvirtuoso ( ) )
[0]: org. junit. assert. assertequals ( java. util. optional. of ( mockintent ), outputintent )
[1]: org. junit. assert. assertequals ( 1, count )
[2]: org. junit. assert. assertequals ( 0, count )
[3]: org. junit. assert. assertequals ( 3, count )
[4]: org. junit. assert. assertequals ( rootexpected, rootactual )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( dada , testdata ) )
[0]: org. junit. assert. assertequals ( 1, ( ( int ) ( counter. get ( ) ) ) )
[1]: org. junit. assert. assertequals ( importmodule, importmodule )
[2]: org. junit. assert. assertequals ( java. lang. string. valueof ( importmodule ), importmodule )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( importmodule ), importmodule )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( importmodule ), importmodule )

************

************
tgt: org . junit . assert . asserttrue ( writer . isstopped ( ) )
[0]: org. junit. assert. assertequals ( null, importmodule )
[1]: org. junit. assert. assertequals ( 1, applicationsessioncookieconfig. getmaxage ( ) )
[2]: org. junit. assert. assertequals ( 1, appsessioncookieconfig. getmaxage ( ) )
[3]: org. junit. assert. assertequals ( 0, applicationsessioncookieconfig. getmaxage ( ) )
[4]: org. junit. assert. asserttrue ( applicationsessioncookieconfig. getmaxage ( ) )

************

************
tgt: org . junit . assert . assertnull ( value )
[0]: ) )
[1]: org. junit. assert. assertthat ( current, is ( file ) )
[2]: org. junit. assert. assertthat ( current, is ( file ( ) ) )
[3]: org. junit. assert. assertthat ( current, is ( true ) )
[4]: org. junit. assert. assertthat ( current, is ( path ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( r1 , r2 )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( unita. getimports ( ) )
[2]: org. junit. assert. assertnotnull ( unita )
[3]: org. junit. assert. assertequals ( null, unita. getimports ( ) )
[4]: org. junit. assert. assertequals ( 1, unita. getimports ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( com . microsoft . azure . management . appservice . samples . managelinuxwebappwithtrafficmanager . runsample ( azure ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expectedresults, actualresults )
[2]: org. junit. assert. assertequals ( expectedresults, result )
[3]: org. junit. assert. assertequals ( expectedresults, data )
[4]: org. junit. assert. assertequals ( expectedresults, exactresults )

************

************
tgt: org . junit . assert . assertnull ( capability )
[0]: org. junit. assert. assertequals ( expectedresults, actualresults, attributenames )
[1]: org. junit. assert. asserttrue ( newin. equals ( oldin ) )
[2]: org. junit. assert. asserttrue ( oldin. equals ( newin ) )
[3]: org. junit. assert. asserttrue ( org. apache. commons. lang. stringutils. equals ( newin ) )
[4]: org. junit. assert. asserttrue ( java. util. arrays. equals ( oldin. toarray ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , referencecounted . refcnt ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( job )
[2]: org. junit. assert. assertequals ( org. geotools. data. complex. dataaccessregistry. getinstance ( ), guinit. getinstance ( ) )
[3]: org. junit. assert. assertequals ( dataaccessregistry. onegistry, guotools. data. complex. dataaccessregistry. getinstance ( ) )
[4]: org. junit. assert. assertequals ( dataaccessregistry. theregistry, guotools. data. complex. dataaccessregistry. getinstance ( ) )

************

************
tgt: org . junit . assert . assertequals ( json , properjson )
[0]: org. junit. assert. assertequals ( org. geotools. data. complex. dataaccessregistry. getinstance ( ), guotools. data )
[1]: ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1000 ), runner. isrunning ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), runner. isrunning ( ) )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1000 ), runner. isrunning ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( de . rub . nds . tlsattacker . core . record . cipher . cryptohelper . keysetgenerator . generatekeyset ( context ) )
[0]: org. junit. assert. assertnotnull ( runner. isrunning ( ) )
[1]: org. junit. assert. assertnull ( runner. isrunning ( ) )
[2]: org. junit. assert. assertequals ( portletid, portletid. getuserid ( ) )
[3]: org. junit. assert. assertequals ( portletid, portletid )
[4]: org. junit. assert. assertequals ( portletid. getuserid ( ), portletid. getuserid ( ) )

************

************
tgt: org . junit . assert . assertequals ( expecetedtablename , builttablename )
[0]: org. junit. assert. assertequals ( portletid, portletid. getuserid ( ). get ( ) )
[1]: org. junit. assert. assertequals ( null, portletid. getuserid ( ) )
[2]: org. junit. assert. assertequals ( rs. stream ( ). count ( ), 10 )
[3]: org. junit. assert. assertequals ( rs. stream ( ). count ( ), 20 )
[4]: org. junit. assert. assertequals ( rs. stream ( ). count ( ), 1 )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( true ) )
[0]: org. junit. assert. assertequals ( rs. stream ( ). count ( ), 9 )
[1]: org. junit. assert. assertequals ( rs. stream ( ). count ( ), 0 )
[2]: org. junit. assert. assertequals ( 1, persons. size ( ) )
[3]: org. junit. assert. assertequals ( 0, persons. size ( ) )
[4]: org. junit. assert. assertnotnull ( record )

************

************
tgt: org . junit . assert . assertthat ( count ( ) , org . hamcrest . corematchers . is ( ( before + 1 ) ) )
[0]: org. junit. assert. assertnotnull ( record. get ( "test"" ) )
[1]: org. junit. assert. assertnotnull ( record. get ( "test0 ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, 1 )

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertequals ( 1, this. list. size ( ) )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( 1, size ( ) )
[4]: org. junit. assert. assertequals ( true, valid )

************

************
tgt: org . junit . assert . assertequals ( 1 , keys . size ( ) )
[0]: org. junit. assert. assertnotnull ( this. userservice. setobject ( ) )
[1]: org. junit. assert. assertnotnull ( this. userservice )
[2]: org. junit. assert. assertnotnull ( this. userservice, this. userservice )
[3]: org. junit. assert. assertnotnull ( all. userservice )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( huidigegemeente )
[0]: org. junit. assert. assertequals ( cr. tostring ( ), bc. tostring ( ) )
[1]: org. junit. assert. assertequals ( bc. tostring ( ), bc. tostring ( ) )
[2]: org. junit. assert. assertequals ( bug50351servlet. tostring ( ), bc. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( bc. tostring ( ) )
[4]: . tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( features . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertnotnull ( vxresource )
[1]: org. junit. assert. null, vxresource )
[2]: org. junit. assert.null ( vxresource )
[3]: null ) )
[4]: null )

************

************
tgt: org . junit . assert . assertequals ( record , parsedresponse )
[0]: org. junit. assert. assertequals ( 1, isgeo ( ). size ( ) )
[1]: org. junit. assert. assertequals ( org. locationtech. spatial4j. context. spatialcontextfactorytest. dscf. class, isgeo ( ). getclass ( ) )
[2]: org. junit. assert. assertequals ( java. lang. system. isgeo ( ), java. lang. system. isgeo ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), isgeo ( ) )
[4]: org. junit. assert. assertequals ( org. locationtech. spatial4j. context. spatialcontextfactorytest. dscf. class, isgeo ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . arrays . tostring ( filenames ) , 0 , filenames . length )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( results. size ( ) ) == 1 ) )
[2]: org. junit. assert. assertequals ( 1, results. size ( ) )
[3]: org. junit. assert. assertequals ( 0, results. size ( ) )
[4]: org. junit. assert. assertthat ( latestcheckpoint. get ( checkpoint ), org. hamcrest. matchers. contains ( checkpoints. get ( 1 ) ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . string . format ( "found<sp>more<sp>than<sp>one<sp>message<sp>type<sp>with<sp>code<sp>\"%s\"." , org . finra . herd . dao . message_type ) , e . getmessage ( ) )
[0]: org. junit. assert. assertthat ( latestcheckpoint. get ( null ), org. hamcrest. matchers. is ( checkpoint ) )
[1]: org. junit. assert. assertthat ( latestcheckpoint. get ( checkpoint ), org. hamcrest. matchers. is ( checkpoint ) )
[2]: org. junit. assert. assertthat ( latestcheckpoint. get ( checkpoint ), org. hamcrest. matchers. contains ( checkpoints. get ( 0 ) ) )
[3]: org. junit. assert. assertthat ( latestcheckpoint. get ( null ), org. hamcrest. matchers. contains ( checkpoints. get ( 1 ) ) )
[4]: org. junit. assert. asserttrue ( msg, msg. contains ( msg ) )

************

************
tgt: org . junit . assert . assertsame ( metadataproviderconditions . always_true , com . dremio . exec . planner . sql . handlers . commands . metadataproviderconditions . gettabletypepredicate ( java . util . collections . emptylist ( ) ) )
[0]: org. junit. assert. assertfalse ( msg, msg. contains ( msg ) )
[1]: org. junit. assert. assertequals ( msg, msg. contains ( msg ) )
[2]: org. junit. assert. asserttrue ( msg. contains ( msg ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, statustuples. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( p . getstddev ( ) ) > 1.0 ) )
[0]: org. junit. assert. assertequals ( 0, statustuples. size ( ) )
[1]: org. junit. assert. assertequals ( 3, statustuples. size ( ) )
[2]: org. junit. assert. assertequals ( 6, statustuples. size ( ) )
[3]: org. junit. assert. assertequals ( 5, statustuples. size ( ) )
[4]: org. junit. assert. assertarrayequals ( token, token )

************

************
tgt: org . junit . assert . assertthat ( orders , hasorderforipad )
[0]: org. junit. assert. assertnotnull ( token )
[1]: org. junit. assert. assertarrayequals ( token, tokens )
[2]: org. junit. assert. assertequals ( 1, token. length )
[3]: org. junit. assert. assertnull ( token )
[4]: org. junit. assert. assertthat ( parsed, org. hamcrest. matchers. is ( orig ) )

************

************
tgt: org . junit . assert . assertnotnull ( address )
[0]: org. junit. assert. assertequals ( 0, maps. size ( ) )
[1]: org. junit. assert. assertequals ( 1, maps. size ( ) )
[2]: org. junit. assert. assertequals ( 7, maps. size ( ) )
[3]: org. junit. assert. assertequals ( 9, maps. size ( ) )
[4]: org. junit. assert. assertequals ( 0, maps. size ( ) ) ;

************

************
tgt: org . junit . assert . assertthat ( tz . isdaylightsaving ( utc ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( true, inprogress )
[1]: org. junit. assert. assertnotnull ( date )
[2]: org. junit. assert. assertequals ( date, parser )
[3]: org. junit. assert. assertequals ( date, marshaller )
[4]: org. junit. assert. assertequals ( date, date )

************

************
tgt: org . junit . assert . asserttrue ( ctx . getresult ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( false, context. isresult ( ) )
[2]: org. junit. assert. null, mimetype )
[3]: null ), mimetype )
[4]: , mimetype )

************

************
tgt: org . junit . assert . assertequals ( expected , found )
[0]: null ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( erequest )
[3]: org. junit. assert. assertequals ( drequest, erequest )
[4]: org. junit. assert. assertequals ( dsrequest, erequest )

************

************
tgt: org . junit . assert . assertthat ( exist , is ( false ) )
[0]: org. junit. assert. assertequals ( disrequest, erequest )
[1]: org. junit. assert. assertequals ( dcrequest, erequest )
[2]: org. junit. assert. assertthat ( populatiemap. size ( ), org. hamcrest. matchers. is ( 1 ) )
[3]: org. junit. assert. assertthat ( populatiemap. size ( ), org. hamcrest. matchers. is ( 0 ) )
[4]: org. junit. assert. assertthat ( resultaat. size ( ), org. hamcrest. matchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertnull ( person . getbirthdatetime ( ) )
[0]: org. junit. assert. assertthat ( resultaat. size ( ), org. hamcrest. matchers. is ( 0 ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, summaries. size ( ) )
[3]: org. junit. assert. assertequals ( processdefid, processdefid )
[4]: org. junit. assert. assertequals ( processdefid, designprocessdefinition. getid ( ) )

************

************
tgt: org . junit . assert . assertthat ( restored . isnull ( ) , is ( true ) )
[0]: org. junit. assert. assertequals ( processdefid, processdef. getid ( ) )
[1]: org. junit. assert. assertequals ( cpuprocessdefinition. getid ( ), processdefid )
[2]: org. junit. assert. assertthat ( file. close ( ), org. hamcrest. corematchers. is ( true ) )
[3]: org. junit. assert. assertequals ( 0, groups. size ( ) )
[4]: org. junit. assert. assertequals ( 1, groups. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 7, groups. size ( ) )
[1]: org. junit. assert. assertequals ( 2, groups. size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( action, actualdescriptor )
[4]: org. junit. assert. assertnotnull ( actualdescriptor )

************

************
tgt: org . junit . assert . assertequals ( exceptionhandler , this . pool . getexceptionhandler ( ) )
[0]: org. junit. assert. assertequals ( descriptor, actualdescriptor )
[1]: org. junit. assert. assertequals ( operation, actualdescriptor )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, painter. getlineheightforanchory ( 1.0 ) )
[4]: org. junit. assert. assertequals ( 0, painter. getlineheightforanchory ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( value . keyset ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, painter. getlineheightforanchory ( 0.0 ) )
[1]: org. junit. assert. assertequals ( 0, painter. getlineheightforanchory ( 1000 ) )
[2]: org. junit. assert. assertequals ( 0, painter. getlineheightforanchory ( double. max ) )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( 1, confusionmatrix2. getcount ( actual, predicted ) )

************

************
tgt: org . junit . assert . assertequals ( "b" , result . get ( "a" ) )
[0]: org. junit. assert. assertequals ( 0, confusionmatrix2. getcount ( actual, predicted ) )
[1]: org. junit. assert. assertequals ( 1, getcount ( actual, predicted ) )
[2]: org. junit. assert. assertequals ( 1, confusionmatrix2. getcount ( actual, prediction ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( gadget. getcurrentview ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , ret_val )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), result )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), result )
[2]: org. junit. assert. assertequals ( names, result )
[3]: , result )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( stringserializer . deserializenativeobject ( stream , 7 ) , object )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertthat ( result. size ( ), is ( 1 ) )
[2]: org. junit. assert. assertthat ( result, is ( empty ( ) ) )
[3]: org. junit. assert. assertthat ( result. isempty ( ), is ( true ) )
[4]: org. junit. assert. assertequals ( 0, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( result . size ( ) , 1 )
[0]: org. junit. assert. assertequals ( c1. hashcode ( ), c2. hashcode ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. hashcode ( c1. hashcode ( ), c2. hashcode ( ) )
[2]: org. junit. assert. assertequals ( 1, c1. hashcode ( ) )
[3]: org. junit. assert. assertequals ( 0, c1. hashcode ( ) )
[4]: org. junit. assert. assertequals ( c1. hashcode ( ), c2. hashcode ( ). hashcode ( ) )

************

************
tgt: org . junit . assert . assertequals ( r1 , r2 )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( result, null )
[3]: org. junit. assert. assertnotnull ( result )
[4]: , result )

************

************
tgt: org . junit . assert . assertequals ( "value<sp>{test" , result )
[0]: org. junit. assert. asserttrue ( manager. hasrepositoryconfig ( systemrepository. id ) )
[1]: org. junit. assert. assertfalse ( manager. hasrepositoryconfig ( systemrepository. id ) )
[2]: org. junit. assert. asserttrue ( config. hasrepositoryconfig ( systemrepository. id ) )
[3]: org. junit. assert. assertnotnull ( manager. hasrepositoryconfig ( systemrepository. id ) )
[4]: org. junit. assert. asserttrue ( manager. hasrepositoryconfig ( systemrepository. id ) ) ;

************

************
tgt: org . junit . assert . assertequals ( ( ( java . lang . integer ) ( 0 ) ) , repository . getaggregatereportstoken ( ) )
[0]: org. junit. assert. assertequals ( name, managers. getedt ( name ) )
[1]: org. junit. assert. assertnotnull ( managers. getedt ( name ) )
[2]: org. junit. assert. assertnull ( managers. getedt ( name ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( actual , expected )
[0]: org. junit. assert. assertequals ( true, active )
[1]: org. junit. assert. assertequals ( false, active )
[2]: org. junit. assert. assertequals ( 1, active )
[3]: org. junit. assert. assertnotnull ( roundrobin )
[4]: org. junit. assert. assertnotnull ( roundrobin. name )

************

************
tgt: org . junit . assert . assertfalse ( initresult )
[0]: org. junit. assert. assertnotnull ( roundrobin, pool )
[1]: org. junit. assert. assertnull ( roundrobin )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, 1 )
[4]: org. junit. assert. assertnotnull ( s )

************

************
tgt: org . junit . assert . assertnull ( missingcalendarresource )
[0]: org. junit. assert. assertnotnull ( collection )
[1]: org. junit. assert. assertnotnull ( context )
[2]: org. junit. assert. assertnotnull ( s. collection )
[3]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( 1, sources. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( err )
[0]: org. junit. assert. assertequals ( 0, sources. size ( ) )
[1]: org. junit. assert. assertequals ( 0, left. compareto ( right ) )
[2]: org. junit. assert. assertequals ( 1, left. compareto ( right ) )
[3]: org. junit. assert. asserttrue ( ( ( left. compareto ( right ) ) > 0 ) )
[4]: org. junit. assert. asserttrue ( ( ( left. compareto ( right ) ) == 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( envvars . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertequals ( ( - 1 ), left. compareto ( right ) )
[1]: org. junit. assert. assertequals ( 1, berichtentiteits. size ( ) )
[2]: org. junit. assert. assertequals ( 0, berichtentiteits. size ( ) )
[3]: org. junit. assert. assertequals ( persoonbericht, berichtentiteits )
[4]: org. junit. assert. assertequals ( 2, berichtentiteits. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "any<sp>funny<sp>text<sp>goes<sp>here<sp>" , normalizer . normalize ( s ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, datetime. getminimum ( ) )
[2]: org. junit. assert. assertequals ( 0, datetime. getminimum ( ) )
[3]: org. junit. assert. assertequals ( 1l, datetime. getminimum ( ) )
[4]: org. junit. assert. assertequals ( 3, datetime. getminimum ( ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . collections . singletonlist ( author3 ) , submissionset . getauthors ( ) )
[0]: org. junit. assert. assertequals ( 5, datetime. getminimum ( ) )
[1]: org. junit. assert. assertequals ( prev, min )
[2]: org. junit. assert. asserttrue ( ( min == prev ) )
[3]: org. junit. assert. assertsame ( prev, min )
[4]: org. junit. assert. assertnull ( min )

************

************
tgt: org . junit . assert . assertequals ( false , org . digidoc4j . impl . bdoc . validationtests . prod_configuration . isasn1unsafeintegerallowed ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( com. facebook. buck. util. integer. class, basetype )
[2]: org. junit. assert. assertequals ( com. facebook. buck. util. long. class, basetype )
[3]: org. junit. assert. assertequals ( com. facebook. buck. util. string. class, basetype )
[4]: org. junit. assert. assertequals ( com. facebook. buck. util. int. class, basetype )

************

************
tgt: org . junit . assert . asserttrue ( containsall )
[0]: org. junit. assert. assertnotnull ( basetype )
[1]: org. junit. assert. assertequals ( earliestoffset, offsetfromconfig )
[2]: org. junit. assert. assertequals ( ( - 1 ), offsetfromconfig )
[3]: org. junit. assert. assertequals ( 0, offsetfromconfig )
[4]: org. junit. assert. assertequals ( offsetfromconfig, earliestoffset )

************

************
tgt: org . junit . assert . assertnotnull ( incompletekey )
[0]: org. junit. assert. assertequals ( ( - 1 ), earliestoffset )
[1]: org. junit. assert. assertequals ( org. opencastproject. mediapackage. redirectingmediapackageserializertest. final_destination_uri_prefix, encodedelementuri. tostring ( ) )
[2]: org. junit. assert. assertequals ( org. opencastproject. mediapackage. redirectingmediapackageserializertest. final_destination_uri_prefix, encodedelementuri )
[3]: org. junit. assert. assertequals ( org. opencastproject. mediapackage. redirectingmediapackageserializertest. final_destination_uri, encodedelementuri )
[4]: org. junit. assert. assertequals ( org. opencastproject. mediapackage. redirectingmediapackageserializertest. final_destination_uri, encodedelementuri. tostring ( ) )

************

************
tgt: org . junit . assert . assertnull ( servicename )
[0]: org. junit. assert. assertequals ( org. opencastproject. flapackage. redirectingmediapackageserializertest. final_destination_uri_prefix, encodedelementuri. tostring ( ) )
[1]: org. junit. assert. assertequals ( 1, meldingen. size ( ) )
[2]: org. junit. assert. assertequals ( new java. lang. double ( 1.0 ), e. evaluate ( ) )
[3]: org. junit. assert. assertequals ( new java. lang. double ( 1 ), e. evaluate ( ) )
[4]: org. junit. assert. assertequals ( new java. math. bigdecimal ( ""1"" ), e. evaluate ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( new java. math. bigdecimal ( 1.0 ), e. evaluate ( ) )
[1]: public final double evaluate ( ) { }
[2]: org. junit. assert. assertnotnull ( document )
[3]: org. junit. assert. assertequals ( key, document )
[4]: org. junit. assert. assertnull ( document )

************

************
tgt: org . junit . assert . assertequals ( "a" 3 , contents ( urlconnection ) )
[0]: org. junit. assert. assertequals ( null, document )
[1]: org. junit. assert. assertnotnull ( doc )
[2]: org. junit. assert. assertequals ( 0, noofsolutions )
[3]: org. junit. assert. assertequals ( 1, noofsolutions )
[4]: org. junit. assert. assertequals ( 5, noofsolutions )

************

************
tgt: org . junit . assert . assertequals ( 0 , dbfields . size ( ) )
[0]: org. junit. assert. assertequals ( noofsolutions, xsize )
[1]: org. junit. assert. assertequals ( noofsolutions, xsize * 2 )
[2]: org. junit. assert. assertnotnull ( base64result )
[3]: org. junit. assert. assertequals ( """", base64result )
[4]: org. junit. assert. assertequals ( """", base64result )

************

************
tgt: org . junit . assert . assertequals ( data , new java . lang . string ( out . tobytearray ( ) ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 0, garbagecontainer. isfirstid ( id ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), isfirstid ( id ) )
[4]: org. junit. assert. assertequals ( 0, container. isfirstid ( id ) )

************

************
tgt: org . junit . assert . assertequals ( expectederror , errors . tostring ( ) )
[0]: org. junit. assert. assertequals ( 0, garbagecontainer. isfirstid ( id ). size ( ) )
[1]: org. junit. assert. assertnull ( garbagecontainer. isfirstid ( id ) )
[2]: org. junit. assert. assertthat ( result, is ( false ) )
[3]: org. junit. assert. assertthat ( result, is ( true ) )
[4]: org. junit. assert. assertthat ( result, not ( true ) )

************

************
tgt: org . junit . assert . assertequals ( expectednewfeatures , testdatamap . getfeatures ( ) )
[0]: org. junit. assert. assertthat ( result, me )
[1]: org. junit. assert. assertthat ( result )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( 0, result. size ( ) )
[4]: org. junit. assert. assertequals ( 3, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , shpfiles . numberoflocks ( ) )
[0]: org. junit. assert. assertequals ( 1, result. size ( ), 0 )
[1]: org. junit. assert. assertequals ( 1, results. size ( ) )
[2]: org. junit. assert. assertfalse ( rule. apply ( new java. util. arraylist ( reportfields ) ) )
[3]: org. junit. assert. assertfalse ( rule. apply ( new java. lang. object ( reportfields ) ) )
[4]: org. junit. assert. assertfalse ( rule. apply ( new java. util. hashmap ( reportfields ) ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , res . size ( ) )
[0]: org. junit. assert. assertfalse ( rule. apply ( new java. lang. string ( reportfields ) ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, request. size ( ) )
[3]: org. junit. assert. assertequals ( 0, request. sizes ( ) )
[4]: org. junit. assert. assertequals ( 1, request. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( returned , assertions )
[0]: org. junit. assert. assertequals ( 0, requests. size ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( collection )
[3]: org. junit. assert. assertnotnull ( repository )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( testjsonable , readjsonable )
[0]: )
[1]: 
[2]: org. junit. assert. assertnull ( putlist )
[3]: org. junit. assert. assertnull ( putlist. size ( ) )
[4]: org. junit. assert. assertfalse ( store. isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( check == 0.0 ) )
[0]: org. junit. assert. assertnull ( store )
[1]: org. junit. assert. assertfalse ( putlist. isempty ( ) )
[2]: org. junit. assert. assertequals ( flowstate. vserver_starting, newstate )
[3]: org. junit. assert. assertequals ( flowstate. vserver_started, newstate )
[4]: org. junit. assert. assertequals ( flowstate. finished, newstate )

************

************
tgt: org . junit . assert . assertfalse ( source . issplittable ( ) )
[0]: org. junit. assert. assertequals ( flowstate. vsdisk_started, newstate )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. asserttrue ( result )
[3]: org. junit. assert. assertfalse ( result )
[4]: org. junit. assert. assertequals ( false, result )

************

************
tgt: org . junit . assert . assertequals ( 200 , subject . getstatuscode ( ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( expectedfilecontents [ i ], csvlineslist. get ( i ) )
[2]: org. junit. assert. assertequals ( expectedfilecontents [ i ], csvlineslist. get ( ) )
[3]: org. junit. assert. assertequals ( expectedfilecontents [ i ], csvlineslist )
[4]: org. junit. assert. assertequals ( expectedfilecontents [ i ], csvlineslist [ i ] )

************

************
tgt: org . junit . assert . assertnull ( dss . parsecookieid ( ) )
[0]: org. junit. assert. assertequals ( expectedfilecontents [ i ], csvlineslist. iterator ( ) [ i ] )
[1]: org. junit. assert. assertequals ( n, response. size ( ) )
[2]: org. junit. assert. assertequals ( 1, response. size ( ) )
[3]: org. junit. assert. assertnotnull ( response )
[4]: org. junit. assert. assertequals ( n, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , grid . getyposition ( ) )
[0]: org. junit. assert. assertnotnull ( response. get ( 0 ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 4, 5, 6 ), list )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 4, 6 ), list )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4, 6 ), list )
[4]: , list )

************

************
tgt: org . junit . assert . asserttrue ( path . evaluate ( rewrite , context ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1024, cn. codepub. algorithms. commons. conversionofnumbersystems. conversion ( 1024, 16 ) )
[2]: org. junit. assert. assertnotnull ( cn. codepub. algorithms. commons. conversionofnumbersystems. conversion ( 1024, 16 ) )
[3]: org. junit. assert. assertequals ( 1, cn. codepub. algorithms. commons. conversionofnumbersystems. conversion ( 1024, 16 ) )
[4]: org. junit. assert. assertequals ( 1, cn. codepub. algorithms. commons. conversionofnumbersystems. conversion ( 1024, 16 ). length )

************

************
tgt: org . junit . assert . assertequals ( ( ( testdata . length ) - 2 ) , cfis . available ( ) )
[0]: org. junit. assert. assertequals ( 0, cn. codepub. algorithms. commons. conversionofnumbersystems. conversion ( 1024, 16 ). length )
[1]: org. junit. assert. assertnotnull ( condition. evaluate ( noderef ) )
[2]: org. junit. assert. assertequals ( 0, condition. evaluate ( noderef ) )
[3]: org. junit. assert. assertequals ( null, condition. evaluate ( noderef ) )
[4]: org. junit. assert. assertequals ( 1, condition. evaluate ( noderef ) )

************

************
tgt: org . junit . assert . assertfalse ( java . util . arrays . equals ( frame1 , frame2 ) )
[0]: org. junit. assert. assertnull ( condition. evaluate ( noderef ) )
[1]: org. junit. assert. assertequals ( 1, param. getvalues ( ). length )
[2]: org. junit. assert. assertequals ( 0, param. getvalues ( ). length )
[3]: org. junit. assert. assertequals ( 1, param. getvalues ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 2, param. getvalues ( ). length )

************

************
tgt: org . junit . assert . assertthat ( response . getstatus ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, list. getvalues ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, three. getvalues ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( list ), three )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( list ), three, list )

************

************
tgt: org . junit . assert . assertequals ( marketplaceid , urlcaptor . getvalue ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( list ), three. getvalues )
[1]: org. junit. assert. assertequals ( 0, resultaat. size ( ) )
[2]: org. junit. assert. assertequals ( 0, org. bzk. brp. model. hisvolledig. penalties. size ( ) )
[3]: org. junit. assert. assertequals ( 0, ident_12. size ( ) )
[4]: org. junit. assert. assertequals ( 0, ident_12aat. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( pos . noun , p . gettargetpos ( ) )
[0]: org. junit. assert. assertequals ( 0, ident_11. size ( ) )
[1]: org. junit. assert. assertequals ( 1, model. getorganizations ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, lcc. getorganizations ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, model. getorganizations ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, lcc. getorganizations ( ). size ( ), 1 )

************

************
tgt: org . junit . assert . assertequals ( 1 , whitelist . size ( ) )
[0]: org. junit. assert. assertequals ( 1, lcc. getorganizations ( ). size ( ), 0 )
[1]: org. junit. assert. assertequals ( 1, entities. size ( ) )
[2]: org. junit. assert. assertequals ( 0, entities. size ( ) )
[3]: org. junit. assert. assertequals ( query, entities. size ( ) )
[4]: org. junit. assert. assertequals ( 5, entities. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( facebook . pokes ( ) , org . hamcrest . corematchers . instanceof ( facebook4j . pokemethods . class ) )
[0]: org. junit. assert. assertequals ( results. size ( ), entities. length )
[1]: org. junit. assert. assertfalse ( _plus. startswith ( _location ) )
[2]: org. junit. assert. asserttrue ( _plus. startswith ( _location ) )
[3]: org. junit. assert. assertfalse ( _plus. startswith ( _location_1 ) )
[4]: , _plus )

************

************
tgt: org . junit . assert . assertthat ( org . batfish . common . util . batfishobjectmapper . clone ( ifexpr , org . batfish . datamodel . packet_policy . if . class ) , org . hamcrest . matchers . equalto ( ifexpr ) )
[0]: ) )
[1]: org. junit. assert. assertfalse ( handles ( null ) )
[2]: org. junit. assert. assertfalse ( handles ( org. drools. workbench. models. guided. dtable. shared. model. conditioncol52 ) )
[3]: org. junit. assert. assertfalse ( handles ( java. util. collections. emptylist ( ) ) )
[4]: org. junit. assert. assertfalse ( handles ( new org. drools. workbench. models. guided. dtable. shared. model. conditioncol52 ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( "\n" + sqltext ) + "\n" ) , expected , testutils . formattedresult . resultfactory . tostringunsorted ( rs ) )
[0]: org. junit. assert. assertfalse ( org. drools. workbench. models. guided. dtable. shared. model. conditioncol52. handles ( null ) )
[1]: org. junit. assert. assertthat ( receivedstatus, org. hamcrest. corematchers. is ( forbidden ) )
[2]: org. junit. assert. assertequals ( 0, locatorsforrollup. size ( ) )
[3]: org. junit. assert. assertequals ( 1, locatorsforrollup. size ( ) )
[4]: org. junit. assert. assertequals ( zero, locatorsforrollup. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( validations . isempty ( ) )
[0]: org. junit. assert. assertequals ( 3, locatorsforrollup. size ( ) )
[1]: org. junit. assert. assertequals ( 2, locatorsforrollup. size ( ) )
[2]: org. junit. assert. assertthat ( accept ( state ), org. hamcrest. core. is. is ( false ) )
[3]: org. junit. assert. assertfalse ( handler. accept ( state ) )
[4]: org. junit. assert. assertfalse ( parser. accept ( state ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . system . getproperty ( "user.name" ) , getstdoutcontents ( ) )
[0]: org. junit. assert. assertthat ( accept ( state ), org. hamcrest. corematchers. is ( false ) )
[1]: ) )
[2]: org. junit. assert. assertthat ( org. apache. maven. shared. utils. io. ioutil. tostring ( probe, 0 ), org. hamcrest. corematchers. is ( probe ) )
[3]: org. junit. assert. assertthat ( org. apache. maven. shared. utils. io. ioutil. tostring ( probe, 1 ), org. hamcrest. corematchers. is ( probe ) )
[4]: org. junit. assert. assertthat ( org. apache. maven. shared. utils. io. ioutil. tostring ( probe, 0 ). getbytes ( ), org. hamcrest. corematchers. is ( probe ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . collections . singletonlist ( 9l ) , result )
[0]: org. junit. assert. assertthat ( org. apache. maven. shared. utils. io. ioutil. tostring ( probe, 0 ). length ( ), org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertthat ( org. apache. maven. shared. utils. io. ioutil. tostring ( probe, ), org. hamcrest. corematchers. is ( probe ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), buildspellchecksuggestion ( null ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), buildspellchecksuggestion ( null ) )
[4]: org. junit. assert. assertequals ( 1, buildspellchecksuggestion ( null ) )

************

************
tgt: org . junit . assert . assertequals ( r1 , r2 )
[0]: org. junit. assert. assertequals ( dataset, buildspellchecksuggestion ( null ) )
[1]: ) )
[2]: org. junit. assert. assertthat ( english. with ( date ), org. hamcrest. corematchers. is ( date ) )
[3]: org. junit. assert. assertthat ( english. with ( date ), org. hamcrest. corematchers. is ( chinese ) )
[4]: org. junit. assert. assertthat ( english. with ( date ), is ( date ) )

************

************
tgt: org . junit . assert . assertequals ( reserved [ ( i ++ ) ] , block . isreserved ( ) )
[0]: org. junit. assert. assertthat ( english, org. hamcrest. corematchers. is ( chinese ) )
[1]: org. junit. assert. assertthat ( english. with ( date ), is ( chinese ) )
[2]: org. junit. assert. assertequals ( null, res )
[3]: org. junit. assert. assertequals ( d. gettime ( ), res. gettime ( ) )
[4]: org. junit. assert. assertequals ( d. tostring ( ), res. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( uaa . runtests ( false , false ) )
[0]: org. junit. assert. assertequals ( d. s, res. s )
[1]: org. junit. assert. assertequals ( d. s, res. name )
[2]: org. junit. assert. assertequals ( 1, getentities ( com. artemis. managers. groupmanagertest. groupie ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, getentities ( com. artemis. managers. groupmanagertest. groupie ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, getentities ( com. artemis. managers. groupmanagertest. groupie, entity ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . couchbase . client . core . config . loader . carrierloadertest . environment . bootstrapcarrierdirectport ( ) , loader . port ( ) )
[0]: org. junit. assert. assertequals ( 1, getentities ( org. artemis. managers. groupmanagertest. groupie ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, getentities ( com. artemis. managers. groupmanagertest. groupie, entity ). size ( )
[2]: org. junit. assert. assertequals ( testclass1, testclass2 )
[3]: org. junit. assert. assertequals ( testclass1. getclass ( ), testclass2. getclass ( ) )
[4]: org. junit. assert. assertequals ( testclass1. tostring ( ), testclass2. tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . equalto ( org . codice . ddf . configuration . migration . accessutilstest . result ) )
[0]: org. junit. assert. assertthat ( testclass1, org. hamcrest. matchers. is ( testclass2 ) )
[1]: org. junit. assert. assertthat ( testclass1, is ( testclass2 ) )
[2]: org. junit. assert. assertequals ( result. fail, name. apply ( item, 0 ) )
[3]: org. junit. assert. assertequals ( result. fail, s. apply ( item, 0 ) )
[4]: org. junit. assert. assertequals ( result. fail, type. apply ( item, 0 ) )

************

************
tgt: org . junit . assert . assertnotnull ( org . openhealthtools . mdht . uml . cda . pilot . operations . tuberculosisfollowupprogressnoteoperations . gettbresultssection ( null ) )
[0]: org. junit. assert. assertequals ( result. fail, name. apply ( item, 1 ) )
[1]: type ) )
[2]: org. junit. assert. assertequals ( 1, items. size ( ) )
[3]: org. junit. assert. assertequals ( 0, items. size ( ) )
[4]: org. junit. assert. assertequals ( 1, objects. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( user . equals ( userx ) )
[0]: org. junit. assert. assertequals ( 1, count. size ( ) )
[1]: org. junit. assert. assertequals ( 1, item. size ( ) )
[2]: org. junit. assert. assertequals ( org. eclipse. lyo. oslc4j. core. model. linktest. label_b, linkb. hashcode ( ) )
[3]: org. junit. assert. assertequals ( 1, linka. hashcode ( ) )
[4]: org. junit. assert. assertequals ( 0, linka. hashcode ( ) )

************

************
tgt: org . junit . assert . assertfalse ( popupcontentc . isvisible ( ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( linka. hashcode ( ) ), linkb. hashcode ( ) )
[1]: org. junit. assert. assertequals ( org. eclipse. lyo. oslc4j. core. model. linktest. label_a, linkb. hashcode ( ) )
[2]: org. junit. assert. assertequals ( 1, execute. size ( ) )
[3]: org. junit. assert. assertequals ( 0, execute. size ( ) )
[4]: org. junit. assert. assertequals ( 1, execute. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , c . next ( ) . get ( ) )
[0]: org. junit. assert. assertequals ( 1, execute. hasnext ( ) )
[1]: org. junit. assert. assertequals ( 1, execute. count ( ) )
[2]: org. junit. assert. assertnotnull ( menu. gettext ( ) )
[3]: org. junit. assert. assertnull ( menu. gettext ( ) )
[4]: org. junit. assert. assertequals ( 1, menu. gettext ( ). length )

************

************
tgt: org . junit . assert . assertequals ( "my-silly-filename.pem" , result )
[0]: org. junit. assert. assertequals ( 1, menu. gettext ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( results. hasresults ( ) )
[3]: org. junit. assert. assertnotnull ( brpbericht )
[4]: org. junit. assert. assertequals ( null, brpbericht )

************

************
tgt: org . junit . assert . assertequals ( projectprivileges . size ( ) , 1 )
[0]: org. junit. assert. assertnull ( brpbericht )
[1]: org. junit. assert. asserttrue ( ( brpbericht == null ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( address, book. getname ( ) )
[4]: org. junit. assert. assertnotnull ( book. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , preparedstatement . executebatch ( ) . length )
[0]: org. junit. assert. assertequals ( name, book. getname ( ) )
[1]: org. junit. assert. assertequals ( null, book. getname ( ) )
[2]: org. junit. assert. assertequals ( string, book. getname ( ) )
[3]: org. junit. assert. asserttrue ( isotest. equals ( g1 ) )
[4]: org. junit. assert. asserttrue ( isotest. areisomorphic ( g1 ) )

************

************
tgt: org . junit . assert . assertequals ( message , messagerecieved )
[0]: org. junit. assert. asserttrue ( isotest. isempty ( ) )
[1]: org. junit. assert. asserttrue ( isotest. isomorphic ( g1 ) )
[2]: org. junit. assert. asserttrue ( contains )
[3]: org. junit. assert. assertnull ( resultantprofile. getsid ( ) )
[4]: org. junit. assert. assertnull ( resultantprofile )

************

************
tgt: org . junit . assert . assertnotnull ( rs )
[0]: org. junit. assert. assertequals ( expectedprofile, resultantprofile )
[1]: org. junit. assert. assertequals ( expectedprofile )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( cluster. getname ( ) )
[4]: org. junit. assert. assertequals ( name, cluster. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( "ftp://www.oracle.com" , org . netbeans . modules . web . clientproject . api . network . ui . networkerrorpanel . decoraterequest ( request ) )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( ), cluster. getname ( ) )
[1]: org. junit. assert. assertequals ( null, cluster. getname ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( target. dellink ( link. getid ( ) ) )
[4]: org. junit. assert. assertnull ( target. dellink ( link. getid ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , statecontext . getdata ( ) )
[0]: org. junit. assert. assertnotnull ( target. dellink ( link ) )
[1]: org. junit. assert. assertnull ( target. dellink ( link. tostring ( ) ) )
[2]: org. junit. assert. assertnull ( target. dellink ( link. getid ( ) ). get ( ) )
[3]: org. junit. assert. assertnotnull ( connection. getclientname ( ) )
[4]: org. junit. assert. assertnotnull ( connection. getclientname ( ). getid ( ) )

************

************
tgt: org . junit . assert . asserttrue ( matchedsuffix . get ( ) )
[0]: org. junit. assert. assertnotnull ( connection. getclientname ( ). tostring ( ) )
[1]: org. junit. assert. assertnotnull ( connection )
[2]: ) )
[3]: org. junit. assert. assertequals ( sizebefore, dico. size ( ) )
[4]: org. junit. assert. assertthat ( createdworkers. size ( ), org. hamcrest. matchers. equalto ( numconcurrentconsumers ) )

************

************
tgt: org . junit . assert . assertthat ( change . changesize ( ) , org . hamcrest . corematchers . equalto ( 2 ) )
[0]: org. junit. assert. assertequals ( newcount, oricount )
[1]: org. junit. assert. assertequals ( newcount, ( oricount + 1 ) )
[2]: org. junit. assert. assertequals ( ( oricount + 1 ), newcount )
[3]: org. junit. assert. assertequals ( newcount, toicount )
[4]: org. junit. assert. assertequals ( newcount, ( oricount + 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( java . lang . double . compare ( a [ i ] , a [ ( i + 1 ) ] ) ) <= 0 ) )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: org. junit. assert. assertequals ( null, e )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( false , b )
[0]: org. junit. assert. assertequals ( 1, taskanswer. size ( ) )
[1]: org. junit. assert. assertnotnull ( taskanswer )
[2]: org. junit. assert. assertequals ( 0, taskanswer. size ( ) )
[3]: org. junit. assert. assertequals ( 1, tasksanswer. size ( ) )
[4]: org. junit. assert. assertequals ( 1, taskanswer )

************

************
tgt: org . junit . assert . assertequals ( 0 , numresults )
[0]: org. junit. assert. assertequals ( true, parser. validatesfullobject ( ) )
[1]: org. junit. assert. assertequals ( true, validator. validatesfullobject ( ) )
[2]: org. junit. assert. assertequals ( true, msg. validatesfullobject ( ) )
[3]: org. junit. assert. assertequals ( true, input. validatesfullobject ( ) )
[4]: org. junit. assert. assertfalse ( parser. validatesfullobject ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , req . getop ( ) )
[0]: org. junit. assert. assertnotnull ( properties. getrepositorylocation ( ) )
[1]: org. junit. assert. assertequals ( 1, properties. getrepositorylocation ( ) )
[2]: org. junit. assert. assertequals ( 0, properties. getrepositorylocation ( ) )
[3]: org. junit. assert. assertequals ( 5, properties. getrepositorylocation ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, hikariconfig3. getidletimeout ( ) )
[1]: org. junit. assert. assertequals ( 1, hikariconfig. getidletimeout ( ) )
[2]: org. junit. assert. assertequals ( 1, hikariconfig use. getidletimeout ( ) )
[3]: org. junit. assert. assertequals ( 1, hikariconfig ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, hikariconfig ( ) )

************

************
tgt: org . junit . assert . assertfalse ( session3 . propertyexists ( ( ( org . apache . jackrabbit . oak . jcr . repositorytest . test_path ) + "/newproperty" ) ) )
[0]: org. junit. assert. assertequals ( expecting )
[1]: java. util. arrays. aslist ( expecting ) )
[2]: org. junit. assertequals ( expecting, result )
[3]: assertequals assertequals expecting, result )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( 1, a. getlastchild ( ) )
[1]: org. junit. assert. assertequals ( 1, a. getlastchild ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, e. getlastchild ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, the. getlastchild ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, a. getlastchild ( ). length )

************

************
tgt: org . junit . assert . assertequals ( "" , fontdata . getlocale ( ) )
[0]: org. junit. assert. assertnotnull ( classifier )
[1]: org. junit. assert. assertequals ( 1, classifier. getid ( ) )
[2]: org. junit. assert. assertequals ( 1, classifier. size ( ) )
[3]: org. junit. assert. assertequals ( 1, classifier. getexitcode ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( concept . getname ( localetosearch , true ) )
[0]: org. junit. assert. assertequals ( flowpair, foundflow. get ( ) )
[1]: org. junit. assert. assertequals ( flowstatus. up, foundflow. get ( ) )
[2]: org. junit. assert. assertnull ( foundflow. get ( ) )
[3]: org. junit. assert. assertnotnull ( foundflow. get ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( ( ! enabled ) , gwc . getconfig ( ) . iswmscenabled ( ) )
[0]: org. junit. assert. assertnotnull ( logger. getname ( ) )
[1]: org. junit. assert. assertequals ( null, logger. getname ( ) )
[2]: org. junit. assert. assertequals ( name, logger. getname ( ) )
[3]: org. junit. assert. assertequals ( string_1, logger. getname ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 2 ), m. take ( 1 ) )
[1]: org. junit. assert. assertequals ( new java. lang. integer ( 2 ), m. take ( 1 ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 2 ), m. take ( 1 ) )
[3]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 1 ), m. take ( 1 ) )
[4]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), m. take ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( res . next ( ) )
[0]: org. junit. assert. assertequals ( 1, token1. size ( ) )
[1]: org. junit. assert. assertequals ( 0, token1. size ( ) )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( 0, result. size ( ) )
[4]: org. junit. assert. assertequals ( 0, tokens. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , results . size ( ) )
[0]: org. junit. assert. assertequals ( null, node. getroot ( ) )
[1]: org. junit. assert. assertequals ( 1, node. getroot ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( node. getroot ( ) )
[3]: org. junit. assert. assertequals ( 1, node. getroot ( ) )
[4]: org. junit. assert. assertequals ( 1, node. getroot ( ). getid ( ) )

************

************
tgt: org . junit . assert . asserttrue ( success )
[0]: org. junit. assert. assertfalse ( matches ( value, glob ) )
[1]: org. junit. assert. assertfalse ( pattern. matches ( value, glob ) )
[2]: org. junit. assert. assertfalse ( match ( value, glob ) )
[3]: org. junit. assert. assertthat ( ra, org. hamcrest. matchers. equalto ( ra ) )
[4]: org. junit. assert. assertthat ( ra, org. hamcrest. matchers. contains ( reason. withdraw ) )

************

************
tgt: org . junit . assert . assertequals ( exception , e )
[0]: org. junit. assert. assertthat ( ra, org. hamcrest. matchers. contains ( reason. withdraw, ra ) )
[1]: org. junit. assert. assertthat ( ra )
[2]: ) )
[3]: org. junit. assert. assertequals ( 2, messages. size ( ) )
[4]: org. junit. assert. assertequals ( 1, messages. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "byte_buffer" , new java . lang . string ( content ) )
[0]: org. junit. assert. assertequals ( 0, messages. size ( ) )
[1]: org. junit. assert. assertequals ( expected, messages )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, markerblockingjob. isended ( ) )
[4]: org. junit. assert. assertequals ( 0, markerblockingjob. isended ( ) )

************

************
tgt: org . junit . assert . assertequals ( "title" , adminpage . getscreentitle ( "screen" ) )
[0]: org. junit. assert. assertfalse ( markerblockingjob. isended ( ) )
[1]: org. junit. assert. assertequals ( measurand, sampledvalue. getmeasurand ( ) )
[2]: org. junit. assert. assertnotnull ( sampledvalue. getmeasurand ( ) )
[3]: org. junit. assert. assertnull ( sampledvalue. getmeasurand ( ) )
[4]: org. junit. assert. assertequals ( measurand, sampledvalues. getmeasurand ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( measurand )
[1]: org. junit. assert. assertnotnull ( collection )
[2]: org. junit. assert. assertnotnull ( queue )
[3]: org. junit. assert. assertnotnull ( context )
[4]: org. junit. assert. assertnotnull ( s )

************

************
tgt: org . junit . assert . assertequals ( issues . tostring ( ) , 0 , issues . size ( ) )
[0]: type ) { } }
[1]: org. junit. assert. assertequals ( path1, path2. getcommonancestor ( common ) )
[2]: org. junit. assert. assertequals ( path1, s. getcommonancestor ( common ) )
[3]: org. junit. assert. assertequals ( path1, container. getcommonancestor ( common ) )
[4]: org. junit. assert. assertequals ( path1, this. getcommonancestor ( common ) )

************

************
tgt: org . junit . assert . assertfalse ( throttled )
[0]: org. junit. assert. assertequals ( path1, path2. getcommonancestor ( common ). getid ( ) )
[1]: org. junit. assert. assertequals ( true, relevant )
[2]: org. junit. assert. asserttrue ( relevant )
[3]: org. junit. assert. assertnotnull ( relevant )
[4]: org. junit. assert. assertthat ( relevant )

************

************
tgt: org . junit . assert . assertequals ( 0 , gm . getpdfurl ( ) . size ( ) )
[0]: org. junit. assert. assertthat ( relevant, code )
[1]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( org. hamcrest. corematchers. equalto ( expected ) ) )
[2]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( org. hamcrest. matchers. equalto ( expected ) ) )
[3]: org. junit. assert. assertthat ( actual, is ( org. hamcrest. corematchers. equalto ( expected ) ) )
[4]: org. junit. assert. assertthat ( actual, org. hamcrest. corematchers. is ( expected ) )

************

************
tgt: org . junit . assert . assertthat ( command . accept ( state ) , org . hamcrest . core . is . is ( false ) )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertequals ( buf. tostring ( ), expected )
[2]: org. junit. assert. assertequals ( buf. tostring ( ), """" )
[3]: org. junit. assert. assertequals ( buf. tostring ( ), dta )
[4]: . tostring ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: output ( ) )
[1]: org. junit. assert. asserttrue ( tps. contains ( expectedpartition ) )
[2]: org. junit. assert. assertthat ( tps, org. hamcrest. core. is. contains ( expectedpartition ) )
[3]: org. junit. assert. assertthat ( tps, org. hamcrest. core. is. is ( expectedpartition ) )
[4]: org. junit. assert. assertfalse ( tps. contains ( expectedpartition ) )

************

************
tgt: org . junit . assert . asserttrue ( combo . getlistvisible ( ) )
[0]: org. junit. assert. asserttrue ( tps. contains ( expectedpartition ) )
[1]: org. junit. assert. assertequals ( 1, 1 )
[2]: org. junit. assert. assertnotnull ( queue )
[3]: org. junit. assert. assertnotnull ( collection )
[4]: org. junit. assert. assertnotnull ( s )

************

************
tgt: org . junit . assert . assertequals ( url , this . script . geturl ( ) )
[0]: org. junit. assert. assertnotnull ( context )
[1]: org. junit. assert. assertequals ( 1, count )
[2]: org. junit. assert. assertequals ( 200, count )
[3]: org. junit. assert. assertequals ( 0, count )
[4]: org. junit. assert. assertequals ( 4, count )

************

************
tgt: org . junit . assert . assertfalse ( mimageref2 . isvalid ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. class, count )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 2 ), sync ( list ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), sync ( list ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 2, 3 ), sync ( list ) )
[4]: org. junit. assert. assertequals ( 1, ( ( int ) ( sync ( list. get ( 0 ) ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( expecteddocument , document )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( element. withname ( name ) )
[2]: org. junit. assert. assertnotnull ( element. withname ( null ) )
[3]: org. junit. assert. assertnotnull ( element )
[4]: org. junit. assert. assertnotnull ( element )

************

************
tgt: org . junit . assert . assertfalse ( predicate . apply ( record ) )
[0]: name ) )
[1]: org. junit. assert. assertequals ( 1, bean. getstringlist ( 1 ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, bean. getstringlist ( 1 ) )
[3]: org. junit. assert. assertequals ( 1, bean. getstringlist ( 0 ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1 ), bean. getstringlist ( 1 ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( result . getresult ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( 1, beans. getstringlist ( 1 ). size ( ) )
[1]: org. junit. assert. assertequals ( false, testnonnumeic. isnumeric ( invalidvalue ) )
[2]: org. junit. assert. asserttrue ( testnonnumeic. isnumeric ( invalidvalue ) )
[3]: org. junit. assert. assertequals ( true, testnonnumeic. isnumeric ( invalidvalue ) )
[4]: org. junit. assert. assertequals ( false, testnonnumeiline ( invalidvalue ) )

************

************
tgt: org . junit . assert . assertequals ( "1" , block . value ( 1 , null ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( helper. loadfromstring ( schema ) )
[2]: org. junit. assert. assertnotnull ( helper. loadfromstring ( schema. tostring ( ) ) )
[3]: org. junit. assert. assertequals ( merged. tostring ( ), target. tostring ( ) )
[4]: org. junit. assert. assertequals ( merged. tostring ( ), source. tostring ( ) )

************

************
tgt: org . junit . assert . asserttrue ( actual . equals ( expected ) )
[0]: org. junit. assert. assertequals ( merged. tostring ( ), java. util. collections. emptylist ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), merged. tostring ( ) )
[2]: org. junit. assert. assertequals ( merged. tostring ( ), java. util. collections. singletonlist ( source ) )
[3]: org. junit. assert. assertsame ( nonsslevent, ctx )
[4]: org. junit. assert. assertsame ( nonsslevent, grpchandler )

************

************
tgt: org . junit . assert . assertequals ( results , mockredg . generatesqlstatements ( ) )
[0]: org. junit. assert. assertsame ( nonsslevent, aggregator )
[1]: org. junit. assert. assertsame ( nonsslevent, poolname )
[2]: org. junit. assert. assertsame ( nonsslevent, ddmpair )
[3]: org. junit. assert. assertfalse ( rc )
[4]: org. junit. assert. assertequals ( 1, propertieslist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( bdsub , java . math . biginteger . valueof ( org . apache . commons . math3 . util . fastmath . subtractexact ( a , b ) ) )
[0]: org. junit. assert. assertequals ( 0, propertieslist. size ( ) )
[1]: org. junit. assert. assertequals ( 3, propertieslist. size ( ) )
[2]: org. junit. assert. assertequals ( 1, cache. size ( ) )
[3]: org. junit. assert. assertequals ( 20, cache. size ( ) )
[4]: org. junit. assert. assertequals ( 0, cache. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( intersect instanceof com . j_spaces . jdbc . builder . range . segmentrange ) )
[0]: org. junit. assert. assertequals ( null, request. getsearchstring ( ) )
[1]: org. junit. assert. assertequals ( string, request. getsearchstring ( ) )
[2]: org. junit. assert. assertequals ( subject, request. getsearchstring ( ) )
[3]: org. junit. assert. assertequals ( request. getsearchstring ( ), searchstring )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 100 , ( ( int ) ( testclient . getofflinepublishqueuebound ( ) ) ) )
[0]: org. junit. assert. asserttrue ( list2. isempty ( ) )
[1]: org. junit. assert. assertequals ( true, list2. isempty ( ) )
[2]: org. junit. assert. assertequals ( false, list2. isempty ( ) )
[3]: org. junit. assert. assertequals ( arg, il. exec ( t ) )
[4]: org. junit. assert. assertequals ( argument, il. exec ( t ) )

************

************
tgt: org . junit . assert . assertequals ( expected , rows . next ( ) . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, il. exec ( t ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( arg ), il )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, methods. size ( ) )
[4]: org. junit. assert. assertequals ( 0, methods. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "hello" , target . foo )
[0]: org. junit. assert. assertequals ( 2, methods. size ( ) )
[1]: org. junit. assert. assertequals ( 1, methods. length )
[2]: org. junit. assert. assertnotnull ( methods )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertnotnull ( result, result )

************

************
tgt: org . junit . assert . asserttrue ( valuemeta . isstring ( ) )
[0]: org. junit. assert. assertnotnull ( result == null )
[1]: org. junit. assert. assertnotnull ( result. getbooklist )
[2]: ) )
[3]: org. junit. assert. assertequals ( expected [ i ], cout. next ( ). get ( ) )
[4]: org. junit. assert. assertequals ( 0, srr. getrecords ( output ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( result . error , datasource . validate ( container ) . getstatus ( ) )
[0]: org. junit. assert. assertequals ( 0, srr. getrecords ( input ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, srr. getrecords ( output ). size ( ) )
[2]: org. junit. assert. assertnull ( srr. getrecords ( output ) )
[3]: org. junit. assert. assertequals ( 0, srr. getrecords ( output ). length )
[4]: org. junit. assert. assertequals ( expected, iterables. take ( 1 ) )

************

************
tgt: org . junit . assert . assertnull ( sqlexpression )
[0]: org. junit. assert. assertequals ( expected, iterables. take ( 5 ) )
[1]: org. junit. assert. assertequals ( expected, iterables. take ( 3 ) )
[2]: org. junit. assert. assertequals ( expected, iterables. take ( 0 ) )
[3]: org. junit. assert. assertequals ( expected, iterables. take ( 2 ) )
[4]: org. junit. assert. assertequals ( false, removeshutdownhook )

************

************
tgt: org . junit . assert . assertequals ( expected , message )
[0]: org. junit. assert. assertequals ( true, removeshutdownhook )
[1]: org. junit. assert. assertfalse ( removeshutdownhook )
[2]: org. junit. assert. assertequals ( 1, pool. gettargetsize ( ) )
[3]: org. junit. assert. assertequals ( 0, pool. gettargetsize ( ) )
[4]: org. junit. assert. assertequals ( 0, pool. gettargetsize ( ). length )

************

************
tgt: org . junit . assert . asserttrue ( hive )
[0]: org. junit. assert. assertequals ( 1, pool. gettargetsize ( ). length )
[1]: org. junit. assert. assertequals ( 0, pool. gettargetsize ( ). size ( )
[2]: org. junit. assert. assertnotnull ( org. multibit. common. dateutils. formatiso8601 ( instant ) )
[3]: org. junit. assert. assertnotnull ( instant. formatiso8601 ( null ) )
[4]: org. junit. assert. assertnotnull ( instant. formatiso8601 ( instant ) )

************

************
tgt: org . junit . assert . assertnull ( builder . build ( ) )
[0]: org. junit. assert. assertnotnull ( instant )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( retrievedvalue )
[3]: org. junit. assert. assertequals ( ""foo"", retrievedvalue )
[4]: org. junit. assert. assertequals ( ""test"", retrievedvalue )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( """", retrievedvalue )
[1]: org. junit. assert. assertequals ( null, retrievedvalue )
[2]: org. junit. assert. asserttrue ( newurl. equals ( newurl ) )
[3]: org. junit. assert. asserttrue ( newurl, newurl )
[4]: org. junit. assert. asserttrue ( newurl == ( newurl ) )

************

************
tgt: org . junit . assert . assertequals ( list . size ( ) , 2 )
[0]: org. junit. assert. asserttrue ( newurl, newurl. equals ( newurl )
[1]: ) )
[2]: org. junit. assert. assertequals ( nonserializable, session. getattribute ( name ) )
[3]: org. junit. assert. assertnull ( session. getattribute ( name ) )
[4]: org. junit. assert. assertnotnull ( session. getattribute ( name ) )

************

************
tgt: org . junit . assert . assertequals ( existinglayoutpagetemplatestructurerel , newlayoutpagetemplatestructurerel )
[0]: org. junit. assert. assertequals ( unserializable, session. getattribute ( name ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( result. passedvalidation ( ) )
[3]: org. junit. assert. assertequals ( 1, result. passedvalidation ( ) )
[4]: org. junit. assert. assertequals ( true, result. passedvalidation ( ) )

************

************
tgt: org . junit . assert . assertfalse ( manager . mustblockcallbackrequest ( ) )
[0]: org. junit. assert. assertequals ( 0, validator. invalidmessagesfor ( cnpj ). size ( ) )
[1]: org. junit. assert. assertnotnull ( validator. invalidmessagesfor ( cnpj ) )
[2]: org. junit. assert. assertequals ( 1, validator. invalidmessagesfor ( cnpj ). size ( ) )
[3]: org. junit. assert. assertequals ( cnpj, validator. invalidmessagesfor ( cnpj ) )
[4]: org. junit. assert. assertequals ( null, validator. invalidmessagesfor ( cnpj ) )

************

************
tgt: org . junit . assert . assertnull ( container . child . get ( ) )
[0]: org. junit. assert. assertequals ( 1, impl. invoke ( impl ) )
[1]: org. junit. assert. assertequals ( 0, impl. invoke ( impl ) )
[2]: org. junit. assert. assertequals ( out, impl. invoke ( impl ) )
[3]: org. junit. assert. assertnull ( impl. invoke ( impl ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( handler )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( result, result )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( expectedoutputmaxima )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( l1 , l2 )
[0]: org. junit. assert. assertequals ( 0, each. getupdatecount ( ) )
[1]: org. junit. assert. assertequals ( 1, each. getupdatecount ( ) )
[2]: org. junit. assert. assertequals ( 0l, each. getupdatecount ( ) )
[3]: org. junit. assert. assertnotnull ( each. getupdatecount ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . equalto ( newversion ) )
[0]: org. junit. assert. assertequals ( values ( ), allpettypesstream )
[1]: org. junit. assert. assertequals ( java. util. collections. values ( ), allpettypesstream )
[2]: org. junit. assert. assertequals ( 1, allpettypesstream. values ( ). size ( ) )
[3]: org. junit. assert. assertequals ( new java. util. hashset ( java. util. arrays. aslist ( this. values ( ) ) ), allpettypesstream )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( suggestionsportletdisplaycontext . hasspellchecksuggestion ( ) )
[0]: org. junit. assert. assertnotnull ( i. getsymbol ( ) )
[1]: org. junit. assert. assertequals ( 1, i. getsymbol ( ) )
[2]: org. junit. assert. assertequals ( 0, i. getsymbol ( ) )
[3]: org. junit. assert. assertnotnull ( i )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( list . isempty ( ) )
[0]: org. junit. assert. assertfalse ( whenisassetableparentmodel. isassetentryvisible ( basemodel, getassetclasspk ( basemodel ) ) )
[1]: org. junit. assert. assertfalse ( whenisassetableparentmodel. isassetentryvisible ( basemodel, getassetclasspk ( parentmodel ) ) )
[2]: org. junit. assert. assertfalse ( whenisassetableparentmodel. isassetentryvisible ( basemodel, getassetclasspk ( rootmodel ) ) )
[3]: org. junit. assert. assertfalse ( whenisassetableparentmodel. isassetentryvisible ( basemodel, getassetclasspk ( ancestormodel ) ) )
[4]: org. junit. assert. assertfalse ( whenisassetableparentmodel. isassetentryvisible ( basemodel, getassetclasspk ( parentbasemodel ) ) )

************

************
tgt: org . junit . assert . assertequals ( expected , objectvalue )
[0]: org. junit. assert. assertequals ( 1, problems. size ( ) )
[1]: org. junit. assert. assertequals ( 0, problems. size ( ) )
[2]: public void size ( ) { }
[3]: public void action ( ) { }
[4]: public void response ( ) { }

************

************
tgt: org . junit . assert . assertequals ( expected . get ( ( index ++ ) ) , suffix )
[0]: org. junit. assert. assertnotnull ( input0 )
[1]: org. junit. assert. assertequals ( input1, input0 )
[2]: org. junit. assert. assertnotnull ( input1 )
[3]: org. junit. assert. assertequals ( 1, input0. count )
[4]: org. junit. assert. assertequals ( 1, input0. length )

************

************
tgt: org . junit . assert . assertthat ( org . batfish . common . util . batfishobjectmapper . clone ( m , org . batfish . datamodel . mlag . class ) , org . hamcrest . matchers . equalto ( m ) )
[0]: org. junit. assert. asserttrue ( a. isbundle ( ) )
[1]: org. junit. assert. assertequals ( true, a. isbundle ( ) )
[2]: org. junit. assert. assertequals ( true, filter. allow ( event, listener ) )
[3]: org. junit. assert. assertequals ( true, cancontinue )
[4]: org. junit. assert. assertequals ( false, cancontinue )

************

************
tgt: org . junit . assert . assertequals ( 1 , runtime . exitstatus ( ) )
[0]: org. junit. assert. asserttrue ( cancontinue )
[1]: org. junit. assert. assertfalse ( cancontinue )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( logmanager )
[4]: org. junit. assert. assertequals ( 1, logmanager. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( r1 )
[0]: org. junit. assert. assertequals ( 1, logmanager. get ( ) )
[1]: org. junit. assert. assertequals ( 0, logmanager. size ( ) )
[2]: org. junit. assert. assertnull ( logmanager )
[3]: org. junit. assert. assertnotnull ( test )
[4]: org. junit. assert. assertnotnull ( test. thread )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , retval )
[0]: org. junit. assert. assertnotnull ( test. context )
[1]: org. junit. assert. assertnotnull ( test. xxx )
[2]: org. junit. assert. assertnotnull ( test. timestamp )
[3]: org. junit. assert. assertequals ( 0, tool. heapcaculation ( ) )
[4]: org. junit. assert. assertequals ( 1, tool. heapcaculation ( ) )

************

************
tgt: org . junit . assert . assertequals ( x , y )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), tool. heapcaculation ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), tool. heapcaculation ( ) )
[2]: org. junit. assert. assertequals ( null, tool. heapcaculation ( ) )
[3]: org. junit. assert. asserttrue ( responder. hasresponder ( ) )
[4]: org. junit. assert. assertequals ( 3, output. getentry ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( s2 )
[0]: org. junit. assert. assertequals ( 1, output. getentry ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 2, output. getentry ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, validator. haserrors ( ) )
[3]: org. junit. assert. assertfalse ( astronomicalbody. isvisible ( observer ) )
[4]: org. junit. assert. assertequals ( false, astronomicalbody. isvisible ( observer ) )

************

************
tgt: org . junit . assert . assertnull ( stmt . getwarnings ( ) )
[0]: org. junit. assert. assertequals ( true, astronomicalbody. isvisible ( observer ) )
[1]: org. junit. assert. assertfalse ( anstronomicalbody. isvisible ( observer ) )
[2]: org. junit. assert. assertequals ( false, astronomicalbody. isvisible ( observer ). isempty ( ) )
[3]: org. junit. assert. assertequals ( 0, emptybuff. length )
[4]: org. junit. assert. assertequals ( 1, emptybuff. length )

************

************
tgt: org . junit . assert . assertequals ( 0 , testfile . length ( ) )
[0]: org. junit. assert. assertarrayequals ( emptybuff, emptybuff )
[1]: org. junit. assert. assertnotnull ( emptybuff )
[2]: ) )
[3]: org. junit. assert. asserttrue ( ( hasattachmenttype == false ) )
[4]: org. junit. assert. assertnotnull ( victim )

************

************
tgt: org . junit . assert . assertequals ( expected , msg )
[0]: org. junit. assert. assertnotnull ( victim. sendredirect ( message ) )
[1]: org. junit. assert. assertequals ( message, victim. sendredirect ( ) )
[2]: org. junit. assert. assertnull ( victim )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( e )

************

************
tgt: org . junit . assert . assertthat ( imported , org . hamcrest . corematchers . is ( "value" ) )
[0]: org. junit. assert. assertequals ( e, e )
[1]: org. junit. assert. assertequals ( e, target )
[2]: org. junit. assert. asserttrue ( ( e instanceof java. ioexception ) )
[3]: ) )
[4]: org. junit. assert. assertnull ( html )

************

************
tgt: org . junit . assert . asserttrue ( ( ( server . getstoragemanager ( ) . getjournalsequentialfilefactory ( ) . getcriticalanalyzer ( ) . getnumberofcomponents ( ) ) < 10 ) )
[0]: org. junit. assert. assertnotnull ( html )
[1]: org. junit. assert. assertnull ( htm )
[2]: , html )
[3]: ) )
[4]: org. junit. assert. assertfalse ( p. canbewritten ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( expectedjson , message . tojson ( ) )
[0]: org. junit. assert. assertfalse ( p. canbewritten ( 5 ) )
[1]: org. junit. assert. assertfalse ( p. canbewritten ( 4 ) )
[2]: org. junit. assert. asserttrue ( p. canbewritten ( 5 ) )
[3]: org. junit. assert. assertfalse ( p. canbewritten ( 7 ) )
[4]: org. junit. assert. assertequals ( orderline. getid ( ), invoice. getid ( ) )

************

************
tgt: org . junit . assert . assertthat ( list . tostring ( ) , org . hamcrest . core . is . is ( copy . tostring ( ) ) )
[0]: org. junit. assert. assertequals ( orderline, invoice )
[1]: org. junit. assert. assertequals ( orderline. tostring ( ), invoice. tostring ( ) )
[2]: org. junit. assert. assertequals ( orderline. size ( ), invoice. size ( ) )
[3]: org. junit. assert. assertequals ( orderline. touppercase ( ), invoice. touppercase ( ) )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertequals ( targetelement , item . getelement ( ) )
[0]: org. junit. assert. assertequals ( result, expected )
[1]: org. junit. assert. assertequals ( jsonvalue, result )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( org. pardot )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertequals ( aslist ( sampleshortalbum , alovesupreme ) , result )
[0]: org. junit. assert. assertequals ( expected. name ( ), actual. name ( ) )
[1]: org. junit. assert. assertequals ( expected. name ( ), actual. name )
[2]: org. junit. assert. assertsame ( expected, actual )
[3]: org. junit. assert. asserttrue ( ( expected == actual ) )
[4]: org. junit. assert. asserttrue ( cmt. isijectionperformed ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( true, cmt. isijectionperformed ( ) )
[1]: org. junit. assert. assertfalse ( cmt. isijectionperformed ( ) )
[2]: org. junit. assert. asserttrue ( ccmt. isijectionperformed ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( expresult, result )

************

************
tgt: org . junit . assert . assertnotnull ( inputstream )
[0]: org. junit. assert. assertequals ( expressionresult, result )
[1]: org. junit. assert. assertequals ( experimentresult, result )
[2]: org. junit. assert. assertequals ( result, expresult )
[3]: assertequals ( expresult, result )
[4]: org. junit. assert. assertthat ( tolist ( files ), org. hamcrest. corematchers. contains ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( rolluptype . gauge , com . rackspacecloud . blueflood . types . rolluptype . fromrollup ( rollup ) )
[0]: org. junit. assert. assertthat ( tolist ( files ), org. hamcrest. corematchers. contains ( files ) )
[1]: org. junit. assert. assertthat ( tolist ( files ), contains ( files ) )
[2]: org. junit. assert. asserttrue ( tolist ( files ). isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, count )
[4]: org. junit. assert. assertequals ( 200, count )

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertequals ( 8, count )
[1]: org. junit. assert. assertequals ( 3, count )
[2]: org. junit. assert. assertthat ( count, org. )
[3]: org. junit. assert. assertequals ( msg, 1, composite. getchildren ( ). length )
[4]: org. junit. assert. assertequals ( msg, 0, composite. getchildren ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 0 , violations . size ( ) )
[0]: org. junit. assert. assertequals ( msg, expected, composite. getchildren ( ). length )
[1]: org. junit. assert. assertequals ( msg, 0, victim. getchildren ( ). length )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( u )
[4]: org. junit. assert. assertnotnull ( ui )

************

************
tgt: org . junit . assert . assertthat ( serialize ( writable ) . length , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert.null ( u )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( 0, sut. split ( null ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, sut. split ( ""a"" ). size ( ) )

************

************
tgt: org . junit . assert . assertnull ( actie . bepaaltevervallenvoorkomen ( ) )
[0]: org. junit. assert. assertequals ( 1, sut. split ( ""a"" ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, sut. split ( ""foo"" ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, sut. split ( null ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, activitynodes. size ( ) )
[4]: org. junit. assert. assertnull ( grid. getnextvisibleitem ( items [ 0 ] ) )

************

************
tgt: org . junit . assert . assertnull ( version )
[0]: org. junit. assert. assertnull ( grid. getnextvisibleitem ( items ) )
[1]: org. junit. assert. assertnull ( grid. getnextvisibleitem ( items [ 4 ] ) )
[2]: org. junit. assert. assertnull ( grid. getnextvisibleitem ( items. length ) )
[3]: org. junit. assert. assertnull ( getnextvisibleitem ( items [ 0 ] ) )
[4]: org. junit. assert. assertequals ( out. get ( ), java. lang. math. unaryrealtypemathtest. large_num )

************

************
tgt: org . junit . assert . assertequals ( org . eclipse . jdt . ls . core . internal . managers . contentprovidermanagertest . fake_decompiled_source , provider . getcontent ( nosuchuri , monitor ) )
[0]: org. junit. assert. assertequals ( net. imagej. ops. math. unaryrealtypemathtest. large_num, out. get ( ) )
[1]: org. junit. assert. assertequals ( out. get ( ). get ( ), java. lang. math. unaryrealtypemathtest. large_num )
[2]: org. junit. assert. assertequals ( net. imagej. ops. math. unaryrealtypemathtest. large_num, out. get ( ). get ( ) )
[3]: get ( ) )
[4]: org. junit. assert. assertthat ( value, org. hamcrest. corematchers. equalto ( t ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( t, value )
[1]: org. junit. assert. assertnotnull ( value )
[2]: org. junit. assert. assertthat ( value, is ( t ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( expectedexception, lockedip )

************

************
tgt: org . junit . assert . assertsame ( valueb , opt . getvalue ( ) )
[0]: org. junit. assert. assertequals ( expectedexception, true )
[1]: org. junit. assert. assertequals ( expectedexception, false )
[2]: org. junit. assert. assertequals ( expectedexception, stateexception )
[3]: ) )
[4]: org. junit. assert. assertequals ( org. joda. beans. jodabeanutils. collectiontypetypes ( test, org. joda. beans. sample. person. class ), expected )

************

************
tgt: org . junit . assert . assertthat ( errors , org . hamcrest . matchers . empty ( ) )
[0]: org. junit. assert. assertequals ( org. joda. beans. jodabeanutils. collectiontypetypes ( test, org. joda. beans. sample. state. class ), expected )
[1]: org. junit. assert. assertequals ( org. joda. beans. jodabeanutils. collectiontypetypes ( test, org. joda. beans. sample. integer. class ), expected )
[2]: org. junit. assert. assertequals ( org. joda. beans. jodabeanutils. collectiontypetypes ( test, org. joda. beans. sample. int. class ), expected )
[3]: org. junit. assert. assertequals ( org. joda. beans. jodabeanutils. collectiontypetypes ( test, int. class ), expected )
[4]: org. junit. assert. assertequals ( samplefile, com. amazonaws. codesamples. samplesparser. getsamples ( samplefile ) )

************

************
tgt: org . junit . assert . assertnotnull ( largetxobj )
[0]: org. junit. assert. assertequals ( samples, com. amazonaws. codesamples. samplesparser. getsamples ( samplefile ) )
[1]: org. junit. assert. assertequals ( 0, com. amazonaws. codesamples. samplesparser. getsamples ( samplefile ). length )
[2]: samplefile )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, mutations. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( software . amazon . awssdk . services . dynamodb . document . item . fromjson ( null ) )
[0]: org. junit. assert. assertnotnull ( rangevalue. getincludestartvalue ( ) )
[1]: org. junit. assert. assertequals ( 1, rangevalue. getincludestartvalue ( ) )
[2]: org. junit. assert. assertequals ( null, rangevalue. getincludestartvalue ( ) )
[3]: org. junit. assert. assertequals ( 0, rangevalue. getincludestartvalue ( ) )
[4]: org. junit. assert. assertnotnull ( rangevalue )

************

************
tgt: org . junit . assert . assertfalse ( status )
[0]: org. junit. assert. assertequals ( true, active )
[1]: org. junit. assert. assertequals ( false, active )
[2]: org. junit. assert. assertequals ( 1, active )
[3]: org. junit. assert. assertequals ( null, active )
[4]: org. junit. assert. assertequals ( true, inactive )

************

************
tgt: org . junit . assert . assertequals ( field , property )
[0]: org. junit. assert. assertequals ( expecting )
[1]: org. junit. assertequals ( expecting, result )
[2]: org. junit. assertequals. expecting, result )
[3]: assertequals assertequals expecting, result )
[4]: result ) )

************

************
tgt: org . junit . assert . assertthat ( list , is ( expected ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertequals ( result, check )
[2]: org. junit. assert. assertequals ( null, result )
[3]: org. junit. assert. assertequals ( base, result )
[4]: org. junit. assert. assertequals ( result, result )

************

************
tgt: org . junit . assert . assertequals ( 4 , com . conversantmedia . util . concurrent . capacity . getcapacity ( 3 ) )
[0]: org. junit. assert. assertnotnull ( fromcache )
[1]: org. junit. assert. assertequals ( expectedhexbytes, testpermbytes )
[2]: org. junit. assert. assertequals ( expectedhexbytes, testhexbytes )
[3]: org. junit. assert. assertequals ( expectedhexbytes, actualhexbytes )
[4]: org. junit. assert. assertequals ( expectedhexbytes, readhexbytes )

************

************
tgt: org . junit . assert . assertthat ( runner . equals ( runner1 ) , org . hamcrest . core . is . is ( false ) )
[0]: org. junit. assert. assertequals ( expectedhexbytes, resulthexbytes )
[1]: org. junit. assert. assertequals ( teststring, com. rim. logdriver. avro. avroutils. readstring ( testbytes ) )
[2]: org. junit. assert. assertarrayequals ( teststring, com. rim. logdriver. avro. avroutils. readstring ( testbytes ) )
[3]: org. junit. assert. assertequals ( teststring, com. rim. logdriver. avro. avroutils. readstring ( teststring ) )
[4]: org. junit. assert. assertarrayequals ( teststring, com. rim. logdriver. avro. avroutils. readstring ( teststring ) )

************

************
tgt: org . junit . assert . assertnull ( this . target . retrievepublicipaddress ( null , null ) )
[0]: teststring )
[1]: org. junit. assert. assertnotnull ( inner )
[2]: org. junit. assert. assertequals ( null, inner )
[3]: org. junit. assert. assertequals ( serialized, inner )
[4]: org. junit. assert. assertequals ( 1, inner )

************

************
tgt: org . junit . assert . assertnotnull ( ins )
[0]: ) )
[1]: org. junit. assert. assertthat ( url, org. hamcrest. corematchers. equalto ( ( ( ( org. commonjava. indy. promote. client. indypromoteclientmoduleurlstest. base ) + ( indypromoteclientmodule. paths_promote_path ) ) ) )
[2]: org. junit. assert. assertthat ( url, org. hamcrest. corematchers. equalto ( ( ( ( org. commonjava. indy. promote. client. indypromoteclientmoduleurlstest. base ) + ( indypromoteclientmodule. paths_promote_path ) ) + 1 ) ) )
[3]: org. junit. assert. assertthat ( url, org. hamcrest. corematchers. equalto ( org. commonjava. indy. promote. client. indypromoteclientmoduleurlstest. base ) )
[4]: org. junit. assert. asserttrue ( ( ( url. length ( ) ) > 0 ) )

************

************
tgt: org . junit . assert . assertequals ( "bar" , bean . lookup ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( t, org. apache. jena. sdb. store. layouttype. fetch ( t. tostring ( ) ) )
[2]: org. junit. assert. assertnotnull ( org. apache. jena. sdb. store. layouttype. fetch ( t. tostring ( ) ) )
[3]: org. junit. assert. assertequals ( t, org. apache. jena. sdb. store. layouttype. fetch ( t. getid ( ) ) )
[4]: org. junit. assert. assertnotnull ( org. apache. jena. sdb. store. layouttype. fetch ( t. getid ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( true , passthru )
[0]: org. junit. assert. assertequals ( t, org. apache. jena. sdb. store. layouttype. fetch ( t. name ( ) ) )
[1]: org. junit. assert. assertequals ( 1, ttl )
[2]: org. junit. assert. assertequals ( 0, ttl )
[3]: org. junit. assert. assertequals ( filternum, ttl )
[4]: org. junit. assert. assertequals ( true, ( ttl > 0 ) )

************

************
tgt: org . junit . assert . assertequals ( rs , model . getoperatorrevenueshare ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, meldingen. size ( ) )
[2]: org. junit. assert. assertnotnull ( f )
[3]: org. junit. assert. assertnotnull ( f. tostring ( ) )
[4]: org. junit. assert. assertequals ( 1, f. length )

************

************
tgt: org . junit . assert . assertequals ( 3 , coveredgoals . size ( ) )
[0]: org. junit. assert. assertnotnull ( f. getname ( ) )
[1]: org. junit. assert. assertnotnull ( f. getmessage ( ) )
[2]: org. junit. assert. assertnotnull ( name )
[3]: org. junit. assert. assertequals ( name, this. name )
[4]: org. junit. assert. assertequals ( pid_from_jmx, pid )

************

************
tgt: org . junit . assert . assertthat ( org . slim3 . util . doubleutil . toprimitivedouble ( 1 ) , org . hamcrest . corematchers . is ( 1.0 ) )
[0]: org. junit. assert. asserttrue ( ( pid_from_jmx ) == pid )
[1]: org. junit. assert. asserttrue ( ( pid == pid_from_jmx ) )
[2]: org. junit. assert. asserttrue ( ( pid_from_jmx ) )
[3]: org. junit. assert. asserttrue ( ( pid_from_jmx ) > pid )
[4]: org. junit. assert. assertequals ( expectedbytes, input )

************

************
tgt: org . junit . assert . asserttrue ( ( ( java . lang . boolean ) ( result ) ) )
[0]: org. junit. assert. assertequals ( input, expectedbytes )
[1]: org. junit. assert. assertarrayequals ( expectedbytes, input )
[2]: org. junit. assert. assertequals ( expectedbytes [ i ], input )
[3]: , input )
[4]: org. junit. assert. assertnull ( org. apache. commons. functor. adapter. binaryfunctionbinaryprocedureprocedure. adapt ( null ) )

************

************
tgt: org . junit . assert . assertfalse ( hasindexrangekeycondition )
[0]: org. junit. assert. assertnotnull ( org. apache. commons. functor. adapter. binaryfunctionbinaryprocedureprocedure. adapt ( null ) )
[1]: org. junit. assert. assertequals ( null, org. apache. commons. functor. adapter. binaryfunctionbinaryprocedureprocedure. adapt ( null ) )
[2]: org. junit. assert. assertequals ( null, org. apache. commons. functor. adapter. binaryfunctionbinaryprocedureprocedure. adapt ( null ). null )
[3]: org. junit. assert. assertnull ( org. apache. commons. functor. adapter. binaryfunctionbinaryprocedureprocedure. adapt ( null ) )
[4]: org. junit. assert. assertequals ( expected_vipoctet, highest. getvipoctets ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( listener , bindingdommountpointlisteneradapter . getinstance ( ) )
[0]: org. junit. assert. assertequals ( 0, s. compatiblenextint ( 0 ) )
[1]: org. junit. assert. assertequals ( question. questiontype. type_decimal, q. getanswer ( ) )
[2]: org. junit. assert. assertequals ( new java. math. bigdecimal ( ), q. getanswer ( ) )
[3]: org. junit. assert. assertequals ( new java. math. bigdecimal ( msg4.56adefinition ), q. getanswer ( ) )
[4]: org. junit. assert. assertequals ( new java. math. bigdecimal ( true ), q. getanswer ( ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . integer ( attributevalue ) , value )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( request. getid ( ) )
[2]: org. junit. assert. assertequals ( t1, request. getid ( ) )
[3]: org. junit. assert. assertnotnull ( request. getid ( ). getid ( ) )
[4]: org. junit. assert. assertnull ( request. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , options . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertnotnull ( result. getclass ( ) )
[3]: org. junit. assert. assertnotnull ( result. getid ( ) )
[4]: org. junit. assert. assertnotnull ( result, result )

************

************
tgt: org . junit . assert . assertequals ( "urn:example:foo:1" , iah2 . id ( ) )
[0]: org. junit. assert. assertnotnull ( result. context )
[1]: org. junit. assert. assertthat ( ( predeletesize - 3 ), org. hamcrest. core. is. is ( org. hamcrest. corematchers. equalto ( taskdefinitionrepository. count ( ) ) ) )
[2]: org. junit. assert. assertthat ( ( predeletesize + 3 ), org. hamcrest. core. is. is ( org. hamcrest. corematchers. equalto ( taskdefinitionrepository. count ( ) ) ) )
[3]: org. junit. assert. assertthat ( ( predeletesize - 3 ), org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( taskdefinitionrepository. count ( ) ) ) )
[4]: org. junit. assert. assertthat ( ( predeletesize - 3 ), org. hamcrest. core. is. is ( org. hamcrest. corematchers. equalto ( taskdefinitionrepository. count ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( input , deserialised )
[0]: org. junit. assert. assertthat ( ( predeletesize - 3 ), org. hamcrest. core. is. is ( org. hamcrest. core. equalto. long. max_value ) )
[1]: org. junit. assert. assertthat ( result ( ), org. hamcrest. matchers. is ( expectedresult ) )
[2]: org. junit. assert. assertthat ( result ( ), org. hamcrest. matchers. contains ( expectedresult ) )
[3]: org. junit. assert. assertthat ( result ( ), is ( expectedresult ) )
[4]: org. junit. assert. assertequals ( expectedresult, result ( ) )

************

************
tgt: org . junit . assert . assertequals ( exp , content . gettext ( ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( issessionvalid ( sessionid, now ) )
[2]: org. junit. assert. asserttrue ( hassessionvalid ( sessionid, now ) )
[3]: org. junit. assert. asserttrue ( s. issessionvalid ( sessionid, now ) )
[4]: org. junit. assert. asserttrue ( net. violet. platform. api. authentication )

************

************
tgt: org . junit . assert . assertequals ( false , presenter . isusingfilepath ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( org. qualipso. factory. workflow. bonita. test. bonitaservicetest. logger )
[2]: org. junit. assert. assertnotnull ( org. qualipso. factory. workflow. bonita. test. bonitaservicetest. instance )
[3]: org. junit. assert. assertnotnull ( org. qualipso. factory. workflow. bonita. test. bonitaservicetest. )
[4]: org. junit. assert. assertnotnull ( org. qualipso. factory. workflow. bonita. test. bonitaservicetest. session )

************

************
tgt: org . junit . assert . assertequals ( stat , fstat )
[0]: org. junit. assert. assertnotnull ( org. qualipso. factory. workflow. bonita. test. bonitaservicetest. bean )
[1]: org. junit. assert. assertnotnull ( processor. getsupportedannotationtypes ( ) )
[2]: org. junit. assert. asserttrue ( processor. getsupportedannotationtypes ( ). contains ( io. klerch. alexa. tellask. schema. annotation ) )
[3]: org. junit. assert. asserttrue ( processor. getsupportedannotationtypes ( ). isempty ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , ahelper . getfailedrecords ( ) . size ( ) )
[0]: )
[1]: org. junit. assert. assertequals ( new org. eclipse. rap. json. jsonarray ( ), actualindexes )
[2]: org. junit. assert. assertequals ( aslist ( 0, 1 ), actualindexes )
[3]: org. junit. assert. assertequals ( null, actualindexes. add ( 0 ) )
[4]: org. junit. assert. assertequals ( 0, actualindexes. add ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , filters . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertnull ( xml )
[2]: org. junit. assert. assertequals ( null, xml )
[3]: org. junit. assert. assertequals ( """", xml )
[4]: org. junit. assert. assertnotnull ( xml )

************

************
tgt: org . junit . assert . asserttrue ( ( rooted == false ) )
[0]: ) )
[1]: org. junit. assert. assertarrayequals ( bytes, bytes )
[2]: org. junit. assert. assertarrayequals ( bytes, memory )
[3]: org. junit. assert. assertarrayequals ( byte, bytes )
[4]: org. junit. assert. assertarrayequals ( bytes, buffer )

************

************
tgt: org . junit . assert . assertequals ( p1 , p2 )
[0]: , bytes )
[1]: org. junit. assert. assertequals ( 0, results. size ( ) )
[2]: org. junit. assert. assertequals ( 1, results. size ( ) )
[3]: org. junit. assert. assertnotnull ( p )
[4]: org. junit. assert. assertequals ( p, tags )

************

************
tgt: org . junit . assert . assertequals ( 0 , count . get ( ) )
[0]: org. junit. assert. assertnotnull ( p. matcher ( ) )
[1]: org. junit. assert. assertnotnull ( p. matcher )
[2]: ) )
[3]: org. junit. assert. assertequals ( e, e2. getcause ( ) )
[4]: org. junit. assert. assertequals ( e. getcause ( ), e2. getcause ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( updatedoccurrenceslist . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertsame ( e, e2. getcause ( ) )
[1]: org. junit. assert. assertnull ( e2. getcause ( ) )
[2]: org. junit. assert. assertnotnull ( e2. getcause ( ) )
[3]: org. junit. assert. assertnotnull ( fs. getcharset ( null ) )
[4]: org. junit. assert. assertnotnull ( fs. getcharset ( operation ) )

************

************
tgt: org . junit . assert . assertequals ( new java . util . hashset ( java . util . arrays . aslist ( "a" , "b" ) ) , names )
[0]: org. junit. assert. assertnotnull ( fs. getcharset ( ) )
[1]: org. junit. assert. assertnotnull ( fs. getcharset ( testct ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( document. getrootelement ( ) )
[4]: org. junit. assert. assertequals ( 1, tier. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( workflowdefinitionlinks . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, tier. size ( ) )
[1]: org. junit. assert. assertequals ( 5, tier. size ( ) )
[2]: org. junit. assert. assertequals ( 3, tier. size ( ) )
[3]: org. junit. assert. assertnotnull ( echo )
[4]: org. junit. assert. assertnotnull ( echo. echo ( ""test"" ) )

************

************
tgt: org . junit . assert . asserttrue ( rule . shouldproceed ( usersession , request ) )
[0]: org. junit. assert. assertnotnull ( echo. echo ( ) )
[1]: org. junit. assert. assertequals ( ""test"", echo. echo ( ) )
[2]: public void init ( ) { }
[3]: org. junit. assert. assertfalse ( containerspec. matches ( containertlv ) )
[4]: org. junit. assert. assertequals ( testcaching. size ( ), 1 )

************

************
tgt: org . junit . assert . assertequals ( dedatarecordcollectionexpected , dedatarecordcollection )
[0]: org. junit. assert. assertequals ( testres. size ( ), 1 )
[1]: org. junit. assert. assertequals ( testcachingwithcount, 1 )
[2]: org. junit. assert. assertequals ( testcachingwithsize, 1 )
[3]: org. junit. assert. assertequals ( testcaching. size ( ), 2 )
[4]: org. junit. assert. assertequals ( style, context. apply ( context ) )

************

************
tgt: org . junit . assert . assertnull ( newstate )
[0]: org. junit. assert. assertequals ( style, context. get ( ) )
[1]: org. junit. assert. assertequals ( style, context. apply ( ) )
[2]: org. junit. assert. assertequals ( style, context. gethome ( ) )
[3]: org. junit. assert. assertequals ( style, context. applyexact ( ) )
[4]: org. junit. assert. asserttrue ( this. q. iscacheenabled ( ) )

************

************
tgt: org . junit . assert . assertequals ( value . substring ( 1 , ( ( value . length ( ) ) - 1 ) ) , actualvalue )
[0]: org. junit. assert. asserttrue ( this. resolver. iscacheenabled ( ) )
[1]: org. junit. assert. asserttrue ( this. resolver. iscacheenabled ( ). isempty ( ) )
[2]: org. junit. assert. asserttrue ( this. q. iscacheenabled ( ). isempty ( ) )
[3]: org. junit. assert. asserttrue ( this. service. iscacheenabled ( ) )
[4]: org. junit. assert. assertequals ( ( originalfragmentcollectionscount + 1 ), actualfragmentcollectionscount )

************

************
tgt: org . junit . assert . assertthat ( false , org . hamcrest . core . is . is ( true ) )
[0]: org. junit. assert. assertequals ( originalfragmentcollectionscount, actualfragmentcollectionscount )
[1]: org. junit. assert. assertequals ( actualfragmentcollectionscount, ( originalfragmentcollectionscount + 1 ) )
[2]: org. junit. assert. assertequals ( actualfragmentcollectionscount, originalfragmentcollectionscount )
[3]: org. junit. assert. assertequals ( ( originalfragmentcollectionscount - 1 ), actualfragmentcollectionscount )
[4]: org. junit. assert. assertequals ( firstmonthday, val1 )

************

************
tgt: org . junit . assert . assertequals ( expectedenv , env )
[0]: org. junit. assert. assertequals ( date, val1 )
[1]: org. junit. assert. assertequals ( date. tolocaldate ( ), val1 )
[2]: org. junit. assert. assertequals ( dates. tolocaldate ( ), val1 )
[3]: org. junit. assert. assertequals (stmonthday, val1 )
[4]: org. junit. assert. asserttrue ( exists )

************

************
tgt: org . junit . assert . assertfalse ( file . containsgroup ( null ) )
[0]: org. junit. assert. assertfalse ( exists )
[1]: org. junit. assert. assertequals ( true, exists )
[2]: , exists )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, tree. getnumberofsyntaxerrors ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 1, processor. getnumberofsyntaxerrors ( ) )
[1]: org. junit. assert. assertequals ( 0, tree. getnumberofsyntaxerrors ( ) )
[2]: org. junit. assert. assertnotnull ( provider )
[3]: org. junit. assert. assertequals ( 1, provider. count )
[4]: org. junit. assert. assertequals ( 1, 1 )

************

************
tgt: org . junit . assert . assertfalse ( theproperty . isnull ( ) )
[0]: org. junit. assert. assertequals ( 0, provider. count )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, es. size ( ) )
[3]: org. junit. assert. assertequals ( 0, es. size ( ) )
[4]: org. junit. assert. assertequals ( 3, es. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , result )
[0]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( org. hamcrest. matchers. equalto ( ( ( java. util. list < javax. faces. model. selectitem > ) ( new java. util. arraylist < javax. faces. model. selectitem > ( value ) ) ) ) ) )
[1]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( org. hamcrest. matchers. equalto ( new java. util. arraylist < javax. faces. model. selectitem > ( new java. util. arraylist < javax. faces. model. selectitem > ( value ) ) ) ) )
[2]: org. junit. assert. assertthat ( actual, org. hamcrest. matchers. is ( org. hamcrest. matchers. empty ( ) ) )
[3]: , actual )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "" , buf . tostring ( ) )
[0]: org. junit. assert. assertnotnull ( result. getfirstheader ( ""test"" ) )
[1]: org. junit. assert. assertnotnull ( result. getfirstheader ( null ) )
[2]: org. junit. assert. assertnotnull ( result. getfirstheader ( 200 ) )
[3]: org. junit. assert. assertnotnull ( result. getfirstheader ( string ) )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( org . teiid . designer . core . workspace . resourceannotationhelpertest . value_1 , value )
[0]: org. junit. assert. assertequals ( internalindexstate. populating, initialstate )
[1]: org. junit. assert. assertequals ( internalindexstate. populates, initialstate )
[2]: org. junit. assert. assertequals ( internalindexstate. populating, initialstate )
[3]: org. junit. assert. assertequals ( internalindexstate. populate, initialstate )
[4]: org. junit. assert. assertequals ( internalindexstate. fillating, initialstate )

************

************
tgt: org . junit . assert . asserttrue ( path . getshapes ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, devicegroupregistry. getdevicegroupregistry ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, devicegroupregistry. getdevicegroupregistry ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), devicegroupregistry )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), devicegroupregistry )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( 1l ), devicegroupregistry )

************

************
tgt: org . junit . assert . assertequals ( "hello" , result )
[0]: org. junit. assert. assertequals ( definedcharset, clientdefault )
[1]: org. junit. assert. assertequals ( true, definedcharset. isempty ( ) )
[2]: org. junit. assert. assertequals ( null, definedcharset. isempty ( ) )
[3]: org. junit. assert. assertequals ( null, definedcharset )
[4]: ) )

************

************
tgt: org . junit . assert . assertarrayequals ( plaintext , correctplaintext )
[0]: org. junit. assert. assertnotnull ( subchains ( ) )
[1]: org. junit. assert. assertequals ( 0, subject. subchains ( ). size ( ) )
[2]: org. junit. assert. assertequals ( emptyproxychaingreader. subchains ( ), emptyproxychaing )
[3]: org. junit. assert. assertnotnull ( subject. subchains ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( itemlist . size ( ) , 1 )
[0]: org. junit. assert. assertequals ( expected, output. tostring ( ) )
[1]: org. junit. assert. assertequals ( output. tostring ( ), expected )
[2]: org. junit. assert. assertequals ( expected, out. tostring ( ) )
[3]: org. junit. assert. assertequals ( expected, input. tostring ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( userservice . finduserindb ( loadingservicetestdatas . sqlsubdomain , "user1@linshare.org" ) )
[0]: org. junit. assert. assertequals ( 1, result. getresultsize ( ) )
[1]: org. junit. assert. assertequals ( 0, result. getresultsize ( ) )
[2]: org. junit. assert. assertequals ( 2, result. getresultsize ( ) )
[3]: org. junit. assert. assertequals ( 3, result. getresultsize ( ) )
[4]: org. junit. assert. assertequals ( 5, result. getresultsize ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , wire . read ( ) . text ( ) )
[0]: org. junit. assert. assertnotnull ( tmpfile )
[1]: org. junit. assert. assertequals ( tmpfile, instance. run )
[2]: org. junit. assert. assertequals ( tmpfile, instance. name )
[3]: org. junit. assert. assertequals ( tmpfile, instance. trace )
[4]: org. junit. assert. assertnotnull ( tmpfile )

************

************
tgt: org . junit . assert . assertfalse ( matched )
[0]: org. junit. assert. assertarrayequals ( jaxbcoder. bytes, org. apache. beam. sdk. util. coderutils. decodefrombytearray ( nesting, encoded ) )
[1]: org. junit. assert. assertequals ( jaxbcoder, org. apache. beam. sdk. util. coderutils. decodefrombytearray ( nesting, encoded ) )
[2]: org. junit. assert. assertarrayequals ( jaxbcoder. getbytes ( ), org. apache. beam. sdk. util. coderutils. decodefrombytearray ( nesting, encoded ) )
[3]: org. junit. assert. assertarrayequals ( jaxbcoder, org. apache. beam. sdk. util. coderutils. decodefrombytearray ( nesting, encoded ) )
[4]: org. junit. assert. assertarrayequals ( jaxbcoder. bytes, org. apache. beam. sdk. util. coderutils. decodefrombytearray ( nesting, encoded ). tobytearray ( ) )

************

************
tgt: org . junit . assert . assertequals ( view , viewname )
[0]: org. junit. assert. assertequals ( saved, loaded )
[1]: org. junit. assert. assertarrayequals ( saved. password, loaded. password )
[2]: org. junit. assert. assertarrayequals ( saved. bytes, loaded. bytes )
[3]: org. junit. assert. assertarrayequals ( row, loaded. user )
[4]: org. junit. assert. assertarrayequals ( row, loaded. data )

************

************
tgt: org . junit . assert . assertequals ( 0 , actuals . size ( ) )
[0]: org. junit. assert. assertnull ( testvoerregeluitpersoonvaltbuiten )
[1]: org. junit. assert. assertnull ( testvoerregeluitpersoonvaltbuitenpopulatie )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertfalse ( resultaat )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "error<sp>writing<sp>request<sp>body<sp>to<sp>server" , e . getmessage ( ) )
[0]: org. junit. assert. assertfalse ( attributes. issymboliclink ( ) )
[1]: org. junit. assert. assertfalse ( org. openspotlight. common. util. assertions. accept ( state ) )
[2]: org. junit. assert. assertfalse ( state. accept ( state ) )
[3]: org. junit. assert. assertfalse ( parser. accept ( state ) )
[4]: org. junit. assert. assertfalse ( handler. accept ( state ) )

************

************
tgt: org . junit . assert . assertequals ( expectedresponse , interceptor . getlastresponse ( ) )
[0]: org. junit. assert. assertfalse ( org. openspotlight. common. util. assertions. accepting ( state ) )
[1]: org. junit. assert. assertnotnull ( datafileto )
[2]: org. junit. assert. assertnotnull ( datafileto
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . asserttrue ( ( currentscore >= ( suggestion . getscore ( ) ) ) )
[0]: 
[1]: org. junit. assert. assertnotnull ( name )
[2]: org. junit. assert. assertequals ( 1, services. size ( ) )
[3]: org. junit. assert. assertequals ( 0, services. size ( ) )
[4]: org. junit. assert. assertequals ( 6, services. size ( ) )

************

************
tgt: org . junit . assert . assertnull ( calc . getresult ( ) . getvalue ( ) )
[0]: org. junit. assert. assertnotnull ( name )
[1]: org. junit. assert. assertequals ( columnnames. get ( i ), name )
[2]: org. junit. assert. assertequals ( columnnames, name )
[3]: org. junit. assert. assertequals ( columnnames. get ( 1 ), name )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "1" , s )
[0]: org. junit. assert. assertequals ( zoneddatetime. tostring ( ), converter. convert ( zoneddatetime ) )
[1]: org. junit. assert. assertequals ( zoneddatetime. tostring ( ), converter. serialize ( zoneddatetime ) )
[2]: org. junit. assert. assertequals ( zoneddatetime. tostring ( ), converter. format ( zoneddatetime ) )
[3]: org. junit. assert. assertnotnull ( zoneddatetime. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( converter. tostring ( zoneddatetime ) )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. asserttrue ( nodes. isempty ( ) )
[1]: org. junit. assert. assertnull ( com. psddev. dari. util. dateutils. tosimpleelapsedtime ( null ) )
[2]: org. junit. assert. assertnull ( com. psddev. dari. util. dateutils. tosimpleelapsedtime ( new java. util. date ( ) ) )
[3]: org. junit. assert. assertnull ( com. psddev. dari. util. dateutils. tosimpleelapsedtime ( java. util. date. class ) )
[4]: org. junit. assert. assertnull ( com. psddev. dari. util. dateutils. tosimpleelapsedtime ( java. util. date. gettime ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( types . length , index . estimatetotalcount ( ) )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertnull ( result. data )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert.null ( result )

************

************
tgt: org . junit . assert . assertequals ( "" , log )
[0]: org. junit. assert. assertnotnull ( promise. cause ( ) )
[1]: org. junit. assert. asserttrue ( promise. cause ( ) )
[2]: org. junit. assert. assertsame ( cause, promise )
[3]: org. junit. assert. assertsame ( cause )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( thing )
[0]: org. junit. assert. assertnotnull ( worker )
[1]: org. junit. assert. assertnotnull ( worker. process )
[2]: org. junit. assert. assertnotnull ( worker. future )
[3]: org. junit. assert. assertnotnull ( out )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( expectedresp, org. apache. bookkeeper. common. concurrent. futureutils. result ( rrstore. serialize ( expectedreq ) ) )
[1]: org. junit. assert. assertequals ( expectedresp, org. apache. bookkeeper. common. concurrent. futureutils. result ( rrstore. collect ( expectedreq ) ) )
[2]: org. junit. assert. assertequals ( expectedresp, org. apache. bookkeeper. common. concurrent. futureutils. result ( rrstore ) )
[3]: org. junit. assert. assertequals ( expectedresp, org. apache. bookkeeper. common. concurrent. futureutils. result ( rrstore. tostring ( ) ) )
[4]: org. junit. assert. assertequals ( expectedresp, org. apache. bookkeeper. common. concurrent. futureutils. result ( rrstore. getid ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , io . datakernel . http . testutils . tobytearray ( socket . getinputstream ( ) ) . length )
[0]: org. junit. assert. assertequals ( 1, events. size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( events. size ( ) ) == 1 ) )
[2]: org. junit. assert. asserttrue ( ( ( events. size ( ) ) == 4 ) )
[3]: org. junit. assert. assertnotnull ( events )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( lyrics , recovered )
[0]: org. junit. assert. assertequals ( 1, result. getfailurecount ( ) )
[1]: org. junit. assert. assertequals ( 0, result. getfailurecount ( ) )
[2]: org. junit. assert. assertequals ( 3, result. getfailurecount ( ) )
[3]: org. junit. assert. assertequals ( list. size ( ), backlog. size ( ) )
[4]: org. junit. assert. assertequals ( 1, backlog. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertequals ( 2, backlog. size ( ) )
[1]: org. junit. assert. assertequals ( 3, backlog. size ( ) )
[2]: org. junit. assert. assertequals ( list. size ( ), backlog. count ( ) )
[3]: org. junit. assert. assertequals ( 10, generatedtests. size ( ) )
[4]: org. junit. assert. assertequals ( 1, generatedtests. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , model . size ( ) )
[0]: org. junit. assert. assertequals ( 100, generatedtests. size ( ) )
[1]: org. junit. assert. assertequals ( 0, generatedtests. size ( ) )
[2]: org. junit. assert. assertnotnull ( datefield. getcomponenterror ( ) )
[3]: org. junit. assert. assertequals ( date, datefield. getcomponenterror ( ) )
[4]: org. junit. assert. assertnotnull ( result. tostring ( r ) )

************

************
tgt: org . junit . assert . assertnull ( i )
[0]: org. junit. assert. assertequals ( r, result. tostring ( r ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( r ), result )
[2]: org. junit. assert. assertequals ( r. tostring ( r ), result. tostring ( ) )
[3]: org. junit. assert. assertequals ( r. tostring ( r ), result )
[4]: org. junit. assert. assertequals ( 1, board. getnumberofqueensonboard ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( srcdata , dstregiondata )
[0]: org. junit. assert. assertequals ( expected, multi )
[1]: org. junit. assert. assertequals ( expected, multi )
[2]: org. junit. assert. assertequals ( expected, multi ;
[3]: _1. get ( multi ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( studies . size ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( big, pool. borrow ( big, zeroed ) )
[1]: org. junit. assert. assertsame ( big, pool. borrow ( big, zeroed ) )
[2]: org. junit. assert. assertequals ( big, pool. borrow ( big, false ) )
[3]: org. junit. assert. assertequals ( big, pool )
[4]: org. junit. assert. assertsame ( big, pool )

************

************
tgt: org . junit . assert . assertthat ( runner . getenvironmentid ( ) , org . hamcrest . core . is . is ( org . eclipse . che . ide . ext . runner . client . models . runnerimpltest . text ) )
[0]: org. junit. assert. assertequals ( 0, bean. csv ( null, beanwriter ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, bean. csv ( null, beanwriter ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, bean. csv ( 1, beanwriter ). size ( ) )
[3]: org. junit. assert. assertequals ( null, bean. csv ( null, beanwriter ) )
[4]: org. junit. assert. assertequals ( 0, bean. csv ( null, beanwriter ). length )

************

************
tgt: org . junit . assert . assertequals ( 6 , expressiestrings . size ( ) )
[0]: org. junit. assert. assertequals ( 0, store2. getrepositories ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, store2. getrepositories ( ). size ( ) )
[2]: org. junit. assert. assertequals ( assertequals ( 0, store2. getrepositories ( ). size ( ) )
[3]: org. junit. assert. assertequals ( null, store2. getrepositories ( ). get ( 0 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new byte [ ] { 0 , 1 , 2 , 4 , 5 , 6 , 7 } , id )
[0]: org. junit. assert. assertfalse ( ic. imageequaltoreference ( screenshotimage, referenceimage, referenceimage, 0 ) )
[1]: org. junit. assert. assertfalse ( ic. imageequaltoreference ( screenshotimage, referenceimage, ""name"", 0 ) )
[2]: org. junit. assert. assertfalse ( ic. imageequaltoreference ( screenshotimage, referenceimage, ""foo"", 0 ) )
[3]: org. junit. assert. assertfalse ( ic. imageequaltoreference ( screenshotimage, referenceimage, null, 0 ) )
[4]: org. junit. assert. assertfalse ( ic. imageequaltoreference ( screenshotimage, referenceimage, 1, 0 ) )

************

************
tgt: org . junit . assert . assertequals ( result , "success" )
[0]: org. junit. assert. asserttrue ( org. apache. shardingsphere. api. hint. hintmanager. ismasterrouteonly ( ) )
[1]: org. junit. assert. assertequals ( 1, results. size ( ) )
[2]: org. junit. assert. assertequals ( 0, results. size ( ) )
[3]: org. junit. assert. assertequals ( 3, results. size ( ) )
[4]: org. junit. assert. assertequals ( 2, results. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "hello" , lookup )
[0]: org. junit. assert. assertequals ( 1, model. getbeans ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, model. getbeans ( ). size ( ) )
[2]: org. junit. assert. assertequals ( ""a"", model. getbeans ( ). get ( 0 ) )
[3]: org. junit. assert. assertequals ( ""test"", model. getbeans ( ). get ( 0 ) )
[4]: org. junit. assert. assertequals ( 1, model. getbeans ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( manager . heartbeat ( "bar" ) , org . hamcrest . matchers . is ( ( - 1l ) ) )
[0]: org. junit. assert. asserttrue ( stmt. ispoolable ( ) )
[1]: org. junit. assert. assertfalse ( result. iserror ( ) )
[2]: org. junit. assert. assertequals ( 0, state. length ( ) )
[3]: org. junit. assert. assertequals ( 1, state. length ( ) )
[4]: org. junit. assert. assertequals ( 3, state. length ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertequals ( length, state. length ( ) )
[1]: org. junit. assert. assertequals ( length ( ), state. length ( )
[2]: org. junit. assert. assertfalse ( year. equals ( year ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), year. equals ( year ) )
[4]: org. junit. assert. assertequals ( true, year. equals ( year ) )

************

************
tgt: org . junit . assert . asserttrue ( issues . tostring ( ) , issues . isempty ( ) )
[0]: org. junit. assert. assertequals ( exp, r )
[1]: org. junit. assert. assertequals ( r, expresscontext )
[2]: org. junit. assert. assertnotnull ( r )
[3]: org. junit. assert. assertequals ( null, r )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 1, container. innerhtml )
[1]: org. junit. assert. assertequals ( 0, container. innerhtml )
[2]: org. junit. assert. assertequals ( viewroot, container )
[3]: org. junit. assert. assertequals ( root, container )
[4]: test fixture for

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: org. junit. assert. assertthat ( actual, isavailabletype ( ) )
[1]: org. junit. assert. assertthat ( actual, isavailabletype ( expected ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertfalse ( actual )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: org. junit. assert. assertsame ( none, pa. getaccesslevel ( ) )
[1]: org. junit. assert. assertequals ( none, pa. getaccesslevel ( ) )
[2]: org. junit. assert. assertnull ( pa. getaccesslevel ( ) )
[3]: org. junit. assert. assertnotnull ( pa. getaccesslevel ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: org. junit. assert. assertequals ( expected, result )
[1]: org. junit. assert. assertequals ( 1, berichtendiederegelovertreden. size ( ) )
[2]: org. junit. assert. assertnull ( element )
[3]: org. junit. assert. assertnotnull ( element )
[4]: org. junit. assert. assertsame ( element, element )

************

************
tgt: org . junit . assert . assertequals ( previous , org . drools . eclipse . editors . completion . completionutil . getinnerexpression ( backtext ) )
[0]: org. junit. assert. assertnull ( element. name )
[1]: org. junit. assert. assertequals ( null, element )
[2]: org. junit. assert. assertequals ( trip, expression. gettripshortname ( ) )
[3]: org. junit. assert. assertequals ( trip. gettripshortname ( ), null )
[4]: org. junit. assert. assertequals ( trip, bean. gettripshortname ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( responsecontent )
[0]: org. junit. assert. assertequals ( trip, model. gettripshortname ( ) )
[1]: org. junit. assert. assertequals ( trip. gettripshortname ( ), 1 )
[2]: org. junit. assert. assertequals ( match, matchecounts [ 1 ] )
[3]: org. junit. assert. assertequals ( match, matchecounts [ 2 ] )
[4]: org. junit. assert. assertequals ( match, matchecounts [ 0 ] )

************

************
tgt: org . junit . assert . assertequals ( "abc" , p . tostring ( ) )
[0]: org. junit. assert. assertequals ( match, matchecounts [ ( matchecounts. length ) ] )
[1]: org. junit. assert. assertequals ( match, matchecounts [ ( matchecounts [ 0 ] ) )
[2]: org. junit. assert. assertnotnull ( patientcaptor. getvalue ( ). getidentifierfirstrep ( ). getvalue ( ) )
[3]: org. junit. assert. assertequals ( patientcaptor. getvalue ( ). getidentifierfirstrep ( ). getvalue ( ), resource. tostring ( ) )
[4]: org. junit. assert. assertnotnull ( patientcaptor. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( column , fromproto )
[0]: . getvalue ( ) )
[1]: ) )
[2]: org. junit. assert. assertarrayequals ( l, deserialize )
[3]: org. junit. assert. assertequals ( l, deserialize )
[4]: org. junit. assert. assertarrayequals ( l, deserialized )

************

************
tgt: org . junit . assert . assertthat ( allresourcepermissions . isempty ( ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertsame ( l, deserialize )
[1]: org. junit. assert. assertarrayequals ( l, deserializ )
[2]: org. junit. assert. assertnotnull ( transactionid )
[3]: org. junit. assert. asserttrue ( ( transactionid instanceof io. motown. domain. api. chargingstation ) )
[4]: org. junit. assert. asserttrue ( ( transactionid == null ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , geoddiams . size ( ) )
[0]: org. junit. assert. asserttrue ( ( transactionid!= null ) )
[1]: org. junit. assert. assertnull ( transactionid )
[2]: org. junit. assert. assertequals ( list, longest )
[3]: org. junit. assert. assertequals ( there, longest )
[4]: org. junit. assert. assertequals ( null, longest )

************

************
tgt: org . junit . assert . asserttrue ( impl . isrevalidatable ( entry ) )
[0]: org. junit. assert. assertequals ( item, longest )
[1]: ) )
[2]: org. junit. assert. assertequals ( input, microsoft. exchange. webservices. data. core. ewsutilities. parse ( java. util. date. class, input ) )
[3]: org. junit. assert. assertequals ( input, microsoft. exchange. webservices. data. core. ewsutilities. parse ( java. lang. string. class, input ) )
[4]: org. junit. assert. assertequals ( 0, cmp. compare ( d1, d2 ) )

************

************
tgt: org . junit . assert . assertequals ( querystring , qs . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, cmp. compare ( d1, d2 ) )
[1]: org. junit. assert. assertequals ( 1, compare ( d1, d2 ) )
[2]: org. junit. assert. assertequals ( 0, compare ( d1, d2 ) )
[3]: org. junit. assert. assertequals ( 1, compare ( d1, cmp ) )
[4]: org. junit. assert. assertequals ( true, actual )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( false, actual )
[1]: org. junit. assert. assertequals ( 1, actual )
[2]: org. junit. assert. assertfalse ( actual )
[3]: org. junit. assert. assertequals ( true, actual )
[4]: org. junit. assert. assertthat ( allowed, org. hamcrest. matchers. is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( m . int2intentryset ( ) , s )
[0]: org. junit. assert. assertthat ( allowed, org. hamcrest. assertthat ( true ) )
[1]: org. junit. assert. assertthat ( allowed, is ( true ) )
[2]: org. junit. assert. assertthat ( allowed )
[3]: ( true ) )
[4]: org. junit. assert. assertequals ( 1, result. passedvalidation ( ) )

************

************
tgt: org . junit . assert . assertthat ( cacheloader . getloadcount ( ) , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert. assertequals ( f. value ( solution ), f. tostring ( ) )
[1]: org. junit. assert. assertequals ( f. value ( solution ), f. random ( ), 0.0 )
[2]: org. junit. assert. assertequals ( f. value ( solution ), f. get ( ), 0.0 )
[3]: org. junit. assert. assertequals ( f. value ( solution ), f. random ( ) )
[4]: org. junit. assert. assertequals ( f. value ( solution ), f. random ( ), 0 )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( data, sink. b ( v ) )
[1]: org. junit. assert. assertequals ( data, b ( v ) )
[2]: org. junit. assert. assertequals ( data. get ( v ), sink. b ( v ) )
[3]: org. junit. assert. assertequals ( data, source. b ( v ) )
[4]: org. junit. assert. assertequals ( data. get ( v ), source. b ( v ) )

************

************
tgt: org . junit . assert . assertequals ( "1" , result [ 0 ] )
[0]: org. junit. assert. assertnotnull ( placeholder )
[1]: org. junit. assert. assertnotnull ( session )
[2]: org. junit. assert. assertnotnull ( statement )
[3]: org. junit. assert. assertnotnull ( queu )
[4]: )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( java . util . collections . emptylist ( ) ) )
[0]: org. junit. assert. asserttrue ( arespure. isvalidschematron ( ) )
[1]: org. junit. assert. assertnotnull ( fetch )
[2]: org. junit. assert. assertequals ( simple, fetch )
[3]: org. junit. assert. assertnotnull ( fetch. getid ( ) )
[4]: org. junit. assert. assertnull ( fetch )

************

************
tgt: org . junit . assert . asserttrue ( prop )
[0]: ) )
[1]: org. junit. assert. assertfalse ( msafemodemanager. isinsafemode ( ) )
[2]: org. junit. assert. assertequals ( vals, java. util. arrays. aslist ( arr1. gettbarsizedim ( ) ) )
[3]: org. junit. assert. assertequals ( vals, java. util. arrays. aslist ( new java. lang. double [ ] { } ) )
[4]: org. junit. assert. assertequals ( vals, java. util. arrays. aslist ( java. util. optional. of ( arr1. gettbarsizedim ( ) ) ) )

************

************
tgt: org . junit . assert . assertequals ( 7 , groups . size ( ) )
[0]: org. junit. assert. assertequals ( vals, java. util. arrays. aslist ( ) )
[1]: org. junit. assert. assertequals ( vals, java. util. arrays. aslist ( arr1. gettbarsizedim ( ), arr2 ) )
[2]: org. junit. assert. asserttrue ( iterator. hasnext ( ) )
[3]: org. junit. assert. assertequals ( 1, instance. getstarttime ( ) )
[4]: org. junit. assert. assertnotnull ( instance. getstarttime ( ) )

************

************
tgt: org . junit . assert . assertsame ( expected , iterator . next ( ) )
[0]: org. junit. assert. assertequals ( 0, instance. getstarttime ( ) )
[1]: org. junit. assert. assertequals ( 1l, instance. getstarttime ( ) )
[2]: ) )
[3]: org. junit. assert. assertfalse ( c1. equals ( c2 ) )
[4]: org. junit. assert. asserttrue ( c1. equals ( c2 ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , res )
[0]: org. junit. assert. assertequals ( c1. equals ( c2 ), true )
[1]: org. junit. assert. assertequals ( true, c1. equals ( c2 ) )
[2]: org. junit. assert. assertequals ( false, c1. equals ( c2 ) )
[3]: org. junit. assert. assertequals ( 1, expressie. aantalelementen ( ) )
[4]: org. junit. assert. assertequals ( 2, expressie. aantalelementen ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertequals ( 0, expressie. aantalelementen ( ) )
[1]: org. junit. assert. assertequals ( 6, expressie. aantalelementen ( ) )
[2]: org. junit. assert. assertequals ( spdconstants. notificationtype. non_receipt, mandatorysubject. tospdstring ( ) )
[3]: org. junit. assert. assertequals ( ""1"", mandatorysubject. tospdstring ( ) )
[4]: org. junit. assert. assertnotnull ( mandatorysubject. tospdstring ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , result . size ( ) )
[0]: org. junit. assert. assertequals ( ""a"", mandatorysubject. tospdstring ( ) )
[1]: org. junit. assert. assertequals ( ""foo"", mandatorysubject. tospdstring ( ) )
[2]: org. junit. assert. assertequals ( 1, terms. size ( ) )
[3]: org. junit. assert. assertequals ( 2, terms. size ( ) )
[4]: org. junit. assert. assertthat ( annotations, org. hamcrest. corematchers. contains ( org. junit. experimental. theories. suppliers. testedon ) )

************

************
tgt: org . junit . assert . assertequals ( application , svc . getapplicationname ( ) )
[0]: org. junit. assert. assertequals ( 1, annotations. size ( ) )
[1]: org. junit. assert. assertequals ( 8, annotations. size ( ) )
[2]: org. junit. assert. assertequals ( 0, annotations. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( user , u )
[0]: org. junit. assert. assertnull ( result )
[1]: org. junit. assert. assertequals ( null, result )
[2]: org. junit. assert. assertequals ( ""test"", result )
[3]: org. junit. assert. assertequals ( ""foo"", result )
[4]: org. junit. assert. asserttrue ( schema. isunion ( ) )

************

************
tgt: org . junit . assert . assertnull ( net . bpelunit . util . xmlutil . getcontentsoftextonlynode ( e ) )
[0]: org. junit. assert. assertequals ( 1, engines. size ( ) )
[1]: org. junit. assert. assertequals ( 0, engines. size ( ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), engines. size ( ) )
[3]: org. junit. assert. assertequals ( 3, engines. size ( ) )
[4]: org. junit. assert. assertequals ( 1l, engines. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( iterator . hasnext ( ) )
[0]: org. junit. assert. assertarrayequals ( bs, data )
[1]: org. junit. assert. assertarrayequals ( bs. length, data )
[2]: org. junit. assert. assertarrayequals ( bs. getbytes ( ), data )
[3]: org. junit. assert. assertarrayequals ( bs. array ( ), data )
[4]: org. junit. assert. assertnotnull ( data )

************

************
tgt: org . junit . assert . asserttrue ( resultaat . issuccesvol ( ) )
[0]: org. junit. assert. asserttrue ( result )
[1]: org. junit. assert. assertequals ( value, bean. container. value )
[2]: org. junit. assert. assertequals ( null, bean. container. value )
[3]: org. junit. assert. assertequals ( ""b"", bean. container. value )
[4]: org. junit. assert. assertequals ( 0, bean. container. value )

************

************
tgt: org . junit . assert . assertfalse ( validator . isvalid ( actie , null ) )
[0]: org. junit. assert. assertequals ( ""b"", bean. container. value )
[1]: org. junit. assert. assertnull ( org. opendaylight. protocol. bgp. state. neighborutil. buildneighborstate ( null, new org. opendaylight. protocol. bgp. rib. spi. state. bgppeermessagesstate ( ) ) )
[2]: org. junit. assert. assertnull ( testcache. getkeypropertiesperbean ( ) )
[3]: org. junit. assert. assertequals ( 0, testcache. getkeypropertiesperbean ( ). length )
[4]: org. junit. assert. assertequals ( """", testcache. getkeypropertiesperbean ( ) )

************

************
tgt: org . junit . assert . assertequals ( "enabled" 3 , s . tostring ( ) )
[0]: org. junit. assert. assertequals ( null, testcache. getkeypropertiesperbean ( ) )
[1]: org. junit. assert. assertequals ( 0, testcache. getkeypropertiesperbean ( ) )
[2]: org. junit. assert. assertequals ( expected, uri )
[3]: org. junit. assert. assertequals ( expected, url )
[4]: , uri )

************

************
tgt: org . junit . assert . asserttrue ( message . isdurable ( ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( 1, sum )
[4]: org. junit. assert. assertequals ( 0, sum )

************

************
tgt: org . junit . assert . assertnotnull ( user . getcreated ( ) )
[0]: org. junit. assert. assertequals ( 1, ( sum + sum ) )
[1]: org. junit. assert. assertequals ( 1, ( sum / sum ) )
[2]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), sum )
[3]: org. junit. assert. assertfalse ( command. getexists ( ) )
[4]: org. junit. assert. assertequals ( paths, command. getexists ( ) )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . float ( 0 ) , minpreference )
[0]: org. junit. assert. assertnull ( command. getexists ( ) )
[1]: org. junit. assert. assertequals ( true, command. getexists ( ) )
[2]: org. junit. assert. asserttrue ( criteriareader. start ( ) )
[3]: org. junit. assert. assertequals ( fork1, onescenario )
[4]: org. junit. assert. assertequals ( fork1, onescenario2 )

************

************
tgt: org . junit . assert . assertthat ( resultlist . size ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( fork1, onescenariodata )
[1]: org. junit. assert. assertnotnull ( fork1 )
[2]: ) )
[3]: org. junit. assert. assertnull ( qscallback. convert ( reply ) )
[4]: org. junit. assert. assertnull ( qscallback. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( "get" , request . getmethod ( ) )
[0]: org. junit. assert. assertnull ( qscallback. getvalue ( ) )
[1]: org. junit. assert. assertnotnull ( qscallback. convert ( reply ) )
[2]: org. junit. assert. assertsame ( b. get ( ), reply )
[3]: org. junit. assert. assertequals ( mergedrecord, java. util. arrays. aslist ( outputrecord, kvschema ) )
[4]: org. junit. assert. assertequals ( mergedrecord, outputrecord )

************

************
tgt: org . junit . assert . asserttrue ( value . asobject ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( mergedrecord, java. util. collections. singletonlist ( kvschema ) )
[1]: org. junit. assert. assertequals ( mergedrecord, java. util. arrays. aslist ( outputrecord ) )
[2]: org. junit. assert. assertequals ( mergedrecord, resultrecord )
[3]: org. junit. assert. assertnotnull ( saved )
[4]: org. junit. assert. assertequals ( 1, saved. get ( 1 ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , facetutil . facetinstallset . size ( ) )
[0]: org. junit. assert. assertequals ( 1, saved. get ( 0 ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, saved. get ( 0 ) )
[2]: org. junit. assert. assertequals ( null, saved )
[3]: org. junit. assert. assertnotnull ( decoded )
[4]: org. junit. assert. assertequals ( splits )

************

************
tgt: org . junit . assert . assertfalse ( cachemanager . getcachenames ( ) . iterator ( ) . hasnext ( ) )
[0]: , decoded )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertnotnull ( request. getjson ( ) )
[4]: org. junit. assert. assertequals ( name, request. getjson ( ) )

************

************
tgt: org . junit . assert . assertequals ( metricname , locator . getmetricname ( ) )
[0]: org. junit. assert. assertnull ( request. getjson ( ) )
[1]: org. junit. assert. asserttrue ( request. getjson ( ). isempty ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, versions. size ( ) )
[4]: org. junit. assert. assertequals ( 1, versions. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( generatedjavascript , expectedjavascript )
[0]: org. junit. assert. assertnotnull ( versions )
[1]: org. junit. assert. assertnull ( versions )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, hudson. model. getrelativelinkto ( m ) )
[4]: org. junit. assert. assertequals ( 1, hudson. model. getrelativelinkto ( m ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , resultaat . getmeldingen ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( 0, hudson. functions. getrelativelinkto ( m ) )
[1]: org. junit. assert. assertequals ( 0, hudson. model. getrelativelinkto ( m ). length )
[2]: org. junit. assert. assertequals ( 0, hudson. model. getrelativelinkto ( m ). size ( )
[3]: org. junit. assert. assertnotnull ( connection )
[4]: org. junit. assert. assertequals ( handler. brokeradded ( null, connection ), connection )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . equalto ( applicationdtos ) )
[0]: org. junit. assert. assertnotnull ( connection. connection )
[1]: , connection )
[2]: ) )
[3]: org. junit. assert. assertequals ( socketaddress, address )
[4]: org. junit. assert. assertequals ( expect, root )

************

************
tgt: org . junit . assert . assertnotnull ( e . getmessage ( ) )
[0]: org. junit. assert. assertequals ( expect )
[1]: ) )
[2]: )
[3]: 
[4]: org. junit. assert. assertequals ( entity, path. gettype ( ) )

************

************
tgt: org . junit . assert . assertnull ( request . getinputstream ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. class, path. gettype ( ) )
[1]: org. junit. assert. assertequals ( entity. gettype ( ), path. gettype ( ) )
[2]: org. junit. assert. assertequals ( 1, path. gettype ( ). size ( ) )
[3]: type ) )
[4]: org. junit. assert. assertequals ( true, clientcachefactorybean. iskeepalive ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . google . common . collect . lists . newarraylist ( new com . ctrip . xpipe . redis . core . proxy . endpoint . defaultproxyendpoint ( "proxytls://10.5.111.148:443" ) ) , protocol . nextendpoints ( ) )
[0]: org. junit. assert. assertequals ( false, clientcachefactorybean. iskeepalive ( ) )
[1]: org. junit. assert. assertfalse ( clientcachefactorybean. iskeepalive ( ) )
[2]: org. junit. assert. asserttrue ( clientcachefactorybean. iskeepalive ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, terms. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( org . apache . tinkerpop . gremlin . structure . util . elementhelper . areequal ( p1 , p2 ) )
[0]: org. junit. assert. assertequals ( 0, multiarray. length )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), multiarray )
[2]: org. junit. assert. assertequals ( 1, multiarray. length )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1 ), multiarray )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2 ), multiarray )

************

************
tgt: org . junit . assert . assertequals ( false , options . isrecursive ( ) )
[0]: org. junit. assert. assertarrayequals ( resutlst, resutlst )
[1]: org. junit. assert. assertarrayequals ( testarray, resutlst )
[2]: org. junit. assert. assertarrayequals ( resutlst, testarray )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( harresponse. default_size, request. getbodysize ( ) )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 0 ), request. getbodysize ( ) )
[2]: org. junit. assert. assertequals ( 1, request. getbodysize ( ) )
[3]: org. junit. assert. assertequals ( 0, request. getbodysize ( ) )
[4]: org. junit. assert. assertequals ( null, request. getbodysize ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . google . common . collect . lists . newarraylist ( 1 , 2 , 3 , 4 , 5 ) , listbad )
[0]: org. junit. assert. assertequals ( 1, result. getlongposition ( 0 ) )
[1]: org. junit. assert. assertequals ( 0, result. getlongposition ( 1 ) )
[2]: org. junit. assert. assertequals ( 1, result. getlongposition ( 1 ) )
[3]: org. junit. assert. assertequals ( 0, result. getlongposition ( 0 ) )
[4]: org. junit. assert. assertequals ( 0l, result. getlongposition ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( d , a . getchild ( 1 ) )
[0]: org. junit. assert. assertequals ( 1, actual )
[1]: org. junit. assert. assertequals ( 3, actual )
[2]: org. junit. assert. assertequals ( 0, actual )
[3]: org. junit. assert. assertequals ( 2, actual )
[4]: org. junit. assert. asserttrue ( ( actual > 0 )

************

************
tgt: org . junit . assert . assertthat ( panel . getwidgetcount ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( null, request. getheader ( null ) )
[1]: org. junit. assert. assertnull ( request. getheader ( null ) )
[2]: org. junit. assert. assertequals ( 0, request. getheader ( null ). length )
[3]: org. junit. assert. assertequals ( null, request. getheader ( 0 ) )
[4]: testl )

************

************
tgt: org . junit . assert . asserttrue ( threwexception )
[0]: org. junit. assert. assertequals ( 1, position )
[1]: org. junit. assert. assertequals ( 0, position )
[2]: org. junit. assert. assertequals ( 3, position )
[3]: org. junit. assert. assertequals ( 12, position )
[4]: org. junit. assert. assertequals ( position, 1 )

************

************
tgt: org . junit . assert . assertequals ( 1 , props . size ( ) )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertequals ( result, 1 )
[2]: org. junit. assert. assertequals ( 0, result )
[3]: org. junit. assert. assertequals ( 3, result )
[4]: result )

************

************
tgt: org . junit . assert . assertnull ( entity )
[0]: org. junit. assert. assertequals ( 1, each. getbyte ( 1 ) )
[1]: org. junit. assert. assertequals ( 0, each. getbyte ( 1 ) )
[2]: org. junit. assert. assertequals ( 1, ( ( int ) ( each. getbyte ( 1 ) ) ) )
[3]: org. junit. assert. assertequals ( 1, each. getbyte ( 0 ) )
[4]: org. junit. assert. assertequals ( 1, ( ( int ) ( each. getbyte ( 0 ) ) ) )

************

************
tgt: org . junit . assert . asserttrue ( f . exists ( ) )
[0]: org. junit. assert. assertequals ( value, hit )
[1]: org. junit. assert. assertequals ( result, hit )
[2]: org. junit. assert. assertsame ( value, hit )
[3]: org. junit. assert. assertnotnull ( hit )
[4]: org. junit. assert. assertequals ( value, hit. get ( key ) )

************

************
tgt: org . junit . assert . assertequals ( 8 , buf1 . remaining ( ) )
[0]: org. junit. assert. asserttrue ( ledgerset. contains ( ledgerset ) )
[1]: org. junit. assert. asserttrue ( ledgerset. contains ( new java. lang. object ( ) ) )
[2]: org. junit. assert. asserttrue ( ledgerset. contains ( ledgerset. get ( 0 ) ) )
[3]: org. junit. assert. asserttrue ( ledgerset. contains ( null ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, count )
[1]: org. junit. assert. assertequals ( 0, count )
[2]: org. junit. assert. assertequals ( 1l, count )
[3]: org. junit. assert. assertequals ( 200, result. stringmember ( ) )
[4]: org. junit. assert. assertequals ( 1, result. stringmember ( ) )

************

************
tgt: org . junit . assert . assertnull ( namespace )
[0]: org. junit. assert. assertequals ( ""foo"", result. stringmember ( ) )
[1]: org. junit. assert. assertequals ( true, result. stringmember ( ) )
[2]: org. junit. assert. assertequals ( ""foo"", result. stringmember ( ) )
[3]: org. junit. assert. assertequals ( 1, deletedobjectservice. countdeletedobjects ( ) )
[4]: org. junit. assert. assertequals ( 0, deletedobjectservice. countdeletedobjects ( ) )

************

************
tgt: org . junit . assert . assertthat ( projectchanges . getpageelements ( ) . size ( ) , org . hamcrest . matchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( 1, deletedobjectservice. countsdeletedobjects ( ) )
[1]: org. junit. assert. assertequals ( 1, deleteobjectservice. countdeletedobjects ( ) )
[2]: org. junit. assert. assertequals ( 1, deletedobjectservice. countdeletedobjects ( ) ) )
[3]: org. junit. assert. assertequals ( 1, cacheprovider. getcachettl ( ) )
[4]: org. junit. assert. assertequals ( 1, capturingfetcher. getcachettl ( ) )

************

************
tgt: org . junit . assert . assertnull ( updated )
[0]: org. junit. assert. assertnotnull ( capturingfetcher. getcachettl ( ) )
[1]: org. junit. assert. assertequals ( 1, cachingprovider. getcachettl ( ) )
[2]: org. junit. assert. assertequals ( 1, cachedprovider. getcachettl ( ) )
[3]: org. junit. assert. asserttrue ( fastqbuilder. sequenceandqualitylengthsmatch ( ) )
[4]: org. junit. assert. assertfalse ( fastqbuilder. sequenceandqualitylengthsmatch ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( tt2 == tt ) )
[0]: org. junit. assert. assertequals ( true, fastqbuilder. sequenceandqualitylengthsmatch ( ) )
[1]: org. junit. assert. assertequals ( 0, partition. size ( ) )
[2]: org. junit. assert. assertfalse ( mandatorysubject. validate ( ) )
[3]: org. junit. assert. asserttrue ( mandatorysubject. validate ( ) )
[4]: org. junit. assert. assertequals ( minpartitions, lst. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , elements )
[0]: org. junit. assert. assertequals ( 1, lst. size ( ) )
[1]: org. junit. assert. assertequals ( 0, lst. size ( ) )
[2]: org. junit. assert. assertequals ( 5, lst. size ( ) )
[3]: org. junit. assert. assertequals ( maxpartitions, lst. size ( ) )
[4]: org. junit. assert. assertequals ( asset, undertest. formatattributes ( ). get ( ) )

************

************
tgt: org . junit . assert . assertequals ( command , command2 )
[0]: org. junit. assert. assertequals ( asset, undertest. formatattributes ( ) )
[1]: org. junit. assert. assertthat ( asset. formatattributes ( ), org. hamcrest. matchers. is ( asset ) )
[2]: org. junit. assert. assertequals ( asset, undertest. formatattributes ( ). get ( ""homepage_2 ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( timestamp, basetimestamp )

************

************
tgt: org . junit . assert . asserttrue ( page . hasglobalerror ( ) )
[0]: org. junit. assert. asserttrue ( ( timestamp == basetimestamp ) )
[1]: org. junit. assert. assertequals ( timestamp, basetimestamp, basetimestamp )
[2]: org. junit. assert. asserttrue ( ( timestamp < basetimestamp ) )
[3]: org. junit. assert. asserttrue ( ( timestamp > basetimestamp ) )
[4]: org. junit. assert. assertequals ( 1, list. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( r1 . contains ( d ) )
[0]: org. junit. assert. assertequals ( 0, ex. getcauses ( ). length )
[1]: org. junit. assert. assertequals ( 1, ex. getcauses ( ). length )
[2]: org. junit. assert. assertnotnull ( ex. getcauses ( ) )
[3]: org. junit. assert. assertnull ( ex. getcauses ( ) )
[4]: org. junit. assert. assertequals ( 0, ex. getcauses ( ). size ( )

************

************
tgt: org . junit . assert . assertequals ( 1 , graph . size ( ) )
[0]: org. junit. assert. assertequals ( 1, actual )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), actual )
[2]: org. junit. assert. assertequals ( null, actual )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), actual )
[4]: org. junit. assert. assertequals ( java. util. optional. empty ( ), actual )

************

************
tgt: org . junit . assert . asserttrue ( parentgrid . containschild ( grida ) )
[0]: org. junit. assert. assertequals ( 1, this. list. size ( ) )
[1]: org. junit. assert. assertequals ( 1, count )
[2]: org. junit. assert. assertequals ( 1, 1 )
[3]: org. junit. assert. assertequals ( 1, this. collection. size ( ) )
[4]: org. junit. assert. assertequals ( 1, this. stack. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( e . getcause ( ) . getmessage ( ) . contains ( "artificial<sp>async<sp>failure<sp>for<sp>2nd<sp>message" ) )
[0]: org. junit. assert. assertequals ( groups, controller. list ( ) )
[1]: org. junit. assert. assertequals ( groups, controller. count ( ) )
[2]: org. junit. assert. assertequals ( groups, controller. collection ( ) )
[3]: org. junit. assert. assertequals ( groups, controller. items ( ) )
[4]: org. junit. assert. assertequals ( groups, controller. repository )

************

************
tgt: org . junit . assert . assertequals ( control , test )
[0]: org. junit. assert. assertnotnull ( edit )
[1]: org. junit. assert. assertequals ( null, edit )
[2]: org. junit. assert. assertnull ( edit )
[3]: org. junit. assert. assertnotnull ( edits )
[4]: org. junit. assert. assertnotnull ( editor )

************

************
tgt: org . junit . assert . asserttrue ( getnoerrormsg ( ) , result )
[0]: org. junit. assert. assertequals ( 0, repository. calculate ( start, 0 ) )
[1]: org. junit. assert. assertequals ( 0, repository. calculate ( start, 1 ) )
[2]: org. junit. assert. assertequals ( 0, s. calculate ( start, 1 ) )
[3]: org. junit. assert. assertequals ( 0, s. calculate ( start, 0 ) )
[4]: org. junit. assert. assertequals ( 0, repository. calculate ( start, ( - 1 ) )

************

************
tgt: org . junit . assert . assertfalse ( page . isdisambiguation ( ) )
[0]: org. junit. assert. assertequals ( 1, soydstrates ( null, null ). size ( ) )
[1]: org. junit. assert. assertnotnull ( assignmigrates ( null, null ) )
[2]: org. junit. assert. assertequals ( 1, assignmigrates ( null, null ). size ( ) )
[3]: org. junit. assert. assertnotnull ( assignmigrates ( null, compliancedstadefinition ) )
[4]: org. junit. assert. assertequals ( 1, this. assignmigrates ( null, null ) )

************

************
tgt: org . junit . assert . assertthat ( crossingcount , org . hamcrest . corematchers . is ( 4 ) )
[0]: org. junit. assert. assertequals ( 1, phaselistenermanager. getphaselisteners ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), phaselistenermanager. getphaselisteners ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( phaselistener ), phaselistenermanager. getphaselisteners ( ) )
[3]: org. junit. assert. assertequals ( 0, phaselistenermanager. getphaselisteners ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), phaselistenermanager. getphaselisteners ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( rollingrandomaccessfilemanager . default_buffer_size ) * 3 ) , raf . length ( ) )
[0]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml. storageunitnotificationregistration ( resultstorageunitnotificationregistration. getid ( ), new org. finra. herd. model. api. xml. notificationregistrationkey ( org. finra. herd. service. namespace. touppercase ( ), org. finra. herd. service. notification_name. tolowercase ( ) ), notificationeventtypeentity. eventtypesstorageunit. strge_unit_stts_chg. name ( ), new org. finra. herd. model. api. xml. storageunitnotificationfilter ( org. finra. herd. service. bdef_namespace. touppercase ( ), org. finra. herd. service. bdef_name. touppercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_file_type_code. touppercase ( ), format_version. touppercase ( ), org. finra. herd. service. storage_unit_status. touppercase ( ), org. finra. herd. service. storage_unit_status_2. touppercase ( ) ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( org. finra. herd. service. namespace. touppercase ( ), org. finra. herd. service. correlation_name. tolowercase ( ) ) ), org. finra. herd. model. jpa. notificationregistrationstatusentity. enabled ), resultstorageunitnotificationregistration )
[1]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml. storageunitnotificationregistration ( resultstorageunitnotificationregistration. getid ( ), new org. finra. herd. model. api. xml. notificationregistrationkey ( org. finra. herd. service. namespace. touppercase ( ), org. finra. herd. service. notification_name. tolowercase ( ) ), notificationeventtypeentity. eventtypesstorageunit. strge_unit_stts_chg. name ( ), new org. finra. herd. model. api. xml. storageunitnotificationfilter ( org. finra. herd. service. bdef_namespace. touppercase ( ), org. finra. herd. service. bdef_name. touppercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_file_type_code. touppercase ( ), format_version. touppercase ( ), org. finra. herd. service. storage_unit_status. touppercase ( ), org. finra. herd. service. storage_unit_status_2. touppercase ( ) ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( org. finra. herd. service. namespace. touppercase ( ), org. finra. herd. service. job_name. touppercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_file_type_code. touppercase ( ), format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. storage_unit_status. touppercase ( ), org. finra. herd. service. storage_unit_status_2. touppercase ( ) ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( org. finra. herd. service. namespace. touppercase ( ), org. finra. herd. service
[2]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml. storageunitnotificationregistration ( resultstorageunitnotificationregistration. getid ( ), new org. finra. herd. model. api. xml. notificationregistrationkey ( org. finra. herd. service. namespace. touppercase ( ), org. finra. herd. service. notification_name. tolowercase ( ) ), notificationeventtypeentity. eventtypesstorageunit. strge_unit_stts_chg. name ( ), new org. finra. herd. model. api. xml. storageunitnotificationfilter ( org. finra. herd. service. bdef_namespace. touppercase ( ), org. finra. herd. service. bdef_name. touppercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_file_type_code. touppercase ( ), format_version. touppercase ( ), org. finra. herd. service. storage_unit_status. touppercase ( ), org. finra. herd. service. storage_unit_status_2. touppercase ( ) ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( org. finra. herd. service. namespace. touppercase ( ), org. finra. herd. service. job_name. touppercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_file_type_code. touppercase ( ), format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage
[3]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml. storageunitnotificationregistration ( resultstorageunitnotificationregistration. getid ( ), new org. finra. herd. model. api. xml. notificationregistrationkey ( org. finra. herd. service. namespace. touppercase ( ), org. finra. herd. service. notification_name. tolowercase ( ) ), notificationeventtypeentity. eventtypesstorageunit. strge_unit_stts_chg. name ( ), new org. finra. herd. model. api. xml. storageunitnotificationfilter ( org. finra. herd. service. bdef_namespace. touppercase ( ), org. finra. herd. service. bdef_name. touppercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_file_type_code. touppercase ( ), format_version. touppercase ( ), org. finra. herd. service. storage_unit_status. touppercase ( ), org. finra. herd. service. storage_unit_status_2. touppercase ( ) ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( org. finra. herd. service. namespace. touppercase ( ), org. finra. herd. service. job_name. touppercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_file_type_code. touppercase ( ), format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_file
[4]: org. junit. assert. assertequals ( new org. finra. herd. model. api. xml. storageunitnotificationregistration ( resultstorageunitnotificationregistration. getid ( ), new org. finra. herd. model. api. xml. notificationregistrationkey ( org. finra. herd. service. namespace. touppercase ( ), org. finra. herd. service. notification_name. tolowercase ( ) ), notificationeventtypeentity. eventtypesstorageunit. strge_unit_stts_chg. name ( ), new org. finra. herd. model. api. xml. storageunitnotificationfilter ( org. finra. herd. service. bdef_namespace. touppercase ( ), org. finra. herd. service. bdef_name. touppercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_file_type_code. touppercase ( ), format_version. touppercase ( ), org. finra. herd. service. storage_unit_status. touppercase ( ), org. finra. herd. service. storage_unit_status_2. touppercase ( ) ), java. util. arrays. aslist ( new org. finra. herd. model. api. xml. jobaction ( org. finra. herd. service. namespace. touppercase ( ), org. finra. herd. service. job_name. touppercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_file_type_code. touppercase ( ), format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage_code. tolowercase ( ), org. finra. herd. service. format_usage

************

************
tgt: org . junit . assert . assertequals ( 1234 , obj2 . get ( ) )
[0]: org. junit. assert. assertequals ( expectedstatesentity, result )
[1]: org. junit. assert. assertequals ( result, expectedstatesentity )
[2]: org. junit. assert. assertsame ( expectedstatesentity, result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( expectedstatesentity. name, result )

************

************
tgt: org . junit . assert . assertequals ( "somevalue" , str )
[0]: org. junit. assert. assertequals ( 0, jobs. size ( ) )
[1]: org. junit. assert. assertequals ( 1, jobs. size ( ) )
[2]: org. junit. assert. assertequals ( ( - 1 ), jobs. size ( ) )
[3]: org. junit. assert. assertequals ( 2, jobs. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertsame ( mockis , org . apache . bookkeeper . common . grpc . netty . identityinputstreammarshaller . of ( ) . parse ( mockis ) )
[0]: org. junit. assert. assertequals ( 1, systemoutput. err. size ( ) )
[1]: org. junit. assert. assertequals ( expected, systemoutput. err. get ( ) )
[2]: org. junit. assert. assertequals ( expected, systemoutput. err. union ( ) )
[3]: org. junit. assert. assertequals ( 1, systemoutput. err. get ( ). length )
[4]: org. junit. assert. assertequals ( 1, systemoutput. err. get ( ). 1 )

************

************
tgt: org . junit . assert . assertsame ( filter , capturedfiltered )
[0]: org. junit. assert. asserttrue ( x. equals ( x ) )
[1]: org. junit. assert. assertfalse ( x. equals ( null ) )
[2]: org. junit. assert. assertequals ( a, b, 0.0 )
[3]: org. junit. assert. assertequals ( a, b, 0 )
[4]: org. junit. assert. assertequals ( a, b, 1.0 )

************

************
tgt: org . junit . assert . assertnull ( extractor . extractservice ( request ) )
[0]: org. junit. assert. assertequals ( a, b, 1 )
[1]: org. junit. assert. assertequals ( b, a, 0.0 )
[2]: org. junit. assert. assertnotnull ( leader )
[3]: org. junit. assert. assertnotnull ( index )
[4]: org. junit. assert. assertnotnull ( state )

************

************
tgt: org . junit . assert . assertequals ( 2 , tokens . size ( ) )
[0]: org. junit. assert. assertnotnull ( id )
[1]: org. junit. assert. assertnotnull ( leader. pick ( ) )
[2]: org. junit. assert. assertthat ( serverexception. getmessageid ( ), org. hamcrest. corematchers. is ( 1 ) )
[3]: org. junit. assert. assertthat ( serverexception )
[4]: , serverexception. getmessageid ( ) )

************

************
tgt: org . junit . assert . assertequals ( cloud , jenkins . getinstance ( ) . clouds . get ( 0 ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. assertequals ( 1, workeruseratcount )
[3]: org. junit. assert. assertequals ( 1, worker. size ( ) )
[4]: org. junit. assert. assertequals ( 1, workercount )

************

************
tgt: org . junit . assert . assertequals ( existingresourcepermission , newresourcepermission )
[0]: org. junit. assert. assertequals ( 1, workeruseratscount )
[1]: ) )
[2]: org. junit. assert. assertequals ( data, e. getmessage ( ) )
[3]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( name, e. getmessage ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( ( metadata . getbaseagenturi ( ) ) != null ) && ( ! ( metadata . getbaseagenturi ( ) . isempty ( ) ) ) ) )
[0]: org. junit. assert. assertnull ( e. getmessage ( ) )
[1]: org. junit. assert. assertequals ( data, e. getmessage ( ) )
[2]: org. junit. assert. asserttrue ( bytestring. equals ( bytestring. tostring ( ) ) )
[3]: org. junit. assert. assertequals ( size1, size2 )
[4]: org. junit. assert. assertequals ( size1, ( size2 - 1 ) )

************

************
tgt: org . junit . assert . assertequals ( expectedurl , actualurl )
[0]: org. junit. assert. assertequals ( size1, ( size2 + 1 ) )
[1]: org. junit. assert. assertequals ( sizes1, size2 )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, referredgraphs. toarray ( ). length )
[4]: org. junit. assert. assertarrayequals ( new java. lang. object [ ] { null }, referredgraphs. toarray ( ) )

************

************
tgt: org . junit . assert . assertequals ( serveruri , parsedcomposition )
[0]: org. junit. assert. assertarrayequals ( new java. lang. object [ ] { }, referredgraphs. toarray ( ) )
[1]: org. junit. assert. assertequals ( 0, referredgraphs. toarray ( ). length )
[2]: . toarray ( ) )
[3]: org. junit. assert. asserttrue ( resultaat )
[4]: org. junit. assert. assertequals ( 0, table1. getorderbys ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnull ( pcjdetails )
[0]: org. junit. assert. assertequals ( 1, table1. getorderbys ( ). size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( table1. getorderbys ( ). size ( ) ) > 0 ) )
[2]: org. junit. assert. asserttrue ( ( ( table1. getorderbys ( ). size ( ) ) == 1 ) )
[3]: org. junit. assert. assertequals ( 1, doc3. size ( ) )
[4]: org. junit. assert. assertequals ( 3, doc3. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "<sp>" , out )
[0]: org. junit. assert. assertequals ( 1, doc4. size ( ) )
[1]: org. junit. assert. assertequals ( 1, doc1. size ( ) )
[2]: org. junit. assert. assertequals ( 4, doc3. size ( ) )
[3]: org. junit. assert. assertnull ( doc. getpropertyvalue ( 2 ) )
[4]: org. junit. assert. assertnull ( doc. getpropertyvalue ( getref ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new int [ ] { 0 } , cs . bilkent . joker . engine . region . region . findfusionstartindices ( schedulingstrategies ) )
[0]: org. junit. assert. assertnull ( doc. getpropertyvalue ( null ) )
[1]: org. junit. assert. assertnull ( doc )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, partitioncontext. asmap ( ). size ( ) )
[4]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( ), partitioncontext. asmap ( ) )

************

************
tgt: org . junit . assert . assertequals ( "allurapis" , com . ibm . ws . security . wim . adapter . file . fat . basictests . servlet . getrealm ( ) )
[0]: org. junit. assert. assertequals ( com. google. common. collect. immutablemap. of ( ), partitioncontext. asmap ( ) )
[1]: org. junit. assert. assertequals ( 0, partitioncontext. asmap ( ). size ( ) )
[2]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( ), partitioncontext )
[3]: org. junit. assert. assertarrayequals ( characters [ i ], sequence. getitem ( i ) )
[4]: org. junit. assert. assertequals ( characters [ i ], sequence. getitem ( i ) )

************

************
tgt: org . junit . assert . assertequals ( b1 , b2 )
[0]: org. junit. assert. assertarrayequals ( characters, sequence. getitem ( i ) )
[1]: org. junit. assert. assertequals ( characters [ i ], sequence. getitem ( i ). get ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, currentsessionmanager. getmeasurementstreams ( ). size ( ) )
[4]: org. junit. assert. assertthat ( currentsessionmanager. getmeasurementstreams ( ). length, org. hamcrest. corematchers. equalto ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( fr . gouv . vitam . storage . engine . common . model . response . storedinforesulttest . storedinforesult . getobjectgroupid ( ) . contains ( "id" ) )
[0]: org. junit. assert. asserttrue ( currentsessionmanager. getmeasurementstreams ( ). isempty ( ) )
[1]: org. junit. assert. assertequals ( 0, currentsessionmanager. getmeasurementstreams ( ). size ( ), 0 )
[2]: ) )
[3]: org. junit. assert. assertequals ( i, data )
[4]: org. junit. assert. assertequals ( 1, i )

************

************
tgt: org . junit . assert . asserttrue ( usualivl . contains ( time ) )
[0]: org. junit. assert. assertequals ( 0, i )
[1]: , i )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, presences. get ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, presences. get ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , dt . size ( ) )
[0]: org. junit. assert. assertnotnull ( presences. get ( ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. asserttrue ( org. neo4j. kernel. impl. traversal. abstracttestbase. graphdb. referencenode ( ) )
[4]: org. junit. assert. assertfalse ( org. neo4j. kernel. impl. traversal. abstracttestbase. graphdb. referencenode ( ) )

************

************
tgt: org . junit . assert . assertequals ( "1a2b3c" , builder . tostring ( ) )
[0]: org. junit. assert. asserttrue ( org. neo4j. kernel. impl. traversal. abstracttestbase. graphsdb. referencenode ( ) )
[1]: org. junit. assert. assertequals ( false, settings. autostart ( ) )
[2]: org. junit. assert. assertnull ( settings. autostart ( ) )
[3]: org. junit. assert. assertnotnull ( settings. autostart ( ) )
[4]: org. junit. assert. assertequals ( 0, settings. autostart ( ) )

************

************
tgt: org . junit . assert . assertequals ( org . oscm . internal . types . enumtypes . servicestatus . values ( ) . length , products . size ( ) )
[0]: org. junit. assert. assertequals ( null, settings. autostart ( ) )
[1]: org. junit. assert. asserttrue ( ( deliveryhash == ( - 1l ) ) )
[2]: org. junit. assert. asserttrue ( ( deliveryhash!= ( - 1l ) ) )
[3]: org. junit. assert. asserttrue ( ( deliveryhash > ( - 1l ) ) )
[4]: org. junit. assert. assertnotnull ( model )

************

************
tgt: org . junit . assert . assertthat ( operatorvalues . getinternaldebughttpport ( ) , org . hamcrest . matchers . equalto ( stringvalue ) )
[0]: org. junit. assert. assertsame ( model, delegate )
[1]: org. junit. assert. assertsame ( model, key )
[2]: org. junit. assert. assertnull ( model )
[3]: , model )
[4]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 0 ), baserequest. getheader ( null ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , mfs . size ( ) )
[0]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 0 ), baserequest. getheader ( ""foo"" ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 0 ), baserequest. getheader ( ""test"" ) )
[2]: org. junit. assert. assertequals ( null, baserequest. getheader ( java. lang. string. class ) )
[3]: org. junit. assert. assertequals ( null, baserequest. getheader ( ""foo"" ) )
[4]: org. junit. assert. assertequals ( 1, area. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( 0, area. size ( ) )
[1]: org. junit. assert. assertnotnull ( expectationdto )
[2]: org. junit. assert. assertnull ( expectationdto )
[3]: org. junit. assert. assertequals ( expected, expectationdto )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( expected == ( e . evaluate ( ) ) ) )
[0]: )
[1]: org. junit. assert. asserttrue ( errorlogging. verifyempty ( ) )
[2]: org. junit. assert. asserttrue ( errlogging. verifyempty ( ) )
[3]: org. junit. assert. asserttrue ( errorslogging. verifyempty ( ) )
[4]: org. junit. assert. asserttrue ( testmdc. verifyempty ( ) )

************

************
tgt: org . junit . assert . assertthat ( org . apache . shardingsphere . orchestration . internal . eventbus . shardingorchestrationeventbus . getinstance ( ) , org . hamcrest . corematchers . is ( org . apache . shardingsphere . orchestration . internal . eventbus . shardingorchestrationeventbus . getinstance ( ) ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( mongodboutputdata. mongotoplevel. inconsistent, toplevel )
[2]: org. junit. assert. assertequals ( mongodboutputdata. mongotoplevel. nominal, toplevel )
[3]: org. junit. assert. assertequals ( mongodboutputdata. mongotoplevel. sum, toplevel )
[4]: org. junit. assert. assertequals ( mongodboutputdata. mongotoplevel. candidates, toplevel )

************

************
tgt: org . junit . assert . assertnotnull ( request . getquerystring ( ) )
[0]: org. junit. assert. assertnotnull ( toplevel )
[1]: org. junit. assert. assertfalse ( call. wasignored ( ) )
[2]: org. junit. assert. assertequals ( user, store. getuniqueid ( ) )
[3]: org. junit. assert. assertnotnull ( store. getuniqueid ( ) )
[4]: org. junit. assert. assertnull ( store. getuniqueid ( ) )

************

************
tgt: org . junit . assert . assertequals ( "abc&#;" , writer . tostring ( ) )
[0]: org. junit. assert. assertequals ( user. getuniqueid ( ), user )
[1]: ) )
[2]: org. junit. assert. assertequals ( 3, output. size ( ) )
[3]: org. junit. assert. assertequals ( 1, output. size ( ) )
[4]: org. junit. assert. assertequals ( true, job. hasplayermoved ( ) )

************

************
tgt: org . junit . assert . assertequals ( in . tostring ( ) , out . tostring ( ) )
[0]: org. junit. assert. assertequals ( true, result. hasplayermoved ( ) )
[1]: org. junit. assert. assertequals ( true, instance. hasplayermoved ( ) )
[2]: org. junit. assert. assertequals ( 0, source. getfilters ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, source. getfilters ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, source. getfilters ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 1l , valor )
[0]: org. junit. assert. assertequals ( zero, source. getfilters ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, source. getfilters ( ). length )
[2]: org. junit. assert. assertequals ( maxsolutions, filef. exists ( ) )
[3]: org. junit. assert. assertequals ( configurationvalue. getdefaultvalue ( ), value )
[4]: org. junit. assert. assertequals ( ""value"", configurationvalue. getdefaultvalue ( ), value )

************

************
tgt: org . junit . assert . assertequals ( 1 , main . domain ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. class. getdefaultvalue ( ), value )
[1]: org. junit. assert. assertequals ( java. lang. string. class, value. getdefaultvalue ( ) )
[2]: org. junit. assert. assertequals ( java. lang. string. class, value )
[3]: org. junit. assert. assertequals ( 0, ct. getreadconsistencylevel ( ) )
[4]: org. junit. assert. assertequals ( levelchecked, ct. getreadconsistencylevel ( ) )

************

************
tgt: org . junit . assert . assertequals ( mpd . getport ( ) , 8080 )
[0]: org. junit. assert. assertequals ( levelschecked, ct. getreadconsistencylevel ( ) )
[1]: org. junit. assert. assertequals ( 1, ct. getreadconsistencylevel ( ) )
[2]: org. junit. assert. assertequals ( levelchecked, ct. getreadconsistencylevel ( ). 0 )
[3]: org. junit. assert. assertequals ( 1, count ( ) )
[4]: org. junit. assert. assertequals ( 1, testcount ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expect , actual )
[0]: org. junit. assert. assertequals ( 0, count ( ) )
[1]: org. junit. assert. assertequals ( 1, testcount ( ), 0 )
[2]: ) )
[3]: org. junit. assert. assertequals ( list. size ( ), 1 )
[4]: org. junit. assert. assertequals ( list. size ( ), 2 )

************

************
tgt: org . junit . assert . asserttrue ( ( root instanceof de . blizzy . documentr . access . documentrsecurityexpressionroot ) )
[0]: org. junit. assert. assertequals ( list, attrnames )
[1]: org. junit. assert. assertequals ( list. size ( ), attrnames )
[2]: list. size ( ) )
[3]: org. junit. assert. assertequals ( 1, connection. getmetadata ( ). size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), connection. getmetadata ( ) )

************

************
tgt: org . junit . assert . assertnull ( date )
[0]: org. junit. assert. assertequals ( 0, connection. getmetadata ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( model. getname ( ) )
[2]: org. junit. assert. assertequals ( model. getname ( ), model. getname ( ) )
[3]: org. junit. assert. assertequals ( model. getname ( ), change. getname ( ) )
[4]: org. junit. assert. assertnotnull ( change. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( resultsetmetadata . columnnullable , rsm . isnullable ( 1 ) )
[0]: org. junit. assert. assertequals ( model. getname ( ), model. tostring ( ) )
[1]: org. junit. assert. assertequals ( 1, flags. getflags ( ) )
[2]: org. junit. assert. assertequals ( 1, flags. getflags ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, flags. getflags ( ). size ( ) )
[4]: org. junit. assert. assertnull ( matcher )

************

************
tgt: org . junit . assert . assertnotnull ( result . getid ( ) )
[0]: org. junit. assert. assertfalse ( matcher. find ( ) )
[1]: org. junit. assert. assertnull ( matcher. find ( ) )
[2]: org. junit. assert. asserttrue ( matcher. find ( ) )
[3]: org. junit. assert. assertnotnull ( matcher )
[4]: org. junit. assert. assertequals ( expectedresult, count. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( htmlslow , htmlfast )
[0]: org. junit. assert. assertequals ( expectedresult. get ( ), count. get ( ) )
[1]: org. junit. assert. assertequals ( 1, count. get ( ) )
[2]: org. junit. assert. assertequals ( expectedresult, count. get ( ). get ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, testqueue. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( day , new java . lang . integer ( 8 ) )
[0]: org. junit. assert. assertequals ( 0, queue. isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, testqueue. isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, list. isempty ( ) )
[3]: org. junit. assert. assertequals ( 0, collection. isempty ( ) )
[4]: org. junit. assert. assertnotnull ( child )

************

************
tgt: org . junit . assert . assertsame ( container , result )
[0]: org. junit. assert. assertnotnull ( child. getchild ( null ) )
[1]: org. junit. assert. assertequals ( null, child. getchild ( null ) )
[2]: org. junit. assert. assertnotnull ( child. getchild ( 0 ) )
[3]: org. junit. assert. assertnotnull ( child. getchild ( ""foo"" ) )
[4]: org. junit. assert. assertequals ( 1, result. length )

************

************
tgt: org . junit . assert . assertnotnull ( javaclazz )
[0]: org. junit. assert. assertthat ( actual. getornull ( ), org. hamcrest. corematchers. is ( value ) )
[1]: org. junit. assert. assertnull ( actual. getornull ( ) )
[2]: org. junit. assert. assertnotnull ( actual. getornull ( ) )
[3]: ) )
[4]: 

************

************
tgt: org . junit . assert . assertequals ( input , expected , actual )
[0]: org. junit. assert. assertnotnull ( withclause )
[1]: org. junit. assert. assertnull ( withclause )
[2]: org. junit. assert. assertequals ( null, withclause )
[3]: org. junit. assert. assertnotnull (withclause )
[4]: ) )

************

************
tgt: org . junit . assert . assertnull ( xb . getnickname ( ) )
[0]: org. junit. assert. assertequals ( com. alibaba. citrus. service. form. support. int, new com. alibaba. citrus. service. form. support. numbersupport ( int, org123 ). getnumbertype ( ) )
[1]: org. junit. assert. assertequals ( com. alibaba. citrus. service. form. support. int, new com. alibaba. citrus. service. form. support. numbersupport ( int, "123 ). getnumbertype ( ) )
[2]: org. junit. assert. assertequals ( com. alibaba. citrus. service. form. support. int, new com. alibaba. citrus. service. form. support. numbersupport ( int, org123bot ). getnumbertype ( ) )
[3]: org. junit. assert. assertequals ( com. alibaba. citrus. service. form. support. int, new com. alibaba. citrus. service. form. support. numbersupport ( int, org123 }. getnumbertype ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( filter . shouldapply ( request ) )
[0]: org. junit. assert. assertequals ( 1, requestcontext. getoutputs ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, requestcontext. getoutputs ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, requestcontext. getoutputs ( ). get ( ) )
[3]: org. junit. assert. assertequals ( 3, requestcontext. getoutputs ( ). size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( textregions . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertequals ( expecteddiffoutput, actualdiffoutput )
[1]: org. junit. assert. assertnotnull ( resultdiffoutput )
[2]: org. junit. assert. assertnotnull ( actualdiffoutput )
[3]: org. junit. assert. assertnotnull ( outputdiffoutput )
[4]: org. junit. assert. assertnotnull ( clientmanager. processoutput ( ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , batchplansteps . size ( ) )
[0]: org. junit. assert. assertequals ( 0, orderedcode. log2floor ( 0 ) )
[1]: org. junit. assert. assertequals ( 1, orderedcode. log2floor ( 0 ) )
[2]: org. junit. assert. assertequals ( 0l, orderedcode. log2floor ( 0 ) )
[3]: org. junit. assert. assertequals ( 0, orderedcode. log2floor ( 1 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( id , org . hamcrest . matchers . is ( org . hamcrest . corematchers . equalto ( 5l ) ) )
[0]: org. junit. assert. assertequals ( null, result )
[1]: org. junit. assert. assertequals ( null, result. getclass ( ) )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertnotnull ( xaenumutil )
[4]: org. junit. assert. assertnotnull ( xaenumutil. getenum ( enumname ) )

************

************
tgt: org . junit . assert . assertequals ( 200 , response . getstatuscode ( ) )
[0]: org. junit. assert. assertnull ( xaenumutil. getenum ( enumname ) )
[1]: org. junit. assert. assertnull ( xaenumutil )
[2]: ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( org. jbpm. workbench. ht. client. editors. tasklogs. tasklogspresentertest. containerid ), argumentdesc. getvalue ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( org. jbpm. workbench. ht. client. editors. tasklogs. tasklogspresentertest. containerid ), argumentdesc. getvalue ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( list )
[0]: org. junit. assert. assertequals ( org. jbpm. workbench. ht. client. editors. tasklogs. tasklogspresentertest. task_id, argumentdesc. getvalue ( ). get ( 0 ) )
[1]: org. junit. assert. assertequals ( org. jbpm. workbench. ht. client. editors. tasklogs. tasklogspresentertest. containerid, argumentdesc. getvalue ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), argumentdesc. getvalue ( ) )
[3]: org. junit. assert. assertequals ( null, ksessionmodel. getname ( ) )
[4]: org. junit. assert. assertequals ( string_1, ksessionmodel. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( "relativepath" , builder . getfitnessejavaworkingdirectory ( ) )
[0]: org. junit. assert. assertnotnull ( ksessionmodel. getname ( ) )
[1]: org. junit. assert. assertequals ( ""test"", ksessionmodel. getname ( ) )
[2]: ) )
[3]: org. junit. assert. assertsame ( listener, removeeventlistener ( peergroup ) )
[4]: org. junit. assert. assertnotnull ( peergroup. removeeventlistener ( listener ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , c . number ( ) )
[0]: org. junit. assert. assertnotnull ( clientgroup. removeeventlistener ( peergroup ) )
[1]: org. junit. assert. assertnull ( removeeventlistener ( peergroup ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( driver. isthreadsafe ( ) )
[4]: org. junit. assert. assertequals ( true, driver. isthreadsafe ( ) )

************

************
tgt: org . junit . assert . assertequals ( testvalue , outvalue )
[0]: org. junit. assert. assertnotnull ( driver. isthreadsafe ( ) )
[1]: org. junit. assert. assertequals ( union ( tuple, set ), set )
[2]: org. junit. assert. assertequals ( 1, set. size ( ) )
[3]: org. junit. assert. assertequals ( set, set )
[4]: org. junit. assert. assertnotnull ( set )

************

************
tgt: org . junit . assert . assertfalse ( workitemset )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, vcontext. getresults ( ). length )
[2]: org. junit. assert. assertequals ( 0, vcontext. getresults ( ). length )
[3]: org. junit. assert. assertnotnull ( vcontext. getresults ( ) )
[4]: org. junit. assert. assertequals ( 1, vcontext. getresults ( ). size ( )

************

************
tgt: org . junit . assert . asserttrue ( totaloutcome )
[0]: ) )
[1]: org. junit. assert. asserttrue ( tp. canreadproperties ( ) )
[2]: org. junit. assert. assertequals ( n, a. deltabytes ( ) )
[3]: org. junit. assert. assertequals ( 1, obj. getid ( ) )
[4]: org. junit. assert. assertnotnull ( obj. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( sensortype , header . getsensortype ( ) )
[0]: org. junit. assert. assertnotnull ( obj. s )
[1]: org. junit. assert. assertnotnull ( obj. getmessage ( ) )
[2]: org. junit. assert. assertequals ( 1, obj. s. length )
[3]: org. junit. assert. assertequals ( null, table. get ( partitiontxn, null ) )
[4]: org. junit. assert. assertequals ( null, table. get ( partitiontxn ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: org. junit. assert. assertnotnull ( table. get ( partitiontxn, null ) )
[1]: org. junit. assert. assertnotnull ( table. get ( partitiontxn ) )
[2]: org. junit. assert. assertequals ( null, table. get ( partitiontxn, 0 ) )
[3]: org. junit. assert. assertequals ( 0, new java. lang. long ( data. doublevalue ( ) ). doublevalue ( ) )
[4]: org. junit. assert. assertequals ( 1, new java. lang. long ( data. doublevalue ( ) ). doublevalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( stagename , stage . name ( ) )
[0]: org. junit. assert. assertequals ( 1, new java. lang. long ( data. doublevalue ( ) ) )
[1]: org. junit. assert. assertequals ( 0, dataset. doublevalue ( ) )
[2]: org. junit. assert. assertequals ( 0, dataset. doublevalue ( ), 0 )
[3]: org. junit. assert. assertequals ( ret, tested. normalizeone ( null, null ) )
[4]: org. junit. assert. assertequals ( 1, ret. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( - 1 ) , target [ 0 ] )
[0]: org. junit. assert. assertnotnull ( ret )
[1]: , ret )
[2]: ) )
[3]: org. junit. assert. asserttrue ( rds. evaluate ( null, rds, null ) )
[4]: org. junit. assert. asserttrue ( rds. evaluate ( ""test"", rds, null ) )

************

************
tgt: org . junit . assert . assertthat ( merge . contains ( broadcast ) , org . hamcrest . core . is . is ( true ) )
[0]: org. junit. assert. asserttrue ( rds. evaluate ( ""foo"", rds, null ) )
[1]: org. junit. assert. asserttrue ( rds. evaluate ( null, null, null ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( expected, testgetkettlevalue ( bigdecimal ) )
[4]: org. junit. assert. assertequals ( expected, testgetkettlevalue ( _letype ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , result )
[0]: org. junit. assert. assertequals ( expected, testgetkettlevalue ( null ) )
[1]: org. junit. assert. assertequals ( expected, testgetkettlevalue ( _number ) )
[2]: org. junit. assert. assertequals ( expected, testgetkettlevalue ( _letype ) )
[3]: org. junit. assert. assertnotnull ( dp. detach ( dp ) )
[4]: org. junit. assert. assertnotnull ( dp )

************

************
tgt: org . junit . assert . assertequals ( doc1 , doc2 )
[0]: org. junit. assert. assertequals ( e, detach ( dp ) )
[1]: org. junit. assert. assertnotnull ( dp. detach ( e ) )
[2]: org. junit. assert. assertnotnull ( dp. detach ( guice ) )
[3]: org. junit. assert. asserttrue ( isfound )
[4]: org. junit. assert. assertfalse ( isfound )

************

************
tgt: org . junit . assert . asserttrue ( value . getvalue ( ) )
[0]: org. junit. assert. asserttrue ( arefound )
[1]: org. junit. assert. asserttrue ( hasfound )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( parsed )
[4]: org. junit. assert. assertnotnull ( parse )

************

************
tgt: org . junit . assert . assertthat ( net . time4j . range . momentinterval . between ( start , end ) . contains ( start ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertnotnull ( created )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertthat ( result, is ( java. util. collections. emptylist ( ) ) )
[4]: org. junit. assert. assertthat ( result, is ( empty ( ) ) )

************

************
tgt: org . junit . assert . assertnull ( instance . getvalue ( ) )
[0]: org. junit. assert. assertthat ( result, is ( java. util. collections. singletonlist ( a ) ) )
[1]: org. junit. assert. assertthat ( result, is ( java. util. arrays. aslist ( a, b ) ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( ( ( result. size ( ) ) == 0 ) )
[4]: org. junit. assert. asserttrue ( newwereall ( ). isempty ( ) )

************

************
tgt: org . junit . assert . assertsame ( script1 , script2 )
[0]: org. junit. assert. asserttrue ( true )
[1]: org. junit. assert. asserttrue ( ( ( result ) == null ) )
[2]: org. junit. assert. asserttrue ( newwereall ( ). equals ( null ) )
[3]: org. junit. assert. assertequals ( true, matches )
[4]: org. junit. assert. assertequals ( false, matches )

************

************
tgt: org . junit . assert . assertequals ( true , fr . issuccess ( ) )
[0]: org. junit. assert. assertfalse ( matches )
[1]: org. junit. assert. assertequals ( 1, matches )
[2]: org. junit. assert. assertequals ( expectedrequest, result )
[3]: org. junit. assert. assertequals ( expectedrequest, mockrequest )
[4]: org. junit. assert. assertequals ( expectedrequest, mockserver )

************

************
tgt: org . junit . assert . assertequals ( com . hazelcast . kubernetes . restclienttest . body_response , result )
[0]: org. junit. assert. assertequals ( expectedrequest, mockgroup )
[1]: org. junit. assert. assertequals ( expectedrequest, response )
[2]: org. junit. assert. assertequals ( correlationid, result. get ( ) )
[3]: org. junit. assert. assertnull ( result. get ( ). getid ( ) )
[4]: org. junit. assert. assertnull ( result. get ( ) )

************

************
tgt: org . junit . assert . assertequals ( d1 , d2 )
[0]: org. junit. assert. assertnotnull ( result. get ( ) )
[1]: get ( ) )
[2]: org. junit. assert. assertnotnull ( leader. getid ( ) )
[3]: org. junit. assert. assertnotnull ( lastserverleaderid. getid ( ) )
[4]: org. junit. assert. assertequals ( leader, lastserverleaderid )

************

************
tgt: org . junit . assert . assertnull ( event )
[0]: org. junit. assert. assertnotnull ( lastserverleaderid )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, getfunction. size ( ) )
[3]: org. junit. assert. assertnotnull ( getfunction )
[4]: org. junit. assert. assertequals ( 1, getfunction. values ( ). length )

************

************
tgt: org . junit . assert . assertthat ( interval . getstartfor ( now ) , org . hamcrest . corematchers . equalto ( now ) )
[0]: org. junit. assert. assertequals ( 1, getfunction. collect ( ). size ( )
[1]: , getfunction )
[2]: org. junit. assert. asserttrue ( report. haserror ( ) )
[3]: org. junit. assert. assertnotnull ( report. haserror ( ) )
[4]: org. junit. assert. assertequals ( 1, count )

************

************
tgt: org . junit . assert . assertequals ( ( ( "\n" + sqltext ) + "\n" ) , expected , testutils . formattedresult . resultfactory . tostringunsorted ( rs ) )
[0]: org. junit. assert. assertequals ( 0, count )
[1]: org. junit. assert. assertequals ( 2, count )
[2]: org. junit. assert. assertequals ( count, 1 )
[3]: org. junit. assert. assertequals ( 3, count )
[4]: org. junit. assert. assertequals ( 1, getgroupid ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( sha1 . equals ( org . ebayopensource . fido . uaf . crypto . sha . sha256 ( org . ebayopensource . fido . uaf . crypto . shatest . some_string ) ) )
[0]: org. junit. assert. assertnull ( getgroupid ( ) )
[1]: org. junit. assert. assertnotnull ( getgroupid ( ) )
[2]: org. junit. assert. assertequals ( 1, getgroupid ( ). length )
[3]: org. junit. assert. assertequals ( 1, getgroupid ( ). length ( ) )
[4]: org. junit. assert. assertnotnull ( this. id )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( this. context. getid ( ) )
[1]: org. junit. assert. assertnotnull ( this. id. getid ( ) )
[2]: org. junit. assert. assertnotnull ( this. list. getid ( ) )
[3]: org. junit. assert. assertnotnull ( context. getid ( ) )
[4]: org. junit. assert. assertequals ( true, m. issupplier ( ) )

************

************
tgt: org . junit . assert . assertthat ( target . matchexactly ( flow ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( 1, m. issupplier ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, m. issupplier ( ) )
[2]: org. junit. assert. assertequals ( false, m. issupplier ( ) )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( result, configuration. getvsystemtemplateid ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( selinfo )
[0]: org. junit. assert. assertequals ( id, result )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertequals ( result, configuration )
[3]: org. junit. assert. assertequals ( null, complete ( null ) )
[4]: org. junit. assert. assertequals ( 0, complete ( null ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result , 0.0 )
[0]: org. junit. assert. assertequals ( 1, complete ( null ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, complete ( null ) )
[2]: org. junit. assert. assertequals ( 0, complete ( null ). length ( ) )
[3]: org. junit. assert. assertnotnull ( nieuwesituatie )
[4]: org. junit. assert. assertnotnull ( nieuwesituatie. getnieuwesituatie ( ) )

************

************
tgt: org . junit . assert . assertequals ( existingkaleotaskinstancetoken , newkaleotaskinstancetoken )
[0]: org. junit. assert. assertnull ( nieuwesituatie )
[1]: org. junit. assert. assertnotnull ( nieuwesituatie. getnieuwesituatie )
[2]: org. junit. assert. assertequals ( 1, nieuwesituatie. getnieuwesituatie )
[3]: org. junit. assert. asserttrue ( function. isoverflowtodisk ( mockregion ) )
[4]: org. junit. assert. assertequals ( expected, document )

************

************
tgt: org . junit . assert . assertthat ( actual . isempty ( ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( expected, features )
[1]: org. junit. assert. assertequals ( expected, content )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, messageiterator. get ( topic, partition, offset, maxsize ) )

************

************
tgt: org . junit . assert . assertequals ( testdate , date )
[0]: org. junit. assert. assertnotnull ( messageiterator. get ( topic, partition, offset, maxsize ) )
[1]: org. junit. assert. assertequals ( null, messageiterator. get ( topic, partition, offset, maxsize ) )
[2]: org. junit. assert. assertequals ( 1, messageiterator. get ( topic, partition, offset, maxsize ). length )
[3]: ) )
[4]: org. junit. assert. assertequals ( metadatas, org. codegist. crest. util. multiparts. getfilename ( paramconfig ) )

************

************
tgt: org . junit . assert . assertnull ( adapter . getapproximatearrivaltimestamp ( ) )
[0]: org. junit. assert. assertsame ( metadatas, org. codegist. crest. util. multiparts. getfilename ( paramconfig ) )
[1]: org. junit. assert. assertnotnull ( org. codegist. crest. util. multiparts. getfilename ( paramconfig ) )
[2]: org. junit. assert. assertequals ( metadatas, org. contentgist. crest. util. multiparts. getfilename ( paramconfig ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( stringifyvalues ( ), result )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedsorted , data )
[0]: org. junit. assert. assertnotnull ( fully )
[1]: org. junit. assert. assertequals ( 6, fullysize ( ) )
[2]: org. junit. assert. assertequals ( 7,getype )
[3]: org. junit. assert. assertequals ( 6, fully )
[4]: org. junit. assert. assertnotnull ( roundtripped )

************

************
tgt: org . junit . assert . assertfalse ( org . swiftexplorer . swift . operations . differencesfinder . isdirectory ( li ) )
[0]: org. junit. assert. assertequals ( domainmodel, roundtripped )
[1]: org. junit. assert. assertnull ( roundtripped )
[2]: org. junit. assert. assertthat ( roundtripped, is ( domainmodel ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( isjobrunning ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ids . contains ( greatrannofkutchid ) )
[0]: org. junit. assert. asserttrue ( isjobrunning ( ) )
[1]: org. junit. assert. assertfalse ( isjobrunning ( ) )
[2]: org. junit. assert. asserttrue ( hasjobrunning ( ) )
[3]: org. junit. assert. assertthat ( isjobrunning ( ), is. true )
[4]: org. junit. assert. assertequals ( """", markdown ( ""foo"" ) )

************

************
tgt: org . junit . assert . assertfalse ( b1 . equals ( b2 ) )
[0]: org. junit. assert. assertequals ( """", markdown ( """" ) )
[1]: org. junit. assert. assertequals ( """", markdown ( ""a"" ) )
[2]: org. junit. assert. assertnotnull ( markdown ( null ) )
[3]: org. junit. assert. assertequals ( """", markdown ( ""test"" ) )
[4]: org. junit. assert. assertequals ( expectedurl, collection. getallplansurl ( ) )

************

************
tgt: org . junit . assert . assertequals ( dest . append ( newname ) , newdesturicapture . getvalue ( ) )
[0]: org. junit. assert. assertequals ( expectedurl, s. getallplansurl ( ) )
[1]: org. junit. assert. assertequals ( expectedurl, metadata. getallplansurl ( ) )
[2]: org. junit. assert. assertequals ( expectedurl, ws. getallplansurl ( ) )
[3]: org. junit. assert. assertequals ( expectedurl, reader. getallplansurl ( ) )
[4]: org. junit. assert. assertnotnull ( sink. getenablerawhistoric ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , sw . tostring ( ) )
[0]: org. junit. assert. assertnull ( sink. getenablerawhistoric ( ) )
[1]: org. junit. assert. assertnotnull ( sink )
[2]: org. junit. assert. assertnull ( sink )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, registration. getmodifiers ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( stack . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, registration. getmodifiers ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, registration. getmodifiers ( ). isempty ( ) )
[2]: org. junit. assert. assertequals ( 1, registration. getmodifiers ( ). length )
[3]: org. junit. assert. assertequals ( 1, registration. getmodifiers ( ). size ( )
[4]: org. junit. assert. assertequals ( 1, numberofoccurences )

************

************
tgt: org . junit . assert . assertequals ( "someattachdata" , holder . getvalue ( ) )
[0]: org. junit. assert. assertequals ( 0, numberofoccurences )
[1]: org. junit. assert. assertequals ( 3, numberofoccurences )
[2]: org. junit. assert. assertequals ( numberofoccurences, 1 )
[3]: org. junit. assert. assertequals ( 12, numberofoccurences )
[4]: org. junit. assert. assertequals ( measurand, sampledvalue. getmeasurand ( ) )

************

************
tgt: org . junit . assert . assertnull ( planner . getplan ( ) )
[0]: org. junit. assert. assertnotnull ( sampledvalue. getmeasurand ( ) )
[1]: org. junit. assert. assertnull ( sampledvalue. getmeasurand ( ) )
[2]: org. junit. assert. assertequals ( measurand, sampledvalues. getmeasurand ( ) )
[3]: org. junit. assert. assertequals ( measurand )
[4]: org. junit. assert. assertnotnull ( body )

************

************
tgt: org . junit . assert . assertfalse ( clspa . getresult ( ) )
[0]: org. junit. assert. assertequals ( body, msg )
[1]: org. junit. assert. assertequals ( 200, body )
[2]: org. junit. assert. assertequals ( msg, body )
[3]: org. junit. assert. assertequals ( body, null )
[4]: org. junit. assert. assertequals ( source, writer. tostring ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( downloadwebpage )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( source ), writer. tostring ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( source ), writer. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( source ), writer. tostring ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( source ), writer. tostring ( ) )
[4]: org. junit. assert. assertarrayequals ( 1, listtokens. toarray ( new org. apache. ambari. server. api. predicate. token [ listtokens. size ( ) ] ) )

************

************
tgt: org . junit . assert . assertequals ( p . kafkapartition ( r , 15 ) , p . kafkapartition ( d , 15 ) )
[0]: org. junit. assert. assertequals ( 1, listtokens. size ( ) )
[1]: org. junit. assert. assertarrayequals ( 1, listtokens. size ( ) )
[2]: org. junit. assert. assertarrayequals ( 1, listtokens. toarray ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 0, testurldecode. getvalue ( context ) )

************

************
tgt: org . junit . assert . assertfalse ( c . isinitialized ( ) )
[0]: org. junit. assert. assertequals ( null, testurldecode. getvalue ( context ) )
[1]: org. junit. assert. assertequals ( 1, testurldecode. getvalue ( context ) )
[2]: org. junit. assert. assertequals ( 0, testurldecode. getvalue ( null ) )
[3]: org. junit. assert. assertnull ( testurldecode. getvalue ( context ) )
[4]: org. junit. assert. assertequals ( 0, clone. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , datamanager . getcommandhistory ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( c )
[1]: _2. add ( c ) )
[2]: add ( c ) )
[3]: adds c ) )
[4]: adds c )

************

************
tgt: org . junit . assert . assertequals ( tt , tt2 )
[0]: org. junit. assert. assertthat ( questiongroupscategoriessplit. size ( ), org. hamcrest. corematchers. is ( 1 ) )
[1]: org. junit. assert. assertthat ( questiongroupscategoriessplit. size ( ), org. hamcrest. corematchers. is ( 3 ) )
[2]: org. junit. assert. assertthat ( questiongroupscategoriessplit, org. hamcrest. corematchers. is ( questiongroupdetail3 ) )
[3]: org. junit. assert. assertthat ( questiongroupscategoriessplit, org. hamcrest. corematchers. is ( questiongroupdetail1 ) )
[4]: org. junit. assert. assertthat ( questiongroupscategoriessplit. size ( ), org. hamcrest. corematchers. is ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expecting , org . antlr . v4 . test . tool . testgraphnodes . todotstring ( r ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), numbers )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3, 4 ), numbers )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 3, 3 ), numbers )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 3, 4 ), numbers )
[4]: org. junit. assert. assertequals ( 1, numbers. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , berichtentiteiten . size ( ) )
[0]: org. junit. assert. assertequals ( logsbefore, logsafter )
[1]: org. junit. assert. assertequals ( logsbefore. size ( ), logsafter. size ( ) )
[2]: org. junit. assert. assertequals ( ( logsbefore + 1 ), logsafter. size ( ) )
[3]: org. junit. assert. assertequals ( logbefore, logsafter )
[4]: org. junit. assert. assertequals ( ( logsbefore + 1 ), logsafter )

************

************
tgt: org . junit . assert . asserttrue ( result . matches ( ) )
[0]: org. junit. assert. assertnotnull ( request. getsearchcategory ( ) )
[1]: org. junit. assert. assertequals ( null, request. getsearchcategory ( ) )
[2]: org. junit. assert. assertnull ( request. getsearchcategory ( ) )
[3]: org. junit. assert. assertequals ( ""test"", request. getsearchcategory ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( org . apache . jackrabbit . oak . spi . security . user . util . passwordutil . issame ( hash , "pw" ) )
[0]: org. junit. assert. assertequals ( 1, 1 )
[1]: org. junit. assert. assertnotnull ( collection )
[2]: org. junit. assert. assertnotnull ( s )
[3]: org. junit. assert. assertnotnull ( queue )
[4]: type ) { }

************

************
tgt: org . junit . assert . assertequals ( 0 , scanresult . size ( ) )
[0]: org. junit. assert. asserttrue ( testpurposeuseproxy. ispurposeforuseenabled ( callbackprops ) )
[1]: org. junit. assert. assertnotnull ( tested. tabledisplayer )
[2]: org. junit. assert. assertequals ( expected, out )
[3]: org. junit. assert. assertequals ( expected. trim ( ), out. trim ( ) )
[4]: org. junit. assert. assertequals ( expected, out. substring ( 0, 2 ) )

************

************
tgt: org . junit . assert . assertfalse ( config . isstrategyconfigured ( "test" ) )
[0]: org. junit. assert. assertequals ( expected, out. trim ( ) )
[1]: assertequals ( expected, out )
[2]: org. junit. assert. assertequals ( 0, nw2. compareto ( nw2 ) )
[3]: org. junit. assert. assertnotnull ( converter. print ( 1.0 ) )
[4]: org. junit. assert. assertnotnull ( s. print ( 0 ) )

************

************
tgt: org . junit . assert . asserttrue ( statusprovider . isattached ( ) )
[0]: org. junit. assert. assertnotnull ( converter. print ( 1 ) )
[1]: org. junit. assert. assertnotnull ( parser. print ( 1 ) )
[2]: org. junit. assert. assertnotnull ( parser. print ( 0 ) )
[3]: org. junit. assert. assertnull ( cache. get ( null ) )
[4]: org. junit. assert. assertnull ( cache. get ( 0 ) )

************

************
tgt: org . junit . assert . assertfalse ( opennlp . tools . namefind . bilounamefindersequencevalidatortest . validator . validsequence ( 0 , inputsequence , outcomessequence , outcome ) )
[0]: org. junit. assert. assertnull ( cache. get ( err ) )
[1]: get ( null ) )
[2]: get ( 0 ) )
[3]: org. junit. assert. asserttrue ( modelinstancecollection01. equals ( modelinstancecollection02 ) )
[4]: org. junit. assert. assertequals ( modelinstancecollection01, modelinstancecollection02 )

************

************
tgt: org . junit . assert . assertequals ( 2 , server . clientcount ( ) )
[0]: org. junit. assert. assertnotnull ( modelinstancecollection01. equals ( modelinstancecollection02 ) )
[1]: org. junit. assert. asserttrue ( modelinstancecollection01. equal ( modelinstancecollection02 ) )
[2]: org. junit. assert. assertnotnull ( modelinstancecollection01 )
[3]: org. junit. assert. assertequals ( 1, res. size ( ) )
[4]: org. junit. assert. assertequals ( 0, res. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( target . getconvnodeid ( nwid , nodeid ) , org . hamcrest . corematchers . is ( "node01" ) )
[0]: org. junit. assert. assertequals ( 1, rs. getint ( 1 ) )
[1]: org. junit. assert. assertnotnull ( lookedupnode )
[2]: org. junit. assert. assertequals ( null, lookedupnode )
[3]: org. junit. assert. assertnull ( lookedupnode )
[4]: org. junit. assert. assertnotnull ( lookedupnode. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( exp , out )
[0]: org. junit. assert. assertequals ( null, lookedupnode. node )
[1]: org. junit. assert. assertnotnull ( result )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertsame ( result, membershiptype )

************

************
tgt: org . junit . assert . assertequals ( 0 , presenter . getcaserolesassignments ( ) . size ( ) )
[0]: org. junit. assert. assertsame ( membershiptype, result )
[1]: org. junit. assert. assertnotnull ( mf1 )
[2]: org. junit. assert. assertnotnull ( mf1. getid ( ) )
[3]: org. junit. assert. assertnotnull ( mf1. size ( ) )
[4]: org. junit. assert. assertnotnull ( mf1. tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( studies . size ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertnotnull ( mf1. next ( ) )
[1]: org. junit. assert. assertequals ( 0, is. length )
[2]: org. junit. assert. assertarrayequals ( new int [ ] { 0 }, is )
[3]: org. junit. assert. assertnotnull ( is )
[4]: org. junit. assert. assertnull ( is )

************

************
tgt: org . junit . assert . assertequals ( 0 , buffer . refcnt ( ) )
[0]: org. junit. assert. assertequals ( 1, is. length )
[1]: org. junit. assert. assertequals ( new java. lang. integer ( 1 ), eventvalue )
[2]: org. junit. assert. assertequals ( new java. lang. integer ( 2 ), eventvalue )
[3]: org. junit. assert. assertequals ( null, eventvalue )
[4]: org. junit. assert. assertequals ( 1, ( ( int ) ( eventvalue ) ) )

************

************
tgt: org . junit . assert . assertnotnull ( rs )
[0]: org. junit. assert. assertnotnull ( eventvalue )
[1]: org. junit. assert. assertequals ( 1, results. size ( ) )
[2]: org. junit. assert. assertequals ( 0, results. size ( ) )
[3]: org. junit. assert. assertnotnull ( iter. next ( ) )
[4]: org. junit. assert. assertequals ( factory. next ( ), valueiter. next ( ) )

************

************
tgt: org . junit . assert . assertnull ( dec3 )
[0]: org. junit. assert. assertequals ( factory. next ( ), valueiter. next ( ), 0.0 )
[1]: org. junit. assert. assertequals ( factory. next ( ), valueiter. next ( ), 0 )
[2]: org. junit. assert. assertnotnull ( iterator. next ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), v ( new java. lang. object [ ] { } ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), v ( java. util. arrays. aslist ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( c1 . next ( ) . get ( ) , c2 . next ( ) . get ( ) )
[0]: org. junit. assert. assertnotnull ( v ( new java. lang. object [ ] { } ) )
[1]: org. junit. assert. assertnull ( v ( ( java. lang. object [ ] ) ( null ) ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), v ( java. util. collections. singletonlist ( 1 ) ) )
[3]: org. junit. assert. assertequals ( movetopint, oldcoord )
[4]: org. junit. assert. assertnotnull ( oldcoord )

************

************
tgt: org . junit . assert . assertthat ( value , org . hamcrest . matchers . equalto ( value ) )
[0]: org. junit. assert. assertnotnull ( oldcoord. getchemmodel ( ) )
[1]: org. junit. assert. assertnotnull ( oldcoord, oldcoord )
[2]: org. junit. assert. assertequals ( movetopint, oldcoord, null )
[3]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )
[4]: org. junit. assert. assertequals ( ( ( sqltext + ""\n"" ) + sqltext ), expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs ) )

************

************
tgt: org . junit . assert . asserttrue ( template . getelements ( ) . isempty ( ) )
[0]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostring ( rs ) )
[1]: org. junit. assert. assertequals ( expected, testutils. formattedresult. resultfactory. tostringunsorted ( rs, sqltext ) )
[2]: ( expected ) )
[3]: org. junit. assert. assertequals ( 1, body. getallfilesbyinput ( null ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, body. getallfilesbyinput ( orgfile. getid ( ) ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( duration < notcompiledduration ) )
[0]: org. junit. assert. assertequals ( 1, body. getallfilesbyinput ( name ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, body. getallfilesbyinput ( ""image.jpg ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( result. passed ( ) )
[4]: org. junit. assert. assertequals ( 1, result. passed ( ) )

************

************
tgt: org . junit . assert . assertnull ( outputdatestr )
[0]: org. junit. assert. assertequals ( result. passed ( ), true )
[1]: org. junit. assert. assertequals ( 0, result. passed ( ). length )
[2]: org. junit. assert. assertequals ( 1, result. passed ( ). length )
[3]: org. junit. assert. assertnotnull ( org. owasp. validator. html. policy. createpolicy ( resourcename ) )
[4]: org. junit. assert. assertnotnull ( org. owasp. validator. html. configurationproperties. createpolicy ( resourcename ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( org . hamcrest . corematchers . equalto ( definition ) ) )
[0]: org. junit. assert. assertnotnull ( factory. createpolicy ( resourcename ) )
[1]: org. junit. assert. assertnotnull ( createpolicy ( resourcename ) )
[2]: org. junit. assert. assertnotnull ( com. github. validator. wcomponents. util. configurationproperties. createpolicy ( resourcename
[3]: org. junit. assert. assertequals ( r. getvalue ( ), result. getvalue ( ) )
[4]: org. junit. assert. assertequals ( r. getvalue ( ), result. getvalue ( ). getname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( java . util . arrays . equals ( bytesto , bytes ) )
[0]: org. junit. assert. assertequals ( r. getvalue ( ). getname ( ), result. getvalue ( ). getname ( ) )
[1]: org. junit. assert. assertequals ( r. getvalue ( ). getname ( ), result. getvalue ( ). tostring ( ) )
[2]: org. junit. assert. assertequals ( r. getvalue ( ). tostring ( ), result. getvalue ( ). tostring ( ) )
[3]: org. junit. assert. assertequals ( ( originalassetlistentriescount + 1 ), actualassetlistentriescount )
[4]: org. junit. assert. assertequals ( actualassetlistentriescount, originalassetlistentriescount )

************

************
tgt: org . junit . assert . assertarrayequals ( new long [ ] { } , result )
[0]: org. junit. assert. assertequals ( 1, list. size ( ) )
[1]: org. junit. assert. assertequals ( 12, list. size ( ) )
[2]: org. junit. assert. assertequals ( 4, list. size ( ) )
[3]: org. junit. assert. assertequals ( 9, list. size ( ) )
[4]: public void size ( ) { }

************

************
tgt: org . junit . assert . assertnull ( value )
[0]: org. junit. assert. assertnotnull ( ji. getqueue ( ) )
[1]: org. junit. assert. assertnotnull ( ji )
[2]: org. junit. assert. assertnull ( ji )
[3]: org. junit. assert. assertnotnull ( ji. getqueue )
[4]: ) )

************

************
tgt: org . junit . assert . assertfalse ( stream . isshortcircuit ( ) )
[0]: org. junit. assert. assertequals ( 1, points )
[1]: org. junit. assert. assertequals ( 0, points )
[2]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. join ( points, 5 ), points )
[3]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. join ( points, 1 ), 30 )
[4]: org. junit. assert. assertequals ( org. apache. commons. lang. stringutils. join ( points, 1 ), points )

************

************
tgt: org . junit . assert . asserttrue ( org . pentaho . platform . web . http . api . resources . schedulerresourceutil . ispdifile ( repo ) )
[0]: org. junit. assert. assertnotnull ( resultstring )
[1]: org. junit. assert. assertequals ( null, resultstring )
[2]: org. junit. assert. assertequals ( expected, resultstring )
[3]: org. junit. assert. assertequals ( string_1, resultstring )
[4]: org. junit. assert. assertequals ( string_1, resultstring )

************

************
tgt: org . junit . assert . asserttrue ( alg . checktcrelation ( fwa . gettcrelation ( ) ) )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: ) )
[3]: )
[4]: 

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertequals ( edu. columbia. cs. psl. test. phosphor. droidbenchobjtagitcase. gettaint ( imei ), 0 )
[1]: org. junit. assert. assertequals ( edu. columbia. cs. psl. test. phosphor. droidbenchobjtagitcase. gettaint ( imei ), 1 )
[2]: org. junit. assert. assertequals ( edu. columbia. cs. psl. test. phosphor. droidbenchobjtagitcase. gettaint ( imei ), ex. getmessage ( ) )
[3]: org. junit. assert. asserttrue ( ( ( edu. columbia. cs. psl. test. phosphor. droidbenchobjtagitcase. gettaint ( imei ) )!= 0 ) )
[4]: org. junit. assert. assertequals ( edu. columbia. cs. psl. test. phosphor. droidbenchobjtagitcase. gettaint ( imei ), 5 )

************

************
tgt: org . junit . assert . assertequals ( expectedsource , instrumentedsource )
[0]: org. junit. assert. asserttrue ( isequals )
[1]: org. junit. assert. assertequals ( false, isequals )
[2]: org. junit. assert. assertfalse ( isequals )
[3]: org. junit. assert. assertthat ( isequals )
[4]: org. junit. assert. assertthat ( isequals, org )

************

************
tgt: org . junit . assert . assertnotnull ( e . getmessage ( ) )
[0]: org. junit. assert. assertequals ( a, a )
[1]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( 1 ), a )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 92 ), a )
[3]: , a )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( e . getkey ( ) , e . getvalue ( ) )
[0]: org. junit. assert. assertnotnull ( decoded. getconnectionid ( ) )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. assertequals ( false, result )
[3]: org. junit. assert. assertequals ( 1, result )
[4]: org. junit. assert. assertequals ( 1, result )

************

************
tgt: org . junit . assert . assertequals ( "foo:bar" , uri . getlabel ( ) )
[0]: org. junit. assert. assertequals ( 5, result )
[1]: org. junit. assert. assertequals ( 3, result )
[2]: org. junit. assert. assertequals ( 4, result )
[3]: org. junit. assert. assertequals ( 0, result )
[4]: org. junit. assert. assertequals ( 1, issues. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( theresult )
[0]: org. junit. assert. assertequals ( latestactivity, component. getlastactivity ( ) )
[1]: org. junit. assert. assertequals ( latestactivity, components. getlastactivity ( ) )
[2]: org. junit. assert. assertequals ( lastactivity, component. getlastactivity ( ) )
[3]: org. junit. assert. assertequals ( 1, component. getlastactivity ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "from-properties" , org . apache . hadoop . hive . metastore . conf . metastoreconf . getvar ( conf , confvars . str_test_entry ) )
[0]: org. junit. assert. assertequals ( 0, 1 )
[1]: org. junit. assert. assertequals ( 1, 1 )
[2]: org. junit. assert. assertnotnull ( queue )
[3]: org. junit. assert. assertnotnull ( context )
[4]: org. junit. assert. assertnotnull ( collection )

************

************
tgt: org . junit . assert . assertequals ( person . get ( 0 ) , 42 )
[0]: org. junit. assert. assertequals ( 0, array. length )
[1]: org. junit. assert. assertequals ( 1, array. length )
[2]: org. junit. assert. assertnotnull ( array )
[3]: org. junit. assert. assertequals ( 0, array. size ( ) )
[4]: org. junit. assert. assertequals ( array, createjunitbook ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( networkactivationfunction )
[1]: org. junit. assert. assertequals ( activationfunction, networkactivationfunction )
[2]: org. junit. assert. assertnotnull ( netactivationfunction )
[3]: org. junit. assert. assertnull ( networkactivationfunction )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( 2 , obs . size ( ) )
[0]: org. junit. assert. assertequals ( queue. size ( ), 1 )
[1]: org. junit. assert. assertequals ( queue. size ( ), 0 )
[2]: org. junit. assert. assertequals ( queue, flag )
[3]: org. junit. assert. assertequals ( queue. size ( ), 2 )
[4]: org. junit. assert. assertequals ( queue. size ( ), 5 )

************

************
tgt: org . junit . assert . assertequals ( true , org . apache . commons . collections4 . collectionutils . isnotempty ( coll ) )
[0]: org. junit. assert. assertnotnull ( displayname )
[1]: org. junit. assert. assertequals ( null, displayname )
[2]: org. junit. assert. assertequals ( displayname, displayname )
[3]: org. junit. assert. assertnull ( displayname )
[4]: org. junit. assert. assertequals ( displayname, displayname )

************

************
tgt: org . junit . assert . assertnull ( username )
[0]: org. junit. assert. assertequals ( 1, value. getvalue ( ) )
[1]: org. junit. assert. assertequals ( 0, value. getvalue ( ) )
[2]: org. junit. assert. assertequals ( 0, value. getvalue ( ). length )
[3]: org. junit. assert. assertequals ( 1, value. getvalue ( ). length )
[4]: ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new long [ ] { 4 } , ids )
[0]: org. junit. assert. assertnotnull ( response. gettitle ( ) )
[1]: org. junit. assert. assertequals ( ""a"", response. gettitle ( ) )
[2]: org. junit. assert. assertequals ( ""test"", response. gettitle ( ) )
[3]: org. junit. assert. assertequals ( ""foo"", response. gettitle ( ) )
[4]: org. junit. assert. assertequals ( ""bar"", response. gettitle ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , result )
[0]: org. junit. assert. assertequals ( com. facebook. buck. util. types. null, container )
[1]: org. junit. assert. assertequals ( 1, list. size ( ) )
[2]: org. junit. assert. assertequals ( 0, list. size ( ) )
[3]: org. junit. assert. assertequals ( 10, list. size ( ) )
[4]: org. junit. assert. assertequals ( 2, list. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( originalmap . isempty ( ) )
[0]: org. junit. assert. assertequals ( 5, list. size ( ) )
[1]: org. junit. assert. assertnotnull ( e. getresult ( ) )
[2]: org. junit. assert. assertequals ( 1, e. getresult ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, e. getresult ( ). size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( java . lang . double . valueof ( ( 1 / 10.0 ) ) , l . inverse ( ) . getvalue ( ) )
[0]: )
[1]: org. junit. assert. assertequals ( 0, classundertest. getmodules ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, classundertest. getmodules ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, classesundertest. getmodules ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, classundertest. getmodules ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( dsf )
[0]: org. junit. assert. assertequals ( null, classundertest. getmodules ( ). size ( ) )
[1]: org. junit. assert. assertnull ( metadata )
[2]: org. junit. assert. assertnotnull ( metadata )
[3]: org. junit. assert. assertnull ( metadata2rp )
[4]: , metadata )

************

************
tgt: org . junit . assert . asserttrue ( p . equals ( 3 , 678 ) )
[0]: ) )
[1]: org. junit. assert. assertnull ( result )
[2]: org. junit. assert. assertnotnull ( result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertequals ( """", result )

************

************
tgt: org . junit . assert . asserttrue ( berichtentiteiten . isempty ( ) )
[0]: org. junit. assert. assertequals ( """", result )
[1]: org. junit. assert. assertequals ( 0, validator. getannotation ( null ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, validator. getannotation ( java. lang. string. class ). size ( ) )
[3]: org. junit. assert. assertnull ( validator. getannotation ( null ) )
[4]: org. junit. assert. assertequals ( 0, validator. getannotation ( java. util. collections. emptylist ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( queryresult . getsize ( ) ) >= 1 ) )
[0]: org. junit. assert. assertequals ( 0, validator. getannotation ( java. lang. string. class ) )
[1]: org. junit. assert. assertnotnull ( sconnector )
[2]: org. junit. assert. assertequals ( sconnector, sconnector )
[3]: org. junit. assert. assertnotnull ( sconnector. getclustername ( ) )
[4]: org. junit. assert. assertnotnull ( sconnector. getresources ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( patches . size ( ) ) > 0 ) )
[0]: ) )
[1]: org. junit. assert. assertsame ( login1, login2 )
[2]: org. junit. assert. assertequals ( expected, expected )
[3]: org. junit. assert. assertequals ( expected, expected. classundertest ( ) )
[4]: org. junit. assert. assertequals ( expected, this. classundertest ( ) )

************

************
tgt: org . junit . assert . assertthat ( target . onoutpacketaddedpre ( org . o3project . odenos . component . aggregator . aggregatortest . original_nw_id , msg ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: ) )
[2]: org. junit. assert. assertnull ( result )
[3]: org. junit. assert. assertequals ( null, result )
[4]: org. junit. assert. assertnotnull ( getcurrentsource ( ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , ( ( int ) ( list . get ( 0 ) ) ) )
[0]: org. junit. assert. assertequals ( source, converter. getcurrentsource ( ) )
[1]: org. junit. assert. assertnull ( manager. getcurrentsource ( ) )
[2]: org. junit. assert. assertequals ( source, filter. getcurrentsource ( ) )
[3]: org. junit. assert. assertnull ( getcurrentsource ( ) )
[4]: org. junit. assert. assertnull ( fs )

************

************
tgt: org . junit . assert . assertequals ( 50 , noofenums )
[0]: org. junit. assert. assertnotnull ( fs )
[1]: org. junit. assert. assertequals ( fs, outdir )
[2]: org. junit. assert. assertequals ( dfs, fs )
[3]: ) )
[4]: org. junit. assert. asserttrue ( org. geotools. referencing. factory. logger. isavailable ( ) )

************

************
tgt: org . junit . assert . assertequals ( "tlsv1.2" , protocols )
[0]: org. junit. assert. asserttrue ( org. geotools. metadata. i18n. isavailable ( ) )
[1]: org. junit. assert. asserttrue ( provider. isavailable ( ) )
[2]: org. junit. assert. assertfalse ( provider. isavailable ( ) )
[3]: org. junit. assert. asserttrue ( org. geotools. ident. factory. logger. isavailable ( ) )
[4]: org. junit. assert. assertfalse ( service. isstatevalid ( org. apache. nifi. web. security. oidc. oidcservicetest. test_request_identifier, state ) )

************

************
tgt: org . junit . assert . assertequals ( generatedjavascript , expectedjavascript )
[0]: org. junit. assert. assertnotnull ( style )
[1]: org. junit. assert. assertnull ( style )
[2]: org. junit. assert. assertequals ( null, style )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertequals ( getfailuremessage ( ) , assertion , slice )
[0]: org. junit. assert. assertequals ( 1, request. gettargetclass ( ) )
[1]: org. junit. assert. assertequals ( java. lang. string. class, request. gettargetclass ( ) )
[2]: org. junit. assert. assertequals ( 1, request. gettargetclass ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), request. gettargetclass ( ) )
[4]: org. junit. assert. assertequals ( com. navercorp. volleyextensions. volleyer. error. class, request. gettargetclass ( ) )

************

************
tgt: org . junit . assert . assertfalse ( compliance . isentitlementcompliant ( c , mockserverentitlement , new java . util . date ( ) ) )
[0]: org. junit. assert. assertequals ( expecteddeviceid, testdeviceid )
[1]: org. junit. assert. assertthat ( testdeviceid, org. hamcrest. matchers. is ( expecteddeviceid ) )
[2]: org. junit. assert. assertequals ( expecteddeviceid, testsdeviceid )
[3]: org. junit. assert. assertequals ( expecteddeviceid, testdevice id )
[4]: org. junit. assert. assertequals ( expdeviceid, testdeviceid )

************

************
tgt: org . junit . assert . assertequals ( "exterminate!" , ws . tostring ( ) )
[0]: org. junit. assert. assertequals ( o, ts. create ( o ) )
[1]: org. junit. assert. assertequals ( testname, song. getname ( ) )
[2]: org. junit. assert. assertnotnull ( song. getname ( ) )
[3]: org. junit. assert. assertequals ( 1, service. allproperties ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, service. allproperties ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( flow )
[0]: org. junit. assert. assertequals ( 1, services. allproperties ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, dao. allproperties ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 2, service. allproperties ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, map. size ( ) )
[4]: org. junit. assert. assertequals ( 0, map. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( item == null ) )
[0]: org. junit. assert. assertequals ( version. version, org. apache. openmeetings. util. version. getversion ( ) )
[1]: org. junit. assert. assertequals ( 1, vtms. size ( ) )
[2]: org. junit. assert. assertequals ( 0, vtms. size ( ) )
[3]: org. junit. assert. assertnotnull ( vtms )
[4]: org. junit. assert. asserttrue ( vtms. isempty ( ) )

************

************
tgt: org . junit . assert . assertnull ( result )
[0]: ) )
[1]: org. junit. assert. assertfalse ( ispresent )
[2]: org. junit. assert. assertequals ( false, ispresent )
[3]: org. junit. assert. assertthat ( ispresent )
[4]: org. junit. assert. assertthat ( ispresent, org )

************

************
tgt: org . junit . assert . assertequals ( 1 , windowrangelength )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, resultsetsize ( rs ) )
[2]: org. junit. assert. assertequals ( result1, result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertsame ( result1, doc )

************

************
tgt: org . junit . assert . assertthat ( ports . hasport ( port . getmappedport ( ) ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. asserttrue ( result. isempty ( ) )
[1]: org. junit. assert. assertsame ( result1, document )
[2]: org. junit. assert. assertequals ( input, escaped )
[3]: org. junit. assert. assertnotnull ( escaped )
[4]: org. junit. assert. assertnull ( escaped )

************

************
tgt: org . junit . assert . assertequals ( 1 , res . size ( ) )
[0]: org. junit. assert. assertequals ( input, escaped )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1000, immediatevalue. getvalue ( ) )
[3]: org. junit. assert. assertequals ( 1000, immediatevalue. getvalue ( ), 0 )
[4]: org. junit. assert. assertequals ( 1000, immediatelyvalue. getvalue ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( expectedlist , actuallist )
[0]: org. junit. assert. assertnotnull ( immediatevalue. getvalue ( ) )
[1]: ( 1000 ) )
[2]: org. junit. assert. asserttrue ( org. dataconservancy. dcs. util. filepathutil. hasvalidfilepath ( testfile ) )
[3]: org. junit. assert. asserttrue ( org. dataconservancy. dcs. util. filepathutil. hasvalidready ( testfile ) )
[4]: org. junit. assert. asserttrue ( testfile. hasvalidfilepath ( testfile ) )

************

************
tgt: org . junit . assert . assertequals ( null , info . getpassword ( ) )
[0]: org. junit. assert. asserttrue ( hasvalidfilepath ( testfile ) )
[1]: ) )
[2]: org. junit. assert. assertnull ( actual )
[3]: org. junit. assert. assertnotnull ( actual )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . asserttrue ( receiver . validate ( null , null ) )
[0]: org. junit. assert. assertsame ( actual, expected )
[1]: org. junit. assert. assertsame ( actual, myself )
[2]: org. junit. assert. asserttrue ( daterange. isdateinrange ( from ) )
[3]: org. junit. assert. asserttrue ( daterange. isdateinrange ( to ) )
[4]: org. junit. assert. assertfalse ( daterange. isdateinrange ( from ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , identifiers . size ( ) )
[0]: org. junit. assert. asserttrue ( daterange. isdateinrange ( from ) ) to true )
[1]: ) )
[2]: org. junit. assert. assertequals ( expected, actual )
[3]: org. junit. assert. assertequals ( 1, i. getinjectionpoints ( ). size ( ) )
[4]: org. junit. assert. assertequals ( org. jboss. weld. tests. extensions. lifecycle. processinjectionpoint. subclass. foo, foo. getinjectionpoints ( ) )

************

************
tgt: org . junit . assert . assertnull ( inner . getsingleelement ( ecorepackage . literals . eannotation ) )
[0]: org. junit. assert. assertequals ( 1, foo. getinjectionpoints ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, i. getinjectionpoints ( ). size ( ) )
[2]: org. junit. assert. assertequals ( org. jboss. weld. tests. extensions. lifecycle. processinjectionpoint. subclass. foo, i. getinjectionpoints ( ) )
[3]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ ] [ ] { new java. lang. string [ ] { } } ) )
[4]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ ] [ ] { new java. lang. string [ ] { null } } ) )

************

************
tgt: org . junit . assert . assertnotnull ( session )
[0]: org. junit. assert. assertthat ( results, is ( new java. lang. string [ 0 ] [ ] ) )
[1]: , results )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( com. github. davidmoten. rx. jdbc. util. automap ( 1l, com. github. davidmoten. rx. jdbc. long. class ) )
[4]: org. junit. assert. assertnotnull ( com. github. davidmoten. rx. jdbc. util. automap ( 1l, java. sql. date. class ) )

************

************
tgt: org . junit . assert . asserttrue ( e . getmessage ( ) . contains ( msg ) )
[0]: org. junit. assert. assertnotnull ( com. github. davidmoten. rx. jdbc. util. automap ( new java. sql. date ( 1 ), java. util. date. class ) )
[1]: org. junit. assert. assertequals ( 1, com. github. davidmoten. rx. jdbc. util. automap ( 1l, com. github. davidmoten. rx. jdbc. long. class ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( comparator, property. getnamewithclass ( ) )
[4]: org. junit. assert. assertequals ( comparator. getnamewithclass ( ), property. getnamewithclass ( ) )

************

************
tgt: org . junit . assert . assertequals ( 2 , documents . size ( ) )
[0]: org. junit. assert. assertequals ( 1, property. getnamewithclass ( ) )
[1]: org. junit. assert. assertnotnull ( property. getnamewithclass ( ) )
[2]: org. junit. assert. assertequals ( 1, property. getnamewithclass ( ). size ( ) )
[3]: org. junit. assert. asserttrue ( result. passedvalidation ( ) )
[4]: org. junit. assert. assertequals ( r, resrelctxfromdb. getid ( ) )

************

************
tgt: org . junit . assert . assertequals ( "value" , property . getvalue ( ) )
[0]: org. junit. assert. assertequals ( r. getid ( ), resrelctxfromdb. getid ( ) )
[1]: org. junit. assert. assertnotnull ( resrelctxfromdb. getid ( ) )
[2]: org. junit. assert. asserttrue ( ( ( resrelctxfromdb. getid ( ) ) == r ) )
[3]: org. junit. assert. asserttrue ( ( ( resrelctxfromdb. getid ( ) ) == null ) )
[4]: org. junit. assert. assertequals ( 0, runwithmerge ( query ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( formatter , clogwriter . getformatter ( ) )
[0]: org. junit. assert. assertequals ( 0, runwithmerge ( query ) )
[1]: org. junit. assert. assertequals ( java. util. collections. doublesumaggregatorfactory. runwithmerge ( query ), 0 )
[2]: org. junit. assert. assertequals ( 1, runwithmerge ( query ). size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. doublesumaggregator ( query ), runwithmerge ( query ) )
[4]: org. junit. assert. assertequals ( com. spotify. helios. cli. command. jobcreatecommandtest. job_id, runcommand ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( injector )
[0]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( com. spotify. helios. cli. command. jobcreatecommandtest. job_id ), runcommand ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( com. spotify. helios. cli. command. jobcreatecommandtest. job_id ), runcommand ( ) )
[2]: org. junit. assert. assertequals ( 1, runcommand ( ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( metric. getmetricname ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedextension , actualextension . get ( ) )
[0]: org. junit. assert. assertequals ( metricname, metric. getmetricname ( ) )
[1]: org. junit. assert. assertnull ( metric. getmetricname ( ) )
[2]: org. junit. assert. asserttrue ( metric. getmetricname ( ). isempty ( ) )
[3]: org. junit. assert. assertnotnull ( metric. getmetricname ( ). tostring ( ) )
[4]: org. junit. assert. assertequals ( ""foo"", bean. value )

************

************
tgt: org . junit . assert . assertequals ( new java . util . arraylist < slash . navigation . download . download > ( ) , result )
[0]: org. junit. assert. assertequals ( ""bar"", bean. value )
[1]: org. junit. assert. assertequals ( ""bar"", bean. data )
[2]: org. junit. assert. assertequals ( ""foo"", bean. data )
[3]: org. junit. assert. assertequals ( ""bar"", bean. s )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertequals ( 2 , longset . size ( ) )
[0]: org. junit. assert. assertequals ( ""foo"", result )
[1]: org. junit. assert. assertequals ( """", result )
[2]: org. junit. assert. assertequals ( ""foo"", result )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, deleteaction. gethref ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , dir . listall ( ) . length )
[0]: org. junit. assert. assertnotnull ( deleteaction. gethref ( ) )
[1]: org. junit. assert. assertequals ( 0, deleteaction. gethref ( ). size ( ) )
[2]: org. junit. assert. assertnotnull ( deleteaction )
[3]: ) )
[4]: org. junit. assert. assertequals ( database, database2 )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( database. getfile ( ), database2 )
[1]: org. junit. assert. assertequals ( db, database2 )
[2]: org. junit. assert. assertequals ( database, database1 )
[3]: org. junit. assert. assertequals ( database, db2 )
[4]: org. junit. assert. assertnotnull ( cs )

************

************
tgt: org . junit . assert . assertequals ( g1 , g2 )
[0]: org. junit. assert. assertequals ( object, graphmanager. getnode ( id ) )
[1]: org. junit. assert. assertequals ( shouldfind, selection. dateinputs ( null ) )
[2]: org. junit. assert. assertequals ( shouldfind, selection. dateinputs ( id ( ) ) )
[3]: org. junit. assert. assertequals ( shouldfind, selection. dateinputs ( id ) )
[4]: org. junit. assert. assertequals ( shouldfind, selection. dateinputs ( id ( ) ). get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( com . gs . collections . impl . list . mutable . fastlist . newlistwith ( 3 , 2 , 4 , 1 , 5 ) , composite . distinct ( ) . tolist ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, members. size ( ) )
[2]: org. junit. assert. assertequals ( 1, memberprincipalid. size ( ) )
[3]: org. junit. assert. assertequals ( 1, memberprincipalid )
[4]: org. junit. assert. asserttrue ( ( ( memberprincipalid. size ( ) ) == 2 ) )

************

************
tgt: org . junit . assert . assertequals ( "43" , result )
[0]: org. junit. assert. assertequals ( 1, memberprincipalid. length )
[1]: org. junit. assert. assertequals ( 0, testmethod. size ( ) )
[2]: org. junit. assert. assertequals ( 1, java. util. arrays. length )
[3]: org. junit. assert. assertequals ( 0, 1 )
[4]: org. junit. assert. assertequals ( 0, java. util. arrays. length )

************

************
tgt: org . junit . assert . assertequals ( 1 , ids . size ( ) )
[0]: )
[1]: org. junit. assert. asserttrue ( scheduledreg. isempty ( ) )
[2]: org. junit. assert. assertequals ( true, scheduledreg. isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, scheduledreg. isempty ( ) )
[4]: org. junit. assert. assertequals ( 0, scheduledreg. isempty ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( privkeybytes )
[0]: org. junit. assert. assertequals ( 1, scheduledreg. isempty ( ). size ( ) )
[1]: org. junit. assert. assertthat ( results, contains ( null ) )
[2]: org. junit. assert. assertthat ( results )
[3]: , results. contains ( null ) )
[4]: , results )

************

************
tgt: org . junit . assert . assertthat ( ( createdplayer == ( defensiveplayer ) ) , org . hamcrest . corematchers . is ( true ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, events1. gettotalelements ( ) )
[2]: org. junit. assert. assertequals ( 1, descriptions. size ( ) )
[3]: org. junit. assert. assertequals ( 0, descriptions. size ( ) )
[4]: org. junit. assert. assertequals ( 3, descriptions. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( result . getvalueforattribute ( attributetype . ds_rdata ) . tostring ( ) , org . hamcrest . matchers . is ( "52314<sp>5<sp>1<sp>93b5837d4e5c063a3728faa72ba64068f89b39df" ) )
[0]: org. junit. assert. assertequals ( 5, descriptions. size ( ) )
[1]: org. junit. assert. assertequals ( 4, descriptions. size ( ) )
[2]: org. junit. assert. assertequals ( 1, endereco. getnumero ( ) )
[3]: org. junit. assert. assertequals ( 0, endereco. getnumero ( ) )
[4]: org. junit. assert. assertequals ( 3, endereco. getnumero ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( name , expression . getresulttype ( ) )
[0]: org. junit. assert. assertequals ( 2, endereco. getnumero ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( value )
[3]: org. junit. assert. assertequals ( addr, value )
[4]: org. junit. assert. assertequals ( address, value )

************

************
tgt: org . junit . assert . assertarrayequals ( ni . gethardwareaddress ( ) , niv . gethardwareaddress ( ) )
[0]: org. junit. assert. assertequals ( null, value )
[1]: org. junit. assert. assertequals ( java. util. arrays. hashcode ( ), id3v2popmframedata1. hashcode ( ) )
[2]: org. junit. assert. assertequals ( 0, id3v2popmframedata1. hashcode ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. hashcode ( ), id3v2popmframedata1. hashcode ( ) )
[4]: org. junit. assert. assertequals ( 1, id3v2popmframedata1. hashcode ( ) )

************

************
tgt: org . junit . assert . assertequals ( interactive , interactive1 )
[0]: org. junit. assert. assertequals ( id3v2popmframedata1. hashcode ( ), id3v2popmframedata. hashcode ( ) )
[1]: org. junit. assert. assertnotnull ( deserialised )
[2]: org. junit. assert. assertequals ( rs, deserialised )
[3]: org. junit. assert. assertequals ( 401, deserialised )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( merged , org . hamcrest . corematchers . equalto ( expected ) )
[0]: )
[1]: org. junit. assert. assertfalse ( port. ispresent ( ) )
[2]: org. junit. assert. assertthat ( port. ispresent ( ), is ( equalto ( false ) ) )
[3]: org. junit. assert. assertthat ( port. ispresent ( ), is ( false ) )
[4]: org. junit. assert. assertthat ( port. ispresent ( ), is ( equalto ( true ) ) )

************

************
tgt: org . junit . assert . assertequals ( 0.1 , instance . getm ( ) , 0.0 )
[0]: org. junit. assert. assertthat ( port. ispresent ( ), is ( true ) )
[1]: org. junit. assert. assertnull ( org. elasticjob. cloud. executor. handler. getmap ( actual ) )
[2]: org. junit. assert. assertnull ( actual. getmap ( null ) )
[3]: org. junit. assert. assertnull ( actual. getmap ( 0 ) )
[4]: org. junit. assert. assertnull ( actual. getmap ( jobproperties. jobpropertiesenum ) )

************

************
tgt: org . junit . assert . assertsame ( configurationparameters . empty , cp )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( instance )
[2]: org. junit. assert. assertnotnull ( instance. matrixdimension )
[3]: org. junit. assert. assertnotnull ( instances )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( java . util . collections . emptylist ( ) , method . invoke ( avroencdec , list ) )
[0]: )
[1]: org. junit. assert. assertfalse ( mandatorysubject. isempty ( ) )
[2]: org. junit. assert. assertequals ( 0, mandatorysubject. isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, mandatorysubject. isempty ( ) )
[4]: org. junit. assert. assertequals ( 1, dv. getstringvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , kiesession . fireallrules ( ) )
[0]: org. junit. assert. assertequals ( 0, dv. getstringvalue ( ) )
[1]: org. junit. assert. assertequals ( one, dv. getstringvalue ( ) )
[2]: org. junit. assert. assertequals ( 2, dv. getstringvalue ( ) )
[3]: org. junit. assert. assertequals ( null, dv. getstringvalue ( ) )
[4]: org. junit. assert. assertnotnull ( obs. getvoided ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( obs )
[1]: org. junit. assert. assertequals ( obs, obs. getvoided ( ) )
[2]: org. junit. assert. assertequals ( 7, obs. getvoided ( ) )
[3]: org. junit. assert. assertequals ( 1, obs. getvoided ( ) )
[4]: org. junit. assert. assertnotnull ( tree. getbaseimage ( com. oracle. bedrock. runtime. application. class ) )

************

************
tgt: org . junit . assert . assertnotnull ( instance . getfirstmapping ( ) )
[0]: org. junit. assert. assertnotnull ( tree. getbaseimage ( org. oracle. bedrock. runtime. application. class ) )
[1]: org. junit. assert. assertnotnull ( tree. getbaseimage ( java. lang. string. class ) )
[2]: org. junit. assert. assertequals ( image, tree. getbaseimage ( java. lang. string. class ) )
[3]: org. junit. assert. assertnotnull ( tree. getbaseimage ( com. oracle. bedrock. runtime. app. class ) )
[4]: org. junit. assert. assertequals ( p, lounge. getseatedpeople ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( brpbericht instanceof nl . moderniseringgba . isc . esb . message . brp . impl . ongeldigbericht ) )
[0]: org. junit. assert. assertnotnull ( lounge. getseatedpeople ( ) )
[1]: org. junit. assert. assertequals ( p, lounge )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, pendinghumantaskinstances. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( icmsufdestino , imposto . geticmsufdestino ( ) )
[0]: org. junit. assert. assertequals ( 2, pendinghumantaskinstances. size ( ) )
[1]: org. junit. assert. assertequals ( 0, pendinghumantaskinstances. size ( ) )
[2]: org. junit. assert. assertequals ( 3, pendinghumantaskinstances. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( lastinprogressdagid, lastinprogressdag. dagid ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , result )
[0]: org. junit. assert. assertfalse ( affinetransform. equals ( affinetransform ) )
[1]: org. junit. assert. asserttrue ( affinetransform. equals ( affinetransform ) )
[2]: org. junit. assert. assertequals ( true, affinetransform. equals ( affinetransform ) )
[3]: org. junit. assert. assertequals ( false, affinetransform. equals ( affinetransform ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( malloc . getfreememory ( ) ) < 192 ) )
[0]: org. junit. assert. assertnull ( holder. get ( ) )
[1]: org. junit. assert. assertnotnull ( holder. get ( ) )
[2]: org. junit. assert. assertequals ( null, holder. get ( ) )
[3]: org. junit. assert. assertequals ( ""foo"", holder. get ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( user )
[0]: org. junit. assert. assertequals ( 1, result. size ( ) )
[1]: org. junit. assert. assertequals ( 0, result. size ( ) )
[2]: org. junit. assert. assertequals ( returnarray [ i ], arraystr )
[3]: org. junit. assert. assertequals ( returnarray [ i ], returnarray [ i ] )
[4]: org. junit. assert. assertequals ( returnarray [ i ], getarray [ i ] )

************

************
tgt: org . junit . assert . assertfalse ( view . iscollapsed ( ) )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), arrayarray [ i ] )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( i ), arraystr [ i ] )
[2]: org. junit. assert. assertequals ( 0, names. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), names )
[4]: org. junit. assert. assertequals ( 1, names. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , boundsql . getsql ( ) )
[0]: org. junit. assert. assertequals ( null, names )
[1]: org. junit. assert. assertnotnull ( patient )
[2]: org. junit. assert. assertequals ( 1, patient. getpatientid ( ). size ( ) )
[3]: org. junit. assert. assertequals ( patient, patient. getpatientid ( ) )
[4]: org. junit. assert. assertequals ( patient, patient )

************

************
tgt: org . junit . assert . assertequals ( expected , found )
[0]: org. junit. assert. assertequals ( 1, patient. getpatientid ( ). length )
[1]: org. junit. assert. assertequals ( 0, dependencies. size ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), dependencies )
[3]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), dependencies )
[4]: org. junit. assert. assertequals ( 1, dependencies. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , sigfor0 )
[0]: org. junit. assert. assertequals ( emptylist ( ), dependencies )
[1]: org. junit. assert. asserttrue ( org. apache. commons. lang3. stringutils. contains ( expectedrowkey, rowmodel ) )
[2]: org. junit. assert. assertequals ( expectedrowkey, rowmodel. contains ( rowmodel, 1 ) )
[3]: org. junit. assert. asserttrue ( java. util. arrays. contains ( expectedrowkey, rowmodel. tostring ( ) ) )
[4]: org. junit. assert. assertequals ( expectedrowkey, rowmodel. contains ( rowmodel. tostring ( ), 1 ) )

************

************
tgt: org . junit . assert . assertequals ( 10 , actual . size ( ) )
[0]: org. junit. assert. asserttrue ( org. apache. commons. lang3. stringutils. contains ( expectedrowkey, rowmodel. args ) )
[1]: org. junit. assert. assertnotnull ( sieve )
[2]: org. junit. assert. assertequals ( sieve, sieve )
[3]: org. junit. assert. assertequals ( sieve. isprime ( p ), true )
[4]: org. junit. assert. asserttrue ( sieve. isprime ( p ) )

************

************
tgt: org . junit . assert . assertfalse ( treetable . islastid ( treetable . getvalue ( ) ) )
[0]: org. junit. assert. assertequals ( sieve. isprime ( i ), true )
[1]: org. junit. assert. assertfalse ( testee. returntrue ( ) )
[2]: org. junit. assert. assertequals ( intothis, intothis )
[3]: org. junit. assert. assertequals ( 1, intothis. isneedappearances ( ) )
[4]: org. junit. assert. assertequals ( 2, intothis. isneedappearances ( ) )

************

************
tgt: org . junit . assert . assertnull ( com . puresoltechnologies . ductiledb . core . graph . schema . ductiledbschemamanagerit . schemamanager . getpropertydefinition ( elementtype . vertex , "property" ) )
[0]: org. junit. assert. assertequals ( 0, intothis. isneedappearances ( ) )
[1]: ) )
[2]: org. junit. assert. asserttrue ( org. gitlab4j. api. jsonutils. comparejson ( event, event. tostring ( ) ) )
[3]: org. junit. assert. assertnotnull ( org. gitlab4j. api. jsonutils. comparejson ( event, event. tostring ( ) ) )
[4]: org. junit. assert. assertequals ( 1, org. gitlab4j. api. jsonutils. comparejson ( event, event. tostring ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( actual , expected , actual )
[0]: org. junit. assert. assertequals ( 1, org. gitlab4j. api. jsonutils. comparejson ( event, null ) )
[1]: org. junit. assert. assertnotnull ( org. gitlab4j. api. jsonutils. comparejson ( event, org. gitlab4j. api. jsonutils. class ) )
[2]: org. junit. assert. assertequals ( string, result )
[3]: org. junit. assert. assertnotnull ( result )
[4]: org. junit. assert. assertequals ( null, result )

************

************
tgt: org . junit . assert . assertarrayequals ( new java . lang . class < ? > [ ] { at . ac . tuwien . infosys . jcloudscale . test . unit . boolean . class , at . ac . tuwien . infosys . jcloudscale . test . unit . integer . class , at . ac . tuwien . infosys . jcloudscale . test . unit . double . class , at . ac . tuwien . infosys . jcloudscale . test . unit . void . class } , classes )
[0]: org. junit. assert. assertequals ( result, string )
[1]: ) )
[2]: org. junit. assert. asserttrue ( functionschecklist. isempty ( ) )
[3]: org. junit. assert. assertequals ( 1, functionschecklist. isempty ( ) )
[4]: org. junit. assert. assertequals ( true, functionschecklist. isempty ( ) )

************

************
tgt: org . junit . assert . assertequals ( mockwrapper , testwrapper )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( functions ), functionschecklist )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( functionschecklist ), functionschecklist )
[2]: org. junit. assert. assertthat ( merge ( intervals ). size ( ), org. hamcrest. matchers. is ( 1 ) )
[3]: org. junit. assert. assertthat ( merge ( intervals ), org. hamcrest. matchers. is ( intervals ) )
[4]: org. junit. assert. assertthat ( merge ( intervals ), org. hamcrest. matchers. is ( 1l ) )

************

************
tgt: org . junit . assert . assertnull ( payload . getaction ( ) )
[0]: org. junit. assert. assertequals ( intervals, merge ( intervals ) )
[1]: org. junit. assert. assertthat ( merge ( intervals ), is ( intervals ) )
[2]: org. junit. assert. assertequals ( 0, graph. size ( ) )
[3]: org. junit. assert. assertequals ( 0, graph. count ( ) )
[4]: org. junit. assert. assertequals ( 0, graph. length ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , test . get ( i , j ) , 0 )
[0]: org. junit. assert. assertequals ( 0, graph. length )
[1]: org. junit. assert. assertequals ( 0, count )
[2]: org. junit. assert. assertarrayequals ( digest1, digest2 )
[3]: org. junit. assert. assertequals ( digest1, digest2 )
[4]: org. junit. assert. assertnotnull ( digest1 )

************

************
tgt: org . junit . assert . assertequals ( existingassettag , newassettag )
[0]: org. junit. assert. assertarrayequals ( digest1, hash2 )
[1]: org. junit. assert. assertarrayequals ( digest1, digest1 )
[2]: org. junit. assert. assertequals ( shouldfind, selection. radio ( com. redhat. darcy. ui. by. id ( ) ) )
[3]: org. junit. assert. assertequals ( shouldfind, select. radio ( com. redhat. darcy. ui. by. id ( ) ) )
[4]: org. junit. assert. assertnotnull ( selection. radio ( com. redhat. darcy. ui. by. id ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( photo . tostring ( ) , line )
[0]: org. junit. assert. assertequals ( shouldfind, selection. radio ( null ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( parametersmap. size ( ), 0 )
[3]: org. junit. assert. assertequals ( parametersmap. size ( ), 1 )
[4]: org. junit. assert. assertequals ( parametersmap. size ( ), null )

************

************
tgt: org . junit . assert . assertnotnull ( mocksecurityassertion )
[0]: org. junit. assert. assertequals ( parametersmap. getclassattribute ( ), null )
[1]: org. junit. assert. assertequals ( parametersmap. getclassattribute ( ), null )
[2]: org. junit. assert. asserttrue ( schemahandler. validschema ( cluster, "rayoadefinition ) )
[3]: org. junit. assert. assertfalse ( schemahandler. validschema ( cluster, "rayoadefinition ) )
[4]: org. junit. assert. asserttrue ( schemahandler. validschema ( cluster, "rayogoog ) )

************

************
tgt: org . junit . assert . assertequals ( name , namefield . getvalue ( ) )
[0]: org. junit. assert. asserttrue ( schemahandler. validschema ( cluster, org. scale7. storage. cassandra. cassandrachemahandler. dataset ) )
[1]: org. junit. assert. assertfalse ( schemahandler. validschema ( cluster, org. scale7. storage. cassandra. cassandrachemahandler. dataset ) )
[2]: org. junit. assert. assertnull ( actual )
[3]: org. junit. assert. assertequals ( null, actual )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertequals ( "testselectorexamplefromspecs:2" , msg . gettext ( ) )
[0]: org. junit. assert. assertnotnull ( actual )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( form. get ( 0 ) )
[3]: org. junit. assert. assertnotnull ( form. get ( string ) )
[4]: org. junit. assert. assertnotnull ( form. get ( 1 ) )

************

************
tgt: org . junit . assert . assertnotnull ( model )
[0]: org. junit. assert. assertnotnull ( form )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, this. testee. gettotals ( ). getnumberoflines ( ) )
[3]: org. junit. assert. assertequals ( 0, this. testee. gettotals ( ). getnumberoflines ( ) )
[4]: org. junit. assert. assertequals ( int. max_value, this. testee. gettotals ( ). getnumberoflines ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedresult , testutils . formattedresult . resultfactory . tostring ( rs ) )
[0]: org. junit. assert. assertequals ( ( - 1 ), this. testee. gettotals ( ). getnumberoflines ( ) )
[1]: org. junit. assert. assertequals ( java. lang. integer. valueof ( 100 ), this. testee. gettotals ( ) )
[2]: org. junit. assert. assertequals ( 1, sort. getsize ( ) )
[3]: org. junit. assert. assertequals ( 0, sort. getsize ( ) )
[4]: org. junit. assert. assertequals ( 2, sort. getsize ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( manipulation . getvalueprovider ( ) )
[0]: org. junit. assert. assertequals ( 3, sort. getsize ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, fixture. mark ( ) )
[3]: org. junit. assert. assertequals ( 1, fixture. mark ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, fixture. mark ( ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertequals ( 1, stapresultaat )
[1]: org. junit. assert. assertequals ( true, stapresultaat )
[2]: org. junit. assert. assertequals ( false, stapresultaat )
[3]: org. junit. assert. assertequals ( 0, stapresultaat )
[4]: org. junit. assert. assertnotnull ( stapresultaat )

************

************
tgt: org . junit . assert . assertthat ( list . size ( ) , org . hamcrest . corematchers . is ( 2 ) )
[0]: org. junit. assert. assertequals ( 1, rules )
[1]: org. junit. assert. assertequals ( 3, rules )
[2]: org. junit. assert. assertequals ( 1, list. size ( ) )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 20 ), list )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 10 ), list )

************

************
tgt: org . junit . assert . asserttrue ( ( ( manager . getreadytimestamp ( constraints ) ) != ( - 1 ) ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 20, 20 ), list )
[1]: org. junit. assert. assertequals ( 0, list. size ( ) )
[2]: org. junit. assert. assertequals ( ( ( byte ) ( - 127 ) ), got. getvalue ( ) )
[3]: org. junit. assert. assertequals ( ( ( byte ) ( - 127 ) ), got. getvalue ( ). getvalue ( ) )
[4]: org. junit. assert. assertequals ( p. getvalue ( ), got. getvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( "/" , path . tostring ( ) )
[0]: org. junit. assert. assertequals ( ( ( byte ) ( - 127 ) ), got. getvalue ( ). tostring ( ) )
[1]: org. junit. assert. assertequals ( ( ( byte ) ( - 127 ) ), got. getvalue ( ). trim ( ) )
[2]: org. junit. assert. assertequals ( curyear, c. get ( calendar. year ) )
[3]: org. junit. assert. assertequals ( curyear, 5 )
[4]: org. junit. assert. assertequals ( curyear, ( curyear + 5 ) )

************

************
tgt: org . junit . assert . assertarrayequals ( new int [ ] { 1 , 0 } , table . getcolumnorder ( ) )
[0]: org. junit. assert. assertequals ( curyear, ( curyear - 5 ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( node. getparent ( ) )
[3]: org. junit. assert. assertnull ( node. getparent ( ) )
[4]: org. junit. assert. assertequals ( null, node. getparent ( ) )

************

************
tgt: org . junit . assert . assertfalse ( ( 1 == 2 ) )
[0]: org. junit. assert. assertequals ( null, node. getparent ( ). getid ( ) )
[1]: type ) )
[2]: org. junit. assert. assertequals ( expectedresult, actualresult )
[3]: org. junit. assert. assertequals ( expectedresult, actualresult. trim ( ) )
[4]: org. junit. assert. assertequals ( actualresult, expectedresult )

************

************
tgt: org . junit . assert . assertfalse ( isother )
[0]: org. junit. assert. assertequals ( result, actualresult )
[1]: org. junit. assert. assertequals ( expected result, actualresult )
[2]: org. junit. assert. assertequals ( 1, result. size ( ) )
[3]: org. junit. assert. assertequals ( 0, result. size ( ) )
[4]: org. junit. assert. assertequals ( 3, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( 2, result. size ( ) )
[1]: the size ( ) )
[2]: org. junit. assert. assertequals ( 3, decomposition. size ( ) )
[3]: org. junit. assert. assertequals ( 200, response. getstatus ( ) )
[4]: org. junit. assert. assertequals ( 1, response. getstatus ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , name )
[0]: org. junit. assert. assertequals ( 1, dc. getgame ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, dc. getgame ( ). size ( ) )
[2]: org. junit. assert. assertequals ( null, dc. getgame ( ) )
[3]: org. junit. assert. assertnotnull ( dc. getgame ( ) )
[4]: org. junit. assert. assertequals ( null, dc. getgame ( ). get ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( outage )
[0]: org. junit. assert. assertequals ( expected, actual. get ( ) )
[1]: org. junit. assert. assertequals ( expected, actual. get ( ). getmessage ( ) )
[2]: org. junit. assert. assertequals ( expected, actual. get ( ). tostring ( ) )
[3]: org. junit. assert. assertequals ( expected, actual. get ( ) )
[4]: org. junit. assert. assertequals ( expected, actual. get ( ). trim ( ) )

************

************
tgt: org . junit . assert . assertfalse ( lockacquired )
[0]: org. junit. assert. assertnotnull ( dao. gettunnelstats ( ) )
[1]: org. junit. assert. assertequals ( 1, event. gettunnelstats ( ) )
[2]: org. junit. assert. assertequals ( 1, event. gettunnelstats ( ). size ( )
[3]: org. junit. assert. assertequals ( 1, event. gettunnelstats ( ). length )
[4]: test case for

************

************
tgt: org . junit . assert . assertequals ( 2 , actual . size ( ) )
[0]: org. junit. assert. assertequals ( testobject. objectid, retrievedobject )
[1]: org. junit. assert. assertequals ( testobject, retrievedobject )
[2]: org. junit. assert. assertnotnull ( retrievedobject )
[3]: org. junit. assert. assertequals ( testobject [ 1 ], retrievedobject )
[4]: org. junit. assert. assertequals ( testobject [ 0 ], retrievedobject )

************

************
tgt: org . junit . assert . asserttrue ( ( ( g7w14 . test . usermanagertest . manager . insertuser ( ) ) == null ) )
[0]: org. junit. assert. assertnull ( lookupidentifier ( crs, false ) )
[1]: org. junit. assert. assertnull ( lookupidentifier ( crs, true ) )
[2]: org. junit. assert. assertnull ( lookupidentifier ( crs, null ) )
[3]: org. junit. assert. assertnull ( lookupidentifier ( crs, false ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( r2 , obj1 )
[0]: org. junit. assert. assertnull ( parser. getpassword ( ) )
[1]: org. junit. assert. assertequals ( dbdeploy, parser. getpassword ( ) )
[2]: org. junit. assert. assertnotnull ( parser. getpassword ( ) )
[3]: org. junit. assert. assertequals ( null, parser. getpassword ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertnotnull ( adapter )
[0]: org. junit. assert. assertequals ( 123, gc. getgcoperations ( gc ). amount )
[1]: org. junit. assert. assertequals ( 123, gc. getgcoperations ( gc ) )
[2]: org. junit. assert. assertequals ( 123, gc. getgcoperations ( gc ). amount ( )
[3]: org. junit. assert. assertnotnull ( gc )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , processedusages . size ( ) )
[0]: org. junit. assert. assertequals ( null, basetype )
[1]: org. junit. assert. assertequals ( java. lang. string. class, basetype )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), basetype )
[3]: org. junit. assert. assertequals ( java. lang. string. valueof ( 0 ), basetype )
[4]: org. junit. assert. assertnotnull ( basetype )

************

************
tgt: org . junit . assert . assertnull ( header )
[0]: org. junit. assert. assertequals ( message, message )
[1]: org. junit. assert. assertequals ( message, msg )
[2]: org. junit. assert. assertequals ( message, msg, message )
[3]: org. junit. assert. assertequals ( message, message, message )
[4]: , message )

************

************
tgt: org . junit . assert . assertequals ( "m" , e . getmessage ( ) )
[0]: org. junit. assert. assertnotnull ( result. get ( x, y ) )
[1]: org. junit. assert. assertequals ( 255, result. get ( x, y ) )
[2]: org. junit. assert. assertequals ( image [ x ], result. get ( x, y ) )
[3]: org. junit. assert. assertnull ( result. get ( x, y ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( e . getmessage ( ) . contains ( originsource . getname ( ) ) )
[0]: org. junit. assert. assertequals ( ( numberofmodels - numberofmodels ), bpmnmodels )
[1]: org. junit. assert. assertequals ( 1, bpmnmodels. size ( ) )
[2]: org. junit. assert. assertequals ( ( numberofmodels + 1 ), bpmnmodels )
[3]: org. junit. assert. assertequals ( 0, bpmnmodels. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . is ( org . hamcrest . matchers . equalto ( expected ) ) )
[0]: org. junit. assert. assertequals ( i, 1 )
[1]: org. junit. assert. assertequals ( i, 0 )
[2]: org. junit. assert. assertequals ( i, 12 )
[3]: org. junit. assert. assertequals ( i, size )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( display . isdisposed ( ) )
[0]: org. junit. assert. assertnotnull ( psiclass )
[1]: org. junit. assert. assertnotnull ( psiclass, psiclass )
[2]: org. junit. assert. assertnotnull ( psiclass. slideclasspath )
[3]: org. junit. assert. assertequals ( 1, read. size ( ) )
[4]: org. junit. assert. assertequals ( 0, read. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( java . lang . integer ) ( 6 ) ) , sum . reduceright ( aslist ( 1 , 2 , 3 ) ) )
[0]: org. junit. assert. assertequals ( 4, read. size ( ) )
[1]: org. junit. assert. assertequals ( 6, read. size ( ) )
[2]: org. junit. assert. assertequals ( 2, read. size ( ) )
[3]: org. junit. assert. assertequals ( 1, service. allproperties ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, service. allproperties ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( e instanceof com . github . tobato . fastdfs . exception . fdfsunsupportstorepathexception ) )
[0]: org. junit. assert. assertequals ( 2, service. allproperties ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, services. allproperties ( ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, totalnodes ( ) )
[4]: org. junit. assert. assertequals ( 0, totalnodes ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , ref . atomicget ( ) )
[0]: org. junit. assert. assertequals ( 1, collection. totalnodes ( ) )
[1]: org. junit. assert. assertequals ( 1, totalnodes. totalnodes ( ) )
[2]: org. junit. assert. assertequals ( 1, root. totalnodes ( ) )
[3]: org. junit. assert. assertnotnull ( authorizationmanager. authorize ( perspective1, user1 ) )
[4]: org. junit. assert. assertequals ( true, authorizationmanager. authorize ( perspective1, user1 ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( 1, authorizationmanager. authorize ( perspective1, user1 ) )
[1]: org. junit. assert. assertnull ( authorizationmanager. authorize ( perspective1, user1 ) )
[2]: org. junit. assert. asserttrue ( authorizationmanager. authorize ( perspective1, user1 ) )
[3]: org. junit. assert. asserttrue ( magleveren )
[4]: org. junit. assert. assertthat ( statuscode )

************

************
tgt: org . junit . assert . asserttrue ( object . isempty ( ) )
[0]: org. junit. assert. assertequals ( 1, statuscode )
[1]: org. junit. assert. assertequals ( 0, statuscode )
[2]: org. junit. assert. assertequals ( 200, statuscode )
[3]: ) )
[4]: org. junit. assert. assertarrayequals ( datafound, dataexpected )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertarrayequals ( datafound. length, dataexpected. length )
[1]: org. junit. assert. asserttrue ( java. util. arrays. equals ( datafound, dataexpected ) )
[2]: org. junit. assert. assertthat ( datafound, org. hamcrest. matchers. is ( dataexpected ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, result. getb ( ). size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( source instanceof edu . illinois . library . cantaloupe . source . httpsource ) )
[0]: org. junit. assert. assertequals ( 0, result. getb ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( true ), result. getb ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result. getb ( ) )
[3]: org. junit. assert. assertnotnull ( result. getb ( ) )
[4]: org. junit. assert. assertnotnull ( spec. getimplementationtitle ( ) )

************

************
tgt: org . junit . assert . asserttrue ( nativelabelscanstore . isdirty ( ) )
[0]: org. junit. assert. assertequals ( 0, spec. getimplementationtitle ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, spec. getimplementationtitle ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, spec. getimplementationtitle ( ). length )
[3]: org. junit. assert. assertequals ( 1, spec. getimplementationtitle ( ). length )
[4]: org. junit. assert. assertthat ( brokerage. getid ( ), org. hamcrest. core. is. is ( brokerage. getid ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , list . size ( ) )
[0]: org. junit. assert. assertthat ( brokerage. getid ( ), org. hamcrest. core. is. is ( brokerage ) )
[1]: org. junit. assert. assertthat ( brokerage. getid ( ), org. hamcrest. core. is. is ( brokerage. tostring ( ) ) )
[2]: org. junit. assert. assertthat ( brokerage. getid ( ), org. hamcrest. core. is. is ( brokerage. size ( ) ) )
[3]: org. junit. assert. assertthat ( brokerage. getid ( ), org. hamcrest. core. is. is ( brokerage. get ( ) ) )
[4]: org. junit. assert. assertthat ( deletedentityargumentcaptor. getvalue ( ), org. hamcrest. corematchers. equalto ( channelentityargumentcaptor. getvalue ( ) ) )

************

************
tgt: org . junit . assert . assertthat ( target . parse ( ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertthat ( channelentityargumentcaptor. getvalue ( ), org. hamcrest. corematchers. equalto ( channelentityargumentcaptor. getvalue ( ) ) )
[1]: org. junit. assert. assertthat ( deletedentityargumentcaptor. getvalue ( ), org. hamcrest. corematchers. is ( channelentityargumentcaptor. getvalue ( ) ) )
[2]: org. junit. assert. assertthat ( channelentityargumentcaptor. getvalue ( ), org. hamcrest. corematchers. is ( channelentityargumentcaptor. getvalue ( ) ) )
[3]: org. junit. assert. assertequals ( facebookentity, channelentityargumentcaptor. getvalue ( ) )
[4]: org. junit. assert. assertthat ( results, matchesfield ( uk. gov. pay. api. it. paymentresourcesearchitest. test_reference, uk. gov. pay. api. it. paymentresourcesearchitest. test_reference ) )

************

************
tgt: org . junit . assert . assertequals ( html , sanitized )
[0]: org. junit. assert. assertthat ( results, matchesfield ( org. gov. pay. api. it. paymentresourcesearchitest. test_reference, uk. gov. pay. api. it. paymentresourcesearchitest. test_reference ) )
[1]: org. junit. assert. assertthat ( results, matchesfield ( ""name"", uk. gov. pay. api. it. paymentresourcesearchitest. test_reference ) )
[2]: org. junit. assert. assertthat ( results, matchesfield ( ""foo"", uk. gov. pay. api. it. paymentresourcesearchitest. test_reference ) )
[3]: org. junit. assert. assertthat ( results, matchesfield ( null, uk. gov. pay. api. it. paymentresourcesearchitest. test_reference ) )
[4]: org. junit. assert. assertequals ( 0, readlock. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( object . simplelist , result . simplelist )
[0]: org. junit. assert. assertequals ( 1, readlock. size ( ) )
[1]: org. junit. assert. assertequals ( 1, readlock. get ( ) )
[2]: org. junit. assert. assertequals ( 0, readlock. get ( ) )
[3]: org. junit. assert. assertnotnull ( readlock )
[4]: org. junit. assert. assertequals ( 5, counter. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( contained )
[0]: org. junit. assert. assertthat ( result. getvalueforattribute ( attributetype. nserver ). tostring ( ), org. hamcrest. matchers. is ( 1 ) )
[1]: org. junit. assert. assertthat ( result. getvalueforattribute ( attributetype. nserver ). tostring ( ), org. hamcrest. matchers. is ( dataset ) )
[2]: org. junit. assert. assertthat ( result. getvalueforattribute ( attributetype. nserver ). tostring ( ), org. hamcrest. matchers. is ( data ) )
[3]: org. junit. assert. assertnotnull ( result. getvalueforattribute ( attributetype. nserver ). tostring ( ) )
[4]: org. junit. assert. assertthat ( result. getvalueforattribute ( attributetype. nserver ). tostring ( ), is ( 1 ) )

************

************
tgt: org . junit . assert . assertarrayequals ( bos . tobytearray ( ) , tmp )
[0]: org. junit. assert. assertnotnull ( nf. getgroup ( guaranteeda/b/c ) )
[1]: org. junit. assert. assertnotnull ( nf. getgroup ( guaranteeda/b/c/c ) )
[2]: org. junit. assert. assertnotnull ( nf. getgroup ( guaranteeda/b/c/c } )
[3]: org. junit. assert. assertnotnull ( nf. getgroup ( nka/b/c/c ) )
[4]: org. junit. assert. assertnotnull ( nf )

************

************
tgt: org . junit . assert . assertequals ( ex , e . getcause ( ) )
[0]: org. junit. assert. assertequals ( 1, r )
[1]: org. junit. assert. assertequals ( 0, r )
[2]: org. junit. assert. assertequals ( r, 1 )
[3]: org. junit. assert. assertequals ( 3, r )
[4]: org. junit. assert. assertequals ( 5, r )

************

************
tgt: org . junit . assert . assertequals ( "hello<sp>world" , event . getvalue ( ) . getpayload ( ) )
[0]: org. junit. assert. assertnull ( this. context. getoldestitemtime ( ) )
[1]: org. junit. assert. assertnull ( this. list. getoldestitemtime ( ) )
[2]: org. junit. assert. assertnull ( queue. getoldestitemtime ( ) )
[3]: org. junit. assert. assertnull ( missing. getoldestitemtime ( ) )
[4]: org. junit. assert. assertnull ( buf. getoldestitemtime ( ) )

************

************
tgt: org . junit . assert . assertequals ( expseq , out )
[0]: org. junit. assert. assertequals ( appconfigproperties. gethibernatesettingsxml, hibernatesettingsxml )
[1]: org. junit. assert. assertnotnull ( retry )
[2]: org. junit. assert. assertequals ( 0, status )
[3]: org. junit. assert. assertequals ( ( - 1 ), status )
[4]: org. junit. assert. asserttrue ( ( status == 0 ) )

************

************
tgt: org . junit . assert . assertfalse ( didruleapply )
[0]: org. junit. assert. assertequals ( ( - 0 ), status )
[1]: org. junit. assert. assertequals ( 1, status )
[2]: org. junit. assert. assertnotnull ( json )
[3]: org. junit. assert. assertequals ( ""foo"", json )
[4]: org. junit. assert. assertequals ( null, json )

************

************
tgt: org . junit . assert . asserttrue ( viewaction . project . visiblefiletry ( project . getname ( ) ) )
[0]: org. junit. assert. assertequals ( 1, datasetmetadata. size ( ) )
[1]: org. junit. assert. assertequals ( 0, datasetmetadata. size ( ) )
[2]: org. junit. assert. asserttrue ( ( ( datasetmetadata. size ( ) ) == 1 ) )
[3]: org. junit. assert. asserttrue ( ( ( datasetmetadata. size ( ) ) == 0 ) )
[4]: org. junit. assert. assertequals ( 2, datasetmetadata. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedjson , message . tojson ( ) )
[0]: org. junit. assert. assertequals ( 1, testdmmessage. getmethodname ( ) )
[1]: org. junit. assert. assertequals ( 0, testdmmessage. getmethodname ( ) )
[2]: org. junit. assert. assertnotnull ( testdmmessage. getmethodname ( ) )
[3]: org. junit. assert. assertequals ( 0, testdmmessage. getmethodname ( ). length )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , count )
[0]: org. junit. assert. asserttrue ( result. isempty ( ) )
[1]: org. junit. assert. assertnotnull ( trykey ( descriptor. getid ( ) ) )
[2]: org. junit. assert. assertnotnull ( trykey ( descriptor ) )
[3]: org. junit. assert. assertnotnull ( util. trykey ( descriptor. getid ( ) ) )
[4]: org. junit. assert. assertnotnull ( reader. trykey ( descriptor. getid ( ) ) )

************

************
tgt: org . junit . assert . assertequals ( false , isjohnpresent )
[0]: org. junit. assert. assertnotnull ( reader. trykey ( descriptor ) )
[1]: org. junit. assert. assertnotnull ( constructmap )
[2]: org. junit. assert. assertequals ( null, constructmap )
[3]: org. junit. assert. assertnull ( constructmap )
[4]: , constructmap )

************

************
tgt: org . junit . assert . asserttrue ( e . getmessage ( ) . contains ( "xyzzy" ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( element )
[2]: org. junit. assert. assertsame ( element, element. withname ( name ) )
[3]: org. junit. assert. assertnotnull ( element. withname ( name ) )
[4]: org. junit. assert. assertnotnull ( element. withname ( ""foo"" ) )

************

************
tgt: org . junit . assert . assertequals ( null , realpath )
[0]: org. junit. assert. assertequals ( element, element. withname ( name ) )
[1]: org. junit. assert. assertequals ( smoothed, point )
[2]: org. junit. assert. assertequals ( point, smoothed )
[3]: org. junit. assert. assertnotnull ( smoothed )
[4]: org. junit. assert. assertsame ( smoothed, point )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertequals ( smoothed, points )
[1]: org. junit. assert. assertequals ( 0, data. getcomponents ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, data. getcomponents ( ). size ( ) )
[3]: org. junit. assert. assertnotnull ( ex )
[4]: org. junit. assert. asserttrue ( taskpendingforuser )

************

************
tgt: org . junit . assert . assertequals ( expectednumsplits , queries . size ( ) )
[0]: org. junit. assert. assertequals ( true, taskpendingforuser )
[1]: org. junit. assert. assertequals ( expecteduser, taskpendingforuser )
[2]: org. junit. assert. assertequals ( false, taskpendingforuser )
[3]: org. junit. assert. assertequals ( expecteduser, taskpendingforuser,
[4]: org. junit. assert. assertequals ( 1, spectrumband. getoriginalband ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( cp )
[0]: org. junit. assert. assertequals ( 0, spectrumband. getoriginalband ( ). size ( ) )
[1]: org. junit. assert. assertequals ( null, spectrumband. getoriginalband ( ) )
[2]: org. junit. assert. assertequals ( 1, spectrumband. getoriginalband ( ). get ( ) )
[3]: org. junit. assert. assertequals ( 1, spectrumband. getoriginalband ( ). size ( ) ) ;
[4]: org. junit. assert. asserttrue ( map. containsvalue ( 123 ) )

************

************
tgt: org . junit . assert . asserttrue ( com . liferay . portal . kernel . util . arrayutil . isempty ( array ) )
[0]: org. junit. assert. asserttrue ( map. containsvalue ( null ) )
[1]: org. junit. assert. asserttrue ( map. containsvalue ( 20 ) )
[2]: org. junit. assert. asserttrue ( map. containsvalue ( 123 ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( name )

************

************
tgt: org . junit . assert . asserttrue ( errors . tostring ( ) , errors . isempty ( ) )
[0]: org. junit. assert. assertequals ( name, name )
[1]: org. junit. assert. assertequals ( null, name )
[2]: org. junit. assert. assertequals ( name, null )
[3]: org. junit. assert. assertequals ( name, string )
[4]: org. junit. assert. assertnotnull ( overriddentablename )

************

************
tgt: org . junit . assert . asserttrue ( config . usecompiledfrontendresources ( ) )
[0]: org. junit. assert. assertnull ( overriddentablename )
[1]: , overriddentablename )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, 1 )

************

************
tgt: org . junit . assert . assertthat ( output , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertnotnull ( context )
[1]: org. junit. assert. assertequals ( 0, 1 )
[2]: org. junit. assert. assertnotnull ( s )
[3]: type ) )
[4]: org. junit. assert. assertequals ( expectedlabelvalue, errormessage )

************

************
tgt: org . junit . assert . assertfalse ( idpconfiguration . getusers ( ) . stream ( ) . filter ( ( userauthenticationtoken ) -> userauthenticationtoken . getprincipal ( ) . equals ( "hacker" ) ) . findfirst ( ) . get ( ) . getattributes ( ) . containskey ( mujina . api . idpcontrollertest . new_attribute ) )
[0]: org. junit. assert. assertequals ( expectedlabelvalue, labelvalue )
[1]: org. junit. assert. assertequals ( incorrectlabelvalue, errormessage )
[2]: org. junit. assert. assertequals ( expectlabelvalue, errormessage )
[3]: org. junit. assert. assertequals ( expectedlabelvalue, error )
[4]: org. junit. assert. assertequals ( sampletest, actual )

************

************
tgt: org . junit . assert . asserttrue ( coder . consistentwithequals ( ) )
[0]: org. junit. assert. assertequals ( sampletest, response )
[1]: org. junit. assert. assertequals ( sampletest, test. nextname )
[2]: org. junit. assert. assertequals ( sampletest, dataset )
[3]: org. junit. assert. assertequals ( sampletest, test. invokeasync )
[4]: org. junit. assert. assertequals ( 0, data. getused ( ) )

************

************
tgt: org . junit . assert . assertfalse ( grid . isautoheight ( ) )
[0]: org. junit. assert. assertequals ( 0, org. apache. cxf. jaxb. model. model. getused ( ) )
[1]: org. junit. assert. assertequals ( 0, org. apache. cxf. jaxb. model. jpa. getused ( ) )
[2]: org. junit. assert. assertnotnull ( data. getused ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( root, result. getroot ( ) )

************

************
tgt: org . junit . assert . assertequals ( new org . finra . herd . model . api . xml . businessobjectdataddl ( namespace , bdef_name , format_usage_code , org . finra . herd . model . jpa . filetypeentity . txt_file_type , format_version , java . util . arrays . aslist ( new org . finra . herd . model . api . xml . partitionvaluefilter ( first_partition_column_name , unsorted_partition_values , no_partition_value_range , no_latest_before_partition_value , no_latest_after_partition_value ) ) , no_standalone_partition_value_filter , data_version , storage_names , no_storage_name , org . finra . herd . model . api . xml . businessobjectdataddloutputformatenum . hive_13_ddl , table_name , no_custom_ddl_name , expectedddl ) , resultbusinessobjectdataddl )
[0]: org. junit. assert. assertequals ( root. getroot ( ), result )
[1]: org. junit. assert. assertequals ( true, result )
[2]: org. junit. assert. assertequals ( boolean. true, result )
[3]: org. junit. assert. assertequals ( result, boolean. true )
[4]: org. junit. assert. assertequals ( false, result )

************

************
tgt: org . junit . assert . assertequals ( expected , org . eclipse . rap . clientbuilder . javascriptprinter . printtokens ( tokens ) )
[0]: org. junit. assert. assertequals ( result, true )
[1]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), field. get ( publicchild ) )
[2]: org. junit. assert. assertequals ( java_1_3, field. get ( publicchild ) )
[3]: org. junit. assert. assertequals ( java. lang. double. valueof ( 1 ), field. get ( publicchild ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), field. get ( publicchild ) )

************

************
tgt: org . junit . assert . assertequals ( long . max_value , mac . tolong ( ) )
[0]: org. junit. assert. assertequals ( java. lang. long. valueof ( 1 ), field. get ( null ) )
[1]: org. junit. assert. assertequals ( schedulerresponses. tostring ( ), 1, schedulerresponses. size ( ) )
[2]: org. junit. assert. assertequals ( schedulerresponses. tostring ( ), 2, schedulerresponses. size ( ) )
[3]: org. junit. assert. assertequals ( schedulerresponses. tostring ( ), 4, schedulerresponses. size ( ) )
[4]: org. junit. assert. assertequals ( schedulerresponses. tostring ( ), 3, schedulerresponses. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , map . acquireusing ( "key" , null ) . getvalue ( ) )
[0]: org. junit. assert. assertequals ( schedulerresponses. tostring ( ), 0, schedulerresponses. size ( ) )
[1]: org. junit. assert. assertthat ( list, org. hamcrest. matchers. contains ( u_null_id, id12, id2, id1 ) )
[2]: org. junit. assert. assertthat ( list, org. hamcrest. matchers. contains ( u_null_id, id12, id1, id2, id12 ) )
[3]: org. junit. assert. assertthat ( list, org. hamcrest. matchers. contains ( u_null_id, id1, id2, id12 ) )
[4]: org. junit. assert. assertthat ( list, org. hamcrest. matchers. contains ( u_null_id, id12, id1, u_null_id ) )

************

************
tgt: org . junit . assert . asserttrue ( errors . hasfielderrors ( "name" ) )
[0]: org. junit. assert. assertequals ( emptylist ( ), list )
[1]: org. junit. assert. assertequals ( 1, ok. wasloadcalled ( ) )
[2]: org. junit. assert. assertequals ( 0, ok. wasloadcalled ( ) )
[3]: org. junit. assert. assertequals ( 1, wasloadcalled ( ) )
[4]: org. junit. assert. assertnull ( ok. wasloadcalled ( ) )

************

************
tgt: org . junit . assert . assertequals ( test , testutils . formattedresult . resultfactory . tostring ( rs ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, mdbeans. size ( ) )
[2]: org. junit. assert. assertequals ( 0, mdbeans. size ( ) )
[3]: org. junit. assert. assertequals ( 2, mdbeans. size ( ) )
[4]: org. junit. assert. assertequals ( 3, mdbeans. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( info . getconfigstatusmessages ( ) . size ( ) , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert. assertequals ( 5, mdbeans. size ( ) )
[1]: org. junit. assert. assertthat ( violations. isempty ( ), is ( true ) )
[2]: org. junit. assert. assertthat ( violations, org. hamcrest. corematchers. is ( true ) )
[3]: org. junit. assert. assertthat ( violations. isempty ( ), contains ( today ) )
[4]: org. junit. assert. assertthat ( violations, isempty ( ) )

************

************
tgt: org . junit . assert . assertfalse ( kbuilder . haserrors ( ) )
[0]: _2. isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, idx. getsize ( ) )
[2]: org. junit. assert. assertnotnull ( idx. getsize ( ) )
[3]: org. junit. assert. assertequals ( 0, idx. getsize ( ) )
[4]: org. junit. assert. assertnull ( idx. getsize ( ) )

************

************
tgt: org . junit . assert . assertequals ( xml , dnd . getxml ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( entityname, project. lookupchild ( child, childid ) )
[2]: org. junit. assert. assertequals ( entityname, project. lookupchild ( null, childid ) )
[3]: org. junit. assert. assertequals ( entityname, project. lookupchild ( childid, null ) )
[4]: org. junit. assert. assertnotnull ( project. lookupchild ( childid, childid ) )

************

************
tgt: org . junit . assert . assertnotnull ( instance . getoverlaps ( source , target ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, outputformats. supportedformats ( ). size ( ) )
[2]: org. junit. assert. assertequals ( format. supportedformats, outputformats )
[3]: org. junit. assert. assertequals ( outputformats, outputformats )
[4]: org. junit. assert. assertequals ( 0, outputformats. supportedformats ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( format. supportedformats, outputformats. supportedformats ( ) )
[1]: org. junit. assert. assertequals ( 1, store. size ( ) )
[2]: org. junit. assert. assertequals ( 0, store. size ( ) )
[3]: org. junit. assert. assertequals ( 1, stores. size ( ) )
[4]: org. junit. assert. assertequals ( 3, store. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ibset . equals ( ibset ) )
[0]: org. junit. assert. assertequals ( org. apache. jena. dboe. base. file. abstracttestchannel )
[1]: org. junit. assert. assertequals ( 1, equeue. size ( ) )
[2]: org. junit. assert. assertequals ( 0, equeue. size ( ) )
[3]: org. junit. assert. assertequals ( 1, equeue. errors. size ( ) )
[4]: org. junit. assert. asserttrue ( slice. events. isempty ( ) )

************

************
tgt: org . junit . assert . assertfalse ( traversal . hasnext ( ) )
[0]: org. junit. assert. asserttrue ( slice. event. isempty ( ) )
[1]: org. junit. assert. assertnotnull ( slice )
[2]: org. junit. assert. assertequals ( 1, slice. events. size ( )
[3]: ) )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), com. feilong. taglib. display. sensitive. sensitiveutil. parse ( null, java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertnull ( elements . getpackageelement ( "foo" ) )
[0]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), com. feilong. taglib. display. sensitive. sensitiveutil. parse ( null, java. util. collections. emptylist ( ) ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), com. feilong. taglib. display. sensitive. sensitiveutil. parse ( null, java. util. arrays. aslist ( ) ) )
[2]: org. junit. assert. assertnull ( com. feilong. taglib. display. sensitive. sensitiveutil. parse ( null, java. util. collections. emptylist ( ) ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, dag. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( splits , decoded )
[0]: org. junit. assert. assertequals ( expected, dag )
[1]: org. junit. assert. assertequals ( 3, dag. size ( ) )
[2]: org. junit. assert. assertequals ( expresult, dag )
[3]: org. junit. assert. assertequals ( dag, dag1 )
[4]: org. junit. assert. assertequals ( testapi, testapi )

************

************
tgt: org . junit . assert . assertequals ( test . minmoves ( input ) , 3 )
[0]: org. junit. assert. assertequals ( nodekey, prefixed )
[1]: org. junit. assert. assertequals ( nodekey, prefix )
[2]: org. junit. assert. assertequals ( nodekey, _ )
[3]: org. junit. assert. assertequals ( nodekey, metrickeyformatter )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( match , org . hamcrest . matchers . is ( true ) )
[0]: org. junit. assert. assertequals ( s1, s2 )
[1]: org. junit. assert. assertequals ( s2, s1 )
[2]: org. junit. assert. assertequals ( s2, s2 )
[3]: org. junit. assert. assertequals ( s0, s2 )
[4]: org. junit. assert. assertequals ( s 1, s2 )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertthat ( intersection. getasdoublearray ( ), org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( new double [ ] { 1.5 } ) ) )
[1]: org. junit. assert. assertthat ( intersection. getasdoublearray ( ), org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( new double [ ] { 1.5, 2.0 } ) ) )
[2]: org. junit. assert. assertnotnull ( intersection. getasdoublearray ( ) )
[3]: ( 1.0 ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( fooelement . getinterfaces ( ) , org . hamcrest . matchers . empty ( ) )
[0]: org. junit. assert. assertequals ( 1, tnb. getalarms ( ). length )
[1]: org. junit. assert. assertequals ( 1, tnb. getalarms ( ) )
[2]: org. junit. assert. assertequals ( 1, tnb. getalarms ( ). size ( )
[3]: org. junit. assert. assertnotnull ( tnb. getalarms ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , tagsselector . select ( mediapackage , true ) . size ( ) )
[0]: org. junit. assert. assertarrayequals ( protocols, configurable. getenabledprotocols ( ) )
[1]: org. junit. assert. assertequals ( protocols, configurable. getenabledprotocols ( ) )
[2]: org. junit. assert. assertarrayequals ( protocols, configurable. getenabledprotocols ( ) )
[3]: org. junit. assert. assertarrayequals ( protocols, configurable. getenabledprotocols )
[4]: org. junit. assert. assertarrayequals ( protocols )

************

************
tgt: org . junit . assert . assertequals ( newstate , event . getnewstate ( ) )
[0]: org. junit. assert. asserttrue ( service. isusedisk ( ) )
[1]: org. junit. assert. asserttrue ( svc. isusedisk ( ) )
[2]: org. junit. assert. asserttrue ( servic. isusedisk ( ) )
[3]: org. junit. assert. asserttrue ( corpus. isusedisk ( ) )
[4]: org. junit. assert. asserttrue ( store. isusedisk ( ) )

************

************
tgt: org . junit . assert . assertequals ( answer , memoizer . compute ( input ) )
[0]: org. junit. assert. assertequals ( result. tostring ( ), path. tostring ( ) )
[1]: org. junit. assert. assertequals ( result. tostring ( ), null )
[2]: org. junit. assert. assertequals ( result. tostring ( ), """" )
[3]: org. junit. assert. assertequals ( result. tostring ( ), ""foo"" )
[4]: org. junit. assert. assertequals ( result. tostring ( ), ""test"" )

************

************
tgt: org . junit . assert . assertsame ( expected , e )
[0]: org. junit. assert. assertthat ( query. count ( ), org. hamcrest. corematchers. is ( 1l ) )
[1]: org. junit. assert. assertequals ( 1, sb. length ( ) )
[2]: org. junit. assert. assertequals ( null, d )
[3]: org. junit. assert. assertequals ( java. util. date. class, d. getclass ( ) )
[4]: org. junit. assert. assertequals ( java. util. date. valueof ( 1 ), d )

************

************
tgt: org . junit . assert . assertequals ( 3 , best . gettests ( ) . size ( ) )
[0]: org. junit. assert. assertequals ( new java. util. date ( 1 ), d )
[1]: type ) )
[2]: org. junit. assert. assertnull ( context. onstart ( data, context ) )
[3]: org. junit. assert. assertequals ( data, context. onstart ( data, context ) )
[4]: org. junit. assert. assertequals ( null, context. onstart ( data, context ) )

************

************
tgt: org . junit . assert . assertequals ( true , classundertest . getshowresultsmetadata ( ) )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), context )
[1]: ) )
[2]: org. junit. assert. assertequals ( auth3, authstore3 )
[3]: org. junit. assert. assertequals ( auth1, authstore3 )
[4]: org. junit. assert. assertequals ( auth3, authstore1 )

************

************
tgt: org . junit . assert . assertsame ( jaxbcontext , jaxbcontextresolver . getjaxbcontext ( org . everrest . core . generated . book . class ) )
[0]: org. junit. assert. assertequals ( auth2, authstore1 )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( persistentattributes. get ( ""foo"" ) )
[3]: org. junit. assert. assertnotnull ( persistentattributes. get ( org. apache. commons. lang. string. class ) )
[4]: org. junit. assert. assertnotnull ( persistentattributes. get ( null ) )

************

************
tgt: org . junit . assert . assertnotnull ( logger )
[0]: org. junit. assert. assertnotnull ( persistentattributes. get ( string_2 ) )
[1]: org. junit. assert. assertnotnull ( persistentattributes. get ( org. apache. commons. lang. object. class ) )
[2]: org. junit. assert. assertequals ( 10, atact2. get ( 0 ) )
[3]: org. junit. assert. assertequals ( 9, atact2. get ( 0 ) )
[4]: org. junit. assert. assertequals ( 10, atact1. get ( 0 ) )

************

************
tgt: org . junit . assert . assertequals ( expectinggrammarstr , g . tostring ( ) )
[0]: org. junit. assert. assertthat ( project. property ( null ), is ( props ) )
[1]: org. junit. assert. assertthat ( project. property ( 1 ), is ( props ) )
[2]: org. junit. assert. assertthat ( project. property ( null ), is ( null ) )
[3]: org. junit. assert. assertthat ( project. property ( 1 ), is ( true ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( this . dataverserole , this . roleassignment . getrole ( ) )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 0, ( ( int ) ( result. size ( ) ) ) )
[3]: org. junit. assert. assertequals ( 0, results. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), result )

************

************
tgt: org . junit . assert . assertthat ( result . gettext ( ) , org . hamcrest . matchers . equalto ( "i<sp>like<sp>cheese" ) )
[0]: org. junit. assert. assertsame ( r1, r2 )
[1]: org. junit. assert. assertsame ( r1, ( r2 == r2 ) )
[2]: org. junit. assert. assertsame ( r0, r2 )
[3]: org. junit. assert. assertsame ( r1, ( r2 - r2 ) )
[4]: org. junit. assert. assertsame ( r1. getreceiver ( ), r2 )

************

************
tgt: org . junit . assert . asserttrue ( accessible )
[0]: org. junit. assert. assertequals ( rawpassword, admin )
[1]: org. junit. assert. assertequals ( p, cache. get ( orgk1 ) )
[2]: org. junit. assert. assertequals ( p, cache. get ( orgk11 ) )
[3]: org. junit. assert. assertequals ( p, cache. get ( "k1 ) )
[4]: org. junit. assert. assertequals ( p, cache. get ( orgk1bot ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( p )
[1]: org. junit. assert. assertequals ( 0, dao. create ( foo ) )
[2]: org. junit. assert. assertequals ( true, blockevents. ispermanentblockrequired ( ) )
[3]: org. junit. assert. asserttrue ( blockevents. ispermanentblockrequired ( ) )
[4]: org. junit. assert. assertthat ( blockevents. ispermanentblockrequired ( ), is ( true ) )

************

************
tgt: org . junit . assert . asserttrue ( aredependencytypesdetected ( fromclass , toclass , typestofind , true ) )
[0]: org. junit. assert. assertfalse ( blockevents. ispermanentblockrequired ( ) )
[1]: org. junit. assert. assertthat ( blockevents. ispermanentblockrequired ( ), is ( false ) )
[2]: org. junit. assert. asserttrue ( org. apache. maven. shared. utils. io. java7support. issymlink ( file ) )
[3]: org. junit. assert. assertequals ( 1, newbag ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, newbag ( ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( serverstatus . isrepeat ( ) )
[0]: org. junit. assert. assertnotnull ( newbag ( ). collection ( ) )
[1]: org. junit. assert. assertequals ( 1, this. newbag ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, this. newbag ( ). size ( )
[3]: org. junit. assert. asserttrue ( e. getmessage ( ). contains ( null ) )
[4]: org. junit. assert. assertfalse ( e. getmessage ( ). contains ( null ) )

************

************
tgt: org . junit . assert . assertfalse ( object . getboolean ( "foo" , false ) )
[0]: org. junit. assert. assertequals ( true, e. getmessage ( ). contains ( null ) )
[1]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[2]: ) )
[3]: org. junit. assert. asserttrue ( iterator. hasnext ( ) )
[4]: org. junit. assert. assertequals ( 1, wadlelementname. getlocalname ( ) )

************

************
tgt: org . junit . assert . asserttrue ( text . matches ( regex ) )
[0]: org. junit. assert. assertequals ( 1, wadlelementname. getlocalname ( ). length )
[1]: org. junit. assert. assertequals ( 1, wadlelementname. getlocalname ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, wadlelementname. getlocalname ( ). length )
[3]: org. junit. assert. assertequals ( 0, wadlelementname. getlocalname ( ). size ( ) )
[4]: org. junit. assert. assertnull ( rrfromcache )

************

************
tgt: org . junit . assert . assertequals ( com . sun . mail . util . proputil . getintproperty ( props , "test" , 1 ) , 2 )
[0]: org. junit. assert. assertequals ( java. lang. long. valueofornull ( method. getid ( ) ), method. getid ( ) )
[1]: org. junit. assert. assertequals ( method, org. neo4j. server. web. httpmethod. valueofornull ( method. getid ( ) ) )
[2]: org. junit. assert. assertnotnull ( org. neo4j. server. web. httpmethod. valueofornull ( method. getid ( ) ) )
[3]: org. junit. assert. assertequals ( method, org. neo4j. server. web. httpmethod. valueofornull ( method. name ( ) ) )
[4]: org. junit. assert. assertequals ( java. lang. long. valueofornull ( method. getid ( ) ), method )

************

************
tgt: org . junit . assert . asserttrue ( downloaded . exists ( ) )
[0]: org. junit. assert. assertnotnull ( markdown ( null ) )
[1]: org. junit. assert. assertequals ( 0, markdown ( null ). size ( ) )
[2]: org. junit. assert. assertnull ( markdown ( null ) )
[3]: org. junit. assert. assertequals ( 0, markdown ( null ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "https://my-domain:8900/" , locationurl )
[0]: org. junit. assert. assertequals ( 3, ct. getwriteconsistsistcount ( ) )
[1]: org. junit. assert. assertequals ( 1, ct. getwriteconsistsistcount ( ) )
[2]: org. junit. assert. assertequals ( true, ct. getwriteconsistsistcount ( ) )
[3]: org. junit. assert. assertequals ( 0, ct. getwriteconsistsistcount ( ) )
[4]: org. junit. assert. assertequals ( 2, ct. getwriteconsistsistcount ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . gs . collections . impl . map . mutable . unifiedmap . newwithkeysvalues ( 3 , "one" , 5 , "three" , 4 , "four" ) , actual )
[0]: org. junit. assert. assertequals ( expected, lister. getkeys ( keys ) )
[1]: org. junit. assert. assertnotnull ( title )
[2]: org. junit. assert. assertequals ( ""a"", title )
[3]: org. junit. assert. assertequals ( null, title )
[4]: org. junit. assert. assertequals ( html, title )

************

************
tgt: org . junit . assert . assertequals ( 1 , results . size ( ) )
[0]: org. junit. assert. assertequals ( ""test"", title )
[1]: org. junit. assert. assertequals ( i, octet. length ( ) )
[2]: org. junit. assert. assertequals ( octet, octet. length ( ) )
[3]: org. junit. assert. assertequals ( octet. length ( ), i )
[4]: org. junit. assert. assertequals ( 0, octet. length ( ) )

************

************
tgt: org . junit . assert . assertequals ( ste . tostring ( ) , frame . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, octet. length ( ) )
[1]: org. junit. assert. assertnotnull ( cache. get ( null ) )
[2]: org. junit. assert. assertnotnull ( cache. get ( 0 ) )
[3]: org. junit. assert. assertnotnull ( cache. get ( ""netty.io"" ) )
[4]: org. junit. assert. assertnotnull ( cache. get ( "netty.io ) )

************

************
tgt: org . junit . assert . assertequals ( result , true )
[0]: org. junit. assert. assertnotnull ( cache. get ( "netty.io1 ) )
[1]: org. junit. assert. assertequals ( ( initialsize + 1 ), dao. findall ( ). size ( ) )
[2]: org. junit. assert. assertequals ( dto, pass ( dto, java. lang. object. class ) )
[3]: org. junit. assert. assertequals ( dto, pass ( dto, java. util. list. class ) )
[4]: org. junit. assert. assertequals ( dto, pass ( dto, java. util. collection. class ) )

************

************
tgt: org . junit . assert . assertnotnull ( store . gettransactiontokeninfo ( handlermethod ) )
[0]: type ) )
[1]: ) )
[2]: org. junit. assert. assertarrayequals ( new org. eclipse. swt. custom. ctabitem [ ] { item }, folder. getselection ( ) )
[3]: org. junit. assert. assertarrayequals ( item. getselection ( ), new org. eclipse. swt. custom. ctabitem [ ] { item } )
[4]: org. junit. assert. assertarrayequals ( new java. lang. object [ ] { item }, folder. getselection ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( int ) ( byte . max_value ) ) , to )
[0]: org. junit. assert. assertarrayequals ( new java. lang. string [ ] { item }, folder. getselection ( ) )
[1]: org. junit. assert. assertarrayequals ( new org. eclipse. swt. custom. ctabitem [ ] { item }, container. getselection ( ) )
[2]: org. junit. assert. assertequals ( tuple1, tuple2 )
[3]: org. junit. assert. asserttrue ( ( ( d1. compareto ( d2 ) ) < 0 ) )
[4]: org. junit. assert. asserttrue ( ( ( d1. compareto ( d2 ) ) <= 0 ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. asserttrue ( ( ( d1. compareto ( dc2 ) ) < 0 ) )
[1]: org. junit. assert. asserttrue ( ( ( ds1. compareto ( d2 ) ) < 0 ) )
[2]: org. junit. assert. asserttrue ( ( ( d2. compareto ( d2 ) ) < 0 ) )
[3]: org. junit. assert. assertequals ( 1, newcs. size ( ) )
[4]: org. junit. assert. assertequals ( 1, newcs. count ( ) )

************

************
tgt: org . junit . assert . assertequals ( p1 , p2 )
[0]: org. junit. assert. assertequals ( 1, newcs. getid ( ) )
[1]: org. junit. assert. assertequals ( 1, newcs. collection. size ( ) )
[2]: org. junit. assert. assertequals ( 1, newcs. collect ( ). length )
[3]: org. junit. assert. assertequals ( expectedvalue, actualdiff )
[4]: org. junit. assert. assertequals ( expectedvalue. trim ( ), actualdiff )

************

************
tgt: org . junit . assert . assertfalse ( this . previousdocument . apply ( this . currentdocument , true ) )
[0]: org. junit. assert. assertequals ( expectedvalue. tolowercase ( ), actualdiff )
[1]: org. junit. assert. assertequals ( expectedvalue. tostring ( ), actualdiff )
[2]: ) )
[3]: org. junit. assert. assertequals ( 2, count )
[4]: org. junit. assert. assertequals ( 1, count )

************

************
tgt: org . junit . assert . assertequals ( child , new org . apache . hadoop . fs . path ( parent , child ) )
[0]: org. junit. assert. assertequals ( 3, count )
[1]: org. junit. assert. assertequals ( 0, count )
[2]: org. junit. assert. assertequals ( 4, count )
[3]: org. junit. assert. assertequals ( builder1. build ( ), builder2. build ( ) )
[4]: org. junit. assert. assertequals ( builder2. build ( ), arg1. build ( ) )

************

************
tgt: org . junit . assert . assertequals ( 6 , runs . size ( ) )
[0]: org. junit. assert. assertequals ( builder2. build ( ), arg1 )
[1]: org. junit. assert. assertequals ( builder2. build ( ), builder1. build ( ) )
[2]: org. junit. assert. assertequals ( builder1, builder2. build ( ) )
[3]: org. junit. assert. assertequals ( 0, tbce. comparescreen ( tbce. file ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, tbce. comparescreen ( tbce. getid ( ) ) )

************

************
tgt: org . junit . assert . asserttrue ( validate ( ) )
[0]: org. junit. assert. assertequals ( 0, tbce. comparescreen ( tbce ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, tbce. comparescreen ( tbce. tostring ( ) ). length )
[2]: org. junit. assert. assertequals ( 0, tbce. comparescreen ( tbce. getid ( ) ). length )
[3]: org. junit. assert. assertarrayequals ( result, signal )
[4]: org. junit. assert. assertequals ( result, signal )

************

************
tgt: org . junit . assert . assertequals ( "myrealm" , servlet . getrealm ( ) )
[0]: , result. length )
[1]: , result, 0.0 )
[2]: ) )
[3]: org. junit. assert. assertnull ( signaturechecker. check ( ) )
[4]: org. junit. assert. assertequals ( 1, victim. getpages ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( violations . size ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( textplaincontenttype, othertextplaincontenttype )
[1]: org. junit. assert. assertnotnull ( othertextplaincontenttype )
[2]: org. junit. assert. assertthat ( othertextplaincontenttype, org. hamcrest. corematchers. is ( textplaincontenttype ) )
[3]: org. junit. assert. assertthat ( textplaincontenttype, org. hamcrest. corematchers. is ( othertextplaincontenttype ) )
[4]: org. junit. assert. assertthat ( cloneertextplaincontenttype, org. hamcrest. corematchers. is ( textplaincontenttype ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , count )
[0]: org. junit. assert. assertequals ( complex. nan, complex. cosh ( ). isnan ( ) )
[1]: org. junit. assert. assertequals ( complex. nan, complex. cosh ( ) )
[2]: org. junit. assert. assertequals ( complex. nan, com. google. common. collect. immutablelist. cosh ( ). isnan ( ) )
[3]: org. junit. assert. assertequals ( 1, dt. intvalue ( ) )
[4]: org. junit. assert. assertequals ( 0, dt. intvalue ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , buffer . getoffset ( ) )
[0]: org. junit. assert. assertequals ( 9, dt. intvalue ( ) )
[1]: org. junit. assert. assertequals ( 2, dt. intvalue ( ) )
[2]: org. junit. assert. assertequals ( 10, dt. intvalue ( ) )
[3]: org. junit. assert. assertequals ( 1, count )
[4]: org. junit. assert. assertequals ( 3, count )

************

************
tgt: org . junit . assert . asserttrue ( org . openimaj . util . reflection . reflectionutils . getclass ( t ) . equals ( java . lang . string . class ) )
[0]: org. junit. assert. assertequals ( 2, count )
[1]: org. junit. assert. assertequals ( 1, indexvalues. length )
[2]: org. junit. assert. assertequals ( 1, indexvalues )
[3]: org. junit. assert. assertequals ( 0, status )
[4]: org. junit. assert. assertequals ( 1, status )

************

************
tgt: org . junit . assert . assertthat ( com . annimon . stream . test . hamcrest . commonmatcher . class , com . annimon . stream . test . hamcrest . commonmatcher . hasonlyprivateconstructors ( ) )
[0]: org. junit. assert. assertequals ( 200, status )
[1]: org. junit. assert. assertequals ( 4, status )
[2]: org. junit. assert. asserttrue ( ( status == 0 )
[3]: org. junit. assert. assertequals ( 1, l. size ( ) )
[4]: org. junit. assert. assertequals ( 0, l. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( service . verifytoken ( token ) )
[0]: org. junit. assert. assertequals ( java. util. arrays. aslist ( new com. cloudappitem ( 1, 1, null, false, false ) ), l )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), l )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), l )
[3]: org. junit. assert. assertarrayequals ( new double [ ] { 0 }, filteredarray, 0.0 )
[4]: org. junit. assert. assertarrayequals ( new double [ ] { 0.0 }, filteredarray, 0.0 )

************

************
tgt: org . junit . assert . asserttrue ( companyadmin )
[0]: org. junit. assert. assertarrayequals ( new double [ ] { 1, 1 }, filteredarray )
[1]: org. junit. assert. assertarrayequals ( null, filteredarray )
[2]: org. junit. assert. assertnotnull ( attributelist )
[3]: org. junit. assert. assertnull ( attributelist )
[4]: org. junit. assert. assertequals ( 0, attributelist. length )

************

************
tgt: org . junit . assert . assertequals ( "x" , response . getcontentasstring ( ) )
[0]: org. junit. assert. asserttrue ( ( attributelist == null ) )
[1]: org. junit. assert. assertequals ( null, attributelist )
[2]: org. junit. assert. assertequals ( 1, wire. bytes ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, wire. bytes ( ). length )
[4]: org. junit. assert. assertequals ( 0, wire. bytes ( ). length )

************

************
tgt: org . junit . assert . assertthat ( actual . getsequenceid ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( 0, wire. bytes ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, parser. bytes ( ). size ( ) )
[2]: org. junit. assert. asserttrue ( result. isempty ( ) )
[3]: org. junit. assert. assertsame ( hbaseretriever )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertequals ( new org . openehealth . ipf . commons . ihe . xds . core . requests . query . findfoldersquery ( ) . tostring ( ) , result . tostring ( ) )
[0]: org. junit. assert. assertnull ( result )
[1]: ) )
[2]: org. junit. assert. assertequals ( null, importstrategy. displayname ( meta ) )
[3]: org. junit. assert. assertnull ( importstrategy. displayname ( meta ) )
[4]: org. junit. assert. assertequals ( 0, importstrategy. displayname ( meta ) )

************

************
tgt: org . junit . assert . assertequals ( 100 , count . get ( ) )
[0]: org. junit. assert. assertequals ( 0, importstrategy. displayname ( meta ). length )
[1]: ) )
[2]: org. junit. assert. assertequals ( org. finra. herd. service. helper. blank_text, result )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( result, org. finra. herd. service. helper. blank_text )

************

************
tgt: org . junit . assert . assertarrayequals ( expected , test )
[0]: org. junit. assert. assertequals ( null, result )
[1]: , result )
[2]: org. junit. assert. assertequals ( 1, count )
[3]: org. junit. assert. assertequals ( 0, count )
[4]: org. junit. assert. assertequals ( 9, count )

************

************
tgt: org . junit . assert . assertequals ( data , decerg )
[0]: org. junit. assert. assertequals ( 20, count )
[1]: org. junit. assert. assertequals ( 6, count )
[2]: org. junit. assert. assertnotnull ( contenttype )
[3]: org. junit. assert. asserttrue ( endswith )
[4]: org. junit. assert. assertequals ( ( beforecount + 1 ), tester. count ( $. slim3model. class ) )

************

************
tgt: org . junit . assert . assertequals ( result , "tt" )
[0]: org. junit. assert. assertequals ( ( beforecount - 1 ), tester. count ( $. slim3model. class ) )
[1]: org. junit. assert. assertequals ( 1, ( beforecount + 1 ) )
[2]: org. junit. assert. assertequals ( 1, ( beforecount - beforecount ) )
[3]: org. junit. assert. assertequals ( ( beforecount + 1 ), tester. count ( $. slim3model. class )
[4]: org. junit. assert. assertnotnull ( p. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( "value" , val . get ( ) )
[0]: org. junit. assert. assertequals ( null, p. getname ( ) )
[1]: org. junit. assert. assertequals ( 0, p. getname ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, p. getname ( ). length ( ) )
[3]: org. junit. assert. assertequals ( 1, p. getname ( ). size ( ) )
[4]: org. junit. assert. assertnull ( configurationdescription. getname ( ) )

************

************
tgt: org . junit . assert . assertequals ( value , anothervalue )
[0]: org. junit. assert. assertequals ( value, value )
[1]: org. junit. assert. assertequals ( value, node. getvalue ( ) )
[2]: org. junit. assert. assertequals ( value, node. getid ( ) )
[3]: org. junit. assert. assertnotnull ( value )
[4]: org. junit. assert. assertequals ( value, node. tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( values , org . hamcrest . matchers . contains ( "value;p=\"v" ) )
[0]: org. junit. assert. assertequals ( 1, x )
[1]: org. junit. assert. assertequals ( 1l, x )
[2]: org. junit. assert. assertequals ( 0, x )
[3]: org. junit. assert. assertequals ( 0l, x )
[4]: org. junit. assert. assertnotnull ( x )

************

************
tgt: org . junit . assert . assertthat ( subject . getreferencevalue ( ) . tostring ( ) , org . hamcrest . matchers . is ( "dev-mnt" ) )
[0]: org. junit. assert. assertequals ( expected, uri. tostring ( ) )
[1]: org. junit. assert. assertequals ( java. lang. string. valueof ( expected ), uri. tostring ( ) )
[2]: org. junit. assert. assertequals ( java. util. arrays. tostring ( expected ), uri. tostring ( ) )
[3]: org. junit. assert. assertequals ( result, uri. tostring ( ) )
[4]: org. junit. assert. assertequals ( exp, uri. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , ( ( a . compareto ( b ) ) < 0 ) )
[0]: org. junit. assert. assertequals ( 0, delayedinvocations. length )
[1]: org. junit. assert. assertequals ( 1, delayedinvocations. length )
[2]: org. junit. assert. assertequals ( 2, delayedinvocations. length )
[3]: org. junit. assert. assertequals ( null, delayedinvocations. length )
[4]: org. junit. assert. assertequals ( 3, delayedinvocations. length )

************

************
tgt: org . junit . assert . asserttrue ( item . isresolved ( ) )
[0]: org. junit. assert. assertequals ( 1, v. size ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 1, 1 ), v )
[2]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 1, 2, 3 ), v )
[3]: org. junit. assert. assertequals ( 1, v. length )
[4]: org. junit. assert. assertequals ( 0, v. size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( recipient . getemail ( ) )
[0]: org. junit. assert. assertequals ( resolved, resolved. toasciistring ( ) )
[1]: org. junit. assert. assertequals ( resolved. toasciistring ( ), null )
[2]: org. junit. assert. assertequals ( resolved. toasciistring ( ), false )
[3]: org. junit. assert. assertequals ( resolved, null )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( org . nuxeo . ecm . core . io . registry . testreaderregistry . defaultnumberreader . class , reader . getclass ( ) )
[0]: org. junit. assert. assertnotnull ( object )
[1]: org. junit. assert. assertequals ( rpslobject, object )
[2]: org. junit. assert. assertnull ( object )
[3]: org. junit. assert. assertequals ( rpslobject, obj )
[4]: org. junit. assert. assertnotnull ( obj )

************

************
tgt: org . junit . assert . assertequals ( "c" 2 , s )
[0]: org. junit. assert. assertequals ( 1, p. evaluate ( test, 1 ), 0 )
[1]: org. junit. assert. assertequals ( 1, p. evaluate ( test, 0 ), 0 )
[2]: org. junit. assert. assertequals ( p. evaluate ( test, 1 ), 2.0 )
[3]: org. junit. assert. assertequals ( p. evaluate ( test, 0 ), 2.0 )
[4]: org. junit. assert. assertequals ( 0.0, p. evaluate ( test, 0 ), 0 )

************

************
tgt: org . junit . assert . assertequals ( expected , e . getmessage ( ) )
[0]: org. junit. assert. assertnotnull ( responselist )
[1]: org. junit. assert. assertequals ( 1, responselist. size ( ) )
[2]: org. junit. assert. assertequals ( 0, responselist. size ( ) )
[3]: org. junit. assert. assertnull ( responselist )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( fasgraph , edu . cmu . tetrad . graph . graphutils . undirectedgraph ( pcgraph ) )
[0]: org. junit. assert. assertequals ( berr. tostring ( ), berr. tostring ( ) )
[1]: org. junit. assert. assertequals ( berr. tostring ( ), beanerr. tostring ( ) )
[2]: org. junit. assert. assertequals ( berr. tostring ( ), suserr. tostring ( ) )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertsame ( ioexception , e )
[0]: org. junit. assert. assertequals ( 1, pousergroups. size ( ) )
[1]: org. junit. assert. assertequals ( 0, pousergroups. size ( ) )
[2]: org. junit. assert. assertequals ( 3, pousergroups. size ( ) )
[3]: org. junit. assert. assertequals ( 1, pousersgroups. size ( ) )
[4]: org. junit. assert. assertequals ( 1, result. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( factory , loadedfactory )
[0]: org. junit. assert. assertequals ( 0, result. size ( ) )
[1]: org. junit. assert. assertequals ( 1, ( ( result. size ( ) ) + 1 ) )
[2]: org. junit. assert. assertequals ( 1, results. size ( ) )
[3]: org. junit. assert. asserttrue ( ( ( result. size ( ) ) == 1 ) )
[4]: org. junit. assert. assertequals ( 1, s. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( strategy . checkuploadneeded ( logstoragestatus ) , loguploadstrategydecision . upload )
[0]: org. junit. assert. assertequals ( 1, buf. size ( ) )
[1]: org. junit. assert. assertequals ( 1, 1 )
[2]: org. junit. assert. assertequals ( 0, buf. size ( ) )
[3]: org. junit. assert. assertequals ( 1, set. size ( ) )
[4]: org. junit. assert. assertnotnull ( cleanhtml )

************

************
tgt: org . junit . assert . assertnull ( bad . getobjectid ( ) )
[0]: org. junit. assert. assertequals ( h, cleanhtml )
[1]: org. junit. assert. assertequals ( null, cleanhtml )
[2]: org. junit. assert. assertequals ( 1, cleanhtml )
[3]: org. junit. assert. assertequals ( prepared, cleanhtml )
[4]: org. junit. assert. assertequals ( java. util. collections. singletonlist ( item ), itr )

************

************
tgt: org . junit . assert . assertequals ( ( ( byte ) ( 12 ) ) , b )
[0]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), itr )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( item ), itr )
[2]: org. junit. assert. assertnotnull ( itr )
[3]: , itr )
[4]: org. junit. assert. assertequals ( 1, sut. add ( 1, 1 ) )

************

************
tgt: org . junit . assert . assertthat ( roboservice . context , org . hamcrest . corematchers . equalto ( ( ( android . content . context ) ( roboservice ) ) ) )
[0]: org. junit. assert. assertnotnull ( sut. add ( 1, 1 ) )
[1]: org. junit. assert. assertequals ( 1, sut. add ( null, 1 ) )
[2]: org. junit. assert. assertequals ( 1, sut. add ( 0, 1 ) )
[3]: org. junit. assert. assertequals ( 1, sut. add ( 1, 1 ). length )
[4]: org. junit. assert. assertequals ( expected, outputmap )

************

************
tgt: org . junit . assert . assertequals ( ddf . catalog . operation . queryimpltest . filter1 , qi . getfilter ( ) )
[0]: org. junit. assert. assertequals ( expected, output map )
[1]: org. junit. assert. assertequals ( expected, inputmap )
[2]: org. junit. assert. assertequals ( expected, outmap )
[3]: org. junit. assert. assertequals ( expected, outputmap ) )
[4]: org. junit. assert. assertequals ( 0, linecounter )

************

************
tgt: org . junit . assert . assertnotnull ( provider )
[0]: org. junit. assert. assertequals ( 10, linecounter )
[1]: org. junit. assert. assertequals ( 1, linecounter )
[2]: org. junit. assert. assertequals ( 6, linecounter )
[3]: org. junit. assert. assertequals ( 5, linecounter )
[4]: org. junit. assert. assertnotnull ( result. getissues ( ) )

************

************
tgt: org . junit . assert . assertequals ( 7 , filetree . getnumresults ( ) )
[0]: org. junit. assert. assertequals ( 1, result. getissues ( ) )
[1]: org. junit. assert. asserttrue ( result. getissues ( ). isempty ( ) )
[2]: org. junit. assert. assertequals ( 1, result. getissues ( ). length )
[3]: org. junit. assert. assertequals ( 1, result. getissues ( ). size ( )
[4]: org. junit. assert. assertequals ( o, serializedeserialize ( mapper, o, java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: org. junit. assert. assertequals ( o, serializedeserialize ( mapper, o, java. lang. object. class ) )
[1]: org. junit. assert. assertequals ( o, serializedeserialize ( mapper, o, java. lang. class ) )
[2]: org. junit. assert. assertequals ( o, serializedeserialize ( mapper, o, type ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, observer. getcontainers ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( factory . createjobschedulerequest ( ) )
[0]: org. junit. assert. assertequals ( 1, config. getcontainers ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, observer. getcontainers ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, config. getcontainers ( ). size ( ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( s, dst. read ( channel ) )

************

************
tgt: org . junit . assert . assertthat ( now . getzone ( ) , org . hamcrest . corematchers . is ( datetimezone . utc ) )
[0]: org. junit. assert. assertequals ( s, dst. position ( ) )
[1]: org. junit. assert. assertequals ( s, dst. array ( ) )
[2]: org. junit. assert. assertequals ( s, dst. array ( ) [ 0 ] )
[3]: org. junit. assert. assertequals ( s, dst. array ( ). length )
[4]: org. junit. assert. assertequals ( 1, location. getcoordinates ( ). length )

************

************
tgt: org . junit . assert . assertequals ( 0 , result . size ( ) )
[0]: org. junit. assert. assertequals ( 1, coordinates. getcoordinates ( ). length )
[1]: org. junit. assert. assertequals ( coordinates [ 1 ], location. getcoordinates ( ). length )
[2]: org. junit. assert. assertequals ( coordinates, location. getcoordinates ( ). length )
[3]: org. junit. assert. assertequals ( 1, coordinates [ 1 ]. getcoordinates ( ). length )
[4]: org. junit. assert. assertequals ( 1, books. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 1 , e . getcausingexceptions ( ) . size ( ) )
[0]: org. junit. assert. assertnotnull ( books )
[1]: org. junit. assert. assertequals ( 3, books. size ( ) )
[2]: org. junit. assert. assertequals ( 0, books. size ( ) )
[3]: ) )
[4]: org. junit. assert. assertthat ( textvalue. getchannelstate ( ). tostring ( ), org. hamcrest. corematchers. is ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( in , out )
[0]: org. junit. assert. assertnotnull ( textvalue. getchannelstate ( ) )
[1]: org. junit. assert. assertequals ( 1, textvalue. getchannelstate ( ). size ( ) )
[2]: org. junit. assert. assertthat ( textvalue. getchannelstate ( ), org. hamcrest. corematchers. is ( true ) )
[3]: ) )
[4]: org. junit. assert. assertequals ( newnumber ( 5 ), value )

************

************
tgt: org . junit . assert . asserttrue ( ( socket != null ) )
[0]: org. junit. assert. assertequals ( newnumber ( 3 ), value )
[1]: org. junit. assert. assertequals ( newnumber ( 6 ), value )
[2]: org. junit. assert. assertequals ( newnumber ( 1 ), value )
[3]: org. junit. assert. assertequals ( newnumber ( 7 ), value )
[4]: org. junit. assert. assertthat ( adapter. get ( org. springframework. data. map. mapkeyvalueadapterunittests. collection_1, org. springframework. data. map. mapkeyvalueadapterunittests. collection_1 ), is ( object1 ) )

************

************
tgt: org . junit . assert . assertfalse ( complies )
[0]: org. junit. assert. assertthat ( adapter. get ( org. springframework. data. map. mapkeyvalueadapterunittests. collection_1, object1 ), is ( org. springframework. data. map. mapkeyvalueadapterunittests. collection_1 ) )
[1]: org. junit. assert. assertthat ( adapter. get ( org. springframework. data. map. mapkeyvalueadapterunittests. collection_1, org. springframework. data. map. mapkeyvalueadapterunittests. collection_1 ), org. hamcrest. matchers. is ( object1 ) )
[2]: org. junit. assert. assertthat ( adapter. get ( org. springframework. data. map. mapkeyvalueadapterunittests. collection_1, object1 ), org. hamcrest. core. is. is ( object1 ) )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( foo )

************

************
tgt: org . junit . assert . assertequals ( expresult , result )
[0]: org. junit. assert. assertequals ( foo, foo )
[1]: org. junit. assert. assertnull ( foo )
[2]: org. junit. assert. assertequals ( null, foo )
[3]: ) )
[4]: org. junit. assert. assertequals ( 1, com. questdb. parser. sql. queryerror. getposition ( ) )

************

************
tgt: org . junit . assert . asserttrue ( instance . hasnext ( ) )
[0]: org. junit. assert. assertequals ( 0, com. questdb. parser. sql. queryerror. getposition ( ) )
[1]: org. junit. assert. assertequals ( 12, com. questdb. parser. sql. queryerror. getposition ( ) )
[2]: org. junit. assert. assertequals ( 3, com. questdb. parser. sql. queryerror. getposition ( ) )
[3]: org. junit. assert. assertequals ( 2, com. questdb. parser. sql. queryerror. getposition ( ) )
[4]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 1 }, result )

************

************
tgt: org . junit . assert . assertequals ( org . openkilda . messaging . command . constants . meterid , flow . getmeterid ( ) . longvalue ( ) )
[0]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 2 }, result )
[1]: org. junit. assert. assertarrayequals ( new long [ ] { 1, 4 }, result )
[2]: org. junit. assert. assertarrayequals ( new long [ ] { 1 }, result )
[3]: org. junit. assert. assertarrayequals ( new long [ ] { 0, 1 }, result )
[4]: org. junit. assert. assertequals ( false, errors. haserrors ( ) )

************

************
tgt: org . junit . assert . assertequals ( true , mandatorysubject . validate ( ) )
[0]: org. junit. assert. assertequals ( 1, createdworkspace. randomstring ( ). size ( ) )
[1]: org. junit. assert. assertnotnull ( createdworkspace. randomstring ( ) )
[2]: org. junit. assert. assertequals ( 0, createdworkspace. randomstring ( ). size ( ) )
[3]: org. junit. assert. assertequals ( java. lang. long. valueof ( workspaceid ), createdworkspace )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( containerresolver . iscontainer ( ) )
[0]: org. junit. assert. assertnotnull ( printcircular. printcircular ( array ) )
[1]: org. junit. assert. assertequals ( """", printcircular. printcircular ( array ) )
[2]: org. junit. assert. assertnull ( printcircular. printcircular ( array ) )
[3]: org. junit. assert. assertequals ( printcircular. printcircular ( array ), null )
[4]: org. junit. assert. assertequals ( printcircular. printcircular ( array ), array. length )

************

************
tgt: org . junit . assert . asserttrue ( manager . getproxymonitorresults ( ) . isempty ( ) )
[0]: org. junit. assert. assertnull ( envelope )
[1]: org. junit. assert. assertequals ( 1, resolved. size ( ) )
[2]: org. junit. assert. assertequals ( 0, resolved. size ( ) )
[3]: org. junit. assert. assertequals ( 1, count )
[4]: org. junit. assert. assertequals ( 3, count )

************

************
tgt: org . junit . assert . assertequals ( 1 , entities . size ( ) )
[0]: org. junit. assert. assertequals ( 200, count )
[1]: org. junit. assert. assertequals ( 8, count )
[2]: long long count )
[3]: org. junit. assert. assertequals ( guaranteed, instance. getvmfreeheap ( ) )
[4]: org. junit. assert. assertequals ( 1, instance. getvmfreeheap ( ) )

************

************
tgt: org . junit . assert . asserttrue ( removed )
[0]: org. junit. assert. assertequals ( 0, instance. getvmfreeheap ( ) )
[1]: org. junit. assert. assertequals ( nt, instance. getvmfreeheap ( ) )
[2]: org. junit. assert. assertequals ( null, instance. getvmfreeheap ( ) )
[3]: org. junit. assert. assertnotnull ( runner )
[4]: org. junit. assert. assertnotnull ( runner )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertnull ( runner )
[1]: org. junit. assert. assertnotnull ( runner )
[2]: org. junit. assert. assertnotnull ( runner
[3]: org. junit. assert. assertequals ( p, bp. getpartition ( i ) )
[4]: org. junit. assert. assertequals ( p, countperpartition [ i ] )

************

************
tgt: org . junit . assert . assertequals ( htmldoc , new java . lang . string ( output ) )
[0]: org. junit. assert. assertequals ( i, bp. getpartition ( i ) )
[1]: org. junit. assert. assertequals ( i, countperpartition [ i ] )
[2]: ) )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . assertthat ( actual , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert.null ( result )
[1]: , result )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, visittypes. size ( ) )
[4]: org. junit. assert. assertequals ( 0, visittypes. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( hit . ishit ( ) )
[0]: org. junit. assert. assertequals ( 1, interact. getresult ( ) )
[1]: org. junit. assert. assertequals ( 1, interact. getresult ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, interact. getresult ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, interact. getresult ( ) )
[4]: org. junit. assert. assertnotnull ( interact. getresult ( ) )

************

************
tgt: org . junit . assert . asserttrue ( onevent )
[0]: org. junit. assert. assertequals ( operation, response. getdescription ( ) )
[1]: org. junit. assert. assertnull ( operation. getdescription ( ) )
[2]: org. junit. assert. assertnotnull ( operation. getdescription ( ) )
[3]: org. junit. assert. assertequals ( operation. getdescription ( ), response )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , actual . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, messages. size ( ) )
[1]: org. junit. assert. assertequals ( 2, messages. size ( ) )
[2]: org. junit. assert. assertequals ( 0, messages. size ( ) )
[3]: org. junit. assert. assertequals ( 3, messages. size ( ) )
[4]: org. junit. assert. assertnotnull ( messages )

************

************
tgt: org . junit . assert . asserttrue ( ex . getmessage ( ) . startswith ( errmsg ) )
[0]: org. junit. assert. assertequals ( 10, response. getentrylist ( ). size ( ) )
[1]: org. junit. assert. assertequals ( com. basho. riak. client. core. operations. itest. itestsecondaryindexqueryop. expected, response. getentrylist ( ) )
[2]: org. junit. assert. assertequals ( 1, response. getentrylist ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, response. getentrylist ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 2, response. getentrylist ( ). size ( ) )

************

************
tgt: org . junit . assert . assertthat ( temporary . getroot ( ) . exists ( ) , is ( false ) )
[0]: org. junit. assert. assertequals ( result, result )
[1]: org. junit. assert. assertequals ( result, this. pool )
[2]: org. junit. assert. assertequals ( result, string )
[3]: org. junit. assert. assertequals ( result, null )
[4]: org. junit. assert. assertequals ( result, this. resource )

************

************
tgt: org . junit . assert . asserttrue ( ( ( factory . getsslcontext ( ) ) != null ) )
[0]: org. junit. assert. assertnotnull ( e )
[1]: org. junit. assert. asserttrue ( true )
[2]: org. junit. assert. assertnull ( e. getmessage ( ) )
[3]: org. junit. assert. assertnull ( e )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expected , subject . getmapping ( data ) )
[0]: org. junit. assert. assertequals ( 1, greater. compareto ( smaller ) )
[1]: org. junit. assert. assertequals ( 0, greater. compareto ( smaller ) )
[2]: org. junit. assert. assertequals ( 1, smaller. compareto ( greater ) )
[3]: org. junit. assert. assertequals ( 0, smaller. compareto ( greater ) )
[4]: org. junit. assert. assertequals ( 1, greater. compareto ( greater ) )

************

************
tgt: org . junit . assert . assertequals ( string , ascii . tostring ( ) )
[0]: org. junit. assert. assertnull ( lookup )
[1]: org. junit. assert. assertequals ( 1, resultfromjpql. size ( ) )
[2]: org. junit. assert. assertnotnull ( resultfromjpql )
[3]: org. junit. assert. asserttrue ( resultfromjpql. isempty ( ) )
[4]: org. junit. assert. assertequals ( 0, resultfromjpql. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( customnullpointerrepresentation , namefield . getvalue ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( status, progressbar. getstatusmessage ( ) )
[2]: org. junit. assert. assertequals ( status. getstatusmessage ( ), false )
[3]: org. junit. assert. assertequals ( status. getstatusmessage ( ), status )
[4]: org. junit. assert. assertequals ( status. getstatusmessage ( ), true )

************

************
tgt: org . junit . assert . asserttrue ( str . isempty ( ) )
[0]: ) )
[1]: org. junit. assert. asserttrue ( calendar. equals ( recalendar ) )
[2]: org. junit. assert. asserttrue ( date. equals ( recalendar ) )
[3]: org. junit. assert. assertfalse ( calendar. equals ( recalendar ) )
[4]: org. junit. assert. assertequals ( calendar. equals ( recalendar ), true )

************

************
tgt: org . junit . assert . assertequals ( input , line . line ( ) )
[0]: org. junit. assert. assertequals ( calendar. equals ( recalendar ), false )
[1]: org. junit. assert. assertequals ( 3, vertices. size ( ) )
[2]: org. junit. assert. assertequals ( 1, logger. isinfoenabled ( ) )
[3]: org. junit. assert. assertnull ( logger. isinfoenabled ( ) )
[4]: org. junit. assert. assertnotnull ( logger. isinfoenabled ( ) )

************

************
tgt: org . junit . assert . assertequals ( "id" , exception . getresourceid ( ) )
[0]: org. junit. assert. assertequals ( 0, logger. isinfoenabled ( ) )
[1]: org. junit. assert. assertequals ( unpacked, unpacked )
[2]: org. junit. assert. assertequals ( unpacked, unpacked. read ( ) )
[3]: org. junit. assert. assertnotnull ( unpacked )
[4]: org. junit. assert. assertequals ( null, unpacked )

************

************
tgt: org . junit . assert . assertequals ( 1 , paths . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( java. lang. short. valueof ( 1 ), extractedshort )
[2]: org. junit. assert. assertequals ( java. lang. short. valueof ( 0 ), extractedshort )
[3]: org. junit. assert. assertequals ( null, extractedshort )
[4]: org. junit. assert. assertequals ( new java. lang. short ( 1 ), extractedshort )

************

************
tgt: org . junit . assert . assertequals ( value , contenttypeamattribute . convert ( value ) )
[0]: org. junit. assert. assertequals ( 0, extractedshort )
[1]: org. junit. assert. assertequals ( 2, messages. size ( ) )
[2]: org. junit. assert. assertequals ( 1, messages. size ( ) )
[3]: org. junit. assert. assertequals ( 0, messages. size ( ) )
[4]: org. junit. assert. assertequals ( expected, messages )

************

************
tgt: org . junit . assert . assertequals ( 2 , persons . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( array, org. onetwo. common. utils. langutils. getfirst ( rs ) )
[2]: org. junit. assert. assertequals ( rs, org. onetwo. common. utils. langutils. getfirst ( rs ) )
[3]: org. junit. assert. assertnotnull ( org. onetwo. common. utils. langutils. getfirst ( rs ) )
[4]: org. junit. assert. assertequals ( 1, org. onetwo. common. utils. langutils. getfirst ( rs ) )

************

************
tgt: org . junit . assert . assertthat ( result . size ( ) , org . hamcrest . corematchers . is ( 0 ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, org. jstryker. database. hibernatehelper. sessionfactory ( ). size ( ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), org. jstryker. database. hibernatehelper. sessionfactory ( ) )
[3]: org. junit. assert. assertequals ( 1, org. jstryker. database. hibernatehelper. sessionfactory ( ). list ( ). size ( ) )
[4]: org. junit. assert. assertnotnull ( org. jstryker. database. hibernatehelper. sessionfactory ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( doc )
[0]: org. junit. assert. assertequals ( 1, org. jstryker. database. hibernatehelper. sessionfactory ( ). list ( ). length )
[1]: org. junit. assert. assertnotnull ( data. dontsweepinto ( ) )
[2]: org. junit. assert. assertequals ( 1, data. dontsweepinto ( ) )
[3]: org. junit. assert. assertequals ( 0, data. dontsweepinto ( ) )
[4]: org. junit. assert. assertequals ( 1, data. dontsweepinto ( ). length )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( true ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( blue1, blue2 )
[2]: org. junit. assert. assertarrayequals ( bytes, outbytes )
[3]: org. junit. assert. assertequals ( bytes, outbytes )
[4]: org. junit. assert. assertequals ( bytes. length, outbytes. length )

************

************
tgt: org . junit . assert . asserttrue ( resultmessage ( result , org . openstack . atlas . api . mgmt . validation . validators . post ) , result . passedvalidation ( ) )
[0]: org. junit. assert. assertarrayequals ( bytes, outbytes, 0 )
[1]: )
[2]: org. junit. assert. assertequals ( java. lang. string. format ( line ), org. finra. herd. tools. retention. destroyer. line_number )
[3]: org. junit. assert. assertequals ( java. lang. string. format ( line ), org. finra. herd. tools. retention. destroyer. line_number, local_file )
[4]: org. junit. assert. assertequals ( java. lang. string. format ( line ), e. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , tested . gettimetosleep ( 4 ) )
[0]: org. junit. assert. assertnotnull ( e )
[1]: ) )
[2]: org. junit. assert. asserttrue ( lnglataltjson. equals ( lnglatalt1 ) )
[3]: org. junit. assert. asserttrue ( lnglataltjson. equals ( lnglatlatalt1 ) )
[4]: org. junit. assert. asserttrue ( lnglataltjson. equals ( longitudelatalt1 ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , itemlist . size ( ) )
[0]: org. junit. assert. asserttrue ( lnglatalt. equals ( lnglatalt1 ) )
[1]: ) )
[2]: org. junit. assert. assertnull ( join )
[3]: org. junit. assert. assertequals ( null, join )
[4]: org. junit. assert. assertequals ( "", join )

************

************
tgt: org . junit . assert . asserttrue ( visitedurls . tostring ( ) , visitedurls . contains ( "/css/main.css" ) )
[0]: org. junit. assert. assertnotnull ( join )
[1]: org. junit. assert. assertequals ( "", join )
[2]: org. junit. assert. assertfalse ( bean. isfcipbrandingpackageavailable ( ) )
[3]: org. junit. assert. assertthat ( replacement. getinput ( ), org. hamcrest. matchers. is ( true ) )
[4]: org. junit. assert. assertthat ( replacement. getinput ( ), org. hamcrest. matchers. contains ( input ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertthat ( replacement. getinput ( ), org. hamcrest. matchers. contains ( p ) )
[1]: org. junit. assert. assertequals ( 1, replacement. getinput ( ). size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, client. run ( ) )
[4]: org. junit. assert. assertequals ( 0, client. run ( ) )

************

************
tgt: org . junit . assert . assertequals ( legacyvariantstring , variant . tolegacystring ( ) )
[0]: org. junit. assert. assertequals ( 1, client. count )
[1]: org. junit. assert. assertequals ( 1, client. execute ( ) )
[2]: , client. run )
[3]: org. junit. assert. assertequals ( 1, typeset. size ( ) )
[4]: org. junit. assert. assertequals ( 0, typeset. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "america" , config . gettime_zone ( ) )
[0]: org. junit. assert. assertequals ( true, typeset. isempty ( ) )
[1]: org. junit. assert. assertequals ( set ( type ), typeset )
[2]: org. junit. assert. assertequals ( null, typeset )
[3]: org. junit. assert. assertthat ( actual, is ( equalto ( expected ) ) )
[4]: org. junit. assert. assertequals ( expected, actual )

************

************
tgt: org . junit . assert . assertnull ( cl . findclass ( "" ) )
[0]: org. junit. assert. assertthat ( actual, is ( expected ) )
[1]: org. junit. assert. assertthat ( actual, is ( of ( expected ) ) )
[2]: , actual )
[3]: org. junit. assert. assertnotnull ( s )
[4]: org. junit. assert. assertnotnull ( collection )

************

************
tgt: org . junit . assert . asserttrue ( workflowinstancelinks . isempty ( ) )
[0]: org. junit. assert. assertnotnull ( context )
[1]: org. junit. assert. assertequals ( 1, 1 )
[2]: org. junit. assert. assertnotnull ( queue )
[3]: org. junit. assert. assertequals ( firstreference, secondreference )
[4]: org. junit. assert. assertequals ( secondreference, secondreference )

************

************
tgt: org . junit . assert . assertequals ( expected , actual )
[0]: org. junit. assert. assertnotnull ( secondreference )
[1]: org. junit. assert. assertequals ( firreference, secondreference )
[2]: org. junit. assert. assertequals ( earlierreference, secondreference )
[3]: org. junit. assert. asserttrue ( result. isempty ( ) )
[4]: org. junit. assert. assertsame ( hbaseretriever )

************

************
tgt: org . junit . assert . assertequals ( 0 , ret )
[0]: org. junit. assert. assertnotnull ( result )
[1]: org. junit. assert. assertnull ( result )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, htmllist. getitemcount ( ) )
[4]: org. junit. assert. assertequals ( org. finra. jtaf. ewd. widget. element. html. htmllisttest. url. getitemcount ( ), 0 )

************

************
tgt: org . junit . assert . assertthat ( actual , is ( equalto ( expected ) ) )
[0]: org. junit. assert. assertequals ( 0, htmllist. getitemcount ( ) )
[1]: org. junit. assert. assertequals ( 0, file. getchildren ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, file. getchildren ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, file. getchildren ( ). length )
[4]: org. junit. assert. assertnull ( file. getchildren ( ) )

************

************
tgt: org . junit . assert . assertthat ( shoulddelete , org . hamcrest . matchers . is ( false ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, fouteobjecten. size ( ) )
[2]: org. junit. assert. assertnotnull ( sample )
[3]: org. junit. assert. assertequals ( 1, sample. read ( ) )
[4]: org. junit. assert. assertnotnull ( sample. read ( ) )

************

************
tgt: org . junit . assert . asserttrue ( datawave . query . jexl . functions . contentfunctionstest . expect ( o , true ) )
[0]: org. junit. assert. assertequals ( 0, sample. read ( ) )
[1]: org. junit. assert. assertequals ( null, sample. read ( ) )
[2]: org. junit. assert. assertequals ( true, matches )
[3]: org. junit. assert. assertequals ( false, matches )
[4]: org. junit. assert. assertequals ( services, controller. getfeaturedservices ( ) )

************

************
tgt: org . junit . assert . assertfalse ( validateconstraints ( fido ) )
[0]: org. junit. assert. assertequals ( services, control. getfeaturedservices ( ) )
[1]: org. junit. assert. assertequals ( 1, p. getitems ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, p. getitems ( ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, p. getitems ( ). length )
[4]: org. junit. assert. assertequals ( 0, p. getitems ( ). length )

************

************
tgt: org . junit . assert . assertequals ( created , newconsole )
[0]: org. junit. assert. assertequals ( 1, p. getitems ( ). size ( )
[1]: org. junit. assert. assertnotnull ( ps )
[2]: org. junit. assert. assertnotnull ( ps. getmessage ( ) )
[3]: org. junit. assert. assertnotnull ( ps. collection ( ) )
[4]: org. junit. assert. assertnull ( ps )

************

************
tgt: org . junit . assert . assertequals ( oldparamvalue , label . gettext ( ) )
[0]: assertnotnull ( ps )
[1]: org. junit. assert. assertnotnull ( element. withname ( ""foo"" ) )
[2]: org. junit. assert. assertnotnull ( element. withname ( name ) )
[3]: org. junit. assert. assertnotnull ( element )
[4]: org. junit. assert. assertnotnull ( element. withname ( java. lang. string. class ) )

************

************
tgt: org . junit . assert . assertfalse ( property . ispersistent ( ) )
[0]: org. junit. assert. assertnotnull ( element. withname ( element. getname ( ) ) )
[1]: org. junit. assert. asserttrue ( redisserver. isactive ( ) )
[2]: org. junit. assert. assertnull ( redisserver. isactive ( ) )
[3]: org. junit. assert. assertarrayequals ( new int [ ] { 1 }, execution. getupdatecounts ( ) )
[4]: org. junit. assert. assertarrayequals ( new int [ ] { 1, 1 }, execution. getupdatecounts ( ) )

************

************
tgt: org . junit . assert . assertequals ( expected , oauth_signature )
[0]: org. junit. assert. assertarrayequals ( new int [ ] { 2 }, execution. getupdatecounts ( ) )
[1]: org. junit. assert. assertarrayequals ( new int [ ] { 8 }, execution. getupdatecounts ( ) )
[2]: org. junit. assert. assertarrayequals ( new int [ ] { 1, 2 }, execution. getupdatecounts ( ) )
[3]: org. junit. assert. assertequals ( expectedcode, decodedcodes )
[4]: org. junit. assert. assertequals ( expectedcode, decodedcodes. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( dlg . getid ( ) , a . getid ( ) )
[0]: org. junit. assert. assertequals ( expectedcodes, decodedcodes )
[1]: org. junit. assert. assertequals ( expectedcode, decoder. getcode ( ) )
[2]: org. junit. assert. assertequals ( expectedcode, decodedcodes, decodedcodes )
[3]: org. junit. assert. assertnotnull ( shouldnotexist )
[4]: org. junit. assert. assertnull ( shouldnotexist )

************

************
tgt: org . junit . assert . asserttrue ( ( anumber == result ) )
[0]: org. junit. assert. assertequals ( null, shouldnotexist )
[1]: . get ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, errors. size ( ) )
[4]: org. junit. assert. assertequals ( totaloutcome, totaloutcome )

************

************
tgt: org . junit . assert . assertequals ( new uk . gov . gchq . gaffer . types . typesubtypevalue ( null , null , null ) , result )
[0]: org. junit. assert. asserttrue ( diff. hasdifferences ( ) )
[1]: org. junit. assert. assertequals ( diff. hasdifferences ( ), true )
[2]: org. junit. assert. assertequals ( diff. hasdifferences ( ), false )
[3]: org. junit. assert. assertequals ( 0, merged. size ( ) )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( ), merged )

************

************
tgt: org . junit . assert . assertnotnull ( row . getvalue ( "jcr:primarytype" ) )
[0]: org. junit. assert. assertequals ( 1, merged. size ( ) )
[1]: org. junit. assert. asserttrue ( ( ( merged. size ( ) ) == 0 ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), merged )
[3]: org. junit. assert. assertnotnull ( e. getmessage ( ) )
[4]: org. junit. assert. assertequals ( e. getmessage ( ), service. getmessage ( ) )

************

************
tgt: org . junit . assert . assertequals ( baseenumerationtype1 . getvalues ( ) , baseenumerationtype2 . getvalues ( ) )
[0]: org. junit. assert. assertequals ( e. getmessage ( ), service. tostring ( ) )
[1]: org. junit. assert. assertequals ( ""foo"", e. getmessage ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( steekproef. tostring ( ), personeninsteekproef. tostring ( ) )
[4]: org. junit. assert. assertequals ( steekproef. tostring ( ), personeninsteekproef. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( lc_count > key_count ) )
[0]: org. junit. assert. assertequals ( s, personeninsteekproef. tostring ( ) )
[1]: org. junit. assert. assertequals ( taak. tostring ( ), personeninsteekproef. tostring ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, runs. size ( ) )
[4]: org. junit. assert. assertequals ( 1, runs. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( lventryversions . isempty ( ) )
[0]: org. junit. assert. assertequals ( 3, runs. size ( ) )
[1]: . size ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 1, entities. size ( ) )
[4]: org. junit. assert. assertequals ( 5, entities. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( touchview . hasenoughnodes ( ) , org . hamcrest . corematchers . is ( true ) )
[0]: org. junit. assert. assertequals ( 0, entities. size ( ) )
[1]: org. junit. assert. assertequals ( 6, entities. size ( ) )
[2]: org. junit. assert. assertequals ( 10, entities. size ( ) )
[3]: org. junit. assert. assertarrayequals ( tsdata. toarray ( new com. groupon. lex. metrics. timeseries. tsdata [ 0 ] ), fd. toarray ( new com. groupon. lex. metrics. timeseries. timeseriescollection [ 0 ] ) )
[4]: org. junit. assert. assertnotnull ( actual )

************

************
tgt: org . junit . assert . asserttrue ( response . repartitionrequired )
[0]: org. junit. assert. assertnull ( actual )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 1, results. size ( ) )
[3]: org. junit. assert. assertequals ( s, result )
[4]: org. junit. assert. assertequals ( expected, result )

************

************
tgt: org . junit . assert . assertthat ( cb . islightweight ( ) , org . hamcrest . matchers . is ( true ) )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertfalse ( resultado )
[2]: org. junit. assert. assertequals ( true, resultado )
[3]: org. junit. assert. assertequals ( false, resultado )
[4]: org. junit. assert. assertnotnull ( asyncresult. get ( ) )

************

************
tgt: org . junit . assert . assertthat ( exitvalue , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert. assertequals ( java. lang. character. valueof ( 0 ), result )
[1]: org. junit. assert. assertequals ( java. lang. character. valueof ( 1 ), result )
[2]: org. junit. assert. assertequals ( java. lang. character. valueof ( null ), result )
[3]: org. junit. assert. assertequals ( java. lang. character. valueof ( 2 ), result )
[4]: org. junit. assert. assertnull ( result )

************

************
tgt: org . junit . assert . assertfalse ( field . getbit ( i ) )
[0]: org. junit. assert. assertequals ( 1, result )
[1]: org. junit. assert. assertequals ( 1l, result )
[2]: org. junit. assert. assertequals ( 0, result )
[3]: org. junit. assert. assertequals ( 0l, result )
[4]: org. junit. assert. assertequals ( 1l, resultl )

************

************
tgt: org . junit . assert . assertnotnull ( result )
[0]: org. junit. assert. assertarrayequals ( input, output )
[1]: org. junit. assert. assertarrayequals ( output, input )
[2]: org. junit. assert. assertsame ( input, output )
[3]: org. junit. assert. assertequals ( input, output )
[4]: org. junit. assert. assertarrayequals ( input, input )

************

************
tgt: org . junit . assert . assertthat ( errors . getmessages ( ) , empty ( ) )
[0]: org. junit. assert. assertequals ( sampledata, outputdata )
[1]: org. junit. assert. assertnotnull ( outputdata )
[2]: org. junit. assert. assertequals ( samplesdata, outputdata )
[3]: org. junit. assert. assertequals ( testdata, outputdata )
[4]: org. junit. assert. assertequals ( audiodata, outputdata )

************

************
tgt: org . junit . assert . assertnotnull ( client )
[0]: org. junit. assert. assertequals ( 1, com. mitchellbosecke. pebble. macro. testfilter. getcounter ( ) )
[1]: org. junit. assert. assertequals ( 1l, com. mitchellbosecke. pebble. macro. testfilter. getcounter ( ) )
[2]: org. junit. assert. assertequals ( 0, com. mitchellbosecke. pebble. macro. testfilter. getcounter ( ) )
[3]: org. junit. assert. assertequals ( 1, testfilter. getcounter ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( "rick" , mv . getvalue ( ) )
[0]: org. junit. assert. assertequals ( null, objmap. get ( field_privfriendlyurl ) )
[1]: org. junit. assert. assertequals ( field_privfriendlyurl, objmap. get ( objfield_privfriendlyurl ) )
[2]: org. junit. assert. assertequals ( 0, objmap. get ( field_privfriendlyurl ). size ( ) )
[3]: org. junit. assert. assertequals ( field_privgene, objmap. get ( objfield_privfriendlyurl ) )
[4]: org. junit. assert. assertequals ( field_privfriendlyurl, objmap. get ( objfield_privamb ) )

************

************
tgt: org . junit . assert . assertsame ( org . joda . money . testmoney . gbp_2_34 , test )
[0]: org. junit. assert. assertarrayequals ( lines, parsed )
[1]: org. junit. assert. assertarrayequals ( line, parsed )
[2]: , parsed )
[3]: ) )
[4]: )

************

************
tgt: org . junit . assert . assertfalse ( perm . implies ( dummy ) )
[0]: org. junit. assert. assertthat ( escape, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( escaped ) ) )
[1]: org. junit. assert. assertthat ( escape, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( string ) ) )
[2]: org. junit. assert. assertthat ( escape, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( null ) ) )
[3]: org. junit. assert. assertthat ( escape, org. hamcrest. corematchers. is ( org. hamcrest. corematchers. equalto ( escape ) ) )
[4]: org. junit. assert. assertthat ( escape, org. hamcrest. corematchers. is ( name ) )

************

************
tgt: org . junit . assert . asserttrue ( policy . isresponsecacheable ( request , response ) )
[0]: org. junit. assert. assertequals ( 0, totalcount )
[1]: org. junit. assert. assertequals ( 1, totalcount )
[2]: org. junit. assert. assertequals ( 100, totalcount )
[3]: org. junit. assert. assertequals ( zero, totalcount )
[4]: org. junit. assert. assertequals ( 50, totalcount )

************

************
tgt: org . junit . assert . asserttrue ( model . isneedrebuild ( ) )
[0]: org. junit. assert. assertnull ( data )
[1]: org. junit. assert. assertnotnull ( data )
[2]: org. junit. assert. assertnull ( data. size ( ) )
[3]: org. junit. assert. assertnull ( data. isempty ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( references . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, map. tostring ( ) )
[1]: org. junit. assert. assertequals ( 0, map. size ( ) )
[2]: org. junit. assert. assertequals ( 0, map. tostring ( ). length )
[3]: org. junit. assert. assertnull ( map. tostring ( ) )
[4]: org. junit. assert. assertequals ( null, map. tostring ( ) )

************

************
tgt: org . junit . assert . assertthat ( result1 , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertthat ( ddf. security. pdp. realm. xacml. xacmlpdptest. testrealm, org. hamcrest. matchers. is ( true ) )
[1]: org. junit. assert. assertthat ( ddf. security. pdp. realm. xacml. xacmlpdptest. testrealm, org. hamcrest. matchers. is ( false ) )
[2]: org. junit. assert. assertthat ( ddf. security. pdp. realm. xacml. xacmlpdptest. testrealm )
[3]: org. junit. assert. assertthat ( ddf. security. pdp. realm. xacml )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( true )
[0]: org. junit. assert. assertarrayequals ( new byte [ ] { 1, 2, 3 }, result )
[1]: org. junit. assert. asserttrue ( java. util. arrays. equals ( result, b ) )
[2]: org. junit. assert. assertarrayequals ( a, result )
[3]: org. junit. assert. assertarrayequals ( result, b )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( ( reporterfactory instanceof com . hotels . bdp . circustrain . api . metrics . loggingscheduledreporterfactory ) )
[0]: org. junit. assert. assertequals ( 0, contextobject. size ( ) )
[1]: org. junit. assert. assertequals ( null, jedis. get ( ""foooooo ) )
[2]: org. junit. assert. assertnotnull ( jedis. get ( ""foooooo ) )
[3]: org. junit. assert. assertequals ( null, jedis. get ( 0 ) )
[4]: org. junit. assert. assertequals ( null, jedis. get ( orgfoooooo ) )

************

************
tgt: org . junit . assert . assertequals ( path , ".." )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, result. getfailurecount ( ) )
[2]: org. junit. assert. assertequals ( m, testdata. serializeandrecover ( m ) )
[3]: org. junit. assert. assertnotnull ( m. serializeandrecover ( m ) )
[4]: org. junit. assert. assertequals ( m, ( ( java. lang. object ) ( m ) ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , ( 1 + 2 ) )
[0]: ) )
[1]: )
[2]: org. junit. assert. asserttrue ( diff. hasdiff ( ) )
[3]: org. junit. assert. assertequals ( 1, groups. size ( ) )
[4]: org. junit. assert. assertequals ( 0, groups. size ( ) )

************

************
tgt: org . junit . assert . assertsame ( mockenum . c , o )
[0]: org. junit. assert. assertequals ( 2, groups. size ( ) )
[1]: org. junit. assert. assertnotnull ( response )
[2]: org. junit. assert. assertequals ( null, response )
[3]: org. junit. assert. assertnull ( response )
[4]: org. junit. assert. assertequals ( msg, response )

************

************
tgt: org . junit . assert . asserttrue ( job . waitforcompletion ( true ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, size )
[2]: org. junit. assert. assertequals ( 1, ( size - size ) )
[3]: org. junit. assert. assertequals ( 2, size )
[4]: org. junit. assert. assertequals ( 0, size )

************

************
tgt: org . junit . assert . assertequals ( d1 , d2 )
[0]: org. junit. assert. assertequals ( 3, size )
[1]: org. junit. assert. assertequals ( 1, testobject. getdata ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, testobject. getdata ( ). size ( ) )
[3]: org. junit. assert. asserttrue ( com. wdtinc. adapt. jts. mvtencoder. decode ( encoded ). contains ( layer3 ) )
[4]: org. junit. assert. assertequals ( mvt, com. wdtinc. adapt. jts. mvtencoder. decode ( encoded ) )

************

************
tgt: org . junit . assert . assertequals ( 1234 , portletinstance . getuserid ( ) )
[0]: org. junit. assert. asserttrue ( com. wdtinc. filters. jts. mvtencoder. decode ( encoded ). contains ( layer3 ) )
[1]: org. junit. assert. asserttrue ( com. wdtinc. transform. jts. mvtencoder. decode ( encoded ). contains ( layer3 ) )
[2]: org. junit. assert. asserttrue ( com. wdtinc. adapt. jts. mvtencoder. decode ( encoded ). contains ( layer2 ) )
[3]: org. junit. assert. assertequals ( 1, ekeys. size ( ) )
[4]: org. junit. assert. assertequals ( 0, ekeys. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( querymapping . transformoutbounddatabasename ( metastoremapping , query ) , org . hamcrest . corematchers . is ( expected ) )
[0]: org. junit. assert. assertequals ( list ( ), ekeys )
[1]: org. junit. assert. assertequals ( true, ekeys. isempty ( ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( 0, rulesets. size ( ) )
[4]: org. junit. assert. assertequals ( 2, rulesets. size ( ) )

************

************
tgt: org . junit . assert . asserttrue ( logicallyinsert )
[0]: org. junit. assert. assertequals ( 1, rulesets. size ( ) )
[1]: org. junit. assert. assertequals ( 3, rulesets. size ( ) )
[2]: , rulesets )
[3]: org. junit. assert. assertequals ( 1, parameterlist. size ( ) )
[4]: org. junit. assert. assertequals ( 3, parameterlist. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( ls , res )
[0]: org. junit. assert. assertequals ( expected, actual )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( expected ), actual )
[2]: org. junit. assert. assertequals ( java. util. optional. of ( expected ), actual )
[3]: org. junit. assert. assertequals ( expected. getextconfiguration ( ), actual )
[4]: org. junit. assert. assertequals ( result, actual )

************

************
tgt: org . junit . assert . assertfalse ( haserror . get ( ) )
[0]: org. junit. assert. asserttrue ( context. ismatched ( script ) )
[1]: org. junit. assert. asserttrue ( script. ismatched ( context ) )
[2]: org. junit. assert. assertequals ( true, context. ismatched ( script ) )
[3]: org. junit. assert. asserttrue ( java. util. collections. ismatched ( script ) )
[4]: org. junit. assert. asserttrue ( java. util. arrays. ismatched ( context ) )

************

************
tgt: org . junit . assert . assertequals ( downloads , result )
[0]: org. junit. assert. asserttrue ( net. rrm. ehour. util. dateutil. isdatewithinrange ( now, now ) )
[1]: org. junit. assert. asserttrue ( net. rrm. ehour. util. dateutil. isdatewithinrange ( now, period ) )
[2]: org. junit. assert. asserttrue ( net. rrm. ehour. util. dateutil. isdatewithinrange ( now, date ) )
[3]: org. junit. assert. asserttrue ( range. isdatewithinrange ( now, now ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( store1 , store2 )
[0]: org. junit. assert. assertnotnull ( env )
[1]: org. junit. assert. assertnotnull ( environment )
[2]: org. junit. assert. assertnotnull ( en )
[3]: , env )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . corematchers . is ( "failure" ) )
[0]: org. junit. assert. assertequals ( nthreads, failedifnotempty. size ( ) )
[1]: org. junit. assert. assertequals ( nthreads * 2, failedifnotempty. size ( ) )
[2]: org. junit. assert. assertequals ( nthreads * 1, failedifnotempty. size ( ) )
[3]: org. junit. assert. assertequals ( numberthreads, failedifnotempty. size ( ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertthat ( target . parse ( ) , org . hamcrest . corematchers . is ( false ) )
[0]: org. junit. assert. assertequals ( true, isfound )
[1]: org. junit. assert. assertequals ( false, isfound )
[2]: org. junit. assert. assertnotnull ( isfound )
[3]: org. junit. assert. assertnull ( isfound )
[4]: org. junit. assert. assertequals ( null, isfound )

************

************
tgt: org . junit . assert . assertthat ( studies . size ( ) , org . hamcrest . corematchers . is ( 1 ) )
[0]: org. junit. assert. assertequals ( true, quarter. equals ( quarter ) )
[1]: org. junit. assert. assertfalse ( quarter. equals ( quarter ) )
[2]: org. junit. assert. assertnotnull ( element. tostring ( ) )
[3]: org. junit. assert. assertequals ( element. tostring ( ), element. tostring ( ) )
[4]: org. junit. assert. assertequals ( 0, element. tostring ( ). length ( ) )

************

************
tgt: org . junit . assert . assertequals ( e , true )
[0]: org. junit. assert. assertequals ( null, element. tostring ( ) )
[1]: org. junit. assert. assertequals ( java. util. arrays. tostring ( ), element )
[2]: org. junit. assert. assertnotnull ( lastbrand )
[3]: org. junit. assert. assertequals ( lastbrand, lastbrand )
[4]: org. junit. assert. assertequals ( tests. unit. com. microsoft. azure. sdk. iot. deps, lastbrand )

************

************
tgt: org . junit . assert . assertequals ( null , out )
[0]: , lastbrand )
[1]: ) )
[2]: org. junit. assert. assertequals ( 0, voltage, 0.0 )
[3]: org. junit. assert. assertequals ( 0, voltage, 1.0 )
[4]: org. junit. assert. assertequals ( 0, voltage, 0 )

************

************
tgt: org . junit . assert . assertnull ( group . getarrowat ( 0 ) )
[0]: org. junit. assert. assertequals ( null, voltage, 0.0 )
[1]: org. junit. assert. assertthat ( com. spotify. styx. client. googleidtokenauthtest. canacquireidtoken ( keyuri ), org. hamcrest. matchers. is ( true ) )
[2]: org. junit. assert. assertthat ( com. spotify. styx. client. googleidtokenauthtest. canacquireidtoken ( candidatecredentials ), org. hamcrest. matchers. is ( true ) )
[3]: org. junit. assert. assertthat ( com. spotify. styx. client. googleidtokenauthtest. canacquireidtoken ( event ), org. hamcrest. matchers. is ( true ) )
[4]: org. junit. assert. assertthat ( com. spotify. styx. client. googleidtokenauthtest. canacquireidtoken ( msg ), org. hamcrest. matchers. is ( true ) )

************

************
tgt: org . junit . assert . assertequals ( 3 , splitswithrows . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( ""test"", echo. echo ( ""test"" ) )
[2]: org. junit. assert. assertnotnull ( echo. echo ( ""test"" ) )
[3]: org. junit. assert. assertequals ( ""test"", echo. echo ( ""test"" ) )
[4]: org. junit. assert. assertnotnull ( echo. echo ( ) )

************

************
tgt: org . junit . assert . assertequals ( ( ( java . lang . object ) ( 1 ) ) , status . get ( ) )
[0]: org. junit. assert. assertequals ( ""test"", echo. echo ( ) )
[1]: org. junit. assert. assertequals ( 0, response. getdata ( ). size ( ) )
[2]: org. junit. assert. assertthat ( junit. extensions. eclipse. quick. javaelements. istestmethod ( element ), org. hamcrest. corematchers. is ( true ) )
[3]: org. junit. assert. assertequals ( expecting, result )
[4]: org. junit. assert. assertequals ( expecting, java. lang. string. valueof ( r ) )

************

************
tgt: org . junit . assert . assertsame ( activeelement , targetlocator . activeelement ( ) )
[0]: org. junit. assert. assertequals ( expecting, s )
[1]: org. junit. assert. assertequals ( expecting, java. lang. string. valueof ( result ) )
[2]: org. junit. assert. assertequals ( expecting, java. lang. string. valueof ( b ) )
[3]: org. junit. assert. assertnull ( result )
[4]: org. junit. assert. assertequals ( result, null )

************

************
tgt: org . junit . assert . assertarrayequals ( bytes , back )
[0]: org. junit. assert. assertequals ( result, """" )
[1]: org. junit. assert. assertnotnull ( result )
[2]: type ) { result )
[3]: org. junit. assert. assertequals ( true, tested. istimedout ( 10 ) )
[4]: org. junit. assert. assertfalse ( tested. istimedout ( 10 ) )

************

************
tgt: org . junit . assert . assertequals ( client . getdbid ( ) , clientwithlink . getdbid ( ) )
[0]: org. junit. assert. assertequals ( true, tested. istimedout ( 1 ) )
[1]: org. junit. assert. assertequals ( true, tested. istimedout ( 0 ) )
[2]: org. junit. assert. assertfalse ( tested. istimedout ( 1 ) )
[3]: org. junit. assert. assertequals ( now, bounce_long_long ( now ) )
[4]: org. junit. assert. assertequals ( now, testcanconnect. bounce_long_long ( now ) )

************

************
tgt: org . junit . assert . assertfalse ( errors . haserrors ( ) )
[0]: org. junit. assert. assertequals ( now, testcanconnect to bounce_long_long ( now ) )
[1]: org. junit. assert. assertequals ( 1l, bounce_long_long ( now ) )
[2]: org. junit. assert. assertequals ( now, wall. bounce_long_long ( now ) )
[3]: org. junit. assert. asserttrue ( result )
[4]: org. junit. assert. assertequals ( 0, re. getint ( tablename ) )

************

************
tgt: org . junit . assert . assertequals ( installationid , com . amazonaws . mobileconnectors . util . clientcontext . getinstallationid ( activity ) )
[0]: org. junit. assert. assertequals ( 1, re. getint ( tablename ) )
[1]: org. junit. assert. assertequals ( 0, re. getint ( tablename. trim ( ) ) )
[2]: org. junit. assert. assertequals ( 1, re. getint ( tablename. trim ( ) ) )
[3]: org. junit. assert. assertequals ( 2, re. getint ( tablename ) )
[4]: org. junit. assert. assertequals ( 0, doc. getsenses ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "user1" , echovalue )
[0]: org. junit. assert. assertequals ( 1, doc. getsenses ( ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, list. size ( ) )
[2]: org. junit. assert. assertequals ( 1, list. size ( ) )
[3]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) == 0 ) )
[4]: org. junit. assert. asserttrue ( ( ( list. size ( ) ) == 1 ) )

************

************
tgt: org . junit . assert . assertequals ( a . addsynchronization ( null ) , addoutcome . ar_rejected )
[0]: org. junit. assert. assertequals ( 2, list. size ( ) )
[1]: org. junit. assert. assertequals ( 0, unit. parsetpicheader ( context ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, unit. parsetpicheader ( context ). size ( ) )
[3]: org. junit. assert. assertequals ( 0, unit. parsetpicheader ( soapheader ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, unit. parsetpicheader ( soapheader ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 8 , countresolvedgriditems ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 3, result. size ( ) )
[3]: org. junit. assert. assertequals ( 1, count. getwindowing ( ) )
[4]: org. junit. assert. assertequals ( 3, count. getwindowing ( ) )

************

************
tgt: org . junit . assert . assertequals ( people . size ( ) , 0 )
[0]: org. junit. assert. assertequals ( 5, count. getwindowing ( ) )
[1]: org. junit. assert. assertnotnull ( count. getwindowing ( ) )
[2]: org. junit. assert. assertequals ( 1, count. getwindowing ( ). length )
[3]: org. junit. assert. assertequals ( 0, parsecategories ( ( ( java. lang. string [ ] ) ( null ) ) ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, parsecategories ( ( ( java. lang. string [ ] ) ( null ) ) ). size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( result )
[0]: org. junit. assert. assertequals ( 0, parsecategories ( new java. lang. string [ 0 ] ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, parsecategories ( new java. lang. string [ ] { null } ). size ( ) )
[2]: org. junit. assert. assertequals ( 0, parsecategories ( ( ( java. lang. string [ ] ) ( null ) ) ). length )
[3]: org. junit. assert. assertequals ( org. slf4j. migrator. helper. abbreviatortest. fs, r )
[4]: org. junit. assert. assertequals ( org. slf4j. migrator. helper. abbreviatortest. fs )

************

************
tgt: org . junit . assert . assertequals ( 12345 , settings . getowncolor ( ) )
[0]: org. junit. assert. assertequals ( ""foo"", r )
[1]: org. junit. assert. assertequals ( null, r )
[2]: org. junit. assert. assertnotnull ( r )
[3]: org. junit. assert. assertequals ( downloadprotocol. nfs, protocol )
[4]: org. junit. assert. assertequals ( downloadprotocol. nfs )

************

************
tgt: org . junit . assert . assertequals ( "0.0.0.0:6188" , clusterconfig . getpropertyvalue ( "ams-site" , "timeline.metrics.service.webapp.address" ) )
[0]: org. junit. assert. assertequals ( downloadprotocol, protocol )
[1]: org. junit. assert. assertnotnull ( protocol )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( domainidbasedondomainlevel )
[4]: org. junit. assert. assertequals ( new java. lang. long ( 0 ), domainidbasedondomainlevel )

************

************
tgt: org . junit . assert . assertequals ( existingfriendlyurlentry , newfriendlyurlentry )
[0]: org. junit. assert. asserttrue ( groups. isempty ( ) )
[1]: org. junit. assert. assertequals ( 1, lastdatavalues. size ( ) )
[2]: org. junit. assert. assertnotnull ( lastdatavalues )
[3]: org. junit. assert. assertequals ( 1, probes. length )
[4]: org. junit. assert. asserttrue ( probes [ 0 ] )

************

************
tgt: org . junit . assert . asserttrue ( autorisatiebundels . isempty ( ) )
[0]: org. junit. assert. assertequals ( 0, probes. length )
[1]: org. junit. assert. assertnotnull ( probes )
[2]: , probes )
[3]: org. junit. assert. assertnotnull ( failmsg ( null ) )
[4]: org. junit. assert. assertnotnull ( failmsg ( string_1 ) )

************

************
tgt: org . junit . assert . asserttrue ( c2 . hasmoreavailablecapacitythan ( client ) )
[0]: org. junit. assert. assertnotnull ( failmsg ( ""test"" ) )
[1]: org. junit. assert. assertnotnull ( failmsg ( name ) )
[2]: org. junit. assert. assertnotnull ( err )
[3]: org. junit. assert. assertequals ( 1, screensize. length )
[4]: org. junit. assert. assertequals ( 1, screensize. width )

************

************
tgt: org . junit . assert . assertequals ( testvalue , outvalue )
[0]: org. junit. assert. assertnotnull ( screensize )
[1]: org. junit. assert. assertequals ( 1, screensize. size ( )
[2]: )
[3]: org. junit. assert. assertequals ( expected, series. tojson ( item ) )
[4]: org. junit. assert. assertequals ( expected, series. tojson ( series ) )

************

************
tgt: org . junit . assert . assertnotnull ( criteria . getfailuremessage ( ) )
[0]: org. junit. assert. assertequals ( expected, series. tojson ( new java. lang. string ( ) ) )
[1]: org. junit. assert. assertequals ( expected, series. tojson ( null ) )
[2]: ) )
[3]: org. junit. assert. assertequals ( true, host. iscrmstatusok ( ) )
[4]: org. junit. assert. assertequals ( false, host. iscrmstatusok ( ) )

************

************
tgt: org . junit . assert . assertequals ( opscores , result )
[0]: org. junit. assert. assertfalse ( host. iscrmstatusok ( ) )
[1]: org. junit. assert. assertequals ( 1, host. iscrmstatusok ( ) )
[2]: org. junit. assert. assertequals ( 200, response. getstatus ( ) )
[3]: org. junit. assert. assertequals ( 0, response. getstatus ( ) )
[4]: org. junit. assert. assertequals ( response. getstatus ( ), 200 )

************

************
tgt: org . junit . assert . assertequals ( gcd , zippelgcdinz ( a . clone ( ) . multiply ( gcd ) , b . clone ( ) . multiply ( gcd ) ) )
[0]: org. junit. assert. assertequals ( 400, response. getstatus ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( arango, version )
[3]: org. junit. assert. assertthat ( version )
[4]: org. junit. assert. assertthat ( version. getversion ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , count )
[0]: org. junit. assert. assertnotnull ( version )
[1]: ) )
[2]: org. junit. assert. assertequals ( serializer, resolvedtransformer )
[3]: org. junit. assert. assertequals ( null, resolvedtransformer )
[4]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( ), resolvedtransformer )

************

************
tgt: org . junit . assert . assertequals ( ( j ++ ) , ( ( long ) ( itr . next ( ) ) ) )
[0]: org. junit. assert. assertequals ( now, resolvedtransformer )
[1]: org. junit. assert. assertequals ( com. google. common. collect. lists. newarraylist ( transformer ), resolvedtransformer )
[2]: org. junit. assert. assertnotnull ( person. getage ( ondate. gettime ( ) ) )
[3]: org. junit. assert. assertequals ( person. getage ( ondate ), 3 )
[4]: org. junit. assert. assertnotnull ( person. getage ( ondate ) )

************

************
tgt: org . junit . assert . assertnotnull ( blurconfig )
[0]: org. junit. assert. assertequals ( person, person. getage ( ondate ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( 1, response. getresponsecode ( ) )
[3]: org. junit. assert. assertequals ( encs, 1 )
[4]: org. junit. assert. assertequals ( encs, 0 )

************

************
tgt: org . junit . assert . assertequals ( new java . lang . integer ( 1 ) , value )
[0]: org. junit. assert. assertequals ( encs, s )
[1]: org. junit. assert. assertequals ( encs )
[2]: ) )
[3]: org. junit. assert. assertnotnull ( dbobject )
[4]: org. junit. assert. assertequals ( 1, dbobject. size ( ) )

************

************
tgt: org . junit . assert . assertthat ( resourcecreatepermission . tostring ( ) , org . hamcrest . corematchers . is ( systempermissionname ) )
[0]: org. junit. assert. assertthat ( dbobject, is ( 1 ) )
[1]: ) )
[2]: )
[3]: org. junit. assert. assertequals ( s, expected )
[4]: org. junit. assert. assertequals ( expected, s )

************

************
tgt: org . junit . assert . assertnotnull ( union )
[0]: org. junit. assert. assertequals ( result, expected )
[1]: sample s )
[2]: ) )
[3]: org. junit. assert. assertequals ( z1, z0 )
[4]: org. junit. assert. assertfalse ( resource. isannotatedwith ( null ) )

************

************
tgt: org . junit . assert . asserttrue ( result )
[0]: org. junit. assert. assertfalse ( resource. isannotatedwith ( ""foo"" ) )
[1]: org. junit. assert. assertfalse ( resource. isannotatedwith ( ""foo"" ) )
[2]: org. junit. assert. assertfalse ( resource. isannotatedwith ( string ) )
[3]: org. junit. assert. assertfalse ( resource. isannotatedwith ( ""foo"" ) )
[4]: org. junit. assert. asserttrue ( session. isincomplete ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . cloudera . csd . tools . impala . impalametrictypes . statisticalmetrictype . values ( ) . length , metrics . size ( ) )
[0]: org. junit. assert. assertequals ( true, session. isincomplete ( ) )
[1]: org. junit. assert. assertfalse ( session. isincomplete ( ) )
[2]: org. junit. assert. assertequals ( false, session. isincomplete ( ) )
[3]: ) )
[4]: org. junit. assert. assertnull ( animationmonitor. istriggered ( ) )

************

************
tgt: org . junit . assert . asserttrue ( false )
[0]: org. junit. assert. assertfalse ( animationmonitor. istriggered ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), converter. extractpatterns ( null ) )
[2]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), util. extractpatterns ( null ) )
[3]: org. junit. assert. assertequals ( 0, subject. extractpatterns ( null ). size ( ) )
[4]: org. junit. assert. assertequals ( 0, service. extractpatterns ( null ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( com . google . auth . appengine . appenginecredentialstest . expected_account , credentials . getaccount ( ) )
[0]: org. junit. assert. assertequals ( 0, parser. extractpatterns ( null ). size ( ) )
[1]: org. junit. assert. assertequals ( 0, locomotive. getexitcode ( ) )
[2]: org. junit. assert. assertequals ( 1, locomotive. getexitcode ( ) )
[3]: org. junit. assert. assertequals ( 0l, locomotive. getexitcode ( ) )
[4]: org. junit. assert. assertequals ( null, locomotive. getexitcode ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( result . length ( ) ) > 0 ) )
[0]: org. junit. assert. assertequals ( 0, locomotive. getexitcode ( ) ) )
[1]: org. junit. assert. assertequals ( 0, comparator. getremoved ( ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, comparator. getremoved ( ). size ( ) )
[3]: org. junit. assert. assertequals ( null, comparator. getremoved ( ) )
[4]: org. junit. assert. asserttrue ( comparator. getremoved ( ). isempty ( ) )

************

************
tgt: org . junit . assert . asserttrue ( expecteduri . equals ( result . tostring ( ) ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( updatevalidateutil. max_length_lang, domain. getlang ( ) )
[2]: org. junit. assert. assertequals ( 1, domain. getlang ( ). size ( ) )
[3]: org. junit. assert. assertequals ( new java. lang. long ( 1 ), domain. getlang ( ) )
[4]: org. junit. assert. assertequals ( new java. lang. string ( stringmaxlength ), domain. getlang ( ) )

************

************
tgt: org . junit . assert . asserttrue ( segmentsexperiences . isempty ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( testclass )
[2]: org. junit. assert. assertequals ( 1, testclass. size ( ) )
[3]: org. junit. assert. assertequals ( 1, testclass. count ( ) )
[4]: org. junit. assert. assertequals ( 1, testclass. getvalue ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( nestedaggregation )
[0]: org. junit. assert. assertequals ( 1, testclass. top ( ) )
[1]: org. junit. assert. assertequals ( expected, f )
[2]: org. junit. assert. assertequals ( 1, f. size ( ) )
[3]: org. junit. assert. assertequals ( result, f )
[4]: org. junit. assert. assertequals ( expected, f. tostring ( ) )

************

************
tgt: org . junit . assert . assertnull ( org . springframework . security . core . context . securitycontextholder . getcontext ( ) . getauthentication ( ) )
[0]: org. junit. assert. assertequals ( 1, f. getid ( ) )
[1]: org. junit. assert. assertequals ( 1, 1 )
[2]: org. junit. assert. assertnotnull ( collection )
[3]: org. junit. assert. assertnotnull ( s )
[4]: org. junit. assert. assertnotnull ( queue )

************

************
tgt: org . junit . assert . assertequals ( item1 , item2 )
[0]: type ) { }
[1]: org. junit. assert. assertequals ( client, managed. getclient ( ) )
[2]: org. junit. assert. assertequals ( visibility, user. getsnetvisibility ( ) )
[3]: org. junit. assert. assertnotnull ( user. getsnetvisibility ( ) )
[4]: org. junit. assert. assertequals ( visible, user. getsnetvisibility ( ) )

************

************
tgt: org . junit . assert . assertequals ( 5 , locations . size ( ) )
[0]: org. junit. assert. assertequals ( visibility, user. returnsnetvisibility ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( snode )
[3]: org. junit. assert. assertequals ( snode, snode )
[4]: org. junit. assert. assertequals ( snode, statement )

************

************
tgt: org . junit . assert . assertfalse ( actual . execute ( ) )
[0]: org. junit. assert. assertnotnull ( s node )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( file. getlocalpath ( ) )
[3]: org. junit. assert. assertequals ( 1, file. getlocalpath ( ) )
[4]: org. junit. assert. assertequals ( 1, file. getlocalpath ( ). length )

************

************
tgt: org . junit . assert . assertequals ( result . tostring ( ) , expected . tostring ( ) )
[0]: org. junit. assert. assertnull ( file. getlocalpath ( ) )
[1]: org. junit. assert. assertequals ( 0, file. getlocalpath ( ). length )
[2]: org. junit. assert. assertequals ( sum, same )
[3]: org. junit. assert. assertequals ( 1, same. sum ( 1 ) )
[4]: org. junit. assert. assertequals ( 0, same. sum ( 1 ) )

************

************
tgt: org . junit . assert . assertequals ( this . classundertest ( ) , result )
[0]: org. junit. assert. assertequals ( 1, same. sum ( 0 ) )
[1]: org. junit. assert. assertequals ( 1, same. sum ( 2 ) )
[2]: org. junit. assert. assertequals ( 0, instance. getredisinstanceinfo ( ). ismaster ( ) )
[3]: org. junit. assert. assertequals ( 1, instance. getredisinstanceinfo ( ). ismaster ( ) )
[4]: org. junit. assert. assertnotnull ( instance. getredisinstanceinfo ( ). ismaster ( ) )

************

************
tgt: org . junit . assert . asserttrue ( aredependencytypesdetected ( fromclass , toclass , typestofind , false ) )
[0]: org. junit. assert. assertequals ( null, instance. getredisinstanceinfo ( ). ismaster ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( true, p. test ( null ) )
[3]: org. junit. assert. assertequals ( true, p. test ( 1 ) )
[4]: org. junit. assert. assertequals ( false, p. test ( null ) )

************

************
tgt: org . junit . assert . assertnotnull ( com . intellij . util . environmentutil . getenvironmentmap ( ) )
[0]: org. junit. assert. assertequals ( 1, p. test ( null ) )
[1]: org. junit. assert. assertequals ( true, p. test ( null ) ) ;
[2]: org. junit. assert. assertthat ( writer. tostring ( ), org. hamcrest. corematchers. is ( probe ) )
[3]: org. junit. assert. assertthat ( writer. tostring ( ), org. hamcrest. corematchers. equalto ( probe ) )
[4]: org. junit. assert. assertequals ( probe, writer. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( valuetype , com . rapleaf . jack . store . valuetype . findbyvalue ( valuetype . value ) )
[0]: org. junit. assert. assertnotnull ( writer. tostring ( ) )
[1]: ) )
[2]: org. junit. assert. assertnotnull ( list )
[3]: org. junit. assert. assertequals ( 1, list. size ( ) )
[4]: org. junit. assert. assertequals ( 0, list. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , received . size ( ) )
[0]: org. junit. assert. assertequals ( true, list. isempty ( ) )
[1]: ) )
[2]: org. junit. assert. assertarrayequals ( paths, expected )
[3]: org. junit. assert. assertequals ( java. util. arrays. aslist ( expected ), paths )
[4]: org. junit. assert. assertequals ( paths, expected )

************

************
tgt: org . junit . assert . assertnull ( proc . process ( record ) )
[0]: org. junit. assert. assertarrayequals ( expected, paths )
[1]: org. junit. assert. assertarrayequals ( paths, expected, paths )
[2]: org. junit. assert. assertthat ( writer. tostring ( ), org. hamcrest. corematchers. is ( """" ) )
[3]: org. junit. assert. assertthat ( writer. tostring ( ), org. hamcrest. corematchers. is ( 0 ) )
[4]: org. junit. assert. assertnotnull ( writer. tostring ( ) )

************

************
tgt: org . junit . assert . assertsame ( this . manager , this . adapter . getsessionmanager ( ) )
[0]: org. junit. assert. assertequals ( 0, writer. tostring ( ). length ( ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( null, results )
[3]: org. junit. assert.null ( patient )
[4]: org. junit. assert. null, patient )

************

************
tgt: org . junit . assert . assertequals ( expectedquery , actualquery )
[0]: null, patient )
[1]: null ) )
[2]: null )
[3]: org. junit. assert. assertequals ( java. lang. double. valueof ( 1 ), result )
[4]: org. junit. assert. assertequals ( java. lang. string. valueof ( 1 ), result )

************

************
tgt: org . junit . assert . assertthat ( config . getregion ( ) , is ( "testnewregion" ) )
[0]: org. junit. assert. assertequals ( java. lang. double. valueof ( 3 ), result )
[1]: org. junit. assert. assertequals ( result, java. lang. string. valueof ( 1.0 ) )
[2]: org. junit. assert. assertequals ( result, 1.0 )
[3]: org. junit. assert. assertequals ( p. readstring ( ), readstring )
[4]: org. junit. assert. assertequals ( p, readstring )

************

************
tgt: org . junit . assert . assertequals ( expected , list )
[0]: org. junit. assert. assertequals ( expected, p )
[1]: org. junit. assert. assertequals ( p. matches ( ), readstring )
[2]: org. junit. assert. assertequals ( p. gettext ( ), readstring )
[3]: org. junit. assert. assertthat ( vc. computechangetype ( ). get ( ), org. hamcrest. core. is. is ( semanticversion ) )
[4]: org. junit. assert. assertthat ( vc. computechangetype ( ). get ( ), org. hamcrest. core. is. is ( semanticversion. changetype ) )

************

************
tgt: org . junit . assert . assertnull ( billingrecord )
[0]: org. junit. assert. assertthat ( vc. computechangetype ( ). get ( ), org. hamcrest. core. is. is ( semanticversion + 1 ) )
[1]: org. junit. assert. assertthat ( vc. computechangetype ( ). size ( ), org. hamcrest. core. is. is ( 1 ) )
[2]: org. junit. assert. assertthat ( vc. computechangetype ( ). get ( ), org. hamcrest. core. is. is ( semanticversionnumber ) )
[3]: org. junit. assert. asserttrue ( state. accept ( state ) )
[4]: org. junit. assert. asserttrue ( handler. accept ( state ) )

************

************
tgt: org . junit . assert . assertthat ( results , is ( new java . lang . string [ ] [ ] { new java . lang . string [ ] { "a" , "b" , "c" } } ) )
[0]: org. junit. assert. assertthat ( command. accept ( state ), is ( true ) )
[1]: org. junit. assert. assertthat ( command. accept ( state ), is ( false ) )
[2]: test if there is a
[3]: org. junit. assert. assertequals ( out. get ( ), java. lang. math. log ( ( 1234567890 + delta ) ), 0.0 )
[4]: org. junit. assert. assertequals ( out. get ( ). get ( ), java. lang. math. log ( ( 1234567890 + delta ) ), 0.0 )

************

************
tgt: org . junit . assert . assertequals ( memberattribute , result )
[0]: org. junit. assert. assertequals ( out. get ( ), java. lang. math. log ( ( 1234567890 / 1.23456789e9 ) ), 0.0 )
[1]: org. junit. assert. assertequals ( out. get ( ). get ( ), ( 1.0 / 1.23456789e9 ), 0.0 )
[2]: org. junit. assert. assertequals ( out. get ( ). get ( ), java. lang. math. log ( ( 1234567890 + delta ), 0.0 )
[3]: org. junit. assert. assertnotnull ( """", upgraderequest )
[4]: org. junit. assert. assertnotnull ( upgraderequest )

************

************
tgt: org . junit . assert . assertequals ( expected , resultnat )
[0]: org. junit. assert. assertnotnull ( ""1"", upgraderequest )
[1]: org. junit. assert. assertnotnull ( """", upgraderequest )
[2]: org. junit. assert. assertnotnull ( ""test"" )
[3]: org. junit. assert. assertarrayequals ( expected, command )
[4]: org. junit. assert. assertnotnull ( bean )

************

************
tgt: org . junit . assert . assertnull ( defn )
[0]: org. junit. assert. assertequals ( null, bean. values )
[1]: org. junit. assert. assertequals ( null, bean. value )
[2]: org. junit. assert. assertequals (foo, bean. value )
[3]: ) )
[4]: org. junit. assert. assertnotnull ( result )

************

************
tgt: org . junit . assert . asserttrue ( ( ( normalize . size ( ) ) == 0 ) )
[0]: org. junit. assert. assertnotnull ( tuple. get ( com. querydsl. jpa. abstractjpatest. cat. breed ) )
[1]: org. junit. assert. assertnotnull ( tuple. get ( com. querydsl. jpa. abstractjpatest. cat. breed. stringvalue ( ) ) )
[2]: org. junit. assert. assertequals ( tuple. get ( com. querydsl. jpa. abstractjpatest. cat. breed ), tuple. tostring ( ) )
[3]: org. junit. assert. assertnotnull ( tuple. get ( com. querydsl. jpa. abstractjpatest. cat. breed ). tostring ( ) )
[4]: org. junit. assert. assertequals ( tuple. get ( com. querydsl. jpa. abstractjpatest. cat. breed ), tuple. get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( item1 . compareto ( item2 ) ) == 0 ) )
[0]: org. junit. assert. assertnotnull ( cp. get ( ) )
[1]: org. junit. assert. assertequals ( c, cp. get ( ) )
[2]: org. junit. assert. assertequals ( null, cp. get ( ) )
[3]: org. junit. assert. assertequals ( 1, cp. get ( ). length )
[4]: get ( ) )

************

************
tgt: org . junit . assert . asserttrue ( finished [ 0 ] )
[0]: org. junit. assert. assertthat ( result ( ), org. hamcrest. matchers. is ( expectedresult ) )
[1]: org. junit. assert. assertthat ( result ( ), org. hamcrest. matchers. is ( java. util. optional. of ( expectedresult ) ) )
[2]: org. junit. assert. assertequals ( expectedresult, result ( ) )
[3]: org. junit. assert. assertthat ( result ( ), is ( expectedresult ) )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( false , result )
[0]: org. junit. assert. assertfalse ( com. github. sarxos. webcam. ds. ipcam. ipcamdeviceregistry. isregistered ( null ) )
[1]: org. junit. assert. assertfalse ( com. github. sarxos. webcam. ds. ipcam. ipcamdeviceregistry. isregistered ( java. net. uri. class ) )
[2]: org. junit. assert. assertfalse ( com. github. sarxos. webcam. ds. ipcam. ipcamdeviceregistry. isregistered ( test ) )
[3]: org. junit. assert. assertfalse ( com. github. sarxos. webcam. ds. ipcam. ipcamdeviceregistry. isregistered ( java. net. uri. create ( ) ) )
[4]: ) )

************

************
tgt: org . junit . assert . asserttrue ( success )
[0]: org. junit. assert. assertequals ( value, branch. lookup ( name, true ) )
[1]: org. junit. assert. assertequals ( value, branch. lookup ( name, false ) )
[2]: org. junit. assert. asserttrue ( exists ( p ) )
[3]: org. junit. assert. asserttrue ( p. exists ( null ) )
[4]: org. junit. assert. asserttrue ( p. exists ( ) )

************

************
tgt: org . junit . assert . assertequals ( sql , sql2 )
[0]: org. junit. assert. asserttrue ( p. exists ( p. name ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( i, confirmation. getlistversion ( ) )
[3]: org. junit. assert. assertequals ( i, confirmation. getlistversion ( ). get ( ) )
[4]: org. junit. assert. assertequals ( i, confirmation. getlistversion ( ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( str , ( ( java . lang . string ) ( value ) ) )
[0]: _2 ) )
[1]: ) )
[2]: org. junit. assert. assertequals ( persistence3, result )
[3]: org. junit. assert. assertequals ( persistence2, result )
[4]: org. junit. assert. asserttrue ( undefinedstepstracker. hasundefinedsteps ( ) )

************

************
tgt: org . junit . assert . assertequals ( "execution<sp>finished" , bean . simpletestmethod ( ) )
[0]: org. junit. assert. assertequals ( true, undefinedstepstracker. hasundefinedsteps ( ) )
[1]: org. junit. assert. assertnotnull ( contentencodingheader )
[2]: org. junit. assert. assertequals ( contentencodingheader, res )
[3]: org. junit. assert. assertequals ( contentencodingheader, tmp )
[4]: org. junit. assert. assertequals ( contentencodingheader, null )

************

************
tgt: org . junit . assert . assertequals ( expectedvalue , result )
[0]: ) )
[1]: org. junit. assert. asserttrue ( reader. isnull ( ) )
[2]: org. junit. assert. assertfalse ( reader. isnull ( ) )
[3]: org. junit. assert. assertequals ( false, reader. isnull ( ) )
[4]: org. junit. assert. assertthat ( reader. isnull ( ), is ( false ) )

************

************
tgt: org . junit . assert . assertfalse ( instance . isbuilding ( event ) )
[0]: org. junit. assert. assertthat ( reader. isnull ( ), is ( true ) )
[1]: org. junit. assert. assertequals ( expected, new java. util. hashset ( path ) )
[2]: org. junit. assert. assertequals ( expected, java. util. arrays. aslist ( path ) )
[3]: org. junit. assert. assertequals ( expected, path )
[4]: org. junit. assert. assertequals ( expected, list )

************

************
tgt: org . junit . assert . assertequals ( 1 , mostfrequentterms . size ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( multiget1duplicate, multiget1duplicate )
[2]: org. junit. assert. assertnotnull ( multiget1duplicate )
[3]: org. junit. assert. assertequals ( 0, multimap. keyset ( ). size ( ) )
[4]: org. junit. assert. assertequals ( null, multimap. keyset ( ) )

************

************
tgt: org . junit . assert . assertequals ( "test2" , buf . tostring ( ) )
[0]: org. junit. assert. assertequals ( 1, multimap. keyset ( ). size ( ) )
[1]: org. junit. assert. assertequals ( java. util. collections. emptylist ( ), multimap )
[2]: org. junit. assert. assertequals ( 0, multimap. keyset ( ). length )
[3]: org. junit. assert. assertnotnull ( ri. getname ( ) )
[4]: org. junit. assert. assertequals ( 1, testmap. size ( ) )

************

************
tgt: org . junit . assert . assertfalse ( opennlp . tools . ml . trainerfactory . isvalid ( mlparams ) )
[0]: org. junit. assert. assertnotnull ( testmap )
[1]: org. junit. assert. assertequals ( 0, testmap. size ( ) )
[2]: ) )
[3]: )
[4]: org. junit. assert. assertequals ( 1, repository. getexperiments ( com. intuit. wasabi. repository. cassandra. impl. cassandrapagesrepositorytest. application_name, pagename ). size ( ) )

************

************
tgt: org . junit . assert . assertequals ( "" , decryption )
[0]: org. junit. assert. assertequals ( 1, repository. getexperiments ( com. intuit. wasabi. repository. cassandra. impl. cassandtaagesrepositorytest. application_name, pagename ). size ( ) )
[1]: org. junit. assert. assertequals ( 1, repository. getexperiments ( com. intuit. wasabi. repository. cassandra. impl. cassandraagesrepositorytest. application_name, pagename ). size ( ) )
[2]: org. junit. assert. assertequals ( 1, repository. getexperiments ( com. intuit. wasabi. repository. cassandra. impl. cassandftagesrepositorytest. application_name, pagename ). size ( ) )
[3]: org. junit. assert. assertequals ( 1, repository. getexperiments ( com. intuit. wasabi. repository. cassandra. impl. cassandapeagesrepositorytest. application_name, pagename ). size ( ) )
[4]: org. junit. assert. assertequals ( findmodule, findmodule )

************

************
tgt: org . junit . assert . assertnull ( loginmodule . getsecurityprovider ( ) )
[0]: org. junit. assert. assertequals ( findermodule, findmodule )
[1]: org. junit. assert. assertnotnull ( findmodule )
[2]: org. junit. assert. assertequals ( null, findmodule )
[3]: org. junit. assert. assertequals ( findmodule, findconfig )
[4]: org. junit. assert. assertnotnull ( headervalue )

************

************
tgt: org . junit . assert . assertequals ( 0 , berichten . size ( ) )
[0]: org. junit. assert.null ( headervalue )
[1]: org. junit. assert. null, headervalue )
[2]: , headervalue )
[3]: ) )
[4]: org. junit. assert. assertequals ( expecting )

************

************
tgt: org . junit . assert . assertequals ( completable , undertest . doeventuallycollect ( callables , consumer , supplier , 10 ) )
[0]: java. util. arrays. aslist ( expecting ) )
[1]: org. junit. assertequals ( expecting, result )
[2]: assertequals assertequals expecting, result )
[3]: result ) )
[4]: org. junit. assert. assertequals ( simplified, simplified )

************

************
tgt: org . junit . assert . assertsame ( mockchildwebelement , child )
[0]: org. junit. assert. assertequals ( simplified, string )
[1]: org. junit. assert. assertequals ( simplified, fromjson )
[2]: org. junit. assert. assertequals ( simplified, simple )
[3]: org. junit. assert. assertequals ( simplified, s )
[4]: org. junit. assert. assertequals ( term, suggestions )

************

************
tgt: org . junit . assert . assertnull ( existingkaleoaction )
[0]: org. junit. assert. assertequals ( term, suggestions. size ( ) )
[1]: org. junit. assert. assertequals ( 1, suggestions. size ( ) )
[2]: org. junit. assert. assertequals ( terms, suggestions )
[3]: org. junit. assert. assertequals ( 0, suggestions. size ( ) )
[4]: org. junit. assert. assertequals ( start, v )

************

************
tgt: org . junit . assert . assertthat ( taken . size ( ) , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert. assertequals ( 1, v )
[1]: org. junit. assert. assertequals ( 0, v )
[2]: org. junit. assert. assertequals ( i, v )
[3]: ) )
[4]: org. junit. assert. assertequals ( input, escaped )

************

************
tgt: org . junit . assert . assertnotnull ( temptopic )
[0]: org. junit. assert. assertnotnull ( escaped )
[1]: org. junit. assert. assertnull ( escaped )
[2]: org. junit. assert. assertequals ( input, escaping )
[3]: org. junit. assert. assertequals ( input, escaped )
[4]: org. junit. assert. assertequals ( shardid. getid ( ), shardid. getid ( ) )

************

************
tgt: org . junit . assert . assertarrayequals ( actual , expected )
[0]: org. junit. assert. assertequals ( shardid_1. getid ( ), shardid. getid ( ) )
[1]: org. junit. assert. assertnotnull ( shardid. getid ( ) )
[2]: org. junit. assert. assertequals ( shardid. getid ( ), shardid_0. getid ( ) )
[3]: org. junit. assert. assertequals ( shardid. getid ( ), shardid_1. getid ( ) )
[4]: org. junit. assert. assertfalse ( jsonparamopt1. equals ( jsonparamopt2 ) )

************

************
tgt: org . junit . assert . assertequals ( 0.0 , singletest , 0 )
[0]: org. junit. assert. asserttrue ( jsonparamopt1. equals ( jsonparamopt2 ) )
[1]: org. junit. assert. assertfalse ( jsonparamopt0. equals ( jsonparamopt2 ) )
[2]: org. junit. assert. assertfalse ( jsonparamopt2. equals ( jsonparamopt2 ) )
[3]: org. junit. assert. assertfalse ( jsonparamopt1. equals ( jsonparamopt2 ) )
[4]: org. junit. assert. assertnotnull ( dummyresource. getsourcepath ( ) )

************

************
tgt: org . junit . assert . assertthat ( taken . size ( ) , org . hamcrest . corematchers . is ( 0 ) )
[0]: org. junit. assert. assertnull ( dummyresource. getsourcepath ( ) )
[1]: org. junit. assert. assertnotnull ( dummyresource )
[2]: org. junit. assert. assertnull ( dummyresource )
[3]: ) )
[4]: org. junit. assert. assertequals ( expectedresults, data )

************

************
tgt: org . junit . assert . assertnotnull ( type )
[0]: org. junit. assert. assertequals ( expectedresults, exactresults )
[1]: org. junit. assert. assertequals ( expectedresults, actualresults )
[2]: org. junit. assert. assertequals ( expectedresults, result )
[3]: org. junit. assert. assertequals ( expectedresults, processedresults )
[4]: org. junit. assert. assertequals ( e, response. getresult ( ) )

************

************
tgt: org . junit . assert . assertequals ( dim . getnumbatchelements ( ) , 2 )
[0]: org. junit. assert. assertnull ( response. getresult ( ) )
[1]: org. junit. assert. assertequals ( result, response. getresult ( ) )
[2]: org. junit. assert. assertequals ( e, response )
[3]: org. junit. assert. assertthat ( response. getresult ( ), contains ( e ) )
[4]: org. junit. assert. assertequals ( true, canchange )

************

************
tgt: org . junit . assert . assertthat ( exitcode , org . hamcrest . matchers . equalto ( 0 ) )
[0]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. passedvalidation ( ) )
[1]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. getmessage ( ) )
[2]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. getid ( ) )
[3]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. content ( ) )
[4]: org. junit. assert. assertequals ( resultmessage ( result, org. openstack. atlas. api. mgmt. validation. validators. post ), result. result ( ) )

************

************
tgt: org . junit . assert . assertequals ( 0 , overtreders . size ( ) )
[0]: org. junit. assert. assertequals ( 1, mergedrecords. size ( ) )
[1]: org. junit. assert. assertequals ( c [ i ], c [ ( i + 1 ) ] )
[2]: org. junit. assert. assertequals ( c [ i ], c [ i ] )
[3]: org. junit. assert. assertarrayequals ( c, b [ i ] )
[4]: org. junit. assert. assertequals ( c [ i ], b [ i ] )

************

************
tgt: org . junit . assert . assertnotnull ( entity . getid ( ) )
[0]: org. junit. assert. assertequals ( c [ i ], c [ ( i - 1 ) ] )
[1]: org. junit. assert. assertequals ( 1, duration )
[2]: org. junit. assert. assertequals ( 1l, duration )
[3]: org. junit. assert. assertequals ( 0, duration )
[4]: org. junit. assert. assertequals ( 0l, duration )

************

************
tgt: org . junit . assert . asserttrue ( max . equals ( answer ) )
[0]: org. junit. assert. assertequals ( 1l, duration, 0 )
[1]: org. junit. assert. assertequals ( java. util. arrays. aslist ( testdata ), tomap ( scanner ) )
[2]: org. junit. assert. assertnotnull ( wrappingconfiguration. getkeys ( ) )
[3]: org. junit. assert. assertequals ( 5, wrappingconfiguration. getkeys ( ). size ( ) )
[4]: org. junit. assert. assertequals ( 1, wrappingconfiguration. getkeys ( ). size ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( org . nmdp . ngs . align . gappenalties . builder ( ) )
[0]: org. junit. assert. asserttrue ( wrappingconfiguration. getkeys ( ). isempty ( ) )
[1]: org. junit. assert. assertnotnull ( collectionids. getconfigurationid ( ) )
[2]: org. junit. assert. assertequals ( uniquecollectionname, collectionids. getconfigurationid ( ) )
[3]: org. junit. assert. assertnotnull ( collectionids )
[4]: org. junit. assert. assertequals ( collection. getconfigurationid ( ), uniquecollectionname )

************

************
tgt: org . junit . assert . asserttrue ( processended ( ) )
[0]: ) )
[1]: org. junit. assert. assertnotnull ( actuelerecord )
[2]: org. junit. assert. assertnotnull ( actuelerecord. getactieverval ( ) )
[3]: org. junit. assert. assertnull ( actuelerecord )
[4]: org. junit. assert. assertequals ( 1, actuelerecord )

************

************
tgt: org . junit . assert . assertequals ( 16 , i )
[0]: ) )
[1]: org. junit. assert. assertequals ( r, c )
[2]: org. junit. assert. assertarrayequals ( r. toarray ( ), c. toarray ( ) )
[3]: org. junit. assert. assertarrayequals ( r. toarray ( ), a. toarray ( ) )
[4]: org. junit. assert. assertequals ( new java. util. arraylist ( ), c )

************

************
tgt: org . junit . assert . assertequals ( java . time . localdate . now ( ) . getdayofmonth ( ) , test . getvalue ( ) )
[0]: org. junit. assert. assertequals ( r, a )
[1]: org. junit. assert. asserttrue ( ( ( output. contains ( quote ) ) == 0 ) )
[2]: org. junit. assert. asserttrue ( ( ( output. length ( ) ) == 0 ) )
[3]: org. junit. assert. asserttrue ( ( ( output. equals ( quote ) ) == 0 ) )
[4]: org. junit. assert. asserttrue ( ( output == 0 ) )

************

************
tgt: org . junit . assert . assertequals ( testutil . http_test_proxy , result . get ( 0 ) )
[0]: org. junit. assert. assertnull ( output )
[1]: org. junit. assert. assertequals ( nl. bzk. migratiebrp. conversie. model. brp. attribuut. brppartijcodetest. partij_code, brppartijcode. tostring ( ) )
[2]: org. junit. assert. assertnotnull ( brppartijcode. tostring ( ) )
[3]: org. junit. assert. assertequals ( nl. bzk. migratiebrp. conversie. model. brp. attribuut. brppartijcodetest. partij_code, brppartijcode. tostring ( ). trim ( ) )
[4]: org. junit. assert. assertequals ( nl. bzk. migratiebrp. conversie. model. brp. attribuut. brppartijcodetest. partij_code. tostring ( ), brppartijcode. tostring ( ) )

************

************
tgt: org . junit . assert . assertequals ( walkformat , new java . lang . string ( expand ) )
[0]: org. junit. assert. assertequals ( nl. bzk. migratiebrp. conversie. model. brp. attribuut. brppartijcodetest. partij_code, brppartijcode. tostring ( ). tostring ( ) )
[1]: org. junit. assert. assertequals ( 0, actualelements. size ( ) )
[2]: org. junit. assert. assertequals ( 1, actualelements. size ( ) )
[3]: org. junit. assert. assertnotnull ( actualelements )
[4]: ) )

************

************
tgt: org . junit . assert . assertequals ( expectedchange , updatedchange )
[0]: )
[1]: org. junit. assert. assertequals ( 0, ping. getrawcode ( ) )
[2]: org. junit. assert. assertequals ( 0l, ping. getrawcode ( ) )
[3]: org. junit. assert. assertequals ( 0, ping. getrawcode ( ), 0 )
[4]: org. junit. assert. assertequals ( 1, ping. getrawcode ( ) )

************

************
tgt: org . junit . assert . assertnotnull ( info )
[0]: org. junit. assert. assertnull ( ping. getrawcode ( ) )
[1]: org. junit. assert. assertnotnull ( root. getparent ( ) )
[2]: org. junit. assert. assertnotnull ( context. getparent ( ) )
[3]: org. junit. assert. assertnull ( root. getparent ( ) )
[4]: org. junit. assert. assertequals ( null, root. getparent ( ) )

************

************
tgt: org . junit . assert . assertthat ( result . url , is ( new java . net . url ( "https://springsource.org" ) ) )
[0]: org. junit. assert. assertnotnull ( container. getparent ( ) )
[1]: org. junit. assert. assertequals ( com. vincit. go. task. slack. executor. taskslackdestinationtest. webhook_url, destination. getwebhookurl ( ) )
[2]: org. junit. assert. assertequals ( com. vincit. go. task. slack. executor. taskslackdestinationtest. webhook_url, dest. getwebhookurl ( ) )
[3]: org. junit. assert. assertequals ( com. vincit. go. task. slack/ executor. taskslackdestinationtest. webhook_url, destination. getwebhookurl ( ) )
[4]: org. junit. assert. assertequals ( com. vincit. go. task. slack. executor. taskslackdestinationtest. webhook_url, source. getwebhookurl ( ) )

************

************
tgt: org . junit . assert . asserttrue ( ( ( java . lang . boolean ) ( result ) ) )
[0]: org. junit. assert. assertequals ( com. vincit. go. tasks. executor. taskslackdestinationtest. webhook_url, destination. getwebhookurl ( ) )
[1]: org. junit. assert. assertequals ( idrel, rel )
[2]: org. junit. assert. assertequals ( idrel, rel. getid ( ) )
[3]: org. junit. assert. assertequals ( idrel, rel. id ( ) )
[4]: org. junit. assert. assertequals ( result, rel )

************

************
tgt: org . junit . assert . assertequals ( 4 , cruise . associations . mentory . maximumnumberofstudents ( ) )
[0]: idrel ) )
[1]: org. junit. assert. assertequals ( 1, logheader )
[2]: org. junit. assert. assertequals ( 0, logheader )
[3]: org. junit. assert. assertequals ( 1l, logheader )
[4]: org. junit. assert. assertequals ( java. util. arrays. aslist ( 3 ), logheader )

************

************
tgt: org . junit . assert . assertthat ( result , org . hamcrest . matchers . is ( true ) )
[0]: org. junit. assert. assertequals ( true, clicked )
[1]: org. junit. assert. assertthat ( violations. isempty ( ), is ( true ) )
[2]: org. junit. assert. assertequals ( true, violations. isempty ( ) )
[3]: org. junit. assert. assertthat ( violations. isempty ( ), is ( false ) )
[4]: org. junit. assert. assertequals ( 1, violations. isempty ( ) )

************

************
tgt: org . junit . assert . assertfalse ( attributes . isnew ( ) )
[0]: org. junit. assert. asserttrue ( violations. isempty ( ) )
[1]: org. junit. assert. assertnotnull ( name )
[2]: org. junit. assert. assertequals ( value, name )
[3]: org. junit. assert. asserttrue ( name. isempty ( ) )
[4]: org. junit. assert. assertnull ( name )

************

************
tgt: org . junit . assert . assertfalse ( response . iscommitted ( ) )
[0]: ) )
[1]: org. junit. assert. assertequals ( expectedresp, response )
[2]: org. junit. assert. assertequals ( ident expectedresp, response )
[3]: org. junit. assert. assertequals ( resultresp, response )
[4]: org. junit. assert. assertequals ( expresp, response )

************

************
tgt: org . junit . assert . assertthat ( c . value , org . hamcrest . corematchers . is ( "aaa" ) )
[0]: org. junit. assert. assertequals ( expectedresp, response ) for )
[1]: org. junit. assert. assertequals ( 1, result. size ( ) )
[2]: org. junit. assert. assertequals ( 0, result. size ( ) )
[3]: org. junit. assert. assertequals ( 1, result. size ( ) )
[4]: org. junit. assert. assertequals ( 3, result. size ( ) )

************

************
tgt: org . junit . assert . assertequals ( expectedinstallation , cache . locatebrowserinstallation ( "abrowser" , null , null ) )
[0]: org. junit. assert. assertequals ( 1, results. size ( ) )

************
